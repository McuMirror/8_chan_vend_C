

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Jan 15 14:20:35 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAMh,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	nvCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   104                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   105                           	dabs	1,0x3,1,_chanlink1
   106                           	dabs	1,0xA,1,_chanlink8
   107                           	dabs	1,0x9,1,_chanlink7
   108                           	dabs	1,0x8,1,_chanlink6
   109                           	dabs	1,0x7,1,_chanlink5
   110                           	dabs	1,0x6,1,_chanlink4
   111                           	dabs	1,0x5,1,_chanlink3
   112                           	dabs	1,0x4,1,_chanlink2
   113  0000                     
   114                           ; Version 1.44
   115                           ; Generated 14/09/2017 GMT
   116                           ; 
   117                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC18F47K40 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     
   149                           	psect	idataCOMRAMh
   150  011A80                     __pidataCOMRAMh:
   151                           	opt stack 0
   152                           
   153                           ;initializer for _notenum
   154  011A80  FF                 	db	255
   155                           
   156                           	psect	mediumconst
   157  00FCE2                     __pmediumconst:
   158                           	opt stack 0
   159  00FCE2  00                 	db	0
   160  00FCE3                     _credclr:
   161                           	opt stack 0
   162  00FCE3  50                 	db	80
   163  00FCE4  75                 	db	117
   164  00FCE5  73                 	db	115
   165  00FCE6  68                 	db	104
   166  00FCE7  20                 	db	32
   167  00FCE8  62                 	db	98
   168  00FCE9  75                 	db	117
   169  00FCEA  74                 	db	116
   170  00FCEB  74                 	db	116
   171  00FCEC  6F                 	db	111
   172  00FCED  6E                 	db	110
   173  00FCEE  20                 	db	32
   174  00FCEF  31                 	db	49
   175  00FCF0  20                 	db	32
   176  00FCF1  74                 	db	116
   177  00FCF2  6F                 	db	111
   178  00FCF3  20                 	db	32
   179  00FCF4  63                 	db	99
   180  00FCF5  6C                 	db	108
   181  00FCF6  65                 	db	101
   182  00FCF7  61                 	db	97
   183  00FCF8  72                 	db	114
   184  00FCF9  20                 	db	32
   185  00FCFA  63                 	db	99
   186  00FCFB  72                 	db	114
   187  00FCFC  65                 	db	101
   188  00FCFD  64                 	db	100
   189  00FCFE  69                 	db	105
   190  00FCFF  74                 	db	116
   191  00FD00  73                 	db	115
   192  00FD01  20                 	db	32
   193  00FD02  20                 	db	32
   194  00FD03  20                 	db	32
   195  00FD04  61                 	db	97
   196  00FD05  6E                 	db	110
   197  00FD06  64                 	db	100
   198  00FD07  20                 	db	32
   199  00FD08  65                 	db	101
   200  00FD09  78                 	db	120
   201  00FD0A  69                 	db	105
   202  00FD0B  74                 	db	116
   203  00FD0C  00                 	db	0
   204  00FD0D                     __end_of_credclr:
   205                           	opt stack 0
   206  00FD0D                     _vendtest:
   207                           	opt stack 0
   208  00FD0D  20                 	db	32
   209  00FD0E  50                 	db	80
   210  00FD0F  75                 	db	117
   211  00FD10  73                 	db	115
   212  00FD11  68                 	db	104
   213  00FD12  20                 	db	32
   214  00FD13  62                 	db	98
   215  00FD14  75                 	db	117
   216  00FD15  74                 	db	116
   217  00FD16  74                 	db	116
   218  00FD17  6F                 	db	111
   219  00FD18  6E                 	db	110
   220  00FD19  20                 	db	32
   221  00FD1A  74                 	db	116
   222  00FD1B  6F                 	db	111
   223  00FD1C  20                 	db	32
   224  00FD1D  20                 	db	32
   225  00FD1E  20                 	db	32
   226  00FD1F  20                 	db	32
   227  00FD20  20                 	db	32
   228  00FD21  76                 	db	118
   229  00FD22  65                 	db	101
   230  00FD23  6E                 	db	110
   231  00FD24  64                 	db	100
   232  00FD25  00                 	db	0
   233  00FD26                     __end_of_vendtest:
   234                           	opt stack 0
   235  00FD26                     _priceexit:
   236                           	opt stack 0
   237  00FD26  50                 	db	80
   238  00FD27  72                 	db	114
   239  00FD28  65                 	db	101
   240  00FD29  73                 	db	115
   241  00FD2A  73                 	db	115
   242  00FD2B  20                 	db	32
   243  00FD2C  73                 	db	115
   244  00FD2D  65                 	db	101
   245  00FD2E  72                 	db	114
   246  00FD2F  76                 	db	118
   247  00FD30  69                 	db	105
   248  00FD31  63                 	db	99
   249  00FD32  65                 	db	101
   250  00FD33  20                 	db	32
   251  00FD34  74                 	db	116
   252  00FD35  6F                 	db	111
   253  00FD36  20                 	db	32
   254  00FD37  65                 	db	101
   255  00FD38  78                 	db	120
   256  00FD39  69                 	db	105
   257  00FD3A  74                 	db	116
   258  00FD3B  00                 	db	0
   259  00FD3C                     __end_of_priceexit:
   260                           	opt stack 0
   261  00FD3C                     _nochange:
   262                           	opt stack 0
   263  00FD3C  4E                 	db	78
   264  00FD3D  6F                 	db	111
   265  00FD3E  20                 	db	32
   266  00FD3F  43                 	db	67
   267  00FD40  68                 	db	104
   268  00FD41  61                 	db	97
   269  00FD42  6E                 	db	110
   270  00FD43  67                 	db	103
   271  00FD44  65                 	db	101
   272  00FD45  20                 	db	32
   273  00FD46  47                 	db	71
   274  00FD47  69                 	db	105
   275  00FD48  76                 	db	118
   276  00FD49  65                 	db	101
   277  00FD4A  6E                 	db	110
   278  00FD4B  00                 	db	0
   279  00FD4C                     __end_of_nochange:
   280                           	opt stack 0
   281  00FD4C                     _senset:
   282                           	opt stack 0
   283  00FD4C  20                 	db	32
   284  00FD4D  20                 	db	32
   285  00FD4E  53                 	db	83
   286  00FD4F  65                 	db	101
   287  00FD50  74                 	db	116
   288  00FD51  75                 	db	117
   289  00FD52  70                 	db	112
   290  00FD53  20                 	db	32
   291  00FD54  53                 	db	83
   292  00FD55  65                 	db	101
   293  00FD56  6E                 	db	110
   294  00FD57  73                 	db	115
   295  00FD58  6F                 	db	111
   296  00FD59  72                 	db	114
   297  00FD5A  00                 	db	0
   298  00FD5B                     __end_of_senset:
   299                           	opt stack 0
   300  00FD5B                     _notetest:
   301                           	opt stack 0
   302  00FD5B  20                 	db	32
   303  00FD5C  20                 	db	32
   304  00FD5D  49                 	db	73
   305  00FD5E  6E                 	db	110
   306  00FD5F  73                 	db	115
   307  00FD60  65                 	db	101
   308  00FD61  72                 	db	114
   309  00FD62  74                 	db	116
   310  00FD63  20                 	db	32
   311  00FD64  4E                 	db	78
   312  00FD65  6F                 	db	111
   313  00FD66  74                 	db	116
   314  00FD67  65                 	db	101
   315  00FD68  00                 	db	0
   316  00FD69                     __end_of_notetest:
   317                           	opt stack 0
   318  00FD69                     _auditmsg:
   319                           	opt stack 0
   320  00FD69  20                 	db	32
   321  00FD6A  20                 	db	32
   322  00FD6B  41                 	db	65
   323  00FD6C  75                 	db	117
   324  00FD6D  64                 	db	100
   325  00FD6E  69                 	db	105
   326  00FD6F  74                 	db	116
   327  00FD70  20                 	db	32
   328  00FD71  4D                 	db	77
   329  00FD72  6F                 	db	111
   330  00FD73  64                 	db	100
   331  00FD74  65                 	db	101
   332  00FD75  00                 	db	0
   333  00FD76                     __end_of_auditmsg:
   334                           	opt stack 0
   335  00FD76                     _pricemsg:
   336                           	opt stack 0
   337  00FD76  50                 	db	80
   338  00FD77  72                 	db	114
   339  00FD78  69                 	db	105
   340  00FD79  63                 	db	99
   341  00FD7A  65                 	db	101
   342  00FD7B  20                 	db	32
   343  00FD7C  52                 	db	82
   344  00FD7D  00                 	db	0
   345  00FD7E                     __end_of_pricemsg:
   346                           	opt stack 0
   347  00FD7E                     _exit:
   348                           	opt stack 0
   349  00FD7E  45                 	db	69
   350  00FD7F  78                 	db	120
   351  00FD80  69                 	db	105
   352  00FD81  74                 	db	116
   353  00FD82  00                 	db	0
   354  00FD83                     __end_of_exit:
   355                           	opt stack 0
   356  00FD83                     _hoperror:
   357                           	opt stack 0
   358  00FD83  002D               	dw	45
   359  00FD85                     __end_of_hoperror:
   360                           	opt stack 0
   361  00FD85                     _chan8time:
   362                           	opt stack 0
   363  00FD85  002C               	dw	44
   364  00FD87                     __end_of_chan8time:
   365                           	opt stack 0
   366  00FD87                     _chan7time:
   367                           	opt stack 0
   368  00FD87  002B               	dw	43
   369  00FD89                     __end_of_chan7time:
   370                           	opt stack 0
   371  00FD89                     _chan6time:
   372                           	opt stack 0
   373  00FD89  002A               	dw	42
   374  00FD8B                     __end_of_chan6time:
   375                           	opt stack 0
   376  00FD8B                     _chan5time:
   377                           	opt stack 0
   378  00FD8B  0029               	dw	41
   379  00FD8D                     __end_of_chan5time:
   380                           	opt stack 0
   381  00FD8D                     _chan4time:
   382                           	opt stack 0
   383  00FD8D  0028               	dw	40
   384  00FD8F                     __end_of_chan4time:
   385                           	opt stack 0
   386  00FD8F                     _chan3time:
   387                           	opt stack 0
   388  00FD8F  0027               	dw	39
   389  00FD91                     __end_of_chan3time:
   390                           	opt stack 0
   391  00FD91                     _chan2time:
   392                           	opt stack 0
   393  00FD91  0026               	dw	38
   394  00FD93                     __end_of_chan2time:
   395                           	opt stack 0
   396  00FD93                     _chan1time:
   397                           	opt stack 0
   398  00FD93  0025               	dw	37
   399  00FD95                     __end_of_chan1time:
   400                           	opt stack 0
   401  00FD95                     _chan8linkbits:
   402                           	opt stack 0
   403  00FD95  0024               	dw	36
   404  00FD97                     __end_of_chan8linkbits:
   405                           	opt stack 0
   406  00FD97                     _chan7linkbits:
   407                           	opt stack 0
   408  00FD97  0023               	dw	35
   409  00FD99                     __end_of_chan7linkbits:
   410                           	opt stack 0
   411  00FD99                     _chan6linkbits:
   412                           	opt stack 0
   413  00FD99  0022               	dw	34
   414  00FD9B                     __end_of_chan6linkbits:
   415                           	opt stack 0
   416  00FD9B                     _chan5linkbits:
   417                           	opt stack 0
   418  00FD9B  0021               	dw	33
   419  00FD9D                     __end_of_chan5linkbits:
   420                           	opt stack 0
   421  00FD9D                     _chan4linkbits:
   422                           	opt stack 0
   423  00FD9D  0020               	dw	32
   424  00FD9F                     __end_of_chan4linkbits:
   425                           	opt stack 0
   426  00FD9F                     _chan3linkbits:
   427                           	opt stack 0
   428  00FD9F  001F               	dw	31
   429  00FDA1                     __end_of_chan3linkbits:
   430                           	opt stack 0
   431  00FDA1                     _chan2linkbits:
   432                           	opt stack 0
   433  00FDA1  001E               	dw	30
   434  00FDA3                     __end_of_chan2linkbits:
   435                           	opt stack 0
   436  00FDA3                     _chan1linkbits:
   437                           	opt stack 0
   438  00FDA3  001D               	dw	29
   439  00FDA5                     __end_of_chan1linkbits:
   440                           	opt stack 0
   441  00FDA5                     _hopcoin:
   442                           	opt stack 0
   443  00FDA5  001C               	dw	28
   444  00FDA7                     __end_of_hopcoin:
   445                           	opt stack 0
   446  00FDA7                     _cashoutv:
   447                           	opt stack 0
   448  00FDA7  001A               	dw	26
   449  00FDA9                     __end_of_cashoutv:
   450                           	opt stack 0
   451  00FDA9                     _sensval:
   452                           	opt stack 0
   453  00FDA9  0019               	dw	25
   454  00FDAB                     __end_of_sensval:
   455                           	opt stack 0
   456  00FDAB                     _notebits:
   457                           	opt stack 0
   458  00FDAB  0018               	dw	24
   459  00FDAD                     __end_of_notebits:
   460                           	opt stack 0
   461  00FDAD                     _venderrors:
   462                           	opt stack 0
   463  00FDAD  0017               	dw	23
   464  00FDAF                     __end_of_venderrors:
   465                           	opt stack 0
   466  00FDAF                     _pricestore:
   467                           	opt stack 0
   468  00FDAF  000F               	dw	15
   469  00FDB1                     __end_of_pricestore:
   470                           	opt stack 0
   471  00FDB1                     _vendstore:
   472                           	opt stack 0
   473  00FDB1  0007               	dw	7
   474  00FDB3                     __end_of_vendstore:
   475                           	opt stack 0
   476  00FDB3                     _cashint:
   477                           	opt stack 0
   478  00FDB3  0004               	dw	4
   479  00FDB5                     __end_of_cashint:
   480                           	opt stack 0
   481  00FDB5                     _cashinv:
   482                           	opt stack 0
   483  00FDB5  0002               	dw	2
   484  00FDB7                     __end_of_cashinv:
   485                           	opt stack 0
   486  00FDB7                     _credmem:
   487                           	opt stack 0
   488  00FDB7  0000               	dw	0
   489  00FDB9                     __end_of_credmem:
   490                           	opt stack 0
   491  00FDB9                     _secondadd:
   492                           	opt stack 0
   493  00FDB9  1E46               	dw	7750
   494  00FDBB                     __end_of_secondadd:
   495                           	opt stack 0
   496  00FDBB                     _second1:
   497                           	opt stack 0
   498  00FDBB  E1BA               	dw	57786
   499  00FDBD                     __end_of_second1:
   500                           	opt stack 0
   501  00FDBD                     _cc_poll:
   502                           	opt stack 0
   503  00FDBD  FE                 	db	254
   504  00FDBE                     __end_of_cc_poll:
   505                           	opt stack 0
   506  00FDBE                     _cc_adpoll:
   507                           	opt stack 0
   508  00FDBE  FD                 	db	253
   509  00FDBF                     __end_of_cc_adpoll:
   510                           	opt stack 0
   511  00FDBF                     _cc_serial:
   512                           	opt stack 0
   513  00FDBF  F2                 	db	242
   514  00FDC0                     __end_of_cc_serial:
   515                           	opt stack 0
   516  00FDC0                     _cc_newpin:
   517                           	opt stack 0
   518  00FDC0  DB                 	db	219
   519  00FDC1                     __end_of_cc_newpin:
   520                           	opt stack 0
   521  00FDC1                     _cc_pin:
   522                           	opt stack 0
   523  00FDC1  DA                 	db	218
   524  00FDC2                     __end_of_cc_pin:
   525                           	opt stack 0
   526  00FDC2                     _cc_level:
   527                           	opt stack 0
   528  00FDC2  EC                 	db	236
   529  00FDC3                     __end_of_cc_level:
   530                           	opt stack 0
   531  00FDC3                     _cc_stop:
   532                           	opt stack 0
   533  00FDC3  AC                 	db	172
   534  00FDC4                     __end_of_cc_stop:
   535                           	opt stack 0
   536  00FDC4                     _cc_countrq:
   537                           	opt stack 0
   538  00FDC4  A8                 	db	168
   539  00FDC5                     __end_of_cc_countrq:
   540                           	opt stack 0
   541  00FDC5                     _cc_pay:
   542                           	opt stack 0
   543  00FDC5  A7                 	db	167
   544  00FDC6                     __end_of_cc_pay:
   545                           	opt stack 0
   546  00FDC6                     _cc_status:
   547                           	opt stack 0
   548  00FDC6  A6                 	db	166
   549  00FDC7                     __end_of_cc_status:
   550                           	opt stack 0
   551  00FDC7                     _cc_enable:
   552                           	opt stack 0
   553  00FDC7  A4                 	db	164
   554  00FDC8                     __end_of_cc_enable:
   555                           	opt stack 0
   556  00FDC8                     _cc_test:
   557                           	opt stack 0
   558  00FDC8  A3                 	db	163
   559  00FDC9                     __end_of_cc_test:
   560                           	opt stack 0
   561  00FDC9                     _cc_reset:
   562                           	opt stack 0
   563  00FDC9  01                 	db	1
   564  00FDCA                     __end_of_cc_reset:
   565                           	opt stack 0
   566  00FDCA                     _mastadd:
   567                           	opt stack 0
   568  00FDCA  01                 	db	1
   569  00FDCB                     __end_of_mastadd:
   570                           	opt stack 0
   571  00FDCB                     _hopadd:
   572                           	opt stack 0
   573  00FDCB  03                 	db	3
   574  00FDCC                     __end_of_hopadd:
   575                           	opt stack 0
   576  00FDCC                     _theft_attempt:
   577                           	opt stack 0
   578  00FDCC  0C                 	db	12
   579  00FDCD                     __end_of_theft_attempt:
   580                           	opt stack 0
   581  00FDCD                     _note_rejected:
   582                           	opt stack 0
   583  00FDCD  0B                 	db	11
   584  00FDCE                     __end_of_note_rejected:
   585                           	opt stack 0
   586  00FDCE                     _invalid_escrow:
   587                           	opt stack 0
   588  00FDCE  0A                 	db	10
   589  00FDCF                     __end_of_invalid_escrow:
   590                           	opt stack 0
   591  00FDCF                     _acept_disabled:
   592                           	opt stack 0
   593  00FDCF  09                 	db	9
   594  00FDD0                     __end_of_acept_disabled:
   595                           	opt stack 0
   596  00FDD0                     _cashbox_err:
   597                           	opt stack 0
   598  00FDD0  08                 	db	8
   599  00FDD1                     __end_of_cashbox_err:
   600                           	opt stack 0
   601  00FDD1                     _note_removed:
   602                           	opt stack 0
   603  00FDD1  07                 	db	7
   604  00FDD2                     __end_of_note_removed:
   605                           	opt stack 0
   606  00FDD2                     _just_reset:
   607                           	opt stack 0
   608  00FDD2  06                 	db	6
   609  00FDD3                     __end_of_just_reset:
   610                           	opt stack 0
   611  00FDD3                     _jammed_err:
   612                           	opt stack 0
   613  00FDD3  05                 	db	5
   614  00FDD4                     __end_of_jammed_err:
   615                           	opt stack 0
   616  00FDD4                     _rom_error:
   617                           	opt stack 0
   618  00FDD4  04                 	db	4
   619  00FDD5                     __end_of_rom_error:
   620                           	opt stack 0
   621  00FDD5                     _just_busy:
   622                           	opt stack 0
   623  00FDD5  03                 	db	3
   624  00FDD6                     __end_of_just_busy:
   625                           	opt stack 0
   626  00FDD6                     _sens_error:
   627                           	opt stack 0
   628  00FDD6  02                 	db	2
   629  00FDD7                     __end_of_sens_error:
   630                           	opt stack 0
   631  00FDD7                     _motr_error:
   632                           	opt stack 0
   633  00FDD7  01                 	db	1
   634  00FDD8                     __end_of_motr_error:
   635                           	opt stack 0
   636  00FDD8                     _note_features:
   637                           	opt stack 0
   638  00FDD8  33                 	db	51
   639  00FDD9                     __end_of_note_features:
   640                           	opt stack 0
   641  00FDD9                     _note_stacker:
   642                           	opt stack 0
   643  00FDD9  36                 	db	54
   644  00FDDA                     __end_of_note_stacker:
   645                           	opt stack 0
   646  00FDDA                     _note_escrow:
   647                           	opt stack 0
   648  00FDDA  35                 	db	53
   649  00FDDB                     __end_of_note_escrow:
   650                           	opt stack 0
   651  00FDDB                     _note_type:
   652                           	opt stack 0
   653  00FDDB  34                 	db	52
   654  00FDDC                     __end_of_note_type:
   655                           	opt stack 0
   656  00FDDC                     _note_poll:
   657                           	opt stack 0
   658  00FDDC  33                 	db	51
   659  00FDDD                     __end_of_note_poll:
   660                           	opt stack 0
   661  00FDDD                     _note_security:
   662                           	opt stack 0
   663  00FDDD  32                 	db	50
   664  00FDDE                     __end_of_note_security:
   665                           	opt stack 0
   666  00FDDE                     _note_setup:
   667                           	opt stack 0
   668  00FDDE  31                 	db	49
   669  00FDDF                     __end_of_note_setup:
   670                           	opt stack 0
   671  00FDDF                     _note_reset:
   672                           	opt stack 0
   673  00FDDF  30                 	db	48
   674  00FDE0                     __end_of_note_reset:
   675                           	opt stack 0
   676  00FDE0                     _line4:
   677                           	opt stack 0
   678  00FDE0  54                 	db	84
   679  00FDE1                     __end_of_line4:
   680                           	opt stack 0
   681  00FDE1                     _line3:
   682                           	opt stack 0
   683  00FDE1  14                 	db	20
   684  00FDE2                     __end_of_line3:
   685                           	opt stack 0
   686  00FDE2                     _line2:
   687                           	opt stack 0
   688  00FDE2  40                 	db	64
   689  00FDE3                     __end_of_line2:
   690                           	opt stack 0
   691  00FDE3                     _line1:
   692                           	opt stack 0
   693  00FDE3  00                 	db	0
   694  00FDE4                     __end_of_line1:
   695                           	opt stack 0
   696  00FDE4                     _dispsl:
   697                           	opt stack 0
   698  00FDE4  18                 	db	24
   699  00FDE5                     __end_of_dispsl:
   700                           	opt stack 0
   701  00FDE5                     _dispsr:
   702                           	opt stack 0
   703  00FDE5  1B                 	db	27
   704  00FDE6                     __end_of_dispsr:
   705                           	opt stack 0
   706  00FDE6                     _dispoff:
   707                           	opt stack 0
   708  00FDE6  08                 	db	8
   709  00FDE7                     __end_of_dispoff:
   710                           	opt stack 0
   711  00FDE7                     _dispshleft:
   712                           	opt stack 0
   713  00FDE7  07                 	db	7
   714  00FDE8                     __end_of_dispshleft:
   715                           	opt stack 0
   716  00FDE8                     _dispshright:
   717                           	opt stack 0
   718  00FDE8  05                 	db	5
   719  00FDE9                     __end_of_dispshright:
   720                           	opt stack 0
   721  00FDE9                     _dispcursor:
   722                           	opt stack 0
   723  00FDE9  04                 	db	4
   724  00FDEA                     __end_of_dispcursor:
   725                           	opt stack 0
   726  00FDEA                     _dispnormal:
   727                           	opt stack 0
   728  00FDEA  06                 	db	6
   729  00FDEB                     __end_of_dispnormal:
   730                           	opt stack 0
   731  00FDEB                     _dsphome:
   732                           	opt stack 0
   733  00FDEB  02                 	db	2
   734  00FDEC                     __end_of_dsphome:
   735                           	opt stack 0
   736  00FDEC                     _dispaddr:
   737                           	opt stack 0
   738  00FDEC  A8                 	db	168
   739  00FDED                     __end_of_dispaddr:
   740                           	opt stack 0
   741  00FDED                     _dispclr:
   742                           	opt stack 0
   743  00FDED  01                 	db	1
   744  00FDEE                     __end_of_dispclr:
   745                           	opt stack 0
   746  00FDEE                     _dispon:
   747                           	opt stack 0
   748  00FDEE  0C                 	db	12
   749  00FDEF                     __end_of_dispon:
   750                           	opt stack 0
   751  00FDEF                     _dispfunc3:
   752                           	opt stack 0
   753  00FDEF  2C                 	db	44
   754  00FDF0                     __end_of_dispfunc3:
   755                           	opt stack 0
   756  00FDF0                     _dispfunc2:
   757                           	opt stack 0
   758  00FDF0  28                 	db	40
   759  00FDF1                     __end_of_dispfunc2:
   760                           	opt stack 0
   761  00FDF1                     _dispfunc1:
   762                           	opt stack 0
   763  00FDF1  24                 	db	36
   764  00FDF2                     __end_of_dispfunc1:
   765                           	opt stack 0
   766  00FDF2                     _setnotes:
   767                           	opt stack 0
   768  00FDF2  45                 	db	69
   769  00FDF3  6E                 	db	110
   770  00FDF4  61                 	db	97
   771  00FDF5  62                 	db	98
   772  00FDF6  6C                 	db	108
   773  00FDF7  65                 	db	101
   774  00FDF8  20                 	db	32
   775  00FDF9  2F                 	db	47
   776  00FDFA  20                 	db	32
   777  00FDFB  44                 	db	68
   778  00FDFC  69                 	db	105
   779  00FDFD  73                 	db	115
   780  00FDFE  61                 	db	97
   781  00FDFF  62                 	db	98
   782  00FE00  6C                 	db	108
   783  00FE01  65                 	db	101
   784  00FE02  20                 	db	32
   785  00FE03  20                 	db	32
   786  00FE04  20                 	db	32
   787  00FE05  20                 	db	32
   788  00FE06  31                 	db	49
   789  00FE07  20                 	db	32
   790  00FE08  3D                 	db	61
   791  00FE09  20                 	db	32
   792  00FE0A  52                 	db	82
   793  00FE0B  31                 	db	49
   794  00FE0C  30                 	db	48
   795  00FE0D  2C                 	db	44
   796  00FE0E  20                 	db	32
   797  00FE0F  32                 	db	50
   798  00FE10  20                 	db	32
   799  00FE11  3D                 	db	61
   800  00FE12  20                 	db	32
   801  00FE13  52                 	db	82
   802  00FE14  32                 	db	50
   803  00FE15  30                 	db	48
   804  00FE16  20                 	db	32
   805  00FE17  20                 	db	32
   806  00FE18  20                 	db	32
   807  00FE19  20                 	db	32
   808  00FE1A  33                 	db	51
   809  00FE1B  20                 	db	32
   810  00FE1C  3D                 	db	61
   811  00FE1D  20                 	db	32
   812  00FE1E  52                 	db	82
   813  00FE1F  35                 	db	53
   814  00FE20  30                 	db	48
   815  00FE21  2C                 	db	44
   816  00FE22  20                 	db	32
   817  00FE23  34                 	db	52
   818  00FE24  20                 	db	32
   819  00FE25  3D                 	db	61
   820  00FE26  20                 	db	32
   821  00FE27  52                 	db	82
   822  00FE28  31                 	db	49
   823  00FE29  30                 	db	48
   824  00FE2A  30                 	db	48
   825  00FE2B  20                 	db	32
   826  00FE2C  20                 	db	32
   827  00FE2D  20                 	db	32
   828  00FE2E  35                 	db	53
   829  00FE2F  20                 	db	32
   830  00FE30  3D                 	db	61
   831  00FE31  20                 	db	32
   832  00FE32  52                 	db	82
   833  00FE33  32                 	db	50
   834  00FE34  30                 	db	48
   835  00FE35  30                 	db	48
   836  00FE36  00                 	db	0
   837  00FE37                     __end_of_setnotes:
   838                           	opt stack 0
   839  00FE37                     _servmsg:
   840                           	opt stack 0
   841  00FE37  31                 	db	49
   842  00FE38  20                 	db	32
   843  00FE39  3D                 	db	61
   844  00FE3A  20                 	db	32
   845  00FE3B  41                 	db	65
   846  00FE3C  75                 	db	117
   847  00FE3D  64                 	db	100
   848  00FE3E  69                 	db	105
   849  00FE3F  74                 	db	116
   850  00FE40  20                 	db	32
   851  00FE41  32                 	db	50
   852  00FE42  20                 	db	32
   853  00FE43  3D                 	db	61
   854  00FE44  20                 	db	32
   855  00FE45  53                 	db	83
   856  00FE46  65                 	db	101
   857  00FE47  6E                 	db	110
   858  00FE48  73                 	db	115
   859  00FE49  6F                 	db	111
   860  00FE4A  72                 	db	114
   861  00FE4B  33                 	db	51
   862  00FE4C  3D                 	db	61
   863  00FE4D  48                 	db	72
   864  00FE4E  6F                 	db	111
   865  00FE4F  70                 	db	112
   866  00FE50  2D                 	db	45
   867  00FE51  43                 	db	67
   868  00FE52  6F                 	db	111
   869  00FE53  69                 	db	105
   870  00FE54  6E                 	db	110
   871  00FE55  20                 	db	32
   872  00FE56  34                 	db	52
   873  00FE57  3D                 	db	61
   874  00FE58  4E                 	db	78
   875  00FE59  6F                 	db	111
   876  00FE5A  74                 	db	116
   877  00FE5B  65                 	db	101
   878  00FE5C  2D                 	db	45
   879  00FE5D  65                 	db	101
   880  00FE5E  6E                 	db	110
   881  00FE5F  35                 	db	53
   882  00FE60  3D                 	db	61
   883  00FE61  43                 	db	67
   884  00FE62  72                 	db	114
   885  00FE63  65                 	db	101
   886  00FE64  64                 	db	100
   887  00FE65  2D                 	db	45
   888  00FE66  63                 	db	99
   889  00FE67  6C                 	db	108
   890  00FE68  72                 	db	114
   891  00FE69  20                 	db	32
   892  00FE6A  36                 	db	54
   893  00FE6B  3D                 	db	61
   894  00FE6C  50                 	db	80
   895  00FE6D  72                 	db	114
   896  00FE6E  69                 	db	105
   897  00FE6F  63                 	db	99
   898  00FE70  65                 	db	101
   899  00FE71  73                 	db	115
   900  00FE72  20                 	db	32
   901  00FE73  38                 	db	56
   902  00FE74  3D                 	db	61
   903  00FE75  45                 	db	69
   904  00FE76  78                 	db	120
   905  00FE77  69                 	db	105
   906  00FE78  74                 	db	116
   907  00FE79  00                 	db	0
   908  00FE7A                     __end_of_servmsg:
   909                           	opt stack 0
   910  00FE7A                     _pricesetm2:
   911                           	opt stack 0
   912  00FE7A  50                 	db	80
   913  00FE7B  72                 	db	114
   914  00FE7C  65                 	db	101
   915  00FE7D  73                 	db	115
   916  00FE7E  73                 	db	115
   917  00FE7F  20                 	db	32
   918  00FE80  63                 	db	99
   919  00FE81  68                 	db	104
   920  00FE82  61                 	db	97
   921  00FE83  6E                 	db	110
   922  00FE84  6E                 	db	110
   923  00FE85  65                 	db	101
   924  00FE86  6C                 	db	108
   925  00FE87  20                 	db	32
   926  00FE88  62                 	db	98
   927  00FE89  75                 	db	117
   928  00FE8A  74                 	db	116
   929  00FE8B  74                 	db	116
   930  00FE8C  6F                 	db	111
   931  00FE8D  6E                 	db	110
   932  00FE8E  20                 	db	32
   933  00FE8F  20                 	db	32
   934  00FE90  20                 	db	32
   935  00FE91  20                 	db	32
   936  00FE92  74                 	db	116
   937  00FE93  6F                 	db	111
   938  00FE94  20                 	db	32
   939  00FE95  73                 	db	115
   940  00FE96  65                 	db	101
   941  00FE97  74                 	db	116
   942  00FE98  20                 	db	32
   943  00FE99  70                 	db	112
   944  00FE9A  72                 	db	114
   945  00FE9B  69                 	db	105
   946  00FE9C  63                 	db	99
   947  00FE9D  65                 	db	101
   948  00FE9E  20                 	db	32
   949  00FE9F  20                 	db	32
   950  00FEA0  20                 	db	32
   951  00FEA1  20                 	db	32
   952  00FEA2  20                 	db	32
   953  00FEA3  20                 	db	32
   954  00FEA4  53                 	db	83
   955  00FEA5  65                 	db	101
   956  00FEA6  72                 	db	114
   957  00FEA7  76                 	db	118
   958  00FEA8  69                 	db	105
   959  00FEA9  63                 	db	99
   960  00FEAA  65                 	db	101
   961  00FEAB  20                 	db	32
   962  00FEAC  3D                 	db	61
   963  00FEAD  20                 	db	32
   964  00FEAE  45                 	db	69
   965  00FEAF  78                 	db	120
   966  00FEB0  69                 	db	105
   967  00FEB1  74                 	db	116
   968  00FEB2  00                 	db	0
   969  00FEB3                     __end_of_pricesetm2:
   970                           	opt stack 0
   971  00FEB3                     _hoppcoin:
   972                           	opt stack 0
   973  00FEB3  48                 	db	72
   974  00FEB4  6F                 	db	111
   975  00FEB5  70                 	db	112
   976  00FEB6  70                 	db	112
   977  00FEB7  65                 	db	101
   978  00FEB8  72                 	db	114
   979  00FEB9  20                 	db	32
   980  00FEBA  43                 	db	67
   981  00FEBB  6F                 	db	111
   982  00FEBC  69                 	db	105
   983  00FEBD  6E                 	db	110
   984  00FEBE  20                 	db	32
   985  00FEBF  20                 	db	32
   986  00FEC0  20                 	db	32
   987  00FEC1  20                 	db	32
   988  00FEC2  20                 	db	32
   989  00FEC3  20                 	db	32
   990  00FEC4  20                 	db	32
   991  00FEC5  20                 	db	32
   992  00FEC6  20                 	db	32
   993  00FEC7  42                 	db	66
   994  00FEC8  75                 	db	117
   995  00FEC9  74                 	db	116
   996  00FECA  74                 	db	116
   997  00FECB  6F                 	db	111
   998  00FECC  6E                 	db	110
   999  00FECD  20                 	db	32
  1000  00FECE  31                 	db	49
  1001  00FECF  20                 	db	32
  1002  00FED0  3D                 	db	61
  1003  00FED1  20                 	db	32
  1004  00FED2  2B                 	db	43
  1005  00FED3  20                 	db	32
  1006  00FED4  26                 	db	38
  1007  00FED5  20                 	db	32
  1008  00FED6  32                 	db	50
  1009  00FED7  20                 	db	32
  1010  00FED8  3D                 	db	61
  1011  00FED9  20                 	db	32
  1012  00FEDA  2D                 	db	45
  1013  00FEDB  20                 	db	32
  1014  00FEDC  56                 	db	86
  1015  00FEDD  61                 	db	97
  1016  00FEDE  6C                 	db	108
  1017  00FEDF  75                 	db	117
  1018  00FEE0  65                 	db	101
  1019  00FEE1  20                 	db	32
  1020  00FEE2  3D                 	db	61
  1021  00FEE3  20                 	db	32
  1022  00FEE4  52                 	db	82
  1023  00FEE5  00                 	db	0
  1024  00FEE6                     __end_of_hoppcoin:
  1025                           	opt stack 0
  1026  00FEE6                     _inscoin:
  1027                           	opt stack 0
  1028  00FEE6  49                 	db	73
  1029  00FEE7  6E                 	db	110
  1030  00FEE8  73                 	db	115
  1031  00FEE9  65                 	db	101
  1032  00FEEA  72                 	db	114
  1033  00FEEB  74                 	db	116
  1034  00FEEC  20                 	db	32
  1035  00FEED  4E                 	db	78
  1036  00FEEE  6F                 	db	111
  1037  00FEEF  74                 	db	116
  1038  00FEF0  65                 	db	101
  1039  00FEF1  73                 	db	115
  1040  00FEF2  20                 	db	32
  1041  00FEF3  26                 	db	38
  1042  00FEF4  20                 	db	32
  1043  00FEF5  50                 	db	80
  1044  00FEF6  72                 	db	114
  1045  00FEF7  65                 	db	101
  1046  00FEF8  73                 	db	115
  1047  00FEF9  73                 	db	115
  1048  00FEFA  20                 	db	32
  1049  00FEFB  4C                 	db	76
  1050  00FEFC  69                 	db	105
  1051  00FEFD  67                 	db	103
  1052  00FEFE  68                 	db	104
  1053  00FEFF  74                 	db	116
  1054  00FF00  65                 	db	101
  1055  00FF01  64                 	db	100
  1056  00FF02  20                 	db	32
  1057  00FF03  42                 	db	66
  1058  00FF04  75                 	db	117
  1059  00FF05  74                 	db	116
  1060  00FF06  74                 	db	116
  1061  00FF07  6F                 	db	111
  1062  00FF08  6E                 	db	110
  1063  00FF09  20                 	db	32
  1064  00FF0A  54                 	db	84
  1065  00FF0B  6F                 	db	111
  1066  00FF0C  20                 	db	32
  1067  00FF0D  20                 	db	32
  1068  00FF0E  20                 	db	32
  1069  00FF0F  20                 	db	32
  1070  00FF10  20                 	db	32
  1071  00FF11  20                 	db	32
  1072  00FF12  56                 	db	86
  1073  00FF13  65                 	db	101
  1074  00FF14  6E                 	db	110
  1075  00FF15  64                 	db	100
  1076  00FF16  00                 	db	0
  1077  00FF17                     __end_of_inscoin:
  1078                           	opt stack 0
  1079  00FF17                     _initnote:
  1080                           	opt stack 0
  1081  00FF17  20                 	db	32
  1082  00FF18  20                 	db	32
  1083  00FF19  20                 	db	32
  1084  00FF1A  20                 	db	32
  1085  00FF1B  20                 	db	32
  1086  00FF1C  49                 	db	73
  1087  00FF1D  6E                 	db	110
  1088  00FF1E  69                 	db	105
  1089  00FF1F  74                 	db	116
  1090  00FF20  69                 	db	105
  1091  00FF21  61                 	db	97
  1092  00FF22  6C                 	db	108
  1093  00FF23  69                 	db	105
  1094  00FF24  7A                 	db	122
  1095  00FF25  65                 	db	101
  1096  00FF26  20                 	db	32
  1097  00FF27  20                 	db	32
  1098  00FF28  20                 	db	32
  1099  00FF29  20                 	db	32
  1100  00FF2A  20                 	db	32
  1101  00FF2B  20                 	db	32
  1102  00FF2C  20                 	db	32
  1103  00FF2D  20                 	db	32
  1104  00FF2E  20                 	db	32
  1105  00FF2F  20                 	db	32
  1106  00FF30  4E                 	db	78
  1107  00FF31  6F                 	db	111
  1108  00FF32  74                 	db	116
  1109  00FF33  65                 	db	101
  1110  00FF34  20                 	db	32
  1111  00FF35  52                 	db	82
  1112  00FF36  65                 	db	101
  1113  00FF37  61                 	db	97
  1114  00FF38  64                 	db	100
  1115  00FF39  65                 	db	101
  1116  00FF3A  72                 	db	114
  1117  00FF3B  00                 	db	0
  1118  00FF3C                     __end_of_initnote:
  1119                           	opt stack 0
  1120  00FF3C                     _noteerr:
  1121                           	opt stack 0
  1122  00FF3C  20                 	db	32
  1123  00FF3D  20                 	db	32
  1124  00FF3E  20                 	db	32
  1125  00FF3F  4E                 	db	78
  1126  00FF40  6F                 	db	111
  1127  00FF41  74                 	db	116
  1128  00FF42  65                 	db	101
  1129  00FF43  20                 	db	32
  1130  00FF44  65                 	db	101
  1131  00FF45  72                 	db	114
  1132  00FF46  72                 	db	114
  1133  00FF47  6F                 	db	111
  1134  00FF48  72                 	db	114
  1135  00FF49  20                 	db	32
  1136  00FF4A  20                 	db	32
  1137  00FF4B  20                 	db	32
  1138  00FF4C  20                 	db	32
  1139  00FF4D  20                 	db	32
  1140  00FF4E  63                 	db	99
  1141  00FF4F  6F                 	db	111
  1142  00FF50  64                 	db	100
  1143  00FF51  65                 	db	101
  1144  00FF52  20                 	db	32
  1145  00FF53  3D                 	db	61
  1146  00FF54  20                 	db	32
  1147  00FF55  30                 	db	48
  1148  00FF56  78                 	db	120
  1149  00FF57  00                 	db	0
  1150  00FF58                     __end_of_noteerr:
  1151                           	opt stack 0
  1152  00FF58                     _inithop:
  1153                           	opt stack 0
  1154  00FF58  20                 	db	32
  1155  00FF59  20                 	db	32
  1156  00FF5A  49                 	db	73
  1157  00FF5B  6E                 	db	110
  1158  00FF5C  69                 	db	105
  1159  00FF5D  74                 	db	116
  1160  00FF5E  69                 	db	105
  1161  00FF5F  61                 	db	97
  1162  00FF60  6C                 	db	108
  1163  00FF61  69                 	db	105
  1164  00FF62  7A                 	db	122
  1165  00FF63  65                 	db	101
  1166  00FF64  20                 	db	32
  1167  00FF65  48                 	db	72
  1168  00FF66  6F                 	db	111
  1169  00FF67  70                 	db	112
  1170  00FF68  70                 	db	112
  1171  00FF69  65                 	db	101
  1172  00FF6A  72                 	db	114
  1173  00FF6B  00                 	db	0
  1174  00FF6C                     __end_of_inithop:
  1175                           	opt stack 0
  1176  00FF6C                     _pricesetmsg:
  1177                           	opt stack 0
  1178  00FF6C  20                 	db	32
  1179  00FF6D  20                 	db	32
  1180  00FF6E  20                 	db	32
  1181  00FF6F  50                 	db	80
  1182  00FF70  72                 	db	114
  1183  00FF71  69                 	db	105
  1184  00FF72  63                 	db	99
  1185  00FF73  65                 	db	101
  1186  00FF74  20                 	db	32
  1187  00FF75  73                 	db	115
  1188  00FF76  65                 	db	101
  1189  00FF77  74                 	db	116
  1190  00FF78  20                 	db	32
  1191  00FF79  6D                 	db	109
  1192  00FF7A  6F                 	db	111
  1193  00FF7B  64                 	db	100
  1194  00FF7C  65                 	db	101
  1195  00FF7D  00                 	db	0
  1196  00FF7E                     __end_of_pricesetmsg:
  1197                           	opt stack 0
  1198  00FF7E                     _creditclr:
  1199                           	opt stack 0
  1200  00FF7E  43                 	db	67
  1201  00FF7F  72                 	db	114
  1202  00FF80  65                 	db	101
  1203  00FF81  64                 	db	100
  1204  00FF82  69                 	db	105
  1205  00FF83  74                 	db	116
  1206  00FF84  73                 	db	115
  1207  00FF85  20                 	db	32
  1208  00FF86  43                 	db	67
  1209  00FF87  6C                 	db	108
  1210  00FF88  65                 	db	101
  1211  00FF89  61                 	db	97
  1212  00FF8A  72                 	db	114
  1213  00FF8B  65                 	db	101
  1214  00FF8C  64                 	db	100
  1215  00FF8D  00                 	db	0
  1216  00FF8E                     __end_of_creditclr:
  1217                           	opt stack 0
  1218  00FF8E                     _dacmsg:
  1219                           	opt stack 0
  1220  00FF8E  53                 	db	83
  1221  00FF8F  65                 	db	101
  1222  00FF90  6E                 	db	110
  1223  00FF91  73                 	db	115
  1224  00FF92  69                 	db	105
  1225  00FF93  74                 	db	116
  1226  00FF94  69                 	db	105
  1227  00FF95  76                 	db	118
  1228  00FF96  69                 	db	105
  1229  00FF97  74                 	db	116
  1230  00FF98  79                 	db	121
  1231  00FF99  20                 	db	32
  1232  00FF9A  00                 	db	0
  1233  00FF9B                     __end_of_dacmsg:
  1234                           	opt stack 0
  1235  00FF9B                     _credits:
  1236                           	opt stack 0
  1237  00FF9B  20                 	db	32
  1238  00FF9C  20                 	db	32
  1239  00FF9D  43                 	db	67
  1240  00FF9E  72                 	db	114
  1241  00FF9F  65                 	db	101
  1242  00FFA0  64                 	db	100
  1243  00FFA1  69                 	db	105
  1244  00FFA2  74                 	db	116
  1245  00FFA3  20                 	db	32
  1246  00FFA4  3D                 	db	61
  1247  00FFA5  20                 	db	32
  1248  00FFA6  52                 	db	82
  1249  00FFA7  00                 	db	0
  1250  00FFA8                     __end_of_credits:
  1251                           	opt stack 0
  1252  00FFA8                     _sensmsg:
  1253                           	opt stack 0
  1254  00FFA8  53                 	db	83
  1255  00FFA9  65                 	db	101
  1256  00FFAA  6E                 	db	110
  1257  00FFAB  73                 	db	115
  1258  00FFAC  6F                 	db	111
  1259  00FFAD  72                 	db	114
  1260  00FFAE  20                 	db	32
  1261  00FFAF  69                 	db	105
  1262  00FFB0  73                 	db	115
  1263  00FFB1  20                 	db	32
  1264  00FFB2  00                 	db	0
  1265  00FFB3                     __end_of_sensmsg:
  1266                           	opt stack 0
  1267  00FFB3                     _disabled:
  1268                           	opt stack 0
  1269  00FFB3  20                 	db	32
  1270  00FFB4  64                 	db	100
  1271  00FFB5  69                 	db	105
  1272  00FFB6  73                 	db	115
  1273  00FFB7  61                 	db	97
  1274  00FFB8  62                 	db	98
  1275  00FFB9  6C                 	db	108
  1276  00FFBA  65                 	db	101
  1277  00FFBB  64                 	db	100
  1278  00FFBC  00                 	db	0
  1279  00FFBD                     __end_of_disabled:
  1280                           	opt stack 0
  1281  00FFBD                     _enabled:
  1282                           	opt stack 0
  1283  00FFBD  20                 	db	32
  1284  00FFBE  65                 	db	101
  1285  00FFBF  6E                 	db	110
  1286  00FFC0  61                 	db	97
  1287  00FFC1  62                 	db	98
  1288  00FFC2  6C                 	db	108
  1289  00FFC3  65                 	db	101
  1290  00FFC4  64                 	db	100
  1291  00FFC5  20                 	db	32
  1292  00FFC6  00                 	db	0
  1293  00FFC7                     __end_of_enabled:
  1294                           	opt stack 0
  1295  00FFC7                     _tenrand:
  1296                           	opt stack 0
  1297  00FFC7  20                 	db	32
  1298  00FFC8  20                 	db	32
  1299  00FFC9  20                 	db	32
  1300  00FFCA  52                 	db	82
  1301  00FFCB  31                 	db	49
  1302  00FFCC  30                 	db	48
  1303  00FFCD  20                 	db	32
  1304  00FFCE  20                 	db	32
  1305  00FFCF  00                 	db	0
  1306  00FFD0                     __end_of_tenrand:
  1307                           	opt stack 0
  1308  00FFD0                     _twohundredrand:
  1309                           	opt stack 0
  1310  00FFD0  20                 	db	32
  1311  00FFD1  20                 	db	32
  1312  00FFD2  52                 	db	82
  1313  00FFD3  32                 	db	50
  1314  00FFD4  30                 	db	48
  1315  00FFD5  30                 	db	48
  1316  00FFD6  20                 	db	32
  1317  00FFD7  00                 	db	0
  1318  00FFD8                     __end_of_twohundredrand:
  1319                           	opt stack 0
  1320  00FFD8                     _hundredrand:
  1321                           	opt stack 0
  1322  00FFD8  20                 	db	32
  1323  00FFD9  20                 	db	32
  1324  00FFDA  52                 	db	82
  1325  00FFDB  31                 	db	49
  1326  00FFDC  30                 	db	48
  1327  00FFDD  30                 	db	48
  1328  00FFDE  20                 	db	32
  1329  00FFDF  00                 	db	0
  1330  00FFE0                     __end_of_hundredrand:
  1331                           	opt stack 0
  1332  00FFE0                     _fiftyrand:
  1333                           	opt stack 0
  1334  00FFE0  20                 	db	32
  1335  00FFE1  20                 	db	32
  1336  00FFE2  52                 	db	82
  1337  00FFE3  35                 	db	53
  1338  00FFE4  30                 	db	48
  1339  00FFE5  20                 	db	32
  1340  00FFE6  20                 	db	32
  1341  00FFE7  00                 	db	0
  1342  00FFE8                     __end_of_fiftyrand:
  1343                           	opt stack 0
  1344  00FFE8                     _twentyrand:
  1345                           	opt stack 0
  1346  00FFE8  20                 	db	32
  1347  00FFE9  20                 	db	32
  1348  00FFEA  52                 	db	82
  1349  00FFEB  32                 	db	50
  1350  00FFEC  30                 	db	48
  1351  00FFED  20                 	db	32
  1352  00FFEE  20                 	db	32
  1353  00FFEF  00                 	db	0
  1354  00FFF0                     __end_of_twentyrand:
  1355                           	opt stack 0
  1356  00FFF0                     _clrmsg:
  1357                           	opt stack 0
  1358  00FFF0  20                 	db	32
  1359  00FFF1  20                 	db	32
  1360  00FFF2  20                 	db	32
  1361  00FFF3  20                 	db	32
  1362  00FFF4  20                 	db	32
  1363  00FFF5  00                 	db	0
  1364  00FFF6                     __end_of_clrmsg:
  1365                           	opt stack 0
  1366  00FFF6                     _offmsg:
  1367                           	opt stack 0
  1368  00FFF6  4F                 	db	79
  1369  00FFF7  66                 	db	102
  1370  00FFF8  66                 	db	102
  1371  00FFF9  00                 	db	0
  1372  00FFFA                     __end_of_offmsg:
  1373                           	opt stack 0
  1374  00FFFA                     _onmsg:
  1375                           	opt stack 0
  1376  00FFFA  4F                 	db	79
  1377  00FFFB  6E                 	db	110
  1378  00FFFC  20                 	db	32
  1379  00FFFD  00                 	db	0
  1380  00FFFE                     __end_of_onmsg:
  1381                           	opt stack 0
  1382  00FFFE  00                 	db	0	; dummy byte at the end
  1383  0000                     
  1384                           	psect	nvBANK0
  1385  0000A8                     __pnvBANK0:
  1386                           	opt stack 0
  1387  0000A8                     _timer0ReloadVal16bit:
  1388                           	opt stack 0
  1389  0000A8                     	ds	2
  1390  0000AA                     _timer5ReloadVal:
  1391                           	opt stack 0
  1392  0000AA                     	ds	2
  1393  0000AC                     _timer3ReloadVal:
  1394                           	opt stack 0
  1395  0000AC                     	ds	2
  1396  0000AE                     _timer1ReloadVal:
  1397                           	opt stack 0
  1398  0000AE                     	ds	2
  1399  0000                     _PIR4bits	set	3790
  1400  0000                     _TX2REG	set	3738
  1401  0000                     _RC2REG	set	3737
  1402  0000                     _RC2STAbits	set	3741
  1403  0000                     _SP2BRGH	set	3740
  1404  0000                     _SP2BRGL	set	3739
  1405  0000                     _TX2STA	set	3742
  1406  0000                     _RC2STA	set	3741
  1407  0000                     _BAUD2CON	set	3743
  1408  0000                     _PIR7bits	set	3793
  1409  0000                     _IPR0bits	set	3770
  1410  0000                     _PMD5	set	3814
  1411  0000                     _PMD4	set	3813
  1412  0000                     _PMD3	set	3812
  1413  0000                     _PMD2	set	3811
  1414  0000                     _PMD1	set	3810
  1415  0000                     _PMD0	set	3809
  1416  0000                     _OSCTUNE	set	3805
  1417  0000                     _OSCFRQ	set	3806
  1418  0000                     _OSCEN	set	3804
  1419  0000                     _OSCCON3	set	3802
  1420  0000                     _OSCCON1	set	3800
  1421  0000                     _PIR3bits	set	3789
  1422  0000                     _PIR0bits	set	3786
  1423  0000                     _RX2PPSbits	set	3725
  1424  0000                     _RB5PPS	set	3828
  1425  0000                     _RC6PPS	set	3837
  1426  0000                     _RX1PPSbits	set	3765
  1427  0000                     _PPSLOCKbits	set	3744
  1428  0000                     _PPSLOCK	set	3744
  1429  0000                     _PIE0bits	set	3778
  1430  0000                     _CMOUT	set	3901
  1431  0000                     _DAC1CON1	set	3892
  1432  0000                     _DAC1CON0	set	3891
  1433  0000                     _CMOUTbits	set	3901
  1434  0000                     _CM1PCH	set	3900
  1435  0000                     _CM1NCH	set	3899
  1436  0000                     _CM1CON1	set	3898
  1437  0000                     _CM1CON0	set	3897
  1438  0000                     _ODCOND	set	3876
  1439  0000                     _ODCONC	set	3871
  1440  0000                     _ODCONB	set	3863
  1441  0000                     _ODCONA	set	3855
  1442  0000                     _ODCONE	set	3884
  1443  0000                     _WPUC	set	3872
  1444  0000                     _WPUA	set	3856
  1445  0000                     _WPUB	set	3864
  1446  0000                     _WPUE	set	3885
  1447  0000                     _WPUD	set	3877
  1448  0000                     _ANSELA	set	3857
  1449  0000                     _ANSELE	set	3886
  1450  0000                     _ANSELD	set	3878
  1451  0000                     _ANSELB	set	3865
  1452  0000                     _ANSELC	set	3873
  1453  0000                     _BAUD1CONbits	set	3999
  1454  0000                     _LATCbits	set	3973
  1455  0000                     _TX1STAbits	set	3998
  1456  0000                     _PORTA	set	3981
  1457  0000                     _PORTD	set	3984
  1458  0000                     _T0CON0bits	set	4053
  1459  0000                     _T0CON0	set	4053
  1460  0000                     _TMR0L	set	4051
  1461  0000                     _TMR0H	set	4052
  1462  0000                     _T0CON1	set	4054
  1463  0000                     _T5GCONbits	set	4036
  1464  0000                     _T5CONbits	set	4035
  1465  0000                     _T5CON	set	4035
  1466  0000                     _TMR5L	set	4033
  1467  0000                     _TMR5H	set	4034
  1468  0000                     _T5CLK	set	4038
  1469  0000                     _T5GATE	set	4037
  1470  0000                     _T5GCON	set	4036
  1471  0000                     _T3GCONbits	set	4042
  1472  0000                     _T3CONbits	set	4041
  1473  0000                     _T3CON	set	4041
  1474  0000                     _TMR3L	set	4039
  1475  0000                     _TMR3H	set	4040
  1476  0000                     _T3CLK	set	4044
  1477  0000                     _T3GATE	set	4043
  1478  0000                     _T3GCON	set	4042
  1479  0000                     _T1GCONbits	set	4048
  1480  0000                     _T1CONbits	set	4047
  1481  0000                     _T1CON	set	4047
  1482  0000                     _TMR1L	set	4045
  1483  0000                     _TMR1H	set	4046
  1484  0000                     _T1CLK	set	4050
  1485  0000                     _T1GATE	set	4049
  1486  0000                     _T1GCON	set	4048
  1487  0000                     _NVMDAT	set	3968
  1488  0000                     _NVMADRL	set	3966
  1489  0000                     _NVMADRH	set	3967
  1490  0000                     _NVMCON2	set	3970
  1491  0000                     _TABLAT	set	4085
  1492  0000                     _TBLPTRL	set	4086
  1493  0000                     _TBLPTRH	set	4087
  1494  0000                     _TBLPTRU	set	4088
  1495  0000                     _NVMCON1bits	set	3969
  1496  0000                     _INTCONbits	set	4082
  1497  0000                     _TX1REG	set	3994
  1498  0000                     _RC1REG	set	3993
  1499  0000                     _RC1STAbits	set	3997
  1500  0000                     _SP1BRGH	set	3996
  1501  0000                     _SP1BRGL	set	3995
  1502  0000                     _TX1STA	set	3998
  1503  0000                     _RC1STA	set	3997
  1504  0000                     _BAUD1CON	set	3999
  1505  0000                     _TRISD	set	3979
  1506  0000                     _TRISC	set	3978
  1507  0000                     _TRISB	set	3977
  1508  0000                     _TRISA	set	3976
  1509  0000                     _TRISE	set	3980
  1510  0000                     _LATC	set	3973
  1511  0000                     _LATB	set	3972
  1512  0000                     _LATA	set	3971
  1513  0000                     _LATD	set	3974
  1514  0000                     _LATE	set	3975
  1515  0000                     _LATA6	set	31774
  1516  0000                     _LATA7	set	31775
  1517  0000                     _GIE	set	32663
  1518                           
  1519                           	psect	nvCOMRAMh
  1520  00004C                     __pnvCOMRAMh:
  1521                           	opt stack 0
  1522  00004C                     _count:
  1523                           	opt stack 0
  1524  00004C                     	ds	1
  1525                           
  1526                           ; #config settings
  1527  0000                     
  1528                           	psect	cinit
  1529  01154C                     __pcinit:
  1530                           	opt stack 0
  1531  01154C                     start_initialization:
  1532                           	opt stack 0
  1533  01154C                     __initialization:
  1534                           	opt stack 0
  1535                           
  1536                           ; Initialize objects allocated to COMRAMh (1 bytes)
  1537                           ; load TBLPTR registers with __pidataCOMRAMh
  1538  01154C  0E80               	movlw	low __pidataCOMRAMh
  1539  01154E  6EF6               	movwf	tblptrl,c
  1540  011550  0E1A               	movlw	high __pidataCOMRAMh
  1541  011552  6EF7               	movwf	tblptrh,c
  1542  011554  0E01               	movlw	low (__pidataCOMRAMh shr (0+16))
  1543  011556  6EF8               	movwf	tblptru,c
  1544  011558  0009               	tblrd		*+	;fetch initializer
  1545  01155A  CFF5 F04D          	movff	tablat,__pdataCOMRAMh
  1546                           
  1547                           ; Clear objects allocated to BANK0 (58 bytes)
  1548  01155E  EE00  F060         	lfsr	0,__pbssBANK0
  1549  011562  0E3A               	movlw	58
  1550  011564                     clear_0:
  1551  011564  6AEE               	clrf	postinc0,c
  1552  011566  06E8               	decf	wreg,f,c
  1553  011568  E1FD               	bnz	clear_0
  1554                           
  1555                           ; Clear objects allocated to COMRAMh (31 bytes)
  1556  01156A  EE00  F02D         	lfsr	0,__pbssCOMRAMh
  1557  01156E  0E1F               	movlw	31
  1558  011570                     clear_1:
  1559  011570  6AEE               	clrf	postinc0,c
  1560  011572  06E8               	decf	wreg,f,c
  1561  011574  E1FD               	bnz	clear_1
  1562                           
  1563                           ; Clear objects allocated to COMRAMl (1 bytes)
  1564  011576  6A4E               	clrf	__pbssCOMRAMl& (0+255),c
  1565  011578                     end_of_initialization:
  1566                           	opt stack 0
  1567  011578                     __end_of__initialization:
  1568                           	opt stack 0
  1569  011578  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1570  01157A  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1571  01157C  0100               	movlb	0
  1572  01157E  EFB6  F084         	goto	_main	;jump to C main() function
  1573                           tblptru	equ	0xFF8
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           tablat	equ	0xFF5
  1577                           postinc0	equ	0xFEE
  1578                           wreg	equ	0xFE8
  1579                           
  1580                           	psect	bssCOMRAMh
  1581  00002D                     __pbssCOMRAMh:
  1582                           	opt stack 0
  1583  00002D                     _hpserial:
  1584                           	opt stack 0
  1585  00002D                     	ds	3
  1586  000030                     _venflags:
  1587                           	opt stack 0
  1588  000030                     	ds	2
  1589  000032                     _dbcount:
  1590                           	opt stack 0
  1591  000032                     	ds	2
  1592  000034                     _venderr:
  1593                           	opt stack 0
  1594  000034                     	ds	1
  1595  000035                     _senspos:
  1596                           	opt stack 0
  1597  000035                     	ds	1
  1598  000036                     _sensorval:
  1599                           	opt stack 0
  1600  000036                     	ds	1
  1601  000037                     _vendprice:
  1602                           	opt stack 0
  1603  000037                     	ds	1
  1604  000038                     _buttons:
  1605                           	opt stack 0
  1606  000038                     	ds	1
  1607  000039                     _cash:
  1608                           	opt stack 0
  1609  000039                     	ds	1
  1610  00003A                     _credit:
  1611                           	opt stack 0
  1612  00003A                     	ds	1
  1613  00003B                     _cctflags:
  1614                           	opt stack 0
  1615  00003B                     	ds	1
  1616  00003C                     _noteen_byte:
  1617                           	opt stack 0
  1618  00003C                     	ds	1
  1619  00003D                     _noteen:
  1620                           	opt stack 0
  1621  00003D                     	ds	1
  1622  00003E                     _mdbflags:
  1623                           	opt stack 0
  1624  00003E                     	ds	1
  1625  00003F                     _chkbyte:
  1626                           	opt stack 0
  1627  00003F                     	ds	1
  1628  000040                     _notebyte:
  1629                           	opt stack 0
  1630  000040                     	ds	1
  1631  000041                     _mcount:
  1632                           	opt stack 0
  1633  000041                     	ds	1
  1634  000042                     _dspposition:
  1635                           	opt stack 0
  1636  000042                     	ds	1
  1637  000043                     _ercode:
  1638                           	opt stack 0
  1639  000043                     	ds	1
  1640  000044                     _stradd:
  1641                           	opt stack 0
  1642  000044                     	ds	1
  1643  000045                     _lcdata:
  1644                           	opt stack 0
  1645  000045                     	ds	1
  1646  000046                     _bflag:
  1647                           	opt stack 0
  1648  000046                     	ds	1
  1649  000047                     _pnvcash:
  1650                           	opt stack 0
  1651  000047                     	ds	3
  1652  00004A                     _pvcash:
  1653                           	opt stack 0
  1654  00004A                     	ds	2
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           postinc0	equ	0xFEE
  1660                           wreg	equ	0xFE8
  1661                           
  1662                           	psect	dataCOMRAMh
  1663  00004D                     __pdataCOMRAMh:
  1664                           	opt stack 0
  1665  00004D                     _notenum:
  1666                           	opt stack 0
  1667  00004D                     	ds	1
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           postinc0	equ	0xFEE
  1673                           wreg	equ	0xFE8
  1674                           
  1675                           	psect	bssCOMRAMl
  1676  00004E                     __pbssCOMRAMl:
  1677                           	opt stack 0
  1678  00004E                     _lcdfunc:
  1679                           	opt stack 0
  1680  00004E                     	ds	1
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           
  1688                           	psect	bssBANK0
  1689  000060                     __pbssBANK0:
  1690                           	opt stack 0
  1691  000060                     _mdbdata:
  1692                           	opt stack 0
  1693  000060                     	ds	32
  1694  000080                     _tvends:
  1695                           	opt stack 0
  1696  000080                     	ds	8
  1697  000088                     _nvcash:
  1698                           	opt stack 0
  1699  000088                     	ds	3
  1700  00008B                     _hexnum:
  1701                           	opt stack 0
  1702  00008B                     	ds	3
  1703  00008E                     _vcashout:
  1704                           	opt stack 0
  1705  00008E                     	ds	2
  1706  000090                     _vcash:
  1707                           	opt stack 0
  1708  000090                     	ds	2
  1709  000092                     _command:
  1710                           	opt stack 0
  1711  000092                     	ds	1
  1712  000093                     _nobytes:
  1713                           	opt stack 0
  1714  000093                     	ds	1
  1715  000094                     _dest:
  1716                           	opt stack 0
  1717  000094                     	ds	1
  1718  000095                     _mdbtxbyte:
  1719                           	opt stack 0
  1720  000095                     	ds	1
  1721  000096                     _errorflags:
  1722                           	opt stack 0
  1723  000096                     	ds	1
  1724  000097                     _slvadd:
  1725                           	opt stack 0
  1726  000097                     	ds	1
  1727  000098                     _lcdaddress:
  1728                           	opt stack 0
  1729  000098                     	ds	1
  1730  000099                     _lcdline:
  1731                           	opt stack 0
  1732  000099                     	ds	1
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           postinc0	equ	0xFEE
  1738                           wreg	equ	0xFE8
  1739                           
  1740                           	psect	cstackBANK0
  1741  00009A                     __pcstackBANK0:
  1742                           	opt stack 0
  1743  00009A                     displ_hex@value:
  1744                           	opt stack 0
  1745                           
  1746                           ; 8 bytes @ 0x0
  1747  00009A                     	ds	8
  1748  0000A2                     displ_hex@hexnumsave:
  1749                           	opt stack 0
  1750                           
  1751                           ; 3 bytes @ 0x8
  1752  0000A2                     	ds	3
  1753  0000A5                     displ_hex@i:
  1754                           	opt stack 0
  1755                           
  1756                           ; 1 bytes @ 0xB
  1757  0000A5                     	ds	1
  1758  0000A6                     set_price@buttons:
  1759                           	opt stack 0
  1760                           
  1761                           ; 1 bytes @ 0xC
  1762  0000A6                     	ds	1
  1763  0000A7                     set_price@channel:
  1764                           	opt stack 0
  1765                           
  1766                           ; 1 bytes @ 0xD
  1767  0000A7                     	ds	1
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           postinc0	equ	0xFEE
  1773                           wreg	equ	0xFE8
  1774                           
  1775                           	psect	cstackCOMRAMh
  1776  00000B                     __pcstackCOMRAMh:
  1777                           	opt stack 0
  1778  00000B                     ??_INTERRUPT_InterruptManagerHigh:
  1779  00000B                     
  1780                           ; 1 bytes @ 0x0
  1781  00000B                     	ds	18
  1782  00001D                     ??_TMR3_Initialize:
  1783  00001D                     ??_TMR5_Initialize:
  1784  00001D                     ??_TMR1_Initialize:
  1785  00001D                     ??_TMR0_Initialize:
  1786  00001D                     ??_butin:
  1787  00001D                     ?___ltdiv:
  1788                           	opt stack 0
  1789  00001D                     ?___ltmod:
  1790                           	opt stack 0
  1791  00001D                     PIN_MANAGER_Initialize@state:
  1792                           	opt stack 0
  1793  00001D                     EUSART1_Write@txData:
  1794                           	opt stack 0
  1795  00001D                     DAC1_SetOutput@inputData:
  1796                           	opt stack 0
  1797  00001D                     read_busy@savelate:
  1798                           	opt stack 0
  1799  00001D                     Read_Service@senval:
  1800                           	opt stack 0
  1801  00001D                     init_mdbdata@initdata:
  1802                           	opt stack 0
  1803  00001D                     cctalk_read@data:
  1804                           	opt stack 0
  1805  00001D                     DATAEE_WriteByte@bAdd:
  1806                           	opt stack 0
  1807  00001D                     DATAEE_ReadByte@bAdd:
  1808                           	opt stack 0
  1809  00001D                     ___ltdiv@dividend:
  1810                           	opt stack 0
  1811  00001D                     ___ltmod@dividend:
  1812                           	opt stack 0
  1813                           
  1814                           ; 3 bytes @ 0x12
  1815  00001D                     	ds	1
  1816  00001E                     ??_butindb:
  1817  00001E                     read_busy@savelatd:
  1818                           	opt stack 0
  1819  00001E                     init_mdbdata@i:
  1820                           	opt stack 0
  1821  00001E                     mdb_transmit@txbyte:
  1822                           	opt stack 0
  1823                           
  1824                           ; 1 bytes @ 0x13
  1825  00001E                     	ds	1
  1826  00001F                     ??_mdb_unlock:
  1827  00001F                     DATAEE_WriteByte@bData:
  1828                           	opt stack 0
  1829  00001F                     lcd_write@savelatd:
  1830                           	opt stack 0
  1831  00001F                     mdb_comm@mcount:
  1832                           	opt stack 0
  1833  00001F                     cctalk_comm@nobytes:
  1834                           	opt stack 0
  1835  00001F                     Init_vendmem@chanlinkbits:
  1836                           	opt stack 0
  1837  00001F                     Read_NVstore@storeadd:
  1838                           	opt stack 0
  1839                           
  1840                           ; 2 bytes @ 0x14
  1841  00001F                     	ds	1
  1842  000020                     DATAEE_WriteByte@GIEBitValue:
  1843                           	opt stack 0
  1844  000020                     lcd_write@lcdata:
  1845                           	opt stack 0
  1846  000020                     butindb@butval:
  1847                           	opt stack 0
  1848  000020                     mdb_comm@slvadd:
  1849                           	opt stack 0
  1850  000020                     cctalk_comm@command:
  1851                           	opt stack 0
  1852  000020                     ___ltdiv@divisor:
  1853                           	opt stack 0
  1854  000020                     ___ltmod@divisor:
  1855                           	opt stack 0
  1856                           
  1857                           ; 3 bytes @ 0x15
  1858  000020                     	ds	1
  1859  000021                     ??_cctalk_comm:
  1860  000021                     lcd_dispadd@lcdaddress:
  1861                           	opt stack 0
  1862  000021                     credit_subtract@credit:
  1863                           	opt stack 0
  1864  000021                     butindb@butt:
  1865                           	opt stack 0
  1866  000021                     mdb_comm@i:
  1867                           	opt stack 0
  1868  000021                     Init_vendmem@chanlink:
  1869                           	opt stack 0
  1870  000021                     Write_NVstore@storeadd:
  1871                           	opt stack 0
  1872  000021                     Read_NVstore@storemem:
  1873                           	opt stack 0
  1874                           
  1875                           ; 2 bytes @ 0x16
  1876  000021                     	ds	1
  1877  000022                     ??_mdb_reset:
  1878  000022                     lcd_dispadd@lcdatasave:
  1879                           	opt stack 0
  1880  000022                     mdb_poll@i:
  1881                           	opt stack 0
  1882  000022                     cctalk_comm@i:
  1883                           	opt stack 0
  1884                           
  1885                           ; 1 bytes @ 0x17
  1886  000022                     	ds	1
  1887  000023                     lcd_writeC@lcdata:
  1888                           	opt stack 0
  1889  000023                     Init_vendmem@i:
  1890                           	opt stack 0
  1891  000023                     Read_NVstore@storesize:
  1892                           	opt stack 0
  1893  000023                     mdb_reset@i:
  1894                           	opt stack 0
  1895  000023                     cctalk_comm@dest:
  1896                           	opt stack 0
  1897  000023                     ___ltmod@counter:
  1898                           	opt stack 0
  1899  000023                     Write_NVstore@storemem:
  1900                           	opt stack 0
  1901  000023                     ___ltdiv@quotient:
  1902                           	opt stack 0
  1903                           
  1904                           ; 3 bytes @ 0x18
  1905  000023                     	ds	1
  1906  000024                     ??_displ_code:
  1907  000024                     lcd_test@character:
  1908                           	opt stack 0
  1909  000024                     Read_NVstore@i:
  1910                           	opt stack 0
  1911  000024                     mdb_reset@i_3119:
  1912                           	opt stack 0
  1913  000024                     cctalk_adpoll@i:
  1914                           	opt stack 0
  1915  000024                     cctalk_pinenter@i:
  1916                           	opt stack 0
  1917  000024                     cctalk_poll@i:
  1918                           	opt stack 0
  1919  000024                     lcd_string@lcdstring:
  1920                           	opt stack 0
  1921                           
  1922                           ; 2 bytes @ 0x19
  1923  000024                     	ds	1
  1924  000025                     ??_lcd_init:
  1925  000025                     ??_mdb_init:
  1926  000025                     ??_cctalk_init:
  1927  000025                     Write_NVstore@storesize:
  1928                           	opt stack 0
  1929                           
  1930                           ; 1 bytes @ 0x1A
  1931  000025                     	ds	1
  1932  000026                     displ_code@ercode:
  1933                           	opt stack 0
  1934  000026                     lcd_string@lcdline:
  1935                           	opt stack 0
  1936  000026                     Write_NVstore@i:
  1937                           	opt stack 0
  1938  000026                     ___ltdiv@counter:
  1939                           	opt stack 0
  1940                           
  1941                           ; 1 bytes @ 0x1B
  1942  000026                     	ds	1
  1943  000027                     ??_lcd_string:
  1944  000027                     Update_cashaudit@addcash:
  1945                           	opt stack 0
  1946  000027                     mdb_init@i:
  1947                           	opt stack 0
  1948  000027                     displ_hex@hexnum:
  1949                           	opt stack 0
  1950                           
  1951                           ; 3 bytes @ 0x1C
  1952  000027                     	ds	1
  1953  000028                     credit_add@credit:
  1954                           	opt stack 0
  1955                           
  1956                           ; 1 bytes @ 0x1D
  1957  000028                     	ds	1
  1958  000029                     ??_Clear_cred:
  1959  000029                     displ_nendis@note2disp:
  1960                           	opt stack 0
  1961  000029                     displ_note@notestring:
  1962                           	opt stack 0
  1963                           
  1964                           ; 2 bytes @ 0x1E
  1965  000029                     	ds	1
  1966  00002A                     displ_sens@dmsgpos:
  1967                           	opt stack 0
  1968  00002A                     displ_nendis@x:
  1969                           	opt stack 0
  1970  00002A                     displ_credit@cash:
  1971                           	opt stack 0
  1972  00002A                     displ_price@vendprice:
  1973                           	opt stack 0
  1974  00002A                     Update_Hopcoin@direction:
  1975                           	opt stack 0
  1976                           
  1977                           ; 1 bytes @ 0x1F
  1978  00002A                     	ds	1
  1979  00002B                     ??_set_price:
  1980  00002B                     displ_sens@smsgpos:
  1981                           	opt stack 0
  1982  00002B                     Update_Hopcoin@newval:
  1983                           	opt stack 0
  1984  00002B                     enable_notes@notenum:
  1985                           	opt stack 0
  1986                           
  1987                           ; 1 bytes @ 0x20
  1988  00002B                     	ds	1
  1989  00002C                     Hopper_coin@coinval:
  1990                           	opt stack 0
  1991  00002C                     Sensor_set@dacpos:
  1992                           	opt stack 0
  1993                           
  1994                           ; 1 bytes @ 0x21
  1995  00002C                     	ds	1
  1996  00002D                     tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           postinc0	equ	0xFEE
  2001                           wreg	equ	0xFE8
  2002                           
  2003                           ; 1 bytes @ 0x22
  2004                           
  2005                           	psect	cstackCOMRAMl
  2006  000000                     __pcstackCOMRAMl:
  2007                           	opt stack 0
  2008  000000                     tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           postinc0	equ	0xFEE
  2013                           wreg	equ	0xFE8
  2014                           
  2015                           ; 1 bytes @ 0x0
  2016 ;;
  2017 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2018 ;;
  2019 ;; *************** function _main *****************
  2020 ;; Defined at:
  2021 ;;		line 56 in file "main.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;Total ram usage:        0 bytes
  2040 ;; Hardware stack levels required when called:   12
  2041 ;; This function calls:
  2042 ;;		_CMP1_GetOutputStatus
  2043 ;;		_SYSTEM_Initialize
  2044 ;;		_credit_add
  2045 ;;		_credit_subtract
  2046 ;;		_displ_credit
  2047 ;;		_displ_noteer
  2048 ;;		_enter_service
  2049 ;;		_lcd_init
  2050 ;;		_lcd_string
  2051 ;;		_mdb_init
  2052 ;;		_mdb_poll
  2053 ;;		_vend_init
  2054 ;; This function is called by:
  2055 ;;		Startup code after reset
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text0
  2060  01096C                     __ptext0:
  2061                           	opt stack 0
  2062  01096C                     _main:
  2063                           	opt stack 19
  2064                           
  2065                           ;main.c: 59: SYSTEM_Initialize();
  2066                           
  2067                           ;incstack = 0
  2068  01096C  ECAB  F08B         	call	_SYSTEM_Initialize	;wreg free
  2069                           
  2070                           ;main.c: 61: lcd_init();
  2071  010970  EC24  F086         	call	_lcd_init	;wreg free
  2072                           
  2073                           ;main.c: 62: vend_init();
  2074  010974  ECC3  F086         	call	_vend_init	;wreg free
  2075  010978                     l865:
  2076  010978  F000               	nop		;# 
  2077                           
  2078                           ;main.c: 67: DAC1CON1 = 0x00;
  2079  01097A  0E00               	movlw	0
  2080  01097C  010F               	movlb	15	; () banked
  2081  01097E  6F34               	movwf	52,b	;volatile
  2082                           
  2083                           ; BSR set to: 15
  2084                           ;main.c: 68: if (!CMP1_GetOutputStatus())
  2085  010980  EC0B  F08D         	call	_CMP1_GetOutputStatus	;wreg free
  2086  010984  0900               	iorlw	0
  2087  010986  B4D8               	btfsc	status,2,c
  2088                           
  2089                           ;main.c: 69: {
  2090                           ;main.c: 70: venflags.service = 1;
  2091  010988  8E30               	bsf	_venflags,7,c
  2092                           
  2093                           ;main.c: 72: }
  2094                           ;main.c: 73: DAC1CON1 = sensorval;
  2095  01098A  C036  FF34         	movff	_sensorval,3892	;volatile
  2096                           
  2097                           ;main.c: 75: if(venflags.service == 1)
  2098  01098E  BE30               	btfsc	_venflags,7,c
  2099                           
  2100                           ;main.c: 76: {
  2101                           ;main.c: 77: enter_service();
  2102  010990  EC78  F086         	call	_enter_service	;wreg free
  2103                           
  2104                           ;main.c: 78: }
  2105                           ;main.c: 80: if(venflags.inscoin == 1)
  2106  010994  A430               	btfss	_venflags,2,c
  2107  010996  D010               	goto	l868
  2108                           
  2109                           ;main.c: 81: {
  2110                           ;main.c: 82: lcd_string(inscoin, line1);
  2111  010998  0EE6               	movlw	low _inscoin
  2112  01099A  6E24               	movwf	lcd_string@lcdstring,c
  2113  01099C  0EFE               	movlw	high _inscoin
  2114  01099E  6E25               	movwf	lcd_string@lcdstring+1,c
  2115  0109A0  0EE3               	movlw	low _line1
  2116  0109A2  6EF6               	movwf	tblptrl,c
  2117  0109A4                     	if	1	;There is more than 1 active tblptr byte
  2118  0109A4  0EFD               	movlw	high _line1
  2119  0109A6  6EF7               	movwf	tblptrh,c
  2120  0109A8                     	endif
  2121  0109A8                     	if	1	;There are 3 active tblptr bytes
  2122  0109A8  0E00               	movlw	low (_line1 shr (0+16))
  2123  0109AA  6EF8               	movwf	tblptru,c
  2124  0109AC                     	endif
  2125  0109AC  0008               	tblrd		*
  2126  0109AE  CFF5 F026          	movff	tablat,lcd_string@lcdline
  2127  0109B2  EC72  F085         	call	_lcd_string	;wreg free
  2128                           
  2129                           ;main.c: 83: venflags.inscoin = 0;
  2130  0109B6  9430               	bcf	_venflags,2,c
  2131  0109B8                     l868:
  2132                           
  2133                           ;main.c: 84: }
  2134                           ;main.c: 85: if(venflags.initialrun == 1)
  2135  0109B8  AA30               	btfss	_venflags,5,c
  2136  0109BA  D007               	goto	l869
  2137                           
  2138                           ;main.c: 86: {
  2139                           ;main.c: 87: credit_add(0x00);
  2140  0109BC  0E00               	movlw	0
  2141  0109BE  EC1B  F089         	call	_credit_add
  2142                           
  2143                           ;main.c: 88: credit_subtract(0x00);
  2144  0109C2  0E00               	movlw	0
  2145  0109C4  EC73  F089         	call	_credit_subtract
  2146                           
  2147                           ;main.c: 89: venflags.initialrun = 0;
  2148  0109C8  9A30               	bcf	_venflags,5,c
  2149  0109CA                     l869:
  2150                           
  2151                           ;main.c: 91: }
  2152                           ;main.c: 92: if(venflags.credisplay == 1)
  2153  0109CA  B830               	btfsc	_venflags,4,c
  2154                           
  2155                           ;main.c: 93: {
  2156                           ;main.c: 94: displ_credit();
  2157  0109CC  EC2C  F08B         	call	_displ_credit	;wreg free
  2158                           
  2159                           ;main.c: 95: }
  2160                           ;main.c: 97: if(PIR4bits.TMR3IF)
  2161  0109D0  010E               	movlb	14	; () banked
  2162  0109D2  A5CE               	btfss	206,2,b	;volatile
  2163  0109D4  D7D1               	goto	l865
  2164                           
  2165                           ; BSR set to: 14
  2166                           ;main.c: 98: {
  2167                           ;main.c: 99: credit = mdb_poll();
  2168  0109D6  EC92  F080         	call	_mdb_poll	;wreg free
  2169  0109DA  6E3A               	movwf	_credit,c	;volatile
  2170                           
  2171                           ;main.c: 100: if(credit != 0x00)
  2172  0109DC  503A               	movf	_credit,w,c	;volatile
  2173  0109DE  B4D8               	btfsc	status,2,c
  2174  0109E0  D021               	goto	l872
  2175                           
  2176                           ;main.c: 101: {
  2177                           ;main.c: 102: if(mdbflags.noteerr == 1)
  2178  0109E2  B23E               	btfsc	_mdbflags,1,c
  2179  0109E4  D00D               	goto	l874
  2180  0109E6  D01A               	goto	l873
  2181  0109E8  ECB4  F088         	call	_mdb_init	;wreg free
  2182  0109EC  D003               	goto	l880
  2183  0109EE                     l877:
  2184                           
  2185                           ;main.c: 113: if(mdbflags.vending)
  2186  0109EE  A83E               	btfss	_mdbflags,4,c
  2187                           
  2188                           ;main.c: 117: else
  2189                           ;main.c: 118: {
  2190                           ;main.c: 119: mdb_init();
  2191                           
  2192                           ;main.c: 116: }
  2193                           
  2194                           ;main.c: 114: {
  2195                           ;main.c: 115: credit = 0;
  2196  0109F0  ECB4  F088         	call	_mdb_init	;wreg free
  2197  0109F4                     l880:
  2198                           
  2199                           ;main.c: 127: credit = 0;
  2200                           
  2201                           ;main.c: 126: case 0x0C : mdbflags.noteerr == 0;
  2202                           
  2203                           ;main.c: 125: break;
  2204                           
  2205                           ;main.c: 124: credit = 0;
  2206  0109F4  0E00               	movlw	0
  2207  0109F6  6E3A               	movwf	_credit,c	;volatile
  2208                           
  2209                           ;main.c: 128: break;
  2210  0109F8  D7BF               	goto	l865
  2211  0109FA  ECC4  F08B         	call	_displ_noteer	;wreg free
  2212                           
  2213                           ;main.c: 130: }
  2214  0109FE  D7BC               	goto	l865
  2215  010A00                     l874:
  2216  010A00  503A               	movf	_credit,w,c	;volatile
  2217                           
  2218                           ; Switch size 1, requested type "space"
  2219                           ; Number of cases is 4, Range of values is 6 to 16
  2220                           ; switch strategies available:
  2221                           ; Name         Instructions Cycles
  2222                           ; simple_byte           13     7 (average)
  2223                           ;	Chosen strategy is simple_byte
  2224  010A02  0A06               	xorlw	6	; case 6
  2225  010A04  B4D8               	btfsc	status,2,c
  2226  010A06  D7F0               	goto	l875
  2227  010A08  0A0F               	xorlw	15	; case 9
  2228  010A0A  B4D8               	btfsc	status,2,c
  2229  010A0C  D7F0               	goto	l877
  2230  010A0E  0A05               	xorlw	5	; case 12
  2231  010A10  B4D8               	btfsc	status,2,c
  2232  010A12  D7F0               	goto	l880
  2233  010A14  0A1C               	xorlw	28	; case 16
  2234  010A16  B4D8               	btfsc	status,2,c
  2235  010A18  D7ED               	goto	l880
  2236  010A1A  D7EF               	goto	l882
  2237  010A1C                     l873:
  2238                           
  2239                           ;main.c: 132: else
  2240                           ;main.c: 133: {
  2241                           ;main.c: 134: credit_add(credit);
  2242  010A1C  503A               	movf	_credit,w,c	;volatile
  2243  010A1E  EC1B  F089         	call	_credit_add
  2244                           
  2245                           ;main.c: 135: }
  2246                           ;main.c: 136: }
  2247  010A22  D7AA               	goto	l865
  2248  010A24                     l872:
  2249                           
  2250                           ;main.c: 137: else
  2251                           ;main.c: 138: {
  2252                           ;main.c: 139: if(mdbflags.noteerr == 1)
  2253  010A24  A23E               	btfss	_mdbflags,1,c
  2254  010A26  D7A8               	goto	l865
  2255                           
  2256                           ;main.c: 140: {
  2257                           ;main.c: 141: displ_noteer();
  2258  010A28  ECC4  F08B         	call	_displ_noteer	;wreg free
  2259  010A2C  D7A5               	goto	l865
  2260  010A2E                     __end_of_main:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _vend_init *****************
  2271 ;; Defined at:
  2272 ;;		line 47 in file "vend.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    8
  2293 ;; This function calls:
  2294 ;;		_DAC1_SetOutput
  2295 ;;		_DATAEE_ReadByte
  2296 ;;		_Init_vendmem
  2297 ;;		_cctalk_init
  2298 ;;		_credit_check
  2299 ;;		_lcd_string
  2300 ;;		_mdb_init
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text1
  2307  010D86                     __ptext1:
  2308                           	opt stack 0
  2309  010D86                     _vend_init:
  2310                           	opt stack 22
  2311                           
  2312                           ;vend.c: 50: Init_vendmem();
  2313                           
  2314                           ;incstack = 0
  2315  010D86  EC47  F088         	call	_Init_vendmem	;wreg free
  2316                           
  2317                           ;vend.c: 52: sensorval = DATAEE_ReadByte(sensval);
  2318  010D8A  0EA9               	movlw	low _sensval
  2319  010D8C  6EF6               	movwf	tblptrl,c
  2320  010D8E                     	if	1	;There is more than 1 active tblptr byte
  2321  010D8E  0EFD               	movlw	high _sensval
  2322  010D90  6EF7               	movwf	tblptrh,c
  2323  010D92                     	endif
  2324  010D92                     	if	1	;There are 3 active tblptr bytes
  2325  010D92  0E00               	movlw	low (_sensval shr (0+16))
  2326  010D94  6EF8               	movwf	tblptru,c
  2327  010D96                     	endif
  2328  010D96  0009               	tblrd		*+
  2329  010D98  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  2330  010D9C  000A               	tblrd		*-
  2331  010D9E  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  2332  010DA2  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  2333  010DA6  6E36               	movwf	_sensorval,c	;volatile
  2334                           
  2335                           ;vend.c: 53: DAC1_SetOutput(sensorval);
  2336  010DA8  5036               	movf	_sensorval,w,c	;volatile
  2337  010DAA  EC1F  F08D         	call	_DAC1_SetOutput
  2338                           
  2339                           ;vend.c: 55: lcd_string(inithop, line1);
  2340  010DAE  0E58               	movlw	low _inithop
  2341  010DB0  6E24               	movwf	lcd_string@lcdstring,c
  2342  010DB2  0EFF               	movlw	high _inithop
  2343  010DB4  6E25               	movwf	lcd_string@lcdstring+1,c
  2344  010DB6  0EE3               	movlw	low _line1
  2345  010DB8  6EF6               	movwf	tblptrl,c
  2346  010DBA                     	if	1	;There is more than 1 active tblptr byte
  2347  010DBA  0EFD               	movlw	high _line1
  2348  010DBC  6EF7               	movwf	tblptrh,c
  2349  010DBE                     	endif
  2350  010DBE                     	if	1	;There are 3 active tblptr bytes
  2351  010DBE  0E00               	movlw	low (_line1 shr (0+16))
  2352  010DC0  6EF8               	movwf	tblptru,c
  2353  010DC2                     	endif
  2354  010DC2  0008               	tblrd		*
  2355  010DC4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  2356  010DC8  EC72  F085         	call	_lcd_string	;wreg free
  2357                           
  2358                           ;vend.c: 56: cctalk_init();
  2359  010DCC  ECED  F089         	call	_cctalk_init	;wreg free
  2360                           
  2361                           ;vend.c: 58: lcd_string(initnote, line1);
  2362  010DD0  0E17               	movlw	low _initnote
  2363  010DD2  6E24               	movwf	lcd_string@lcdstring,c
  2364  010DD4  0EFF               	movlw	high _initnote
  2365  010DD6  6E25               	movwf	lcd_string@lcdstring+1,c
  2366  010DD8  0EE3               	movlw	low _line1
  2367  010DDA  6EF6               	movwf	tblptrl,c
  2368  010DDC                     	if	1	;There is more than 1 active tblptr byte
  2369  010DDC  0EFD               	movlw	high _line1
  2370  010DDE  6EF7               	movwf	tblptrh,c
  2371  010DE0                     	endif
  2372  010DE0                     	if	1	;There are 3 active tblptr bytes
  2373  010DE0  0E00               	movlw	low (_line1 shr (0+16))
  2374  010DE2  6EF8               	movwf	tblptru,c
  2375  010DE4                     	endif
  2376  010DE4  0008               	tblrd		*
  2377  010DE6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  2378  010DEA  EC72  F085         	call	_lcd_string	;wreg free
  2379                           
  2380                           ;vend.c: 59: mdb_init();
  2381  010DEE  ECB4  F088         	call	_mdb_init	;wreg free
  2382                           
  2383                           ;vend.c: 61: venflags.service = 0;
  2384  010DF2  9E30               	bcf	_venflags,7,c
  2385                           
  2386                           ;vend.c: 62: venflags.initialrun = 1;
  2387  010DF4  8A30               	bsf	_venflags,5,c
  2388                           
  2389                           ;vend.c: 63: if(credit_check() == 0)
  2390  010DF6  EC42  F08C         	call	_credit_check	;wreg free
  2391  010DFA  0900               	iorlw	0
  2392  010DFC  A4D8               	btfss	status,2,c
  2393  010DFE  D005               	goto	l1747
  2394                           
  2395                           ;vend.c: 64: {
  2396                           ;vend.c: 65: venflags.iscredit = 0;
  2397  010E00  9030               	bcf	_venflags,0,c
  2398                           
  2399                           ;vend.c: 66: venflags.inscoin = 1;
  2400  010E02  8430               	bsf	_venflags,2,c
  2401                           
  2402                           ;vend.c: 67: venflags.credisplay = 0;
  2403  010E04  9830               	bcf	_venflags,4,c
  2404                           
  2405                           ;vend.c: 68: mdbflags.noteerr = 0;
  2406  010E06  923E               	bcf	_mdbflags,1,c
  2407                           
  2408                           ;vend.c: 69: }
  2409  010E08  0012               	return	
  2410  010E0A                     l1747:
  2411                           
  2412                           ;vend.c: 70: else
  2413                           ;vend.c: 71: {
  2414                           ;vend.c: 72: venflags.iscredit = 1;
  2415  010E0A  8030               	bsf	_venflags,0,c
  2416                           
  2417                           ;vend.c: 73: venflags.inscoin = 0;
  2418  010E0C  9430               	bcf	_venflags,2,c
  2419                           
  2420                           ;vend.c: 74: venflags.credisplay = 1;
  2421  010E0E  8830               	bsf	_venflags,4,c
  2422                           
  2423                           ;vend.c: 75: mdbflags.noteerr = 0;
  2424  010E10  923E               	bcf	_mdbflags,1,c
  2425  010E12  0012               	return	
  2426  010E14                     __end_of_vend_init:
  2427                           	opt stack 0
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           status	equ	0xFD8
  2435                           
  2436 ;; *************** function _mdb_init *****************
  2437 ;; Defined at:
  2438 ;;		line 21 in file "mdb.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  i               1   28[COMRAM] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;Total ram usage:        3 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    6
  2459 ;; This function calls:
  2460 ;;		_DATAEE_ReadByte
  2461 ;;		_eusartmdb_Initialize
  2462 ;;		_mdb_comm
  2463 ;;		_mdb_noten
  2464 ;;		_mdb_reset
  2465 ;;		_mdb_security
  2466 ;; This function is called by:
  2467 ;;		_main
  2468 ;;		_vend_init
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text2
  2473  011168                     __ptext2:
  2474                           	opt stack 0
  2475  011168                     _mdb_init:
  2476                           	opt stack 23
  2477                           
  2478                           ;mdb.c: 23: _delay((unsigned long)((250)*(12000000/4000.0)));
  2479                           
  2480                           ;incstack = 0
  2481  011168  0E04               	movlw	4
  2482  01116A  6E26               	movwf	(??_mdb_init+1)& (0+255),c
  2483  01116C  0ECF               	movlw	207
  2484  01116E  6E25               	movwf	??_mdb_init& (0+255),c
  2485  011170  0E02               	movlw	2
  2486  011172                     u2447:
  2487  011172  2EE8               	decfsz	wreg,f,c
  2488  011174  D7FE               	bra	u2447
  2489  011176  2E25               	decfsz	??_mdb_init& (0+255),f,c
  2490  011178  D7FC               	bra	u2447
  2491  01117A  2E26               	decfsz	(??_mdb_init+1)& (0+255),f,c
  2492  01117C  D7FA               	bra	u2447
  2493                           
  2494                           ;mdb.c: 24: noteen_byte = DATAEE_ReadByte(notebits);
  2495  01117E  0EAB               	movlw	low _notebits
  2496  011180  6EF6               	movwf	tblptrl,c
  2497  011182                     	if	1	;There is more than 1 active tblptr byte
  2498  011182  0EFD               	movlw	high _notebits
  2499  011184  6EF7               	movwf	tblptrh,c
  2500  011186                     	endif
  2501  011186                     	if	1	;There are 3 active tblptr bytes
  2502  011186  0E00               	movlw	low (_notebits shr (0+16))
  2503  011188  6EF8               	movwf	tblptru,c
  2504  01118A                     	endif
  2505  01118A  0009               	tblrd		*+
  2506  01118C  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  2507  011190  000A               	tblrd		*-
  2508  011192  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  2509  011196  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  2510  01119A  6E3C               	movwf	_noteen_byte,c	;volatile
  2511                           
  2512                           ;mdb.c: 25: ((uint8_t*) &noteen)[0] = noteen_byte;
  2513  01119C  C03C  F03D         	movff	_noteen_byte,_noteen	;volatile
  2514                           
  2515                           ;mdb.c: 26: eusartmdb_Initialize();
  2516  0111A0  ECC0  F08C         	call	_eusartmdb_Initialize	;wreg free
  2517                           
  2518                           ;mdb.c: 27: mdbflags.noteerr = 0;
  2519  0111A4  923E               	bcf	_mdbflags,1,c
  2520                           
  2521                           ;mdb.c: 28: mdbflags.isdata = 0;
  2522  0111A6  903E               	bcf	_mdbflags,0,c
  2523                           
  2524                           ;mdb.c: 29: mdb_reset();
  2525  0111A8  EC0A  F087         	call	_mdb_reset	;wreg free
  2526                           
  2527                           ;mdb.c: 30: mdb_noten();
  2528  0111AC  EC50  F08A         	call	_mdb_noten	;wreg free
  2529                           
  2530                           ;mdb.c: 31: mdb_security();
  2531  0111B0  EC53  F08C         	call	_mdb_security	;wreg free
  2532                           
  2533                           ;mdb.c: 32: uint8_t i = mdb_comm(note_poll, 0x00);
  2534  0111B4  0E00               	movlw	0
  2535  0111B6  6E1F               	movwf	mdb_comm@mcount,c
  2536  0111B8  0EDC               	movlw	low _note_poll
  2537  0111BA  6EF6               	movwf	tblptrl,c
  2538  0111BC                     	if	1	;There is more than 1 active tblptr byte
  2539  0111BC  0EFD               	movlw	high _note_poll
  2540  0111BE  6EF7               	movwf	tblptrh,c
  2541  0111C0                     	endif
  2542  0111C0                     	if	1	;There are 3 active tblptr bytes
  2543  0111C0  0E00               	movlw	low (_note_poll shr (0+16))
  2544  0111C2  6EF8               	movwf	tblptru,c
  2545  0111C4                     	endif
  2546  0111C4  0008               	tblrd		*
  2547  0111C6  50F5               	movf	tablat,w,c
  2548  0111C8  EC24  F082         	call	_mdb_comm
  2549  0111CC  6E27               	movwf	mdb_init@i,c
  2550  0111CE  0012               	return		;funcret
  2551  0111D0                     __end_of_mdb_init:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           postinc0	equ	0xFEE
  2558                           wreg	equ	0xFE8
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _mdb_security *****************
  2562 ;; Defined at:
  2563 ;;		line 151 in file "mdb.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    5
  2584 ;; This function calls:
  2585 ;;		_init_mdbdata
  2586 ;;		_mdb_comm
  2587 ;; This function is called by:
  2588 ;;		_mdb_init
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text3
  2593  0118A6                     __ptext3:
  2594                           	opt stack 0
  2595  0118A6                     _mdb_security:
  2596                           	opt stack 23
  2597                           
  2598                           ;mdb.c: 153: init_mdbdata(0x00);
  2599                           
  2600                           ;incstack = 0
  2601  0118A6  0E00               	movlw	0
  2602  0118A8  EC1E  F08C         	call	_init_mdbdata
  2603                           
  2604                           ;mdb.c: 154: mdb_comm(note_security, 0x01);
  2605  0118AC  0E01               	movlw	1
  2606  0118AE  6E1F               	movwf	mdb_comm@mcount,c
  2607  0118B0  0EDD               	movlw	low _note_security
  2608  0118B2  6EF6               	movwf	tblptrl,c
  2609  0118B4                     	if	1	;There is more than 1 active tblptr byte
  2610  0118B4  0EFD               	movlw	high _note_security
  2611  0118B6  6EF7               	movwf	tblptrh,c
  2612  0118B8                     	endif
  2613  0118B8                     	if	1	;There are 3 active tblptr bytes
  2614  0118B8  0E00               	movlw	low (_note_security shr (0+16))
  2615  0118BA  6EF8               	movwf	tblptru,c
  2616  0118BC                     	endif
  2617  0118BC  0008               	tblrd		*
  2618  0118BE  50F5               	movf	tablat,w,c
  2619  0118C0  EC24  F082         	call	_mdb_comm
  2620  0118C4  0012               	return		;funcret
  2621  0118C6                     __end_of_mdb_security:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           status	equ	0xFD8
  2630                           
  2631 ;; *************** function _mdb_reset *****************
  2632 ;; Defined at:
  2633 ;;		line 36 in file "mdb.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  i               1   24[COMRAM] unsigned char 
  2638 ;;  i               1   25[COMRAM] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      unsigned char 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        3 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    5
  2655 ;; This function calls:
  2656 ;;		_mdb_comm
  2657 ;; This function is called by:
  2658 ;;		_mdb_init
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text4
  2663  010E14                     __ptext4:
  2664                           	opt stack 0
  2665  010E14                     _mdb_reset:
  2666                           	opt stack 23
  2667                           
  2668                           ;mdb.c: 41: mdbflags.timeout = 1;
  2669                           
  2670                           ;incstack = 0
  2671  010E14  863E               	bsf	_mdbflags,3,c
  2672                           
  2673                           ;mdb.c: 42: while(mdbflags.timeout)
  2674  010E16  D00D               	goto	l2322
  2675  010E18                     
  2676                           ;mdb.c: 43: {
  2677                           ;mdb.c: 44: uint8_t i = mdb_comm(note_reset, 0x00);
  2678  010E18  0E00               	movlw	0
  2679  010E1A  6E1F               	movwf	mdb_comm@mcount,c
  2680  010E1C  0EDF               	movlw	low _note_reset
  2681  010E1E  6EF6               	movwf	tblptrl,c
  2682  010E20                     	if	1	;There is more than 1 active tblptr byte
  2683  010E20  0EFD               	movlw	high _note_reset
  2684  010E22  6EF7               	movwf	tblptrh,c
  2685  010E24                     	endif
  2686  010E24                     	if	1	;There are 3 active tblptr bytes
  2687  010E24  0E00               	movlw	low (_note_reset shr (0+16))
  2688  010E26  6EF8               	movwf	tblptru,c
  2689  010E28                     	endif
  2690  010E28  0008               	tblrd		*
  2691  010E2A  50F5               	movf	tablat,w,c
  2692  010E2C  EC24  F082         	call	_mdb_comm
  2693  010E30  6E23               	movwf	mdb_reset@i,c
  2694  010E32                     l2322:
  2695  010E32  B63E               	btfsc	_mdbflags,3,c
  2696  010E34  D7F1               	goto	l2323
  2697  010E36  F000               	nop		;# 
  2698                           
  2699                           ;mdb.c: 47: uint8_t i = mdb_comm(note_poll, 0x00);
  2700  010E38  0E00               	movlw	0
  2701  010E3A  6E1F               	movwf	mdb_comm@mcount,c
  2702  010E3C  0EDC               	movlw	low _note_poll
  2703  010E3E  6EF6               	movwf	tblptrl,c
  2704  010E40                     	if	1	;There is more than 1 active tblptr byte
  2705  010E40  0EFD               	movlw	high _note_poll
  2706  010E42  6EF7               	movwf	tblptrh,c
  2707  010E44                     	endif
  2708  010E44                     	if	1	;There are 3 active tblptr bytes
  2709  010E44  0E00               	movlw	low (_note_poll shr (0+16))
  2710  010E46  6EF8               	movwf	tblptru,c
  2711  010E48                     	endif
  2712  010E48  0008               	tblrd		*
  2713  010E4A  50F5               	movf	tablat,w,c
  2714  010E4C  EC24  F082         	call	_mdb_comm
  2715  010E50  6E24               	movwf	mdb_reset@i_3119,c
  2716                           
  2717                           ;mdb.c: 48: if(mdbdata[--i] == just_reset)
  2718  010E52  0624               	decf	mdb_reset@i_3119,f,c
  2719  010E54  5024               	movf	mdb_reset@i_3119,w,c
  2720  010E56  0D01               	mullw	1
  2721  010E58  0E60               	movlw	low _mdbdata
  2722  010E5A  24F3               	addwf	prodl,w,c
  2723  010E5C  6ED9               	movwf	fsr2l,c
  2724  010E5E  0E00               	movlw	high _mdbdata
  2725  010E60  20F4               	addwfc	prodh,w,c
  2726  010E62  6EDA               	movwf	fsr2h,c
  2727  010E64  50DF               	movf	indf2,w,c
  2728  010E66  6E22               	movwf	??_mdb_reset& (0+255),c
  2729  010E68  0ED2               	movlw	low _just_reset
  2730  010E6A  6EF6               	movwf	tblptrl,c
  2731  010E6C                     	if	1	;There is more than 1 active tblptr byte
  2732  010E6C  0EFD               	movlw	high _just_reset
  2733  010E6E  6EF7               	movwf	tblptrh,c
  2734  010E70                     	endif
  2735  010E70                     	if	1	;There are 3 active tblptr bytes
  2736  010E70  0E00               	movlw	low (_just_reset shr (0+16))
  2737  010E72  6EF8               	movwf	tblptru,c
  2738  010E74                     	endif
  2739  010E74  0008               	tblrd		*
  2740  010E76  50F5               	movf	tablat,w,c
  2741  010E78  1822               	xorwf	??_mdb_reset,w,c
  2742  010E7A  A4D8               	btfss	status,2,c
  2743  010E7C  0012               	return	
  2744                           
  2745                           ;mdb.c: 49: {
  2746                           ;mdb.c: 51: i = mdb_comm(note_poll, 0x00);
  2747  010E7E  0E00               	movlw	0
  2748  010E80  6E1F               	movwf	mdb_comm@mcount,c
  2749  010E82  0EDC               	movlw	low _note_poll
  2750  010E84  6EF6               	movwf	tblptrl,c
  2751  010E86                     	if	1	;There is more than 1 active tblptr byte
  2752  010E86  0EFD               	movlw	high _note_poll
  2753  010E88  6EF7               	movwf	tblptrh,c
  2754  010E8A                     	endif
  2755  010E8A                     	if	1	;There are 3 active tblptr bytes
  2756  010E8A  0E00               	movlw	low (_note_poll shr (0+16))
  2757  010E8C  6EF8               	movwf	tblptru,c
  2758  010E8E                     	endif
  2759  010E8E  0008               	tblrd		*
  2760  010E90  50F5               	movf	tablat,w,c
  2761  010E92  EC24  F082         	call	_mdb_comm
  2762  010E96  6E24               	movwf	mdb_reset@i_3119,c
  2763  010E98  0012               	return	
  2764  010E9A                     __end_of_mdb_reset:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           indf2	equ	0xFDF
  2775                           fsr2h	equ	0xFDA
  2776                           fsr2l	equ	0xFD9
  2777                           status	equ	0xFD8
  2778                           
  2779 ;; *************** function _mdb_noten *****************
  2780 ;; Defined at:
  2781 ;;		line 135 in file "mdb.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    5
  2802 ;; This function calls:
  2803 ;;		_init_mdbdata
  2804 ;;		_mdb_comm
  2805 ;; This function is called by:
  2806 ;;		_mdb_init
  2807 ;;		_note_disable
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text5
  2812  0114A0                     __ptext5:
  2813                           	opt stack 0
  2814  0114A0                     _mdb_noten:
  2815                           	opt stack 23
  2816                           
  2817                           ;mdb.c: 138: init_mdbdata(0x00);
  2818                           
  2819                           ;incstack = 0
  2820  0114A0  0E00               	movlw	0
  2821  0114A2  EC1E  F08C         	call	_init_mdbdata
  2822                           
  2823                           ;mdb.c: 140: mcount = 3;
  2824  0114A6  0E03               	movlw	3
  2825  0114A8  6E41               	movwf	_mcount,c
  2826                           
  2827                           ;mdb.c: 142: mdbdata[0] = 0x00;
  2828  0114AA  0E00               	movlw	0
  2829  0114AC  0100               	movlb	0	; () banked
  2830  0114AE  6F60               	movwf	_mdbdata& (0+255),b
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;mdb.c: 143: mdbdata[1] = 0x00;
  2834  0114B0  0E00               	movlw	0
  2835  0114B2  6F61               	movwf	(_mdbdata+1)& (0+255),b
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;mdb.c: 145: mdbdata[2] = noteen_byte;
  2839  0114B4  C03C  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;mdb.c: 147: mdbdata[3] = 0x00;
  2843  0114B8  0E00               	movlw	0
  2844  0114BA  6F63               	movwf	(_mdbdata+3)& (0+255),b
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;mdb.c: 148: mcount = mdb_comm(note_type, mcount);
  2848  0114BC  C041  F01F         	movff	_mcount,mdb_comm@mcount
  2849  0114C0  0EDB               	movlw	low _note_type
  2850  0114C2  6EF6               	movwf	tblptrl,c
  2851  0114C4                     	if	1	;There is more than 1 active tblptr byte
  2852  0114C4  0EFD               	movlw	high _note_type
  2853  0114C6  6EF7               	movwf	tblptrh,c
  2854  0114C8                     	endif
  2855  0114C8                     	if	1	;There are 3 active tblptr bytes
  2856  0114C8  0E00               	movlw	low (_note_type shr (0+16))
  2857  0114CA  6EF8               	movwf	tblptru,c
  2858  0114CC                     	endif
  2859  0114CC  0008               	tblrd		*
  2860  0114CE  50F5               	movf	tablat,w,c
  2861  0114D0  EC24  F082         	call	_mdb_comm
  2862  0114D4  6E41               	movwf	_mcount,c
  2863                           
  2864                           ;mdb.c: 149: mdbflags.vending = 0;
  2865  0114D6  983E               	bcf	_mdbflags,4,c
  2866  0114D8  0012               	return		;funcret
  2867  0114DA                     __end_of_mdb_noten:
  2868                           	opt stack 0
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           prodh	equ	0xFF4
  2874                           prodl	equ	0xFF3
  2875                           postinc0	equ	0xFEE
  2876                           wreg	equ	0xFE8
  2877                           indf2	equ	0xFDF
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8
  2881                           
  2882 ;; *************** function _cctalk_init *****************
  2883 ;; Defined at:
  2884 ;;		line 9 in file "cctalk.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;Total ram usage:        1 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    6
  2905 ;; This function calls:
  2906 ;;		_cctalk_adpoll
  2907 ;;		_cctalk_on
  2908 ;;		_cctalk_pinenter
  2909 ;;		_cctalk_poll
  2910 ;;		_eusartmdb_Initialize
  2911 ;;		_mdb_on
  2912 ;; This function is called by:
  2913 ;;		_vend_init
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text6
  2918  0113DA                     __ptext6:
  2919                           	opt stack 0
  2920  0113DA                     _cctalk_init:
  2921                           	opt stack 23
  2922                           
  2923                           ;cctalk.c: 11: cctalk_on();
  2924                           
  2925                           ;incstack = 0
  2926  0113DA  EC2F  F08D         	call	_cctalk_on	;wreg free
  2927                           
  2928                           ;cctalk.c: 12: cctflags.timeout = 1;
  2929  0113DE  863B               	bsf	_cctflags,3,c
  2930                           
  2931                           ;cctalk.c: 13: cctalk_adpoll();
  2932  0113E0  EC63  F08C         	call	_cctalk_adpoll	;wreg free
  2933                           
  2934                           ;cctalk.c: 14: cctalk_pinenter();
  2935  0113E4  EC12  F08B         	call	_cctalk_pinenter	;wreg free
  2936                           
  2937                           ;cctalk.c: 15: count = 0;
  2938  0113E8  0E00               	movlw	0
  2939  0113EA  6E4C               	movwf	_count,c
  2940                           
  2941                           ;cctalk.c: 16: while(cctflags.timeout && count < 0x03)
  2942  0113EC  D00B               	goto	l2806
  2943  0113EE                     
  2944                           ;cctalk.c: 17: {
  2945                           ;cctalk.c: 18: _delay((unsigned long)((50)*(12000000/4000.0)));
  2946  0113EE  0EC3               	movlw	195
  2947  0113F0  6E25               	movwf	??_cctalk_init& (0+255),c
  2948  0113F2  0ECD               	movlw	205
  2949  0113F4                     u2457:
  2950  0113F4  2EE8               	decfsz	wreg,f,c
  2951  0113F6  D7FE               	bra	u2457
  2952  0113F8  2E25               	decfsz	??_cctalk_init& (0+255),f,c
  2953  0113FA  D7FC               	bra	u2457
  2954  0113FC  F000               	nop	
  2955                           
  2956                           ;cctalk.c: 19: cctalk_poll();
  2957  0113FE  ECDC  F08B         	call	_cctalk_poll	;wreg free
  2958                           
  2959                           ;cctalk.c: 20: count++;
  2960  011402  2A4C               	incf	_count,f,c
  2961  011404                     l2806:
  2962  011404  A63B               	btfss	_cctflags,3,c
  2963  011406  D005               	goto	u1690
  2964  011408  504C               	movf	_count,w,c
  2965  01140A  0A80               	xorlw	128
  2966  01140C  0F7D               	addlw	-131
  2967  01140E  A0D8               	btfss	status,0,c
  2968  011410  D7EE               	goto	l2807
  2969  011412                     u1690:
  2970  011412  F000               	nop		;# 
  2971                           
  2972                           ;cctalk.c: 23: eusartmdb_Initialize();
  2973  011414  ECC0  F08C         	call	_eusartmdb_Initialize	;wreg free
  2974                           
  2975                           ;cctalk.c: 24: mdb_on();
  2976  011418  EC38  F08D         	call	_mdb_on	;wreg free
  2977  01141C  0012               	return		;funcret
  2978  01141E                     __end_of_cctalk_init:
  2979                           	opt stack 0
  2980                           tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           tblptrl	equ	0xFF6
  2983                           tablat	equ	0xFF5
  2984                           prodh	equ	0xFF4
  2985                           prodl	equ	0xFF3
  2986                           postinc0	equ	0xFEE
  2987                           wreg	equ	0xFE8
  2988                           indf2	equ	0xFDF
  2989                           fsr2h	equ	0xFDA
  2990                           fsr2l	equ	0xFD9
  2991                           status	equ	0xFD8
  2992                           
  2993 ;; *************** function _eusartmdb_Initialize *****************
  2994 ;; Defined at:
  2995 ;;		line 55 in file "eusart_mdb.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    2
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_mdb_init
  3020 ;;		_cctalk_init
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text7
  3025  011980                     __ptext7:
  3026                           	opt stack 0
  3027  011980                     _eusartmdb_Initialize:
  3028                           	opt stack 26
  3029                           
  3030                           ;eusart_mdb.c: 60: BAUD1CON = 0x08;
  3031                           
  3032                           ;incstack = 0
  3033  011980  0E08               	movlw	8
  3034  011982  6E9F               	movwf	3999,c	;volatile
  3035                           
  3036                           ;eusart_mdb.c: 63: RC1STA = 0xD0;
  3037  011984  0ED0               	movlw	208
  3038  011986  6E9D               	movwf	3997,c	;volatile
  3039                           
  3040                           ;eusart_mdb.c: 66: TX1STA = 0xEC;
  3041  011988  0EEC               	movlw	236
  3042  01198A  6E9E               	movwf	3998,c	;volatile
  3043                           
  3044                           ;eusart_mdb.c: 69: SP1BRGL = 0x38;
  3045  01198C  0E38               	movlw	56
  3046  01198E  6E9B               	movwf	3995,c	;volatile
  3047                           
  3048                           ;eusart_mdb.c: 72: SP1BRGH = 0x01;
  3049  011990  0E01               	movlw	1
  3050  011992  6E9C               	movwf	3996,c	;volatile
  3051  011994  0012               	return		;funcret
  3052  011996                     __end_of_eusartmdb_Initialize:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           postinc0	equ	0xFEE
  3061                           wreg	equ	0xFE8
  3062                           indf2	equ	0xFDF
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function _cctalk_poll *****************
  3068 ;; Defined at:
  3069 ;;		line 38 in file "cctalk.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  i               1   25[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;Total ram usage:        1 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		_cctalk_comm
  3092 ;; This function is called by:
  3093 ;;		_cctalk_init
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text8
  3098  0117B8                     __ptext8:
  3099                           	opt stack 0
  3100  0117B8                     _cctalk_poll:
  3101                           	opt stack 23
  3102                           
  3103                           ;cctalk.c: 40: uint8_t i = cctalk_comm(hopadd, 0x00, cc_poll);
  3104                           
  3105                           ;incstack = 0
  3106  0117B8  0E00               	movlw	0
  3107  0117BA  6E1F               	movwf	cctalk_comm@nobytes,c
  3108  0117BC  0EBD               	movlw	low _cc_poll
  3109  0117BE  6EF6               	movwf	tblptrl,c
  3110  0117C0                     	if	1	;There is more than 1 active tblptr byte
  3111  0117C0  0EFD               	movlw	high _cc_poll
  3112  0117C2  6EF7               	movwf	tblptrh,c
  3113  0117C4                     	endif
  3114  0117C4                     	if	1	;There are 3 active tblptr bytes
  3115  0117C4  0E00               	movlw	low (_cc_poll shr (0+16))
  3116  0117C6  6EF8               	movwf	tblptru,c
  3117  0117C8                     	endif
  3118  0117C8  0008               	tblrd		*
  3119  0117CA  CFF5 F020          	movff	tablat,cctalk_comm@command
  3120  0117CE  0ECB               	movlw	low _hopadd
  3121  0117D0  6EF6               	movwf	tblptrl,c
  3122  0117D2                     	if	1	;There is more than 1 active tblptr byte
  3123  0117D2  0EFD               	movlw	high _hopadd
  3124  0117D4  6EF7               	movwf	tblptrh,c
  3125  0117D6                     	endif
  3126  0117D6                     	if	1	;There are 3 active tblptr bytes
  3127  0117D6  0E00               	movlw	low (_hopadd shr (0+16))
  3128  0117D8  6EF8               	movwf	tblptru,c
  3129  0117DA                     	endif
  3130  0117DA  0008               	tblrd		*
  3131  0117DC  50F5               	movf	tablat,w,c
  3132  0117DE  ECA6  F081         	call	_cctalk_comm
  3133  0117E2  6E24               	movwf	cctalk_poll@i,c
  3134  0117E4  0012               	return		;funcret
  3135  0117E6                     __end_of_cctalk_poll:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           prodh	equ	0xFF4
  3142                           prodl	equ	0xFF3
  3143                           postinc0	equ	0xFEE
  3144                           wreg	equ	0xFE8
  3145                           indf2	equ	0xFDF
  3146                           fsr2h	equ	0xFDA
  3147                           fsr2l	equ	0xFD9
  3148                           status	equ	0xFD8
  3149                           
  3150 ;; *************** function _cctalk_pinenter *****************
  3151 ;; Defined at:
  3152 ;;		line 32 in file "cctalk.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  i               1   25[COMRAM] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;Total ram usage:        1 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    5
  3173 ;; This function calls:
  3174 ;;		_cctalk_comm
  3175 ;;		_init_mdbdata
  3176 ;; This function is called by:
  3177 ;;		_cctalk_init
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text9
  3182  011624                     __ptext9:
  3183                           	opt stack 0
  3184  011624                     _cctalk_pinenter:
  3185                           	opt stack 23
  3186                           
  3187                           ;cctalk.c: 34: init_mdbdata(0x00);
  3188                           
  3189                           ;incstack = 0
  3190  011624  0E00               	movlw	0
  3191  011626  EC1E  F08C         	call	_init_mdbdata
  3192                           
  3193                           ;cctalk.c: 35: uint8_t i = cctalk_comm(hopadd, 0x04, cc_pin);
  3194  01162A  0E04               	movlw	4
  3195  01162C  6E1F               	movwf	cctalk_comm@nobytes,c
  3196  01162E  0EC1               	movlw	low _cc_pin
  3197  011630  6EF6               	movwf	tblptrl,c
  3198  011632                     	if	1	;There is more than 1 active tblptr byte
  3199  011632  0EFD               	movlw	high _cc_pin
  3200  011634  6EF7               	movwf	tblptrh,c
  3201  011636                     	endif
  3202  011636                     	if	1	;There are 3 active tblptr bytes
  3203  011636  0E00               	movlw	low (_cc_pin shr (0+16))
  3204  011638  6EF8               	movwf	tblptru,c
  3205  01163A                     	endif
  3206  01163A  0008               	tblrd		*
  3207  01163C  CFF5 F020          	movff	tablat,cctalk_comm@command
  3208  011640  0ECB               	movlw	low _hopadd
  3209  011642  6EF6               	movwf	tblptrl,c
  3210  011644                     	if	1	;There is more than 1 active tblptr byte
  3211  011644  0EFD               	movlw	high _hopadd
  3212  011646  6EF7               	movwf	tblptrh,c
  3213  011648                     	endif
  3214  011648                     	if	1	;There are 3 active tblptr bytes
  3215  011648  0E00               	movlw	low (_hopadd shr (0+16))
  3216  01164A  6EF8               	movwf	tblptru,c
  3217  01164C                     	endif
  3218  01164C  0008               	tblrd		*
  3219  01164E  50F5               	movf	tablat,w,c
  3220  011650  ECA6  F081         	call	_cctalk_comm
  3221  011654  6E24               	movwf	cctalk_pinenter@i,c
  3222  011656  0012               	return		;funcret
  3223  011658                     __end_of_cctalk_pinenter:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           prodh	equ	0xFF4
  3230                           prodl	equ	0xFF3
  3231                           postinc0	equ	0xFEE
  3232                           wreg	equ	0xFE8
  3233                           indf2	equ	0xFDF
  3234                           fsr2h	equ	0xFDA
  3235                           fsr2l	equ	0xFD9
  3236                           status	equ	0xFD8
  3237                           
  3238 ;; *************** function _cctalk_on *****************
  3239 ;; Defined at:
  3240 ;;		line 132 in file "cctalk.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		None
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    2
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_cctalk_init
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text10
  3269  011A5E                     __ptext10:
  3270                           	opt stack 0
  3271  011A5E                     _cctalk_on:
  3272                           	opt stack 26
  3273                           
  3274                           ;cctalk.c: 138: LATCbits.LATC0 = 0;
  3275                           
  3276                           ;incstack = 0
  3277  011A5E  9085               	bcf	3973,0,c	;volatile
  3278                           
  3279                           ;cctalk.c: 139: LATCbits.LATC1 = 1;
  3280  011A60  8285               	bsf	3973,1,c	;volatile
  3281  011A62  0012               	return		;funcret
  3282  011A64                     __end_of_cctalk_on:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           prodh	equ	0xFF4
  3289                           prodl	equ	0xFF3
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           indf2	equ	0xFDF
  3293                           fsr2h	equ	0xFDA
  3294                           fsr2l	equ	0xFD9
  3295                           status	equ	0xFD8
  3296                           
  3297 ;; *************** function _cctalk_adpoll *****************
  3298 ;; Defined at:
  3299 ;;		line 27 in file "cctalk.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  i               1   25[COMRAM] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;Total ram usage:        1 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    5
  3320 ;; This function calls:
  3321 ;;		_cctalk_comm
  3322 ;; This function is called by:
  3323 ;;		_cctalk_init
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text11
  3328  0118C6                     __ptext11:
  3329                           	opt stack 0
  3330  0118C6                     _cctalk_adpoll:
  3331                           	opt stack 23
  3332                           
  3333                           ;cctalk.c: 29: uint8_t i = cctalk_comm(0x00, 0x00, cc_adpoll);
  3334                           
  3335                           ;incstack = 0
  3336  0118C6  0E00               	movlw	0
  3337  0118C8  6E1F               	movwf	cctalk_comm@nobytes,c
  3338  0118CA  0EBE               	movlw	low _cc_adpoll
  3339  0118CC  6EF6               	movwf	tblptrl,c
  3340  0118CE                     	if	1	;There is more than 1 active tblptr byte
  3341  0118CE  0EFD               	movlw	high _cc_adpoll
  3342  0118D0  6EF7               	movwf	tblptrh,c
  3343  0118D2                     	endif
  3344  0118D2                     	if	1	;There are 3 active tblptr bytes
  3345  0118D2  0E00               	movlw	low (_cc_adpoll shr (0+16))
  3346  0118D4  6EF8               	movwf	tblptru,c
  3347  0118D6                     	endif
  3348  0118D6  0008               	tblrd		*
  3349  0118D8  CFF5 F020          	movff	tablat,cctalk_comm@command
  3350  0118DC  0E00               	movlw	0
  3351  0118DE  ECA6  F081         	call	_cctalk_comm
  3352  0118E2  6E24               	movwf	cctalk_adpoll@i,c
  3353  0118E4  0012               	return		;funcret
  3354  0118E6                     __end_of_cctalk_adpoll:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           tblptrh	equ	0xFF7
  3358                           tblptrl	equ	0xFF6
  3359                           tablat	equ	0xFF5
  3360                           prodh	equ	0xFF4
  3361                           prodl	equ	0xFF3
  3362                           postinc0	equ	0xFEE
  3363                           wreg	equ	0xFE8
  3364                           indf2	equ	0xFDF
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function _cctalk_comm *****************
  3370 ;; Defined at:
  3371 ;;		line 56 in file "cctalk.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  dest            1    wreg     unsigned char 
  3374 ;;  nobytes         1   20[COMRAM] unsigned char 
  3375 ;;  command         1   21[COMRAM] unsigned char 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  dest            1   24[COMRAM] unsigned char 
  3378 ;;  i               1   23[COMRAM] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      unsigned char 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;Total ram usage:        5 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    4
  3395 ;; This function calls:
  3396 ;;		_TMR3_Initialize
  3397 ;;		_cctalk_read
  3398 ;;		_init_mdbdata
  3399 ;;		_mdb_transmit
  3400 ;; This function is called by:
  3401 ;;		_cctalk_adpoll
  3402 ;;		_cctalk_pinenter
  3403 ;;		_cctalk_poll
  3404 ;;		_cctalk_serial
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text12
  3409  01034C                     __ptext12:
  3410                           	opt stack 0
  3411  01034C                     _cctalk_comm:
  3412                           	opt stack 23
  3413                           
  3414                           ;incstack = 0
  3415                           ;cctalk_comm@dest stored from wreg
  3416  01034C  6E23               	movwf	cctalk_comm@dest,c
  3417                           
  3418                           ;cctalk.c: 59: uint8_t i = 0;
  3419  01034E  0E00               	movlw	0
  3420  010350  6E22               	movwf	cctalk_comm@i,c
  3421                           
  3422                           ;cctalk.c: 63: i = RC1REG;
  3423  010352  CF99 F022          	movff	3993,cctalk_comm@i	;volatile
  3424                           
  3425                           ;cctalk.c: 65: i = 0;
  3426  010356  0E00               	movlw	0
  3427  010358  6E22               	movwf	cctalk_comm@i,c
  3428                           
  3429                           ;cctalk.c: 68: chkbyte = dest + nobytes + command + mastadd;
  3430  01035A  0ECA               	movlw	low _mastadd
  3431  01035C  6EF6               	movwf	tblptrl,c
  3432  01035E                     	if	1	;There is more than 1 active tblptr byte
  3433  01035E  0EFD               	movlw	high _mastadd
  3434  010360  6EF7               	movwf	tblptrh,c
  3435  010362                     	endif
  3436  010362                     	if	1	;There are 3 active tblptr bytes
  3437  010362  0E00               	movlw	low (_mastadd shr (0+16))
  3438  010364  6EF8               	movwf	tblptru,c
  3439  010366                     	endif
  3440  010366  0008               	tblrd		*
  3441  010368  CFF5 F021          	movff	tablat,??_cctalk_comm
  3442  01036C  5023               	movf	cctalk_comm@dest,w,c
  3443  01036E  241F               	addwf	cctalk_comm@nobytes,w,c
  3444  010370  2420               	addwf	cctalk_comm@command,w,c
  3445  010372  2421               	addwf	??_cctalk_comm,w,c
  3446  010374  6E3F               	movwf	_chkbyte,c
  3447                           
  3448                           ;cctalk.c: 69: mdb_transmit(dest);
  3449  010376  5023               	movf	cctalk_comm@dest,w,c
  3450  010378  ECFD  F08C         	call	_mdb_transmit
  3451                           
  3452                           ;cctalk.c: 71: mdb_transmit(nobytes);
  3453  01037C  501F               	movf	cctalk_comm@nobytes,w,c
  3454  01037E  ECFD  F08C         	call	_mdb_transmit
  3455                           
  3456                           ;cctalk.c: 73: mdb_transmit(mastadd);
  3457  010382  0ECA               	movlw	low _mastadd
  3458  010384  6EF6               	movwf	tblptrl,c
  3459  010386                     	if	1	;There is more than 1 active tblptr byte
  3460  010386  0EFD               	movlw	high _mastadd
  3461  010388  6EF7               	movwf	tblptrh,c
  3462  01038A                     	endif
  3463  01038A                     	if	1	;There are 3 active tblptr bytes
  3464  01038A  0E00               	movlw	low (_mastadd shr (0+16))
  3465  01038C  6EF8               	movwf	tblptru,c
  3466  01038E                     	endif
  3467  01038E  0008               	tblrd		*
  3468  010390  50F5               	movf	tablat,w,c
  3469  010392  ECFD  F08C         	call	_mdb_transmit
  3470                           
  3471                           ;cctalk.c: 75: mdb_transmit(command);
  3472  010396  5020               	movf	cctalk_comm@command,w,c
  3473  010398  ECFD  F08C         	call	_mdb_transmit
  3474                           
  3475                           ;cctalk.c: 77: while(nobytes != 0)
  3476  01039C  D017               	goto	l2827
  3477  01039E                     
  3478                           ;cctalk.c: 78: {
  3479                           ;cctalk.c: 79: chkbyte = mdbdata[nobytes] + chkbyte;
  3480  01039E  501F               	movf	cctalk_comm@nobytes,w,c
  3481  0103A0  0D01               	mullw	1
  3482  0103A2  0E60               	movlw	low _mdbdata
  3483  0103A4  24F3               	addwf	prodl,w,c
  3484  0103A6  6ED9               	movwf	fsr2l,c
  3485  0103A8  0E00               	movlw	high _mdbdata
  3486  0103AA  20F4               	addwfc	prodh,w,c
  3487  0103AC  6EDA               	movwf	fsr2h,c
  3488  0103AE  50DF               	movf	indf2,w,c
  3489  0103B0  243F               	addwf	_chkbyte,w,c
  3490  0103B2  6E3F               	movwf	_chkbyte,c
  3491                           
  3492                           ;cctalk.c: 80: mdb_transmit(mdbdata[nobytes]);
  3493  0103B4  501F               	movf	cctalk_comm@nobytes,w,c
  3494  0103B6  0D01               	mullw	1
  3495  0103B8  0E60               	movlw	low _mdbdata
  3496  0103BA  24F3               	addwf	prodl,w,c
  3497  0103BC  6ED9               	movwf	fsr2l,c
  3498  0103BE  0E00               	movlw	high _mdbdata
  3499  0103C0  20F4               	addwfc	prodh,w,c
  3500  0103C2  6EDA               	movwf	fsr2h,c
  3501  0103C4  50DF               	movf	indf2,w,c
  3502  0103C6  ECFD  F08C         	call	_mdb_transmit
  3503                           
  3504                           ;cctalk.c: 82: nobytes--;
  3505  0103CA  061F               	decf	cctalk_comm@nobytes,f,c
  3506  0103CC                     l2827:
  3507  0103CC  501F               	movf	cctalk_comm@nobytes,w,c
  3508  0103CE  A4D8               	btfss	status,2,c
  3509  0103D0  D7E6               	goto	l2828
  3510                           
  3511                           ;cctalk.c: 83: }
  3512                           ;cctalk.c: 84: chkbyte = 0 - chkbyte;
  3513  0103D2  6C3F               	negf	_chkbyte,c
  3514                           
  3515                           ;cctalk.c: 85: mdb_transmit(chkbyte);
  3516  0103D4  503F               	movf	_chkbyte,w,c
  3517  0103D6  ECFD  F08C         	call	_mdb_transmit
  3518                           
  3519                           ;cctalk.c: 89: cctflags.timeout = 0;
  3520  0103DA  963B               	bcf	_cctflags,3,c
  3521                           
  3522                           ;cctalk.c: 90: cctflags.hoperr = 0;
  3523  0103DC  923B               	bcf	_cctflags,1,c
  3524                           
  3525                           ;cctalk.c: 93: init_mdbdata(0xFF);
  3526  0103DE  0EFF               	movlw	255
  3527  0103E0  EC1E  F08C         	call	_init_mdbdata
  3528                           
  3529                           ;cctalk.c: 94: RC1STAbits.SPEN = 0;
  3530  0103E4  9E9D               	bcf	3997,7,c	;volatile
  3531                           
  3532                           ;cctalk.c: 95: RC1STAbits.SPEN = 1;
  3533  0103E6  8E9D               	bsf	3997,7,c	;volatile
  3534                           
  3535                           ;cctalk.c: 96: chkbyte = RC1REG;
  3536  0103E8  CF99 F03F          	movff	3993,_chkbyte	;volatile
  3537                           
  3538                           ;cctalk.c: 98: TMR3_Initialize();
  3539  0103EC  ECDC  F08A         	call	_TMR3_Initialize	;wreg free
  3540                           
  3541                           ;cctalk.c: 99: while(!cctflags.timeout)
  3542  0103F0  D016               	goto	u1407
  3543  0103F2                     
  3544                           ;cctalk.c: 100: {
  3545                           ;cctalk.c: 102: dest = cctalk_read();
  3546  0103F2  EC73  F08C         	call	_cctalk_read	;wreg free
  3547  0103F6  6E23               	movwf	cctalk_comm@dest,c
  3548                           
  3549                           ;cctalk.c: 104: if(cctflags.isdata)
  3550  0103F8  A03B               	btfss	_cctflags,0,c
  3551  0103FA  D00B               	goto	l2832
  3552                           
  3553                           ;cctalk.c: 105: {
  3554                           ;cctalk.c: 106: mdbdata[i++] = dest;
  3555  0103FC  5022               	movf	cctalk_comm@i,w,c
  3556  0103FE  0D01               	mullw	1
  3557  010400  0E60               	movlw	low _mdbdata
  3558  010402  24F3               	addwf	prodl,w,c
  3559  010404  6ED9               	movwf	fsr2l,c
  3560  010406  0E00               	movlw	high _mdbdata
  3561  010408  20F4               	addwfc	prodh,w,c
  3562  01040A  6EDA               	movwf	fsr2h,c
  3563  01040C  C023  FFDF         	movff	cctalk_comm@dest,indf2
  3564  010410  2A22               	incf	cctalk_comm@i,f,c
  3565  010412                     l2832:
  3566                           
  3567                           ;cctalk.c: 108: }
  3568                           ;cctalk.c: 109: cctflags.timeout = PIR4bits.TMR3IF;
  3569  010412  010E               	movlb	14	; () banked
  3570  010414  A5CE               	btfss	206,2,b	;volatile
  3571  010416  D002               	bra	u1405
  3572  010418  863B               	bsf	_cctflags,3,c
  3573  01041A  D001               	bra	u1407
  3574  01041C                     u1405:
  3575  01041C  963B               	bcf	_cctflags,3,c
  3576  01041E                     u1407:
  3577  01041E  A63B               	btfss	_cctflags,3,c
  3578  010420  D7E8               	goto	l2831
  3579                           
  3580                           ;cctalk.c: 110: }
  3581                           ;cctalk.c: 111: if(mdbdata[0] == mastadd && mdbdata[3] == 0x00)
  3582  010422  0ECA               	movlw	low _mastadd
  3583  010424  6EF6               	movwf	tblptrl,c
  3584  010426                     	if	1	;There is more than 1 active tblptr byte
  3585  010426  0EFD               	movlw	high _mastadd
  3586  010428  6EF7               	movwf	tblptrh,c
  3587  01042A                     	endif
  3588  01042A                     	if	1	;There are 3 active tblptr bytes
  3589  01042A  0E00               	movlw	low (_mastadd shr (0+16))
  3590  01042C  6EF8               	movwf	tblptru,c
  3591  01042E                     	endif
  3592  01042E  0008               	tblrd		*
  3593  010430  50F5               	movf	tablat,w,c
  3594  010432  0100               	movlb	0	; () banked
  3595  010434  6360               	cpfseq	_mdbdata& (0+255),b
  3596  010436  D005               	goto	l2834
  3597                           
  3598                           ; BSR set to: 0
  3599  010438  5163               	movf	(_mdbdata+3)& (0+255),w,b
  3600  01043A  A4D8               	btfss	status,2,c
  3601  01043C  D002               	goto	l2834
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;cctalk.c: 112: {
  3605                           ;cctalk.c: 113: return i;
  3606  01043E  5022               	movf	cctalk_comm@i,w,c
  3607                           
  3608                           ; BSR set to: 0
  3609  010440  0012               	return	
  3610  010442                     l2834:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;cctalk.c: 114: }
  3614                           ;cctalk.c: 115: cctflags.timeout = 1;
  3615  010442  863B               	bsf	_cctflags,3,c
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;cctalk.c: 116: return 0x00;
  3619  010444  0E00               	movlw	0
  3620  010446  0012               	return	
  3621  010448                     __end_of_cctalk_comm:
  3622                           	opt stack 0
  3623                           tblptru	equ	0xFF8
  3624                           tblptrh	equ	0xFF7
  3625                           tblptrl	equ	0xFF6
  3626                           tablat	equ	0xFF5
  3627                           prodh	equ	0xFF4
  3628                           prodl	equ	0xFF3
  3629                           postinc0	equ	0xFEE
  3630                           wreg	equ	0xFE8
  3631                           indf2	equ	0xFDF
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _cctalk_read *****************
  3637 ;; Defined at:
  3638 ;;		line 119 in file "cctalk.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  data            1   18[COMRAM] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      unsigned char 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;Total ram usage:        1 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    3
  3659 ;; This function calls:
  3660 ;;		_EUSART1_Read
  3661 ;;		_mdb_waitr
  3662 ;; This function is called by:
  3663 ;;		_cctalk_comm
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text13
  3668  0118E6                     __ptext13:
  3669                           	opt stack 0
  3670  0118E6                     _cctalk_read:
  3671                           	opt stack 23
  3672                           
  3673                           ;cctalk.c: 121: uint8_t data = 0;
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;incstack = 0
  3677  0118E6  0E00               	movlw	0
  3678  0118E8  6E1D               	movwf	cctalk_read@data,c
  3679                           
  3680                           ;cctalk.c: 122: cctflags.isdata = 0;
  3681  0118EA  903B               	bcf	_cctflags,0,c
  3682                           
  3683                           ;cctalk.c: 123: while(PIR3bits.RC1IF)
  3684  0118EC  D006               	goto	l2838
  3685  0118EE                     
  3686                           ;cctalk.c: 124: {
  3687                           ;cctalk.c: 125: data = EUSART1_Read();
  3688  0118EE  ECEB  F08C         	call	_EUSART1_Read	;wreg free
  3689  0118F2  6E1D               	movwf	cctalk_read@data,c
  3690                           
  3691                           ;cctalk.c: 126: mdb_waitr();
  3692  0118F4  EC32  F08D         	call	_mdb_waitr	;wreg free
  3693                           
  3694                           ;cctalk.c: 127: cctflags.isdata = 1;
  3695  0118F8  803B               	bsf	_cctflags,0,c
  3696  0118FA                     l2838:
  3697  0118FA  010E               	movlb	14	; () banked
  3698  0118FC  BBCD               	btfsc	205,5,b	;volatile
  3699  0118FE  D7F7               	goto	l2839
  3700                           
  3701                           ; BSR set to: 14
  3702                           ;cctalk.c: 128: }
  3703                           ;cctalk.c: 129: return data;
  3704                           
  3705                           ; BSR set to: 14
  3706  011900  501D               	movf	cctalk_read@data,w,c
  3707  011902  0012               	return	
  3708  011904                     __end_of_cctalk_read:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           postinc0	equ	0xFEE
  3717                           wreg	equ	0xFE8
  3718                           indf2	equ	0xFDF
  3719                           fsr2h	equ	0xFDA
  3720                           fsr2l	equ	0xFD9
  3721                           status	equ	0xFD8
  3722                           
  3723 ;; *************** function _Init_vendmem *****************
  3724 ;; Defined at:
  3725 ;;		line 30 in file "vend.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;		None
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  chanlink        2   22[COMRAM] PTR unsigned char 
  3730 ;;		 -> chanlink1(1), 
  3731 ;;  chanlinkbits    2   20[COMRAM] unsigned int 
  3732 ;;  i               1   24[COMRAM] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;Total ram usage:        5 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    3
  3749 ;; This function calls:
  3750 ;;		_DATAEE_ReadByte
  3751 ;; This function is called by:
  3752 ;;		_vend_init
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text14
  3757  01108E                     __ptext14:
  3758                           	opt stack 0
  3759  01108E                     _Init_vendmem:
  3760                           	opt stack 26
  3761                           
  3762                           ;vend.c: 33: ((uint8_t*) &venderr)[0] = DATAEE_ReadByte(venderrors);
  3763                           
  3764                           ; BSR set to: 14
  3765                           ;incstack = 0
  3766  01108E  0EAD               	movlw	low _venderrors
  3767  011090  6EF6               	movwf	tblptrl,c
  3768  011092                     	if	1	;There is more than 1 active tblptr byte
  3769  011092  0EFD               	movlw	high _venderrors
  3770  011094  6EF7               	movwf	tblptrh,c
  3771  011096                     	endif
  3772  011096                     	if	1	;There are 3 active tblptr bytes
  3773  011096  0E00               	movlw	low (_venderrors shr (0+16))
  3774  011098  6EF8               	movwf	tblptru,c
  3775  01109A                     	endif
  3776  01109A  0009               	tblrd		*+
  3777  01109C  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3778  0110A0  000A               	tblrd		*-
  3779  0110A2  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3780  0110A6  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  3781  0110AA  6E34               	movwf	_venderr,c
  3782                           
  3783                           ;vend.c: 35: uint16_t chanlinkbits = chan1linkbits;
  3784  0110AC  0EA3               	movlw	low _chan1linkbits
  3785  0110AE  6EF6               	movwf	tblptrl,c
  3786  0110B0                     	if	1	;There is more than 1 active tblptr byte
  3787  0110B0  0EFD               	movlw	high _chan1linkbits
  3788  0110B2  6EF7               	movwf	tblptrh,c
  3789  0110B4                     	endif
  3790  0110B4                     	if	1	;There are 3 active tblptr bytes
  3791  0110B4  0E00               	movlw	low (_chan1linkbits shr (0+16))
  3792  0110B6  6EF8               	movwf	tblptru,c
  3793  0110B8                     	endif
  3794  0110B8  0009               	tblrd		*+
  3795  0110BA  CFF5 F01F          	movff	tablat,Init_vendmem@chanlinkbits
  3796  0110BE  000A               	tblrd		*-
  3797  0110C0  CFF5 F020          	movff	tablat,Init_vendmem@chanlinkbits+1
  3798                           
  3799                           ;vend.c: 36: uint8_t *chanlink = ((uint8_t*) &chanlink1);
  3800  0110C4  0E03               	movlw	3
  3801  0110C6  6E21               	movwf	Init_vendmem@chanlink,c
  3802  0110C8  0E00               	movlw	0
  3803  0110CA  6E22               	movwf	Init_vendmem@chanlink+1,c
  3804                           
  3805                           ;vend.c: 37: char i = 0;
  3806  0110CC  0E00               	movlw	0
  3807  0110CE  6E23               	movwf	Init_vendmem@i,c
  3808                           
  3809                           ;vend.c: 38: while(i < 8)
  3810  0110D0  D012               	goto	l1741
  3811  0110D2                     
  3812                           ;vend.c: 39: {
  3813                           ;vend.c: 40: chanlink[i] = DATAEE_ReadByte(chanlinkbits + i);
  3814  0110D2  5023               	movf	Init_vendmem@i,w,c
  3815  0110D4  0D01               	mullw	1
  3816  0110D6  50F3               	movf	prodl,w,c
  3817  0110D8  2421               	addwf	Init_vendmem@chanlink,w,c
  3818  0110DA  6ED9               	movwf	fsr2l,c
  3819  0110DC  50F4               	movf	prodh,w,c
  3820  0110DE  2022               	addwfc	Init_vendmem@chanlink+1,w,c
  3821  0110E0  6EDA               	movwf	fsr2h,c
  3822  0110E2  5023               	movf	Init_vendmem@i,w,c
  3823  0110E4  241F               	addwf	Init_vendmem@chanlinkbits,w,c
  3824  0110E6  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  3825  0110E8  0E00               	movlw	0
  3826  0110EA  2020               	addwfc	Init_vendmem@chanlinkbits+1,w,c
  3827  0110EC  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  3828  0110EE  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  3829  0110F2  6EDF               	movwf	indf2,c
  3830                           
  3831                           ;vend.c: 41: i++;
  3832  0110F4  2A23               	incf	Init_vendmem@i,f,c
  3833  0110F6                     l1741:
  3834  0110F6  0E07               	movlw	7
  3835  0110F8  6423               	cpfsgt	Init_vendmem@i,c
  3836  0110FA  D7EB               	goto	l1742
  3837  0110FC  0012               	return	
  3838  0110FE                     __end_of_Init_vendmem:
  3839                           	opt stack 0
  3840                           tblptru	equ	0xFF8
  3841                           tblptrh	equ	0xFF7
  3842                           tblptrl	equ	0xFF6
  3843                           tablat	equ	0xFF5
  3844                           prodh	equ	0xFF4
  3845                           prodl	equ	0xFF3
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           indf2	equ	0xFDF
  3849                           fsr2h	equ	0xFDA
  3850                           fsr2l	equ	0xFD9
  3851                           status	equ	0xFD8
  3852                           
  3853 ;; *************** function _DAC1_SetOutput *****************
  3854 ;; Defined at:
  3855 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  inputData       1    wreg     unsigned char 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  inputData       1   18[COMRAM] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;Total ram usage:        1 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    2
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_vend_init
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text15
  3884  011A3E                     __ptext15:
  3885                           	opt stack 0
  3886  011A3E                     _DAC1_SetOutput:
  3887                           	opt stack 27
  3888                           
  3889                           ;incstack = 0
  3890                           ;DAC1_SetOutput@inputData stored from wreg
  3891  011A3E  6E1D               	movwf	DAC1_SetOutput@inputData,c
  3892                           
  3893                           ;dac1.c: 67: DAC1CON1 = inputData;
  3894  011A40  C01D  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  3895  011A44  0012               	return		;funcret
  3896  011A46                     __end_of_DAC1_SetOutput:
  3897                           	opt stack 0
  3898                           tblptru	equ	0xFF8
  3899                           tblptrh	equ	0xFF7
  3900                           tblptrl	equ	0xFF6
  3901                           tablat	equ	0xFF5
  3902                           prodh	equ	0xFF4
  3903                           prodl	equ	0xFF3
  3904                           postinc0	equ	0xFEE
  3905                           wreg	equ	0xFE8
  3906                           indf2	equ	0xFDF
  3907                           fsr2h	equ	0xFDA
  3908                           fsr2l	equ	0xFD9
  3909                           status	equ	0xFD8
  3910                           
  3911 ;; *************** function _mdb_poll *****************
  3912 ;; Defined at:
  3913 ;;		line 157 in file "mdb.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  i               1   23[COMRAM] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      unsigned char 
  3920 ;; Registers used:
  3921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;Total ram usage:        1 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    5
  3934 ;; This function calls:
  3935 ;;		_TMR3_Initialize
  3936 ;;		_mdb_comm
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text16
  3943  010124                     __ptext16:
  3944                           	opt stack 0
  3945  010124                     _mdb_poll:
  3946                           	opt stack 25
  3947                           
  3948                           ;mdb.c: 161: TMR3_Initialize();
  3949                           
  3950                           ;incstack = 0
  3951  010124  ECDC  F08A         	call	_TMR3_Initialize	;wreg free
  3952                           
  3953                           ;mdb.c: 162: uint8_t i = mdb_comm(note_poll, 0x00);
  3954  010128  0E00               	movlw	0
  3955  01012A  6E1F               	movwf	mdb_comm@mcount,c
  3956  01012C  0EDC               	movlw	low _note_poll
  3957  01012E  6EF6               	movwf	tblptrl,c
  3958  010130                     	if	1	;There is more than 1 active tblptr byte
  3959  010130  0EFD               	movlw	high _note_poll
  3960  010132  6EF7               	movwf	tblptrh,c
  3961  010134                     	endif
  3962  010134                     	if	1	;There are 3 active tblptr bytes
  3963  010134  0E00               	movlw	low (_note_poll shr (0+16))
  3964  010136  6EF8               	movwf	tblptru,c
  3965  010138                     	endif
  3966  010138  0008               	tblrd		*
  3967  01013A  50F5               	movf	tablat,w,c
  3968  01013C  EC24  F082         	call	_mdb_comm
  3969  010140  6E22               	movwf	mdb_poll@i,c
  3970                           
  3971                           ;mdb.c: 163: notebyte = mdbdata[0];
  3972  010142  C060  F040         	movff	_mdbdata,_notebyte
  3973                           
  3974                           ;mdb.c: 165: if((mdbdata[0] & 0x80) != 0)
  3975  010146  0100               	movlb	0	; () banked
  3976  010148  AF60               	btfss	_mdbdata& (0+255),7,b
  3977  01014A  D050               	goto	l2379
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;mdb.c: 166: {
  3981                           ;mdb.c: 167: notebyte = mdbdata[0] & 0x7F;
  3982  01014C  5160               	movf	_mdbdata& (0+255),w,b
  3983  01014E  0B7F               	andlw	127
  3984  010150  6E40               	movwf	_notebyte,c
  3985                           
  3986                           ;mdb.c: 168: switch(notebyte)
  3987  010152  D019               	goto	l2369
  3988  010154                     
  3989                           ; BSR set to: 0
  3990  010154  0E0A               	movlw	10
  3991  010156  6E3A               	movwf	_credit,c	;volatile
  3992                           
  3993                           ;mdb.c: 171: return credit;
  3994  010158  503A               	movf	_credit,w,c	;volatile
  3995  01015A  0012               	return	
  3996  01015C  0E14               	movlw	20
  3997  01015E  6E3A               	movwf	_credit,c	;volatile
  3998                           
  3999                           ;mdb.c: 173: return credit;
  4000  010160  503A               	movf	_credit,w,c	;volatile
  4001  010162  0012               	return	
  4002  010164  0E32               	movlw	50
  4003  010166  6E3A               	movwf	_credit,c	;volatile
  4004                           
  4005                           ;mdb.c: 175: return credit;
  4006  010168  503A               	movf	_credit,w,c	;volatile
  4007  01016A  0012               	return	
  4008  01016C  0E64               	movlw	100
  4009  01016E  6E3A               	movwf	_credit,c	;volatile
  4010                           
  4011                           ;mdb.c: 177: return credit;
  4012  010170  503A               	movf	_credit,w,c	;volatile
  4013  010172  0012               	return	
  4014  010174  0EC8               	movlw	200
  4015  010176  6E3A               	movwf	_credit,c	;volatile
  4016                           
  4017                           ;mdb.c: 179: return credit;
  4018  010178  503A               	movf	_credit,w,c	;volatile
  4019  01017A  0012               	return	
  4020  01017C  0E10               	movlw	16
  4021  01017E  6E3A               	movwf	_credit,c	;volatile
  4022                           
  4023                           ;mdb.c: 181: mdbflags.noteerr = 1;
  4024  010180  823E               	bsf	_mdbflags,1,c
  4025                           
  4026                           ;mdb.c: 182: return credit;
  4027  010182  503A               	movf	_credit,w,c	;volatile
  4028                           
  4029                           ;mdb.c: 183: }
  4030  010184  0012               	return	
  4031  010186                     l2369:
  4032  010186  5040               	movf	_notebyte,w,c
  4033                           
  4034                           ; Switch size 1, requested type "space"
  4035                           ; Number of cases is 5, Range of values is 0 to 4
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte           16     9 (average)
  4039                           ;	Chosen strategy is simple_byte
  4040  010188  0A00               	xorlw	0	; case 0
  4041  01018A  B4D8               	btfsc	status,2,c
  4042  01018C  D7E3               	goto	l2370
  4043  01018E  0A01               	xorlw	1	; case 1
  4044  010190  B4D8               	btfsc	status,2,c
  4045  010192  D7E4               	goto	l2372
  4046  010194  0A03               	xorlw	3	; case 2
  4047  010196  B4D8               	btfsc	status,2,c
  4048  010198  D7E5               	goto	l2373
  4049  01019A  0A01               	xorlw	1	; case 3
  4050  01019C  B4D8               	btfsc	status,2,c
  4051  01019E  D7E6               	goto	l2374
  4052  0101A0  0A07               	xorlw	7	; case 4
  4053  0101A2  B4D8               	btfsc	status,2,c
  4054  0101A4  D7E7               	goto	l2375
  4055  0101A6  D7EA               	goto	l2376
  4056  0101A8  0E00               	movlw	0
  4057  0101AA  6E3A               	movwf	_credit,c	;volatile
  4058                           
  4059                           ;mdb.c: 191: return credit;
  4060  0101AC  503A               	movf	_credit,w,c	;volatile
  4061  0101AE  0012               	return	
  4062  0101B0  0E01               	movlw	1
  4063  0101B2  D01A               	goto	L11
  4064  0101B4  0E02               	movlw	2
  4065  0101B6  D018               	goto	L11
  4066  0101B8  0E00               	movlw	0
  4067  0101BA  6E3A               	movwf	_credit,c	;volatile
  4068                           
  4069                           ;mdb.c: 200: mdbflags.noteerr = 0;
  4070  0101BC  923E               	bcf	_mdbflags,1,c
  4071                           
  4072                           ;mdb.c: 201: return credit;
  4073  0101BE  503A               	movf	_credit,w,c	;volatile
  4074  0101C0  0012               	return	
  4075  0101C2  0E04               	movlw	4
  4076  0101C4  D011               	goto	L11
  4077  0101C6  0E05               	movlw	5
  4078  0101C8  D00F               	goto	L11
  4079  0101CA  0E06               	movlw	6
  4080  0101CC  D00D               	goto	L11
  4081  0101CE  0E07               	movlw	7
  4082  0101D0  D00B               	goto	L11
  4083  0101D2  0E08               	movlw	8
  4084  0101D4  D009               	goto	L11
  4085  0101D6  0E09               	movlw	9
  4086  0101D8  D007               	goto	L11
  4087  0101DA  0E0A               	movlw	10
  4088  0101DC  D005               	goto	L11
  4089  0101DE  0E0B               	movlw	11
  4090  0101E0  D003               	goto	L11
  4091  0101E2  0E0C               	movlw	12
  4092  0101E4  D001               	goto	L11
  4093  0101E6  0E00               	movlw	0
  4094  0101E8                     L11:
  4095  0101E8  6E3A               	movwf	_credit,c	;volatile
  4096                           
  4097                           ;mdb.c: 230: }
  4098  0101EA  D02A               	goto	l2382
  4099  0101EC                     l2379:
  4100  0101EC  0100               	movlb	0	; () banked
  4101  0101EE  5160               	movf	_mdbdata& (0+255),w,b
  4102                           
  4103                           ; Switch size 1, requested type "space"
  4104                           ; Number of cases is 13, Range of values is 0 to 12
  4105                           ; switch strategies available:
  4106                           ; Name         Instructions Cycles
  4107                           ; simple_byte           40    21 (average)
  4108                           ;	Chosen strategy is simple_byte
  4109  0101F0  0A00               	xorlw	0	; case 0
  4110  0101F2  B4D8               	btfsc	status,2,c
  4111  0101F4  D7D9               	goto	l2380
  4112  0101F6  0A01               	xorlw	1	; case 1
  4113  0101F8  B4D8               	btfsc	status,2,c
  4114  0101FA  D7DA               	goto	l2381
  4115  0101FC  0A03               	xorlw	3	; case 2
  4116  0101FE  B4D8               	btfsc	status,2,c
  4117  010200  D7D9               	goto	l2383
  4118  010202  0A01               	xorlw	1	; case 3
  4119  010204  B4D8               	btfsc	status,2,c
  4120  010206  D7D8               	goto	l2384
  4121  010208  0A07               	xorlw	7	; case 4
  4122  01020A  B4D8               	btfsc	status,2,c
  4123  01020C  D7DA               	goto	l2385
  4124  01020E  0A01               	xorlw	1	; case 5
  4125  010210  B4D8               	btfsc	status,2,c
  4126  010212  D7D9               	goto	l2386
  4127  010214  0A03               	xorlw	3	; case 6
  4128  010216  B4D8               	btfsc	status,2,c
  4129  010218  D7D8               	goto	l2387
  4130  01021A  0A01               	xorlw	1	; case 7
  4131  01021C  B4D8               	btfsc	status,2,c
  4132  01021E  D7D7               	goto	l2388
  4133  010220  0A0F               	xorlw	15	; case 8
  4134  010222  B4D8               	btfsc	status,2,c
  4135  010224  D7D6               	goto	l2389
  4136  010226  0A01               	xorlw	1	; case 9
  4137  010228  B4D8               	btfsc	status,2,c
  4138  01022A  D7D5               	goto	l2390
  4139  01022C  0A03               	xorlw	3	; case 10
  4140  01022E  B4D8               	btfsc	status,2,c
  4141  010230  D7D4               	goto	l2391
  4142  010232  0A01               	xorlw	1	; case 11
  4143  010234  B4D8               	btfsc	status,2,c
  4144  010236  D7D3               	goto	l2392
  4145  010238  0A07               	xorlw	7	; case 12
  4146  01023A  B4D8               	btfsc	status,2,c
  4147  01023C  D7D2               	goto	l2393
  4148  01023E  D7D3               	goto	l2394
  4149  010240                     l2382:
  4150                           
  4151                           ;mdb.c: 231: mdbflags.noteerr = 1;
  4152  010240  823E               	bsf	_mdbflags,1,c
  4153                           
  4154                           ;mdb.c: 232: return credit;
  4155  010242  503A               	movf	_credit,w,c	;volatile
  4156  010244  0012               	return	
  4157  010246                     __end_of_mdb_poll:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           prodh	equ	0xFF4
  4164                           prodl	equ	0xFF3
  4165                           postinc0	equ	0xFEE
  4166                           wreg	equ	0xFE8
  4167                           indf2	equ	0xFDF
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           status	equ	0xFD8
  4171                           
  4172 ;; *************** function _mdb_comm *****************
  4173 ;; Defined at:
  4174 ;;		line 237 in file "mdb.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  slvadd          1    wreg     unsigned char 
  4177 ;;  mcount          1   20[COMRAM] unsigned char 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  slvadd          1   21[COMRAM] unsigned char 
  4180 ;;  i               1   22[COMRAM] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      unsigned char 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4190 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;Total ram usage:        3 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    4
  4197 ;; This function calls:
  4198 ;;		_EUSART1_Read
  4199 ;;		_TMR1_Initialize
  4200 ;;		_init_mdbdata
  4201 ;;		_mdb_on
  4202 ;;		_mdb_transmit
  4203 ;;		_mdb_waitr
  4204 ;; This function is called by:
  4205 ;;		_mdb_init
  4206 ;;		_mdb_reset
  4207 ;;		_mdb_noten
  4208 ;;		_mdb_security
  4209 ;;		_mdb_poll
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text17
  4214  010448                     __ptext17:
  4215                           	opt stack 0
  4216  010448                     _mdb_comm:
  4217                           	opt stack 23
  4218                           
  4219                           ;incstack = 0
  4220                           ;mdb_comm@slvadd stored from wreg
  4221  010448  6E20               	movwf	mdb_comm@slvadd,c
  4222                           
  4223                           ;mdb.c: 240: uint8_t i = 0;
  4224  01044A  0E00               	movlw	0
  4225  01044C  6E21               	movwf	mdb_comm@i,c
  4226                           
  4227                           ;mdb.c: 242: TX1STAbits.TX9D = 1;
  4228  01044E  809E               	bsf	3998,0,c	;volatile
  4229                           
  4230                           ;mdb.c: 243: mdb_on();
  4231  010450  EC38  F08D         	call	_mdb_on	;wreg free
  4232                           
  4233                           ;mdb.c: 247: mdb_transmit(slvadd);
  4234  010454  5020               	movf	mdb_comm@slvadd,w,c
  4235  010456  ECFD  F08C         	call	_mdb_transmit
  4236                           
  4237                           ;mdb.c: 248: TX1STAbits.TX9D = 0;
  4238  01045A  909E               	bcf	3998,0,c	;volatile
  4239                           
  4240                           ;mdb.c: 252: chkbyte = slvadd;
  4241  01045C  C020  F03F         	movff	mdb_comm@slvadd,_chkbyte
  4242                           
  4243                           ;mdb.c: 253: if(mcount != 0)
  4244  010460  501F               	movf	mdb_comm@mcount,w,c
  4245  010462  B4D8               	btfsc	status,2,c
  4246  010464  D01E               	goto	u1290
  4247                           
  4248                           ;mdb.c: 254: {
  4249                           ;mdb.c: 255: i = mcount + 1;
  4250  010466  281F               	incf	mdb_comm@mcount,w,c
  4251  010468  6E21               	movwf	mdb_comm@i,c
  4252                           
  4253                           ;mdb.c: 256: while(i != 0)
  4254  01046A  D018               	goto	l2398
  4255  01046C                     
  4256                           ;mdb.c: 257: {
  4257                           ;mdb.c: 258: mdb_transmit(mdbdata[mcount]);
  4258  01046C  501F               	movf	mdb_comm@mcount,w,c
  4259  01046E  0D01               	mullw	1
  4260  010470  0E60               	movlw	low _mdbdata
  4261  010472  24F3               	addwf	prodl,w,c
  4262  010474  6ED9               	movwf	fsr2l,c
  4263  010476  0E00               	movlw	high _mdbdata
  4264  010478  20F4               	addwfc	prodh,w,c
  4265  01047A  6EDA               	movwf	fsr2h,c
  4266  01047C  50DF               	movf	indf2,w,c
  4267  01047E  ECFD  F08C         	call	_mdb_transmit
  4268                           
  4269                           ;mdb.c: 261: chkbyte = chkbyte + mdbdata[mcount];
  4270  010482  501F               	movf	mdb_comm@mcount,w,c
  4271  010484  0D01               	mullw	1
  4272  010486  0E60               	movlw	low _mdbdata
  4273  010488  24F3               	addwf	prodl,w,c
  4274  01048A  6ED9               	movwf	fsr2l,c
  4275  01048C  0E00               	movlw	high _mdbdata
  4276  01048E  20F4               	addwfc	prodh,w,c
  4277  010490  6EDA               	movwf	fsr2h,c
  4278  010492  50DF               	movf	indf2,w,c
  4279  010494  243F               	addwf	_chkbyte,w,c
  4280  010496  6E3F               	movwf	_chkbyte,c
  4281                           
  4282                           ;mdb.c: 262: i--;
  4283  010498  0621               	decf	mdb_comm@i,f,c
  4284                           
  4285                           ;mdb.c: 263: mcount--;
  4286  01049A  061F               	decf	mdb_comm@mcount,f,c
  4287  01049C                     l2398:
  4288  01049C  5021               	movf	mdb_comm@i,w,c
  4289  01049E  A4D8               	btfss	status,2,c
  4290  0104A0  D7E5               	goto	l2399
  4291  0104A2                     u1290:
  4292                           
  4293                           ;mdb.c: 264: }
  4294                           ;mdb.c: 265: }
  4295                           ;mdb.c: 266: mdb_transmit(chkbyte);
  4296  0104A2  503F               	movf	_chkbyte,w,c
  4297  0104A4  ECFD  F08C         	call	_mdb_transmit
  4298                           
  4299                           ;mdb.c: 273: init_mdbdata(0xFF);
  4300  0104A8  0EFF               	movlw	255
  4301  0104AA  EC1E  F08C         	call	_init_mdbdata
  4302                           
  4303                           ;mdb.c: 274: TMR1_Initialize();
  4304  0104AE  ECF7  F08A         	call	_TMR1_Initialize	;wreg free
  4305                           
  4306                           ;mdb.c: 275: dbcount = 0;
  4307  0104B2  0E00               	movlw	0
  4308  0104B4  6E33               	movwf	_dbcount+1,c
  4309  0104B6  0E00               	movlw	0
  4310  0104B8  6E32               	movwf	_dbcount,c
  4311                           
  4312                           ;mdb.c: 276: mdbflags.isdata = 0;
  4313  0104BA  903E               	bcf	_mdbflags,0,c
  4314                           
  4315                           ;mdb.c: 277: i = 0;
  4316  0104BC  0E00               	movlw	0
  4317  0104BE  6E21               	movwf	mdb_comm@i,c
  4318                           
  4319                           ;mdb.c: 279: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  4320  0104C0  D01E               	goto	u1320
  4321  0104C2                     
  4322                           ;mdb.c: 280: {
  4323                           ;mdb.c: 282: dbcount++;
  4324  0104C2  4A32               	infsnz	_dbcount,f,c
  4325  0104C4  2A33               	incf	_dbcount+1,f,c
  4326                           
  4327                           ;mdb.c: 283: mdbflags.isdata = 0;
  4328  0104C6  903E               	bcf	_mdbflags,0,c
  4329                           
  4330                           ;mdb.c: 286: while(PIR3bits.RC1IF && !mdbflags.isdata)
  4331  0104C8  D015               	goto	l2403
  4332  0104CA                     
  4333                           ;mdb.c: 287: {
  4334                           ;mdb.c: 290: mdbdata[i] = EUSART1_Read();
  4335  0104CA  5021               	movf	mdb_comm@i,w,c
  4336  0104CC  0D01               	mullw	1
  4337  0104CE  0E60               	movlw	low _mdbdata
  4338  0104D0  24F3               	addwf	prodl,w,c
  4339  0104D2  6ED9               	movwf	fsr2l,c
  4340  0104D4  0E00               	movlw	high _mdbdata
  4341  0104D6  20F4               	addwfc	prodh,w,c
  4342  0104D8  6EDA               	movwf	fsr2h,c
  4343  0104DA  ECEB  F08C         	call	_EUSART1_Read	;wreg free
  4344  0104DE  6EDF               	movwf	indf2,c
  4345                           
  4346                           ;mdb.c: 291: mdb_waitr();
  4347  0104E0  EC32  F08D         	call	_mdb_waitr	;wreg free
  4348                           
  4349                           ;mdb.c: 293: mdbflags.isdata = RC1STAbits.RX9D;
  4350  0104E4  A09D               	btfss	3997,0,c	;volatile
  4351  0104E6  D002               	bra	u1305
  4352  0104E8  803E               	bsf	_mdbflags,0,c
  4353  0104EA  D001               	bra	u1307
  4354  0104EC                     u1305:
  4355  0104EC  903E               	bcf	_mdbflags,0,c
  4356  0104EE                     u1307:
  4357                           
  4358                           ;mdb.c: 294: TMR1_Initialize();
  4359  0104EE  ECF7  F08A         	call	_TMR1_Initialize	;wreg free
  4360                           
  4361                           ;mdb.c: 295: i++;
  4362  0104F2  2A21               	incf	mdb_comm@i,f,c
  4363  0104F4                     l2403:
  4364  0104F4  010E               	movlb	14	; () banked
  4365  0104F6  ABCD               	btfss	205,5,b	;volatile
  4366  0104F8  D002               	goto	u1320
  4367                           
  4368                           ; BSR set to: 14
  4369  0104FA  A03E               	btfss	_mdbflags,0,c
  4370  0104FC  D7E6               	goto	l2404
  4371  0104FE                     u1320:
  4372                           
  4373                           ; BSR set to: 14
  4374                           
  4375                           ; BSR set to: 14
  4376  0104FE  010E               	movlb	14	; () banked
  4377  010500  B1CE               	btfsc	206,0,b	;volatile
  4378  010502  D002               	goto	u1340
  4379                           
  4380                           ; BSR set to: 14
  4381  010504  A03E               	btfss	_mdbflags,0,c
  4382  010506  D7DD               	goto	l2402
  4383  010508                     u1340:
  4384                           
  4385                           ; BSR set to: 14
  4386                           ;mdb.c: 297: }
  4387                           ;mdb.c: 299: }
  4388                           ;mdb.c: 301: i--;
  4389                           
  4390                           ; BSR set to: 14
  4391                           
  4392                           ; BSR set to: 14
  4393  010508  0621               	decf	mdb_comm@i,f,c
  4394                           
  4395                           ; BSR set to: 14
  4396                           ;mdb.c: 303: mdbflags.timeout = PIR4bits.TMR1IF;
  4397  01050A  A1CE               	btfss	206,0,b	;volatile
  4398  01050C  D002               	bra	u1355
  4399  01050E  863E               	bsf	_mdbflags,3,c
  4400  010510  D001               	bra	u1357
  4401  010512                     u1355:
  4402  010512  963E               	bcf	_mdbflags,3,c
  4403  010514                     u1357:
  4404                           
  4405                           ;mdb.c: 305: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  4406  010514  A03E               	btfss	_mdbflags,0,c
  4407  010516  D011               	goto	l2411
  4408  010518  5021               	movf	mdb_comm@i,w,c
  4409  01051A  0D01               	mullw	1
  4410  01051C  0E60               	movlw	low _mdbdata
  4411  01051E  24F3               	addwf	prodl,w,c
  4412  010520  6ED9               	movwf	fsr2l,c
  4413  010522  0E00               	movlw	high _mdbdata
  4414  010524  20F4               	addwfc	prodh,w,c
  4415  010526  6EDA               	movwf	fsr2h,c
  4416  010528  50DF               	movf	indf2,w,c
  4417  01052A  B4D8               	btfsc	status,2,c
  4418  01052C  D006               	goto	l2411
  4419                           
  4420                           ;mdb.c: 306: {
  4421                           ;mdb.c: 307: TX1STAbits.TX9D = 1;
  4422  01052E  809E               	bsf	3998,0,c	;volatile
  4423                           
  4424                           ;mdb.c: 308: mdb_on();
  4425  010530  EC38  F08D         	call	_mdb_on	;wreg free
  4426                           
  4427                           ;mdb.c: 309: mdb_transmit(0x00);
  4428  010534  0E00               	movlw	0
  4429  010536  ECFD  F08C         	call	_mdb_transmit
  4430  01053A                     l2411:
  4431                           
  4432                           ;mdb.c: 311: }
  4433                           ;mdb.c: 313: mdb_on();
  4434  01053A  EC38  F08D         	call	_mdb_on	;wreg free
  4435                           
  4436                           ;mdb.c: 315: return(i);
  4437  01053E  5021               	movf	mdb_comm@i,w,c
  4438  010540  0012               	return	
  4439  010542                     __end_of_mdb_comm:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           prodh	equ	0xFF4
  4446                           prodl	equ	0xFF3
  4447                           postinc0	equ	0xFEE
  4448                           wreg	equ	0xFE8
  4449                           indf2	equ	0xFDF
  4450                           fsr2h	equ	0xFDA
  4451                           fsr2l	equ	0xFD9
  4452                           status	equ	0xFD8
  4453                           
  4454 ;; *************** function _mdb_waitr *****************
  4455 ;; Defined at:
  4456 ;;		line 339 in file "mdb.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		None
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:    2
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_mdb_comm
  4481 ;;		_cctalk_read
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text18
  4486  011A64                     __ptext18:
  4487                           	opt stack 0
  4488  011A64                     _mdb_waitr:
  4489                           	opt stack 24
  4490                           
  4491                           ;mdb.c: 342: {
  4492                           
  4493                           ;mdb.c: 341: while(BAUD1CONbits.RCIDL == 0)
  4494                           
  4495                           ;incstack = 0
  4496  011A64  BC9F               	btfsc	3999,6,c	;volatile
  4497  011A66  0012               	return	
  4498  011A68  D7FD               	goto	_mdb_waitr
  4499  011A6A                     __end_of_mdb_waitr:
  4500                           	opt stack 0
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           prodh	equ	0xFF4
  4506                           prodl	equ	0xFF3
  4507                           postinc0	equ	0xFEE
  4508                           wreg	equ	0xFE8
  4509                           indf2	equ	0xFDF
  4510                           fsr2h	equ	0xFDA
  4511                           fsr2l	equ	0xFD9
  4512                           status	equ	0xFD8
  4513                           
  4514 ;; *************** function _mdb_transmit *****************
  4515 ;; Defined at:
  4516 ;;		line 440 in file "mdb.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  txbyte          1    wreg     unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  txbyte          1   19[COMRAM] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;Total ram usage:        1 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    3
  4537 ;; This function calls:
  4538 ;;		_EUSART1_Write
  4539 ;;		_mdb_waitx
  4540 ;; This function is called by:
  4541 ;;		_mdb_comm
  4542 ;;		_cctalk_comm
  4543 ;;		_mdb_test
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text19
  4548  0119FA                     __ptext19:
  4549                           	opt stack 0
  4550  0119FA                     _mdb_transmit:
  4551                           	opt stack 23
  4552                           
  4553                           ;incstack = 0
  4554                           ;mdb_transmit@txbyte stored from wreg
  4555  0119FA  6E1E               	movwf	mdb_transmit@txbyte,c
  4556                           
  4557                           ;mdb.c: 442: EUSART1_Write(txbyte);
  4558  0119FC  501E               	movf	mdb_transmit@txbyte,w,c
  4559  0119FE  EC04  F08D         	call	_EUSART1_Write
  4560                           
  4561                           ;mdb.c: 443: mdb_waitx();
  4562  011A02  EC35  F08D         	call	_mdb_waitx	;wreg free
  4563  011A06  0012               	return		;funcret
  4564  011A08                     __end_of_mdb_transmit:
  4565                           	opt stack 0
  4566                           tblptru	equ	0xFF8
  4567                           tblptrh	equ	0xFF7
  4568                           tblptrl	equ	0xFF6
  4569                           tablat	equ	0xFF5
  4570                           prodh	equ	0xFF4
  4571                           prodl	equ	0xFF3
  4572                           postinc0	equ	0xFEE
  4573                           wreg	equ	0xFE8
  4574                           indf2	equ	0xFDF
  4575                           fsr2h	equ	0xFDA
  4576                           fsr2l	equ	0xFD9
  4577                           status	equ	0xFD8
  4578                           
  4579 ;; *************** function _mdb_waitx *****************
  4580 ;; Defined at:
  4581 ;;		line 331 in file "mdb.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		None
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;Total ram usage:        0 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    2
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_mdb_transmit
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text20
  4610  011A6A                     __ptext20:
  4611                           	opt stack 0
  4612  011A6A                     _mdb_waitx:
  4613                           	opt stack 23
  4614                           
  4615                           ;mdb.c: 334: {
  4616                           
  4617                           ;mdb.c: 333: while(TX1STAbits.TRMT == 0)
  4618                           
  4619                           ;incstack = 0
  4620  011A6A  B29E               	btfsc	3998,1,c	;volatile
  4621  011A6C  0012               	return	
  4622  011A6E  D7FD               	goto	_mdb_waitx
  4623  011A70                     __end_of_mdb_waitx:
  4624                           	opt stack 0
  4625                           tblptru	equ	0xFF8
  4626                           tblptrh	equ	0xFF7
  4627                           tblptrl	equ	0xFF6
  4628                           tablat	equ	0xFF5
  4629                           prodh	equ	0xFF4
  4630                           prodl	equ	0xFF3
  4631                           postinc0	equ	0xFEE
  4632                           wreg	equ	0xFE8
  4633                           indf2	equ	0xFDF
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638 ;; *************** function _EUSART1_Write *****************
  4639 ;; Defined at:
  4640 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  txData          1    wreg     unsigned char 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  txData          1   18[COMRAM] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;Total ram usage:        1 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; Hardware stack levels required when called:    2
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		_mdb_transmit
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text21
  4669  011A08                     __ptext21:
  4670                           	opt stack 0
  4671  011A08                     _EUSART1_Write:
  4672                           	opt stack 23
  4673                           
  4674                           ;incstack = 0
  4675                           ;EUSART1_Write@txData stored from wreg
  4676  011A08  6E1D               	movwf	EUSART1_Write@txData,c
  4677  011A0A                     
  4678                           ;eusart1.c: 96: {
  4679                           
  4680                           ;eusart1.c: 95: while(0 == PIR3bits.TX1IF)
  4681  011A0A  010E               	movlb	14	; () banked
  4682  011A0C  A9CD               	btfss	205,4,b	;volatile
  4683  011A0E  D7FD               	goto	l5145
  4684                           
  4685                           ; BSR set to: 14
  4686                           ;eusart1.c: 97: }
  4687                           ;eusart1.c: 99: TX1REG = txData;
  4688                           
  4689                           ; BSR set to: 14
  4690  011A10  C01D  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  4691                           
  4692                           ; BSR set to: 14
  4693  011A14  0012               	return		;funcret
  4694  011A16                     __end_of_EUSART1_Write:
  4695                           	opt stack 0
  4696                           tblptru	equ	0xFF8
  4697                           tblptrh	equ	0xFF7
  4698                           tblptrl	equ	0xFF6
  4699                           tablat	equ	0xFF5
  4700                           prodh	equ	0xFF4
  4701                           prodl	equ	0xFF3
  4702                           postinc0	equ	0xFEE
  4703                           wreg	equ	0xFE8
  4704                           indf2	equ	0xFDF
  4705                           fsr2h	equ	0xFDA
  4706                           fsr2l	equ	0xFD9
  4707                           status	equ	0xFD8
  4708                           
  4709 ;; *************** function _mdb_on *****************
  4710 ;; Defined at:
  4711 ;;		line 318 in file "mdb.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		None
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    2
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_mdb_comm
  4736 ;;		_cctalk_init
  4737 ;;		_mdb_test
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text22
  4742  011A70                     __ptext22:
  4743                           	opt stack 0
  4744  011A70                     _mdb_on:
  4745                           	opt stack 24
  4746                           
  4747                           ;mdb.c: 324: LATCbits.LATC0 = 1;
  4748                           
  4749                           ; BSR set to: 14
  4750                           ;incstack = 0
  4751  011A70  8085               	bsf	3973,0,c	;volatile
  4752                           
  4753                           ;mdb.c: 325: LATCbits.LATC1 = 0;
  4754  011A72  9285               	bcf	3973,1,c	;volatile
  4755  011A74  0012               	return		;funcret
  4756  011A76                     __end_of_mdb_on:
  4757                           	opt stack 0
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           prodh	equ	0xFF4
  4763                           prodl	equ	0xFF3
  4764                           postinc0	equ	0xFEE
  4765                           wreg	equ	0xFE8
  4766                           indf2	equ	0xFDF
  4767                           fsr2h	equ	0xFDA
  4768                           fsr2l	equ	0xFD9
  4769                           status	equ	0xFD8
  4770                           
  4771 ;; *************** function _init_mdbdata *****************
  4772 ;; Defined at:
  4773 ;;		line 13 in file "mdb.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  initdata        1    wreg     unsigned char 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  initdata        1   18[COMRAM] unsigned char 
  4778 ;;  i               1   19[COMRAM] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;Total ram usage:        2 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    2
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_mdb_noten
  4799 ;;		_mdb_security
  4800 ;;		_mdb_comm
  4801 ;;		_cctalk_pinenter
  4802 ;;		_cctalk_comm
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text23
  4807  01183C                     __ptext23:
  4808                           	opt stack 0
  4809  01183C                     _init_mdbdata:
  4810                           	opt stack 24
  4811                           
  4812                           ;incstack = 0
  4813                           ;init_mdbdata@initdata stored from wreg
  4814  01183C  6E1D               	movwf	init_mdbdata@initdata,c
  4815                           
  4816                           ;mdb.c: 15: for(uint8_t i = 0;i < 33; i++)
  4817  01183E  0E00               	movlw	0
  4818  011840  6E1E               	movwf	init_mdbdata@i,c
  4819  011842                     l5295:
  4820  011842  0E20               	movlw	32
  4821  011844  641E               	cpfsgt	init_mdbdata@i,c
  4822  011846  D001               	goto	l2314
  4823  011848  0012               	return	
  4824  01184A                     l2314:
  4825                           
  4826                           ;mdb.c: 16: {
  4827                           ;mdb.c: 17: mdbdata[i] = initdata;
  4828  01184A  501E               	movf	init_mdbdata@i,w,c
  4829  01184C  0D01               	mullw	1
  4830  01184E  0E60               	movlw	low _mdbdata
  4831  011850  24F3               	addwf	prodl,w,c
  4832  011852  6ED9               	movwf	fsr2l,c
  4833  011854  0E00               	movlw	high _mdbdata
  4834  011856  20F4               	addwfc	prodh,w,c
  4835  011858  6EDA               	movwf	fsr2h,c
  4836  01185A  C01D  FFDF         	movff	init_mdbdata@initdata,indf2
  4837  01185E  2A1E               	incf	init_mdbdata@i,f,c
  4838  011860  D7F0               	goto	l5295
  4839  011862                     __end_of_init_mdbdata:
  4840                           	opt stack 0
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           postinc0	equ	0xFEE
  4848                           wreg	equ	0xFE8
  4849                           indf2	equ	0xFDF
  4850                           fsr2h	equ	0xFDA
  4851                           fsr2l	equ	0xFD9
  4852                           status	equ	0xFD8
  4853                           
  4854 ;; *************** function _EUSART1_Read *****************
  4855 ;; Defined at:
  4856 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      unsigned char 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    2
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_mdb_comm
  4881 ;;		_cctalk_read
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text24
  4886  0119D6                     __ptext24:
  4887                           	opt stack 0
  4888  0119D6                     _EUSART1_Read:
  4889                           	opt stack 24
  4890                           
  4891                           ;eusart1.c: 78: {
  4892                           
  4893                           ;eusart1.c: 77: while(!PIR3bits.RC1IF)
  4894                           
  4895                           ;incstack = 0
  4896  0119D6  010E               	movlb	14	; () banked
  4897  0119D8  ABCD               	btfss	205,5,b	;volatile
  4898  0119DA  D7FD               	goto	_EUSART1_Read
  4899                           
  4900                           ; BSR set to: 14
  4901                           ;eusart1.c: 79: }
  4902                           ;eusart1.c: 82: if(1 == RC1STAbits.OERR)
  4903  0119DC  A29D               	btfss	3997,1,c	;volatile
  4904  0119DE  D002               	goto	l101
  4905                           
  4906                           ; BSR set to: 14
  4907                           ;eusart1.c: 83: {
  4908                           ;eusart1.c: 86: RC1STAbits.CREN = 0;
  4909  0119E0  989D               	bcf	3997,4,c	;volatile
  4910                           
  4911                           ;eusart1.c: 87: RC1STAbits.CREN = 1;
  4912  0119E2  889D               	bsf	3997,4,c	;volatile
  4913  0119E4                     l101:
  4914                           
  4915                           ; BSR set to: 14
  4916                           ;eusart1.c: 88: }
  4917                           ;eusart1.c: 90: return RC1REG;
  4918                           
  4919                           ; BSR set to: 14
  4920  0119E4  5099               	movf	3993,w,c	;volatile
  4921  0119E6  0012               	return	
  4922  0119E8                     __end_of_EUSART1_Read:
  4923                           	opt stack 0
  4924                           tblptru	equ	0xFF8
  4925                           tblptrh	equ	0xFF7
  4926                           tblptrl	equ	0xFF6
  4927                           tablat	equ	0xFF5
  4928                           prodh	equ	0xFF4
  4929                           prodl	equ	0xFF3
  4930                           postinc0	equ	0xFEE
  4931                           wreg	equ	0xFE8
  4932                           indf2	equ	0xFDF
  4933                           fsr2h	equ	0xFDA
  4934                           fsr2l	equ	0xFD9
  4935                           status	equ	0xFD8
  4936                           
  4937 ;; *************** function _lcd_init *****************
  4938 ;; Defined at:
  4939 ;;		line 10 in file "lcd.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;Total ram usage:        2 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    8
  4960 ;; This function calls:
  4961 ;;		_lcd_clockE
  4962 ;;		_lcd_test
  4963 ;;		_lcd_write
  4964 ;; This function is called by:
  4965 ;;		_main
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text25
  4970  010C48                     __ptext25:
  4971                           	opt stack 0
  4972  010C48                     _lcd_init:
  4973                           	opt stack 22
  4974                           
  4975                           ;lcd.c: 12: LATE = 0x00;
  4976                           
  4977                           ; BSR set to: 14
  4978                           ;incstack = 0
  4979  010C48  0E00               	movlw	0
  4980  010C4A  6E87               	movwf	3975,c	;volatile
  4981                           
  4982                           ;lcd.c: 14: LATD = 0x03;
  4983  010C4C  0E03               	movlw	3
  4984  010C4E  6E86               	movwf	3974,c	;volatile
  4985                           
  4986                           ;lcd.c: 15: for(count = 3; count > 0; count-- )
  4987  010C50  0E03               	movlw	3
  4988  010C52  6E4C               	movwf	_count,c
  4989  010C54                     l7063:
  4990  010C54  504C               	movf	_count,w,c
  4991  010C56  0A80               	xorlw	128
  4992  010C58  0F7F               	addlw	-129
  4993  010C5A  A0D8               	btfss	status,0,c
  4994  010C5C  D00B               	goto	u2290
  4995                           
  4996                           ;lcd.c: 16: {
  4997                           ;lcd.c: 17: lcd_clockE();
  4998  010C5E  EC12  F08D         	call	_lcd_clockE	;wreg free
  4999                           
  5000                           ;lcd.c: 18: _delay((unsigned long)((5)*(12000000/4000.0)));
  5001  010C62  0E14               	movlw	20
  5002  010C64  6E25               	movwf	??_lcd_init& (0+255),c
  5003  010C66  0E7A               	movlw	122
  5004  010C68                     u2467:
  5005  010C68  2EE8               	decfsz	wreg,f,c
  5006  010C6A  D7FE               	bra	u2467
  5007  010C6C  2E25               	decfsz	??_lcd_init& (0+255),f,c
  5008  010C6E  D7FC               	bra	u2467
  5009  010C70  064C               	decf	_count,f,c
  5010  010C72  D7F0               	goto	l7063
  5011  010C74                     u2290:
  5012                           
  5013                           ;lcd.c: 20: }
  5014                           ;lcd.c: 21: _delay((unsigned long)((50)*(12000000/4000000.0)));
  5015  010C74  0E32               	movlw	50
  5016  010C76                     u2477:
  5017  010C76  2EE8               	decfsz	wreg,f,c
  5018  010C78  D7FE               	bra	u2477
  5019                           
  5020                           ;lcd.c: 22: LATD = 0x02;
  5021  010C7A  0E02               	movlw	2
  5022  010C7C  6E86               	movwf	3974,c	;volatile
  5023                           
  5024                           ;lcd.c: 23: lcd_clockE();
  5025  010C7E  EC12  F08D         	call	_lcd_clockE	;wreg free
  5026                           
  5027                           ;lcd.c: 26: lcd_write(dispfunc3);
  5028  010C82  0EEF               	movlw	low _dispfunc3
  5029  010C84  6EF6               	movwf	tblptrl,c
  5030  010C86                     	if	1	;There is more than 1 active tblptr byte
  5031  010C86  0EFD               	movlw	high _dispfunc3
  5032  010C88  6EF7               	movwf	tblptrh,c
  5033  010C8A                     	endif
  5034  010C8A                     	if	1	;There are 3 active tblptr bytes
  5035  010C8A  0E00               	movlw	low (_dispfunc3 shr (0+16))
  5036  010C8C  6EF8               	movwf	tblptru,c
  5037  010C8E                     	endif
  5038  010C8E  0008               	tblrd		*
  5039  010C90  50F5               	movf	tablat,w,c
  5040  010C92  EC92  F08B         	call	_lcd_write
  5041                           
  5042                           ;lcd.c: 28: lcd_write(dispon);
  5043  010C96  0EEE               	movlw	low _dispon
  5044  010C98  6EF6               	movwf	tblptrl,c
  5045  010C9A                     	if	1	;There is more than 1 active tblptr byte
  5046  010C9A  0EFD               	movlw	high _dispon
  5047  010C9C  6EF7               	movwf	tblptrh,c
  5048  010C9E                     	endif
  5049  010C9E                     	if	1	;There are 3 active tblptr bytes
  5050  010C9E  0E00               	movlw	low (_dispon shr (0+16))
  5051  010CA0  6EF8               	movwf	tblptru,c
  5052  010CA2                     	endif
  5053  010CA2  0008               	tblrd		*
  5054  010CA4  50F5               	movf	tablat,w,c
  5055  010CA6  EC92  F08B         	call	_lcd_write
  5056                           
  5057                           ;lcd.c: 30: lcd_write(dispnormal);
  5058  010CAA  0EEA               	movlw	low _dispnormal
  5059  010CAC  6EF6               	movwf	tblptrl,c
  5060  010CAE                     	if	1	;There is more than 1 active tblptr byte
  5061  010CAE  0EFD               	movlw	high _dispnormal
  5062  010CB0  6EF7               	movwf	tblptrh,c
  5063  010CB2                     	endif
  5064  010CB2                     	if	1	;There are 3 active tblptr bytes
  5065  010CB2  0E00               	movlw	low (_dispnormal shr (0+16))
  5066  010CB4  6EF8               	movwf	tblptru,c
  5067  010CB6                     	endif
  5068  010CB6  0008               	tblrd		*
  5069  010CB8  50F5               	movf	tablat,w,c
  5070  010CBA  EC92  F08B         	call	_lcd_write
  5071                           
  5072                           ;lcd.c: 32: lcd_write(dispclr);
  5073  010CBE  0EED               	movlw	low _dispclr
  5074  010CC0  6EF6               	movwf	tblptrl,c
  5075  010CC2                     	if	1	;There is more than 1 active tblptr byte
  5076  010CC2  0EFD               	movlw	high _dispclr
  5077  010CC4  6EF7               	movwf	tblptrh,c
  5078  010CC6                     	endif
  5079  010CC6                     	if	1	;There are 3 active tblptr bytes
  5080  010CC6  0E00               	movlw	low (_dispclr shr (0+16))
  5081  010CC8  6EF8               	movwf	tblptru,c
  5082  010CCA                     	endif
  5083  010CCA  0008               	tblrd		*
  5084  010CCC  50F5               	movf	tablat,w,c
  5085  010CCE  EC92  F08B         	call	_lcd_write
  5086                           
  5087                           ;lcd.c: 34: lcd_test();
  5088  010CD2  ECCB  F08C         	call	_lcd_test	;wreg free
  5089                           
  5090                           ;lcd.c: 35: _delay((unsigned long)((250)*(12000000/4000.0)));
  5091  010CD6  0E04               	movlw	4
  5092  010CD8  6E26               	movwf	(??_lcd_init+1)& (0+255),c
  5093  010CDA  0ECF               	movlw	207
  5094  010CDC  6E25               	movwf	??_lcd_init& (0+255),c
  5095  010CDE  0E02               	movlw	2
  5096  010CE0                     u2487:
  5097  010CE0  2EE8               	decfsz	wreg,f,c
  5098  010CE2  D7FE               	bra	u2487
  5099  010CE4  2E25               	decfsz	??_lcd_init& (0+255),f,c
  5100  010CE6  D7FC               	bra	u2487
  5101  010CE8  2E26               	decfsz	(??_lcd_init+1)& (0+255),f,c
  5102  010CEA  D7FA               	bra	u2487
  5103  010CEC  F000               	nop		;# 
  5104  010CEE  0012               	return		;funcret
  5105  010CF0                     __end_of_lcd_init:
  5106                           	opt stack 0
  5107                           tblptru	equ	0xFF8
  5108                           tblptrh	equ	0xFF7
  5109                           tblptrl	equ	0xFF6
  5110                           tablat	equ	0xFF5
  5111                           prodh	equ	0xFF4
  5112                           prodl	equ	0xFF3
  5113                           postinc0	equ	0xFEE
  5114                           wreg	equ	0xFE8
  5115                           indf2	equ	0xFDF
  5116                           fsr2h	equ	0xFDA
  5117                           fsr2l	equ	0xFD9
  5118                           status	equ	0xFD8
  5119                           
  5120 ;; *************** function _lcd_test *****************
  5121 ;; Defined at:
  5122 ;;		line 246 in file "lcd.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  character       1   25[COMRAM] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;Total ram usage:        1 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    7
  5143 ;; This function calls:
  5144 ;;		_lcd_writeC
  5145 ;; This function is called by:
  5146 ;;		_lcd_init
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text26
  5151  011996                     __ptext26:
  5152                           	opt stack 0
  5153  011996                     _lcd_test:
  5154                           	opt stack 22
  5155                           
  5156                           ;lcd.c: 248: uint8_t character = 0x30;
  5157                           
  5158                           ;incstack = 0
  5159  011996  0E30               	movlw	48
  5160  011998  D004               	goto	L12
  5161  01199A                     
  5162                           ;lcd.c: 250: {
  5163                           ;lcd.c: 251: lcd_writeC(character);
  5164  01199A  5024               	movf	lcd_test@character,w,c
  5165  01199C  ECE8  F088         	call	_lcd_writeC
  5166                           
  5167                           ;lcd.c: 252: character = character+ 1;
  5168  0119A0  2824               	incf	lcd_test@character,w,c
  5169  0119A2                     L12:
  5170  0119A2  6E24               	movwf	lcd_test@character,c
  5171  0119A4  0E7F               	movlw	127
  5172  0119A6  6424               	cpfsgt	lcd_test@character,c
  5173  0119A8  D7F8               	goto	l1356
  5174  0119AA  0012               	return	
  5175  0119AC                     __end_of_lcd_test:
  5176                           	opt stack 0
  5177                           tblptru	equ	0xFF8
  5178                           tblptrh	equ	0xFF7
  5179                           tblptrl	equ	0xFF6
  5180                           tablat	equ	0xFF5
  5181                           prodh	equ	0xFF4
  5182                           prodl	equ	0xFF3
  5183                           postinc0	equ	0xFEE
  5184                           wreg	equ	0xFE8
  5185                           indf2	equ	0xFDF
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _enter_service *****************
  5191 ;; Defined at:
  5192 ;;		line 165 in file "main.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:   11
  5213 ;; This function calls:
  5214 ;;		_Audit
  5215 ;;		_Clear_cred
  5216 ;;		_Hopper_coin
  5217 ;;		_Sensor_set
  5218 ;;		_Vend_setup
  5219 ;;		_butindb
  5220 ;;		_lcd_string
  5221 ;;		_mdb_unlock
  5222 ;;		_price_set
  5223 ;;		_set_notes
  5224 ;; This function is called by:
  5225 ;;		_main
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text27
  5230  010CF0                     __ptext27:
  5231                           	opt stack 0
  5232  010CF0                     _enter_service:
  5233                           	opt stack 19
  5234                           
  5235                           ;main.c: 167: mdb_unlock();
  5236                           
  5237                           ;incstack = 0
  5238  010CF0  ECF0  F083         	call	_mdb_unlock	;wreg free
  5239                           
  5240                           ;main.c: 168: lcd_string(servmsg, line1);
  5241  010CF4  0E37               	movlw	low _servmsg
  5242  010CF6  6E24               	movwf	lcd_string@lcdstring,c
  5243  010CF8  0EFE               	movlw	high _servmsg
  5244  010CFA  6E25               	movwf	lcd_string@lcdstring+1,c
  5245  010CFC  0EE3               	movlw	low _line1
  5246  010CFE  6EF6               	movwf	tblptrl,c
  5247  010D00                     	if	1	;There is more than 1 active tblptr byte
  5248  010D00  0EFD               	movlw	high _line1
  5249  010D02  6EF7               	movwf	tblptrh,c
  5250  010D04                     	endif
  5251  010D04                     	if	1	;There are 3 active tblptr bytes
  5252  010D04  0E00               	movlw	low (_line1 shr (0+16))
  5253  010D06  6EF8               	movwf	tblptru,c
  5254  010D08                     	endif
  5255  010D08  0008               	tblrd		*
  5256  010D0A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5257  010D0E  EC72  F085         	call	_lcd_string	;wreg free
  5258                           
  5259                           ;main.c: 171: while(venflags.service)
  5260  010D12  D036               	goto	l894
  5261  010D14                     
  5262                           ;main.c: 172: {
  5263                           ;main.c: 173: buttons = butindb();
  5264  010D14  EC79  F08B         	call	_butindb	;wreg free
  5265  010D18  6E38               	movwf	_buttons,c	;volatile
  5266                           
  5267                           ;main.c: 174: switch(buttons)
  5268  010D1A  D019               	goto	l892
  5269  010D1C  EC3F  F08D         	call	_Audit	;wreg free
  5270                           
  5271                           ;main.c: 177: break;
  5272  010D20  D02F               	goto	l894
  5273  010D22  EC1A  F083         	call	_Sensor_set	;wreg free
  5274                           
  5275                           ;main.c: 179: break;
  5276  010D26  D02C               	goto	l894
  5277  010D28  EC85  F083         	call	_Hopper_coin	;wreg free
  5278                           
  5279                           ;main.c: 181: break;
  5280  010D2C  D029               	goto	l894
  5281  010D2E  ECA1  F082         	call	_set_notes	;wreg free
  5282                           
  5283                           ;main.c: 183: break;
  5284  010D32  D026               	goto	l894
  5285  010D34  EC48  F089         	call	_Clear_cred	;wreg free
  5286                           
  5287                           ;main.c: 185: venflags.service = 0;
  5288  010D38  9E30               	bcf	_venflags,7,c
  5289  010D3A  00FF               	reset		;# 
  5290  010D3C  EC90  F087         	call	_price_set	;wreg free
  5291                           
  5292                           ;main.c: 188: break;
  5293  010D40  D01F               	goto	l894
  5294  010D42  EC3E  F08D         	call	_Vend_setup	;wreg free
  5295                           
  5296                           ;main.c: 190: break;
  5297  010D46  D01C               	goto	l894
  5298  010D48                     l901:
  5299  010D48  9E30               	bcf	_venflags,7,c
  5300  010D4A  00FF               	reset		;# 
  5301                           
  5302                           ;main.c: 194: }
  5303                           
  5304                           ;main.c: 193: break;
  5305  010D4C  D019               	goto	l894
  5306  010D4E                     l892:
  5307  010D4E  5038               	movf	_buttons,w,c	;volatile
  5308                           
  5309                           ; Switch size 1, requested type "space"
  5310                           ; Number of cases is 8, Range of values is 1 to 128
  5311                           ; switch strategies available:
  5312                           ; Name         Instructions Cycles
  5313                           ; simple_byte           25    13 (average)
  5314                           ;	Chosen strategy is simple_byte
  5315  010D50  0A01               	xorlw	1	; case 1
  5316  010D52  B4D8               	btfsc	status,2,c
  5317  010D54  D7E3               	goto	l893
  5318  010D56  0A03               	xorlw	3	; case 2
  5319  010D58  B4D8               	btfsc	status,2,c
  5320  010D5A  D7E3               	goto	l895
  5321  010D5C  0A06               	xorlw	6	; case 4
  5322  010D5E  B4D8               	btfsc	status,2,c
  5323  010D60  D7E3               	goto	l896
  5324  010D62  0A0C               	xorlw	12	; case 8
  5325  010D64  B4D8               	btfsc	status,2,c
  5326  010D66  D7E3               	goto	l897
  5327  010D68  0A18               	xorlw	24	; case 16
  5328  010D6A  B4D8               	btfsc	status,2,c
  5329  010D6C  D7E3               	goto	l898
  5330  010D6E  0A30               	xorlw	48	; case 32
  5331  010D70  B4D8               	btfsc	status,2,c
  5332  010D72  D7E4               	goto	l899
  5333  010D74  0A60               	xorlw	96	; case 64
  5334  010D76  B4D8               	btfsc	status,2,c
  5335  010D78  D7E4               	goto	l900
  5336  010D7A  0AC0               	xorlw	192	; case 128
  5337  010D7C  B4D8               	btfsc	status,2,c
  5338  010D7E  D7E4               	goto	l901
  5339  010D80                     l894:
  5340  010D80  AE30               	btfss	_venflags,7,c
  5341  010D82  0012               	return	
  5342  010D84  D7C7               	goto	l891
  5343  010D86                     __end_of_enter_service:
  5344                           	opt stack 0
  5345                           tblptru	equ	0xFF8
  5346                           tblptrh	equ	0xFF7
  5347                           tblptrl	equ	0xFF6
  5348                           tablat	equ	0xFF5
  5349                           prodh	equ	0xFF4
  5350                           prodl	equ	0xFF3
  5351                           postinc0	equ	0xFEE
  5352                           wreg	equ	0xFE8
  5353                           indf2	equ	0xFDF
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function _set_notes *****************
  5359 ;; Defined at:
  5360 ;;		line 57 in file "mdb.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;Total ram usage:        0 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:   10
  5381 ;; This function calls:
  5382 ;;		_butindb
  5383 ;;		_displ_note
  5384 ;;		_enable_notes
  5385 ;;		_lcd_string
  5386 ;; This function is called by:
  5387 ;;		_enter_service
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           	psect	text28
  5392  010542                     __ptext28:
  5393                           	opt stack 0
  5394  010542                     _set_notes:
  5395                           	opt stack 19
  5396                           
  5397                           ;mdb.c: 59: lcd_string(setnotes, line1);
  5398                           
  5399                           ;incstack = 0
  5400  010542  0EF2               	movlw	low _setnotes
  5401  010544  6E24               	movwf	lcd_string@lcdstring,c
  5402  010546  0EFD               	movlw	high _setnotes
  5403  010548  6E25               	movwf	lcd_string@lcdstring+1,c
  5404  01054A  0EE3               	movlw	low _line1
  5405  01054C  6EF6               	movwf	tblptrl,c
  5406  01054E                     	if	1	;There is more than 1 active tblptr byte
  5407  01054E  0EFD               	movlw	high _line1
  5408  010550  6EF7               	movwf	tblptrh,c
  5409  010552                     	endif
  5410  010552                     	if	1	;There are 3 active tblptr bytes
  5411  010552  0E00               	movlw	low (_line1 shr (0+16))
  5412  010554  6EF8               	movwf	tblptru,c
  5413  010556                     	endif
  5414  010556  0008               	tblrd		*
  5415  010558  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5416  01055C  EC72  F085         	call	_lcd_string	;wreg free
  5417                           
  5418                           ;mdb.c: 60: mdbflags.noteset = 1;
  5419  010560  8A3E               	bsf	_mdbflags,5,c
  5420                           
  5421                           ;mdb.c: 61: mdbflags.endis = 1;
  5422  010562  8C3E               	bsf	_mdbflags,6,c
  5423                           
  5424                           ;mdb.c: 62: while(mdbflags.noteset)
  5425  010564  D064               	goto	l2329
  5426  010566                     
  5427                           ;mdb.c: 63: {
  5428                           ;mdb.c: 64: buttons = butindb();
  5429  010566  EC79  F08B         	call	_butindb	;wreg free
  5430  01056A  6E38               	movwf	_buttons,c	;volatile
  5431                           
  5432                           ;mdb.c: 65: notenum = buttons;
  5433  01056C  C038  F04D         	movff	_buttons,_notenum	;volatile
  5434                           
  5435                           ;mdb.c: 66: switch(buttons)
  5436  010570  D048               	goto	l2331
  5437  010572  0EC7               	movlw	low _tenrand
  5438  010574  6E29               	movwf	displ_note@notestring,c
  5439  010576  0EFF               	movlw	high _tenrand
  5440  010578  6E2A               	movwf	displ_note@notestring+1,c
  5441  01057A  EC8A  F08A         	call	_displ_note	;wreg free
  5442  01057E  6E42               	movwf	_dspposition,c
  5443                           
  5444                           ;mdb.c: 70: enable_notes(0x01);
  5445  010580  0E01               	movlw	1
  5446  010582  ECD0  F087         	call	_enable_notes
  5447                           
  5448                           ;mdb.c: 71: break;
  5449  010586  D050               	goto	l2333
  5450  010588  0EE8               	movlw	low _twentyrand
  5451  01058A  6E29               	movwf	displ_note@notestring,c
  5452  01058C  0EFF               	movlw	high _twentyrand
  5453  01058E  6E2A               	movwf	displ_note@notestring+1,c
  5454  010590  EC8A  F08A         	call	_displ_note	;wreg free
  5455  010594  6E42               	movwf	_dspposition,c
  5456                           
  5457                           ;mdb.c: 74: enable_notes(0x02);
  5458  010596  0E02               	movlw	2
  5459  010598  ECD0  F087         	call	_enable_notes
  5460                           
  5461                           ;mdb.c: 75: break;
  5462  01059C  D045               	goto	l2333
  5463  01059E  0EE0               	movlw	low _fiftyrand
  5464  0105A0  6E29               	movwf	displ_note@notestring,c
  5465  0105A2  0EFF               	movlw	high _fiftyrand
  5466  0105A4  6E2A               	movwf	displ_note@notestring+1,c
  5467  0105A6  EC8A  F08A         	call	_displ_note	;wreg free
  5468  0105AA  6E42               	movwf	_dspposition,c
  5469                           
  5470                           ;mdb.c: 78: enable_notes(0x04);
  5471  0105AC  0E04               	movlw	4
  5472  0105AE  ECD0  F087         	call	_enable_notes
  5473                           
  5474                           ;mdb.c: 79: break;
  5475  0105B2  D03A               	goto	l2333
  5476  0105B4  0ED8               	movlw	low _hundredrand
  5477  0105B6  6E29               	movwf	displ_note@notestring,c
  5478  0105B8  0EFF               	movlw	high _hundredrand
  5479  0105BA  6E2A               	movwf	displ_note@notestring+1,c
  5480  0105BC  EC8A  F08A         	call	_displ_note	;wreg free
  5481  0105C0  6E42               	movwf	_dspposition,c
  5482                           
  5483                           ;mdb.c: 82: enable_notes(0x08);
  5484  0105C2  0E08               	movlw	8
  5485  0105C4  ECD0  F087         	call	_enable_notes
  5486                           
  5487                           ;mdb.c: 83: break;
  5488  0105C8  D02F               	goto	l2333
  5489  0105CA  0ED0               	movlw	low _twohundredrand
  5490  0105CC  6E29               	movwf	displ_note@notestring,c
  5491  0105CE  0EFF               	movlw	high _twohundredrand
  5492  0105D0  6E2A               	movwf	displ_note@notestring+1,c
  5493  0105D2  EC8A  F08A         	call	_displ_note	;wreg free
  5494  0105D6  6E42               	movwf	_dspposition,c
  5495                           
  5496                           ;mdb.c: 86: enable_notes(0x10);
  5497  0105D8  0E10               	movlw	16
  5498  0105DA  ECD0  F087         	call	_enable_notes
  5499                           
  5500                           ;mdb.c: 87: break;
  5501  0105DE  D024               	goto	l2333
  5502  0105E0  0E37               	movlw	low _servmsg
  5503  0105E2  6E24               	movwf	lcd_string@lcdstring,c
  5504  0105E4  0EFE               	movlw	high _servmsg
  5505  0105E6  6E25               	movwf	lcd_string@lcdstring+1,c
  5506  0105E8  0EE3               	movlw	low _line1
  5507  0105EA  6EF6               	movwf	tblptrl,c
  5508  0105EC                     	if	1	;There is more than 1 active tblptr byte
  5509  0105EC  0EFD               	movlw	high _line1
  5510  0105EE  6EF7               	movwf	tblptrh,c
  5511  0105F0                     	endif
  5512  0105F0                     	if	1	;There are 3 active tblptr bytes
  5513  0105F0  0E00               	movlw	low (_line1 shr (0+16))
  5514  0105F2  6EF8               	movwf	tblptru,c
  5515  0105F4                     	endif
  5516  0105F4  0008               	tblrd		*
  5517  0105F6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5518  0105FA  EC72  F085         	call	_lcd_string	;wreg free
  5519                           
  5520                           ;mdb.c: 90: mdbflags.noteset = 0;
  5521  0105FE  9A3E               	bcf	_mdbflags,5,c
  5522                           
  5523                           ;mdb.c: 92: }
  5524                           
  5525                           ;mdb.c: 91: default : break;
  5526  010600  D013               	goto	l2333
  5527  010602                     l2331:
  5528  010602  5038               	movf	_buttons,w,c	;volatile
  5529                           
  5530                           ; Switch size 1, requested type "space"
  5531                           ; Number of cases is 6, Range of values is 1 to 128
  5532                           ; switch strategies available:
  5533                           ; Name         Instructions Cycles
  5534                           ; simple_byte           19    10 (average)
  5535                           ;	Chosen strategy is simple_byte
  5536  010604  0A01               	xorlw	1	; case 1
  5537  010606  B4D8               	btfsc	status,2,c
  5538  010608  D7B4               	goto	l2332
  5539  01060A  0A03               	xorlw	3	; case 2
  5540  01060C  B4D8               	btfsc	status,2,c
  5541  01060E  D7BC               	goto	l2334
  5542  010610  0A06               	xorlw	6	; case 4
  5543  010612  B4D8               	btfsc	status,2,c
  5544  010614  D7C4               	goto	l2335
  5545  010616  0A0C               	xorlw	12	; case 8
  5546  010618  B4D8               	btfsc	status,2,c
  5547  01061A  D7CC               	goto	l2336
  5548  01061C  0A18               	xorlw	24	; case 16
  5549  01061E  B4D8               	btfsc	status,2,c
  5550  010620  D7D4               	goto	l2337
  5551  010622  0A90               	xorlw	144	; case 128
  5552  010624  B4D8               	btfsc	status,2,c
  5553  010626  D7DC               	goto	l2338
  5554  010628                     l2333:
  5555                           
  5556                           ;mdb.c: 93: ((uint8_t*) &noteen)[0] = noteen_byte;
  5557  010628  C03C  F03D         	movff	_noteen_byte,_noteen	;volatile
  5558  01062C  F000               	nop		;# 
  5559  01062E                     l2329:
  5560  01062E  AA3E               	btfss	_mdbflags,5,c
  5561  010630  0012               	return	
  5562  010632  D799               	goto	l2330
  5563  010634                     __end_of_set_notes:
  5564                           	opt stack 0
  5565                           tblptru	equ	0xFF8
  5566                           tblptrh	equ	0xFF7
  5567                           tblptrl	equ	0xFF6
  5568                           tablat	equ	0xFF5
  5569                           prodh	equ	0xFF4
  5570                           prodl	equ	0xFF3
  5571                           postinc0	equ	0xFEE
  5572                           wreg	equ	0xFE8
  5573                           indf2	equ	0xFDF
  5574                           fsr2h	equ	0xFDA
  5575                           fsr2l	equ	0xFD9
  5576                           status	equ	0xFD8
  5577                           
  5578 ;; *************** function _enable_notes *****************
  5579 ;; Defined at:
  5580 ;;		line 98 in file "mdb.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  notenum         1    wreg     unsigned char 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  notenum         1   32[COMRAM] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;Total ram usage:        1 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    9
  5601 ;; This function calls:
  5602 ;;		_butindb
  5603 ;;		_displ_nendis
  5604 ;;		_lcd_string
  5605 ;;		_save_notes
  5606 ;; This function is called by:
  5607 ;;		_set_notes
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text29
  5612  010FA0                     __ptext29:
  5613                           	opt stack 0
  5614  010FA0                     _enable_notes:
  5615                           	opt stack 19
  5616                           
  5617                           ;incstack = 0
  5618                           ;enable_notes@notenum stored from wreg
  5619  010FA0  6E2B               	movwf	enable_notes@notenum,c
  5620                           
  5621                           ;mdb.c: 100: mdbflags.endis = 1;
  5622  010FA2  8C3E               	bsf	_mdbflags,6,c
  5623                           
  5624                           ;mdb.c: 101: displ_nendis(notenum);
  5625  010FA4  502B               	movf	enable_notes@notenum,w,c
  5626  010FA6  EC60  F08B         	call	_displ_nendis
  5627                           
  5628                           ;mdb.c: 102: while(mdbflags.endis)
  5629  010FAA  D034               	goto	l2348
  5630  010FAC                     
  5631                           ;mdb.c: 103: {
  5632                           ;mdb.c: 104: buttons = butindb();
  5633  010FAC  EC79  F08B         	call	_butindb	;wreg free
  5634  010FB0  6E38               	movwf	_buttons,c	;volatile
  5635                           
  5636                           ;mdb.c: 105: switch(buttons)
  5637  010FB2  D026               	goto	l2346
  5638  010FB4  503C               	movf	_noteen_byte,w,c	;volatile
  5639  010FB6  102B               	iorwf	enable_notes@notenum,w,c
  5640  010FB8  6E3C               	movwf	_noteen_byte,c	;volatile
  5641                           
  5642                           ;mdb.c: 108: save_notes();
  5643  010FBA  EC31  F08C         	call	_save_notes	;wreg free
  5644                           
  5645                           ;mdb.c: 109: displ_nendis(notenum);
  5646  010FBE  502B               	movf	enable_notes@notenum,w,c
  5647  010FC0  EC60  F08B         	call	_displ_nendis
  5648                           
  5649                           ;mdb.c: 110: break;
  5650  010FC4  D027               	goto	l2348
  5651  010FC6  502B               	movf	enable_notes@notenum,w,c
  5652  010FC8  0AFF               	xorlw	255
  5653  010FCA  143C               	andwf	_noteen_byte,w,c	;volatile
  5654  010FCC  6E3C               	movwf	_noteen_byte,c	;volatile
  5655                           
  5656                           ;mdb.c: 112: save_notes();
  5657  010FCE  EC31  F08C         	call	_save_notes	;wreg free
  5658                           
  5659                           ;mdb.c: 113: displ_nendis(notenum);
  5660  010FD2  502B               	movf	enable_notes@notenum,w,c
  5661  010FD4  EC60  F08B         	call	_displ_nendis
  5662                           
  5663                           ;mdb.c: 114: break;
  5664  010FD8  D01D               	goto	l2348
  5665  010FDA                     l2350:
  5666  010FDA  9C3E               	bcf	_mdbflags,6,c
  5667                           
  5668                           ;mdb.c: 116: lcd_string(setnotes, line1);
  5669  010FDC  0EF2               	movlw	low _setnotes
  5670  010FDE  6E24               	movwf	lcd_string@lcdstring,c
  5671  010FE0  0EFD               	movlw	high _setnotes
  5672  010FE2  6E25               	movwf	lcd_string@lcdstring+1,c
  5673  010FE4  0EE3               	movlw	low _line1
  5674  010FE6  6EF6               	movwf	tblptrl,c
  5675  010FE8                     	if	1	;There is more than 1 active tblptr byte
  5676  010FE8  0EFD               	movlw	high _line1
  5677  010FEA  6EF7               	movwf	tblptrh,c
  5678  010FEC                     	endif
  5679  010FEC                     	if	1	;There are 3 active tblptr bytes
  5680  010FEC  0E00               	movlw	low (_line1 shr (0+16))
  5681  010FEE  6EF8               	movwf	tblptru,c
  5682  010FF0                     	endif
  5683  010FF0  0008               	tblrd		*
  5684  010FF2  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5685  010FF6  EC72  F085         	call	_lcd_string	;wreg free
  5686                           
  5687                           ;mdb.c: 117: buttons = 0;
  5688  010FFA  0E00               	movlw	0
  5689  010FFC  6E38               	movwf	_buttons,c	;volatile
  5690                           
  5691                           ;mdb.c: 119: }
  5692                           
  5693                           ;mdb.c: 118: default : break;
  5694  010FFE  D00A               	goto	l2348
  5695  011000                     l2346:
  5696  011000  5038               	movf	_buttons,w,c	;volatile
  5697                           
  5698                           ; Switch size 1, requested type "space"
  5699                           ; Number of cases is 3, Range of values is 1 to 128
  5700                           ; switch strategies available:
  5701                           ; Name         Instructions Cycles
  5702                           ; simple_byte           10     6 (average)
  5703                           ;	Chosen strategy is simple_byte
  5704  011002  0A01               	xorlw	1	; case 1
  5705  011004  B4D8               	btfsc	status,2,c
  5706  011006  D7D6               	goto	l2347
  5707  011008  0A03               	xorlw	3	; case 2
  5708  01100A  B4D8               	btfsc	status,2,c
  5709  01100C  D7DC               	goto	l2349
  5710  01100E  0A82               	xorlw	130	; case 128
  5711  011010  B4D8               	btfsc	status,2,c
  5712  011012  D7E3               	goto	l2350
  5713  011014                     l2348:
  5714  011014  AC3E               	btfss	_mdbflags,6,c
  5715  011016  0012               	return	
  5716  011018  D7C9               	goto	l2345
  5717  01101A                     __end_of_enable_notes:
  5718                           	opt stack 0
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           postinc0	equ	0xFEE
  5726                           wreg	equ	0xFE8
  5727                           indf2	equ	0xFDF
  5728                           fsr2h	equ	0xFDA
  5729                           fsr2l	equ	0xFD9
  5730                           status	equ	0xFD8
  5731                           
  5732 ;; *************** function _save_notes *****************
  5733 ;; Defined at:
  5734 ;;		line 129 in file "mdb.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;Total ram usage:        0 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    3
  5755 ;; This function calls:
  5756 ;;		_DATAEE_WriteByte
  5757 ;; This function is called by:
  5758 ;;		_enable_notes
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text30
  5763  011862                     __ptext30:
  5764                           	opt stack 0
  5765  011862                     _save_notes:
  5766                           	opt stack 24
  5767                           
  5768                           ;mdb.c: 131: DATAEE_WriteByte(notebits, noteen_byte);
  5769                           
  5770                           ;incstack = 0
  5771  011862  0EAB               	movlw	low _notebits
  5772  011864  6EF6               	movwf	tblptrl,c
  5773  011866                     	if	1	;There is more than 1 active tblptr byte
  5774  011866  0EFD               	movlw	high _notebits
  5775  011868  6EF7               	movwf	tblptrh,c
  5776  01186A                     	endif
  5777  01186A                     	if	1	;There are 3 active tblptr bytes
  5778  01186A  0E00               	movlw	low (_notebits shr (0+16))
  5779  01186C  6EF8               	movwf	tblptru,c
  5780  01186E                     	endif
  5781  01186E  0009               	tblrd		*+
  5782  011870  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  5783  011874  000A               	tblrd		*-
  5784  011876  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  5785  01187A  C03C  F01F         	movff	_noteen_byte,DATAEE_WriteByte@bData	;volatile
  5786  01187E  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
  5787  011882  0012               	return		;funcret
  5788  011884                     __end_of_save_notes:
  5789                           	opt stack 0
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           postinc0	equ	0xFEE
  5797                           wreg	equ	0xFE8
  5798                           indf2	equ	0xFDF
  5799                           fsr2h	equ	0xFDA
  5800                           fsr2l	equ	0xFD9
  5801                           status	equ	0xFD8
  5802                           
  5803 ;; *************** function _displ_nendis *****************
  5804 ;; Defined at:
  5805 ;;		line 64 in file "lcd.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  note2disp       1    wreg     unsigned char 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  note2disp       1   30[COMRAM] unsigned char 
  5810 ;;  x               1   31[COMRAM] unsigned char 
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;Total ram usage:        2 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    8
  5827 ;; This function calls:
  5828 ;;		_lcd_string
  5829 ;; This function is called by:
  5830 ;;		_enable_notes
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text31
  5835  0116C0                     __ptext31:
  5836                           	opt stack 0
  5837  0116C0                     _displ_nendis:
  5838                           	opt stack 19
  5839                           
  5840                           ;incstack = 0
  5841                           ;displ_nendis@note2disp stored from wreg
  5842  0116C0  6E29               	movwf	displ_nendis@note2disp,c
  5843                           
  5844                           ;lcd.c: 66: uint8_t x = note2disp & noteen_byte;
  5845  0116C2  5029               	movf	displ_nendis@note2disp,w,c
  5846  0116C4  143C               	andwf	_noteen_byte,w,c	;volatile
  5847  0116C6  6E2A               	movwf	displ_nendis@x,c
  5848                           
  5849                           ;lcd.c: 67: if(x != 0x00)
  5850  0116C8  502A               	movf	displ_nendis@x,w,c
  5851  0116CA  B4D8               	btfsc	status,2,c
  5852  0116CC  D009               	goto	l1283
  5853                           
  5854                           ;lcd.c: 68: {
  5855                           ;lcd.c: 69: lcd_string(enabled, dspposition);
  5856  0116CE  0EBD               	movlw	low _enabled
  5857  0116D0  6E24               	movwf	lcd_string@lcdstring,c
  5858  0116D2  0EFF               	movlw	high _enabled
  5859  0116D4  6E25               	movwf	lcd_string@lcdstring+1,c
  5860  0116D6  C042  F026         	movff	_dspposition,lcd_string@lcdline
  5861  0116DA  EC72  F085         	call	_lcd_string	;wreg free
  5862                           
  5863                           ;lcd.c: 70: }
  5864  0116DE  0012               	return	
  5865  0116E0                     l1283:
  5866                           
  5867                           ;lcd.c: 71: else
  5868                           ;lcd.c: 72: {
  5869                           ;lcd.c: 73: lcd_string(disabled, dspposition);
  5870  0116E0  0EB3               	movlw	low _disabled
  5871  0116E2  6E24               	movwf	lcd_string@lcdstring,c
  5872  0116E4  0EFF               	movlw	high _disabled
  5873  0116E6  6E25               	movwf	lcd_string@lcdstring+1,c
  5874  0116E8  C042  F026         	movff	_dspposition,lcd_string@lcdline
  5875  0116EC  EC72  F085         	call	_lcd_string	;wreg free
  5876  0116F0  0012               	return	
  5877  0116F2                     __end_of_displ_nendis:
  5878                           	opt stack 0
  5879                           tblptru	equ	0xFF8
  5880                           tblptrh	equ	0xFF7
  5881                           tblptrl	equ	0xFF6
  5882                           tablat	equ	0xFF5
  5883                           prodh	equ	0xFF4
  5884                           prodl	equ	0xFF3
  5885                           postinc0	equ	0xFEE
  5886                           wreg	equ	0xFE8
  5887                           indf2	equ	0xFDF
  5888                           fsr2h	equ	0xFDA
  5889                           fsr2l	equ	0xFD9
  5890                           status	equ	0xFD8
  5891                           
  5892 ;; *************** function _displ_note *****************
  5893 ;; Defined at:
  5894 ;;		line 57 in file "lcd.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  notestring      2   30[COMRAM] PTR unsigned char 
  5897 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  5898 ;;		 -> tenrand(9), 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      unsigned char 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;Total ram usage:        2 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    8
  5917 ;; This function calls:
  5918 ;;		_lcd_string
  5919 ;;		_lcd_write
  5920 ;; This function is called by:
  5921 ;;		_set_notes
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text32
  5926  011514                     __ptext32:
  5927                           	opt stack 0
  5928  011514                     _displ_note:
  5929                           	opt stack 20
  5930                           
  5931                           ;lcd.c: 59: lcd_write(dispclr);
  5932                           
  5933                           ;incstack = 0
  5934  011514  0EED               	movlw	low _dispclr
  5935  011516  6EF6               	movwf	tblptrl,c
  5936  011518                     	if	1	;There is more than 1 active tblptr byte
  5937  011518  0EFD               	movlw	high _dispclr
  5938  01151A  6EF7               	movwf	tblptrh,c
  5939  01151C                     	endif
  5940  01151C                     	if	1	;There are 3 active tblptr bytes
  5941  01151C  0E00               	movlw	low (_dispclr shr (0+16))
  5942  01151E  6EF8               	movwf	tblptru,c
  5943  011520                     	endif
  5944  011520  0008               	tblrd		*
  5945  011522  50F5               	movf	tablat,w,c
  5946  011524  EC92  F08B         	call	_lcd_write
  5947                           
  5948                           ;lcd.c: 60: lcd_string(notestring, line2);
  5949  011528  C029  F024         	movff	displ_note@notestring,lcd_string@lcdstring
  5950  01152C  C02A  F025         	movff	displ_note@notestring+1,lcd_string@lcdstring+1
  5951  011530  0EE2               	movlw	low _line2
  5952  011532  6EF6               	movwf	tblptrl,c
  5953  011534                     	if	1	;There is more than 1 active tblptr byte
  5954  011534  0EFD               	movlw	high _line2
  5955  011536  6EF7               	movwf	tblptrh,c
  5956  011538                     	endif
  5957  011538                     	if	1	;There are 3 active tblptr bytes
  5958  011538  0E00               	movlw	low (_line2 shr (0+16))
  5959  01153A  6EF8               	movwf	tblptru,c
  5960  01153C                     	endif
  5961  01153C  0008               	tblrd		*
  5962  01153E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5963  011542  EC72  F085         	call	_lcd_string	;wreg free
  5964                           
  5965                           ;lcd.c: 61: return bflag+2;
  5966  011546  5046               	movf	_bflag,w,c
  5967  011548  0F02               	addlw	2
  5968  01154A  0012               	return	
  5969  01154C                     __end_of_displ_note:
  5970                           	opt stack 0
  5971                           tblptru	equ	0xFF8
  5972                           tblptrh	equ	0xFF7
  5973                           tblptrl	equ	0xFF6
  5974                           tablat	equ	0xFF5
  5975                           prodh	equ	0xFF4
  5976                           prodl	equ	0xFF3
  5977                           postinc0	equ	0xFEE
  5978                           wreg	equ	0xFE8
  5979                           indf2	equ	0xFDF
  5980                           fsr2h	equ	0xFDA
  5981                           fsr2l	equ	0xFD9
  5982                           status	equ	0xFD8
  5983                           
  5984 ;; *************** function _price_set *****************
  5985 ;; Defined at:
  5986 ;;		line 315 in file "vend.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:   10
  6007 ;; This function calls:
  6008 ;;		_Read_Service
  6009 ;;		_butindb
  6010 ;;		_lcd_string
  6011 ;;		_set_price
  6012 ;; This function is called by:
  6013 ;;		_enter_service
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text33
  6018  010F20                     __ptext33:
  6019                           	opt stack 0
  6020  010F20                     _price_set:
  6021                           	opt stack 19
  6022                           
  6023                           ;vend.c: 317: venflags.priceset = 1;
  6024                           
  6025                           ;incstack = 0
  6026  010F20  8031               	bsf	_venflags+1,0,c
  6027                           
  6028                           ;vend.c: 318: lcd_string(pricesetmsg, line1);
  6029  010F22  0E6C               	movlw	low _pricesetmsg
  6030  010F24  6E24               	movwf	lcd_string@lcdstring,c
  6031  010F26  0EFF               	movlw	high _pricesetmsg
  6032  010F28  6E25               	movwf	lcd_string@lcdstring+1,c
  6033  010F2A  0EE3               	movlw	low _line1
  6034  010F2C  6EF6               	movwf	tblptrl,c
  6035  010F2E                     	if	1	;There is more than 1 active tblptr byte
  6036  010F2E  0EFD               	movlw	high _line1
  6037  010F30  6EF7               	movwf	tblptrh,c
  6038  010F32                     	endif
  6039  010F32                     	if	1	;There are 3 active tblptr bytes
  6040  010F32  0E00               	movlw	low (_line1 shr (0+16))
  6041  010F34  6EF8               	movwf	tblptru,c
  6042  010F36                     	endif
  6043  010F36  0008               	tblrd		*
  6044  010F38  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6045  010F3C  EC72  F085         	call	_lcd_string	;wreg free
  6046                           
  6047                           ;vend.c: 319: lcd_string(pricesetm2, line2);
  6048  010F40  0E7A               	movlw	low _pricesetm2
  6049  010F42  6E24               	movwf	lcd_string@lcdstring,c
  6050  010F44  0EFE               	movlw	high _pricesetm2
  6051  010F46  6E25               	movwf	lcd_string@lcdstring+1,c
  6052  010F48  0EE2               	movlw	low _line2
  6053  010F4A  6EF6               	movwf	tblptrl,c
  6054  010F4C                     	if	1	;There is more than 1 active tblptr byte
  6055  010F4C  0EFD               	movlw	high _line2
  6056  010F4E  6EF7               	movwf	tblptrh,c
  6057  010F50                     	endif
  6058  010F50                     	if	1	;There are 3 active tblptr bytes
  6059  010F50  0E00               	movlw	low (_line2 shr (0+16))
  6060  010F52  6EF8               	movwf	tblptru,c
  6061  010F54                     	endif
  6062  010F54  0008               	tblrd		*
  6063  010F56  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6064  010F5A  EC72  F085         	call	_lcd_string	;wreg free
  6065                           
  6066                           ;vend.c: 320: while(venflags.priceset)
  6067  010F5E  D00E               	goto	l1840
  6068  010F60                     
  6069                           ;vend.c: 321: {
  6070                           ;vend.c: 322: buttons = butindb();
  6071  010F60  EC79  F08B         	call	_butindb	;wreg free
  6072  010F64  6E38               	movwf	_buttons,c	;volatile
  6073                           
  6074                           ;vend.c: 323: if(buttons != 0x00)
  6075  010F66  5038               	movf	_buttons,w,c	;volatile
  6076  010F68  B4D8               	btfsc	status,2,c
  6077  010F6A  D003               	goto	l1839
  6078                           
  6079                           ;vend.c: 324: {
  6080                           ;vend.c: 325: set_price(buttons);
  6081  010F6C  5038               	movf	_buttons,w,c	;volatile
  6082  010F6E  EC00  F080         	call	_set_price
  6083  010F72                     l1839:
  6084                           
  6085                           ;vend.c: 326: }
  6086                           ;vend.c: 327: if(Read_Service() == 0x00)
  6087  010F72  ECF4  F08C         	call	_Read_Service	;wreg free
  6088  010F76  0900               	iorlw	0
  6089  010F78  B4D8               	btfsc	status,2,c
  6090                           
  6091                           ;vend.c: 328: {
  6092                           ;vend.c: 329: venflags.priceset = 0;
  6093  010F7A  9031               	bcf	_venflags+1,0,c
  6094  010F7C                     l1840:
  6095  010F7C  B031               	btfsc	_venflags+1,0,c
  6096  010F7E  D7F0               	goto	l1838
  6097                           
  6098                           ;vend.c: 330: }
  6099                           ;vend.c: 331: }
  6100                           ;vend.c: 332: lcd_string(servmsg, line1);
  6101  010F80  0E37               	movlw	low _servmsg
  6102  010F82  6E24               	movwf	lcd_string@lcdstring,c
  6103  010F84  0EFE               	movlw	high _servmsg
  6104  010F86  6E25               	movwf	lcd_string@lcdstring+1,c
  6105  010F88  0EE3               	movlw	low _line1
  6106  010F8A  6EF6               	movwf	tblptrl,c
  6107  010F8C                     	if	1	;There is more than 1 active tblptr byte
  6108  010F8C  0EFD               	movlw	high _line1
  6109  010F8E  6EF7               	movwf	tblptrh,c
  6110  010F90                     	endif
  6111  010F90                     	if	1	;There are 3 active tblptr bytes
  6112  010F90  0E00               	movlw	low (_line1 shr (0+16))
  6113  010F92  6EF8               	movwf	tblptru,c
  6114  010F94                     	endif
  6115  010F94  0008               	tblrd		*
  6116  010F96  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6117  010F9A  EC72  F085         	call	_lcd_string	;wreg free
  6118  010F9E  0012               	return		;funcret
  6119  010FA0                     __end_of_price_set:
  6120                           	opt stack 0
  6121                           tblptru	equ	0xFF8
  6122                           tblptrh	equ	0xFF7
  6123                           tblptrl	equ	0xFF6
  6124                           tablat	equ	0xFF5
  6125                           prodh	equ	0xFF4
  6126                           prodl	equ	0xFF3
  6127                           postinc0	equ	0xFEE
  6128                           wreg	equ	0xFE8
  6129                           indf2	equ	0xFDF
  6130                           fsr2h	equ	0xFDA
  6131                           fsr2l	equ	0xFD9
  6132                           status	equ	0xFD8
  6133                           
  6134 ;; *************** function _set_price *****************
  6135 ;; Defined at:
  6136 ;;		line 335 in file "vend.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  buttons         1    wreg     unsigned char 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  buttons         1   12[BANK0 ] unsigned char 
  6141 ;;  channel         1   13[BANK0 ] unsigned char 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  1    wreg      void 
  6144 ;; Registers used:
  6145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;Total ram usage:        4 bytes
  6156 ;; Hardware stack levels used:    1
  6157 ;; Hardware stack levels required when called:    9
  6158 ;; This function calls:
  6159 ;;		_DATAEE_ReadByte
  6160 ;;		_DATAEE_WriteByte
  6161 ;;		_butindb
  6162 ;;		_displ_price
  6163 ;;		_lcd_string
  6164 ;; This function is called by:
  6165 ;;		_price_set
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text34
  6170  010000                     __ptext34:
  6171                           	opt stack 0
  6172  010000                     _set_price:
  6173                           	opt stack 19
  6174                           
  6175                           ;incstack = 0
  6176                           ;set_price@buttons stored from wreg
  6177  010000  0100               	movlb	0	; () banked
  6178  010002  6FA6               	movwf	set_price@buttons& (0+255),b
  6179                           
  6180                           ;vend.c: 337: venflags.setprice = 1;
  6181  010004  8231               	bsf	_venflags+1,1,c
  6182                           
  6183                           ;vend.c: 338: uint8_t channel = 0x00;
  6184  010006  0E00               	movlw	0
  6185  010008  0100               	movlb	0	; () banked
  6186  01000A  6FA7               	movwf	set_price@channel& (0+255),b
  6187                           
  6188                           ;vend.c: 340: while(buttons != 0)
  6189  01000C  D004               	goto	l1845
  6190  01000E                     
  6191                           ; BSR set to: 0
  6192                           ;vend.c: 341: {
  6193                           ;vend.c: 342: channel++;
  6194                           
  6195                           ; BSR set to: 0
  6196  01000E  2BA7               	incf	set_price@channel& (0+255),f,b
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;vend.c: 343: buttons = buttons >> 1;
  6200  010010  90D8               	bcf	status,0,c
  6201  010012  31A6               	rrcf	set_price@buttons& (0+255),w,b
  6202  010014  6FA6               	movwf	set_price@buttons& (0+255),b
  6203  010016                     l1845:
  6204                           
  6205                           ; BSR set to: 0
  6206                           
  6207                           ; BSR set to: 0
  6208  010016  51A6               	movf	set_price@buttons& (0+255),w,b
  6209  010018  A4D8               	btfss	status,2,c
  6210  01001A  D7F9               	goto	l1846
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;vend.c: 344: }
  6214                           ;vend.c: 346: channel--;
  6215                           
  6216                           ; BSR set to: 0
  6217  01001C  07A7               	decf	set_price@channel& (0+255),f,b
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;vend.c: 347: vendprice = DATAEE_ReadByte(pricestore + channel);
  6221  01001E  0EAF               	movlw	low _pricestore
  6222  010020  6EF6               	movwf	tblptrl,c
  6223  010022                     	if	1	;There is more than 1 active tblptr byte
  6224  010022  0EFD               	movlw	high _pricestore
  6225  010024  6EF7               	movwf	tblptrh,c
  6226  010026                     	endif
  6227  010026                     	if	1	;There are 3 active tblptr bytes
  6228  010026  0E00               	movlw	low (_pricestore shr (0+16))
  6229  010028  6EF8               	movwf	tblptru,c
  6230  01002A                     	endif
  6231  01002A  0009               	tblrd		*+
  6232  01002C  CFF5 F02B          	movff	tablat,??_set_price
  6233  010030  0009               	tblrd		*+
  6234  010032  CFF5 F02C          	movff	tablat,??_set_price+1
  6235  010036  51A7               	movf	set_price@channel& (0+255),w,b
  6236  010038  242B               	addwf	??_set_price,w,c
  6237  01003A  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  6238  01003C  0E00               	movlw	0
  6239  01003E  202C               	addwfc	??_set_price+1,w,c
  6240  010040  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  6241  010042  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  6242  010046  6E37               	movwf	_vendprice,c	;volatile
  6243                           
  6244                           ;vend.c: 348: displ_price(vendprice);
  6245  010048  5037               	movf	_vendprice,w,c	;volatile
  6246  01004A  EC30  F08A         	call	_displ_price
  6247                           
  6248                           ;vend.c: 349: while(venflags.setprice)
  6249  01004E  D067               	goto	l1852
  6250  010050                     
  6251                           ;vend.c: 350: {
  6252                           ;vend.c: 351: buttons = butindb();
  6253  010050  EC79  F08B         	call	_butindb	;wreg free
  6254  010054  0100               	movlb	0	; () banked
  6255  010056  6FA6               	movwf	set_price@buttons& (0+255),b
  6256                           
  6257                           ;vend.c: 353: switch(buttons)
  6258  010058  D057               	goto	l1850
  6259  01005A                     
  6260                           ; BSR set to: 0
  6261                           
  6262                           ; BSR set to: 0
  6263  01005A  2A37               	incf	_vendprice,f,c	;volatile
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;vend.c: 356: DATAEE_WriteByte(pricestore + channel, vendprice);
  6267  01005C  0EAF               	movlw	low _pricestore
  6268  01005E  6EF6               	movwf	tblptrl,c
  6269  010060                     	if	1	;There is more than 1 active tblptr byte
  6270  010060  0EFD               	movlw	high _pricestore
  6271  010062  6EF7               	movwf	tblptrh,c
  6272  010064                     	endif
  6273  010064                     	if	1	;There are 3 active tblptr bytes
  6274  010064  0E00               	movlw	low (_pricestore shr (0+16))
  6275  010066  6EF8               	movwf	tblptru,c
  6276  010068                     	endif
  6277  010068  0009               	tblrd		*+
  6278  01006A  CFF5 F02B          	movff	tablat,??_set_price
  6279  01006E  0009               	tblrd		*+
  6280  010070  CFF5 F02C          	movff	tablat,??_set_price+1
  6281  010074  51A7               	movf	set_price@channel& (0+255),w,b
  6282  010076  242B               	addwf	??_set_price,w,c
  6283  010078  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6284  01007A  0E00               	movlw	0
  6285  01007C  202C               	addwfc	??_set_price+1,w,c
  6286  01007E  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6287  010080  C037  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  6288  010084  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
  6289                           
  6290                           ;vend.c: 357: displ_price(vendprice);
  6291  010088  5037               	movf	_vendprice,w,c	;volatile
  6292  01008A  EC30  F08A         	call	_displ_price
  6293                           
  6294                           ;vend.c: 358: break;
  6295  01008E  D047               	goto	l1852
  6296  010090  0637               	decf	_vendprice,f,c	;volatile
  6297                           
  6298                           ;vend.c: 360: DATAEE_WriteByte(pricestore + channel, vendprice);
  6299  010092  0EAF               	movlw	low _pricestore
  6300  010094  6EF6               	movwf	tblptrl,c
  6301  010096                     	if	1	;There is more than 1 active tblptr byte
  6302  010096  0EFD               	movlw	high _pricestore
  6303  010098  6EF7               	movwf	tblptrh,c
  6304  01009A                     	endif
  6305  01009A                     	if	1	;There are 3 active tblptr bytes
  6306  01009A  0E00               	movlw	low (_pricestore shr (0+16))
  6307  01009C  6EF8               	movwf	tblptru,c
  6308  01009E                     	endif
  6309  01009E  0009               	tblrd		*+
  6310  0100A0  CFF5 F02B          	movff	tablat,??_set_price
  6311  0100A4  0009               	tblrd		*+
  6312  0100A6  CFF5 F02C          	movff	tablat,??_set_price+1
  6313  0100AA  0100               	movlb	0	; () banked
  6314  0100AC  51A7               	movf	set_price@channel& (0+255),w,b
  6315  0100AE  242B               	addwf	??_set_price,w,c
  6316  0100B0  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6317  0100B2  0E00               	movlw	0
  6318  0100B4  202C               	addwfc	??_set_price+1,w,c
  6319  0100B6  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6320  0100B8  C037  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  6321  0100BC  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
  6322                           
  6323                           ;vend.c: 361: displ_price(vendprice);
  6324  0100C0  5037               	movf	_vendprice,w,c	;volatile
  6325  0100C2  EC30  F08A         	call	_displ_price
  6326                           
  6327                           ;vend.c: 362: break;
  6328  0100C6  D02B               	goto	l1852
  6329  0100C8                     l1854:
  6330                           
  6331                           ; BSR set to: 0
  6332  0100C8  9231               	bcf	_venflags+1,1,c
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;vend.c: 364: lcd_string(pricesetmsg, line1);
  6336  0100CA  0E6C               	movlw	low _pricesetmsg
  6337  0100CC  6E24               	movwf	lcd_string@lcdstring,c
  6338  0100CE  0EFF               	movlw	high _pricesetmsg
  6339  0100D0  6E25               	movwf	lcd_string@lcdstring+1,c
  6340  0100D2  0EE3               	movlw	low _line1
  6341  0100D4  6EF6               	movwf	tblptrl,c
  6342  0100D6                     	if	1	;There is more than 1 active tblptr byte
  6343  0100D6  0EFD               	movlw	high _line1
  6344  0100D8  6EF7               	movwf	tblptrh,c
  6345  0100DA                     	endif
  6346  0100DA                     	if	1	;There are 3 active tblptr bytes
  6347  0100DA  0E00               	movlw	low (_line1 shr (0+16))
  6348  0100DC  6EF8               	movwf	tblptru,c
  6349  0100DE                     	endif
  6350  0100DE  0008               	tblrd		*
  6351  0100E0  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6352  0100E4  EC72  F085         	call	_lcd_string	;wreg free
  6353                           
  6354                           ;vend.c: 365: lcd_string(pricesetm2, line2);
  6355  0100E8  0E7A               	movlw	low _pricesetm2
  6356  0100EA  6E24               	movwf	lcd_string@lcdstring,c
  6357  0100EC  0EFE               	movlw	high _pricesetm2
  6358  0100EE  6E25               	movwf	lcd_string@lcdstring+1,c
  6359  0100F0  0EE2               	movlw	low _line2
  6360  0100F2  6EF6               	movwf	tblptrl,c
  6361  0100F4                     	if	1	;There is more than 1 active tblptr byte
  6362  0100F4  0EFD               	movlw	high _line2
  6363  0100F6  6EF7               	movwf	tblptrh,c
  6364  0100F8                     	endif
  6365  0100F8                     	if	1	;There are 3 active tblptr bytes
  6366  0100F8  0E00               	movlw	low (_line2 shr (0+16))
  6367  0100FA  6EF8               	movwf	tblptru,c
  6368  0100FC                     	endif
  6369  0100FC  0008               	tblrd		*
  6370  0100FE  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6371  010102  EC72  F085         	call	_lcd_string	;wreg free
  6372                           
  6373                           ;vend.c: 368: }
  6374                           
  6375                           ;vend.c: 367: break;
  6376  010106  D00B               	goto	l1852
  6377  010108                     l1850:
  6378  010108  0100               	movlb	0	; () banked
  6379  01010A  51A6               	movf	set_price@buttons& (0+255),w,b
  6380                           
  6381                           ; Switch size 1, requested type "space"
  6382                           ; Number of cases is 3, Range of values is 1 to 128
  6383                           ; switch strategies available:
  6384                           ; Name         Instructions Cycles
  6385                           ; simple_byte           10     6 (average)
  6386                           ;	Chosen strategy is simple_byte
  6387  01010C  0A01               	xorlw	1	; case 1
  6388  01010E  B4D8               	btfsc	status,2,c
  6389  010110  D7A4               	goto	l1851
  6390  010112  0A03               	xorlw	3	; case 2
  6391  010114  B4D8               	btfsc	status,2,c
  6392  010116  D7BC               	goto	l1853
  6393  010118  0A82               	xorlw	130	; case 128
  6394  01011A  B4D8               	btfsc	status,2,c
  6395  01011C  D7D5               	goto	l1854
  6396  01011E                     l1852:
  6397                           
  6398                           ; BSR set to: 0
  6399  01011E  A231               	btfss	_venflags+1,1,c
  6400  010120  0012               	return	
  6401  010122  D796               	goto	l1849
  6402  010124                     __end_of_set_price:
  6403                           	opt stack 0
  6404                           tblptru	equ	0xFF8
  6405                           tblptrh	equ	0xFF7
  6406                           tblptrl	equ	0xFF6
  6407                           tablat	equ	0xFF5
  6408                           prodh	equ	0xFF4
  6409                           prodl	equ	0xFF3
  6410                           postinc0	equ	0xFEE
  6411                           wreg	equ	0xFE8
  6412                           indf2	equ	0xFDF
  6413                           fsr2h	equ	0xFDA
  6414                           fsr2l	equ	0xFD9
  6415                           status	equ	0xFD8
  6416                           
  6417 ;; *************** function _displ_price *****************
  6418 ;; Defined at:
  6419 ;;		line 185 in file "lcd.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  vendprice       1    wreg     unsigned char 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  vendprice       1   31[COMRAM] unsigned char 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      void 
  6426 ;; Registers used:
  6427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;Total ram usage:        1 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    8
  6440 ;; This function calls:
  6441 ;;		_displ_hex
  6442 ;;		_lcd_dispadd
  6443 ;;		_lcd_write
  6444 ;;		_lcd_writeC
  6445 ;; This function is called by:
  6446 ;;		_set_price
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text35
  6451  011460                     __ptext35:
  6452                           	opt stack 0
  6453  011460                     _displ_price:
  6454                           	opt stack 19
  6455                           
  6456                           ;incstack = 0
  6457                           ;displ_price@vendprice stored from wreg
  6458  011460  6E2A               	movwf	displ_price@vendprice,c
  6459                           
  6460                           ;lcd.c: 187: lcd_write(dispclr);
  6461  011462  0EED               	movlw	low _dispclr
  6462  011464  6EF6               	movwf	tblptrl,c
  6463  011466                     	if	1	;There is more than 1 active tblptr byte
  6464  011466  0EFD               	movlw	high _dispclr
  6465  011468  6EF7               	movwf	tblptrh,c
  6466  01146A                     	endif
  6467  01146A                     	if	1	;There are 3 active tblptr bytes
  6468  01146A  0E00               	movlw	low (_dispclr shr (0+16))
  6469  01146C  6EF8               	movwf	tblptru,c
  6470  01146E                     	endif
  6471  01146E  0008               	tblrd		*
  6472  011470  50F5               	movf	tablat,w,c
  6473  011472  EC92  F08B         	call	_lcd_write
  6474                           
  6475                           ;lcd.c: 188: lcd_dispadd(line2 + 4);
  6476  011476  0EE2               	movlw	low _line2
  6477  011478  6EF6               	movwf	tblptrl,c
  6478  01147A                     	if	1	;There is more than 1 active tblptr byte
  6479  01147A  0EFD               	movlw	high _line2
  6480  01147C  6EF7               	movwf	tblptrh,c
  6481  01147E                     	endif
  6482  01147E                     	if	1	;There are 3 active tblptr bytes
  6483  01147E  0E00               	movlw	low (_line2 shr (0+16))
  6484  011480  6EF8               	movwf	tblptru,c
  6485  011482                     	endif
  6486  011482  0008               	tblrd		*
  6487  011484  50F5               	movf	tablat,w,c
  6488  011486  0F04               	addlw	4
  6489  011488  EC90  F08C         	call	_lcd_dispadd
  6490                           
  6491                           ;lcd.c: 189: lcd_writeC((uint8_t)'R');
  6492  01148C  0E52               	movlw	82
  6493  01148E  ECE8  F088         	call	_lcd_writeC
  6494                           
  6495                           ;lcd.c: 190: displ_hex(vendprice);
  6496  011492  502A               	movf	displ_price@vendprice,w,c
  6497  011494  6E27               	movwf	displ_hex@hexnum,c
  6498  011496  6A28               	clrf	displ_hex@hexnum+1,c
  6499  011498  6A29               	clrf	displ_hex@hexnum+2,c
  6500  01149A  EC17  F085         	call	_displ_hex	;wreg free
  6501  01149E  0012               	return		;funcret
  6502  0114A0                     __end_of_displ_price:
  6503                           	opt stack 0
  6504                           tblptru	equ	0xFF8
  6505                           tblptrh	equ	0xFF7
  6506                           tblptrl	equ	0xFF6
  6507                           tablat	equ	0xFF5
  6508                           prodh	equ	0xFF4
  6509                           prodl	equ	0xFF3
  6510                           postinc0	equ	0xFEE
  6511                           wreg	equ	0xFE8
  6512                           indf2	equ	0xFDF
  6513                           fsr2h	equ	0xFDA
  6514                           fsr2l	equ	0xFD9
  6515                           status	equ	0xFD8
  6516                           
  6517 ;; *************** function _Read_Service *****************
  6518 ;; Defined at:
  6519 ;;		line 265 in file "vend.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  senval          1   18[COMRAM] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      unsigned char 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;Total ram usage:        1 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    2
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_price_set
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text36
  6548  0119E8                     __ptext36:
  6549                           	opt stack 0
  6550  0119E8                     _Read_Service:
  6551                           	opt stack 26
  6552                           
  6553                           ;vend.c: 267: DAC1CON1 = 0x00;
  6554                           
  6555                           ;incstack = 0
  6556  0119E8  0E00               	movlw	0
  6557  0119EA  010F               	movlb	15	; () banked
  6558  0119EC  6F34               	movwf	52,b	;volatile
  6559                           
  6560                           ; BSR set to: 15
  6561                           ;vend.c: 268: uint8_t senval = CMOUT;
  6562  0119EE  CF3D F01D          	movff	3901,Read_Service@senval	;volatile
  6563                           
  6564                           ; BSR set to: 15
  6565                           ;vend.c: 269: DAC1CON1 = sensorval;
  6566  0119F2  C036  FF34         	movff	_sensorval,3892	;volatile
  6567                           
  6568                           ;vend.c: 270: return senval;
  6569  0119F6  501D               	movf	Read_Service@senval,w,c
  6570  0119F8  0012               	return	
  6571  0119FA                     __end_of_Read_Service:
  6572                           	opt stack 0
  6573                           tblptru	equ	0xFF8
  6574                           tblptrh	equ	0xFF7
  6575                           tblptrl	equ	0xFF6
  6576                           tablat	equ	0xFF5
  6577                           prodh	equ	0xFF4
  6578                           prodl	equ	0xFF3
  6579                           postinc0	equ	0xFEE
  6580                           wreg	equ	0xFE8
  6581                           indf2	equ	0xFDF
  6582                           fsr2h	equ	0xFDA
  6583                           fsr2l	equ	0xFD9
  6584                           status	equ	0xFD8
  6585                           
  6586 ;; *************** function _mdb_unlock *****************
  6587 ;; Defined at:
  6588 ;;		line 375 in file "mdb.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;Total ram usage:        1 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    3
  6609 ;; This function calls:
  6610 ;;		_CMP1_Initialize
  6611 ;;		_DAC1_Initialize
  6612 ;;		_TMR1_Initialize
  6613 ;;		_TMR3_Initialize
  6614 ;;		_TMR5_Initialize
  6615 ;; This function is called by:
  6616 ;;		_enter_service
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text37
  6621  0107E0                     __ptext37:
  6622                           	opt stack 0
  6623  0107E0                     _mdb_unlock:
  6624                           	opt stack 26
  6625                           
  6626                           ;mdb.c: 377: _delay((unsigned long)((50)*(12000000/4000.0)));
  6627                           
  6628                           ; BSR set to: 15
  6629                           ;incstack = 0
  6630  0107E0  0EC3               	movlw	195
  6631  0107E2  6E1F               	movwf	??_mdb_unlock& (0+255),c
  6632  0107E4  0ECD               	movlw	205
  6633  0107E6                     u2497:
  6634  0107E6  2EE8               	decfsz	wreg,f,c
  6635  0107E8  D7FE               	bra	u2497
  6636  0107EA  2E1F               	decfsz	??_mdb_unlock& (0+255),f,c
  6637  0107EC  D7FC               	bra	u2497
  6638  0107EE  F000               	nop	
  6639                           
  6640                           ;mdb.c: 378: LATE = 0x00;
  6641  0107F0  0E00               	movlw	0
  6642  0107F2  6E87               	movwf	3975,c	;volatile
  6643                           
  6644                           ;mdb.c: 379: LATD = 0x00;
  6645  0107F4  0E00               	movlw	0
  6646  0107F6  6E86               	movwf	3974,c	;volatile
  6647                           
  6648                           ;mdb.c: 380: LATA = 0xC0;
  6649  0107F8  0EC0               	movlw	192
  6650  0107FA  6E83               	movwf	3971,c	;volatile
  6651                           
  6652                           ;mdb.c: 381: LATB = 0x00;
  6653  0107FC  0E00               	movlw	0
  6654  0107FE  6E84               	movwf	3972,c	;volatile
  6655                           
  6656                           ;mdb.c: 382: LATC = 0x01;
  6657  010800  0E01               	movlw	1
  6658  010802  6E85               	movwf	3973,c	;volatile
  6659                           
  6660                           ;mdb.c: 387: TRISE = 0x00;
  6661  010804  0E00               	movlw	0
  6662  010806  6E8C               	movwf	3980,c	;volatile
  6663                           
  6664                           ;mdb.c: 388: TRISA = 0x1F;
  6665  010808  0E1F               	movlw	31
  6666  01080A  6E88               	movwf	3976,c	;volatile
  6667                           
  6668                           ;mdb.c: 389: TRISB = 0xD0;
  6669  01080C  0ED0               	movlw	208
  6670  01080E  6E89               	movwf	3977,c	;volatile
  6671                           
  6672                           ;mdb.c: 390: TRISC = 0x80;
  6673  010810  0E80               	movlw	128
  6674  010812  6E8A               	movwf	3978,c	;volatile
  6675                           
  6676                           ;mdb.c: 391: TRISD = 0x00;
  6677  010814  0E00               	movlw	0
  6678  010816  6E8B               	movwf	3979,c	;volatile
  6679                           
  6680                           ;mdb.c: 396: ANSELC = 0x00;
  6681  010818  0E00               	movlw	0
  6682  01081A  010F               	movlb	15	; () banked
  6683  01081C  6F21               	movwf	33,b	;volatile
  6684                           
  6685                           ; BSR set to: 15
  6686                           ;mdb.c: 397: ANSELB = 0xC0;
  6687  01081E  0EC0               	movlw	192
  6688  010820  6F19               	movwf	25,b	;volatile
  6689                           
  6690                           ; BSR set to: 15
  6691                           ;mdb.c: 398: ANSELD = 0x00;
  6692  010822  0E00               	movlw	0
  6693  010824  6F26               	movwf	38,b	;volatile
  6694                           
  6695                           ; BSR set to: 15
  6696                           ;mdb.c: 399: ANSELE = 0x00;
  6697  010826  0E00               	movlw	0
  6698  010828  6F2E               	movwf	46,b	;volatile
  6699                           
  6700                           ; BSR set to: 15
  6701                           ;mdb.c: 400: ANSELA = 0x01;
  6702  01082A  0E01               	movlw	1
  6703  01082C  6F11               	movwf	17,b	;volatile
  6704                           
  6705                           ; BSR set to: 15
  6706                           ;mdb.c: 405: WPUD = 0x00;
  6707  01082E  0E00               	movlw	0
  6708  010830  6F25               	movwf	37,b	;volatile
  6709                           
  6710                           ; BSR set to: 15
  6711                           ;mdb.c: 406: WPUE = 0x00;
  6712  010832  0E00               	movlw	0
  6713  010834  6F2D               	movwf	45,b	;volatile
  6714                           
  6715                           ; BSR set to: 15
  6716                           ;mdb.c: 407: WPUB = 0x00;
  6717  010836  0E00               	movlw	0
  6718  010838  6F18               	movwf	24,b	;volatile
  6719                           
  6720                           ; BSR set to: 15
  6721                           ;mdb.c: 408: WPUA = 0x00;
  6722  01083A  0E00               	movlw	0
  6723  01083C  6F10               	movwf	16,b	;volatile
  6724                           
  6725                           ; BSR set to: 15
  6726                           ;mdb.c: 409: WPUC = 0x00;
  6727  01083E  0E00               	movlw	0
  6728  010840  6F20               	movwf	32,b	;volatile
  6729                           
  6730                           ; BSR set to: 15
  6731                           ;mdb.c: 414: ODCONE = 0x00;
  6732  010842  0E00               	movlw	0
  6733  010844  6F2C               	movwf	44,b	;volatile
  6734                           
  6735                           ; BSR set to: 15
  6736                           ;mdb.c: 415: ODCONA = 0x00;
  6737  010846  0E00               	movlw	0
  6738  010848  6F0F               	movwf	15,b	;volatile
  6739                           
  6740                           ; BSR set to: 15
  6741                           ;mdb.c: 416: ODCONB = 0x00;
  6742  01084A  0E00               	movlw	0
  6743  01084C  6F17               	movwf	23,b	;volatile
  6744                           
  6745                           ; BSR set to: 15
  6746                           ;mdb.c: 417: ODCONC = 0x00;
  6747  01084E  0E00               	movlw	0
  6748  010850  6F1F               	movwf	31,b	;volatile
  6749                           
  6750                           ; BSR set to: 15
  6751                           ;mdb.c: 418: ODCOND = 0x00;
  6752  010852  0E00               	movlw	0
  6753  010854  6F24               	movwf	36,b	;volatile
  6754                           
  6755                           ; BSR set to: 15
  6756                           ;mdb.c: 419: LATC = 0x01;
  6757  010856  0E01               	movlw	1
  6758  010858  6E85               	movwf	3973,c	;volatile
  6759                           
  6760                           ; BSR set to: 15
  6761                           ;mdb.c: 420: TRISC = 0x80;
  6762  01085A  0E80               	movlw	128
  6763  01085C  6E8A               	movwf	3978,c	;volatile
  6764                           
  6765                           ; BSR set to: 15
  6766                           ;mdb.c: 421: ANSELC = 0x00;
  6767  01085E  0E00               	movlw	0
  6768  010860  6F21               	movwf	33,b	;volatile
  6769                           
  6770                           ; BSR set to: 15
  6771                           ;mdb.c: 422: WPUC = 0x00;
  6772  010862  0E00               	movlw	0
  6773  010864  6F20               	movwf	32,b	;volatile
  6774                           
  6775                           ; BSR set to: 15
  6776                           ;mdb.c: 423: ODCONC = 0x00;
  6777  010866  0E00               	movlw	0
  6778  010868  6F1F               	movwf	31,b	;volatile
  6779                           
  6780                           ; BSR set to: 15
  6781                           ;mdb.c: 424: PPSLOCK = 0x55;
  6782  01086A  0E55               	movlw	85
  6783  01086C  010E               	movlb	14	; () banked
  6784  01086E  6FA0               	movwf	160,b	;volsfr
  6785                           
  6786                           ; BSR set to: 14
  6787                           ;mdb.c: 425: PPSLOCK = 0xAA;
  6788  010870  0EAA               	movlw	170
  6789  010872  6FA0               	movwf	160,b	;volsfr
  6790                           
  6791                           ; BSR set to: 14
  6792                           ;mdb.c: 426: PPSLOCKbits.PPSLOCKED = 0x00;
  6793  010874  91A0               	bcf	160,0,b	;volsfr
  6794                           
  6795                           ; BSR set to: 14
  6796                           ;mdb.c: 428: RX1PPSbits.RXPPS = 0x0;
  6797  010876  91B5               	bcf	181,0,b	;volatile
  6798  010878  93B5               	bcf	181,1,b	;volatile
  6799  01087A  95B5               	bcf	181,2,b	;volatile
  6800  01087C  97B5               	bcf	181,3,b	;volatile
  6801  01087E  99B5               	bcf	181,4,b	;volatile
  6802                           
  6803                           ; BSR set to: 14
  6804                           ;mdb.c: 429: RC6PPS = 0x0;
  6805  010880  0E00               	movlw	0
  6806  010882  6FFD               	movwf	253,b	;volatile
  6807                           
  6808                           ; BSR set to: 14
  6809                           ;mdb.c: 430: RB5PPS = 0x0;
  6810  010884  0E00               	movlw	0
  6811  010886  6FF4               	movwf	244,b	;volatile
  6812                           
  6813                           ; BSR set to: 14
  6814                           ;mdb.c: 431: RX2PPSbits.RXPPS = 0x0;
  6815  010888  918D               	bcf	141,0,b	;volatile
  6816  01088A  938D               	bcf	141,1,b	;volatile
  6817  01088C  958D               	bcf	141,2,b	;volatile
  6818  01088E  978D               	bcf	141,3,b	;volatile
  6819  010890  998D               	bcf	141,4,b	;volatile
  6820                           
  6821                           ; BSR set to: 14
  6822                           ;mdb.c: 432: CMP1_Initialize();
  6823  010892  ECE1  F08C         	call	_CMP1_Initialize	;wreg free
  6824                           
  6825                           ;mdb.c: 433: TMR3_Initialize();
  6826  010896  ECDC  F08A         	call	_TMR3_Initialize	;wreg free
  6827                           
  6828                           ;mdb.c: 434: DAC1_Initialize();
  6829  01089A  EC19  F08D         	call	_DAC1_Initialize	;wreg free
  6830                           
  6831                           ;mdb.c: 435: TMR5_Initialize();
  6832  01089E  ECC1  F08A         	call	_TMR5_Initialize	;wreg free
  6833                           
  6834                           ;mdb.c: 436: TMR1_Initialize();
  6835  0108A2  ECF7  F08A         	call	_TMR1_Initialize	;wreg free
  6836  0108A6  0012               	return		;funcret
  6837  0108A8                     __end_of_mdb_unlock:
  6838                           	opt stack 0
  6839                           tblptru	equ	0xFF8
  6840                           tblptrh	equ	0xFF7
  6841                           tblptrl	equ	0xFF6
  6842                           tablat	equ	0xFF5
  6843                           prodh	equ	0xFF4
  6844                           prodl	equ	0xFF3
  6845                           postinc0	equ	0xFEE
  6846                           wreg	equ	0xFE8
  6847                           indf2	equ	0xFDF
  6848                           fsr2h	equ	0xFDA
  6849                           fsr2l	equ	0xFD9
  6850                           status	equ	0xFD8
  6851                           
  6852 ;; *************** function _Vend_setup *****************
  6853 ;; Defined at:
  6854 ;;		line 374 in file "vend.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		None
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;Total ram usage:        0 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    2
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_enter_service
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text38
  6883  011A7C                     __ptext38:
  6884                           	opt stack 0
  6885  011A7C                     _Vend_setup:
  6886                           	opt stack 27
  6887                           
  6888                           ;incstack = 0
  6889  011A7C  0012               	return		;funcret
  6890  011A7E                     __end_of_Vend_setup:
  6891                           	opt stack 0
  6892                           tblptru	equ	0xFF8
  6893                           tblptrh	equ	0xFF7
  6894                           tblptrl	equ	0xFF6
  6895                           tablat	equ	0xFF5
  6896                           prodh	equ	0xFF4
  6897                           prodl	equ	0xFF3
  6898                           postinc0	equ	0xFEE
  6899                           wreg	equ	0xFE8
  6900                           indf2	equ	0xFDF
  6901                           fsr2h	equ	0xFDA
  6902                           fsr2l	equ	0xFD9
  6903                           status	equ	0xFD8
  6904                           
  6905 ;; *************** function _Sensor_set *****************
  6906 ;; Defined at:
  6907 ;;		line 273 in file "vend.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;		None
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  dacpos          1   33[COMRAM] unsigned char 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      void 
  6914 ;; Registers used:
  6915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;Total ram usage:        1 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; Hardware stack levels required when called:    9
  6928 ;; This function calls:
  6929 ;;		_butindb
  6930 ;;		_displ_sens
  6931 ;;		_lcd_string
  6932 ;; This function is called by:
  6933 ;;		_enter_service
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text39
  6938  010634                     __ptext39:
  6939                           	opt stack 0
  6940  010634                     _Sensor_set:
  6941                           	opt stack 20
  6942                           
  6943                           ;vend.c: 275: mdbflags.endis = 1;
  6944                           
  6945                           ;incstack = 0
  6946  010634  8C3E               	bsf	_mdbflags,6,c
  6947                           
  6948                           ;vend.c: 277: lcd_string(sensmsg, line1);
  6949  010636  0EA8               	movlw	low _sensmsg
  6950  010638  6E24               	movwf	lcd_string@lcdstring,c
  6951  01063A  0EFF               	movlw	high _sensmsg
  6952  01063C  6E25               	movwf	lcd_string@lcdstring+1,c
  6953  01063E  0EE3               	movlw	low _line1
  6954  010640  6EF6               	movwf	tblptrl,c
  6955  010642                     	if	1	;There is more than 1 active tblptr byte
  6956  010642  0EFD               	movlw	high _line1
  6957  010644  6EF7               	movwf	tblptrh,c
  6958  010646                     	endif
  6959  010646                     	if	1	;There are 3 active tblptr bytes
  6960  010646  0E00               	movlw	low (_line1 shr (0+16))
  6961  010648  6EF8               	movwf	tblptru,c
  6962  01064A                     	endif
  6963  01064A  0008               	tblrd		*
  6964  01064C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6965  010650  EC72  F085         	call	_lcd_string	;wreg free
  6966                           
  6967                           ;vend.c: 279: senspos = bflag + 2;
  6968  010654  5046               	movf	_bflag,w,c
  6969  010656  0F02               	addlw	2
  6970  010658  6E35               	movwf	_senspos,c	;volatile
  6971                           
  6972                           ;vend.c: 281: lcd_string(dacmsg, line2);
  6973  01065A  0E8E               	movlw	low _dacmsg
  6974  01065C  6E24               	movwf	lcd_string@lcdstring,c
  6975  01065E  0EFF               	movlw	high _dacmsg
  6976  010660  6E25               	movwf	lcd_string@lcdstring+1,c
  6977  010662  0EE2               	movlw	low _line2
  6978  010664  6EF6               	movwf	tblptrl,c
  6979  010666                     	if	1	;There is more than 1 active tblptr byte
  6980  010666  0EFD               	movlw	high _line2
  6981  010668  6EF7               	movwf	tblptrh,c
  6982  01066A                     	endif
  6983  01066A                     	if	1	;There are 3 active tblptr bytes
  6984  01066A  0E00               	movlw	low (_line2 shr (0+16))
  6985  01066C  6EF8               	movwf	tblptru,c
  6986  01066E                     	endif
  6987  01066E  0008               	tblrd		*
  6988  010670  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6989  010674  EC72  F085         	call	_lcd_string	;wreg free
  6990                           
  6991                           ;vend.c: 283: uint8_t dacpos = bflag + 2;
  6992  010678  5046               	movf	_bflag,w,c
  6993  01067A  0F02               	addlw	2
  6994  01067C  6E2C               	movwf	Sensor_set@dacpos,c
  6995                           
  6996                           ;vend.c: 284: displ_sens(senspos, dacpos);
  6997  01067E  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  6998  010682  5035               	movf	_senspos,w,c	;volatile
  6999  010684  EC0D  F088         	call	_displ_sens
  7000                           
  7001                           ;vend.c: 285: while(mdbflags.endis)
  7002  010688  D03D               	goto	l1829
  7003  01068A                     
  7004                           ;vend.c: 286: {
  7005                           ;vend.c: 287: buttons = butindb();
  7006  01068A  EC79  F08B         	call	_butindb	;wreg free
  7007  01068E  6E38               	movwf	_buttons,c	;volatile
  7008                           
  7009                           ;vend.c: 288: switch(buttons)
  7010  010690  D027               	goto	l1824
  7011  010692  5036               	movf	_sensorval,w,c	;volatile
  7012  010694  0B1F               	andlw	31
  7013  010696  010F               	movlb	15	; () banked
  7014  010698  6F34               	movwf	52,b	;volatile
  7015                           
  7016                           ; BSR set to: 15
  7017  01069A  2A36               	incf	_sensorval,f,c	;volatile
  7018                           
  7019                           ; BSR set to: 15
  7020                           ;vend.c: 291: displ_sens(senspos, dacpos);
  7021  01069C  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  7022  0106A0  5035               	movf	_senspos,w,c	;volatile
  7023  0106A2  EC0D  F088         	call	_displ_sens
  7024                           
  7025                           ;vend.c: 292: break;
  7026  0106A6  D026               	goto	l1826
  7027  0106A8  5036               	movf	_sensorval,w,c	;volatile
  7028  0106AA  0B1F               	andlw	31
  7029  0106AC  010F               	movlb	15	; () banked
  7030  0106AE  6F34               	movwf	52,b	;volatile
  7031                           
  7032                           ; BSR set to: 15
  7033  0106B0  0636               	decf	_sensorval,f,c	;volatile
  7034                           
  7035                           ; BSR set to: 15
  7036                           ;vend.c: 294: displ_sens(senspos, dacpos);
  7037  0106B2  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  7038  0106B6  5035               	movf	_senspos,w,c	;volatile
  7039  0106B8  EC0D  F088         	call	_displ_sens
  7040                           
  7041                           ;vend.c: 295: break;
  7042  0106BC  D01B               	goto	l1826
  7043  0106BE                     l1828:
  7044  0106BE  9C3E               	bcf	_mdbflags,6,c
  7045                           
  7046                           ;vend.c: 297: lcd_string(servmsg, line1);
  7047  0106C0  0E37               	movlw	low _servmsg
  7048  0106C2  6E24               	movwf	lcd_string@lcdstring,c
  7049  0106C4  0EFE               	movlw	high _servmsg
  7050  0106C6  6E25               	movwf	lcd_string@lcdstring+1,c
  7051  0106C8  0EE3               	movlw	low _line1
  7052  0106CA  6EF6               	movwf	tblptrl,c
  7053  0106CC                     	if	1	;There is more than 1 active tblptr byte
  7054  0106CC  0EFD               	movlw	high _line1
  7055  0106CE  6EF7               	movwf	tblptrh,c
  7056  0106D0                     	endif
  7057  0106D0                     	if	1	;There are 3 active tblptr bytes
  7058  0106D0  0E00               	movlw	low (_line1 shr (0+16))
  7059  0106D2  6EF8               	movwf	tblptru,c
  7060  0106D4                     	endif
  7061  0106D4  0008               	tblrd		*
  7062  0106D6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7063  0106DA  EC72  F085         	call	_lcd_string	;wreg free
  7064                           
  7065                           ;vend.c: 299: }
  7066                           
  7067                           ;vend.c: 298: break;
  7068  0106DE  D00A               	goto	l1826
  7069  0106E0                     l1824:
  7070  0106E0  5038               	movf	_buttons,w,c	;volatile
  7071                           
  7072                           ; Switch size 1, requested type "space"
  7073                           ; Number of cases is 3, Range of values is 1 to 128
  7074                           ; switch strategies available:
  7075                           ; Name         Instructions Cycles
  7076                           ; simple_byte           10     6 (average)
  7077                           ;	Chosen strategy is simple_byte
  7078  0106E2  0A01               	xorlw	1	; case 1
  7079  0106E4  B4D8               	btfsc	status,2,c
  7080  0106E6  D7D5               	goto	l1825
  7081  0106E8  0A03               	xorlw	3	; case 2
  7082  0106EA  B4D8               	btfsc	status,2,c
  7083  0106EC  D7DD               	goto	l1827
  7084  0106EE  0A82               	xorlw	130	; case 128
  7085  0106F0  B4D8               	btfsc	status,2,c
  7086  0106F2  D7E5               	goto	l1828
  7087  0106F4                     l1826:
  7088                           
  7089                           ;vend.c: 300: if(PIR4bits.TMR3IF)
  7090  0106F4  010E               	movlb	14	; () banked
  7091  0106F6  A5CE               	btfss	206,2,b	;volatile
  7092  0106F8  D005               	goto	l1829
  7093                           
  7094                           ; BSR set to: 14
  7095                           ;vend.c: 301: {
  7096                           ;vend.c: 302: displ_sens(senspos, dacpos);
  7097  0106FA  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  7098  0106FE  5035               	movf	_senspos,w,c	;volatile
  7099  010700  EC0D  F088         	call	_displ_sens
  7100  010704                     l1829:
  7101  010704  AC3E               	btfss	_mdbflags,6,c
  7102  010706  0012               	return	
  7103  010708  D7C0               	goto	l1823
  7104  01070A                     __end_of_Sensor_set:
  7105                           	opt stack 0
  7106                           tblptru	equ	0xFF8
  7107                           tblptrh	equ	0xFF7
  7108                           tblptrl	equ	0xFF6
  7109                           tablat	equ	0xFF5
  7110                           prodh	equ	0xFF4
  7111                           prodl	equ	0xFF3
  7112                           postinc0	equ	0xFEE
  7113                           wreg	equ	0xFE8
  7114                           indf2	equ	0xFDF
  7115                           fsr2h	equ	0xFDA
  7116                           fsr2l	equ	0xFD9
  7117                           status	equ	0xFD8
  7118                           
  7119 ;; *************** function _displ_sens *****************
  7120 ;; Defined at:
  7121 ;;		line 40 in file "lcd.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  smsgpos         1    wreg     unsigned char 
  7124 ;;  dmsgpos         1   31[COMRAM] unsigned char 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  smsgpos         1   32[COMRAM] unsigned char 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7136 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;Total ram usage:        2 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    8
  7143 ;; This function calls:
  7144 ;;		_CMP1_GetOutputStatus
  7145 ;;		_DATAEE_WriteByte
  7146 ;;		_displ_hex
  7147 ;;		_lcd_dispadd
  7148 ;;		_lcd_string
  7149 ;; This function is called by:
  7150 ;;		_Sensor_set
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text40
  7155  01101A                     __ptext40:
  7156                           	opt stack 0
  7157  01101A                     _displ_sens:
  7158                           	opt stack 20
  7159                           
  7160                           ;incstack = 0
  7161                           ;displ_sens@smsgpos stored from wreg
  7162  01101A  6E2B               	movwf	displ_sens@smsgpos,c
  7163                           
  7164                           ;lcd.c: 42: if(CMP1_GetOutputStatus())
  7165  01101C  EC0B  F08D         	call	_CMP1_GetOutputStatus	;wreg free
  7166  011020  0900               	iorlw	0
  7167  011022  B4D8               	btfsc	status,2,c
  7168  011024  D009               	goto	l1275
  7169                           
  7170                           ;lcd.c: 43: {
  7171                           ;lcd.c: 44: lcd_string(offmsg, smsgpos);
  7172  011026  0EF6               	movlw	low _offmsg
  7173  011028  6E24               	movwf	lcd_string@lcdstring,c
  7174  01102A  0EFF               	movlw	high _offmsg
  7175  01102C  6E25               	movwf	lcd_string@lcdstring+1,c
  7176  01102E  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
  7177  011032  EC72  F085         	call	_lcd_string	;wreg free
  7178                           
  7179                           ;lcd.c: 45: }
  7180  011036  D008               	goto	l1276
  7181  011038                     l1275:
  7182                           
  7183                           ;lcd.c: 46: else
  7184                           ;lcd.c: 47: {
  7185                           ;lcd.c: 48: lcd_string(onmsg, smsgpos);
  7186  011038  0EFA               	movlw	low _onmsg
  7187  01103A  6E24               	movwf	lcd_string@lcdstring,c
  7188  01103C  0EFF               	movlw	high _onmsg
  7189  01103E  6E25               	movwf	lcd_string@lcdstring+1,c
  7190  011040  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
  7191  011044  EC72  F085         	call	_lcd_string	;wreg free
  7192  011048                     l1276:
  7193                           
  7194                           ;lcd.c: 49: }
  7195                           ;lcd.c: 50: DATAEE_WriteByte(sensval, sensorval);
  7196  011048  0EA9               	movlw	low _sensval
  7197  01104A  6EF6               	movwf	tblptrl,c
  7198  01104C                     	if	1	;There is more than 1 active tblptr byte
  7199  01104C  0EFD               	movlw	high _sensval
  7200  01104E  6EF7               	movwf	tblptrh,c
  7201  011050                     	endif
  7202  011050                     	if	1	;There are 3 active tblptr bytes
  7203  011050  0E00               	movlw	low (_sensval shr (0+16))
  7204  011052  6EF8               	movwf	tblptru,c
  7205  011054                     	endif
  7206  011054  0009               	tblrd		*+
  7207  011056  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  7208  01105A  000A               	tblrd		*-
  7209  01105C  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7210  011060  C036  F01F         	movff	_sensorval,DATAEE_WriteByte@bData	;volatile
  7211  011064  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
  7212                           
  7213                           ;lcd.c: 51: lcd_string(clrmsg, dmsgpos);
  7214  011068  0EF0               	movlw	low _clrmsg
  7215  01106A  6E24               	movwf	lcd_string@lcdstring,c
  7216  01106C  0EFF               	movlw	high _clrmsg
  7217  01106E  6E25               	movwf	lcd_string@lcdstring+1,c
  7218  011070  C02A  F026         	movff	displ_sens@dmsgpos,lcd_string@lcdline
  7219  011074  EC72  F085         	call	_lcd_string	;wreg free
  7220                           
  7221                           ;lcd.c: 52: lcd_dispadd(dmsgpos);
  7222  011078  502A               	movf	displ_sens@dmsgpos,w,c
  7223  01107A  EC90  F08C         	call	_lcd_dispadd
  7224                           
  7225                           ;lcd.c: 53: displ_hex((uint8_t) DAC1CON1);
  7226  01107E  010F               	movlb	15	; () banked
  7227  011080  5134               	movf	52,w,b	;volatile
  7228  011082  6E27               	movwf	displ_hex@hexnum,c
  7229  011084  6A28               	clrf	displ_hex@hexnum+1,c
  7230  011086  6A29               	clrf	displ_hex@hexnum+2,c
  7231  011088  EC17  F085         	call	_displ_hex	;wreg free
  7232  01108C  0012               	return		;funcret
  7233  01108E                     __end_of_displ_sens:
  7234                           	opt stack 0
  7235                           tblptru	equ	0xFF8
  7236                           tblptrh	equ	0xFF7
  7237                           tblptrl	equ	0xFF6
  7238                           tablat	equ	0xFF5
  7239                           prodh	equ	0xFF4
  7240                           prodl	equ	0xFF3
  7241                           postinc0	equ	0xFEE
  7242                           wreg	equ	0xFE8
  7243                           indf2	equ	0xFDF
  7244                           fsr2h	equ	0xFDA
  7245                           fsr2l	equ	0xFD9
  7246                           status	equ	0xFD8
  7247                           
  7248 ;; *************** function _CMP1_GetOutputStatus *****************
  7249 ;; Defined at:
  7250 ;;		line 74 in file "mcc_generated_files/cmp1.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      unsigned char 
  7257 ;; Registers used:
  7258 ;;		wreg
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;Total ram usage:        0 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    2
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_main
  7275 ;;		_displ_sens
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	text41
  7280  011A16                     __ptext41:
  7281                           	opt stack 0
  7282  011A16                     _CMP1_GetOutputStatus:
  7283                           	opt stack 25
  7284                           
  7285                           ;cmp1.c: 76: return (CMOUTbits.MC1OUT);
  7286                           
  7287                           ;incstack = 0
  7288  011A16  010F               	movlb	15	; () banked
  7289  011A18  A13D               	btfss	61,0,b	;volatile
  7290  011A1A  D002               	goto	u1250
  7291  011A1C  0E01               	movlw	1
  7292  011A1E  0012               	return	
  7293  011A20                     u1250:
  7294  011A20  0E00               	movlw	0
  7295  011A22  0012               	return	
  7296  011A24                     __end_of_CMP1_GetOutputStatus:
  7297                           	opt stack 0
  7298                           tblptru	equ	0xFF8
  7299                           tblptrh	equ	0xFF7
  7300                           tblptrl	equ	0xFF6
  7301                           tablat	equ	0xFF5
  7302                           prodh	equ	0xFF4
  7303                           prodl	equ	0xFF3
  7304                           postinc0	equ	0xFEE
  7305                           wreg	equ	0xFE8
  7306                           indf2	equ	0xFDF
  7307                           fsr2h	equ	0xFDA
  7308                           fsr2l	equ	0xFD9
  7309                           status	equ	0xFD8
  7310                           
  7311 ;; *************** function _Hopper_coin *****************
  7312 ;; Defined at:
  7313 ;;		line 198 in file "vend.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;		None
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;  coinval         1   33[COMRAM] unsigned char 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      void 
  7320 ;; Registers used:
  7321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;Total ram usage:        1 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    9
  7334 ;; This function calls:
  7335 ;;		_DATAEE_ReadByte
  7336 ;;		_Update_Hopcoin
  7337 ;;		_butindb
  7338 ;;		_displ_hex
  7339 ;;		_lcd_dispadd
  7340 ;;		_lcd_string
  7341 ;; This function is called by:
  7342 ;;		_enter_service
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text42
  7347  01070A                     __ptext42:
  7348                           	opt stack 0
  7349  01070A                     _Hopper_coin:
  7350                           	opt stack 20
  7351                           
  7352                           ;vend.c: 200: lcd_string(hoppcoin, line1);
  7353                           
  7354                           ; BSR set to: 15
  7355                           ;incstack = 0
  7356  01070A  0EB3               	movlw	low _hoppcoin
  7357  01070C  6E24               	movwf	lcd_string@lcdstring,c
  7358  01070E  0EFE               	movlw	high _hoppcoin
  7359  010710  6E25               	movwf	lcd_string@lcdstring+1,c
  7360  010712  0EE3               	movlw	low _line1
  7361  010714  6EF6               	movwf	tblptrl,c
  7362  010716                     	if	1	;There is more than 1 active tblptr byte
  7363  010716  0EFD               	movlw	high _line1
  7364  010718  6EF7               	movwf	tblptrh,c
  7365  01071A                     	endif
  7366  01071A                     	if	1	;There are 3 active tblptr bytes
  7367  01071A  0E00               	movlw	low (_line1 shr (0+16))
  7368  01071C  6EF8               	movwf	tblptru,c
  7369  01071E                     	endif
  7370  01071E  0008               	tblrd		*
  7371  010720  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7372  010724  EC72  F085         	call	_lcd_string	;wreg free
  7373                           
  7374                           ;vend.c: 201: mdbflags.endis = 1;
  7375  010728  8C3E               	bsf	_mdbflags,6,c
  7376                           
  7377                           ;vend.c: 202: senspos = bflag + 2;
  7378  01072A  5046               	movf	_bflag,w,c
  7379  01072C  0F02               	addlw	2
  7380  01072E  6E35               	movwf	_senspos,c	;volatile
  7381                           
  7382                           ;vend.c: 203: uint8_t coinval = DATAEE_ReadByte(hopcoin);
  7383  010730  0EA5               	movlw	low _hopcoin
  7384  010732  6EF6               	movwf	tblptrl,c
  7385  010734                     	if	1	;There is more than 1 active tblptr byte
  7386  010734  0EFD               	movlw	high _hopcoin
  7387  010736  6EF7               	movwf	tblptrh,c
  7388  010738                     	endif
  7389  010738                     	if	1	;There are 3 active tblptr bytes
  7390  010738  0E00               	movlw	low (_hopcoin shr (0+16))
  7391  01073A  6EF8               	movwf	tblptru,c
  7392  01073C                     	endif
  7393  01073C  0009               	tblrd		*+
  7394  01073E  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  7395  010742  000A               	tblrd		*-
  7396  010744  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7397  010748  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  7398  01074C  6E2C               	movwf	Hopper_coin@coinval,c
  7399                           
  7400                           ;vend.c: 204: lcd_dispadd(senspos);
  7401  01074E  5035               	movf	_senspos,w,c	;volatile
  7402  010750  EC90  F08C         	call	_lcd_dispadd
  7403                           
  7404                           ;vend.c: 205: displ_hex((uint24_t)coinval);
  7405  010754  502C               	movf	Hopper_coin@coinval,w,c
  7406  010756  6E27               	movwf	displ_hex@hexnum,c
  7407  010758  6A28               	clrf	displ_hex@hexnum+1,c
  7408  01075A  6A29               	clrf	displ_hex@hexnum+2,c
  7409  01075C  EC17  F085         	call	_displ_hex	;wreg free
  7410                           
  7411                           ;vend.c: 206: while(mdbflags.endis)
  7412  010760  D03C               	goto	l1793
  7413  010762                     
  7414                           ;vend.c: 207: {
  7415                           ;vend.c: 208: buttons = butindb();
  7416  010762  EC79  F08B         	call	_butindb	;wreg free
  7417  010766  6E38               	movwf	_buttons,c	;volatile
  7418                           
  7419                           ;vend.c: 209: switch(buttons)
  7420  010768  D01F               	goto	l1795
  7421  01076A  0E01               	movlw	1
  7422  01076C  6E2A               	movwf	Update_Hopcoin@direction,c
  7423  01076E  502C               	movf	Hopper_coin@coinval,w,c
  7424  010770  EC4D  F087         	call	_Update_Hopcoin
  7425                           
  7426                           ;vend.c: 212: break;
  7427  010774  D023               	goto	l1797
  7428  010776  0E02               	movlw	2
  7429  010778  6E2A               	movwf	Update_Hopcoin@direction,c
  7430  01077A  502C               	movf	Hopper_coin@coinval,w,c
  7431  01077C  EC4D  F087         	call	_Update_Hopcoin
  7432                           
  7433                           ;vend.c: 214: break;
  7434  010780  D01D               	goto	l1797
  7435  010782                     l1799:
  7436  010782  9C3E               	bcf	_mdbflags,6,c
  7437                           
  7438                           ;vend.c: 216: lcd_string(servmsg, line1);
  7439  010784  0E37               	movlw	low _servmsg
  7440  010786  6E24               	movwf	lcd_string@lcdstring,c
  7441  010788  0EFE               	movlw	high _servmsg
  7442  01078A  6E25               	movwf	lcd_string@lcdstring+1,c
  7443  01078C  0EE3               	movlw	low _line1
  7444  01078E  6EF6               	movwf	tblptrl,c
  7445  010790                     	if	1	;There is more than 1 active tblptr byte
  7446  010790  0EFD               	movlw	high _line1
  7447  010792  6EF7               	movwf	tblptrh,c
  7448  010794                     	endif
  7449  010794                     	if	1	;There are 3 active tblptr bytes
  7450  010794  0E00               	movlw	low (_line1 shr (0+16))
  7451  010796  6EF8               	movwf	tblptru,c
  7452  010798                     	endif
  7453  010798  0008               	tblrd		*
  7454  01079A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7455  01079E  EC72  F085         	call	_lcd_string	;wreg free
  7456                           
  7457                           ;vend.c: 217: buttons = 0x00;
  7458  0107A2  0E00               	movlw	0
  7459  0107A4  6E38               	movwf	_buttons,c	;volatile
  7460                           
  7461                           ;vend.c: 219: }
  7462                           
  7463                           ;vend.c: 218: break;
  7464  0107A6  D00A               	goto	l1797
  7465  0107A8                     l1795:
  7466  0107A8  5038               	movf	_buttons,w,c	;volatile
  7467                           
  7468                           ; Switch size 1, requested type "space"
  7469                           ; Number of cases is 3, Range of values is 1 to 128
  7470                           ; switch strategies available:
  7471                           ; Name         Instructions Cycles
  7472                           ; simple_byte           10     6 (average)
  7473                           ;	Chosen strategy is simple_byte
  7474  0107AA  0A01               	xorlw	1	; case 1
  7475  0107AC  B4D8               	btfsc	status,2,c
  7476  0107AE  D7DD               	goto	l1796
  7477  0107B0  0A03               	xorlw	3	; case 2
  7478  0107B2  B4D8               	btfsc	status,2,c
  7479  0107B4  D7E0               	goto	l1798
  7480  0107B6  0A82               	xorlw	130	; case 128
  7481  0107B8  B4D8               	btfsc	status,2,c
  7482  0107BA  D7E3               	goto	l1799
  7483  0107BC                     l1797:
  7484                           
  7485                           ;vend.c: 220: coinval = DATAEE_ReadByte(hopcoin);
  7486  0107BC  0EA5               	movlw	low _hopcoin
  7487  0107BE  6EF6               	movwf	tblptrl,c
  7488  0107C0                     	if	1	;There is more than 1 active tblptr byte
  7489  0107C0  0EFD               	movlw	high _hopcoin
  7490  0107C2  6EF7               	movwf	tblptrh,c
  7491  0107C4                     	endif
  7492  0107C4                     	if	1	;There are 3 active tblptr bytes
  7493  0107C4  0E00               	movlw	low (_hopcoin shr (0+16))
  7494  0107C6  6EF8               	movwf	tblptru,c
  7495  0107C8                     	endif
  7496  0107C8  0009               	tblrd		*+
  7497  0107CA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  7498  0107CE  000A               	tblrd		*-
  7499  0107D0  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7500  0107D4  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  7501  0107D8  6E2C               	movwf	Hopper_coin@coinval,c
  7502  0107DA                     l1793:
  7503  0107DA  AC3E               	btfss	_mdbflags,6,c
  7504  0107DC  0012               	return	
  7505  0107DE  D7C1               	goto	l1794
  7506  0107E0                     __end_of_Hopper_coin:
  7507                           	opt stack 0
  7508                           tblptru	equ	0xFF8
  7509                           tblptrh	equ	0xFF7
  7510                           tblptrl	equ	0xFF6
  7511                           tablat	equ	0xFF5
  7512                           prodh	equ	0xFF4
  7513                           prodl	equ	0xFF3
  7514                           postinc0	equ	0xFEE
  7515                           wreg	equ	0xFE8
  7516                           indf2	equ	0xFDF
  7517                           fsr2h	equ	0xFDA
  7518                           fsr2l	equ	0xFD9
  7519                           status	equ	0xFD8
  7520                           
  7521 ;; *************** function _butindb *****************
  7522 ;; Defined at:
  7523 ;;		line 149 in file "vend.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;		None
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  butt            1   22[COMRAM] unsigned char 
  7528 ;;  butval          1   21[COMRAM] unsigned char 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1    wreg      unsigned char 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0, cstack
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7541 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7542 ;;Total ram usage:        4 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    3
  7545 ;; This function calls:
  7546 ;;		_butin
  7547 ;; This function is called by:
  7548 ;;		_enter_service
  7549 ;;		_Hopper_coin
  7550 ;;		_Sensor_set
  7551 ;;		_price_set
  7552 ;;		_set_price
  7553 ;;		_set_notes
  7554 ;;		_enable_notes
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text43
  7559  0116F2                     __ptext43:
  7560                           	opt stack 0
  7561  0116F2                     _butindb:
  7562                           	opt stack 24
  7563                           
  7564                           ;vend.c: 151: uint8_t butt = butin();
  7565                           
  7566                           ;incstack = 0
  7567  0116F2  ECC8  F089         	call	_butin	;wreg free
  7568  0116F6  6E21               	movwf	butindb@butt,c
  7569                           
  7570                           ;vend.c: 152: uint8_t butval = butt;
  7571  0116F8  C021  F020         	movff	butindb@butt,butindb@butval
  7572                           
  7573                           ;vend.c: 153: while(butval != 0x00)
  7574  0116FC  D003               	goto	l1778
  7575  0116FE                     
  7576                           ;vend.c: 154: {
  7577                           ;vend.c: 155: butval = butin();
  7578  0116FE  ECC8  F089         	call	_butin	;wreg free
  7579  011702  6E20               	movwf	butindb@butval,c
  7580  011704                     l1778:
  7581  011704  5020               	movf	butindb@butval,w,c
  7582  011706  A4D8               	btfss	status,2,c
  7583  011708  D7FA               	goto	l1779
  7584                           
  7585                           ;vend.c: 156: }
  7586                           ;vend.c: 157: _delay((unsigned long)((500)*(12000000/4000.0)));
  7587  01170A  0E08               	movlw	8
  7588  01170C  6E1F               	movwf	(??_butindb+1)& (0+255),c
  7589  01170E  0E9D               	movlw	157
  7590  011710  6E1E               	movwf	??_butindb& (0+255),c
  7591  011712  0E06               	movlw	6
  7592  011714                     u2507:
  7593  011714  2EE8               	decfsz	wreg,f,c
  7594  011716  D7FE               	bra	u2507
  7595  011718  2E1E               	decfsz	??_butindb& (0+255),f,c
  7596  01171A  D7FC               	bra	u2507
  7597  01171C  2E1F               	decfsz	(??_butindb+1)& (0+255),f,c
  7598  01171E  D7FA               	bra	u2507
  7599                           
  7600                           ;vend.c: 159: return butt;
  7601  011720  5021               	movf	butindb@butt,w,c
  7602  011722  0012               	return	
  7603  011724                     __end_of_butindb:
  7604                           	opt stack 0
  7605                           tblptru	equ	0xFF8
  7606                           tblptrh	equ	0xFF7
  7607                           tblptrl	equ	0xFF6
  7608                           tablat	equ	0xFF5
  7609                           prodh	equ	0xFF4
  7610                           prodl	equ	0xFF3
  7611                           postinc0	equ	0xFEE
  7612                           wreg	equ	0xFE8
  7613                           indf2	equ	0xFDF
  7614                           fsr2h	equ	0xFDA
  7615                           fsr2l	equ	0xFD9
  7616                           status	equ	0xFD8
  7617                           
  7618 ;; *************** function _butin *****************
  7619 ;; Defined at:
  7620 ;;		line 162 in file "vend.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;		None
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;		None
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  1    wreg      unsigned char 
  7627 ;; Registers used:
  7628 ;;		wreg, status,2, status,0
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7638 ;;Total ram usage:        1 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    2
  7641 ;; This function calls:
  7642 ;;		Nothing
  7643 ;; This function is called by:
  7644 ;;		_butindb
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text44
  7649  011390                     __ptext44:
  7650                           	opt stack 0
  7651  011390                     _butin:
  7652                           	opt stack 24
  7653                           
  7654                           ;vend.c: 164: LATA7 = 0;
  7655                           
  7656                           ;incstack = 0
  7657  011390  9E83               	bcf	3971,7,c	;volatile
  7658                           
  7659                           ;vend.c: 165: LATA6 = 1;
  7660  011392  8C83               	bsf	3971,6,c	;volatile
  7661                           
  7662                           ;vend.c: 166: _delay((unsigned long)((15)*(12000000/4000.0)));
  7663  011394  0E3B               	movlw	59
  7664  011396  6E1D               	movwf	??_butin& (0+255),c
  7665  011398  0E70               	movlw	112
  7666  01139A                     u2517:
  7667  01139A  2EE8               	decfsz	wreg,f,c
  7668  01139C  D7FE               	bra	u2517
  7669  01139E  2E1D               	decfsz	??_butin& (0+255),f,c
  7670  0113A0  D7FC               	bra	u2517
  7671                           
  7672                           ;vend.c: 168: buttons = ((PORTA >> 1) & 0x0F) << 4;
  7673  0113A2  CF8D F01D          	movff	3981,??_butin	;volatile
  7674  0113A6  90D8               	bcf	status,0,c
  7675  0113A8  321D               	rrcf	??_butin,f,c
  7676  0113AA  0E0F               	movlw	15
  7677  0113AC  161D               	andwf	??_butin,f,c
  7678  0113AE  381D               	swapf	??_butin,w,c
  7679  0113B0  0BF0               	andlw	240
  7680  0113B2  6E38               	movwf	_buttons,c	;volatile
  7681                           
  7682                           ;vend.c: 169: LATA7 = 1;
  7683  0113B4  8E83               	bsf	3971,7,c	;volatile
  7684                           
  7685                           ;vend.c: 170: LATA6 = 0;
  7686  0113B6  9C83               	bcf	3971,6,c	;volatile
  7687                           
  7688                           ;vend.c: 171: _delay((unsigned long)((15)*(12000000/4000.0)));
  7689  0113B8  0E3B               	movlw	59
  7690  0113BA  6E1D               	movwf	??_butin& (0+255),c
  7691  0113BC  0E70               	movlw	112
  7692  0113BE                     u2527:
  7693  0113BE  2EE8               	decfsz	wreg,f,c
  7694  0113C0  D7FE               	bra	u2527
  7695  0113C2  2E1D               	decfsz	??_butin& (0+255),f,c
  7696  0113C4  D7FC               	bra	u2527
  7697                           
  7698                           ;vend.c: 173: buttons = ((PORTA >> 1) & 0x0F) | buttons;
  7699  0113C6  90D8               	bcf	status,0,c
  7700  0113C8  308D               	rrcf	3981,w,c	;volatile
  7701  0113CA  0B0F               	andlw	15
  7702  0113CC  1038               	iorwf	_buttons,w,c	;volatile
  7703  0113CE  6E38               	movwf	_buttons,c	;volatile
  7704                           
  7705                           ;vend.c: 174: LATA7 = 1;
  7706  0113D0  8E83               	bsf	3971,7,c	;volatile
  7707                           
  7708                           ;vend.c: 175: LATA6 = 1;
  7709  0113D2  8C83               	bsf	3971,6,c	;volatile
  7710                           
  7711                           ;vend.c: 176: return ~buttons;
  7712  0113D4  5038               	movf	_buttons,w,c	;volatile
  7713  0113D6  0AFF               	xorlw	255
  7714  0113D8  0012               	return	
  7715  0113DA                     __end_of_butin:
  7716                           	opt stack 0
  7717                           tblptru	equ	0xFF8
  7718                           tblptrh	equ	0xFF7
  7719                           tblptrl	equ	0xFF6
  7720                           tablat	equ	0xFF5
  7721                           prodh	equ	0xFF4
  7722                           prodl	equ	0xFF3
  7723                           postinc0	equ	0xFEE
  7724                           wreg	equ	0xFE8
  7725                           indf2	equ	0xFDF
  7726                           fsr2h	equ	0xFDA
  7727                           fsr2l	equ	0xFD9
  7728                           status	equ	0xFD8
  7729                           
  7730 ;; *************** function _Update_Hopcoin *****************
  7731 ;; Defined at:
  7732 ;;		line 224 in file "vend.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  newval          1    wreg     unsigned char 
  7735 ;;  direction       1   31[COMRAM] unsigned char 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  newval          1   32[COMRAM] unsigned char 
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  1    wreg      void 
  7740 ;; Registers used:
  7741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7747 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;Total ram usage:        2 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    8
  7754 ;; This function calls:
  7755 ;;		_DATAEE_WriteByte
  7756 ;;		_displ_hex
  7757 ;;		_lcd_dispadd
  7758 ;;		_lcd_string
  7759 ;; This function is called by:
  7760 ;;		_Hopper_coin
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text45
  7765  010E9A                     __ptext45:
  7766                           	opt stack 0
  7767  010E9A                     _Update_Hopcoin:
  7768                           	opt stack 20
  7769                           
  7770                           ;incstack = 0
  7771                           ;Update_Hopcoin@newval stored from wreg
  7772  010E9A  6E2B               	movwf	Update_Hopcoin@newval,c
  7773                           
  7774                           ;vend.c: 227: switch(newval)
  7775  010E9C  D014               	goto	l1804
  7776  010E9E  042A               	decf	Update_Hopcoin@direction,w,c
  7777  010EA0  A4D8               	btfss	status,2,c
  7778  010EA2  D005               	goto	u2120
  7779                           
  7780                           ;vend.c: 230: {
  7781                           ;vend.c: 231: newval++;
  7782  010EA4  2A2B               	incf	Update_Hopcoin@newval,f,c
  7783                           
  7784                           ;vend.c: 232: }
  7785  010EA6  D01A               	goto	l1808
  7786  010EA8  042A               	decf	Update_Hopcoin@direction,w,c
  7787  010EAA  A4D8               	btfss	status,2,c
  7788  010EAC  D002               	goto	l1810
  7789  010EAE                     u2120:
  7790                           
  7791                           ;vend.c: 239: {
  7792                           ;vend.c: 240: newval = 0x05;
  7793  010EAE  0E05               	movlw	5
  7794  010EB0  D006               	goto	L14
  7795  010EB2                     l1810:
  7796                           
  7797                           ;vend.c: 242: else
  7798                           ;vend.c: 243: {
  7799                           ;vend.c: 244: newval--;
  7800  010EB2  062B               	decf	Update_Hopcoin@newval,f,c
  7801                           
  7802                           ;vend.c: 245: }
  7803                           ;vend.c: 246: break;
  7804  010EB4  D013               	goto	l1808
  7805  010EB6  042A               	decf	Update_Hopcoin@direction,w,c
  7806  010EB8  A4D8               	btfss	status,2,c
  7807  010EBA  D003               	goto	l1815
  7808                           
  7809                           ;vend.c: 248: {
  7810                           ;vend.c: 250: newval = 0x01;
  7811  010EBC  0E01               	movlw	1
  7812  010EBE                     L14:
  7813  010EBE  6E2B               	movwf	Update_Hopcoin@newval,c
  7814                           
  7815                           ;vend.c: 255: }
  7816                           ;vend.c: 256: break;
  7817  010EC0  D00D               	goto	l1808
  7818  010EC2                     l1815:
  7819  010EC2  0E02               	movlw	2
  7820  010EC4  D7FC               	goto	L14
  7821  010EC6                     l1804:
  7822  010EC6  502B               	movf	Update_Hopcoin@newval,w,c
  7823                           
  7824                           ; Switch size 1, requested type "space"
  7825                           ; Number of cases is 3, Range of values is 1 to 5
  7826                           ; switch strategies available:
  7827                           ; Name         Instructions Cycles
  7828                           ; simple_byte           10     6 (average)
  7829                           ;	Chosen strategy is simple_byte
  7830  010EC8  0A01               	xorlw	1	; case 1
  7831  010ECA  B4D8               	btfsc	status,2,c
  7832  010ECC  D7E8               	goto	l1805
  7833  010ECE  0A03               	xorlw	3	; case 2
  7834  010ED0  B4D8               	btfsc	status,2,c
  7835  010ED2  D7EA               	goto	l1809
  7836  010ED4  0A07               	xorlw	7	; case 5
  7837  010ED6  B4D8               	btfsc	status,2,c
  7838  010ED8  D7EE               	goto	l1812
  7839  010EDA  D7F3               	goto	l1815
  7840  010EDC                     l1808:
  7841                           
  7842                           ;vend.c: 259: lcd_string(clrmsg, senspos);
  7843  010EDC  0EF0               	movlw	low _clrmsg
  7844  010EDE  6E24               	movwf	lcd_string@lcdstring,c
  7845  010EE0  0EFF               	movlw	high _clrmsg
  7846  010EE2  6E25               	movwf	lcd_string@lcdstring+1,c
  7847  010EE4  C035  F026         	movff	_senspos,lcd_string@lcdline	;volatile
  7848  010EE8  EC72  F085         	call	_lcd_string	;wreg free
  7849                           
  7850                           ;vend.c: 260: DATAEE_WriteByte(hopcoin, newval);
  7851  010EEC  0EA5               	movlw	low _hopcoin
  7852  010EEE  6EF6               	movwf	tblptrl,c
  7853  010EF0                     	if	1	;There is more than 1 active tblptr byte
  7854  010EF0  0EFD               	movlw	high _hopcoin
  7855  010EF2  6EF7               	movwf	tblptrh,c
  7856  010EF4                     	endif
  7857  010EF4                     	if	1	;There are 3 active tblptr bytes
  7858  010EF4  0E00               	movlw	low (_hopcoin shr (0+16))
  7859  010EF6  6EF8               	movwf	tblptru,c
  7860  010EF8                     	endif
  7861  010EF8  0009               	tblrd		*+
  7862  010EFA  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  7863  010EFE  000A               	tblrd		*-
  7864  010F00  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7865  010F04  C02B  F01F         	movff	Update_Hopcoin@newval,DATAEE_WriteByte@bData
  7866  010F08  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
  7867                           
  7868                           ;vend.c: 261: lcd_dispadd(senspos);
  7869  010F0C  5035               	movf	_senspos,w,c	;volatile
  7870  010F0E  EC90  F08C         	call	_lcd_dispadd
  7871                           
  7872                           ;vend.c: 262: displ_hex((uint24_t)newval);
  7873  010F12  502B               	movf	Update_Hopcoin@newval,w,c
  7874  010F14  6E27               	movwf	displ_hex@hexnum,c
  7875  010F16  6A28               	clrf	displ_hex@hexnum+1,c
  7876  010F18  6A29               	clrf	displ_hex@hexnum+2,c
  7877  010F1A  EC17  F085         	call	_displ_hex	;wreg free
  7878  010F1E  0012               	return		;funcret
  7879  010F20                     __end_of_Update_Hopcoin:
  7880                           	opt stack 0
  7881                           tblptru	equ	0xFF8
  7882                           tblptrh	equ	0xFF7
  7883                           tblptrl	equ	0xFF6
  7884                           tablat	equ	0xFF5
  7885                           prodh	equ	0xFF4
  7886                           prodl	equ	0xFF3
  7887                           postinc0	equ	0xFEE
  7888                           wreg	equ	0xFE8
  7889                           indf2	equ	0xFDF
  7890                           fsr2h	equ	0xFDA
  7891                           fsr2l	equ	0xFD9
  7892                           status	equ	0xFD8
  7893                           
  7894 ;; *************** function _Clear_cred *****************
  7895 ;; Defined at:
  7896 ;;		line 307 in file "vend.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;		None
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  1    wreg      void 
  7903 ;; Registers used:
  7904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7914 ;;Total ram usage:        2 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:    8
  7917 ;; This function calls:
  7918 ;;		_DATAEE_WriteByte
  7919 ;;		_lcd_string
  7920 ;; This function is called by:
  7921 ;;		_enter_service
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text46
  7926  011290                     __ptext46:
  7927                           	opt stack 0
  7928  011290                     _Clear_cred:
  7929                           	opt stack 21
  7930                           
  7931                           ;vend.c: 309: DATAEE_WriteByte(credmem, 0x00);
  7932                           
  7933                           ;incstack = 0
  7934  011290  0EB7               	movlw	low _credmem
  7935  011292  6EF6               	movwf	tblptrl,c
  7936  011294                     	if	1	;There is more than 1 active tblptr byte
  7937  011294  0EFD               	movlw	high _credmem
  7938  011296  6EF7               	movwf	tblptrh,c
  7939  011298                     	endif
  7940  011298                     	if	1	;There are 3 active tblptr bytes
  7941  011298  0E00               	movlw	low (_credmem shr (0+16))
  7942  01129A  6EF8               	movwf	tblptru,c
  7943  01129C                     	endif
  7944  01129C  0009               	tblrd		*+
  7945  01129E  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  7946  0112A2  000A               	tblrd		*-
  7947  0112A4  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7948  0112A8  0E00               	movlw	0
  7949  0112AA  6E1F               	movwf	DATAEE_WriteByte@bData,c
  7950  0112AC  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
  7951                           
  7952                           ;vend.c: 310: lcd_string(creditclr, line1);
  7953  0112B0  0E7E               	movlw	low _creditclr
  7954  0112B2  6E24               	movwf	lcd_string@lcdstring,c
  7955  0112B4  0EFF               	movlw	high _creditclr
  7956  0112B6  6E25               	movwf	lcd_string@lcdstring+1,c
  7957  0112B8  0EE3               	movlw	low _line1
  7958  0112BA  6EF6               	movwf	tblptrl,c
  7959  0112BC                     	if	1	;There is more than 1 active tblptr byte
  7960  0112BC  0EFD               	movlw	high _line1
  7961  0112BE  6EF7               	movwf	tblptrh,c
  7962  0112C0                     	endif
  7963  0112C0                     	if	1	;There are 3 active tblptr bytes
  7964  0112C0  0E00               	movlw	low (_line1 shr (0+16))
  7965  0112C2  6EF8               	movwf	tblptru,c
  7966  0112C4                     	endif
  7967  0112C4  0008               	tblrd		*
  7968  0112C6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7969  0112CA  EC72  F085         	call	_lcd_string	;wreg free
  7970                           
  7971                           ;vend.c: 311: _delay((unsigned long)((1000)*(12000000/4000.0)));
  7972  0112CE  0E10               	movlw	16
  7973  0112D0  6E2A               	movwf	(??_Clear_cred+1)& (0+255),c
  7974  0112D2  0E39               	movlw	57
  7975  0112D4  6E29               	movwf	??_Clear_cred& (0+255),c
  7976  0112D6  0E0E               	movlw	14
  7977  0112D8                     u2537:
  7978  0112D8  2EE8               	decfsz	wreg,f,c
  7979  0112DA  D7FE               	bra	u2537
  7980  0112DC  2E29               	decfsz	??_Clear_cred& (0+255),f,c
  7981  0112DE  D7FC               	bra	u2537
  7982  0112E0  2E2A               	decfsz	(??_Clear_cred+1)& (0+255),f,c
  7983  0112E2  D7FA               	bra	u2537
  7984  0112E4  0012               	return		;funcret
  7985  0112E6                     __end_of_Clear_cred:
  7986                           	opt stack 0
  7987                           tblptru	equ	0xFF8
  7988                           tblptrh	equ	0xFF7
  7989                           tblptrl	equ	0xFF6
  7990                           tablat	equ	0xFF5
  7991                           prodh	equ	0xFF4
  7992                           prodl	equ	0xFF3
  7993                           postinc0	equ	0xFEE
  7994                           wreg	equ	0xFE8
  7995                           indf2	equ	0xFDF
  7996                           fsr2h	equ	0xFDA
  7997                           fsr2l	equ	0xFD9
  7998                           status	equ	0xFD8
  7999                           
  8000 ;; *************** function _Audit *****************
  8001 ;; Defined at:
  8002 ;;		line 184 in file "vend.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;		None
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		None
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8020 ;;Total ram usage:        0 bytes
  8021 ;; Hardware stack levels used:    1
  8022 ;; Hardware stack levels required when called:    2
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_enter_service
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text47
  8031  011A7E                     __ptext47:
  8032                           	opt stack 0
  8033  011A7E                     _Audit:
  8034                           	opt stack 27
  8035                           
  8036                           ;incstack = 0
  8037  011A7E  0012               	return		;funcret
  8038  011A80                     __end_of_Audit:
  8039                           	opt stack 0
  8040                           tblptru	equ	0xFF8
  8041                           tblptrh	equ	0xFF7
  8042                           tblptrl	equ	0xFF6
  8043                           tablat	equ	0xFF5
  8044                           prodh	equ	0xFF4
  8045                           prodl	equ	0xFF3
  8046                           postinc0	equ	0xFEE
  8047                           wreg	equ	0xFE8
  8048                           indf2	equ	0xFDF
  8049                           fsr2h	equ	0xFDA
  8050                           fsr2l	equ	0xFD9
  8051                           status	equ	0xFD8
  8052                           
  8053 ;; *************** function _displ_noteer *****************
  8054 ;; Defined at:
  8055 ;;		line 132 in file "lcd.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;		None
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;Total ram usage:        0 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    8
  8076 ;; This function calls:
  8077 ;;		_displ_code
  8078 ;;		_lcd_string
  8079 ;; This function is called by:
  8080 ;;		_main
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text48
  8085  011788                     __ptext48:
  8086                           	opt stack 0
  8087  011788                     _displ_noteer:
  8088                           	opt stack 22
  8089                           
  8090                           ;lcd.c: 134: lcd_string(noteerr, line1);
  8091                           
  8092                           ;incstack = 0
  8093  011788  0E3C               	movlw	low _noteerr
  8094  01178A  6E24               	movwf	lcd_string@lcdstring,c
  8095  01178C  0EFF               	movlw	high _noteerr
  8096  01178E  6E25               	movwf	lcd_string@lcdstring+1,c
  8097  011790  0EE3               	movlw	low _line1
  8098  011792  6EF6               	movwf	tblptrl,c
  8099  011794                     	if	1	;There is more than 1 active tblptr byte
  8100  011794  0EFD               	movlw	high _line1
  8101  011796  6EF7               	movwf	tblptrh,c
  8102  011798                     	endif
  8103  011798                     	if	1	;There are 3 active tblptr bytes
  8104  011798  0E00               	movlw	low (_line1 shr (0+16))
  8105  01179A  6EF8               	movwf	tblptru,c
  8106  01179C                     	endif
  8107  01179C  0008               	tblrd		*
  8108  01179E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8109  0117A2  EC72  F085         	call	_lcd_string	;wreg free
  8110                           
  8111                           ;lcd.c: 135: ercode = mdbdata[0];
  8112  0117A6  C060  F043         	movff	_mdbdata,_ercode
  8113                           
  8114                           ;lcd.c: 136: displ_code(ercode);
  8115  0117AA  5043               	movf	_ercode,w,c
  8116  0117AC  EC23  F081         	call	_displ_code
  8117                           
  8118                           ;lcd.c: 137: mdbflags.noteerr = 0;
  8119  0117B0  923E               	bcf	_mdbflags,1,c
  8120                           
  8121                           ;lcd.c: 138: venflags.noterr = 0;
  8122  0117B2  9C30               	bcf	_venflags,6,c
  8123                           
  8124                           ;lcd.c: 139: venflags.credisplay = 0;
  8125  0117B4  9830               	bcf	_venflags,4,c
  8126  0117B6  0012               	return		;funcret
  8127  0117B8                     __end_of_displ_noteer:
  8128                           	opt stack 0
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           prodh	equ	0xFF4
  8134                           prodl	equ	0xFF3
  8135                           postinc0	equ	0xFEE
  8136                           wreg	equ	0xFE8
  8137                           indf2	equ	0xFDF
  8138                           fsr2h	equ	0xFDA
  8139                           fsr2l	equ	0xFD9
  8140                           status	equ	0xFD8
  8141                           
  8142 ;; *************** function _displ_code *****************
  8143 ;; Defined at:
  8144 ;;		line 85 in file "lcd.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;  ercode          1    wreg     unsigned char 
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  ercode          1   27[COMRAM] unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;Total ram usage:        3 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    7
  8165 ;; This function calls:
  8166 ;;		_lcd_writeC
  8167 ;; This function is called by:
  8168 ;;		_displ_noteer
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text49
  8173  010246                     __ptext49:
  8174                           	opt stack 0
  8175  010246                     _displ_code:
  8176                           	opt stack 22
  8177                           
  8178                           ;incstack = 0
  8179                           ;displ_code@ercode stored from wreg
  8180  010246  6E26               	movwf	displ_code@ercode,c
  8181                           
  8182                           ;lcd.c: 87: if((ercode >> 4) < 0x0A)
  8183  010248  C026  F024         	movff	displ_code@ercode,??_displ_code
  8184  01024C  3A24               	swapf	??_displ_code,f,c
  8185  01024E  0E0F               	movlw	15
  8186  010250  1624               	andwf	??_displ_code,f,c
  8187  010252  0E0A               	movlw	10
  8188  010254  6024               	cpfslt	??_displ_code,c
  8189  010256  D01E               	goto	l1293
  8190                           
  8191                           ;lcd.c: 88: {
  8192                           ;lcd.c: 89: lcd_writeC((ercode >> 4) | 0x30);
  8193  010258  3826               	swapf	displ_code@ercode,w,c
  8194  01025A  0B0F               	andlw	15
  8195  01025C  0930               	iorlw	48
  8196  01025E  ECE8  F088         	call	_lcd_writeC
  8197                           
  8198                           ;lcd.c: 90: }
  8199  010262  D033               	goto	l1295
  8200  010264  0E41               	movlw	65
  8201  010266  ECE8  F088         	call	_lcd_writeC
  8202                           
  8203                           ;lcd.c: 96: break;
  8204  01026A  D02F               	goto	l1295
  8205  01026C  0E42               	movlw	66
  8206  01026E  ECE8  F088         	call	_lcd_writeC
  8207                           
  8208                           ;lcd.c: 98: break;
  8209  010272  D02B               	goto	l1295
  8210  010274  0E43               	movlw	67
  8211  010276  ECE8  F088         	call	_lcd_writeC
  8212                           
  8213                           ;lcd.c: 100: break;
  8214  01027A  D027               	goto	l1295
  8215  01027C  0E44               	movlw	68
  8216  01027E  ECE8  F088         	call	_lcd_writeC
  8217                           
  8218                           ;lcd.c: 102: break;
  8219  010282  D023               	goto	l1295
  8220  010284  0E45               	movlw	69
  8221  010286  ECE8  F088         	call	_lcd_writeC
  8222                           
  8223                           ;lcd.c: 104: break;
  8224  01028A  D01F               	goto	l1295
  8225  01028C  0E46               	movlw	70
  8226  01028E  ECE8  F088         	call	_lcd_writeC
  8227                           
  8228                           ;lcd.c: 106: }
  8229  010292  D01B               	goto	l1295
  8230  010294                     l1293:
  8231  010294  3826               	swapf	displ_code@ercode,w,c
  8232  010296  0B0F               	andlw	15
  8233  010298  6E24               	movwf	??_displ_code& (0+255),c
  8234  01029A  6A25               	clrf	(??_displ_code+1)& (0+255),c
  8235                           
  8236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8237                           ; Switch size 1, requested type "space"
  8238                           ; Number of cases is 1, Range of values is 0 to 0
  8239                           ; switch strategies available:
  8240                           ; Name         Instructions Cycles
  8241                           ; simple_byte            4     3 (average)
  8242                           ;	Chosen strategy is simple_byte
  8243  01029C  5025               	movf	??_displ_code+1,w,c
  8244  01029E  0A00               	xorlw	0	; case 0
  8245  0102A0  A4D8               	btfss	status,2,c
  8246  0102A2  D013               	goto	l1295
  8247                           
  8248                           ; Switch size 1, requested type "space"
  8249                           ; Number of cases is 6, Range of values is 10 to 15
  8250                           ; switch strategies available:
  8251                           ; Name         Instructions Cycles
  8252                           ; simple_byte           19    10 (average)
  8253                           ;	Chosen strategy is simple_byte
  8254  0102A4  5024               	movf	??_displ_code,w,c
  8255  0102A6  0A0A               	xorlw	10	; case 10
  8256  0102A8  B4D8               	btfsc	status,2,c
  8257  0102AA  D7DC               	goto	l1294
  8258  0102AC  0A01               	xorlw	1	; case 11
  8259  0102AE  B4D8               	btfsc	status,2,c
  8260  0102B0  D7DD               	goto	l1296
  8261  0102B2  0A07               	xorlw	7	; case 12
  8262  0102B4  B4D8               	btfsc	status,2,c
  8263  0102B6  D7DE               	goto	l1297
  8264  0102B8  0A01               	xorlw	1	; case 13
  8265  0102BA  B4D8               	btfsc	status,2,c
  8266  0102BC  D7DF               	goto	l1298
  8267  0102BE  0A03               	xorlw	3	; case 14
  8268  0102C0  B4D8               	btfsc	status,2,c
  8269  0102C2  D7E0               	goto	l1299
  8270  0102C4  0A01               	xorlw	1	; case 15
  8271  0102C6  B4D8               	btfsc	status,2,c
  8272  0102C8  D7E1               	goto	l1300
  8273  0102CA                     l1295:
  8274                           
  8275                           ;lcd.c: 107: }
  8276                           ;lcd.c: 108: if((ercode & 0x0F) < 0x0A)
  8277  0102CA  C026  F024         	movff	displ_code@ercode,??_displ_code
  8278  0102CE  0E0F               	movlw	15
  8279  0102D0  1624               	andwf	??_displ_code,f,c
  8280  0102D2  0E0A               	movlw	10
  8281  0102D4  6024               	cpfslt	??_displ_code,c
  8282  0102D6  D01E               	goto	l1303
  8283                           
  8284                           ;lcd.c: 109: {
  8285                           ;lcd.c: 110: lcd_writeC((ercode & 0x0F) | 0x30);
  8286  0102D8  5026               	movf	displ_code@ercode,w,c
  8287  0102DA  0B0F               	andlw	15
  8288  0102DC  0930               	iorlw	48
  8289  0102DE  ECE8  F088         	call	_lcd_writeC
  8290                           
  8291                           ;lcd.c: 111: }
  8292  0102E2  0012               	return	
  8293  0102E4  0E41               	movlw	65
  8294  0102E6  ECE8  F088         	call	_lcd_writeC
  8295                           
  8296                           ;lcd.c: 117: break;
  8297  0102EA  0012               	return	
  8298  0102EC  0E42               	movlw	66
  8299  0102EE  ECE8  F088         	call	_lcd_writeC
  8300                           
  8301                           ;lcd.c: 119: break;
  8302  0102F2  0012               	return	
  8303  0102F4  0E43               	movlw	67
  8304  0102F6  ECE8  F088         	call	_lcd_writeC
  8305                           
  8306                           ;lcd.c: 121: break;
  8307  0102FA  0012               	return	
  8308  0102FC  0E44               	movlw	68
  8309  0102FE  ECE8  F088         	call	_lcd_writeC
  8310                           
  8311                           ;lcd.c: 123: break;
  8312  010302  0012               	return	
  8313  010304  0E45               	movlw	69
  8314  010306  ECE8  F088         	call	_lcd_writeC
  8315                           
  8316                           ;lcd.c: 125: break;
  8317  01030A  0012               	return	
  8318  01030C  0E46               	movlw	70
  8319  01030E  ECE8  F088         	call	_lcd_writeC
  8320                           
  8321                           ;lcd.c: 127: }
  8322  010312  0012               	return	
  8323  010314                     l1303:
  8324  010314  5026               	movf	displ_code@ercode,w,c
  8325  010316  0B0F               	andlw	15
  8326  010318  6E24               	movwf	??_displ_code& (0+255),c
  8327  01031A  6A25               	clrf	(??_displ_code+1)& (0+255),c
  8328                           
  8329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8330                           ; Switch size 1, requested type "space"
  8331                           ; Number of cases is 1, Range of values is 0 to 0
  8332                           ; switch strategies available:
  8333                           ; Name         Instructions Cycles
  8334                           ; simple_byte            4     3 (average)
  8335                           ;	Chosen strategy is simple_byte
  8336  01031C  5025               	movf	??_displ_code+1,w,c
  8337  01031E  0A00               	xorlw	0	; case 0
  8338  010320  A4D8               	btfss	status,2,c
  8339  010322  0012               	return	
  8340                           
  8341                           ; Switch size 1, requested type "space"
  8342                           ; Number of cases is 6, Range of values is 10 to 15
  8343                           ; switch strategies available:
  8344                           ; Name         Instructions Cycles
  8345                           ; simple_byte           19    10 (average)
  8346                           ;	Chosen strategy is simple_byte
  8347  010324  5024               	movf	??_displ_code,w,c
  8348  010326  0A0A               	xorlw	10	; case 10
  8349  010328  B4D8               	btfsc	status,2,c
  8350  01032A  D7DC               	goto	l1304
  8351  01032C  0A01               	xorlw	1	; case 11
  8352  01032E  B4D8               	btfsc	status,2,c
  8353  010330  D7DD               	goto	l1306
  8354  010332  0A07               	xorlw	7	; case 12
  8355  010334  B4D8               	btfsc	status,2,c
  8356  010336  D7DE               	goto	l1307
  8357  010338  0A01               	xorlw	1	; case 13
  8358  01033A  B4D8               	btfsc	status,2,c
  8359  01033C  D7DF               	goto	l1308
  8360  01033E  0A03               	xorlw	3	; case 14
  8361  010340  B4D8               	btfsc	status,2,c
  8362  010342  D7E0               	goto	l1309
  8363  010344  0A01               	xorlw	1	; case 15
  8364  010346  A4D8               	btfss	status,2,c
  8365  010348  0012               	return	
  8366  01034A  D7E0               	goto	l1310
  8367  01034C                     __end_of_displ_code:
  8368                           	opt stack 0
  8369                           tblptru	equ	0xFF8
  8370                           tblptrh	equ	0xFF7
  8371                           tblptrl	equ	0xFF6
  8372                           tablat	equ	0xFF5
  8373                           prodh	equ	0xFF4
  8374                           prodl	equ	0xFF3
  8375                           postinc0	equ	0xFEE
  8376                           wreg	equ	0xFE8
  8377                           indf2	equ	0xFDF
  8378                           fsr2h	equ	0xFDA
  8379                           fsr2l	equ	0xFD9
  8380                           status	equ	0xFD8
  8381                           
  8382 ;; *************** function _displ_credit *****************
  8383 ;; Defined at:
  8384 ;;		line 77 in file "lcd.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;		None
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;  cash            1   31[COMRAM] unsigned char 
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  1    wreg      void 
  8391 ;; Registers used:
  8392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8402 ;;Total ram usage:        1 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; Hardware stack levels required when called:    8
  8405 ;; This function calls:
  8406 ;;		_credit_check
  8407 ;;		_displ_hex
  8408 ;;		_lcd_string
  8409 ;; This function is called by:
  8410 ;;		_main
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text50
  8415  011658                     __ptext50:
  8416                           	opt stack 0
  8417  011658                     _displ_credit:
  8418                           	opt stack 22
  8419                           
  8420                           ;lcd.c: 79: lcd_string(credits, line1);
  8421                           
  8422                           ;incstack = 0
  8423  011658  0E9B               	movlw	low _credits
  8424  01165A  6E24               	movwf	lcd_string@lcdstring,c
  8425  01165C  0EFF               	movlw	high _credits
  8426  01165E  6E25               	movwf	lcd_string@lcdstring+1,c
  8427  011660  0EE3               	movlw	low _line1
  8428  011662  6EF6               	movwf	tblptrl,c
  8429  011664                     	if	1	;There is more than 1 active tblptr byte
  8430  011664  0EFD               	movlw	high _line1
  8431  011666  6EF7               	movwf	tblptrh,c
  8432  011668                     	endif
  8433  011668                     	if	1	;There are 3 active tblptr bytes
  8434  011668  0E00               	movlw	low (_line1 shr (0+16))
  8435  01166A  6EF8               	movwf	tblptru,c
  8436  01166C                     	endif
  8437  01166C  0008               	tblrd		*
  8438  01166E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8439  011672  EC72  F085         	call	_lcd_string	;wreg free
  8440                           
  8441                           ;lcd.c: 80: uint8_t cash = credit_check();
  8442  011676  EC42  F08C         	call	_credit_check	;wreg free
  8443  01167A  6E2A               	movwf	displ_credit@cash,c
  8444                           
  8445                           ;lcd.c: 81: displ_hex((uint8_t) cash);
  8446  01167C  502A               	movf	displ_credit@cash,w,c
  8447  01167E  6E27               	movwf	displ_hex@hexnum,c
  8448  011680  6A28               	clrf	displ_hex@hexnum+1,c
  8449  011682  6A29               	clrf	displ_hex@hexnum+2,c
  8450  011684  EC17  F085         	call	_displ_hex	;wreg free
  8451                           
  8452                           ;lcd.c: 82: venflags.credisplay = 0;
  8453  011688  9830               	bcf	_venflags,4,c
  8454  01168A  0012               	return		;funcret
  8455  01168C                     __end_of_displ_credit:
  8456                           	opt stack 0
  8457                           tblptru	equ	0xFF8
  8458                           tblptrh	equ	0xFF7
  8459                           tblptrl	equ	0xFF6
  8460                           tablat	equ	0xFF5
  8461                           prodh	equ	0xFF4
  8462                           prodl	equ	0xFF3
  8463                           postinc0	equ	0xFEE
  8464                           wreg	equ	0xFE8
  8465                           indf2	equ	0xFDF
  8466                           fsr2h	equ	0xFDA
  8467                           fsr2l	equ	0xFD9
  8468                           status	equ	0xFD8
  8469                           
  8470 ;; *************** function _lcd_string *****************
  8471 ;; Defined at:
  8472 ;;		line 167 in file "lcd.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  lcdstring       2   25[COMRAM] PTR unsigned char 
  8475 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  8476 ;;		 -> tenrand(9), setnotes(69), pricesetm2(57), pricesetmsg(18), 
  8477 ;;		 -> creditclr(16), dacmsg(13), sensmsg(11), hoppcoin(51), 
  8478 ;;		 -> initnote(37), inithop(20), noteerr(28), credits(13), 
  8479 ;;		 -> disabled(10), enabled(10), clrmsg(6), onmsg(4), 
  8480 ;;		 -> offmsg(4), servmsg(67), inscoin(49), 
  8481 ;;  lcdline         1   27[COMRAM] unsigned char 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8493 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;Total ram usage:        5 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:    7
  8500 ;; This function calls:
  8501 ;;		_lcd_dispadd
  8502 ;;		_lcd_write
  8503 ;;		_lcd_writeC
  8504 ;; This function is called by:
  8505 ;;		_main
  8506 ;;		_enter_service
  8507 ;;		_displ_sens
  8508 ;;		_displ_note
  8509 ;;		_displ_nendis
  8510 ;;		_displ_credit
  8511 ;;		_displ_noteer
  8512 ;;		_vend_init
  8513 ;;		_Hopper_coin
  8514 ;;		_Update_Hopcoin
  8515 ;;		_Sensor_set
  8516 ;;		_Clear_cred
  8517 ;;		_price_set
  8518 ;;		_set_price
  8519 ;;		_set_notes
  8520 ;;		_enable_notes
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text51
  8525  010AE4                     __ptext51:
  8526                           	opt stack 0
  8527  010AE4                     _lcd_string:
  8528                           	opt stack 22
  8529                           
  8530                           ;lcd.c: 169: if(lcdline == line1)
  8531                           
  8532                           ;incstack = 0
  8533  010AE4  0EE3               	movlw	low _line1
  8534  010AE6  6EF6               	movwf	tblptrl,c
  8535  010AE8                     	if	1	;There is more than 1 active tblptr byte
  8536  010AE8  0EFD               	movlw	high _line1
  8537  010AEA  6EF7               	movwf	tblptrh,c
  8538  010AEC                     	endif
  8539  010AEC                     	if	1	;There are 3 active tblptr bytes
  8540  010AEC  0E00               	movlw	low (_line1 shr (0+16))
  8541  010AEE  6EF8               	movwf	tblptru,c
  8542  010AF0                     	endif
  8543  010AF0  0008               	tblrd		*
  8544  010AF2  50F5               	movf	tablat,w,c
  8545  010AF4  6226               	cpfseq	lcd_string@lcdline,c
  8546  010AF6  D00B               	goto	l1327
  8547                           
  8548                           ;lcd.c: 170: {
  8549                           ;lcd.c: 171: lcd_write(dispclr);
  8550  010AF8  0EED               	movlw	low _dispclr
  8551  010AFA  6EF6               	movwf	tblptrl,c
  8552  010AFC                     	if	1	;There is more than 1 active tblptr byte
  8553  010AFC  0EFD               	movlw	high _dispclr
  8554  010AFE  6EF7               	movwf	tblptrh,c
  8555  010B00                     	endif
  8556  010B00                     	if	1	;There are 3 active tblptr bytes
  8557  010B00  0E00               	movlw	low (_dispclr shr (0+16))
  8558  010B02  6EF8               	movwf	tblptru,c
  8559  010B04                     	endif
  8560  010B04  0008               	tblrd		*
  8561  010B06  50F5               	movf	tablat,w,c
  8562  010B08  EC92  F08B         	call	_lcd_write
  8563                           
  8564                           ;lcd.c: 172: }
  8565  010B0C  D004               	goto	l1328
  8566  010B0E                     l1327:
  8567                           
  8568                           ;lcd.c: 173: else
  8569                           ;lcd.c: 174: {
  8570                           ;lcd.c: 176: lcd_dispadd(lcdline | 0x80);
  8571  010B0E  5026               	movf	lcd_string@lcdline,w,c
  8572  010B10  0980               	iorlw	128
  8573  010B12  EC90  F08C         	call	_lcd_dispadd
  8574  010B16                     l1328:
  8575                           
  8576                           ;lcd.c: 177: }
  8577                           ;lcd.c: 178: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
  8578  010B16  0E00               	movlw	0
  8579  010B18  6E44               	movwf	_stradd,c
  8580  010B1A  D028               	goto	l1329
  8581  010B1C                     
  8582                           ;lcd.c: 179: {
  8583                           ;lcd.c: 180: lcdata = lcdstring[stradd];
  8584  010B1C  5044               	movf	_stradd,w,c
  8585  010B1E  0D01               	mullw	1
  8586  010B20  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
  8587  010B24  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  8588  010B28  50F3               	movf	prodl,w,c
  8589  010B2A  2627               	addwf	??_lcd_string,f,c
  8590  010B2C  50F4               	movf	prodh,w,c
  8591  010B2E  2228               	addwfc	??_lcd_string+1,f,c
  8592  010B30  C027  FFF6         	movff	??_lcd_string,tblptrl
  8593  010B34  C028  FFF7         	movff	??_lcd_string+1,tblptrh
  8594  010B38                     	if	0	;tblptru may be non-zero
  8595  010B38                     	endif
  8596  010B38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8597  010B38  0E00               	movlw	low (__mediumconst shr (0+16))
  8598  010B3A  6EF8               	movwf	tblptru,c
  8599  010B3C                     	endif
  8600  010B3C  0008               	tblrd		*
  8601  010B3E  CFF5 F045          	movff	tablat,_lcdata
  8602                           
  8603                           ;lcd.c: 181: lcd_writeC(lcdstring[stradd]);
  8604  010B42  5044               	movf	_stradd,w,c
  8605  010B44  0D01               	mullw	1
  8606  010B46  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
  8607  010B4A  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  8608  010B4E  50F3               	movf	prodl,w,c
  8609  010B50  2627               	addwf	??_lcd_string,f,c
  8610  010B52  50F4               	movf	prodh,w,c
  8611  010B54  2228               	addwfc	??_lcd_string+1,f,c
  8612  010B56  C027  FFF6         	movff	??_lcd_string,tblptrl
  8613  010B5A  C028  FFF7         	movff	??_lcd_string+1,tblptrh
  8614  010B5E                     	if	0	;tblptru may be non-zero
  8615  010B5E                     	endif
  8616  010B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8617  010B5E  0E00               	movlw	low (__mediumconst shr (0+16))
  8618  010B60  6EF8               	movwf	tblptru,c
  8619  010B62                     	endif
  8620  010B62  0008               	tblrd		*
  8621  010B64  50F5               	movf	tablat,w,c
  8622  010B66  ECE8  F088         	call	_lcd_writeC
  8623  010B6A  2A44               	incf	_stradd,f,c
  8624  010B6C                     l1329:
  8625  010B6C  5044               	movf	_stradd,w,c
  8626  010B6E  0D01               	mullw	1
  8627  010B70  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
  8628  010B74  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  8629  010B78  50F3               	movf	prodl,w,c
  8630  010B7A  2627               	addwf	??_lcd_string,f,c
  8631  010B7C  50F4               	movf	prodh,w,c
  8632  010B7E  2228               	addwfc	??_lcd_string+1,f,c
  8633  010B80  C027  FFF6         	movff	??_lcd_string,tblptrl
  8634  010B84  C028  FFF7         	movff	??_lcd_string+1,tblptrh
  8635  010B88                     	if	0	;tblptru may be non-zero
  8636  010B88                     	endif
  8637  010B88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8638  010B88  0E00               	movlw	low (__mediumconst shr (0+16))
  8639  010B8A  6EF8               	movwf	tblptru,c
  8640  010B8C                     	endif
  8641  010B8C  0008               	tblrd		*
  8642  010B8E  50F5               	movf	tablat,w,c
  8643  010B90  0900               	iorlw	0
  8644  010B92  B4D8               	btfsc	status,2,c
  8645  010B94  0012               	return	
  8646  010B96  D7C2               	goto	l1330
  8647  010B98                     __end_of_lcd_string:
  8648                           	opt stack 0
  8649                           tblptru	equ	0xFF8
  8650                           tblptrh	equ	0xFF7
  8651                           tblptrl	equ	0xFF6
  8652                           tablat	equ	0xFF5
  8653                           prodh	equ	0xFF4
  8654                           prodl	equ	0xFF3
  8655                           postinc0	equ	0xFEE
  8656                           wreg	equ	0xFE8
  8657                           indf2	equ	0xFDF
  8658                           fsr2h	equ	0xFDA
  8659                           fsr2l	equ	0xFD9
  8660                           status	equ	0xFD8
  8661                           
  8662 ;; *************** function _displ_hex *****************
  8663 ;; Defined at:
  8664 ;;		line 142 in file "lcd.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  hexnum          3   28[COMRAM] unsigned um
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;  value           8    0[BANK0 ] unsigned char [8]
  8669 ;;  hexnumsave      3    8[BANK0 ] unsigned um
  8670 ;;  i               1   11[BANK0 ] char 
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  1    wreg      void 
  8673 ;; Registers used:
  8674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8680 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8681 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8683 ;;      Totals:         3       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;Total ram usage:       15 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    7
  8687 ;; This function calls:
  8688 ;;		___ltdiv
  8689 ;;		___ltmod
  8690 ;;		_lcd_writeC
  8691 ;; This function is called by:
  8692 ;;		_displ_sens
  8693 ;;		_displ_credit
  8694 ;;		_displ_price
  8695 ;;		_Hopper_coin
  8696 ;;		_Update_Hopcoin
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text52
  8701  010A2E                     __ptext52:
  8702                           	opt stack 0
  8703  010A2E                     _displ_hex:
  8704                           	opt stack 19
  8705                           
  8706                           ;lcd.c: 144: signed char i = 0;
  8707                           
  8708                           ;incstack = 0
  8709  010A2E  0E00               	movlw	0
  8710  010A30  0100               	movlb	0	; () banked
  8711  010A32  6FA5               	movwf	displ_hex@i& (0+255),b
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;lcd.c: 145: uint8_t value[8];
  8715                           ;lcd.c: 146: uint24_t hexnumsave = hexnum;
  8716  010A34  C027  F0A2         	movff	displ_hex@hexnum,displ_hex@hexnumsave
  8717  010A38  C028  F0A3         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
  8718  010A3C  C029  F0A4         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
  8719                           
  8720                           ;lcd.c: 147: while(hexnum > 0)
  8721  010A40  D02F               	goto	l1317
  8722  010A42                     
  8723                           ; BSR set to: 0
  8724                           ;lcd.c: 148: {
  8725                           ;lcd.c: 149: value[i] = hexnum % 10;
  8726                           
  8727                           ; BSR set to: 0
  8728  010A42  51A5               	movf	displ_hex@i& (0+255),w,b
  8729  010A44  0D01               	mullw	1
  8730  010A46  0E9A               	movlw	low displ_hex@value
  8731  010A48  24F3               	addwf	prodl,w,c
  8732  010A4A  6ED9               	movwf	fsr2l,c
  8733  010A4C  0E00               	movlw	high displ_hex@value
  8734  010A4E  20F4               	addwfc	prodh,w,c
  8735  010A50  6EDA               	movwf	fsr2h,c
  8736  010A52  C027  F01D         	movff	displ_hex@hexnum,___ltmod@dividend
  8737  010A56  C028  F01E         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
  8738  010A5A  C029  F01F         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
  8739  010A5E  0E0A               	movlw	10
  8740  010A60  6E20               	movwf	___ltmod@divisor,c
  8741  010A62  0E00               	movlw	0
  8742  010A64  6E21               	movwf	___ltmod@divisor+1,c
  8743  010A66  0E00               	movlw	0
  8744  010A68  6E22               	movwf	___ltmod@divisor+2,c
  8745  010A6A  EC9E  F089         	call	___ltmod	;wreg free
  8746  010A6E  501D               	movf	?___ltmod,w,c
  8747  010A70  6EDF               	movwf	indf2,c
  8748                           
  8749                           ;lcd.c: 150: hexnum /= 10;
  8750  010A72  C027  F01D         	movff	displ_hex@hexnum,___ltdiv@dividend
  8751  010A76  C028  F01E         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
  8752  010A7A  C029  F01F         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
  8753  010A7E  0E0A               	movlw	10
  8754  010A80  6E20               	movwf	___ltdiv@divisor,c
  8755  010A82  0E00               	movlw	0
  8756  010A84  6E21               	movwf	___ltdiv@divisor+1,c
  8757  010A86  0E00               	movlw	0
  8758  010A88  6E22               	movwf	___ltdiv@divisor+2,c
  8759  010A8A  EC7F  F088         	call	___ltdiv	;wreg free
  8760  010A8E  C01D  F027         	movff	?___ltdiv,displ_hex@hexnum
  8761  010A92  C01E  F028         	movff	?___ltdiv+1,displ_hex@hexnum+1
  8762  010A96  C01F  F029         	movff	?___ltdiv+2,displ_hex@hexnum+2
  8763                           
  8764                           ;lcd.c: 151: i = i + 1;
  8765  010A9A  0100               	movlb	0	; () banked
  8766  010A9C  29A5               	incf	displ_hex@i& (0+255),w,b
  8767  010A9E  6FA5               	movwf	displ_hex@i& (0+255),b
  8768  010AA0                     l1317:
  8769                           
  8770                           ; BSR set to: 0
  8771                           
  8772                           ; BSR set to: 0
  8773  010AA0  5027               	movf	displ_hex@hexnum,w,c
  8774  010AA2  1028               	iorwf	displ_hex@hexnum+1,w,c
  8775  010AA4  1029               	iorwf	displ_hex@hexnum+2,w,c
  8776  010AA6  B4D8               	btfsc	status,2,c
  8777  010AA8  D00E               	goto	l1320
  8778  010AAA  D7CB               	goto	l1318
  8779  010AAC                     
  8780                           ; BSR set to: 0
  8781                           ;lcd.c: 155: {
  8782                           ;lcd.c: 156: i--;
  8783                           
  8784                           ; BSR set to: 0
  8785  010AAC  07A5               	decf	displ_hex@i& (0+255),f,b
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;lcd.c: 157: lcd_writeC(value[i] | 0x30);
  8789  010AAE  51A5               	movf	displ_hex@i& (0+255),w,b
  8790  010AB0  0D01               	mullw	1
  8791  010AB2  0E9A               	movlw	low displ_hex@value
  8792  010AB4  24F3               	addwf	prodl,w,c
  8793  010AB6  6ED9               	movwf	fsr2l,c
  8794  010AB8  0E00               	movlw	high displ_hex@value
  8795  010ABA  20F4               	addwfc	prodh,w,c
  8796  010ABC  6EDA               	movwf	fsr2h,c
  8797  010ABE  50DF               	movf	indf2,w,c
  8798  010AC0  0930               	iorlw	48
  8799  010AC2  ECE8  F088         	call	_lcd_writeC
  8800  010AC6                     l1320:
  8801  010AC6  0100               	movlb	0	; () banked
  8802  010AC8  51A5               	movf	displ_hex@i& (0+255),w,b
  8803  010ACA  0A80               	xorlw	128
  8804  010ACC  0F7F               	addlw	-129
  8805  010ACE  B0D8               	btfsc	status,0,c
  8806  010AD0  D7ED               	goto	l1321
  8807                           
  8808                           ; BSR set to: 0
  8809                           ;lcd.c: 158: }
  8810                           ;lcd.c: 160: if(hexnumsave == 0)
  8811                           
  8812                           ; BSR set to: 0
  8813  010AD2  51A2               	movf	displ_hex@hexnumsave& (0+255),w,b
  8814  010AD4  11A3               	iorwf	(displ_hex@hexnumsave+1)& (0+255),w,b
  8815  010AD6  11A4               	iorwf	(displ_hex@hexnumsave+2)& (0+255),w,b
  8816  010AD8  A4D8               	btfss	status,2,c
  8817  010ADA  0012               	return	
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;lcd.c: 161: {
  8821                           ;lcd.c: 162: lcd_writeC(0x30);
  8822  010ADC  0E30               	movlw	48
  8823  010ADE  ECE8  F088         	call	_lcd_writeC
  8824  010AE2  0012               	return	
  8825  010AE4                     __end_of_displ_hex:
  8826                           	opt stack 0
  8827                           tblptru	equ	0xFF8
  8828                           tblptrh	equ	0xFF7
  8829                           tblptrl	equ	0xFF6
  8830                           tablat	equ	0xFF5
  8831                           prodh	equ	0xFF4
  8832                           prodl	equ	0xFF3
  8833                           postinc0	equ	0xFEE
  8834                           wreg	equ	0xFE8
  8835                           indf2	equ	0xFDF
  8836                           fsr2h	equ	0xFDA
  8837                           fsr2l	equ	0xFD9
  8838                           status	equ	0xFD8
  8839                           
  8840 ;; *************** function _lcd_writeC *****************
  8841 ;; Defined at:
  8842 ;;		line 194 in file "lcd.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;  lcdata          1    wreg     unsigned char 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  lcdata          1   24[COMRAM] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;Total ram usage:        1 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    6
  8863 ;; This function calls:
  8864 ;;		_lcd_dispadd
  8865 ;;		_lcd_write
  8866 ;; This function is called by:
  8867 ;;		_displ_code
  8868 ;;		_displ_hex
  8869 ;;		_lcd_string
  8870 ;;		_displ_price
  8871 ;;		_lcd_test
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text53
  8876  0111D0                     __ptext53:
  8877                           	opt stack 0
  8878  0111D0                     _lcd_writeC:
  8879                           	opt stack 22
  8880                           
  8881                           ;incstack = 0
  8882                           ;lcd_writeC@lcdata stored from wreg
  8883  0111D0  6E23               	movwf	lcd_writeC@lcdata,c
  8884  0111D2  8487               	bsf	3975,2,c	;# 
  8885                           
  8886                           ;lcd.c: 199: lcd_write(lcdata);
  8887  0111D4  5023               	movf	lcd_writeC@lcdata,w,c
  8888  0111D6  EC92  F08B         	call	_lcd_write
  8889                           
  8890                           ;lcd.c: 203: switch(bflag)
  8891  0111DA  D021               	goto	l1338
  8892  0111DC  0EE2               	movlw	low _line2
  8893  0111DE  6EF6               	movwf	tblptrl,c
  8894  0111E0                     	if	1	;There is more than 1 active tblptr byte
  8895  0111E0  0EFD               	movlw	high _line2
  8896  0111E2  6EF7               	movwf	tblptrh,c
  8897  0111E4                     	endif
  8898  0111E4                     	if	1	;There are 3 active tblptr bytes
  8899  0111E4  0E00               	movlw	low (_line2 shr (0+16))
  8900  0111E6  6EF8               	movwf	tblptru,c
  8901  0111E8                     	endif
  8902  0111E8  0008               	tblrd		*
  8903  0111EA  50F5               	movf	tablat,w,c
  8904  0111EC  EC90  F08C         	call	_lcd_dispadd
  8905                           
  8906                           ;lcd.c: 206: break;
  8907  0111F0  D020               	goto	l1340
  8908  0111F2  0EE1               	movlw	low _line3
  8909  0111F4  6EF6               	movwf	tblptrl,c
  8910  0111F6                     	if	1	;There is more than 1 active tblptr byte
  8911  0111F6  0EFD               	movlw	high _line3
  8912  0111F8  6EF7               	movwf	tblptrh,c
  8913  0111FA                     	endif
  8914  0111FA                     	if	1	;There are 3 active tblptr bytes
  8915  0111FA  0E00               	movlw	low (_line3 shr (0+16))
  8916  0111FC  6EF8               	movwf	tblptru,c
  8917  0111FE                     	endif
  8918  0111FE  0008               	tblrd		*
  8919  011200  50F5               	movf	tablat,w,c
  8920  011202  EC90  F08C         	call	_lcd_dispadd
  8921                           
  8922                           ;lcd.c: 208: break;
  8923  011206  D015               	goto	l1340
  8924  011208  0EE0               	movlw	low _line4
  8925  01120A  6EF6               	movwf	tblptrl,c
  8926  01120C                     	if	1	;There is more than 1 active tblptr byte
  8927  01120C  0EFD               	movlw	high _line4
  8928  01120E  6EF7               	movwf	tblptrh,c
  8929  011210                     	endif
  8930  011210                     	if	1	;There are 3 active tblptr bytes
  8931  011210  0E00               	movlw	low (_line4 shr (0+16))
  8932  011212  6EF8               	movwf	tblptru,c
  8933  011214                     	endif
  8934  011214  0008               	tblrd		*
  8935  011216  50F5               	movf	tablat,w,c
  8936  011218  EC90  F08C         	call	_lcd_dispadd
  8937                           
  8938                           ;lcd.c: 210: }
  8939  01121C  D00A               	goto	l1340
  8940  01121E                     l1338:
  8941  01121E  5046               	movf	_bflag,w,c
  8942                           
  8943                           ; Switch size 1, requested type "space"
  8944                           ; Number of cases is 3, Range of values is 19 to 83
  8945                           ; switch strategies available:
  8946                           ; Name         Instructions Cycles
  8947                           ; simple_byte           10     6 (average)
  8948                           ;	Chosen strategy is simple_byte
  8949  011220  0A13               	xorlw	19	; case 19
  8950  011222  B4D8               	btfsc	status,2,c
  8951  011224  D7DB               	goto	l1339
  8952  011226  0A34               	xorlw	52	; case 39
  8953  011228  B4D8               	btfsc	status,2,c
  8954  01122A  D7EE               	goto	l1342
  8955  01122C  0A74               	xorlw	116	; case 83
  8956  01122E  B4D8               	btfsc	status,2,c
  8957  011230  D7E0               	goto	l1341
  8958  011232                     l1340:
  8959  011232  9487               	bcf	3975,2,c	;# 
  8960  011234  0012               	return		;funcret
  8961  011236                     __end_of_lcd_writeC:
  8962                           	opt stack 0
  8963                           tblptru	equ	0xFF8
  8964                           tblptrh	equ	0xFF7
  8965                           tblptrl	equ	0xFF6
  8966                           tablat	equ	0xFF5
  8967                           prodh	equ	0xFF4
  8968                           prodl	equ	0xFF3
  8969                           postinc0	equ	0xFEE
  8970                           wreg	equ	0xFE8
  8971                           indf2	equ	0xFDF
  8972                           fsr2h	equ	0xFDA
  8973                           fsr2l	equ	0xFD9
  8974                           status	equ	0xFD8
  8975                           
  8976 ;; *************** function _lcd_dispadd *****************
  8977 ;; Defined at:
  8978 ;;		line 214 in file "lcd.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  lcdaddress      1    wreg     unsigned char 
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;  lcdaddress      1   22[COMRAM] unsigned char 
  8983 ;;  lcdatasave      1   23[COMRAM] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, status,0, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;Total ram usage:        2 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    5
  9000 ;; This function calls:
  9001 ;;		_lcd_write
  9002 ;; This function is called by:
  9003 ;;		_displ_sens
  9004 ;;		_lcd_string
  9005 ;;		_displ_price
  9006 ;;		_lcd_writeC
  9007 ;;		_Hopper_coin
  9008 ;;		_Update_Hopcoin
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text54
  9013  011920                     __ptext54:
  9014                           	opt stack 0
  9015  011920                     _lcd_dispadd:
  9016                           	opt stack 22
  9017                           
  9018                           ;incstack = 0
  9019                           ;lcd_dispadd@lcdaddress stored from wreg
  9020  011920  6E21               	movwf	lcd_dispadd@lcdaddress,c
  9021                           
  9022                           ;lcd.c: 216: uint8_t lcdatasave = lcdata;
  9023  011922  C045  F022         	movff	_lcdata,lcd_dispadd@lcdatasave
  9024  011926  9487               	bcf	3975,2,c	;# 
  9025                           
  9026                           ;lcd.c: 219: lcd_write(lcdaddress | 0x80);
  9027  011928  5021               	movf	lcd_dispadd@lcdaddress,w,c
  9028  01192A  0980               	iorlw	128
  9029  01192C  EC92  F08B         	call	_lcd_write
  9030  011930  8487               	bsf	3975,2,c	;# 
  9031                           
  9032                           ;lcd.c: 221: lcdata = lcdatasave;
  9033  011932  C022  F045         	movff	lcd_dispadd@lcdatasave,_lcdata
  9034  011936  0012               	return		;funcret
  9035  011938                     __end_of_lcd_dispadd:
  9036                           	opt stack 0
  9037                           tblptru	equ	0xFF8
  9038                           tblptrh	equ	0xFF7
  9039                           tblptrl	equ	0xFF6
  9040                           tablat	equ	0xFF5
  9041                           prodh	equ	0xFF4
  9042                           prodl	equ	0xFF3
  9043                           postinc0	equ	0xFEE
  9044                           wreg	equ	0xFE8
  9045                           indf2	equ	0xFDF
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           
  9050 ;; *************** function _lcd_write *****************
  9051 ;; Defined at:
  9052 ;;		line 226 in file "lcd.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  lcdata          1    wreg     unsigned char 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  lcdata          1   21[COMRAM] unsigned char 
  9057 ;;  savelatd        1   20[COMRAM] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9071 ;;Total ram usage:        2 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    4
  9074 ;; This function calls:
  9075 ;;		_lcd_clockE
  9076 ;;		_read_busy
  9077 ;; This function is called by:
  9078 ;;		_lcd_init
  9079 ;;		_displ_note
  9080 ;;		_lcd_string
  9081 ;;		_displ_price
  9082 ;;		_lcd_writeC
  9083 ;;		_lcd_dispadd
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text55
  9088  011724                     __ptext55:
  9089                           	opt stack 0
  9090  011724                     _lcd_write:
  9091                           	opt stack 23
  9092                           
  9093                           ;incstack = 0
  9094                           ;lcd_write@lcdata stored from wreg
  9095  011724  6E20               	movwf	lcd_write@lcdata,c
  9096                           
  9097                           ;lcd.c: 228: uint8_t savelatd = LATD;
  9098  011726  CF86 F01F          	movff	3974,lcd_write@savelatd	;volatile
  9099                           
  9100                           ;lcd.c: 231: bflag = read_busy();
  9101  01172A  EC0F  F08A         	call	_read_busy	;wreg free
  9102  01172E  D002               	goto	L15
  9103  011730                     
  9104                           ;lcd.c: 233: {
  9105                           ;lcd.c: 234: bflag = read_busy();
  9106  011730  EC0F  F08A         	call	_read_busy	;wreg free
  9107  011734                     L15:
  9108  011734  6E46               	movwf	_bflag,c
  9109  011736  BE46               	btfsc	_bflag,7,c
  9110  011738  D7FB               	goto	l1350
  9111                           
  9112                           ;lcd.c: 235: }
  9113                           ;lcd.c: 236: LATD = (lcdata >> 4) & 0x0F;
  9114  01173A  3820               	swapf	lcd_write@lcdata,w,c
  9115  01173C  0B0F               	andlw	15
  9116  01173E  0B0F               	andlw	15
  9117  011740  6E86               	movwf	3974,c	;volatile
  9118                           
  9119                           ;lcd.c: 238: lcd_clockE();
  9120  011742  EC12  F08D         	call	_lcd_clockE	;wreg free
  9121                           
  9122                           ;lcd.c: 240: LATD = lcdata & 0x0F;
  9123  011746  5020               	movf	lcd_write@lcdata,w,c
  9124  011748  0B0F               	andlw	15
  9125  01174A  6E86               	movwf	3974,c	;volatile
  9126                           
  9127                           ;lcd.c: 241: lcd_clockE();
  9128  01174C  EC12  F08D         	call	_lcd_clockE	;wreg free
  9129                           
  9130                           ;lcd.c: 242: LATD = savelatd;
  9131  011750  C01F  FF86         	movff	lcd_write@savelatd,3974	;volatile
  9132  011754  0012               	return		;funcret
  9133  011756                     __end_of_lcd_write:
  9134                           	opt stack 0
  9135                           tblptru	equ	0xFF8
  9136                           tblptrh	equ	0xFF7
  9137                           tblptrl	equ	0xFF6
  9138                           tablat	equ	0xFF5
  9139                           prodh	equ	0xFF4
  9140                           prodl	equ	0xFF3
  9141                           postinc0	equ	0xFEE
  9142                           wreg	equ	0xFE8
  9143                           indf2	equ	0xFDF
  9144                           fsr2h	equ	0xFDA
  9145                           fsr2l	equ	0xFD9
  9146                           status	equ	0xFD8
  9147                           
  9148 ;; *************** function _read_busy *****************
  9149 ;; Defined at:
  9150 ;;		line 257 in file "lcd.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;  savelatd        1   19[COMRAM] unsigned char 
  9155 ;;  savelate        1   18[COMRAM] unsigned char 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1    wreg      char 
  9158 ;; Registers used:
  9159 ;;		wreg, status,2, status,0, cstack
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;Total ram usage:        2 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:    3
  9172 ;; This function calls:
  9173 ;;		_lcd_clockH
  9174 ;;		_lcd_clockL
  9175 ;; This function is called by:
  9176 ;;		_lcd_write
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text56
  9181  01141E                     __ptext56:
  9182                           	opt stack 0
  9183  01141E                     _read_busy:
  9184                           	opt stack 23
  9185                           
  9186                           ;lcd.c: 259: uint8_t savelate = LATE;
  9187                           
  9188                           ;incstack = 0
  9189  01141E  CF87 F01D          	movff	3975,read_busy@savelate	;volatile
  9190                           
  9191                           ;lcd.c: 260: uint8_t savelatd = LATD;
  9192  011422  CF86 F01E          	movff	3974,read_busy@savelatd	;volatile
  9193  011426  9487               	bcf	3975,2,c	;# 
  9194  011428  8287               	bsf	3975,1,c	;# 
  9195                           
  9196                           ;lcd.c: 263: TRISD = (TRISD | 0x0F);
  9197  01142A  508B               	movf	3979,w,c	;volatile
  9198  01142C  090F               	iorlw	15
  9199  01142E  6E8B               	movwf	3979,c	;volatile
  9200                           
  9201                           ;lcd.c: 264: lcd_clockH();
  9202  011430  EC27  F08D         	call	_lcd_clockH	;wreg free
  9203                           
  9204                           ;lcd.c: 265: bflag = (PORTD << 4);
  9205  011434  3890               	swapf	3984,w,c	;volatile
  9206  011436  0BF0               	andlw	240
  9207  011438  6E46               	movwf	_bflag,c
  9208                           
  9209                           ;lcd.c: 266: lcd_clockL();
  9210  01143A  EC23  F08D         	call	_lcd_clockL	;wreg free
  9211                           
  9212                           ;lcd.c: 267: lcd_clockH();
  9213  01143E  EC27  F08D         	call	_lcd_clockH	;wreg free
  9214                           
  9215                           ;lcd.c: 268: bflag = bflag | (PORTD & 0x0F);
  9216  011442  5090               	movf	3984,w,c	;volatile
  9217  011444  0B0F               	andlw	15
  9218  011446  1046               	iorwf	_bflag,w,c
  9219  011448  6E46               	movwf	_bflag,c
  9220  01144A  9087               	bcf	3975,0,c	;# 
  9221                           
  9222                           ;lcd.c: 270: TRISD = (TRISD & 0xF0);
  9223  01144C  508B               	movf	3979,w,c	;volatile
  9224  01144E  0BF0               	andlw	240
  9225  011450  6E8B               	movwf	3979,c	;volatile
  9226  011452  9287               	bcf	3975,1,c	;# 
  9227                           
  9228                           ;lcd.c: 272: LATD = savelatd;
  9229  011454  C01E  FF86         	movff	read_busy@savelatd,3974	;volatile
  9230                           
  9231                           ;lcd.c: 273: LATE = savelate;
  9232  011458  C01D  FF87         	movff	read_busy@savelate,3975	;volatile
  9233                           
  9234                           ;lcd.c: 274: return(bflag);
  9235  01145C  5046               	movf	_bflag,w,c
  9236  01145E  0012               	return	
  9237  011460                     __end_of_read_busy:
  9238                           	opt stack 0
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           postinc0	equ	0xFEE
  9246                           wreg	equ	0xFE8
  9247                           indf2	equ	0xFDF
  9248                           fsr2h	equ	0xFDA
  9249                           fsr2l	equ	0xFD9
  9250                           status	equ	0xFD8
  9251                           
  9252 ;; *************** function _lcd_clockL *****************
  9253 ;; Defined at:
  9254 ;;		line 289 in file "lcd.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;		None
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;		None
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		None
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9272 ;;Total ram usage:        0 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    2
  9275 ;; This function calls:
  9276 ;;		Nothing
  9277 ;; This function is called by:
  9278 ;;		_read_busy
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           	psect	text57
  9283  011A46                     __ptext57:
  9284                           	opt stack 0
  9285  011A46                     _lcd_clockL:
  9286                           	opt stack 23
  9287                           
  9288                           ;incstack = 0
  9289  011A46  9087               	bcf	3975,0,c	;# 
  9290                           
  9291                           ;lcd.c: 292: _delay((unsigned long)((1)*(12000000/4000000.0)));
  9292  011A48  D000               	nop2		;2 cycle nop
  9293  011A4A  F000               	nop	
  9294  011A4C  0012               	return		;funcret
  9295  011A4E                     __end_of_lcd_clockL:
  9296                           	opt stack 0
  9297                           tblptru	equ	0xFF8
  9298                           tblptrh	equ	0xFF7
  9299                           tblptrl	equ	0xFF6
  9300                           tablat	equ	0xFF5
  9301                           prodh	equ	0xFF4
  9302                           prodl	equ	0xFF3
  9303                           postinc0	equ	0xFEE
  9304                           wreg	equ	0xFE8
  9305                           indf2	equ	0xFDF
  9306                           fsr2h	equ	0xFDA
  9307                           fsr2l	equ	0xFD9
  9308                           status	equ	0xFD8
  9309                           
  9310 ;; *************** function _lcd_clockH *****************
  9311 ;; Defined at:
  9312 ;;		line 281 in file "lcd.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;		None
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;		None
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		None
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9330 ;;Total ram usage:        0 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:    2
  9333 ;; This function calls:
  9334 ;;		Nothing
  9335 ;; This function is called by:
  9336 ;;		_read_busy
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text58
  9341  011A4E                     __ptext58:
  9342                           	opt stack 0
  9343  011A4E                     _lcd_clockH:
  9344                           	opt stack 23
  9345                           
  9346                           ;incstack = 0
  9347  011A4E  8087               	bsf	3975,0,c	;# 
  9348                           
  9349                           ;lcd.c: 284: _delay((unsigned long)((1)*(12000000/4000000.0)));
  9350  011A50  D000               	nop2		;2 cycle nop
  9351  011A52  F000               	nop	
  9352  011A54  0012               	return		;funcret
  9353  011A56                     __end_of_lcd_clockH:
  9354                           	opt stack 0
  9355                           tblptru	equ	0xFF8
  9356                           tblptrh	equ	0xFF7
  9357                           tblptrl	equ	0xFF6
  9358                           tablat	equ	0xFF5
  9359                           prodh	equ	0xFF4
  9360                           prodl	equ	0xFF3
  9361                           postinc0	equ	0xFEE
  9362                           wreg	equ	0xFE8
  9363                           indf2	equ	0xFDF
  9364                           fsr2h	equ	0xFDA
  9365                           fsr2l	equ	0xFD9
  9366                           status	equ	0xFD8
  9367                           
  9368 ;; *************** function _lcd_clockE *****************
  9369 ;; Defined at:
  9370 ;;		line 297 in file "lcd.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;		None
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;		None
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      void 
  9377 ;; Registers used:
  9378 ;;		None
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;Total ram usage:        0 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; Hardware stack levels required when called:    2
  9391 ;; This function calls:
  9392 ;;		Nothing
  9393 ;; This function is called by:
  9394 ;;		_lcd_init
  9395 ;;		_lcd_write
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text59
  9400  011A24                     __ptext59:
  9401                           	opt stack 0
  9402  011A24                     _lcd_clockE:
  9403                           	opt stack 24
  9404                           
  9405                           ;incstack = 0
  9406  011A24  8087               	bsf	3975,0,c	;# 
  9407                           
  9408                           ;lcd.c: 300: _delay((unsigned long)((1)*(12000000/4000000.0)));
  9409  011A26  D000               	nop2		;2 cycle nop
  9410  011A28  F000               	nop	
  9411  011A2A  9087               	bcf	3975,0,c	;# 
  9412                           
  9413                           ;lcd.c: 302: _delay((unsigned long)((1)*(12000000/4000000.0)));
  9414  011A2C  D000               	nop2		;2 cycle nop
  9415  011A2E  F000               	nop	
  9416  011A30  0012               	return		;funcret
  9417  011A32                     __end_of_lcd_clockE:
  9418                           	opt stack 0
  9419                           tblptru	equ	0xFF8
  9420                           tblptrh	equ	0xFF7
  9421                           tblptrl	equ	0xFF6
  9422                           tablat	equ	0xFF5
  9423                           prodh	equ	0xFF4
  9424                           prodl	equ	0xFF3
  9425                           postinc0	equ	0xFEE
  9426                           wreg	equ	0xFE8
  9427                           indf2	equ	0xFDF
  9428                           fsr2h	equ	0xFDA
  9429                           fsr2l	equ	0xFD9
  9430                           status	equ	0xFD8
  9431                           
  9432 ;; *************** function ___ltmod *****************
  9433 ;; Defined at:
  9434 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltmod.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  dividend        3   18[COMRAM] unsigned um
  9437 ;;  divisor         3   21[COMRAM] unsigned um
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;  counter         1   24[COMRAM] unsigned char 
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  3   18[COMRAM] unsigned um
  9442 ;; Registers used:
  9443 ;;		wreg, status,2, status,0
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9449 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;Total ram usage:        7 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    2
  9456 ;; This function calls:
  9457 ;;		Nothing
  9458 ;; This function is called by:
  9459 ;;		_displ_hex
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text60
  9464  01133C                     __ptext60:
  9465                           	opt stack 0
  9466  01133C                     ___ltmod:
  9467                           	opt stack 23
  9468                           
  9469                           ;incstack = 0
  9470  01133C  5020               	movf	___ltmod@divisor,w,c
  9471  01133E  1021               	iorwf	___ltmod@divisor+1,w,c
  9472  011340  1022               	iorwf	___ltmod@divisor+2,w,c
  9473  011342  B4D8               	btfsc	status,2,c
  9474  011344  D01E               	goto	l3251
  9475  011346  0E01               	movlw	1
  9476  011348  6E23               	movwf	___ltmod@counter,c
  9477  01134A  D005               	goto	l3246
  9478  01134C  90D8               	bcf	status,0,c
  9479  01134E  3620               	rlcf	___ltmod@divisor,f,c
  9480  011350  3621               	rlcf	___ltmod@divisor+1,f,c
  9481  011352  3622               	rlcf	___ltmod@divisor+2,f,c
  9482  011354  2A23               	incf	___ltmod@counter,f,c
  9483  011356                     l3246:
  9484  011356  AE22               	btfss	___ltmod@divisor+2,7,c
  9485  011358  D7F9               	goto	l3247
  9486  01135A                     u1970:
  9487  01135A  5020               	movf	___ltmod@divisor,w,c
  9488  01135C  5C1D               	subwf	___ltmod@dividend,w,c
  9489  01135E  5021               	movf	___ltmod@divisor+1,w,c
  9490  011360  581E               	subwfb	___ltmod@dividend+1,w,c
  9491  011362  5022               	movf	___ltmod@divisor+2,w,c
  9492  011364  581F               	subwfb	___ltmod@dividend+2,w,c
  9493  011366  A0D8               	btfss	status,0,c
  9494  011368  D006               	goto	l3250
  9495  01136A  5020               	movf	___ltmod@divisor,w,c
  9496  01136C  5E1D               	subwf	___ltmod@dividend,f,c
  9497  01136E  5021               	movf	___ltmod@divisor+1,w,c
  9498  011370  5A1E               	subwfb	___ltmod@dividend+1,f,c
  9499  011372  5022               	movf	___ltmod@divisor+2,w,c
  9500  011374  5A1F               	subwfb	___ltmod@dividend+2,f,c
  9501  011376                     l3250:
  9502  011376  90D8               	bcf	status,0,c
  9503  011378  3222               	rrcf	___ltmod@divisor+2,f,c
  9504  01137A  3221               	rrcf	___ltmod@divisor+1,f,c
  9505  01137C  3220               	rrcf	___ltmod@divisor,f,c
  9506  01137E  2E23               	decfsz	___ltmod@counter,f,c
  9507  011380  D7EC               	goto	u1970
  9508  011382                     l3251:
  9509  011382  C01D  F01D         	movff	___ltmod@dividend,?___ltmod
  9510  011386  C01E  F01E         	movff	___ltmod@dividend+1,?___ltmod+1
  9511  01138A  C01F  F01F         	movff	___ltmod@dividend+2,?___ltmod+2
  9512  01138E  0012               	return		;funcret
  9513  011390                     __end_of___ltmod:
  9514                           	opt stack 0
  9515                           tblptru	equ	0xFF8
  9516                           tblptrh	equ	0xFF7
  9517                           tblptrl	equ	0xFF6
  9518                           tablat	equ	0xFF5
  9519                           prodh	equ	0xFF4
  9520                           prodl	equ	0xFF3
  9521                           postinc0	equ	0xFEE
  9522                           wreg	equ	0xFE8
  9523                           indf2	equ	0xFDF
  9524                           fsr2h	equ	0xFDA
  9525                           fsr2l	equ	0xFD9
  9526                           status	equ	0xFD8
  9527                           
  9528 ;; *************** function ___ltdiv *****************
  9529 ;; Defined at:
  9530 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltdiv.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  dividend        3   18[COMRAM] unsigned um
  9533 ;;  divisor         3   21[COMRAM] unsigned um
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;  quotient        3   24[COMRAM] unsigned um
  9536 ;;  counter         1   27[COMRAM] unsigned char 
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  3   18[COMRAM] unsigned um
  9539 ;; Registers used:
  9540 ;;		wreg, status,2, status,0
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9546 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9550 ;;Total ram usage:       10 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    2
  9553 ;; This function calls:
  9554 ;;		Nothing
  9555 ;; This function is called by:
  9556 ;;		_displ_hex
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text61
  9561  0110FE                     __ptext61:
  9562                           	opt stack 0
  9563  0110FE                     ___ltdiv:
  9564                           	opt stack 23
  9565                           
  9566                           ;incstack = 0
  9567  0110FE  0E00               	movlw	0
  9568  011100  6E23               	movwf	___ltdiv@quotient,c
  9569  011102  0E00               	movlw	0
  9570  011104  6E24               	movwf	___ltdiv@quotient+1,c
  9571  011106  0E00               	movlw	0
  9572  011108  6E25               	movwf	___ltdiv@quotient+2,c
  9573  01110A  5020               	movf	___ltdiv@divisor,w,c
  9574  01110C  1021               	iorwf	___ltdiv@divisor+1,w,c
  9575  01110E  1022               	iorwf	___ltdiv@divisor+2,w,c
  9576  011110  B4D8               	btfsc	status,2,c
  9577  011112  D023               	goto	l3241
  9578  011114  0E01               	movlw	1
  9579  011116  6E26               	movwf	___ltdiv@counter,c
  9580  011118  D005               	goto	l3236
  9581  01111A  90D8               	bcf	status,0,c
  9582  01111C  3620               	rlcf	___ltdiv@divisor,f,c
  9583  01111E  3621               	rlcf	___ltdiv@divisor+1,f,c
  9584  011120  3622               	rlcf	___ltdiv@divisor+2,f,c
  9585  011122  2A26               	incf	___ltdiv@counter,f,c
  9586  011124                     l3236:
  9587  011124  AE22               	btfss	___ltdiv@divisor+2,7,c
  9588  011126  D7F9               	goto	l3237
  9589  011128                     u1940:
  9590  011128  90D8               	bcf	status,0,c
  9591  01112A  3623               	rlcf	___ltdiv@quotient,f,c
  9592  01112C  3624               	rlcf	___ltdiv@quotient+1,f,c
  9593  01112E  3625               	rlcf	___ltdiv@quotient+2,f,c
  9594  011130  5020               	movf	___ltdiv@divisor,w,c
  9595  011132  5C1D               	subwf	___ltdiv@dividend,w,c
  9596  011134  5021               	movf	___ltdiv@divisor+1,w,c
  9597  011136  581E               	subwfb	___ltdiv@dividend+1,w,c
  9598  011138  5022               	movf	___ltdiv@divisor+2,w,c
  9599  01113A  581F               	subwfb	___ltdiv@dividend+2,w,c
  9600  01113C  A0D8               	btfss	status,0,c
  9601  01113E  D007               	goto	l3240
  9602  011140  5020               	movf	___ltdiv@divisor,w,c
  9603  011142  5E1D               	subwf	___ltdiv@dividend,f,c
  9604  011144  5021               	movf	___ltdiv@divisor+1,w,c
  9605  011146  5A1E               	subwfb	___ltdiv@dividend+1,f,c
  9606  011148  5022               	movf	___ltdiv@divisor+2,w,c
  9607  01114A  5A1F               	subwfb	___ltdiv@dividend+2,f,c
  9608  01114C  8023               	bsf	___ltdiv@quotient,0,c
  9609  01114E                     l3240:
  9610  01114E  90D8               	bcf	status,0,c
  9611  011150  3222               	rrcf	___ltdiv@divisor+2,f,c
  9612  011152  3221               	rrcf	___ltdiv@divisor+1,f,c
  9613  011154  3220               	rrcf	___ltdiv@divisor,f,c
  9614  011156  2E26               	decfsz	___ltdiv@counter,f,c
  9615  011158  D7E7               	goto	u1940
  9616  01115A                     l3241:
  9617  01115A  C023  F01D         	movff	___ltdiv@quotient,?___ltdiv
  9618  01115E  C024  F01E         	movff	___ltdiv@quotient+1,?___ltdiv+1
  9619  011162  C025  F01F         	movff	___ltdiv@quotient+2,?___ltdiv+2
  9620  011166  0012               	return		;funcret
  9621  011168                     __end_of___ltdiv:
  9622                           	opt stack 0
  9623                           tblptru	equ	0xFF8
  9624                           tblptrh	equ	0xFF7
  9625                           tblptrl	equ	0xFF6
  9626                           tablat	equ	0xFF5
  9627                           prodh	equ	0xFF4
  9628                           prodl	equ	0xFF3
  9629                           postinc0	equ	0xFEE
  9630                           wreg	equ	0xFE8
  9631                           indf2	equ	0xFDF
  9632                           fsr2h	equ	0xFDA
  9633                           fsr2l	equ	0xFD9
  9634                           status	equ	0xFD8
  9635                           
  9636 ;; *************** function _credit_check *****************
  9637 ;; Defined at:
  9638 ;;		line 143 in file "vend.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;		None
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;		None
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  1    wreg      unsigned char 
  9645 ;; Registers used:
  9646 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;Total ram usage:        0 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; Hardware stack levels required when called:    3
  9659 ;; This function calls:
  9660 ;;		_DATAEE_ReadByte
  9661 ;; This function is called by:
  9662 ;;		_displ_credit
  9663 ;;		_vend_init
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           	psect	text62
  9668  011884                     __ptext62:
  9669                           	opt stack 0
  9670  011884                     _credit_check:
  9671                           	opt stack 26
  9672                           
  9673                           ;vend.c: 145: cash = DATAEE_ReadByte(credmem);
  9674                           
  9675                           ;incstack = 0
  9676  011884  0EB7               	movlw	low _credmem
  9677  011886  6EF6               	movwf	tblptrl,c
  9678  011888                     	if	1	;There is more than 1 active tblptr byte
  9679  011888  0EFD               	movlw	high _credmem
  9680  01188A  6EF7               	movwf	tblptrh,c
  9681  01188C                     	endif
  9682  01188C                     	if	1	;There are 3 active tblptr bytes
  9683  01188C  0E00               	movlw	low (_credmem shr (0+16))
  9684  01188E  6EF8               	movwf	tblptru,c
  9685  011890                     	endif
  9686  011890  0009               	tblrd		*+
  9687  011892  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  9688  011896  000A               	tblrd		*-
  9689  011898  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  9690  01189C  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  9691  0118A0  6E39               	movwf	_cash,c	;volatile
  9692                           
  9693                           ;vend.c: 146: return(cash);
  9694  0118A2  5039               	movf	_cash,w,c	;volatile
  9695  0118A4  0012               	return	
  9696  0118A6                     __end_of_credit_check:
  9697                           	opt stack 0
  9698                           tblptru	equ	0xFF8
  9699                           tblptrh	equ	0xFF7
  9700                           tblptrl	equ	0xFF6
  9701                           tablat	equ	0xFF5
  9702                           prodh	equ	0xFF4
  9703                           prodl	equ	0xFF3
  9704                           postinc0	equ	0xFEE
  9705                           wreg	equ	0xFE8
  9706                           indf2	equ	0xFDF
  9707                           fsr2h	equ	0xFDA
  9708                           fsr2l	equ	0xFD9
  9709                           status	equ	0xFD8
  9710                           
  9711 ;; *************** function _credit_subtract *****************
  9712 ;; Defined at:
  9713 ;;		line 130 in file "vend.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  credit          1    wreg     unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  credit          1   22[COMRAM] unsigned char 
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9731 ;;Total ram usage:        1 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; Hardware stack levels required when called:    3
  9734 ;; This function calls:
  9735 ;;		_DATAEE_ReadByte
  9736 ;;		_DATAEE_WriteByte
  9737 ;; This function is called by:
  9738 ;;		_main
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text63
  9743  0112E6                     __ptext63:
  9744                           	opt stack 0
  9745  0112E6                     _credit_subtract:
  9746                           	opt stack 27
  9747                           
  9748                           ;incstack = 0
  9749                           ;credit_subtract@credit stored from wreg
  9750  0112E6  6E21               	movwf	credit_subtract@credit,c
  9751                           
  9752                           ;vend.c: 132: cash = DATAEE_ReadByte(credmem);
  9753  0112E8  0EB7               	movlw	low _credmem
  9754  0112EA  6EF6               	movwf	tblptrl,c
  9755  0112EC                     	if	1	;There is more than 1 active tblptr byte
  9756  0112EC  0EFD               	movlw	high _credmem
  9757  0112EE  6EF7               	movwf	tblptrh,c
  9758  0112F0                     	endif
  9759  0112F0                     	if	1	;There are 3 active tblptr bytes
  9760  0112F0  0E00               	movlw	low (_credmem shr (0+16))
  9761  0112F2  6EF8               	movwf	tblptru,c
  9762  0112F4                     	endif
  9763  0112F4  0009               	tblrd		*+
  9764  0112F6  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  9765  0112FA  000A               	tblrd		*-
  9766  0112FC  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  9767  011300  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  9768  011304  6E39               	movwf	_cash,c	;volatile
  9769                           
  9770                           ;vend.c: 133: cash = (cash - credit) & 0xFF;
  9771  011306  5021               	movf	credit_subtract@credit,w,c
  9772  011308  0800               	sublw	0
  9773  01130A  2439               	addwf	_cash,w,c	;volatile
  9774  01130C  6E39               	movwf	_cash,c	;volatile
  9775                           
  9776                           ;vend.c: 134: DATAEE_WriteByte(credmem, cash);
  9777  01130E  0EB7               	movlw	low _credmem
  9778  011310  6EF6               	movwf	tblptrl,c
  9779  011312                     	if	1	;There is more than 1 active tblptr byte
  9780  011312  0EFD               	movlw	high _credmem
  9781  011314  6EF7               	movwf	tblptrh,c
  9782  011316                     	endif
  9783  011316                     	if	1	;There are 3 active tblptr bytes
  9784  011316  0E00               	movlw	low (_credmem shr (0+16))
  9785  011318  6EF8               	movwf	tblptru,c
  9786  01131A                     	endif
  9787  01131A  0009               	tblrd		*+
  9788  01131C  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9789  011320  000A               	tblrd		*-
  9790  011322  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9791  011326  C039  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  9792  01132A  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
  9793                           
  9794                           ;vend.c: 135: if(cash == 0)
  9795  01132E  5039               	movf	_cash,w,c	;volatile
  9796  011330  A4D8               	btfss	status,2,c
  9797  011332  0012               	return	
  9798                           
  9799                           ;vend.c: 136: {
  9800                           ;vend.c: 137: venflags.iscredit = 0;
  9801  011334  9030               	bcf	_venflags,0,c
  9802                           
  9803                           ;vend.c: 138: venflags.inscoin = 1;
  9804  011336  8430               	bsf	_venflags,2,c
  9805                           
  9806                           ;vend.c: 139: venflags.credisplay = 0;
  9807  011338  9830               	bcf	_venflags,4,c
  9808  01133A  0012               	return	
  9809  01133C                     __end_of_credit_subtract:
  9810                           	opt stack 0
  9811                           tblptru	equ	0xFF8
  9812                           tblptrh	equ	0xFF7
  9813                           tblptrl	equ	0xFF6
  9814                           tablat	equ	0xFF5
  9815                           prodh	equ	0xFF4
  9816                           prodl	equ	0xFF3
  9817                           postinc0	equ	0xFEE
  9818                           wreg	equ	0xFE8
  9819                           indf2	equ	0xFDF
  9820                           fsr2h	equ	0xFDA
  9821                           fsr2l	equ	0xFD9
  9822                           status	equ	0xFD8
  9823                           
  9824 ;; *************** function _credit_add *****************
  9825 ;; Defined at:
  9826 ;;		line 115 in file "vend.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  credit          1    wreg     unsigned char 
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;  credit          1   29[COMRAM] unsigned char 
  9831 ;; Return value:  Size  Location     Type
  9832 ;;                  1    wreg      void 
  9833 ;; Registers used:
  9834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;Total ram usage:        1 bytes
  9845 ;; Hardware stack levels used:    1
  9846 ;; Hardware stack levels required when called:    5
  9847 ;; This function calls:
  9848 ;;		_DATAEE_ReadByte
  9849 ;;		_DATAEE_WriteByte
  9850 ;;		_Update_cashaudit
  9851 ;; This function is called by:
  9852 ;;		_main
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text64
  9857  011236                     __ptext64:
  9858                           	opt stack 0
  9859  011236                     _credit_add:
  9860                           	opt stack 25
  9861                           
  9862                           ;incstack = 0
  9863                           ;credit_add@credit stored from wreg
  9864  011236  6E28               	movwf	credit_add@credit,c
  9865                           
  9866                           ;vend.c: 117: cash = DATAEE_ReadByte(credmem);
  9867  011238  0EB7               	movlw	low _credmem
  9868  01123A  6EF6               	movwf	tblptrl,c
  9869  01123C                     	if	1	;There is more than 1 active tblptr byte
  9870  01123C  0EFD               	movlw	high _credmem
  9871  01123E  6EF7               	movwf	tblptrh,c
  9872  011240                     	endif
  9873  011240                     	if	1	;There are 3 active tblptr bytes
  9874  011240  0E00               	movlw	low (_credmem shr (0+16))
  9875  011242  6EF8               	movwf	tblptru,c
  9876  011244                     	endif
  9877  011244  0009               	tblrd		*+
  9878  011246  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  9879  01124A  000A               	tblrd		*-
  9880  01124C  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  9881  011250  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
  9882  011254  6E39               	movwf	_cash,c	;volatile
  9883                           
  9884                           ;vend.c: 118: cash = cash + credit;
  9885  011256  5039               	movf	_cash,w,c	;volatile
  9886  011258  2428               	addwf	credit_add@credit,w,c
  9887  01125A  6E39               	movwf	_cash,c	;volatile
  9888                           
  9889                           ;vend.c: 119: DATAEE_WriteByte(credmem, cash);
  9890  01125C  0EB7               	movlw	low _credmem
  9891  01125E  6EF6               	movwf	tblptrl,c
  9892  011260                     	if	1	;There is more than 1 active tblptr byte
  9893  011260  0EFD               	movlw	high _credmem
  9894  011262  6EF7               	movwf	tblptrh,c
  9895  011264                     	endif
  9896  011264                     	if	1	;There are 3 active tblptr bytes
  9897  011264  0E00               	movlw	low (_credmem shr (0+16))
  9898  011266  6EF8               	movwf	tblptru,c
  9899  011268                     	endif
  9900  011268  0009               	tblrd		*+
  9901  01126A  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9902  01126E  000A               	tblrd		*-
  9903  011270  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9904  011274  C039  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  9905  011278  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
  9906                           
  9907                           ;vend.c: 120: if(cash != 0)
  9908  01127C  5039               	movf	_cash,w,c	;volatile
  9909  01127E  B4D8               	btfsc	status,2,c
  9910  011280  D003               	goto	l1767
  9911                           
  9912                           ;vend.c: 121: {
  9913                           ;vend.c: 122: venflags.iscredit = 1;
  9914  011282  8030               	bsf	_venflags,0,c
  9915                           
  9916                           ;vend.c: 123: venflags.inscoin = 0;
  9917  011284  9430               	bcf	_venflags,2,c
  9918                           
  9919                           ;vend.c: 124: venflags.credisplay = 1;
  9920  011286  8830               	bsf	_venflags,4,c
  9921  011288                     l1767:
  9922                           
  9923                           ;vend.c: 126: }
  9924                           ;vend.c: 127: Update_cashaudit(credit);
  9925  011288  5028               	movf	credit_add@credit,w,c
  9926  01128A  EC54  F084         	call	_Update_cashaudit
  9927  01128E  0012               	return		;funcret
  9928  011290                     __end_of_credit_add:
  9929                           	opt stack 0
  9930                           tblptru	equ	0xFF8
  9931                           tblptrh	equ	0xFF7
  9932                           tblptrl	equ	0xFF6
  9933                           tablat	equ	0xFF5
  9934                           prodh	equ	0xFF4
  9935                           prodl	equ	0xFF3
  9936                           postinc0	equ	0xFEE
  9937                           wreg	equ	0xFE8
  9938                           indf2	equ	0xFDF
  9939                           fsr2h	equ	0xFDA
  9940                           fsr2l	equ	0xFD9
  9941                           status	equ	0xFD8
  9942                           
  9943 ;; *************** function _Update_cashaudit *****************
  9944 ;; Defined at:
  9945 ;;		line 100 in file "vend.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  addcash         1    wreg     unsigned char 
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;  addcash         1   28[COMRAM] unsigned char 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      void 
  9952 ;; Registers used:
  9953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;Total ram usage:        1 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    4
  9966 ;; This function calls:
  9967 ;;		_Read_NVstore
  9968 ;;		_Write_NVstore
  9969 ;; This function is called by:
  9970 ;;		_credit_add
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           	psect	text65
  9975  0108A8                     __ptext65:
  9976                           	opt stack 0
  9977  0108A8                     _Update_cashaudit:
  9978                           	opt stack 25
  9979                           
  9980                           ;incstack = 0
  9981                           ;Update_cashaudit@addcash stored from wreg
  9982  0108A8  6E27               	movwf	Update_cashaudit@addcash,c
  9983                           
  9984                           ;vend.c: 102: Read_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
  9985  0108AA  0EB5               	movlw	low _cashinv
  9986  0108AC  6EF6               	movwf	tblptrl,c
  9987  0108AE                     	if	1	;There is more than 1 active tblptr byte
  9988  0108AE  0EFD               	movlw	high _cashinv
  9989  0108B0  6EF7               	movwf	tblptrh,c
  9990  0108B2                     	endif
  9991  0108B2                     	if	1	;There are 3 active tblptr bytes
  9992  0108B2  0E00               	movlw	low (_cashinv shr (0+16))
  9993  0108B4  6EF8               	movwf	tblptru,c
  9994  0108B6                     	endif
  9995  0108B6  0009               	tblrd		*+
  9996  0108B8  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
  9997  0108BC  000A               	tblrd		*-
  9998  0108BE  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
  9999  0108C2  0E4A               	movlw	low _pvcash
 10000  0108C4  6E21               	movwf	Read_NVstore@storemem,c
 10001  0108C6  0E00               	movlw	high _pvcash
 10002  0108C8  6E22               	movwf	Read_NVstore@storemem+1,c
 10003  0108CA  0E02               	movlw	2
 10004  0108CC  6E23               	movwf	Read_NVstore@storesize,c
 10005  0108CE  EC46  F08B         	call	_Read_NVstore	;wreg free
 10006                           
 10007                           ;vend.c: 103: Read_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 10008  0108D2  0EB3               	movlw	low _cashint
 10009  0108D4  6EF6               	movwf	tblptrl,c
 10010  0108D6                     	if	1	;There is more than 1 active tblptr byte
 10011  0108D6  0EFD               	movlw	high _cashint
 10012  0108D8  6EF7               	movwf	tblptrh,c
 10013  0108DA                     	endif
 10014  0108DA                     	if	1	;There are 3 active tblptr bytes
 10015  0108DA  0E00               	movlw	low (_cashint shr (0+16))
 10016  0108DC  6EF8               	movwf	tblptru,c
 10017  0108DE                     	endif
 10018  0108DE  0009               	tblrd		*+
 10019  0108E0  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 10020  0108E4  000A               	tblrd		*-
 10021  0108E6  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 10022  0108EA  0E47               	movlw	low _pnvcash
 10023  0108EC  6E21               	movwf	Read_NVstore@storemem,c
 10024  0108EE  0E00               	movlw	high _pnvcash
 10025  0108F0  6E22               	movwf	Read_NVstore@storemem+1,c
 10026  0108F2  0E03               	movlw	3
 10027  0108F4  6E23               	movwf	Read_NVstore@storesize,c
 10028  0108F6  EC46  F08B         	call	_Read_NVstore	;wreg free
 10029                           
 10030                           ;vend.c: 105: pvcash = pvcash + (uint16_t)addcash;
 10031  0108FA  5027               	movf	Update_cashaudit@addcash,w,c
 10032  0108FC  244A               	addwf	_pvcash,w,c	;volatile
 10033  0108FE  6E4A               	movwf	_pvcash,c	;volatile
 10034  010900  0E00               	movlw	0
 10035  010902  204B               	addwfc	_pvcash+1,w,c	;volatile
 10036  010904  6E4B               	movwf	_pvcash+1,c	;volatile
 10037                           
 10038                           ;vend.c: 107: pnvcash = pnvcash + (uint24_t)addcash;
 10039  010906  5027               	movf	Update_cashaudit@addcash,w,c
 10040  010908  2447               	addwf	_pnvcash,w,c	;volatile
 10041  01090A  6E47               	movwf	_pnvcash,c	;volatile
 10042  01090C  0E00               	movlw	0
 10043  01090E  2048               	addwfc	_pnvcash+1,w,c	;volatile
 10044  010910  6E48               	movwf	_pnvcash+1,c	;volatile
 10045  010912  0E00               	movlw	0
 10046  010914  2049               	addwfc	_pnvcash+2,w,c	;volatile
 10047  010916  6E49               	movwf	_pnvcash+2,c	;volatile
 10048                           
 10049                           ;vend.c: 109: Write_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 10050  010918  0EB5               	movlw	low _cashinv
 10051  01091A  6EF6               	movwf	tblptrl,c
 10052  01091C                     	if	1	;There is more than 1 active tblptr byte
 10053  01091C  0EFD               	movlw	high _cashinv
 10054  01091E  6EF7               	movwf	tblptrh,c
 10055  010920                     	endif
 10056  010920                     	if	1	;There are 3 active tblptr bytes
 10057  010920  0E00               	movlw	low (_cashinv shr (0+16))
 10058  010922  6EF8               	movwf	tblptru,c
 10059  010924                     	endif
 10060  010924  0009               	tblrd		*+
 10061  010926  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 10062  01092A  000A               	tblrd		*-
 10063  01092C  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 10064  010930  0E4A               	movlw	low _pvcash
 10065  010932  6E23               	movwf	Write_NVstore@storemem,c
 10066  010934  0E00               	movlw	high _pvcash
 10067  010936  6E24               	movwf	Write_NVstore@storemem+1,c
 10068  010938  0E02               	movlw	2
 10069  01093A  6E25               	movwf	Write_NVstore@storesize,c
 10070  01093C  EC0A  F08C         	call	_Write_NVstore	;wreg free
 10071                           
 10072                           ;vend.c: 110: Write_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 10073  010940  0EB3               	movlw	low _cashint
 10074  010942  6EF6               	movwf	tblptrl,c
 10075  010944                     	if	1	;There is more than 1 active tblptr byte
 10076  010944  0EFD               	movlw	high _cashint
 10077  010946  6EF7               	movwf	tblptrh,c
 10078  010948                     	endif
 10079  010948                     	if	1	;There are 3 active tblptr bytes
 10080  010948  0E00               	movlw	low (_cashint shr (0+16))
 10081  01094A  6EF8               	movwf	tblptru,c
 10082  01094C                     	endif
 10083  01094C  0009               	tblrd		*+
 10084  01094E  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 10085  010952  000A               	tblrd		*-
 10086  010954  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 10087  010958  0E47               	movlw	low _pnvcash
 10088  01095A  6E23               	movwf	Write_NVstore@storemem,c
 10089  01095C  0E00               	movlw	high _pnvcash
 10090  01095E  6E24               	movwf	Write_NVstore@storemem+1,c
 10091  010960  0E03               	movlw	3
 10092  010962  6E25               	movwf	Write_NVstore@storesize,c
 10093  010964  EC0A  F08C         	call	_Write_NVstore	;wreg free
 10094  010968  F000               	nop		;# 
 10095  01096A  0012               	return		;funcret
 10096  01096C                     __end_of_Update_cashaudit:
 10097                           	opt stack 0
 10098                           tblptru	equ	0xFF8
 10099                           tblptrh	equ	0xFF7
 10100                           tblptrl	equ	0xFF6
 10101                           tablat	equ	0xFF5
 10102                           prodh	equ	0xFF4
 10103                           prodl	equ	0xFF3
 10104                           postinc0	equ	0xFEE
 10105                           wreg	equ	0xFE8
 10106                           indf2	equ	0xFDF
 10107                           fsr2h	equ	0xFDA
 10108                           fsr2l	equ	0xFD9
 10109                           status	equ	0xFD8
 10110                           
 10111 ;; *************** function _Write_NVstore *****************
 10112 ;; Defined at:
 10113 ;;		line 80 in file "vend.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  storeadd        2   22[COMRAM] unsigned int 
 10116 ;;  storemem        2   24[COMRAM] PTR unsigned char 
 10117 ;;		 -> pnvcash(3), pvcash(2), 
 10118 ;;  storesize       1   26[COMRAM] unsigned char 
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;  i               1   27[COMRAM] unsigned char 
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  1    wreg      void 
 10123 ;; Registers used:
 10124 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10125 ;; Tracked objects:
 10126 ;;		On entry : 0/0
 10127 ;;		On exit  : 0/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10130 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10133 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10134 ;;Total ram usage:        6 bytes
 10135 ;; Hardware stack levels used:    1
 10136 ;; Hardware stack levels required when called:    3
 10137 ;; This function calls:
 10138 ;;		_DATAEE_WriteByte
 10139 ;; This function is called by:
 10140 ;;		_Update_cashaudit
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text66
 10145  011814                     __ptext66:
 10146                           	opt stack 0
 10147  011814                     _Write_NVstore:
 10148                           	opt stack 25
 10149                           
 10150                           ;vend.c: 82: uint8_t i = 0;
 10151                           
 10152                           ;incstack = 0
 10153  011814  0E00               	movlw	0
 10154  011816  6E26               	movwf	Write_NVstore@i,c
 10155                           
 10156                           ;vend.c: 83: while(i < storesize)
 10157  011818  D00C               	goto	l1752
 10158  01181A                     
 10159                           ;vend.c: 84: {
 10160                           ;vend.c: 85: DATAEE_WriteByte(storeadd, storemem + i);
 10161  01181A  C021  F01D         	movff	Write_NVstore@storeadd,DATAEE_WriteByte@bAdd
 10162  01181E  C022  F01E         	movff	Write_NVstore@storeadd+1,DATAEE_WriteByte@bAdd+1
 10163  011822  5026               	movf	Write_NVstore@i,w,c
 10164  011824  0D01               	mullw	1
 10165  011826  5023               	movf	Write_NVstore@storemem,w,c
 10166  011828  24F3               	addwf	prodl,w,c
 10167  01182A  6E1F               	movwf	DATAEE_WriteByte@bData,c
 10168  01182C  EC6D  F08A         	call	_DATAEE_WriteByte	;wreg free
 10169                           
 10170                           ;vend.c: 86: i++;
 10171  011830  2A26               	incf	Write_NVstore@i,f,c
 10172  011832                     l1752:
 10173  011832  5025               	movf	Write_NVstore@storesize,w,c
 10174  011834  5C26               	subwf	Write_NVstore@i,w,c
 10175  011836  B0D8               	btfsc	status,0,c
 10176  011838  0012               	return	
 10177  01183A  D7EF               	goto	l1753
 10178  01183C                     __end_of_Write_NVstore:
 10179                           	opt stack 0
 10180                           tblptru	equ	0xFF8
 10181                           tblptrh	equ	0xFF7
 10182                           tblptrl	equ	0xFF6
 10183                           tablat	equ	0xFF5
 10184                           prodh	equ	0xFF4
 10185                           prodl	equ	0xFF3
 10186                           postinc0	equ	0xFEE
 10187                           wreg	equ	0xFE8
 10188                           indf2	equ	0xFDF
 10189                           fsr2h	equ	0xFDA
 10190                           fsr2l	equ	0xFD9
 10191                           status	equ	0xFD8
 10192                           
 10193 ;; *************** function _DATAEE_WriteByte *****************
 10194 ;; Defined at:
 10195 ;;		line 169 in file "mcc_generated_files/memory.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  bAdd            2   18[COMRAM] unsigned int 
 10198 ;;  bData           1   20[COMRAM] unsigned char 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      void 
 10203 ;; Registers used:
 10204 ;;		wreg, status,2, status,0
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10210 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10213 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;Total ram usage:        4 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:    2
 10217 ;; This function calls:
 10218 ;;		Nothing
 10219 ;; This function is called by:
 10220 ;;		_displ_sens
 10221 ;;		_Write_NVstore
 10222 ;;		_credit_add
 10223 ;;		_credit_subtract
 10224 ;;		_Update_Hopcoin
 10225 ;;		_Clear_cred
 10226 ;;		_set_price
 10227 ;;		_save_notes
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231                           	psect	text67
 10232  0114DA                     __ptext67:
 10233                           	opt stack 0
 10234  0114DA                     _DATAEE_WriteByte:
 10235                           	opt stack 24
 10236                           
 10237                           ;memory.c: 171: uint8_t GIEBitValue = INTCONbits.GIE;
 10238                           
 10239                           ;incstack = 0
 10240  0114DA  0E00               	movlw	0
 10241  0114DC  BEF2               	btfsc	intcon,7,c	;volatile
 10242  0114DE  0E01               	movlw	1
 10243  0114E0  6E20               	movwf	DATAEE_WriteByte@GIEBitValue,c
 10244                           
 10245                           ;memory.c: 173: NVMADRH = ((bAdd >> 8) & 0x03);
 10246  0114E2  501E               	movf	DATAEE_WriteByte@bAdd+1,w,c
 10247  0114E4  0B03               	andlw	3
 10248  0114E6  6E7F               	movwf	3967,c	;volatile
 10249                           
 10250                           ;memory.c: 174: NVMADRL = (bAdd & 0xFF);
 10251  0114E8  C01D  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
 10252                           
 10253                           ;memory.c: 175: NVMDAT = bData;
 10254  0114EC  C01F  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
 10255                           
 10256                           ;memory.c: 176: NVMCON1bits.NVMREG = 0;
 10257  0114F0  0E3F               	movlw	-193
 10258  0114F2  1681               	andwf	3969,f,c	;volsfr
 10259                           
 10260                           ;memory.c: 177: NVMCON1bits.WREN = 1;
 10261  0114F4  8481               	bsf	3969,2,c	;volsfr
 10262                           
 10263                           ;memory.c: 178: INTCONbits.GIE = 0;
 10264  0114F6  9EF2               	bcf	intcon,7,c	;volatile
 10265                           
 10266                           ;memory.c: 179: NVMCON2 = 0x55;
 10267  0114F8  0E55               	movlw	85
 10268  0114FA  6E82               	movwf	3970,c	;volsfr
 10269                           
 10270                           ;memory.c: 180: NVMCON2 = 0xAA;
 10271  0114FC  0EAA               	movlw	170
 10272  0114FE  6E82               	movwf	3970,c	;volsfr
 10273                           
 10274                           ;memory.c: 181: NVMCON1bits.WR = 1;
 10275  011500  8281               	bsf	3969,1,c	;volsfr
 10276  011502                     
 10277                           ;memory.c: 184: {
 10278  011502  B281               	btfsc	3969,1,c	;volsfr
 10279  011504  D7FE               	goto	l253
 10280                           
 10281                           ;memory.c: 185: }
 10282                           ;memory.c: 187: NVMCON1bits.WREN = 0;
 10283  011506  9481               	bcf	3969,2,c	;volsfr
 10284                           
 10285                           ;memory.c: 188: INTCONbits.GIE = GIEBitValue;
 10286  011508  B020               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
 10287  01150A  D002               	bra	u2005
 10288  01150C  9EF2               	bcf	intcon,7,c	;volatile
 10289  01150E  D001               	bra	u2006
 10290  011510                     u2005:
 10291  011510  8EF2               	bsf	intcon,7,c	;volatile
 10292  011512                     u2006:
 10293  011512  0012               	return		;funcret
 10294  011514                     __end_of_DATAEE_WriteByte:
 10295                           	opt stack 0
 10296                           tblptru	equ	0xFF8
 10297                           tblptrh	equ	0xFF7
 10298                           tblptrl	equ	0xFF6
 10299                           tablat	equ	0xFF5
 10300                           prodh	equ	0xFF4
 10301                           prodl	equ	0xFF3
 10302                           intcon	equ	0xFF2
 10303                           postinc0	equ	0xFEE
 10304                           wreg	equ	0xFE8
 10305                           indf2	equ	0xFDF
 10306                           fsr2h	equ	0xFDA
 10307                           fsr2l	equ	0xFD9
 10308                           status	equ	0xFD8
 10309                           
 10310 ;; *************** function _Read_NVstore *****************
 10311 ;; Defined at:
 10312 ;;		line 90 in file "vend.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  storeadd        2   20[COMRAM] unsigned int 
 10315 ;;  storemem        2   22[COMRAM] PTR unsigned char 
 10316 ;;		 -> pnvcash(3), pvcash(2), 
 10317 ;;  storesize       1   24[COMRAM] unsigned char 
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  i               1   25[COMRAM] unsigned char 
 10320 ;; Return value:  Size  Location     Type
 10321 ;;                  1    wreg      void 
 10322 ;; Registers used:
 10323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10324 ;; Tracked objects:
 10325 ;;		On entry : 0/0
 10326 ;;		On exit  : 0/0
 10327 ;;		Unchanged: 0/0
 10328 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10329 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;Total ram usage:        6 bytes
 10334 ;; Hardware stack levels used:    1
 10335 ;; Hardware stack levels required when called:    3
 10336 ;; This function calls:
 10337 ;;		_DATAEE_ReadByte
 10338 ;; This function is called by:
 10339 ;;		_Update_cashaudit
 10340 ;; This function uses a non-reentrant model
 10341 ;;
 10342                           
 10343                           	psect	text68
 10344  01168C                     __ptext68:
 10345                           	opt stack 0
 10346  01168C                     _Read_NVstore:
 10347                           	opt stack 25
 10348                           
 10349                           ;vend.c: 92: uint8_t i = 0;
 10350                           
 10351                           ;incstack = 0
 10352  01168C  0E00               	movlw	0
 10353  01168E  6E24               	movwf	Read_NVstore@i,c
 10354                           
 10355                           ;vend.c: 93: while(i < storesize)
 10356  011690  D012               	goto	l1758
 10357  011692                     
 10358                           ;vend.c: 94: {
 10359                           ;vend.c: 95: storemem[i] = DATAEE_ReadByte(storeadd + i);
 10360  011692  5024               	movf	Read_NVstore@i,w,c
 10361  011694  0D01               	mullw	1
 10362  011696  50F3               	movf	prodl,w,c
 10363  011698  2421               	addwf	Read_NVstore@storemem,w,c
 10364  01169A  6ED9               	movwf	fsr2l,c
 10365  01169C  50F4               	movf	prodh,w,c
 10366  01169E  2022               	addwfc	Read_NVstore@storemem+1,w,c
 10367  0116A0  6EDA               	movwf	fsr2h,c
 10368  0116A2  5024               	movf	Read_NVstore@i,w,c
 10369  0116A4  241F               	addwf	Read_NVstore@storeadd,w,c
 10370  0116A6  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 10371  0116A8  0E00               	movlw	0
 10372  0116AA  2020               	addwfc	Read_NVstore@storeadd+1,w,c
 10373  0116AC  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 10374  0116AE  EC9C  F08C         	call	_DATAEE_ReadByte	;wreg free
 10375  0116B2  6EDF               	movwf	indf2,c
 10376                           
 10377                           ;vend.c: 96: i++;
 10378  0116B4  2A24               	incf	Read_NVstore@i,f,c
 10379  0116B6                     l1758:
 10380  0116B6  5023               	movf	Read_NVstore@storesize,w,c
 10381  0116B8  5C24               	subwf	Read_NVstore@i,w,c
 10382  0116BA  B0D8               	btfsc	status,0,c
 10383  0116BC  0012               	return	
 10384  0116BE  D7E9               	goto	l1759
 10385  0116C0                     __end_of_Read_NVstore:
 10386                           	opt stack 0
 10387                           tblptru	equ	0xFF8
 10388                           tblptrh	equ	0xFF7
 10389                           tblptrl	equ	0xFF6
 10390                           tablat	equ	0xFF5
 10391                           prodh	equ	0xFF4
 10392                           prodl	equ	0xFF3
 10393                           intcon	equ	0xFF2
 10394                           postinc0	equ	0xFEE
 10395                           wreg	equ	0xFE8
 10396                           indf2	equ	0xFDF
 10397                           fsr2h	equ	0xFDA
 10398                           fsr2l	equ	0xFD9
 10399                           status	equ	0xFD8
 10400                           
 10401 ;; *************** function _DATAEE_ReadByte *****************
 10402 ;; Defined at:
 10403 ;;		line 191 in file "mcc_generated_files/memory.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  bAdd            2   18[COMRAM] unsigned int 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      unsigned char 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2, status,0
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;Total ram usage:        2 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    2
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_Init_vendmem
 10428 ;;		_vend_init
 10429 ;;		_Read_NVstore
 10430 ;;		_credit_add
 10431 ;;		_credit_subtract
 10432 ;;		_credit_check
 10433 ;;		_Hopper_coin
 10434 ;;		_set_price
 10435 ;;		_mdb_init
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text69
 10440  011938                     __ptext69:
 10441                           	opt stack 0
 10442  011938                     _DATAEE_ReadByte:
 10443                           	opt stack 26
 10444                           
 10445                           ;memory.c: 193: NVMADRH = ((bAdd >> 8) & 0x03);
 10446                           
 10447                           ;incstack = 0
 10448  011938  501E               	movf	DATAEE_ReadByte@bAdd+1,w,c
 10449  01193A  0B03               	andlw	3
 10450  01193C  6E7F               	movwf	3967,c	;volatile
 10451                           
 10452                           ;memory.c: 194: NVMADRL = (bAdd & 0xFF);
 10453  01193E  C01D  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
 10454                           
 10455                           ;memory.c: 195: NVMCON1bits.NVMREG = 0;
 10456  011942  0E3F               	movlw	-193
 10457  011944  1681               	andwf	3969,f,c	;volsfr
 10458                           
 10459                           ;memory.c: 196: NVMCON1bits.RD = 1;
 10460  011946  8081               	bsf	3969,0,c	;volsfr
 10461                           
 10462                           ;memory.c: 197: __nop();
 10463  011948  F000               	nop	
 10464                           
 10465                           ;memory.c: 198: __nop();
 10466  01194A  F000               	nop	
 10467                           
 10468                           ;memory.c: 200: return (NVMDAT);
 10469  01194C  5080               	movf	3968,w,c	;volatile
 10470  01194E  0012               	return	
 10471  011950                     __end_of_DATAEE_ReadByte:
 10472                           	opt stack 0
 10473                           tblptru	equ	0xFF8
 10474                           tblptrh	equ	0xFF7
 10475                           tblptrl	equ	0xFF6
 10476                           tablat	equ	0xFF5
 10477                           prodh	equ	0xFF4
 10478                           prodl	equ	0xFF3
 10479                           intcon	equ	0xFF2
 10480                           postinc0	equ	0xFEE
 10481                           wreg	equ	0xFE8
 10482                           indf2	equ	0xFDF
 10483                           fsr2h	equ	0xFDA
 10484                           fsr2l	equ	0xFD9
 10485                           status	equ	0xFD8
 10486                           
 10487 ;; *************** function _SYSTEM_Initialize *****************
 10488 ;; Defined at:
 10489 ;;		line 116 in file "mcc_generated_files/mcc.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		wreg, status,2, status,0, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:    3
 10510 ;; This function calls:
 10511 ;;		_CMP1_Initialize
 10512 ;;		_DAC1_Initialize
 10513 ;;		_EUSART1_Initialize
 10514 ;;		_EUSART2_Initialize
 10515 ;;		_INTERRUPT_Initialize
 10516 ;;		_OSCILLATOR_Initialize
 10517 ;;		_PIN_MANAGER_Initialize
 10518 ;;		_PMD_Initialize
 10519 ;;		_TMR0_Initialize
 10520 ;;		_TMR1_Initialize
 10521 ;;		_TMR3_Initialize
 10522 ;;		_TMR5_Initialize
 10523 ;; This function is called by:
 10524 ;;		_main
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text70
 10529  011756                     __ptext70:
 10530                           	opt stack 0
 10531  011756                     _SYSTEM_Initialize:
 10532                           	opt stack 27
 10533                           
 10534                           ;mcc.c: 118: INTERRUPT_Initialize();
 10535                           
 10536                           ;incstack = 0
 10537  011756  EC2B  F08D         	call	_INTERRUPT_Initialize	;wreg free
 10538                           
 10539                           ;mcc.c: 119: PMD_Initialize();
 10540  01175A  EC82  F08C         	call	_PMD_Initialize	;wreg free
 10541                           
 10542                           ;mcc.c: 120: PIN_MANAGER_Initialize();
 10543  01175E  ECCC  F085         	call	_PIN_MANAGER_Initialize	;wreg free
 10544                           
 10545                           ;mcc.c: 121: OSCILLATOR_Initialize();
 10546  011762  ECA8  F08C         	call	_OSCILLATOR_Initialize	;wreg free
 10547                           
 10548                           ;mcc.c: 122: CMP1_Initialize();
 10549  011766  ECE1  F08C         	call	_CMP1_Initialize	;wreg free
 10550                           
 10551                           ;mcc.c: 123: TMR3_Initialize();
 10552  01176A  ECDC  F08A         	call	_TMR3_Initialize	;wreg free
 10553                           
 10554                           ;mcc.c: 124: DAC1_Initialize();
 10555  01176E  EC19  F08D         	call	_DAC1_Initialize	;wreg free
 10556                           
 10557                           ;mcc.c: 125: TMR5_Initialize();
 10558  011772  ECC1  F08A         	call	_TMR5_Initialize	;wreg free
 10559                           
 10560                           ;mcc.c: 126: TMR1_Initialize();
 10561  011776  ECF7  F08A         	call	_TMR1_Initialize	;wreg free
 10562                           
 10563                           ;mcc.c: 127: TMR0_Initialize();
 10564  01177A  ECF3  F08B         	call	_TMR0_Initialize	;wreg free
 10565                           
 10566                           ;mcc.c: 128: EUSART1_Initialize();
 10567  01177E  ECD6  F08C         	call	_EUSART1_Initialize	;wreg free
 10568                           
 10569                           ;mcc.c: 129: EUSART2_Initialize();
 10570  011782  ECB4  F08C         	call	_EUSART2_Initialize	;wreg free
 10571  011786  0012               	return		;funcret
 10572  011788                     __end_of_SYSTEM_Initialize:
 10573                           	opt stack 0
 10574                           tblptru	equ	0xFF8
 10575                           tblptrh	equ	0xFF7
 10576                           tblptrl	equ	0xFF6
 10577                           tablat	equ	0xFF5
 10578                           prodh	equ	0xFF4
 10579                           prodl	equ	0xFF3
 10580                           intcon	equ	0xFF2
 10581                           postinc0	equ	0xFEE
 10582                           wreg	equ	0xFE8
 10583                           indf2	equ	0xFDF
 10584                           fsr2h	equ	0xFDA
 10585                           fsr2l	equ	0xFD9
 10586                           status	equ	0xFD8
 10587                           
 10588 ;; *************** function _TMR5_Initialize *****************
 10589 ;; Defined at:
 10590 ;;		line 62 in file "mcc_generated_files/tmr5.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg, status,2, status,0
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;Total ram usage:        2 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    2
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_SYSTEM_Initialize
 10615 ;;		_mdb_unlock
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           	psect	text71
 10620  011582                     __ptext71:
 10621                           	opt stack 0
 10622  011582                     _TMR5_Initialize:
 10623                           	opt stack 26
 10624                           
 10625                           ;tmr5.c: 67: T5GCON = 0x00;
 10626                           
 10627                           ;incstack = 0
 10628  011582  0E00               	movlw	0
 10629  011584  6EC4               	movwf	4036,c	;volatile
 10630                           
 10631                           ;tmr5.c: 70: T5GATE = 0x00;
 10632  011586  0E00               	movlw	0
 10633  011588  6EC5               	movwf	4037,c	;volatile
 10634                           
 10635                           ;tmr5.c: 73: T5CLK = 0x04;
 10636  01158A  0E04               	movlw	4
 10637  01158C  6EC6               	movwf	4038,c	;volatile
 10638                           
 10639                           ;tmr5.c: 76: TMR5H = 0xE1;
 10640  01158E  0EE1               	movlw	225
 10641  011590  6EC2               	movwf	4034,c	;volatile
 10642                           
 10643                           ;tmr5.c: 79: TMR5L = 0xBA;
 10644  011592  0EBA               	movlw	186
 10645  011594  6EC1               	movwf	4033,c	;volatile
 10646                           
 10647                           ;tmr5.c: 82: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10648  011596  50C1               	movf	4033,w,c	;volatile
 10649  011598  CFC2 F01D          	movff	4034,??_TMR5_Initialize	;volatile
 10650  01159C  6A1E               	clrf	(??_TMR5_Initialize+1)& (0+255),c
 10651  01159E  C01D  F01E         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 10652  0115A2  6A1D               	clrf	??_TMR5_Initialize,c
 10653  0115A4  101D               	iorwf	??_TMR5_Initialize,w,c
 10654  0115A6  0100               	movlb	0	; () banked
 10655  0115A8  6FAA               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 10656  0115AA  501E               	movf	??_TMR5_Initialize+1,w,c
 10657  0115AC  6FAB               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 10658                           
 10659                           ; BSR set to: 0
 10660                           ;tmr5.c: 85: PIR4bits.TMR5IF = 0;
 10661  0115AE  010E               	movlb	14	; () banked
 10662  0115B0  99CE               	bcf	206,4,b	;volatile
 10663                           
 10664                           ; BSR set to: 14
 10665                           ;tmr5.c: 88: T5CON = 0x01;
 10666  0115B2  0E01               	movlw	1
 10667  0115B4  6EC3               	movwf	4035,c	;volatile
 10668                           
 10669                           ; BSR set to: 14
 10670  0115B6  0012               	return		;funcret
 10671  0115B8                     __end_of_TMR5_Initialize:
 10672                           	opt stack 0
 10673                           tblptru	equ	0xFF8
 10674                           tblptrh	equ	0xFF7
 10675                           tblptrl	equ	0xFF6
 10676                           tablat	equ	0xFF5
 10677                           prodh	equ	0xFF4
 10678                           prodl	equ	0xFF3
 10679                           intcon	equ	0xFF2
 10680                           postinc0	equ	0xFEE
 10681                           wreg	equ	0xFE8
 10682                           indf2	equ	0xFDF
 10683                           fsr2h	equ	0xFDA
 10684                           fsr2l	equ	0xFD9
 10685                           status	equ	0xFD8
 10686                           
 10687 ;; *************** function _TMR3_Initialize *****************
 10688 ;; Defined at:
 10689 ;;		line 62 in file "mcc_generated_files/tmr3.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;		None
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;		None
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  1    wreg      void 
 10696 ;; Registers used:
 10697 ;;		wreg, status,2, status,0
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10707 ;;Total ram usage:        2 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:    2
 10710 ;; This function calls:
 10711 ;;		Nothing
 10712 ;; This function is called by:
 10713 ;;		_SYSTEM_Initialize
 10714 ;;		_mdb_poll
 10715 ;;		_mdb_unlock
 10716 ;;		_cctalk_comm
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           	psect	text72
 10721  0115B8                     __ptext72:
 10722                           	opt stack 0
 10723  0115B8                     _TMR3_Initialize:
 10724                           	opt stack 24
 10725                           
 10726                           ;tmr3.c: 67: T3GCON = 0x00;
 10727                           
 10728                           ; BSR set to: 14
 10729                           ;incstack = 0
 10730  0115B8  0E00               	movlw	0
 10731  0115BA  6ECA               	movwf	4042,c	;volatile
 10732                           
 10733                           ;tmr3.c: 70: T3GATE = 0x00;
 10734  0115BC  0E00               	movlw	0
 10735  0115BE  6ECB               	movwf	4043,c	;volatile
 10736                           
 10737                           ;tmr3.c: 73: T3CLK = 0x05;
 10738  0115C0  0E05               	movlw	5
 10739  0115C2  6ECC               	movwf	4044,c	;volatile
 10740                           
 10741                           ;tmr3.c: 76: TMR3H = 0x9E;
 10742  0115C4  0E9E               	movlw	158
 10743  0115C6  6EC8               	movwf	4040,c	;volatile
 10744                           
 10745                           ;tmr3.c: 79: TMR3L = 0x58;
 10746  0115C8  0E58               	movlw	88
 10747  0115CA  6EC7               	movwf	4039,c	;volatile
 10748                           
 10749                           ;tmr3.c: 82: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 10750  0115CC  50C7               	movf	4039,w,c	;volatile
 10751  0115CE  CFC8 F01D          	movff	4040,??_TMR3_Initialize	;volatile
 10752  0115D2  6A1E               	clrf	(??_TMR3_Initialize+1)& (0+255),c
 10753  0115D4  C01D  F01E         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 10754  0115D8  6A1D               	clrf	??_TMR3_Initialize,c
 10755  0115DA  101D               	iorwf	??_TMR3_Initialize,w,c
 10756  0115DC  0100               	movlb	0	; () banked
 10757  0115DE  6FAC               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 10758  0115E0  501E               	movf	??_TMR3_Initialize+1,w,c
 10759  0115E2  6FAD               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 10760                           
 10761                           ; BSR set to: 0
 10762                           ;tmr3.c: 85: PIR4bits.TMR3IF = 0;
 10763  0115E4  010E               	movlb	14	; () banked
 10764  0115E6  95CE               	bcf	206,2,b	;volatile
 10765                           
 10766                           ; BSR set to: 14
 10767                           ;tmr3.c: 88: T3CON = 0x01;
 10768  0115E8  0E01               	movlw	1
 10769  0115EA  6EC9               	movwf	4041,c	;volatile
 10770                           
 10771                           ; BSR set to: 14
 10772  0115EC  0012               	return		;funcret
 10773  0115EE                     __end_of_TMR3_Initialize:
 10774                           	opt stack 0
 10775                           tblptru	equ	0xFF8
 10776                           tblptrh	equ	0xFF7
 10777                           tblptrl	equ	0xFF6
 10778                           tablat	equ	0xFF5
 10779                           prodh	equ	0xFF4
 10780                           prodl	equ	0xFF3
 10781                           intcon	equ	0xFF2
 10782                           postinc0	equ	0xFEE
 10783                           wreg	equ	0xFE8
 10784                           indf2	equ	0xFDF
 10785                           fsr2h	equ	0xFDA
 10786                           fsr2l	equ	0xFD9
 10787                           status	equ	0xFD8
 10788                           
 10789 ;; *************** function _TMR1_Initialize *****************
 10790 ;; Defined at:
 10791 ;;		line 62 in file "mcc_generated_files/tmr1.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;		None
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;		None
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  1    wreg      void 
 10798 ;; Registers used:
 10799 ;;		wreg, status,2, status,0
 10800 ;; Tracked objects:
 10801 ;;		On entry : 0/0
 10802 ;;		On exit  : 0/0
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10809 ;;Total ram usage:        2 bytes
 10810 ;; Hardware stack levels used:    1
 10811 ;; Hardware stack levels required when called:    2
 10812 ;; This function calls:
 10813 ;;		Nothing
 10814 ;; This function is called by:
 10815 ;;		_SYSTEM_Initialize
 10816 ;;		_mdb_comm
 10817 ;;		_mdb_unlock
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           	psect	text73
 10822  0115EE                     __ptext73:
 10823                           	opt stack 0
 10824  0115EE                     _TMR1_Initialize:
 10825                           	opt stack 24
 10826                           
 10827                           ;tmr1.c: 67: T1GCON = 0x00;
 10828                           
 10829                           ; BSR set to: 14
 10830                           ;incstack = 0
 10831  0115EE  0E00               	movlw	0
 10832  0115F0  6ED0               	movwf	4048,c	;volatile
 10833                           
 10834                           ;tmr1.c: 70: T1GATE = 0x00;
 10835  0115F2  0E00               	movlw	0
 10836  0115F4  6ED1               	movwf	4049,c	;volatile
 10837                           
 10838                           ;tmr1.c: 73: T1CLK = 0x05;
 10839  0115F6  0E05               	movlw	5
 10840  0115F8  6ED2               	movwf	4050,c	;volatile
 10841                           
 10842                           ;tmr1.c: 76: TMR1H = 0xF6;
 10843  0115FA  0EF6               	movlw	246
 10844  0115FC  6ECE               	movwf	4046,c	;volatile
 10845                           
 10846                           ;tmr1.c: 79: TMR1L = 0x3C;
 10847  0115FE  0E3C               	movlw	60
 10848  011600  6ECD               	movwf	4045,c	;volatile
 10849                           
 10850                           ;tmr1.c: 82: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10851  011602  50CD               	movf	4045,w,c	;volatile
 10852  011604  CFCE F01D          	movff	4046,??_TMR1_Initialize	;volatile
 10853  011608  6A1E               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 10854  01160A  C01D  F01E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 10855  01160E  6A1D               	clrf	??_TMR1_Initialize,c
 10856  011610  101D               	iorwf	??_TMR1_Initialize,w,c
 10857  011612  0100               	movlb	0	; () banked
 10858  011614  6FAE               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 10859  011616  501E               	movf	??_TMR1_Initialize+1,w,c
 10860  011618  6FAF               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 10861                           
 10862                           ; BSR set to: 0
 10863                           ;tmr1.c: 85: PIR4bits.TMR1IF = 0;
 10864  01161A  010E               	movlb	14	; () banked
 10865  01161C  91CE               	bcf	206,0,b	;volatile
 10866                           
 10867                           ; BSR set to: 14
 10868                           ;tmr1.c: 88: T1CON = 0x01;
 10869  01161E  0E01               	movlw	1
 10870  011620  6ECF               	movwf	4047,c	;volatile
 10871                           
 10872                           ; BSR set to: 14
 10873  011622  0012               	return		;funcret
 10874  011624                     __end_of_TMR1_Initialize:
 10875                           	opt stack 0
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon	equ	0xFF2
 10883                           postinc0	equ	0xFEE
 10884                           wreg	equ	0xFE8
 10885                           indf2	equ	0xFDF
 10886                           fsr2h	equ	0xFDA
 10887                           fsr2l	equ	0xFD9
 10888                           status	equ	0xFD8
 10889                           
 10890 ;; *************** function _TMR0_Initialize *****************
 10891 ;; Defined at:
 10892 ;;		line 64 in file "mcc_generated_files/tmr0.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;		None
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;		None
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  1    wreg      void 
 10899 ;; Registers used:
 10900 ;;		wreg, status,2, status,0
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10909 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10910 ;;Total ram usage:        2 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:    2
 10913 ;; This function calls:
 10914 ;;		Nothing
 10915 ;; This function is called by:
 10916 ;;		_SYSTEM_Initialize
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           	psect	text74
 10921  0117E6                     __ptext74:
 10922                           	opt stack 0
 10923  0117E6                     _TMR0_Initialize:
 10924                           	opt stack 27
 10925                           
 10926                           ;tmr0.c: 69: T0CON1 = 0x82;
 10927                           
 10928                           ; BSR set to: 14
 10929                           ;incstack = 0
 10930  0117E6  0E82               	movlw	130
 10931  0117E8  6ED6               	movwf	4054,c	;volatile
 10932                           
 10933                           ;tmr0.c: 72: TMR0H = 0xA5;
 10934  0117EA  0EA5               	movlw	165
 10935  0117EC  6ED4               	movwf	4052,c	;volatile
 10936                           
 10937                           ;tmr0.c: 75: TMR0L = 0x2E;
 10938  0117EE  0E2E               	movlw	46
 10939  0117F0  6ED3               	movwf	4051,c	;volatile
 10940                           
 10941                           ;tmr0.c: 78: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 10942  0117F2  50D3               	movf	4051,w,c	;volatile
 10943  0117F4  CFD4 F01D          	movff	4052,??_TMR0_Initialize	;volatile
 10944  0117F8  6A1E               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 10945  0117FA  C01D  F01E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 10946  0117FE  6A1D               	clrf	??_TMR0_Initialize,c
 10947  011800  101D               	iorwf	??_TMR0_Initialize,w,c
 10948  011802  0100               	movlb	0	; () banked
 10949  011804  6FA8               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 10950  011806  501E               	movf	??_TMR0_Initialize+1,w,c
 10951  011808  6FA9               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;tmr0.c: 81: PIR0bits.TMR0IF = 0;
 10955  01180A  010E               	movlb	14	; () banked
 10956  01180C  9BCA               	bcf	202,5,b	;volatile
 10957                           
 10958                           ; BSR set to: 14
 10959                           ;tmr0.c: 84: T0CON0 = 0x90;
 10960  01180E  0E90               	movlw	144
 10961  011810  6ED5               	movwf	4053,c	;volatile
 10962                           
 10963                           ; BSR set to: 14
 10964  011812  0012               	return		;funcret
 10965  011814                     __end_of_TMR0_Initialize:
 10966                           	opt stack 0
 10967                           tblptru	equ	0xFF8
 10968                           tblptrh	equ	0xFF7
 10969                           tblptrl	equ	0xFF6
 10970                           tablat	equ	0xFF5
 10971                           prodh	equ	0xFF4
 10972                           prodl	equ	0xFF3
 10973                           intcon	equ	0xFF2
 10974                           postinc0	equ	0xFEE
 10975                           wreg	equ	0xFE8
 10976                           indf2	equ	0xFDF
 10977                           fsr2h	equ	0xFDA
 10978                           fsr2l	equ	0xFD9
 10979                           status	equ	0xFD8
 10980                           
 10981 ;; *************** function _PMD_Initialize *****************
 10982 ;; Defined at:
 10983 ;;		line 146 in file "mcc_generated_files/mcc.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;		None
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;		None
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  1    wreg      void 
 10990 ;; Registers used:
 10991 ;;		wreg, status,2
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11001 ;;Total ram usage:        0 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:    2
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		_SYSTEM_Initialize
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text75
 11012  011904                     __ptext75:
 11013                           	opt stack 0
 11014  011904                     _PMD_Initialize:
 11015                           	opt stack 27
 11016                           
 11017                           ;mcc.c: 149: PMD0 = 0x00;
 11018                           
 11019                           ; BSR set to: 14
 11020                           ;incstack = 0
 11021  011904  0E00               	movlw	0
 11022  011906  010E               	movlb	14	; () banked
 11023  011908  6FE1               	movwf	225,b	;volatile
 11024                           
 11025                           ;mcc.c: 151: PMD1 = 0x00;
 11026  01190A  0E00               	movlw	0
 11027  01190C  6FE2               	movwf	226,b	;volatile
 11028                           
 11029                           ;mcc.c: 153: PMD2 = 0x00;
 11030  01190E  0E00               	movlw	0
 11031  011910  6FE3               	movwf	227,b	;volatile
 11032                           
 11033                           ;mcc.c: 155: PMD3 = 0x00;
 11034  011912  0E00               	movlw	0
 11035  011914  6FE4               	movwf	228,b	;volatile
 11036                           
 11037                           ;mcc.c: 157: PMD4 = 0x00;
 11038  011916  0E00               	movlw	0
 11039  011918  6FE5               	movwf	229,b	;volatile
 11040                           
 11041                           ;mcc.c: 159: PMD5 = 0x00;
 11042  01191A  0E00               	movlw	0
 11043  01191C  6FE6               	movwf	230,b	;volatile
 11044                           
 11045                           ; BSR set to: 14
 11046  01191E  0012               	return		;funcret
 11047  011920                     __end_of_PMD_Initialize:
 11048                           	opt stack 0
 11049                           tblptru	equ	0xFF8
 11050                           tblptrh	equ	0xFF7
 11051                           tblptrl	equ	0xFF6
 11052                           tablat	equ	0xFF5
 11053                           prodh	equ	0xFF4
 11054                           prodl	equ	0xFF3
 11055                           intcon	equ	0xFF2
 11056                           postinc0	equ	0xFEE
 11057                           wreg	equ	0xFE8
 11058                           indf2	equ	0xFDF
 11059                           fsr2h	equ	0xFDA
 11060                           fsr2l	equ	0xFD9
 11061                           status	equ	0xFD8
 11062                           
 11063 ;; *************** function _PIN_MANAGER_Initialize *****************
 11064 ;; Defined at:
 11065 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;		None
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  state           1   18[COMRAM] unsigned char 
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  1    wreg      void 
 11072 ;; Registers used:
 11073 ;;		wreg, status,2
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;Total ram usage:        1 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; Hardware stack levels required when called:    2
 11086 ;; This function calls:
 11087 ;;		Nothing
 11088 ;; This function is called by:
 11089 ;;		_SYSTEM_Initialize
 11090 ;; This function uses a non-reentrant model
 11091 ;;
 11092                           
 11093                           	psect	text76
 11094  010B98                     __ptext76:
 11095                           	opt stack 0
 11096  010B98                     _PIN_MANAGER_Initialize:
 11097                           	opt stack 27
 11098                           
 11099                           ;pin_manager.c: 57: LATE = 0x00;
 11100                           
 11101                           ; BSR set to: 14
 11102                           ;incstack = 0
 11103  010B98  0E00               	movlw	0
 11104  010B9A  6E87               	movwf	3975,c	;volatile
 11105                           
 11106                           ;pin_manager.c: 58: LATD = 0x00;
 11107  010B9C  0E00               	movlw	0
 11108  010B9E  6E86               	movwf	3974,c	;volatile
 11109                           
 11110                           ;pin_manager.c: 59: LATA = 0xC0;
 11111  010BA0  0EC0               	movlw	192
 11112  010BA2  6E83               	movwf	3971,c	;volatile
 11113                           
 11114                           ;pin_manager.c: 60: LATB = 0x00;
 11115  010BA4  0E00               	movlw	0
 11116  010BA6  6E84               	movwf	3972,c	;volatile
 11117                           
 11118                           ;pin_manager.c: 61: LATC = 0x40;
 11119  010BA8  0E40               	movlw	64
 11120  010BAA  6E85               	movwf	3973,c	;volatile
 11121                           
 11122                           ;pin_manager.c: 66: TRISE = 0x00;
 11123  010BAC  0E00               	movlw	0
 11124  010BAE  6E8C               	movwf	3980,c	;volatile
 11125                           
 11126                           ;pin_manager.c: 67: TRISA = 0x1F;
 11127  010BB0  0E1F               	movlw	31
 11128  010BB2  6E88               	movwf	3976,c	;volatile
 11129                           
 11130                           ;pin_manager.c: 68: TRISB = 0xD0;
 11131  010BB4  0ED0               	movlw	208
 11132  010BB6  6E89               	movwf	3977,c	;volatile
 11133                           
 11134                           ;pin_manager.c: 69: TRISC = 0x80;
 11135  010BB8  0E80               	movlw	128
 11136  010BBA  6E8A               	movwf	3978,c	;volatile
 11137                           
 11138                           ;pin_manager.c: 70: TRISD = 0x00;
 11139  010BBC  0E00               	movlw	0
 11140  010BBE  6E8B               	movwf	3979,c	;volatile
 11141                           
 11142                           ;pin_manager.c: 75: ANSELC = 0x00;
 11143  010BC0  0E00               	movlw	0
 11144  010BC2  010F               	movlb	15	; () banked
 11145  010BC4  6F21               	movwf	33,b	;volatile
 11146                           
 11147                           ;pin_manager.c: 76: ANSELB = 0xC0;
 11148  010BC6  0EC0               	movlw	192
 11149  010BC8  6F19               	movwf	25,b	;volatile
 11150                           
 11151                           ;pin_manager.c: 77: ANSELD = 0x00;
 11152  010BCA  0E00               	movlw	0
 11153  010BCC  6F26               	movwf	38,b	;volatile
 11154                           
 11155                           ;pin_manager.c: 78: ANSELE = 0x00;
 11156  010BCE  0E00               	movlw	0
 11157  010BD0  6F2E               	movwf	46,b	;volatile
 11158                           
 11159                           ;pin_manager.c: 79: ANSELA = 0x01;
 11160  010BD2  0E01               	movlw	1
 11161  010BD4  6F11               	movwf	17,b	;volatile
 11162                           
 11163                           ;pin_manager.c: 84: WPUD = 0x00;
 11164  010BD6  0E00               	movlw	0
 11165  010BD8  6F25               	movwf	37,b	;volatile
 11166                           
 11167                           ;pin_manager.c: 85: WPUE = 0x00;
 11168  010BDA  0E00               	movlw	0
 11169  010BDC  6F2D               	movwf	45,b	;volatile
 11170                           
 11171                           ;pin_manager.c: 86: WPUB = 0x00;
 11172  010BDE  0E00               	movlw	0
 11173  010BE0  6F18               	movwf	24,b	;volatile
 11174                           
 11175                           ;pin_manager.c: 87: WPUA = 0x00;
 11176  010BE2  0E00               	movlw	0
 11177  010BE4  6F10               	movwf	16,b	;volatile
 11178                           
 11179                           ;pin_manager.c: 88: WPUC = 0x00;
 11180  010BE6  0E00               	movlw	0
 11181  010BE8  6F20               	movwf	32,b	;volatile
 11182                           
 11183                           ;pin_manager.c: 93: ODCONE = 0x00;
 11184  010BEA  0E00               	movlw	0
 11185  010BEC  6F2C               	movwf	44,b	;volatile
 11186                           
 11187                           ;pin_manager.c: 94: ODCONA = 0x00;
 11188  010BEE  0E00               	movlw	0
 11189  010BF0  6F0F               	movwf	15,b	;volatile
 11190                           
 11191                           ;pin_manager.c: 95: ODCONB = 0x00;
 11192  010BF2  0E00               	movlw	0
 11193  010BF4  6F17               	movwf	23,b	;volatile
 11194                           
 11195                           ;pin_manager.c: 96: ODCONC = 0x00;
 11196  010BF6  0E00               	movlw	0
 11197  010BF8  6F1F               	movwf	31,b	;volatile
 11198                           
 11199                           ;pin_manager.c: 97: ODCOND = 0x00;
 11200  010BFA  0E00               	movlw	0
 11201  010BFC  6F24               	movwf	36,b	;volatile
 11202                           
 11203                           ; BSR set to: 15
 11204                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
 11205  010BFE  010E               	movlb	14	; () banked
 11206  010C00  89C2               	bsf	194,4,b	;volatile
 11207                           
 11208                           ;pin_manager.c: 106: bool state = (unsigned char)GIE;
 11209  010C02  0E00               	movlw	0
 11210  010C04  BEF2               	btfsc	intcon,7,c	;volatile
 11211  010C06  0E01               	movlw	1
 11212  010C08  6E1D               	movwf	PIN_MANAGER_Initialize@state,c
 11213                           
 11214                           ; BSR set to: 14
 11215                           ;pin_manager.c: 107: GIE = 0;
 11216  010C0A  9EF2               	bcf	intcon,7,c	;volatile
 11217                           
 11218                           ;pin_manager.c: 108: PPSLOCK = 0x55;
 11219  010C0C  0E55               	movlw	85
 11220  010C0E  6FA0               	movwf	160,b	;volsfr
 11221                           
 11222                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
 11223  010C10  0EAA               	movlw	170
 11224  010C12  6FA0               	movwf	160,b	;volsfr
 11225                           
 11226                           ; BSR set to: 14
 11227                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x00;
 11228  010C14  91A0               	bcf	160,0,b	;volsfr
 11229                           
 11230                           ; BSR set to: 14
 11231                           ;pin_manager.c: 112: RX1PPSbits.RXPPS = 0x17;
 11232  010C16  81B5               	bsf	181,0,b	;volatile
 11233  010C18  83B5               	bsf	181,1,b	;volatile
 11234  010C1A  85B5               	bsf	181,2,b	;volatile
 11235  010C1C  97B5               	bcf	181,3,b	;volatile
 11236  010C1E  89B5               	bsf	181,4,b	;volatile
 11237                           
 11238                           ;pin_manager.c: 113: RC6PPS = 0x09;
 11239  010C20  0E09               	movlw	9
 11240  010C22  6FFD               	movwf	253,b	;volatile
 11241                           
 11242                           ;pin_manager.c: 114: RB5PPS = 0x0B;
 11243  010C24  0E0B               	movlw	11
 11244  010C26  6FF4               	movwf	244,b	;volatile
 11245                           
 11246                           ; BSR set to: 14
 11247                           ;pin_manager.c: 115: RX2PPSbits.RXPPS = 0x0C;
 11248  010C28  918D               	bcf	141,0,b	;volatile
 11249  010C2A  938D               	bcf	141,1,b	;volatile
 11250  010C2C  858D               	bsf	141,2,b	;volatile
 11251  010C2E  878D               	bsf	141,3,b	;volatile
 11252  010C30  998D               	bcf	141,4,b	;volatile
 11253                           
 11254                           ;pin_manager.c: 117: PPSLOCK = 0x55;
 11255  010C32  0E55               	movlw	85
 11256  010C34  6FA0               	movwf	160,b	;volsfr
 11257                           
 11258                           ;pin_manager.c: 118: PPSLOCK = 0xAA;
 11259  010C36  0EAA               	movlw	170
 11260  010C38  6FA0               	movwf	160,b	;volsfr
 11261                           
 11262                           ; BSR set to: 14
 11263                           ;pin_manager.c: 119: PPSLOCKbits.PPSLOCKED = 0x01;
 11264  010C3A  81A0               	bsf	160,0,b	;volsfr
 11265                           
 11266                           ; BSR set to: 14
 11267                           ;pin_manager.c: 121: GIE = state;
 11268  010C3C  A01D               	btfss	PIN_MANAGER_Initialize@state,0,c
 11269  010C3E  D002               	goto	u1550
 11270  010C40  8EF2               	bsf	intcon,7,c	;volatile
 11271  010C42  0012               	return	
 11272  010C44                     u1550:
 11273  010C44  9EF2               	bcf	intcon,7,c	;volatile
 11274  010C46  0012               	return		;funcret
 11275  010C48                     __end_of_PIN_MANAGER_Initialize:
 11276                           	opt stack 0
 11277                           tblptru	equ	0xFF8
 11278                           tblptrh	equ	0xFF7
 11279                           tblptrl	equ	0xFF6
 11280                           tablat	equ	0xFF5
 11281                           prodh	equ	0xFF4
 11282                           prodl	equ	0xFF3
 11283                           intcon	equ	0xFF2
 11284                           postinc0	equ	0xFEE
 11285                           wreg	equ	0xFE8
 11286                           indf2	equ	0xFDF
 11287                           fsr2h	equ	0xFDA
 11288                           fsr2l	equ	0xFD9
 11289                           status	equ	0xFD8
 11290                           
 11291 ;; *************** function _OSCILLATOR_Initialize *****************
 11292 ;; Defined at:
 11293 ;;		line 132 in file "mcc_generated_files/mcc.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;		None
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1    wreg      void 
 11300 ;; Registers used:
 11301 ;;		wreg, status,2
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11311 ;;Total ram usage:        0 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:    2
 11314 ;; This function calls:
 11315 ;;		Nothing
 11316 ;; This function is called by:
 11317 ;;		_SYSTEM_Initialize
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text77
 11322  011950                     __ptext77:
 11323                           	opt stack 0
 11324  011950                     _OSCILLATOR_Initialize:
 11325                           	opt stack 27
 11326                           
 11327                           ;mcc.c: 135: OSCCON1 = 0x60;
 11328                           
 11329                           ;incstack = 0
 11330  011950  0E60               	movlw	96
 11331  011952  010E               	movlb	14	; () banked
 11332  011954  6FD8               	movwf	216,b	;volatile
 11333                           
 11334                           ;mcc.c: 137: OSCCON3 = 0x00;
 11335  011956  0E00               	movlw	0
 11336  011958  6FDA               	movwf	218,b	;volatile
 11337                           
 11338                           ;mcc.c: 139: OSCEN = 0x00;
 11339  01195A  0E00               	movlw	0
 11340  01195C  6FDC               	movwf	220,b	;volatile
 11341                           
 11342                           ;mcc.c: 141: OSCFRQ = 0x04;
 11343  01195E  0E04               	movlw	4
 11344  011960  6FDE               	movwf	222,b	;volatile
 11345                           
 11346                           ;mcc.c: 143: OSCTUNE = 0x00;
 11347  011962  0E00               	movlw	0
 11348  011964  6FDD               	movwf	221,b	;volatile
 11349                           
 11350                           ; BSR set to: 14
 11351  011966  0012               	return		;funcret
 11352  011968                     __end_of_OSCILLATOR_Initialize:
 11353                           	opt stack 0
 11354                           tblptru	equ	0xFF8
 11355                           tblptrh	equ	0xFF7
 11356                           tblptrl	equ	0xFF6
 11357                           tablat	equ	0xFF5
 11358                           prodh	equ	0xFF4
 11359                           prodl	equ	0xFF3
 11360                           intcon	equ	0xFF2
 11361                           postinc0	equ	0xFEE
 11362                           wreg	equ	0xFE8
 11363                           indf2	equ	0xFDF
 11364                           fsr2h	equ	0xFDA
 11365                           fsr2l	equ	0xFD9
 11366                           status	equ	0xFD8
 11367                           
 11368 ;; *************** function _INTERRUPT_Initialize *****************
 11369 ;; Defined at:
 11370 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;		None
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		None
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;Total ram usage:        0 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; Hardware stack levels required when called:    2
 11391 ;; This function calls:
 11392 ;;		Nothing
 11393 ;; This function is called by:
 11394 ;;		_SYSTEM_Initialize
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text78
 11399  011A56                     __ptext78:
 11400                           	opt stack 0
 11401  011A56                     _INTERRUPT_Initialize:
 11402                           	opt stack 27
 11403                           
 11404                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
 11405                           
 11406                           ; BSR set to: 14
 11407                           ;incstack = 0
 11408  011A56  8AF2               	bsf	intcon,5,c	;volatile
 11409                           
 11410                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
 11411  011A58  010E               	movlb	14	; () banked
 11412  011A5A  89BA               	bsf	186,4,b	;volatile
 11413                           
 11414                           ; BSR set to: 14
 11415  011A5C  0012               	return		;funcret
 11416  011A5E                     __end_of_INTERRUPT_Initialize:
 11417                           	opt stack 0
 11418                           tblptru	equ	0xFF8
 11419                           tblptrh	equ	0xFF7
 11420                           tblptrl	equ	0xFF6
 11421                           tablat	equ	0xFF5
 11422                           prodh	equ	0xFF4
 11423                           prodl	equ	0xFF3
 11424                           intcon	equ	0xFF2
 11425                           postinc0	equ	0xFEE
 11426                           wreg	equ	0xFE8
 11427                           indf2	equ	0xFDF
 11428                           fsr2h	equ	0xFDA
 11429                           fsr2l	equ	0xFD9
 11430                           status	equ	0xFD8
 11431                           
 11432 ;; *************** function _EUSART2_Initialize *****************
 11433 ;; Defined at:
 11434 ;;		line 53 in file "mcc_generated_files/eusart2.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;		None
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;		None
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  1    wreg      void 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11452 ;;Total ram usage:        0 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; Hardware stack levels required when called:    2
 11455 ;; This function calls:
 11456 ;;		Nothing
 11457 ;; This function is called by:
 11458 ;;		_SYSTEM_Initialize
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           	psect	text79
 11463  011968                     __ptext79:
 11464                           	opt stack 0
 11465  011968                     _EUSART2_Initialize:
 11466                           	opt stack 27
 11467                           
 11468                           ;eusart2.c: 58: BAUD2CON = 0x08;
 11469                           
 11470                           ; BSR set to: 14
 11471                           ;incstack = 0
 11472  011968  0E08               	movlw	8
 11473  01196A  010E               	movlb	14	; () banked
 11474  01196C  6F9F               	movwf	159,b	;volatile
 11475                           
 11476                           ;eusart2.c: 61: RC2STA = 0x10;
 11477  01196E  0E10               	movlw	16
 11478  011970  6F9D               	movwf	157,b	;volatile
 11479                           
 11480                           ;eusart2.c: 64: TX2STA = 0x04;
 11481  011972  0E04               	movlw	4
 11482  011974  6F9E               	movwf	158,b	;volatile
 11483                           
 11484                           ;eusart2.c: 67: SP2BRGL = 0x38;
 11485  011976  0E38               	movlw	56
 11486  011978  6F9B               	movwf	155,b	;volatile
 11487                           
 11488                           ;eusart2.c: 70: SP2BRGH = 0x01;
 11489  01197A  0E01               	movlw	1
 11490  01197C  6F9C               	movwf	156,b	;volatile
 11491                           
 11492                           ; BSR set to: 14
 11493  01197E  0012               	return		;funcret
 11494  011980                     __end_of_EUSART2_Initialize:
 11495                           	opt stack 0
 11496                           tblptru	equ	0xFF8
 11497                           tblptrh	equ	0xFF7
 11498                           tblptrl	equ	0xFF6
 11499                           tablat	equ	0xFF5
 11500                           prodh	equ	0xFF4
 11501                           prodl	equ	0xFF3
 11502                           intcon	equ	0xFF2
 11503                           postinc0	equ	0xFEE
 11504                           wreg	equ	0xFE8
 11505                           indf2	equ	0xFDF
 11506                           fsr2h	equ	0xFDA
 11507                           fsr2l	equ	0xFD9
 11508                           status	equ	0xFD8
 11509                           
 11510 ;; *************** function _EUSART1_Initialize *****************
 11511 ;; Defined at:
 11512 ;;		line 53 in file "mcc_generated_files/eusart1.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;		None
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;		None
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  1    wreg      void 
 11519 ;; Registers used:
 11520 ;;		wreg, status,2
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;Total ram usage:        0 bytes
 11531 ;; Hardware stack levels used:    1
 11532 ;; Hardware stack levels required when called:    2
 11533 ;; This function calls:
 11534 ;;		Nothing
 11535 ;; This function is called by:
 11536 ;;		_SYSTEM_Initialize
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text80
 11541  0119AC                     __ptext80:
 11542                           	opt stack 0
 11543  0119AC                     _EUSART1_Initialize:
 11544                           	opt stack 27
 11545                           
 11546                           ;eusart1.c: 58: BAUD1CON = 0x08;
 11547                           
 11548                           ; BSR set to: 14
 11549                           ;incstack = 0
 11550  0119AC  0E08               	movlw	8
 11551  0119AE  6E9F               	movwf	3999,c	;volatile
 11552                           
 11553                           ;eusart1.c: 61: RC1STA = 0x90;
 11554  0119B0  0E90               	movlw	144
 11555  0119B2  6E9D               	movwf	3997,c	;volatile
 11556                           
 11557                           ;eusart1.c: 64: TX1STA = 0xAC;
 11558  0119B4  0EAC               	movlw	172
 11559  0119B6  6E9E               	movwf	3998,c	;volatile
 11560                           
 11561                           ;eusart1.c: 67: SP1BRGL = 0x38;
 11562  0119B8  0E38               	movlw	56
 11563  0119BA  6E9B               	movwf	3995,c	;volatile
 11564                           
 11565                           ;eusart1.c: 70: SP1BRGH = 0x01;
 11566  0119BC  0E01               	movlw	1
 11567  0119BE  6E9C               	movwf	3996,c	;volatile
 11568  0119C0  0012               	return		;funcret
 11569  0119C2                     __end_of_EUSART1_Initialize:
 11570                           	opt stack 0
 11571                           tblptru	equ	0xFF8
 11572                           tblptrh	equ	0xFF7
 11573                           tblptrl	equ	0xFF6
 11574                           tablat	equ	0xFF5
 11575                           prodh	equ	0xFF4
 11576                           prodl	equ	0xFF3
 11577                           intcon	equ	0xFF2
 11578                           postinc0	equ	0xFEE
 11579                           wreg	equ	0xFE8
 11580                           indf2	equ	0xFDF
 11581                           fsr2h	equ	0xFDA
 11582                           fsr2l	equ	0xFD9
 11583                           status	equ	0xFD8
 11584                           
 11585 ;; *************** function _DAC1_Initialize *****************
 11586 ;; Defined at:
 11587 ;;		line 57 in file "mcc_generated_files/dac1.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;		None
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;		None
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      void 
 11594 ;; Registers used:
 11595 ;;		wreg, status,2
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;Total ram usage:        0 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; Hardware stack levels required when called:    2
 11608 ;; This function calls:
 11609 ;;		Nothing
 11610 ;; This function is called by:
 11611 ;;		_SYSTEM_Initialize
 11612 ;;		_mdb_unlock
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           	psect	text81
 11617  011A32                     __ptext81:
 11618                           	opt stack 0
 11619  011A32                     _DAC1_Initialize:
 11620                           	opt stack 26
 11621                           
 11622                           ;dac1.c: 60: DAC1CON0 = 0x80;
 11623                           
 11624                           ;incstack = 0
 11625  011A32  0E80               	movlw	128
 11626  011A34  010F               	movlb	15	; () banked
 11627  011A36  6F33               	movwf	51,b	;volatile
 11628                           
 11629                           ;dac1.c: 62: DAC1CON1 = 0x1C;
 11630  011A38  0E1C               	movlw	28
 11631  011A3A  6F34               	movwf	52,b	;volatile
 11632                           
 11633                           ; BSR set to: 15
 11634  011A3C  0012               	return		;funcret
 11635  011A3E                     __end_of_DAC1_Initialize:
 11636                           	opt stack 0
 11637                           tblptru	equ	0xFF8
 11638                           tblptrh	equ	0xFF7
 11639                           tblptrl	equ	0xFF6
 11640                           tablat	equ	0xFF5
 11641                           prodh	equ	0xFF4
 11642                           prodl	equ	0xFF3
 11643                           intcon	equ	0xFF2
 11644                           postinc0	equ	0xFEE
 11645                           wreg	equ	0xFE8
 11646                           indf2	equ	0xFDF
 11647                           fsr2h	equ	0xFDA
 11648                           fsr2l	equ	0xFD9
 11649                           status	equ	0xFD8
 11650                           
 11651 ;; *************** function _CMP1_Initialize *****************
 11652 ;; Defined at:
 11653 ;;		line 57 in file "mcc_generated_files/cmp1.c"
 11654 ;; Parameters:    Size  Location     Type
 11655 ;;		None
 11656 ;; Auto vars:     Size  Location     Type
 11657 ;;		None
 11658 ;; Return value:  Size  Location     Type
 11659 ;;                  1    wreg      void 
 11660 ;; Registers used:
 11661 ;;		wreg, status,2
 11662 ;; Tracked objects:
 11663 ;;		On entry : 0/0
 11664 ;;		On exit  : 0/0
 11665 ;;		Unchanged: 0/0
 11666 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11671 ;;Total ram usage:        0 bytes
 11672 ;; Hardware stack levels used:    1
 11673 ;; Hardware stack levels required when called:    2
 11674 ;; This function calls:
 11675 ;;		Nothing
 11676 ;; This function is called by:
 11677 ;;		_SYSTEM_Initialize
 11678 ;;		_mdb_unlock
 11679 ;; This function uses a non-reentrant model
 11680 ;;
 11681                           
 11682                           	psect	text82
 11683  0119C2                     __ptext82:
 11684                           	opt stack 0
 11685  0119C2                     _CMP1_Initialize:
 11686                           	opt stack 26
 11687                           
 11688                           ;cmp1.c: 61: CM1CON0 = 0x90;
 11689                           
 11690                           ; BSR set to: 15
 11691                           ;incstack = 0
 11692  0119C2  0E90               	movlw	144
 11693  0119C4  010F               	movlb	15	; () banked
 11694  0119C6  6F39               	movwf	57,b	;volatile
 11695                           
 11696                           ;cmp1.c: 64: CM1CON1 = 0x00;
 11697  0119C8  0E00               	movlw	0
 11698  0119CA  6F3A               	movwf	58,b	;volatile
 11699                           
 11700                           ;cmp1.c: 67: CM1NCH = 0x00;
 11701  0119CC  0E00               	movlw	0
 11702  0119CE  6F3B               	movwf	59,b	;volatile
 11703                           
 11704                           ;cmp1.c: 70: CM1PCH = 0x05;
 11705  0119D0  0E05               	movlw	5
 11706  0119D2  6F3C               	movwf	60,b	;volatile
 11707                           
 11708                           ; BSR set to: 15
 11709  0119D4  0012               	return		;funcret
 11710  0119D6                     __end_of_CMP1_Initialize:
 11711                           	opt stack 0
 11712                           tblptru	equ	0xFF8
 11713                           tblptrh	equ	0xFF7
 11714                           tblptrl	equ	0xFF6
 11715                           tablat	equ	0xFF5
 11716                           prodh	equ	0xFF4
 11717                           prodl	equ	0xFF3
 11718                           intcon	equ	0xFF2
 11719                           postinc0	equ	0xFEE
 11720                           wreg	equ	0xFE8
 11721                           indf2	equ	0xFDF
 11722                           fsr2h	equ	0xFDA
 11723                           fsr2l	equ	0xFD9
 11724                           status	equ	0xFD8
 11725                           
 11726 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 11727 ;; Defined at:
 11728 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
 11729 ;; Parameters:    Size  Location     Type
 11730 ;;		None
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;		None
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  1    wreg      void 
 11735 ;; Registers used:
 11736 ;;		cstack
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11744 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11745 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11746 ;;Total ram usage:       18 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:    1
 11749 ;; This function calls:
 11750 ;;		_PIN_MANAGER_IOC
 11751 ;; This function is called by:
 11752 ;;		Interrupt level 2
 11753 ;; This function uses a non-reentrant model
 11754 ;;
 11755                           
 11756                           	psect	intcode
 11757  000008                     __pintcode:
 11758                           	opt stack 0
 11759  000008                     _INTERRUPT_InterruptManagerHigh:
 11760                           	opt stack 19
 11761                           
 11762                           ; BSR set to: 15
 11763                           ;incstack = 0
 11764  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11765  00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 11766  00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 11767  000012  CFE9 F00D          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 11768  000016  CFEA F00E          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 11769  00001A  CFE1 F00F          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 11770  00001E  CFE2 F010          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 11771  000022  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 11772  000026  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 11773  00002A  CFF3 F013          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 11774  00002E  CFF4 F014          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 11775  000032  CFF6 F015          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 11776  000036  CFF7 F016          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 11777  00003A  CFF8 F017          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 11778  00003E  CFF5 F018          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 11779  000042  C04F  F019         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 11780  000046  C050  F01A         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 11781  00004A  C051  F01B         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 11782  00004E  C052  F01C         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 11783                           
 11784                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 11785  000052  010E               	movlb	14	; () banked
 11786  000054  B9C2               	btfsc	194,4,b	;volatile
 11787                           
 11788                           ; BSR set to: 14
 11789  000056  A9CA               	btfss	202,4,b	;volatile
 11790  000058  D002               	goto	i2l197
 11791                           
 11792                           ; BSR set to: 14
 11793                           ;interrupt_manager.c: 68: {
 11794                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
 11795  00005A  EC3B  F08D         	call	_PIN_MANAGER_IOC	;wreg free
 11796  00005E                     i2l197:
 11797                           
 11798                           ;interrupt_manager.c: 71: else
 11799                           ;interrupt_manager.c: 72: {
 11800  00005E  C01C  F052         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 11801  000062  C01B  F051         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 11802  000066  C01A  F050         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 11803  00006A  C019  F04F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 11804  00006E  C018  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 11805  000072  C017  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 11806  000076  C016  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 11807  00007A  C015  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 11808  00007E  C014  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 11809  000082  C013  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 11810  000086  C012  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 11811  00008A  C011  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 11812  00008E  C010  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 11813  000092  C00F  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 11814  000096  C00E  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 11815  00009A  C00D  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 11816  00009E  C00C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 11817  0000A2  C00B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 11818  0000A6  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11819  0000A8  0011               	retfie		f
 11820  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
 11821                           	opt stack 0
 11822                           pclatu	equ	0xFFB
 11823                           pclath	equ	0xFFA
 11824                           tblptru	equ	0xFF8
 11825                           tblptrh	equ	0xFF7
 11826                           tblptrl	equ	0xFF6
 11827                           tablat	equ	0xFF5
 11828                           prodh	equ	0xFF4
 11829                           prodl	equ	0xFF3
 11830                           intcon	equ	0xFF2
 11831                           postinc0	equ	0xFEE
 11832                           fsr0h	equ	0xFEA
 11833                           fsr0l	equ	0xFE9
 11834                           wreg	equ	0xFE8
 11835                           fsr1h	equ	0xFE2
 11836                           fsr1l	equ	0xFE1
 11837                           indf2	equ	0xFDF
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842 ;; *************** function _PIN_MANAGER_IOC *****************
 11843 ;; Defined at:
 11844 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;		None
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;		None
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		None
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11862 ;;Total ram usage:        0 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; This function calls:
 11865 ;;		Nothing
 11866 ;; This function is called by:
 11867 ;;		_INTERRUPT_InterruptManagerHigh
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           	psect	text84
 11872  011A76                     __ptext84:
 11873                           	opt stack 0
 11874  011A76                     _PIN_MANAGER_IOC:
 11875                           	opt stack 19
 11876                           
 11877                           ;pin_manager.c: 128: PIR0bits.IOCIF = 0;
 11878                           
 11879                           ;incstack = 0
 11880  011A76  010E               	movlb	14	; () banked
 11881  011A78  99CA               	bcf	202,4,b	;volatile
 11882                           
 11883                           ; BSR set to: 14
 11884  011A7A  0012               	return		;funcret
 11885  011A7C                     __end_of_PIN_MANAGER_IOC:
 11886                           	opt stack 0
 11887                           pclatu	equ	0xFFB
 11888                           pclath	equ	0xFFA
 11889                           tblptru	equ	0xFF8
 11890                           tblptrh	equ	0xFF7
 11891                           tblptrl	equ	0xFF6
 11892                           tablat	equ	0xFF5
 11893                           prodh	equ	0xFF4
 11894                           prodl	equ	0xFF3
 11895                           intcon	equ	0xFF2
 11896                           postinc0	equ	0xFEE
 11897                           fsr0h	equ	0xFEA
 11898                           fsr0l	equ	0xFE9
 11899                           wreg	equ	0xFE8
 11900                           fsr1h	equ	0xFE2
 11901                           fsr1l	equ	0xFE1
 11902                           indf2	equ	0xFDF
 11903                           fsr2h	equ	0xFDA
 11904                           fsr2l	equ	0xFD9
 11905                           status	equ	0xFD8
 11906                           pclatu	equ	0xFFB
 11907                           pclath	equ	0xFFA
 11908                           tblptru	equ	0xFF8
 11909                           tblptrh	equ	0xFF7
 11910                           tblptrl	equ	0xFF6
 11911                           tablat	equ	0xFF5
 11912                           prodh	equ	0xFF4
 11913                           prodl	equ	0xFF3
 11914                           intcon	equ	0xFF2
 11915                           postinc0	equ	0xFEE
 11916                           fsr0h	equ	0xFEA
 11917                           fsr0l	equ	0xFE9
 11918                           wreg	equ	0xFE8
 11919                           fsr1h	equ	0xFE2
 11920                           fsr1l	equ	0xFE1
 11921                           indf2	equ	0xFDF
 11922                           fsr2h	equ	0xFDA
 11923                           fsr2l	equ	0xFD9
 11924                           status	equ	0xFD8
 11925                           
 11926                           	psect	rparam
 11927  0000                     pclatu	equ	0xFFB
 11928                           pclath	equ	0xFFA
 11929                           tblptru	equ	0xFF8
 11930                           tblptrh	equ	0xFF7
 11931                           tblptrl	equ	0xFF6
 11932                           tablat	equ	0xFF5
 11933                           prodh	equ	0xFF4
 11934                           prodl	equ	0xFF3
 11935                           intcon	equ	0xFF2
 11936                           postinc0	equ	0xFEE
 11937                           fsr0h	equ	0xFEA
 11938                           fsr0l	equ	0xFE9
 11939                           wreg	equ	0xFE8
 11940                           fsr1h	equ	0xFE2
 11941                           fsr1l	equ	0xFE1
 11942                           indf2	equ	0xFDF
 11943                           fsr2h	equ	0xFDA
 11944                           fsr2l	equ	0xFD9
 11945                           status	equ	0xFD8
 11946                           
 11947                           	psect	temp
 11948  00004F                     btemp:
 11949                           	opt stack 0
 11950  00004F                     	ds	1
 11951  0000                     int$flags	set	btemp
 11952  0000                     wtemp6	set	btemp+1
 11953                           pclatu	equ	0xFFB
 11954                           pclath	equ	0xFFA
 11955                           tblptru	equ	0xFF8
 11956                           tblptrh	equ	0xFF7
 11957                           tblptrl	equ	0xFF6
 11958                           tablat	equ	0xFF5
 11959                           prodh	equ	0xFF4
 11960                           prodl	equ	0xFF3
 11961                           intcon	equ	0xFF2
 11962                           postinc0	equ	0xFEE
 11963                           fsr0h	equ	0xFEA
 11964                           fsr0l	equ	0xFE9
 11965                           wreg	equ	0xFE8
 11966                           fsr1h	equ	0xFE2
 11967                           fsr1l	equ	0xFE1
 11968                           indf2	equ	0xFDF
 11969                           fsr2h	equ	0xFDA
 11970                           fsr2l	equ	0xFD9
 11971                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    795
    Data        1
    BSS         90
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          85     34      67
    COMRAMl           1      0       1
    BANK0           160     14      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Read_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Write_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Init_vendmem@chanlink	PTR unsigned char  size(2) Largest target is 1
		 -> chanlink1(BIGRAMl[1]), 

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 69
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), setnotes(CODE[69]), pricesetm2(CODE[57]), pricesetmsg(CODE[18]), 
		 -> creditclr(CODE[16]), dacmsg(CODE[13]), sensmsg(CODE[11]), hoppcoin(CODE[51]), 
		 -> initnote(CODE[37]), inithop(CODE[20]), noteerr(CODE[28]), credits(CODE[13]), 
		 -> disabled(CODE[10]), enabled(CODE[10]), clrmsg(CODE[6]), onmsg(CODE[4]), 
		 -> offmsg(CODE[4]), servmsg(CODE[67]), inscoin(CODE[49]), 

    displ_note@notestring	PTR unsigned char  size(2) Largest target is 9
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), 


Critical Paths under _main in COMRAMh

    _vend_init->_lcd_string
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_reset->_mdb_comm
    _mdb_noten->_mdb_comm
    _cctalk_init->_cctalk_adpoll
    _cctalk_init->_cctalk_pinenter
    _cctalk_init->_cctalk_poll
    _cctalk_poll->_cctalk_comm
    _cctalk_pinenter->_cctalk_comm
    _cctalk_adpoll->_cctalk_comm
    _cctalk_comm->_TMR3_Initialize
    _cctalk_comm->_init_mdbdata
    _cctalk_comm->_mdb_transmit
    _Init_vendmem->_DATAEE_ReadByte
    _mdb_poll->_mdb_comm
    _mdb_comm->_TMR1_Initialize
    _mdb_comm->_init_mdbdata
    _mdb_comm->_mdb_transmit
    _mdb_transmit->_EUSART1_Write
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _enter_service->_Hopper_coin
    _enter_service->_Sensor_set
    _set_notes->_enable_notes
    _enable_notes->_displ_nendis
    _save_notes->_DATAEE_WriteByte
    _displ_nendis->_lcd_string
    _displ_note->_lcd_string
    _price_set->_set_price
    _set_price->_displ_price
    _displ_price->_displ_hex
    _mdb_unlock->_TMR1_Initialize
    _mdb_unlock->_TMR3_Initialize
    _mdb_unlock->_TMR5_Initialize
    _Sensor_set->_displ_sens
    _displ_sens->_displ_hex
    _Hopper_coin->_Update_Hopcoin
    _butindb->_butin
    _Update_Hopcoin->_displ_hex
    _Clear_cred->_lcd_string
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_Update_cashaudit
    _Update_cashaudit->_Write_NVstore
    _Write_NVstore->_DATAEE_WriteByte
    _Read_NVstore->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMh

    None.

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMl

    None.

Critical Paths under _main in BANK0

    _price_set->_set_price
    _displ_price->_displ_hex
    _displ_sens->_displ_hex
    _Hopper_coin->_displ_hex
    _Update_Hopcoin->_displ_hex
    _displ_credit->_displ_hex

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  148453
               _CMP1_GetOutputStatus
                  _SYSTEM_Initialize
                         _credit_add
                    _credit_subtract
                       _displ_credit
                       _displ_noteer
                      _enter_service
                           _lcd_init
                         _lcd_string
                           _mdb_init
                           _mdb_poll
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   17216
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                       _Init_vendmem
                        _cctalk_init
                       _credit_check
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             3     3      0    4838
                                             26 COMRAMh    3     3      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0     924
                                             23 COMRAMh    3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (2) _cctalk_init                                          1     1      0    3201
                                             26 COMRAMh    1     1      0
                      _cctalk_adpoll
                          _cctalk_on
                    _cctalk_pinenter
                        _cctalk_poll
               _eusartmdb_Initialize
                             _mdb_on
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cctalk_poll                                          1     1      0    1037
                                             25 COMRAMh    1     1      0
                        _cctalk_comm
 ---------------------------------------------------------------------------------
 (3) _cctalk_pinenter                                      1     1      0    1127
                                             25 COMRAMh    1     1      0
                        _cctalk_comm
                       _init_mdbdata
 ---------------------------------------------------------------------------------
 (3) _cctalk_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cctalk_adpoll                                        1     1      0    1037
                                             25 COMRAMh    1     1      0
                        _cctalk_comm
 ---------------------------------------------------------------------------------
 (4) _cctalk_comm                                          5     3      2    1036
                                             20 COMRAMh    5     3      2
                    _TMR3_Initialize
                        _cctalk_read
                       _init_mdbdata
                       _mdb_transmit
 ---------------------------------------------------------------------------------
 (5) _cctalk_read                                          1     1      0      24
                                             18 COMRAMh    1     1      0
                       _EUSART1_Read
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (2) _Init_vendmem                                         5     5      0    1219
                                             20 COMRAMh    5     5      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      22
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             1     1      0     894
                                             23 COMRAMh    1     1      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1     893
                                             20 COMRAMh    3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      44
                                             19 COMRAMh    1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0      90
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     687
                                             26 COMRAMh    2     2      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     523
                                             25 COMRAMh    1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        0     0      0   93546
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                         _Sensor_set
                         _Vend_setup
                            _butindb
                         _lcd_string
                         _mdb_unlock
                          _price_set
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            0     0      0   26144
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         1     1      0   13733
                                             32 COMRAMh    1     1      0
                            _butindb
                       _displ_nendis
                         _lcd_string
                         _save_notes
 ---------------------------------------------------------------------------------
 (4) _save_notes                                           0     0      0    1747
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         2     2      0    5897
                                             30 COMRAMh    2     2      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           2     0      2    6477
                                             30 COMRAMh    2     0      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _price_set                                            0     0      0   17811
                       _Read_Service
                            _butindb
                         _lcd_string
                          _set_price
 ---------------------------------------------------------------------------------
 (3) _set_price                                            4     4      0   11854
                                             32 COMRAMh    2     2      0
                                             12 BANK0      2     2      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                        _displ_price
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _displ_price                                          1     1      0    2920
                                             31 COMRAMh    1     1      0
                          _displ_hex
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Read_Service                                         1     1      0      23
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _mdb_unlock                                           1     1      0       0
                                             20 COMRAMh    1     1      0
                    _CMP1_Initialize
                    _DAC1_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _Vend_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           1     1      0   16425
                                             33 COMRAMh    1     1      0
                            _butindb
                         _displ_sens
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_sens                                           2     1      1   10364
                                             31 COMRAMh    2     1      1
               _CMP1_GetOutputStatus
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          1     1      0   19653
                                             33 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                     _Update_Hopcoin
                            _butindb
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              4     4      0     102
                                             19 COMRAMh    4     4      0
                              _butin
 ---------------------------------------------------------------------------------
 (5) _butin                                                1     1      0       0
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (3) _Update_Hopcoin                                       2     1      1   10267
                                             31 COMRAMh    2     1      1
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           2     2      0    7579
                                             30 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Audit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0    6442
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     610
                                             25 COMRAMh    3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0    8990
                                             31 COMRAMh    1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3    5832
                                             25 COMRAMh    5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (5) _displ_hex                                           15    12      3    2072
                                             28 COMRAMh    3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           1     1      0     424
                                             24 COMRAMh    1     1      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     229
                                             22 COMRAMh    2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     164
                                             20 COMRAMh    2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      68
                                             18 COMRAMh    2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___ltmod                                              7     1      6     412
                                             18 COMRAMh    7     1      6
 ---------------------------------------------------------------------------------
 (6) ___ltdiv                                             10     4      6     421
                                             18 COMRAMh   10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0    1052
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _credit_subtract                                      1     1      0    2830
                                             22 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _credit_add                                           1     1      0    7155
                                             29 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                   _Update_cashaudit
 ---------------------------------------------------------------------------------
 (2) _Update_cashaudit                                     1     1      0    4294
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (3) _Write_NVstore                                        6     1      5    2448
                                             22 COMRAMh    6     1      5
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1747
                                             18 COMRAMh    4     1      3
 ---------------------------------------------------------------------------------
 (3) _Read_NVstore                                         6     1      5    1784
                                             20 COMRAMh    6     1      5
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2    1052
                                             18 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR5_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR3_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerHigh                     18    18      0       0
                                              0 COMRAMh   18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR3_Initialize
     _TMR5_Initialize
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _Update_cashaudit
       _Read_NVstore
         _DATAEE_ReadByte
       _Write_NVstore
         _DATAEE_WriteByte
   _credit_subtract
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _enter_service
     _Audit
     _Clear_cred
       _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Hopper_coin
       _DATAEE_ReadByte
       _Update_Hopcoin
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Sensor_set
       _butindb
         _butin
       _displ_sens
         _CMP1_GetOutputStatus
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Vend_setup
     _butindb
       _butin
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_unlock
       _CMP1_Initialize
       _DAC1_Initialize
       _TMR1_Initialize
       _TMR3_Initialize
       _TMR5_Initialize
     _price_set
       _Read_Service
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _set_price
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _butindb
           _butin
         _displ_price
           _displ_hex
             ___ltdiv
             ___ltmod
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _save_notes
           _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _vend_init
     _DAC1_SetOutput
     _DATAEE_ReadByte
     _Init_vendmem
       _DATAEE_ReadByte
     _cctalk_init
       _cctalk_adpoll
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
       _cctalk_on
       _cctalk_pinenter
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
         _init_mdbdata
       _cctalk_poll
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
       _eusartmdb_Initialize
       _mdb_on
     _credit_check
       _DATAEE_ReadByte
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            E7D      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      33        0.0%
BANK13             100      0       0      34        0.0%
BITBANK12          100      0       0      31        0.0%
BANK12             100      0       0      32        0.0%
BITBANK11          100      0       0      29        0.0%
BANK11             100      0       0      30        0.0%
BITBANK10          100      0       0      27        0.0%
BANK10             100      0       0      28        0.0%
BITBANK9           100      0       0      24        0.0%
BANK9              100      0       0      25        0.0%
BITBANK8           100      0       0      22        0.0%
BANK8              100      0       0      23        0.0%
BITBANK7           100      0       0      20        0.0%
BANK7              100      0       0      21        0.0%
BITBANK6           100      0       0      18        0.0%
BANK6              100      0       0      19        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       9        0.0%
BITBANK0            A0      0       0       6        0.0%
BANK0               A0      E      50       7       50.0%
BITBANK14           88      0       0      35        0.0%
BANK14              88      0       0      36        0.0%
COMRAMh             55     22      43       2       78.8%
BITCOMRAMh          55      0       0       0        0.0%
BIGRAMl              2      0       0      38        0.0%
BITCOMRAMl           1      0       0       1        0.0%
COMRAMl              1      0       1       3      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      26        0.0%
DATA                 0      0      94       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Jan 15 14:20:35 2018

                       lcd_writeC@lcdata 0023                             ?_displ_price 000B  
                            __CFG_CP$OFF 000000                        ??_CMP1_Initialize 001D  
                          ?_displ_credit 0000                            ?_displ_nendis 000B  
                        lcd_write@lcdata 0020                            ?_displ_noteer 0000  
                            __CFG_LVP$ON 000000                                      LATE 000F87  
                        _DAC1_Initialize 1A32                 __size_of_cctalk_pinenter 0034  
                                    l101 19E4                                      l253 1502  
                                    l900 0D42                                      l901 0D48  
                                    l880 09F4                                      l872 0A24  
                                    l873 0A1C                                      l865 0978  
                                    l874 0A00                                      l882 09FA  
                                    l891 0D14                                      l875 09E8  
                                    l892 0D4E                                      l868 09B8  
                                    l893 0D1C                                      l877 09EE  
                                    l869 09CA                                      l894 0D80  
                                    l895 0D22                                      l896 0D28  
                                    l897 0D2E                                      l898 0D34  
                                    l899 0D3C                                      _GIE 007F97  
                           __CFG_CPD$OFF 000000                          _timer1ReloadVal 00AE  
                __size_of_PMD_Initialize 001C                                      prod 000FF3  
                                    wreg 000FE8                         ??_Update_Hopcoin 002B  
                         _DAC1_SetOutput 1A3E                           ??_credit_check 001F  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                          ?_mdb_security 0000                                     l1300 028C  
                                   l1310 030C                                     l1303 0314  
                                   l1320 0AC6                                     l1304 02E4  
                                   l1321 0AAC                                     l1330 0B1C  
                                   l1306 02EC                                     l1307 02F4  
                                   l1340 1232                                     l1308 02FC  
                                   l1341 11F2                                     l1317 0AA0  
                                   l1309 0304                                     l1350 1730  
                                   l1342 1208                                     l1318 0A42  
                                   l1327 0B0E                                     l1328 0B16  
                                   l1329 0B6C                                     l1338 121E  
                                   l2330 0566                                     l2314 184A  
                                   l2402 04C2                                     l2322 0E32  
                                   l1339 11DC                                     l1275 1038  
                                   l1283 16E0                                     l2331 0602  
                                   l2411 053A                                     l2403 04F4  
                                   l2323 0E18                          _timer3ReloadVal 00AC  
                                   l1276 1048                                     l2332 0572  
                                   l1356 199A                                     l2404 04CA  
                                   l1293 0294                                     l2333 0628  
                                   l1294 0264                                     l2350 0FDA  
                                   l2334 0588                                     l1295 02CA  
                                   l2335 059E                                     l3240 114E  
                                   l1296 026C                                     l2336 05B4  
                                   l3241 115A                                     l1297 0274  
                                   l2345 0FAC                                     l2337 05CA  
                                   l2329 062E                                     l3250 1376  
                                   l1298 027C                                     l1810 0EB2  
                                   l2346 1000                                     l2338 05E0  
                                   l2370 0154                                     l3251 1382  
                                   l1299 0284                                     l2347 0FB4  
                                   l3236 1124                                     l1804 0EC6  
                                   l1812 0EB6                                     l2348 1014  
                                   l2380 01A8                                     l2372 015C  
                                   l3237 111A                                     l1805 0E9E  
                                   l2349 0FC6                                     l2381 01B0  
                                   l2373 0164                                     l1741 10F6  
                                   l3246 1356                                     l2390 01D6  
                                   l2382 0240                                     l2374 016C  
                                   l1742 10D2                                     l3247 134C  
                                   l1815 0EC2                                     l1823 068A  
                                   l2391 01DA                                     l2383 01B4  
                                   l2375 0174                                     l1752 1832  
                                   l1808 0EDC                                     l1824 06E0  
                                   l1840 0F7C                                     l2392 01DE  
                                   l2384 01B8                                     l2376 017C  
                                   l1753 181A                                     l1809 0EA8  
                                   l1825 0692                                     l2393 01E2  
                                   l2385 01C2                                     l2369 0186  
                                   l1826 06F4                                     l1850 0108  
                                   l2394 01E6                                     l2386 01C6  
                                   l1827 06A8                                     l1851 005A  
                                   l2379 01EC                                     l2387 01CA  
                                   l1747 0E0A                                     l1828 06BE  
                                   l1852 011E                                     l2388 01CE  
                                   l1829 0704                                     l1853 0090  
                                   l1845 0016                                     l2389 01D2  
                                   l1758 16B6                                     l1854 00C8  
                                   l1846 000E                                     l1838 0F60  
                                   l2398 049C                                     l2806 1404  
                                   l1759 1692                                     l1767 1288  
                                   l1839 0F72                                     l2399 046C  
                                   l2831 03F2                                     l2807 13EE  
                                   l2832 0412                                     l1793 07DA  
                                   l1849 0050                                     l5145 1A0A  
                                   l1778 1704                                     l1794 0762  
                                   l2834 0442                                     l1779 16FE  
                                   l1795 07A8                                     l2827 03CC  
                                   l1796 076A                                     l2828 039E  
                                   l1797 07BC                                     l1798 0776  
                                   l2838 18FA                                     l1799 0782  
                                   l2839 18EE                                     l7063 0C54  
                                   l5295 1842                                     u2005 1510  
                                   u2006 1512                                     u2120 0EAE  
                                   u1320 04FE                                     u1305 04EC  
                                   u1250 1A20                                     u1307 04EE  
                                   u1340 0508                                     u1405 041C  
                                   _LATA 000F83                                     _LATB 000F84  
                                   u1407 041E                                     _LATC 000F85  
                                   _LATD 000F86                                     _LATE 000F87  
                                   u1290 04A2                                     u1355 0512  
                                   u1357 0514                                     u1550 0C44  
                                   u2290 0C74                                     u2507 1714  
                                   u2517 139A                                     u2527 13BE  
                                   u2447 1172                                     u2537 12D8  
                                   u2457 13F4                                     u1690 1412  
                                   u2467 0C68                                     u1940 1128  
                                   u2477 0C76                                     u2487 0CE0  
                                   u2497 07E6                                     u1970 135A  
                                   _PMD0 000EE1                                     _PMD1 000EE2  
                                   _PMD2 000EE3                                     _PMD3 000EE4  
                                   _PMD4 000EE5                                     _PMD5 000EE6  
          __size_of_eusartmdb_Initialize 0016                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                          _EUSART1_Write 1A08                            __CFG_FCMEN$ON 000000  
                                   _cash 0039                                     _dest 0094  
                                   _main 096C                                     _exit FD7E  
                          ?_EUSART1_Read 000B                            ?_mdb_transmit 0000  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004F  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 00AA                          _timer5ReloadVal 00AA  
                             _Clear_cred 1290                          _TMR3_Initialize 15B8  
                 __size_of_enter_service 0096                            __CFG_CSWEN$ON 000000  
                           ___param_bank 000000                            __CFG_SCANE$ON 000000  
                         ??_displ_credit 002A                __size_of_DATAEE_WriteByte 003A  
                __end_of_TMR0_Initialize 1814                           ??_displ_nendis 0029  
         __size_of_OSCILLATOR_Initialize 0018                           ??_displ_noteer 0029  
                          ?_Read_NVstore 001F            __end_of_OSCILLATOR_Initialize 1968  
                                  ?_main 000B                            __CFG_WDTE$OFF 000000  
                                  _T1CLK 000FD2                                    _T1CON 000FCF  
                                  _T3CLK 000FCC                                    _LATA6 007C1E  
                                  _T3CON 000FC9                                    _LATA7 007C1F  
                                  _CMOUT 000F3D                                    _T5CLK 000FC6  
                                  _T5CON 000FC3                          __end_of___ltdiv 1168  
                         __CFG_DEBUG$OFF 000000                          __end_of___ltmod 1390  
                 __end_of_DAC1_SetOutput 1A46                                    i2l197 005E  
                                  _OSCEN 000EDC                   __size_of_Write_NVstore 0028  
                                  _TMR0H 000FD4                                    _TMR1H 000FCE  
                        __end_of_cc_poll FDBE                                    _TMR0L 000FD3  
                                  _TMR1L 000FCD                                    _TMR3H 000FC8  
                                  _TMR3L 000FC7                                    _TMR5H 000FC2  
                                  _TMR5L 000FC1                                    _PORTA 000F8D  
                        __end_of_cc_test FDC9                                    _PORTD 000F90  
                        __end_of_cc_stop FDC4                                    _TRISA 000F88  
                                  _TRISB 000F89                                    _TRISC 000F8A  
                                  _TRISD 000F8B                                    _TRISE 000F8C  
                          ?_Read_Service 000B                          __end_of_cashint FDB5  
                        __end_of_cashinv FDB7                                    _Audit 1A7E  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                         __pidataCOMRAMh 1A80                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                          __end_of_enabled FFC7  
                         __CFG_EBTR0$OFF 000000                        lcd_write@savelatd 001F  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                          __end_of_credclr FD0D  
                         __CFG_EBTR4$OFF 000000                          __end_of_credmem FDB9  
                         __CFG_EBTR5$OFF 000000                          __end_of_credits FFA8  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                        __end_of_dispclr FDEE                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                          __end_of_dispoff FDE7  
                          __CFG_WRTD$OFF 000000                            ??_Hopper_coin 002C  
                                  _bflag 0046                          _DATAEE_ReadByte 1938  
                         __CFG_EBTRB$OFF 000000                           ??_mdb_security 0022  
                __end_of_PIN_MANAGER_IOC 1A7C                          __end_of_butindb 1724  
                        __end_of_dsphome FDEC                                    _line1 FDE3  
                                  _line2 FDE2                                    _line3 FDE1  
                                  _line4 FDE0                                    _count 004C  
                                  _butin 1390                          __end_of_mastadd FDCB  
                        __end_of_hopcoin FDA7                          __end_of_inithop FF6C  
                                  _vcash 0090                          __end_of_inscoin FF17  
                                  _onmsg FFFA                       __CFG_MCLRE$EXTMCLR 000000  
                        __end_of_second1 FDBD                           ?_EUSART1_Write 000B  
                __end_of_TMR1_Initialize 1624                            ?_Init_vendmem 000B  
                                  pclath 000FFA                                    tablat 000FF5  
                        __end_of_noteerr FF58                          __end_of_tenrand FFD0  
                        __end_of_sensmsg FFB3                          __end_of_sensval FDAB  
                        __end_of_servmsg FE7A                           ??_EUSART1_Read 001D  
                         ??_mdb_transmit 001E                                    status 000FD8  
                                  wtemp6 0050                    __end_of_cctalk_adpoll 18E6  
                   __size_of_cctalk_comm 00FC                     __size_of_cctalk_init 0044  
                   __size_of_cctalk_read 001E                     __size_of_cctalk_poll 002E  
                        _TMR5_Initialize 1582             __end_of_CMP1_GetOutputStatus 1A24  
                        __initialization 154C               __end_of_EUSART1_Initialize 19C2  
                           __end_of_main 0A2E                  __end_of_DAC1_Initialize 1A3E  
                           __end_of_exit FD83                           ??_Read_NVstore 0024  
                                 ??_main 002D                            __activetblptr 000003  
                        ?_DAC1_SetOutput 000B                     __end_of_enable_notes 101A  
                         ??_Read_Service 001D                              butindb@butt 0021  
                                 ?_Audit 0000                            _enter_service 0CF0  
             __end_of_EUSART2_Initialize 1980                        ??_cctalk_pinenter 0024  
                                 ?_butin 0000                                   _CM1NCH 000F3B  
                                 _CM1PCH 000F3C                           ??_Init_vendmem 001F  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                                   _T0CON0 000FD5  
                                 _T0CON1 000FD6                                   _T1GATE 000FD1  
                                 _T1GCON 000FD0                                   _T3GATE 000FCB  
                                 _T3GCON 000FCA                                   _T5GATE 000FC5  
                                 _T5GCON 000FC4                                   _RC1REG 000F99  
                                 _RC2REG 000E99                                   _RC1STA 000F9D  
                                 _RC2STA 000E9D                                   _RB5PPS 000EF4  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _RC6PPS 000EFD  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
               __size_of_credit_subtract 0056                         credit_add@credit 0028  
                __end_of_TMR3_Initialize 15EE                           __CFG_WDTCCS$SC 000000  
                                 _TABLAT 000FF5                            ?_init_mdbdata 000B  
                       __end_of_cc_level FDC3                                   _OSCFRQ 000EDE  
                                 _NVMDAT 000F80                         __end_of_cc_reset FDCA  
                                 _TX1REG 000F9A                                   _TX2REG 000E9A  
                                 _TX1STA 000F9E                                   _TX2STA 000E9E  
                    __end_of_Hopper_coin 07E0                            _Write_NVstore 1814  
                       __end_of_cashoutv FDA9                              ?_Clear_cred 0000  
                         __CFG_PWRTE$OFF 000000                  DAC1_SetOutput@inputData 001D  
                         __CFG_XINST$OFF 000000                         __end_of_disabled FFBD  
                   __size_of_lcd_dispadd 0018                         __end_of_auditmsg FD76  
                       __end_of_dispaddr FDED                         __end_of_lcd_init 0CF0  
                       __end_of_lcd_test 19AC                         __end_of_mdb_comm 0542  
                       __end_of_mdb_init 11D0                         __end_of_mdb_poll 0246  
                   __end_of_credit_check 18A6                                   _cc_pay FDC5  
                                 _cc_pin FDC1                                   _dacmsg FF8E  
                         __CFG_STVREN$ON 000000                        ?_Update_cashaudit 000B  
                             _Sensor_set 0634                            displ_nendis@x 002A  
                        mdb_reset@i_3119 0024                                ??___ltdiv 0023  
                              ??___ltmod 0023                                   _credit 003A  
                                 _lcdata 0045                                   _clrmsg FFF0  
                                 _dispon FDEE                                   _mdb_on 1A70  
                                 _dispsl FDE4                               _Vend_setup 1A7C  
                                 _dispsr FDE5                                   _ercode 0043  
                                 _hexnum 008B                                   _hopadd FDCB  
                       ?_TMR0_Initialize 0000                                   _mcount 0041  
                                 _offmsg FFF6                                   clear_0 1564  
                                 clear_1 1570                       ??_Update_cashaudit 0027  
                       __end_of_hoperror FD85                         __end_of_hoppcoin FEE6  
                       __end_of_initnote FF3C                                   _nvcash 0088  
                                 _noteen 003D                                   _senset FD4C  
                                 _pvcash 004A                                   _slvadd 0097  
                       __end_of_nochange FD4C                     __size_of_displ_price 0040  
                                 _stradd 0044                                   _tvends 0080  
                      read_busy@savelatd 001E                        read_busy@savelate 001D  
                __end_of_DATAEE_ReadByte 1950                                ??_butindb 001E  
                         _PMD_Initialize 1904                           ?_enter_service 0000  
                       __end_of_notebits FDAD                         __end_of_pricemsg FD7E  
                       __end_of_notetest FD69                             __mediumconst FCE2  
                       __end_of_setnotes FE37                                   tblptrh 000FF7  
                                 tblptrl 000FF6                         __end_of_vendtest FD26  
                                 tblptru 000FF8                     Update_Hopcoin@newval 002B  
                        ??_EUSART1_Write 001D                         ?_PIN_MANAGER_IOC 000B  
          __size_of_INTERRUPT_Initialize 0008                           ??_init_mdbdata 001D  
                   __end_of_displ_credit 168C                         ?_TMR1_Initialize 0000  
                __end_of_TMR5_Initialize 15B8         ??_INTERRUPT_InterruptManagerHigh 000B  
        ?_INTERRUPT_InterruptManagerHigh 000B                        _SYSTEM_Initialize 1756  
                   __end_of_displ_nendis 16F2                               __accesstop 0060  
                __end_of__initialization 1578                     __end_of_displ_noteer 17B8  
                         ?_Write_NVstore 0021                    __end_of_note_features FDD9  
                        _CMP1_Initialize 19C2                       ?_SYSTEM_Initialize 000B  
                  __end_of_theft_attempt FDCD                             __pbssCOMRAMh 002D  
                          ___rparam_used 000001                             __pbssCOMRAMl 004E  
                          __end_of_Audit 1A80                      ??_SYSTEM_Initialize 001F  
                       ?_DAC1_Initialize 0000                     __end_of_mdb_security 18C6  
                       _DATAEE_WriteByte 14DA                            __end_of_line1 FDE4  
                          __end_of_line2 FDE3                            __end_of_line3 FDE2  
                          __end_of_line4 FDE1                            __end_of_butin 13DA  
                          __end_of_onmsg FFFE                    __end_of_note_rejected FDCE  
                     __size_of_cctalk_on 0006                    __end_of_note_security FDDE  
                 __end_of_PMD_Initialize 1920                     __end_of_EUSART1_Read 19E8  
                   __end_of_mdb_transmit 1A08                               _cc_countrq FDC4  
                                ??_Audit 001D                      __size_of_Clear_cred 0056  
                   _CMP1_GetOutputStatus 1A16                           Write_NVstore@i 0026  
                     __size_of_displ_hex 00B6                              _Hopper_coin 070A  
                     __size_of_lcd_write 0032                                  ??_butin 001D  
              __end_of_SYSTEM_Initialize 1788                       __size_of_mdb_reset 0086  
                     __size_of_mdb_noten 003A                       __size_of_mdb_waitr 0006  
                     __size_of_mdb_waitx 0006                               __pbssBANK0 0060  
                    displ_hex@hexnumsave 00A2                         ?_TMR3_Initialize 0000  
                   __end_of_Read_NVstore 16C0                     displ_price@vendprice 002A  
                          _chan1linkbits FDA3                            _chan2linkbits FDA1  
                     __size_of_read_busy 0042                     __end_of_Read_Service 19FA  
                      ??_credit_subtract 0021                            _chan3linkbits FD9F  
                          _chan4linkbits FD9D                            _chan5linkbits FD9B  
                            ?_Sensor_set 0000             __end_of_eusartmdb_Initialize 1996  
                            ?_Vend_setup 0000                            _chan6linkbits FD99  
                  __size_of_enable_notes 007A                                  ?_mdb_on 0000  
                                _CM1CON0 000F39                                  _CM1CON1 000F3A  
                   __end_of_Init_vendmem 10FE                            _chan7linkbits FD97  
                        ?_PMD_Initialize 0000                            _chan8linkbits FD95  
                        ??_enter_service 002D                       __size_of_set_price 0124  
                     __size_of_set_notes 00F2                       __size_of_price_set 0080  
                       ?_DATAEE_ReadByte 001D                       __size_of_vend_init 008E  
                  displ_nendis@note2disp 0029                               _credit_add 1236  
                      __end_of_cc_adpoll FDBF                               _lcd_clockE 1A24  
                             _lcd_clockH 1A4E                               _lcd_clockL 1A46  
                      __end_of_cc_enable FDC8                                  _SP1BRGH 000F9C  
                                _SP1BRGL 000F9B                                  _SP2BRGH 000E9C  
                                _SP2BRGL 000E9B                               _lcdaddress 0098  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                                _TBLPTRH 000FF7                        __end_of_chan1time FD95  
                                _TBLPTRL 000FF6                                  _TBLPTRU 000FF8  
                      __end_of_chan2time FD93                    ?_CMP1_GetOutputStatus 000B  
                      __end_of_chan3time FD91                        __end_of_chan4time FD8F  
                      __end_of_chan5time FD8D                        __end_of_chan6time FD8B  
                                _NVMADRH 000F7F                                  _NVMADRL 000F7E  
                             _jammed_err FDD3                        __end_of_chan7time FD89  
                                _OSCTUNE 000EDD                        __end_of_chan8time FD87  
                                _NVMCON2 000F82                        __end_of_cc_newpin FDC1  
                      __end_of_cc_serial FDC0                               _displ_code 0246  
                                _PPSLOCK 000EA0                               _displ_note 1514  
                             _displ_sens 101A                  __end_of_CMP1_Initialize 19D6  
                      __end_of_cc_status FDC7                               _lcd_string 0AE4  
                             _dispcursor FDE9                               _lcd_writeC 11D0  
                              ?_lcd_init 0000                                ?_lcd_test 0000  
                              ?_mdb_comm 001F                                ?_mdb_init 0000  
                             _dispshleft FDE7                               _dispnormal FDEA  
                              ?_mdb_poll 0000                          ??_Write_NVstore 0026  
                             _mdb_unlock 07E0                         ?_TMR5_Initialize 0000  
                      __end_of_cctalk_on 1A64                     DATAEE_WriteByte@bAdd 001D  
                         displ_hex@value 009A                    __size_of_credit_check 0022  
                           _enable_notes 0FA0                                  __Hparam 0000  
                                __Lparam 0000               __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                      __end_of_creditclr FF8E                           mdb_comm@mcount 001F  
                      __end_of_displ_hex 0AE4                        __end_of_dispfunc1 FDF2  
                      __end_of_dispfunc2 FDF1                        __end_of_dispfunc3 FDF0  
                      __end_of_lcd_write 1756                        __end_of_fiftyrand FFE8  
                         mdb_comm@slvadd 0020                                  ___ltdiv 10FE  
                      __end_of_mdb_reset 0E9A                        __end_of_mdb_noten 14DA  
                                ___ltmod 133C                        __end_of_mdb_waitr 1A6A  
                       ??_DAC1_SetOutput 001D                        __end_of_mdb_waitx 1A70  
                                _cc_poll FDBD                                  _cc_test FDC8  
                                _cc_stop FDC3                          __size_of_mdb_on 0006  
                                _dbcount 0032                         set_price@channel 00A7  
                                __pcinit 154C                                  _cashint FDB3  
                   __end_of_init_mdbdata 1862                                  _cashinv FDB5  
                        _cctalk_pinenter 1624                                  __ramtop 0F00  
                                _chkbyte 003F                                  _enabled FFBD  
                             _errorflags 0096                                  __ptext0 096C  
                                __ptext1 0D86                                  __ptext2 1168  
                                __ptext3 18A6                                  __ptext4 0E14  
                                __ptext5 14A0                                  __ptext6 13DA  
                                __ptext7 1980                                  __ptext8 17B8  
                                __ptext9 1624                                  _credclr FCE3  
                                _credmem FDB7                                  _credits FF9B  
                                _command 0092                                  _dispclr FDED  
                                _dispoff FDE6                                  _mdbdata 0060  
                                _lcdfunc 004E                                  _lcdline 0099  
                              _T1CONbits 000FCF                                  _butindb 16F2  
                                _dsphome FDEB                    _OSCILLATOR_Initialize 1950  
                                _mastadd FDCA                                  _hopcoin FDA5  
                       set_price@buttons 00A6                                  _buttons 0038  
                                _inithop FF58                                _T3CONbits 000FC9  
                                _inscoin FEE6                                _CMOUTbits 000F3D  
                      __end_of_read_busy 1460                                  _second1 FDBB  
                     _EUSART1_Initialize 19AC                 ??_PIN_MANAGER_Initialize 001D  
                  __size_of_displ_credit 0034                                _T5CONbits 000FC3  
                                _nobytes 0093                                  _noteerr FF3C  
                                _tenrand FFC7                                  _notenum 004D  
                                _sensmsg FFA8                                  _sensval FDA9  
                                _senspos 0035                    __size_of_displ_nendis 0032  
                                _pnvcash 0047                                  _venderr 0034  
                                _servmsg FE37                    __size_of_displ_noteer 0030  
             __size_of_SYSTEM_Initialize 0032                             _credit_check 1884  
                             ??_lcd_init 0025                               ??_lcd_test 0024  
                             ??_mdb_comm 0020                               ??_mdb_init 0025  
                   end_of_initialization 1578                        __end_of_secondadd FDBB  
                             ??_mdb_poll 0022                      __size_of_Sensor_set 00D6  
                    ?_EUSART1_Initialize 000B                            ??_cctalk_comm 0021  
                          ??_cctalk_init 0025                            ??_cctalk_read 001D  
                          ??_cctalk_poll 0024                      __size_of_Vend_setup 0002  
                          __pdataCOMRAMh 004D                        __end_of_note_poll FDDD  
                      __end_of_set_price 0124                        __end_of_set_notes 0634  
                __size_of_Update_Hopcoin 0086                        __end_of_note_type FDDC  
                      __end_of_price_set 0FA0                               _save_notes 1862  
                      __end_of_just_busy FDD6                        __end_of_priceexit FD3C  
                           ??_Clear_cred 0029                        __end_of_vend_init 0E14  
                  __size_of_mdb_security 0020                         ___ltdiv@dividend 001D  
                      __end_of_rom_error FDD5                       _EUSART2_Initialize 1968  
                      __end_of_vendstore FDB3                               _note_reset FDDF  
                             _sens_error FDD6                               _note_setup FDDE  
                                postinc0 000FEE                    __size_of_EUSART1_Read 0012  
                             _motr_error FDD7                    __size_of_mdb_transmit 000E  
                             _just_reset FDD2                            Read_NVstore@i 0024  
                             _pricesetm2 FE7A                     ??_EUSART1_Initialize 001D  
                             _pricestore FDAF                    __CFG_WDTCPS$WDTCPS_31 000000  
                    ?_EUSART2_Initialize 0000                 Init_vendmem@chanlinkbits 001F  
                           _displ_credit 1658                             _displ_nendis 16C0  
                             _venderrors FDAD                         displ_code@ercode 0026  
                           _displ_noteer 1788                        displ_sens@dmsgpos 002A  
                            ?_credit_add 0000                              ?_lcd_clockE 0000  
                            ?_lcd_clockH 0000                              ?_lcd_clockL 0000  
                 ??_CMP1_GetOutputStatus 001D                   __size_of_cctalk_adpoll 0020  
                       ___ltdiv@quotient 0023                    __size_of_Read_NVstore 0034  
                     __end_of_Clear_cred 12E6                              ?_displ_code 000B  
              __size_of_Update_cashaudit 00C4                              ?_displ_note 0029  
                            ?_displ_sens 002A                        displ_sens@smsgpos 002B  
                            ?_lcd_string 0024                              ?_lcd_writeC 0000  
                    EUSART1_Write@txData 001D                         ?_CMP1_Initialize 000B  
                       __CFG_FEXTOSC$OFF 000000                 __end_of_DATAEE_WriteByte 1514  
                           _mdb_security 18A6                     ??_EUSART2_Initialize 001D  
                            ?_mdb_unlock 0000                     _eusartmdb_Initialize 1980  
                  __size_of_Read_Service 0012                             _EUSART1_Read 19D6  
                    __end_of_cashbox_err FDD1                             _mdb_transmit 19FA  
                          ??_lcd_dispadd 0021                               displ_hex@i 00A5  
                  __size_of_Init_vendmem 0070                      __end_of_cctalk_comm 0448  
                    __end_of_cctalk_init 141E                      __end_of_cctalk_read 1904  
                __end_of_cctalk_pinenter 1658                      __end_of_cctalk_poll 17E6  
                   _timer0ReloadVal16bit 00A8                          __pcstackCOMRAMh 000B  
                        __pcstackCOMRAMl 0000                               mdb_reset@i 0023  
           __end_of_INTERRUPT_Initialize 1A5E                            ??_displ_price 002A  
                     mdb_transmit@txbyte 001E                               _twentyrand FFE8  
                         __end_of_cc_pay FDC6                           __end_of_cc_pin FDC2  
                         __end_of_dacmsg FF9B                           __end_of_clrmsg FFF6  
                         __end_of_dispon FDEF                           __end_of_mdb_on 1A76  
                         __end_of_dispsl FDE5                           __end_of_dispsr FDE6  
                           _Read_NVstore 168C                         displ_credit@cash 002A  
                         __end_of_hopadd FDCC                   ?_OSCILLATOR_Initialize 0000  
                         __end_of_offmsg FFFA                           __end_of_senset FD5B  
                    start_initialization 154C                             _Read_Service 19E8  
               __size_of_TMR0_Initialize 002E          __size_of_PIN_MANAGER_Initialize 00B0  
                           ?_Hopper_coin 0000                          _credit_subtract 12E6  
                Update_cashaudit@addcash 0027                    ?_eusartmdb_Initialize 0000  
                  __end_of_EUSART1_Write 1A16                             _Init_vendmem 108E  
                            ?_save_notes 0000                      DATAEE_ReadByte@bAdd 001D  
               __size_of_PIN_MANAGER_IOC 0006                            Init_vendmem@i 0023  
                          _cctalk_adpoll 18C6                      __size_of_credit_add 005A  
                       __CFG_LPBOREN$OFF 000000                      __size_of_lcd_clockE 000E  
                    __size_of_lcd_clockH 0008                      __size_of_lcd_clockL 0008  
               __size_of_TMR1_Initialize 0036                    __size_of_init_mdbdata 0026  
                       ??_PMD_Initialize 001D                             ??_Sensor_set 002C  
                    __size_of_displ_code 0106                      __end_of_lcd_dispadd 1938  
                    __size_of_displ_note 0038                      __size_of_displ_sens 0074  
                           ??_Vend_setup 001D                                 ??_mdb_on 001D  
                    __size_of_lcd_string 00B4                      __size_of_lcd_writeC 0066  
                    __size_of_mdb_unlock 00C8                 __size_of_DAC1_Initialize 000C  
                    __end_of_displ_price 14A0                            __pcstackBANK0 009A  
                    __end_of_dispshright FDE9                            butindb@butval 0020  
                              _cc_adpoll FDBE                              _cashbox_err FDD0  
                            __pnvCOMRAMh 004C                                _cc_enable FDC7  
                   __end_of_note_removed FDD2                                _chan1time FD93  
                  credit_subtract@credit 0021                     __end_of_note_stacker FDDA  
                              _chan2time FD91                                _chan3time FD8F  
                              _chan4time FD8D                                _chan5time FD8B  
                              _chan6time FD89                                _chan7time FD87  
                              _chan8time FD85                                _cc_newpin FDC0  
                   init_mdbdata@initdata 001D                                _cc_serial FDBF  
                     __end_of_Sensor_set 070A                              _cctalk_comm 034C  
                            _cctalk_init 13DA                              _cctalk_read 18E6  
                           _init_mdbdata 183C                        __size_of_lcd_init 00A8  
                            _cctalk_poll 17B8                        __size_of_lcd_test 0016  
                     __end_of_Vend_setup 1A7E                        __size_of_mdb_comm 00FA  
                              _cc_status FDC6                        __size_of_mdb_init 0068  
                         _Update_Hopcoin 0E9A                        __size_of_mdb_poll 0122  
                              __pnvBANK0 00A8                           ?_cctalk_adpoll 0000  
                              _chanlink1 000003                                _chanlink2 000004  
                              _chanlink3 000005                                _chanlink4 000006  
                              _chanlink5 000007                                _chanlink6 000008  
                              _chanlink7 000009                                _chanlink8 00000A  
                              _cctalk_on 1A5E                   _PIN_MANAGER_Initialize 0B98  
                       ?_cctalk_pinenter 0000                 __size_of_TMR3_Initialize 0036  
                              __pintcode 0008                            __pmediumconst FCE2  
                               ?___ltdiv 001D                                 ?___ltmod 001D  
                       __CFG_PPS1WAY$OFF 000000                                _creditclr FF7E  
                               _DAC1CON0 000F33                                 _DAC1CON1 000F34  
                              _displ_hex 0A2E                                _dispfunc1 FDF1  
                              _dispfunc2 FDF0                                _dispfunc3 FDEF  
                              _lcd_write 1724                       Hopper_coin@coinval 002C  
                              _fiftyrand FFE0                                _mdb_reset 0E14  
                              _mdb_noten 14A0                                _mdb_waitr 1A64  
                              _mdb_waitx 1A6A                                 _BAUD1CON 000F9F  
                               _BAUD2CON 000E9F                  __end_of_credit_subtract 133C  
                               ?_butindb 0000                    __end_of_enter_service 0D86  
                    __size_of_save_notes 0022                           __size_of_Audit 0002  
                              _mdbtxbyte 0095                         _Update_cashaudit 08A8  
                         _acept_disabled FDCF                   ??_eusartmdb_Initialize 001D  
                         __size_of_butin 004A                 __size_of_DATAEE_ReadByte 0018  
                              _read_busy 141E                     _INTERRUPT_Initialize 1A56  
                 __end_of_Update_Hopcoin 0F20                         ___ltmod@dividend 001D  
                  lcd_dispadd@lcdaddress 0021                        ??_TMR0_Initialize 001D  
                  __end_of_Write_NVstore 183C                                 _LATCbits 000F85  
                              _secondadd FDB9                    lcd_dispadd@lcdatasave 0022  
                               _IPR0bits 000EBA                                 _PIE0bits 000EC2  
                          _note_features FDD8                              _lcd_dispadd 1920  
                    __CFG_BORV$VBOR_2P45 000000                            _theft_attempt FDCC  
                             ?_cctalk_on 0000                       __end_of_cc_countrq FDC5  
                               _PIR0bits 000ECA                          ___ltdiv@divisor 0020  
                           cctalk_comm@i 0022                                 _PIR3bits 000ECD  
                               _PIR4bits 000ECE                                 _PIR7bits 000ED1  
                        ___ltdiv@counter 0026                                _note_poll FDDC  
                              _set_price 0000                                _set_notes 0542  
               __size_of_TMR5_Initialize 0036                                _note_type FDDB  
                              _price_set 0F20                                _just_busy FDD5  
                              _priceexit FD26                             cctalk_poll@i 0024  
                              _vend_init 0D86                                _sensorval 0036  
                              _rom_error FDD4                        ??_PIN_MANAGER_IOC 000B  
                            _displ_price 1460                                _vendprice 0037  
                              _vendstore FDB1                            _note_rejected FDCD  
                      ??_TMR1_Initialize 001D                               ?_displ_hex 0027  
                             ?_lcd_write 0000                            _note_security FDDD  
                    __end_of_hundredrand FFE0                               ?_mdb_reset 0000  
                             ?_mdb_noten 0000                              _dispshright FDE8  
                             ?_mdb_waitr 0000                               ?_mdb_waitx 000B  
                           ??_credit_add 0028                             ??_lcd_clockE 001D  
                           ??_lcd_clockH 001D                             ??_lcd_clockL 001D  
                 Write_NVstore@storesize 0025                                mdb_comm@i 0021  
                 __end_of_acept_disabled FDD0                                mdb_init@i 0027  
                  DATAEE_WriteByte@bData 001F                             ??_displ_code 0024  
                              mdb_poll@i 0022                          displ_hex@hexnum 0027  
                           ??_displ_note 002B                             ??_displ_sens 002B  
                           ??_lcd_string 0027                             ??_lcd_writeC 0023  
                             ?_read_busy 0000                    ?_INTERRUPT_Initialize 0000  
                      ??_DAC1_Initialize 001D                             ??_mdb_unlock 001F  
                      ?_DATAEE_WriteByte 001D                          ?_Update_Hopcoin 002A  
                   __size_of_Hopper_coin 00D6                          ??_cctalk_adpoll 0024  
                     ??_DATAEE_WriteByte 0020                      lcd_string@lcdstring 0024  
                               __Hrparam 0000                         Sensor_set@dacpos 002C  
                               __Lrparam 0000                       __end_of_credit_add 1290  
                             ?_set_price 0000                       __CFG_BOREN$SBORDIS 000000  
                             ?_set_notes 0000                       __end_of_lcd_clockE 1A32  
                             ?_price_set 0000                       __end_of_lcd_clockH 1A56  
                     __end_of_lcd_clockL 1A4E                               ?_vend_init 0000  
                ??_OSCILLATOR_Initialize 001D                       Read_Service@senval 001D  
                     __end_of_jammed_err FDD4                       __end_of_displ_code 034C  
                     __end_of_displ_note 154C                       __end_of_displ_sens 108E  
            __size_of_EUSART1_Initialize 0016                         __size_of___ltdiv 006A  
                       __size_of___ltmod 0054                       __end_of_lcd_string 0B98  
                     __end_of_dispcursor FDEA                       __end_of_lcd_writeC 1236  
                         _invalid_escrow FDCE                      __end_of_note_escrow FDDB  
                     __end_of_dispshleft FDE8                       __end_of_dispnormal FDEB  
                      ??_TMR3_Initialize 001D                       __end_of_mdb_unlock 08A8  
                               _cc_level FDC2                  Update_Hopcoin@direction 002A  
                       cctalk_pinenter@i 0024                                 _cc_reset FDC9  
                       ?_credit_subtract 0000                              _dspposition 0042  
                             _T0CON0bits 000FD5                         __size_of_butindb 0032  
                               _cctflags 003B                                 _cashoutv FDA7  
                __size_of_DAC1_SetOutput 0008            __size_of_CMP1_GetOutputStatus 000E  
                               __ptext10 1A5E                                 __ptext11 18C6  
                               __ptext20 1A6A                                 __ptext12 034C  
                    __end_of_pricesetmsg FF7E                                 __ptext21 1A08  
                               __ptext13 18E6                               _T1GCONbits 000FD0  
                               __ptext30 1862                                 __ptext22 1A70  
                               __ptext14 108E                                 __ptext31 16C0  
                               __ptext23 183C                                 __ptext15 1A3E  
                               __ptext40 101A                                 __ptext32 1514  
                               __ptext24 19D6                                 __ptext16 0124  
                               __ptext41 1A16                                 __ptext33 0F20  
                               __ptext25 0C48                                 __ptext17 0448  
                               __ptext50 1658                                 __ptext42 070A  
                               __ptext34 0000                                 __ptext26 1996  
                               __ptext18 1A64                                 __ptext51 0AE4  
                               __ptext43 16F2                                 __ptext35 1460  
                               __ptext27 0CF0                                 __ptext19 19FA  
                               __ptext60 133C                                 __ptext52 0A2E  
                               __ptext44 1390                                 __ptext36 19E8  
                               __ptext28 0542                                 __ptext61 10FE  
                               __ptext53 11D0                                 __ptext45 0E9A  
                               __ptext37 07E0                                 __ptext29 0FA0  
                               __ptext70 1756                                 __ptext62 1884  
                               __ptext54 1920                                 __ptext46 1290  
                               __ptext38 1A7C                                 __ptext71 1582  
                               __ptext63 12E6                                 __ptext55 1724  
                               __ptext47 1A7E                                 __ptext39 0634  
                               __ptext80 19AC                                 __ptext72 15B8  
                               __ptext64 1236                                 __ptext56 141E  
                               __ptext48 1788                                 __ptext81 1A32  
                               __ptext73 15EE                                 __ptext65 08A8  
                               __ptext57 1A46                                 __ptext49 0246  
                               __ptext82 19C2                                 __ptext74 17E6  
                               __ptext66 1814                                 __ptext58 1A4E  
                               __ptext75 1904                                 __ptext67 14DA  
                               __ptext59 1A24                                 __ptext84 1A76  
                               __ptext76 0B98                                 __ptext68 168C  
                               __ptext77 1950                                 __ptext69 1938  
                               __ptext78 1A56                                 __ptext79 1968  
                               _disabled FFB3                                 _auditmsg FD69  
                               _dispaddr FDEC                                 _lcd_init 0C48  
                               _lcd_test 1996                                 _mdb_comm 0448  
                               _mdb_init 1168                                 _mdb_poll 0124  
                               _mdbflags 003E                               _T3GCONbits 000FCA  
            DATAEE_WriteByte@GIEBitValue 0020              __size_of_EUSART2_Initialize 0018  
                  __end_of_chan1linkbits FDA5                            __size_of_main 00C2  
                             _T5GCONbits 000FC4                                 _hoperror FD83  
                           ??_save_notes 0021                                 _hoppcoin FEB3  
                               _initnote FF17                    __end_of_chan2linkbits FDA3  
                               _hpserial 002D                                 _nochange FD3C  
                        ___ltmod@divisor 0020                          cctalk_comm@dest 0023  
                      ??_DATAEE_ReadByte 001F                     __CFG_WDTCWS$WDTCWS_7 000000  
                  __end_of_chan3linkbits FDA1                 __size_of_CMP1_Initialize 0014  
                        ___ltmod@counter 0023                              ??_cctalk_on 001D  
                  __end_of_chan4linkbits FD9F                               _RC1STAbits 000F9D  
                               _vcashout 008E                                 _notebits FDAB  
                             _RC2STAbits 000E9D                                 _notebyte 0040  
                               _pricemsg FD76                    __end_of_chan5linkbits FD9D  
                               _notetest FD5B                                 _venflags 0030  
                               _setnotes FDF2                            init_mdbdata@i 001E  
                               _vendtest FD0D                              _hundredrand FFD8  
                  __end_of_chan6linkbits FD9B                                 int$flags 004F  
                 __end_of_invalid_escrow FDCF                       cctalk_comm@command 0020  
                  __end_of_chan7linkbits FD99                             _note_removed FDD1  
                  Write_NVstore@storeadd 0021                    Read_NVstore@storesize 0023  
                  Write_NVstore@storemem 0023                             _note_stacker FDD9  
                  __end_of_chan8linkbits FD97                          cctalk_read@data 001D  
                            ??_displ_hex 002A              PIN_MANAGER_Initialize@state 001D  
                            ??_lcd_write 001F                        ??_TMR5_Initialize 001D  
                     cctalk_comm@nobytes 001F                              ??_mdb_reset 0022  
                            ??_mdb_noten 0022                              ??_mdb_waitr 001D  
                            ??_mdb_waitx 001D                               _INTCONbits 000FF2  
                            _NVMCON1bits 000F81                       __end_of_save_notes 1884  
                 ??_INTERRUPT_Initialize 001D                              ??_read_busy 001D  
                     __end_of_note_reset FDE0                           _twohundredrand FFD0  
                     __end_of_sens_error FDD7                       __end_of_note_setup FDDF  
                               intlevel2 0000                       __end_of_motr_error FDD8  
                           ?_cctalk_comm 001F                       __end_of_just_reset FDD3  
                           ?_cctalk_init 0000                             ?_cctalk_read 0000  
                           ?_cctalk_poll 0000                       __end_of_pricesetm2 FEB3  
                ?_PIN_MANAGER_Initialize 000B                       __end_of_pricestore FDB1  
                         cctalk_adpoll@i 0024                        __CFG_CLKOUTEN$OFF 000000  
                          ?_enable_notes 0000                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors FDAF                              _note_escrow FDDA  
                            ??_set_price 002B                              ??_set_notes 002C  
                            ??_price_set 002D                 __end_of_Update_cashaudit 096C  
                   Read_NVstore@storeadd 001F                              ??_vend_init 0029  
                   Read_NVstore@storemem 0021                              _noteen_byte 003C  
                      lcd_string@lcdline 0026                   __size_of_EUSART1_Write 000E  
                   displ_note@notestring 0029   __end_of_INTERRUPT_InterruptManagerHigh 00AA  
__size_of_INTERRUPT_InterruptManagerHigh 00A2           _INTERRUPT_InterruptManagerHigh 0008  
                             _RX1PPSbits 000EB5                              _pricesetmsg FF6C  
                             _RX2PPSbits 000E8D                        lcd_test@character 0024  
                        _TMR0_Initialize 17E6                     Init_vendmem@chanlink 0021  
                 __end_of_twohundredrand FFD8                            ?_credit_check 0000  
                             _TX1STAbits 000F9E           __end_of_PIN_MANAGER_Initialize 0C48  
                    enable_notes@notenum 002B                       __end_of_twentyrand FFF0  
                        _PIN_MANAGER_IOC 1A76                           ??_enable_notes 002B  
                           ?_lcd_dispadd 0000                          _TMR1_Initialize 15EE  
