

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Mar 23 12:18:43 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataCOMRAMh,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   118                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   119                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   120                           	dabs	1,0x3,1,_chanlink1
   121                           	dabs	1,0xA,1,_chanlink8
   122                           	dabs	1,0x9,1,_chanlink7
   123                           	dabs	1,0x8,1,_chanlink6
   124                           	dabs	1,0x7,1,_chanlink5
   125                           	dabs	1,0x6,1,_chanlink4
   126                           	dabs	1,0x5,1,_chanlink3
   127                           	dabs	1,0x4,1,_chanlink2
   128  0000                     
   129                           ; Version 1.44
   130                           ; Generated 14/09/2017 GMT
   131                           ; 
   132                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F47K40 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataBANK0
   165  012196                     __pidataBANK0:
   166                           	opt stack 0
   167                           
   168                           ;initializer for _hopercount
   169  012196  03                 	db	3
   170                           
   171                           	psect	idataCOMRAMh
   172  012197                     __pidataCOMRAMh:
   173                           	opt stack 0
   174                           
   175                           ;initializer for _notenum
   176  012197  FF                 	db	255
   177                           
   178                           	psect	mediumconst
   179  00FAAC                     __pmediumconst:
   180                           	opt stack 0
   181  00FAAC  00                 	db	0
   182  00FAAD                     _chanlinkmsg:
   183                           	opt stack 0
   184  00FAAD  50                 	db	80
   185  00FAAE  75                 	db	117
   186  00FAAF  73                 	db	115
   187  00FAB0  68                 	db	104
   188  00FAB1  20                 	db	32
   189  00FAB2  42                 	db	66
   190  00FAB3  75                 	db	117
   191  00FAB4  74                 	db	116
   192  00FAB5  74                 	db	116
   193  00FAB6  6F                 	db	111
   194  00FAB7  6E                 	db	110
   195  00FAB8  20                 	db	32
   196  00FAB9  74                 	db	116
   197  00FABA  6F                 	db	111
   198  00FABB  20                 	db	32
   199  00FABC  4C                 	db	76
   200  00FABD  69                 	db	105
   201  00FABE  6E                 	db	110
   202  00FABF  6B                 	db	107
   203  00FAC0  20                 	db	32
   204  00FAC1  50                 	db	80
   205  00FAC2  75                 	db	117
   206  00FAC3  73                 	db	115
   207  00FAC4  68                 	db	104
   208  00FAC5  20                 	db	32
   209  00FAC6  61                 	db	97
   210  00FAC7  67                 	db	103
   211  00FAC8  61                 	db	97
   212  00FAC9  69                 	db	105
   213  00FACA  6E                 	db	110
   214  00FACB  20                 	db	32
   215  00FACC  74                 	db	116
   216  00FACD  6F                 	db	111
   217  00FACE  20                 	db	32
   218  00FACF  55                 	db	85
   219  00FAD0  6E                 	db	110
   220  00FAD1  6C                 	db	108
   221  00FAD2  69                 	db	105
   222  00FAD3  6E                 	db	110
   223  00FAD4  6B                 	db	107
   224  00FAD5  50                 	db	80
   225  00FAD6  75                 	db	117
   226  00FAD7  73                 	db	115
   227  00FAD8  68                 	db	104
   228  00FAD9  20                 	db	32
   229  00FADA  53                 	db	83
   230  00FADB  65                 	db	101
   231  00FADC  72                 	db	114
   232  00FADD  76                 	db	118
   233  00FADE  69                 	db	105
   234  00FADF  63                 	db	99
   235  00FAE0  65                 	db	101
   236  00FAE1  20                 	db	32
   237  00FAE2  74                 	db	116
   238  00FAE3  6F                 	db	111
   239  00FAE4  20                 	db	32
   240  00FAE5  45                 	db	69
   241  00FAE6  78                 	db	120
   242  00FAE7  69                 	db	105
   243  00FAE8  74                 	db	116
   244  00FAE9  00                 	db	0
   245  00FAEA                     __end_of_chanlinkmsg:
   246                           	opt stack 0
   247  00FAEA                     _motimemsg:
   248                           	opt stack 0
   249  00FAEA  20                 	db	32
   250  00FAEB  50                 	db	80
   251  00FAEC  72                 	db	114
   252  00FAED  65                 	db	101
   253  00FAEE  73                 	db	115
   254  00FAEF  73                 	db	115
   255  00FAF0  20                 	db	32
   256  00FAF1  43                 	db	67
   257  00FAF2  68                 	db	104
   258  00FAF3  61                 	db	97
   259  00FAF4  6E                 	db	110
   260  00FAF5  6E                 	db	110
   261  00FAF6  65                 	db	101
   262  00FAF7  6C                 	db	108
   263  00FAF8  20                 	db	32
   264  00FAF9  56                 	db	86
   265  00FAFA  65                 	db	101
   266  00FAFB  6E                 	db	110
   267  00FAFC  64                 	db	100
   268  00FAFD  20                 	db	32
   269  00FAFE  42                 	db	66
   270  00FAFF  75                 	db	117
   271  00FB00  74                 	db	116
   272  00FB01  74                 	db	116
   273  00FB02  6F                 	db	111
   274  00FB03  6E                 	db	110
   275  00FB04  20                 	db	32
   276  00FB05  6F                 	db	111
   277  00FB06  72                 	db	114
   278  00FB07  20                 	db	32
   279  00FB08  50                 	db	80
   280  00FB09  72                 	db	114
   281  00FB0A  65                 	db	101
   282  00FB0B  73                 	db	115
   283  00FB0C  73                 	db	115
   284  00FB0D  20                 	db	32
   285  00FB0E  20                 	db	32
   286  00FB0F  20                 	db	32
   287  00FB10  20                 	db	32
   288  00FB11  20                 	db	32
   289  00FB12  20                 	db	32
   290  00FB13  20                 	db	32
   291  00FB14  53                 	db	83
   292  00FB15  65                 	db	101
   293  00FB16  72                 	db	114
   294  00FB17  76                 	db	118
   295  00FB18  69                 	db	105
   296  00FB19  63                 	db	99
   297  00FB1A  65                 	db	101
   298  00FB1B  20                 	db	32
   299  00FB1C  74                 	db	116
   300  00FB1D  6F                 	db	111
   301  00FB1E  20                 	db	32
   302  00FB1F  45                 	db	69
   303  00FB20  78                 	db	120
   304  00FB21  69                 	db	105
   305  00FB22  74                 	db	116
   306  00FB23  00                 	db	0
   307  00FB24                     __end_of_motimemsg:
   308                           	opt stack 0
   309  00FB24                     _sensoffms:
   310                           	opt stack 0
   311  00FB24  48                 	db	72
   312  00FB25  6F                 	db	111
   313  00FB26  6C                 	db	108
   314  00FB27  64                 	db	100
   315  00FB28  20                 	db	32
   316  00FB29  63                 	db	99
   317  00FB2A  68                 	db	104
   318  00FB2B  61                 	db	97
   319  00FB2C  6E                 	db	110
   320  00FB2D  6E                 	db	110
   321  00FB2E  65                 	db	101
   322  00FB2F  6C                 	db	108
   323  00FB30  20                 	db	32
   324  00FB31  62                 	db	98
   325  00FB32  75                 	db	117
   326  00FB33  74                 	db	116
   327  00FB34  74                 	db	116
   328  00FB35  6F                 	db	111
   329  00FB36  6E                 	db	110
   330  00FB37  20                 	db	32
   331  00FB38  6F                 	db	111
   332  00FB39  72                 	db	114
   333  00FB3A  20                 	db	32
   334  00FB3B  50                 	db	80
   335  00FB3C  75                 	db	117
   336  00FB3D  73                 	db	115
   337  00FB3E  68                 	db	104
   338  00FB3F  20                 	db	32
   339  00FB40  73                 	db	115
   340  00FB41  65                 	db	101
   341  00FB42  72                 	db	114
   342  00FB43  76                 	db	118
   343  00FB44  69                 	db	105
   344  00FB45  63                 	db	99
   345  00FB46  65                 	db	101
   346  00FB47  20                 	db	32
   347  00FB48  74                 	db	116
   348  00FB49  6F                 	db	111
   349  00FB4A  20                 	db	32
   350  00FB4B  20                 	db	32
   351  00FB4C  65                 	db	101
   352  00FB4D  78                 	db	120
   353  00FB4E  69                 	db	105
   354  00FB4F  74                 	db	116
   355  00FB50  00                 	db	0
   356  00FB51                     __end_of_sensoffms:
   357                           	opt stack 0
   358  00FB51                     _credclr:
   359                           	opt stack 0
   360  00FB51  50                 	db	80
   361  00FB52  75                 	db	117
   362  00FB53  73                 	db	115
   363  00FB54  68                 	db	104
   364  00FB55  20                 	db	32
   365  00FB56  62                 	db	98
   366  00FB57  75                 	db	117
   367  00FB58  74                 	db	116
   368  00FB59  74                 	db	116
   369  00FB5A  6F                 	db	111
   370  00FB5B  6E                 	db	110
   371  00FB5C  20                 	db	32
   372  00FB5D  31                 	db	49
   373  00FB5E  20                 	db	32
   374  00FB5F  74                 	db	116
   375  00FB60  6F                 	db	111
   376  00FB61  20                 	db	32
   377  00FB62  63                 	db	99
   378  00FB63  6C                 	db	108
   379  00FB64  65                 	db	101
   380  00FB65  61                 	db	97
   381  00FB66  72                 	db	114
   382  00FB67  20                 	db	32
   383  00FB68  63                 	db	99
   384  00FB69  72                 	db	114
   385  00FB6A  65                 	db	101
   386  00FB6B  64                 	db	100
   387  00FB6C  69                 	db	105
   388  00FB6D  74                 	db	116
   389  00FB6E  73                 	db	115
   390  00FB6F  20                 	db	32
   391  00FB70  20                 	db	32
   392  00FB71  20                 	db	32
   393  00FB72  61                 	db	97
   394  00FB73  6E                 	db	110
   395  00FB74  64                 	db	100
   396  00FB75  20                 	db	32
   397  00FB76  65                 	db	101
   398  00FB77  78                 	db	120
   399  00FB78  69                 	db	105
   400  00FB79  74                 	db	116
   401  00FB7A  00                 	db	0
   402  00FB7B                     __end_of_credclr:
   403                           	opt stack 0
   404  00FB7B                     _settimemsg:
   405                           	opt stack 0
   406  00FB7B  50                 	db	80
   407  00FB7C  72                 	db	114
   408  00FB7D  65                 	db	101
   409  00FB7E  73                 	db	115
   410  00FB7F  73                 	db	115
   411  00FB80  20                 	db	32
   412  00FB81  31                 	db	49
   413  00FB82  20                 	db	32
   414  00FB83  3D                 	db	61
   415  00FB84  20                 	db	32
   416  00FB85  2B                 	db	43
   417  00FB86  20                 	db	32
   418  00FB87  6F                 	db	111
   419  00FB88  72                 	db	114
   420  00FB89  20                 	db	32
   421  00FB8A  32                 	db	50
   422  00FB8B  20                 	db	32
   423  00FB8C  3D                 	db	61
   424  00FB8D  20                 	db	32
   425  00FB8E  2D                 	db	45
   426  00FB8F  20                 	db	32
   427  00FB90  20                 	db	32
   428  00FB91  50                 	db	80
   429  00FB92  72                 	db	114
   430  00FB93  65                 	db	101
   431  00FB94  73                 	db	115
   432  00FB95  73                 	db	115
   433  00FB96  20                 	db	32
   434  00FB97  38                 	db	56
   435  00FB98  20                 	db	32
   436  00FB99  74                 	db	116
   437  00FB9A  6F                 	db	111
   438  00FB9B  20                 	db	32
   439  00FB9C  45                 	db	69
   440  00FB9D  78                 	db	120
   441  00FB9E  69                 	db	105
   442  00FB9F  74                 	db	116
   443  00FBA0  00                 	db	0
   444  00FBA1                     __end_of_settimemsg:
   445                           	opt stack 0
   446  00FBA1                     _vendtest:
   447                           	opt stack 0
   448  00FBA1  20                 	db	32
   449  00FBA2  50                 	db	80
   450  00FBA3  75                 	db	117
   451  00FBA4  73                 	db	115
   452  00FBA5  68                 	db	104
   453  00FBA6  20                 	db	32
   454  00FBA7  62                 	db	98
   455  00FBA8  75                 	db	117
   456  00FBA9  74                 	db	116
   457  00FBAA  74                 	db	116
   458  00FBAB  6F                 	db	111
   459  00FBAC  6E                 	db	110
   460  00FBAD  20                 	db	32
   461  00FBAE  74                 	db	116
   462  00FBAF  6F                 	db	111
   463  00FBB0  20                 	db	32
   464  00FBB1  20                 	db	32
   465  00FBB2  20                 	db	32
   466  00FBB3  20                 	db	32
   467  00FBB4  20                 	db	32
   468  00FBB5  76                 	db	118
   469  00FBB6  65                 	db	101
   470  00FBB7  6E                 	db	110
   471  00FBB8  64                 	db	100
   472  00FBB9  00                 	db	0
   473  00FBBA                     __end_of_vendtest:
   474                           	opt stack 0
   475  00FBBA                     _priceexit:
   476                           	opt stack 0
   477  00FBBA  50                 	db	80
   478  00FBBB  72                 	db	114
   479  00FBBC  65                 	db	101
   480  00FBBD  73                 	db	115
   481  00FBBE  73                 	db	115
   482  00FBBF  20                 	db	32
   483  00FBC0  73                 	db	115
   484  00FBC1  65                 	db	101
   485  00FBC2  72                 	db	114
   486  00FBC3  76                 	db	118
   487  00FBC4  69                 	db	105
   488  00FBC5  63                 	db	99
   489  00FBC6  65                 	db	101
   490  00FBC7  20                 	db	32
   491  00FBC8  74                 	db	116
   492  00FBC9  6F                 	db	111
   493  00FBCA  20                 	db	32
   494  00FBCB  65                 	db	101
   495  00FBCC  78                 	db	120
   496  00FBCD  69                 	db	105
   497  00FBCE  74                 	db	116
   498  00FBCF  00                 	db	0
   499  00FBD0                     __end_of_priceexit:
   500                           	opt stack 0
   501  00FBD0                     _inithop:
   502                           	opt stack 0
   503  00FBD0  20                 	db	32
   504  00FBD1  20                 	db	32
   505  00FBD2  49                 	db	73
   506  00FBD3  6E                 	db	110
   507  00FBD4  69                 	db	105
   508  00FBD5  74                 	db	116
   509  00FBD6  69                 	db	105
   510  00FBD7  61                 	db	97
   511  00FBD8  6C                 	db	108
   512  00FBD9  69                 	db	105
   513  00FBDA  7A                 	db	122
   514  00FBDB  65                 	db	101
   515  00FBDC  20                 	db	32
   516  00FBDD  48                 	db	72
   517  00FBDE  6F                 	db	111
   518  00FBDF  70                 	db	112
   519  00FBE0  70                 	db	112
   520  00FBE1  65                 	db	101
   521  00FBE2  72                 	db	114
   522  00FBE3  00                 	db	0
   523  00FBE4                     __end_of_inithop:
   524                           	opt stack 0
   525  00FBE4                     _nochange:
   526                           	opt stack 0
   527  00FBE4  4E                 	db	78
   528  00FBE5  6F                 	db	111
   529  00FBE6  20                 	db	32
   530  00FBE7  43                 	db	67
   531  00FBE8  68                 	db	104
   532  00FBE9  61                 	db	97
   533  00FBEA  6E                 	db	110
   534  00FBEB  67                 	db	103
   535  00FBEC  65                 	db	101
   536  00FBED  20                 	db	32
   537  00FBEE  47                 	db	71
   538  00FBEF  69                 	db	105
   539  00FBF0  76                 	db	118
   540  00FBF1  65                 	db	101
   541  00FBF2  6E                 	db	110
   542  00FBF3  00                 	db	0
   543  00FBF4                     __end_of_nochange:
   544                           	opt stack 0
   545  00FBF4                     _senset:
   546                           	opt stack 0
   547  00FBF4  20                 	db	32
   548  00FBF5  20                 	db	32
   549  00FBF6  53                 	db	83
   550  00FBF7  65                 	db	101
   551  00FBF8  74                 	db	116
   552  00FBF9  75                 	db	117
   553  00FBFA  70                 	db	112
   554  00FBFB  20                 	db	32
   555  00FBFC  53                 	db	83
   556  00FBFD  65                 	db	101
   557  00FBFE  6E                 	db	110
   558  00FBFF  73                 	db	115
   559  00FC00  6F                 	db	111
   560  00FC01  72                 	db	114
   561  00FC02  00                 	db	0
   562  00FC03                     __end_of_senset:
   563                           	opt stack 0
   564  00FC03                     _notetest:
   565                           	opt stack 0
   566  00FC03  20                 	db	32
   567  00FC04  20                 	db	32
   568  00FC05  49                 	db	73
   569  00FC06  6E                 	db	110
   570  00FC07  73                 	db	115
   571  00FC08  65                 	db	101
   572  00FC09  72                 	db	114
   573  00FC0A  74                 	db	116
   574  00FC0B  20                 	db	32
   575  00FC0C  4E                 	db	78
   576  00FC0D  6F                 	db	111
   577  00FC0E  74                 	db	116
   578  00FC0F  65                 	db	101
   579  00FC10  00                 	db	0
   580  00FC11                     __end_of_notetest:
   581                           	opt stack 0
   582  00FC11                     _auditmsg:
   583                           	opt stack 0
   584  00FC11  20                 	db	32
   585  00FC12  20                 	db	32
   586  00FC13  41                 	db	65
   587  00FC14  75                 	db	117
   588  00FC15  64                 	db	100
   589  00FC16  69                 	db	105
   590  00FC17  74                 	db	116
   591  00FC18  20                 	db	32
   592  00FC19  4D                 	db	77
   593  00FC1A  6F                 	db	111
   594  00FC1B  64                 	db	100
   595  00FC1C  65                 	db	101
   596  00FC1D  00                 	db	0
   597  00FC1E                     __end_of_auditmsg:
   598                           	opt stack 0
   599  00FC1E                     _pricemsg:
   600                           	opt stack 0
   601  00FC1E  50                 	db	80
   602  00FC1F  72                 	db	114
   603  00FC20  69                 	db	105
   604  00FC21  63                 	db	99
   605  00FC22  65                 	db	101
   606  00FC23  20                 	db	32
   607  00FC24  52                 	db	82
   608  00FC25  00                 	db	0
   609  00FC26                     __end_of_pricemsg:
   610                           	opt stack 0
   611  00FC26                     _exit:
   612                           	opt stack 0
   613  00FC26  45                 	db	69
   614  00FC27  78                 	db	120
   615  00FC28  69                 	db	105
   616  00FC29  74                 	db	116
   617  00FC2A  00                 	db	0
   618  00FC2B                     __end_of_exit:
   619                           	opt stack 0
   620  00FC2B                     _hoperror:
   621                           	opt stack 0
   622  00FC2B  002E               	dw	46
   623  00FC2D                     __end_of_hoperror:
   624                           	opt stack 0
   625  00FC2D                     _chan8time:
   626                           	opt stack 0
   627  00FC2D  002D               	dw	45
   628  00FC2F                     __end_of_chan8time:
   629                           	opt stack 0
   630  00FC2F                     _chan7time:
   631                           	opt stack 0
   632  00FC2F  002C               	dw	44
   633  00FC31                     __end_of_chan7time:
   634                           	opt stack 0
   635  00FC31                     _chan6time:
   636                           	opt stack 0
   637  00FC31  002B               	dw	43
   638  00FC33                     __end_of_chan6time:
   639                           	opt stack 0
   640  00FC33                     _chan5time:
   641                           	opt stack 0
   642  00FC33  002A               	dw	42
   643  00FC35                     __end_of_chan5time:
   644                           	opt stack 0
   645  00FC35                     _chan4time:
   646                           	opt stack 0
   647  00FC35  0029               	dw	41
   648  00FC37                     __end_of_chan4time:
   649                           	opt stack 0
   650  00FC37                     _chan3time:
   651                           	opt stack 0
   652  00FC37  0028               	dw	40
   653  00FC39                     __end_of_chan3time:
   654                           	opt stack 0
   655  00FC39                     _chan2time:
   656                           	opt stack 0
   657  00FC39  0027               	dw	39
   658  00FC3B                     __end_of_chan2time:
   659                           	opt stack 0
   660  00FC3B                     _chan1time:
   661                           	opt stack 0
   662  00FC3B  0026               	dw	38
   663  00FC3D                     __end_of_chan1time:
   664                           	opt stack 0
   665  00FC3D                     _sensorflags:
   666                           	opt stack 0
   667  00FC3D  0025               	dw	37
   668  00FC3F                     __end_of_sensorflags:
   669                           	opt stack 0
   670  00FC3F                     _chan8linkbits:
   671                           	opt stack 0
   672  00FC3F  0024               	dw	36
   673  00FC41                     __end_of_chan8linkbits:
   674                           	opt stack 0
   675  00FC41                     _chan7linkbits:
   676                           	opt stack 0
   677  00FC41  0023               	dw	35
   678  00FC43                     __end_of_chan7linkbits:
   679                           	opt stack 0
   680  00FC43                     _chan6linkbits:
   681                           	opt stack 0
   682  00FC43  0022               	dw	34
   683  00FC45                     __end_of_chan6linkbits:
   684                           	opt stack 0
   685  00FC45                     _chan5linkbits:
   686                           	opt stack 0
   687  00FC45  0021               	dw	33
   688  00FC47                     __end_of_chan5linkbits:
   689                           	opt stack 0
   690  00FC47                     _chan4linkbits:
   691                           	opt stack 0
   692  00FC47  0020               	dw	32
   693  00FC49                     __end_of_chan4linkbits:
   694                           	opt stack 0
   695  00FC49                     _chan3linkbits:
   696                           	opt stack 0
   697  00FC49  001F               	dw	31
   698  00FC4B                     __end_of_chan3linkbits:
   699                           	opt stack 0
   700  00FC4B                     _chan2linkbits:
   701                           	opt stack 0
   702  00FC4B  001E               	dw	30
   703  00FC4D                     __end_of_chan2linkbits:
   704                           	opt stack 0
   705  00FC4D                     _chan1linkbits:
   706                           	opt stack 0
   707  00FC4D  001D               	dw	29
   708  00FC4F                     __end_of_chan1linkbits:
   709                           	opt stack 0
   710  00FC4F                     _hopcoin:
   711                           	opt stack 0
   712  00FC4F  001C               	dw	28
   713  00FC51                     __end_of_hopcoin:
   714                           	opt stack 0
   715  00FC51                     _cashoutv:
   716                           	opt stack 0
   717  00FC51  001A               	dw	26
   718  00FC53                     __end_of_cashoutv:
   719                           	opt stack 0
   720  00FC53                     _sensval:
   721                           	opt stack 0
   722  00FC53  0019               	dw	25
   723  00FC55                     __end_of_sensval:
   724                           	opt stack 0
   725  00FC55                     _notebits:
   726                           	opt stack 0
   727  00FC55  0018               	dw	24
   728  00FC57                     __end_of_notebits:
   729                           	opt stack 0
   730  00FC57                     _venderrors:
   731                           	opt stack 0
   732  00FC57  0017               	dw	23
   733  00FC59                     __end_of_venderrors:
   734                           	opt stack 0
   735  00FC59                     _pricestore:
   736                           	opt stack 0
   737  00FC59  000F               	dw	15
   738  00FC5B                     __end_of_pricestore:
   739                           	opt stack 0
   740  00FC5B                     _vendstore:
   741                           	opt stack 0
   742  00FC5B  0007               	dw	7
   743  00FC5D                     __end_of_vendstore:
   744                           	opt stack 0
   745  00FC5D                     _cashint:
   746                           	opt stack 0
   747  00FC5D  0004               	dw	4
   748  00FC5F                     __end_of_cashint:
   749                           	opt stack 0
   750  00FC5F                     _cashinv:
   751                           	opt stack 0
   752  00FC5F  0002               	dw	2
   753  00FC61                     __end_of_cashinv:
   754                           	opt stack 0
   755  00FC61                     _credmem:
   756                           	opt stack 0
   757  00FC61  0000               	dw	0
   758  00FC63                     __end_of_credmem:
   759                           	opt stack 0
   760  00FC63                     _secondadd:
   761                           	opt stack 0
   762  00FC63  1E46               	dw	7750
   763  00FC65                     __end_of_secondadd:
   764                           	opt stack 0
   765  00FC65                     _second_5:
   766                           	opt stack 0
   767  00FC65  0F23               	dw	3875
   768  00FC67                     __end_of_second_5:
   769                           	opt stack 0
   770  00FC67                     _second1:
   771                           	opt stack 0
   772  00FC67  E1BA               	dw	57786
   773  00FC69                     __end_of_second1:
   774                           	opt stack 0
   775  00FC69                     _cc_poll:
   776                           	opt stack 0
   777  00FC69  FE                 	db	254
   778  00FC6A                     __end_of_cc_poll:
   779                           	opt stack 0
   780  00FC6A                     _cc_adpoll:
   781                           	opt stack 0
   782  00FC6A  FD                 	db	253
   783  00FC6B                     __end_of_cc_adpoll:
   784                           	opt stack 0
   785  00FC6B                     _cc_serial:
   786                           	opt stack 0
   787  00FC6B  F2                 	db	242
   788  00FC6C                     __end_of_cc_serial:
   789                           	opt stack 0
   790  00FC6C                     _cc_newpin:
   791                           	opt stack 0
   792  00FC6C  DB                 	db	219
   793  00FC6D                     __end_of_cc_newpin:
   794                           	opt stack 0
   795  00FC6D                     _cc_pin:
   796                           	opt stack 0
   797  00FC6D  DA                 	db	218
   798  00FC6E                     __end_of_cc_pin:
   799                           	opt stack 0
   800  00FC6E                     _cc_level:
   801                           	opt stack 0
   802  00FC6E  EC                 	db	236
   803  00FC6F                     __end_of_cc_level:
   804                           	opt stack 0
   805  00FC6F                     _cc_stop:
   806                           	opt stack 0
   807  00FC6F  AC                 	db	172
   808  00FC70                     __end_of_cc_stop:
   809                           	opt stack 0
   810  00FC70                     _cc_countrq:
   811                           	opt stack 0
   812  00FC70  A8                 	db	168
   813  00FC71                     __end_of_cc_countrq:
   814                           	opt stack 0
   815  00FC71                     _cc_pay:
   816                           	opt stack 0
   817  00FC71  A7                 	db	167
   818  00FC72                     __end_of_cc_pay:
   819                           	opt stack 0
   820  00FC72                     _cc_status:
   821                           	opt stack 0
   822  00FC72  A6                 	db	166
   823  00FC73                     __end_of_cc_status:
   824                           	opt stack 0
   825  00FC73                     _cc_enable:
   826                           	opt stack 0
   827  00FC73  A4                 	db	164
   828  00FC74                     __end_of_cc_enable:
   829                           	opt stack 0
   830  00FC74                     _cc_test:
   831                           	opt stack 0
   832  00FC74  A3                 	db	163
   833  00FC75                     __end_of_cc_test:
   834                           	opt stack 0
   835  00FC75                     _cc_reset:
   836                           	opt stack 0
   837  00FC75  01                 	db	1
   838  00FC76                     __end_of_cc_reset:
   839                           	opt stack 0
   840  00FC76                     _mastadd:
   841                           	opt stack 0
   842  00FC76  01                 	db	1
   843  00FC77                     __end_of_mastadd:
   844                           	opt stack 0
   845  00FC77                     _hopadd:
   846                           	opt stack 0
   847  00FC77  03                 	db	3
   848  00FC78                     __end_of_hopadd:
   849                           	opt stack 0
   850  00FC78                     _theft_attempt:
   851                           	opt stack 0
   852  00FC78  0C                 	db	12
   853  00FC79                     __end_of_theft_attempt:
   854                           	opt stack 0
   855  00FC79                     _note_rejected:
   856                           	opt stack 0
   857  00FC79  0B                 	db	11
   858  00FC7A                     __end_of_note_rejected:
   859                           	opt stack 0
   860  00FC7A                     _invalid_escrow:
   861                           	opt stack 0
   862  00FC7A  0A                 	db	10
   863  00FC7B                     __end_of_invalid_escrow:
   864                           	opt stack 0
   865  00FC7B                     _acept_disabled:
   866                           	opt stack 0
   867  00FC7B  09                 	db	9
   868  00FC7C                     __end_of_acept_disabled:
   869                           	opt stack 0
   870  00FC7C                     _cashbox_err:
   871                           	opt stack 0
   872  00FC7C  08                 	db	8
   873  00FC7D                     __end_of_cashbox_err:
   874                           	opt stack 0
   875  00FC7D                     _note_removed:
   876                           	opt stack 0
   877  00FC7D  07                 	db	7
   878  00FC7E                     __end_of_note_removed:
   879                           	opt stack 0
   880  00FC7E                     _just_reset:
   881                           	opt stack 0
   882  00FC7E  06                 	db	6
   883  00FC7F                     __end_of_just_reset:
   884                           	opt stack 0
   885  00FC7F                     _jammed_err:
   886                           	opt stack 0
   887  00FC7F  05                 	db	5
   888  00FC80                     __end_of_jammed_err:
   889                           	opt stack 0
   890  00FC80                     _rom_error:
   891                           	opt stack 0
   892  00FC80  04                 	db	4
   893  00FC81                     __end_of_rom_error:
   894                           	opt stack 0
   895  00FC81                     _just_busy:
   896                           	opt stack 0
   897  00FC81  03                 	db	3
   898  00FC82                     __end_of_just_busy:
   899                           	opt stack 0
   900  00FC82                     _sens_error:
   901                           	opt stack 0
   902  00FC82  02                 	db	2
   903  00FC83                     __end_of_sens_error:
   904                           	opt stack 0
   905  00FC83                     _motr_error:
   906                           	opt stack 0
   907  00FC83  01                 	db	1
   908  00FC84                     __end_of_motr_error:
   909                           	opt stack 0
   910  00FC84                     _note_features:
   911                           	opt stack 0
   912  00FC84  33                 	db	51
   913  00FC85                     __end_of_note_features:
   914                           	opt stack 0
   915  00FC85                     _note_stacker:
   916                           	opt stack 0
   917  00FC85  36                 	db	54
   918  00FC86                     __end_of_note_stacker:
   919                           	opt stack 0
   920  00FC86                     _note_escrow:
   921                           	opt stack 0
   922  00FC86  35                 	db	53
   923  00FC87                     __end_of_note_escrow:
   924                           	opt stack 0
   925  00FC87                     _note_type:
   926                           	opt stack 0
   927  00FC87  34                 	db	52
   928  00FC88                     __end_of_note_type:
   929                           	opt stack 0
   930  00FC88                     _note_poll:
   931                           	opt stack 0
   932  00FC88  33                 	db	51
   933  00FC89                     __end_of_note_poll:
   934                           	opt stack 0
   935  00FC89                     _note_security:
   936                           	opt stack 0
   937  00FC89  32                 	db	50
   938  00FC8A                     __end_of_note_security:
   939                           	opt stack 0
   940  00FC8A                     _note_setup:
   941                           	opt stack 0
   942  00FC8A  31                 	db	49
   943  00FC8B                     __end_of_note_setup:
   944                           	opt stack 0
   945  00FC8B                     _note_reset:
   946                           	opt stack 0
   947  00FC8B  30                 	db	48
   948  00FC8C                     __end_of_note_reset:
   949                           	opt stack 0
   950  00FC8C                     _line4:
   951                           	opt stack 0
   952  00FC8C  54                 	db	84
   953  00FC8D                     __end_of_line4:
   954                           	opt stack 0
   955  00FC8D                     _line3:
   956                           	opt stack 0
   957  00FC8D  14                 	db	20
   958  00FC8E                     __end_of_line3:
   959                           	opt stack 0
   960  00FC8E                     _line2:
   961                           	opt stack 0
   962  00FC8E  40                 	db	64
   963  00FC8F                     __end_of_line2:
   964                           	opt stack 0
   965  00FC8F                     _line1:
   966                           	opt stack 0
   967  00FC8F  00                 	db	0
   968  00FC90                     __end_of_line1:
   969                           	opt stack 0
   970  00FC90                     _dispsl:
   971                           	opt stack 0
   972  00FC90  18                 	db	24
   973  00FC91                     __end_of_dispsl:
   974                           	opt stack 0
   975  00FC91                     _dispsr:
   976                           	opt stack 0
   977  00FC91  1B                 	db	27
   978  00FC92                     __end_of_dispsr:
   979                           	opt stack 0
   980  00FC92                     _dispoff:
   981                           	opt stack 0
   982  00FC92  08                 	db	8
   983  00FC93                     __end_of_dispoff:
   984                           	opt stack 0
   985  00FC93                     _dispshleft:
   986                           	opt stack 0
   987  00FC93  07                 	db	7
   988  00FC94                     __end_of_dispshleft:
   989                           	opt stack 0
   990  00FC94                     _dispshright:
   991                           	opt stack 0
   992  00FC94  05                 	db	5
   993  00FC95                     __end_of_dispshright:
   994                           	opt stack 0
   995  00FC95                     _dispcursor:
   996                           	opt stack 0
   997  00FC95  04                 	db	4
   998  00FC96                     __end_of_dispcursor:
   999                           	opt stack 0
  1000  00FC96                     _dispnormal:
  1001                           	opt stack 0
  1002  00FC96  06                 	db	6
  1003  00FC97                     __end_of_dispnormal:
  1004                           	opt stack 0
  1005  00FC97                     _dsphome:
  1006                           	opt stack 0
  1007  00FC97  02                 	db	2
  1008  00FC98                     __end_of_dsphome:
  1009                           	opt stack 0
  1010  00FC98                     _dispaddr:
  1011                           	opt stack 0
  1012  00FC98  A8                 	db	168
  1013  00FC99                     __end_of_dispaddr:
  1014                           	opt stack 0
  1015  00FC99                     _dispclr:
  1016                           	opt stack 0
  1017  00FC99  01                 	db	1
  1018  00FC9A                     __end_of_dispclr:
  1019                           	opt stack 0
  1020  00FC9A                     _dispon:
  1021                           	opt stack 0
  1022  00FC9A  0C                 	db	12
  1023  00FC9B                     __end_of_dispon:
  1024                           	opt stack 0
  1025  00FC9B                     _dispfunc3:
  1026                           	opt stack 0
  1027  00FC9B  2C                 	db	44
  1028  00FC9C                     __end_of_dispfunc3:
  1029                           	opt stack 0
  1030  00FC9C                     _dispfunc2:
  1031                           	opt stack 0
  1032  00FC9C  28                 	db	40
  1033  00FC9D                     __end_of_dispfunc2:
  1034                           	opt stack 0
  1035  00FC9D                     _dispfunc1:
  1036                           	opt stack 0
  1037  00FC9D  24                 	db	36
  1038  00FC9E                     __end_of_dispfunc1:
  1039                           	opt stack 0
  1040  00FC9E                     _servmsg:
  1041                           	opt stack 0
  1042  00FC9E  31                 	db	49
  1043  00FC9F  20                 	db	32
  1044  00FCA0  3D                 	db	61
  1045  00FCA1  20                 	db	32
  1046  00FCA2  41                 	db	65
  1047  00FCA3  75                 	db	117
  1048  00FCA4  64                 	db	100
  1049  00FCA5  69                 	db	105
  1050  00FCA6  74                 	db	116
  1051  00FCA7  20                 	db	32
  1052  00FCA8  32                 	db	50
  1053  00FCA9  20                 	db	32
  1054  00FCAA  3D                 	db	61
  1055  00FCAB  20                 	db	32
  1056  00FCAC  53                 	db	83
  1057  00FCAD  65                 	db	101
  1058  00FCAE  6E                 	db	110
  1059  00FCAF  73                 	db	115
  1060  00FCB0  6F                 	db	111
  1061  00FCB1  72                 	db	114
  1062  00FCB2  33                 	db	51
  1063  00FCB3  3D                 	db	61
  1064  00FCB4  48                 	db	72
  1065  00FCB5  6F                 	db	111
  1066  00FCB6  70                 	db	112
  1067  00FCB7  2D                 	db	45
  1068  00FCB8  43                 	db	67
  1069  00FCB9  6F                 	db	111
  1070  00FCBA  69                 	db	105
  1071  00FCBB  6E                 	db	110
  1072  00FCBC  20                 	db	32
  1073  00FCBD  34                 	db	52
  1074  00FCBE  3D                 	db	61
  1075  00FCBF  4E                 	db	78
  1076  00FCC0  6F                 	db	111
  1077  00FCC1  74                 	db	116
  1078  00FCC2  65                 	db	101
  1079  00FCC3  2D                 	db	45
  1080  00FCC4  65                 	db	101
  1081  00FCC5  6E                 	db	110
  1082  00FCC6  35                 	db	53
  1083  00FCC7  3D                 	db	61
  1084  00FCC8  43                 	db	67
  1085  00FCC9  72                 	db	114
  1086  00FCCA  65                 	db	101
  1087  00FCCB  64                 	db	100
  1088  00FCCC  2D                 	db	45
  1089  00FCCD  63                 	db	99
  1090  00FCCE  6C                 	db	108
  1091  00FCCF  72                 	db	114
  1092  00FCD0  20                 	db	32
  1093  00FCD1  36                 	db	54
  1094  00FCD2  3D                 	db	61
  1095  00FCD3  50                 	db	80
  1096  00FCD4  72                 	db	114
  1097  00FCD5  69                 	db	105
  1098  00FCD6  63                 	db	99
  1099  00FCD7  65                 	db	101
  1100  00FCD8  73                 	db	115
  1101  00FCD9  20                 	db	32
  1102  00FCDA  37                 	db	55
  1103  00FCDB  3D                 	db	61
  1104  00FCDC  56                 	db	86
  1105  00FCDD  65                 	db	101
  1106  00FCDE  6E                 	db	110
  1107  00FCDF  64                 	db	100
  1108  00FCE0  20                 	db	32
  1109  00FCE1  73                 	db	115
  1110  00FCE2  65                 	db	101
  1111  00FCE3  74                 	db	116
  1112  00FCE4  75                 	db	117
  1113  00FCE5  70                 	db	112
  1114  00FCE6  20                 	db	32
  1115  00FCE7  38                 	db	56
  1116  00FCE8  3D                 	db	61
  1117  00FCE9  45                 	db	69
  1118  00FCEA  78                 	db	120
  1119  00FCEB  69                 	db	105
  1120  00FCEC  74                 	db	116
  1121  00FCED  00                 	db	0
  1122  00FCEE                     __end_of_servmsg:
  1123                           	opt stack 0
  1124  00FCEE                     _vendsetup:
  1125                           	opt stack 0
  1126  00FCEE  50                 	db	80
  1127  00FCEF  75                 	db	117
  1128  00FCF0  73                 	db	115
  1129  00FCF1  68                 	db	104
  1130  00FCF2  20                 	db	32
  1131  00FCF3  31                 	db	49
  1132  00FCF4  20                 	db	32
  1133  00FCF5  3D                 	db	61
  1134  00FCF6  20                 	db	32
  1135  00FCF7  56                 	db	86
  1136  00FCF8  65                 	db	101
  1137  00FCF9  6E                 	db	110
  1138  00FCFA  64                 	db	100
  1139  00FCFB  20                 	db	32
  1140  00FCFC  54                 	db	84
  1141  00FCFD  69                 	db	105
  1142  00FCFE  6D                 	db	109
  1143  00FCFF  65                 	db	101
  1144  00FD00  2C                 	db	44
  1145  00FD01  20                 	db	32
  1146  00FD02  32                 	db	50
  1147  00FD03  20                 	db	32
  1148  00FD04  3D                 	db	61
  1149  00FD05  20                 	db	32
  1150  00FD06  43                 	db	67
  1151  00FD07  68                 	db	104
  1152  00FD08  61                 	db	97
  1153  00FD09  6E                 	db	110
  1154  00FD0A  20                 	db	32
  1155  00FD0B  4C                 	db	76
  1156  00FD0C  69                 	db	105
  1157  00FD0D  6E                 	db	110
  1158  00FD0E  6B                 	db	107
  1159  00FD0F  2C                 	db	44
  1160  00FD10  20                 	db	32
  1161  00FD11  20                 	db	32
  1162  00FD12  20                 	db	32
  1163  00FD13  20                 	db	32
  1164  00FD14  20                 	db	32
  1165  00FD15  20                 	db	32
  1166  00FD16  33                 	db	51
  1167  00FD17  20                 	db	32
  1168  00FD18  3D                 	db	61
  1169  00FD19  20                 	db	32
  1170  00FD1A  53                 	db	83
  1171  00FD1B  65                 	db	101
  1172  00FD1C  6E                 	db	110
  1173  00FD1D  73                 	db	115
  1174  00FD1E  6F                 	db	111
  1175  00FD1F  72                 	db	114
  1176  00FD20  20                 	db	32
  1177  00FD21  4F                 	db	79
  1178  00FD22  66                 	db	102
  1179  00FD23  66                 	db	102
  1180  00FD24  2C                 	db	44
  1181  00FD25  20                 	db	32
  1182  00FD26  20                 	db	32
  1183  00FD27  20                 	db	32
  1184  00FD28  20                 	db	32
  1185  00FD29  20                 	db	32
  1186  00FD2A  34                 	db	52
  1187  00FD2B  20                 	db	32
  1188  00FD2C  3D                 	db	61
  1189  00FD2D  20                 	db	32
  1190  00FD2E  52                 	db	82
  1191  00FD2F  65                 	db	101
  1192  00FD30  73                 	db	115
  1193  00FD31  65                 	db	101
  1194  00FD32  74                 	db	116
  1195  00FD33  2C                 	db	44
  1196  00FD34  20                 	db	32
  1197  00FD35  38                 	db	56
  1198  00FD36  20                 	db	32
  1199  00FD37  3D                 	db	61
  1200  00FD38  20                 	db	32
  1201  00FD39  65                 	db	101
  1202  00FD3A  78                 	db	120
  1203  00FD3B  69                 	db	105
  1204  00FD3C  74                 	db	116
  1205  00FD3D  00                 	db	0
  1206  00FD3E                     __end_of_vendsetup:
  1207                           	opt stack 0
  1208  00FD3E                     _setnotes:
  1209                           	opt stack 0
  1210  00FD3E  45                 	db	69
  1211  00FD3F  6E                 	db	110
  1212  00FD40  61                 	db	97
  1213  00FD41  62                 	db	98
  1214  00FD42  6C                 	db	108
  1215  00FD43  65                 	db	101
  1216  00FD44  20                 	db	32
  1217  00FD45  2F                 	db	47
  1218  00FD46  20                 	db	32
  1219  00FD47  44                 	db	68
  1220  00FD48  69                 	db	105
  1221  00FD49  73                 	db	115
  1222  00FD4A  61                 	db	97
  1223  00FD4B  62                 	db	98
  1224  00FD4C  6C                 	db	108
  1225  00FD4D  65                 	db	101
  1226  00FD4E  20                 	db	32
  1227  00FD4F  20                 	db	32
  1228  00FD50  20                 	db	32
  1229  00FD51  20                 	db	32
  1230  00FD52  31                 	db	49
  1231  00FD53  20                 	db	32
  1232  00FD54  3D                 	db	61
  1233  00FD55  20                 	db	32
  1234  00FD56  52                 	db	82
  1235  00FD57  31                 	db	49
  1236  00FD58  30                 	db	48
  1237  00FD59  2C                 	db	44
  1238  00FD5A  20                 	db	32
  1239  00FD5B  32                 	db	50
  1240  00FD5C  20                 	db	32
  1241  00FD5D  3D                 	db	61
  1242  00FD5E  20                 	db	32
  1243  00FD5F  52                 	db	82
  1244  00FD60  32                 	db	50
  1245  00FD61  30                 	db	48
  1246  00FD62  20                 	db	32
  1247  00FD63  20                 	db	32
  1248  00FD64  20                 	db	32
  1249  00FD65  20                 	db	32
  1250  00FD66  33                 	db	51
  1251  00FD67  20                 	db	32
  1252  00FD68  3D                 	db	61
  1253  00FD69  20                 	db	32
  1254  00FD6A  52                 	db	82
  1255  00FD6B  35                 	db	53
  1256  00FD6C  30                 	db	48
  1257  00FD6D  2C                 	db	44
  1258  00FD6E  20                 	db	32
  1259  00FD6F  34                 	db	52
  1260  00FD70  20                 	db	32
  1261  00FD71  3D                 	db	61
  1262  00FD72  20                 	db	32
  1263  00FD73  52                 	db	82
  1264  00FD74  31                 	db	49
  1265  00FD75  30                 	db	48
  1266  00FD76  30                 	db	48
  1267  00FD77  20                 	db	32
  1268  00FD78  20                 	db	32
  1269  00FD79  20                 	db	32
  1270  00FD7A  35                 	db	53
  1271  00FD7B  20                 	db	32
  1272  00FD7C  3D                 	db	61
  1273  00FD7D  20                 	db	32
  1274  00FD7E  52                 	db	82
  1275  00FD7F  32                 	db	50
  1276  00FD80  30                 	db	48
  1277  00FD81  30                 	db	48
  1278  00FD82  00                 	db	0
  1279  00FD83                     __end_of_setnotes:
  1280                           	opt stack 0
  1281  00FD83                     _pricesetm2:
  1282                           	opt stack 0
  1283  00FD83  50                 	db	80
  1284  00FD84  72                 	db	114
  1285  00FD85  65                 	db	101
  1286  00FD86  73                 	db	115
  1287  00FD87  73                 	db	115
  1288  00FD88  20                 	db	32
  1289  00FD89  63                 	db	99
  1290  00FD8A  68                 	db	104
  1291  00FD8B  61                 	db	97
  1292  00FD8C  6E                 	db	110
  1293  00FD8D  6E                 	db	110
  1294  00FD8E  65                 	db	101
  1295  00FD8F  6C                 	db	108
  1296  00FD90  20                 	db	32
  1297  00FD91  62                 	db	98
  1298  00FD92  75                 	db	117
  1299  00FD93  74                 	db	116
  1300  00FD94  74                 	db	116
  1301  00FD95  6F                 	db	111
  1302  00FD96  6E                 	db	110
  1303  00FD97  20                 	db	32
  1304  00FD98  20                 	db	32
  1305  00FD99  20                 	db	32
  1306  00FD9A  20                 	db	32
  1307  00FD9B  74                 	db	116
  1308  00FD9C  6F                 	db	111
  1309  00FD9D  20                 	db	32
  1310  00FD9E  73                 	db	115
  1311  00FD9F  65                 	db	101
  1312  00FDA0  74                 	db	116
  1313  00FDA1  20                 	db	32
  1314  00FDA2  70                 	db	112
  1315  00FDA3  72                 	db	114
  1316  00FDA4  69                 	db	105
  1317  00FDA5  63                 	db	99
  1318  00FDA6  65                 	db	101
  1319  00FDA7  20                 	db	32
  1320  00FDA8  20                 	db	32
  1321  00FDA9  20                 	db	32
  1322  00FDAA  20                 	db	32
  1323  00FDAB  20                 	db	32
  1324  00FDAC  20                 	db	32
  1325  00FDAD  53                 	db	83
  1326  00FDAE  65                 	db	101
  1327  00FDAF  72                 	db	114
  1328  00FDB0  76                 	db	118
  1329  00FDB1  69                 	db	105
  1330  00FDB2  63                 	db	99
  1331  00FDB3  65                 	db	101
  1332  00FDB4  20                 	db	32
  1333  00FDB5  3D                 	db	61
  1334  00FDB6  20                 	db	32
  1335  00FDB7  45                 	db	69
  1336  00FDB8  78                 	db	120
  1337  00FDB9  69                 	db	105
  1338  00FDBA  74                 	db	116
  1339  00FDBB  00                 	db	0
  1340  00FDBC                     __end_of_pricesetm2:
  1341                           	opt stack 0
  1342  00FDBC                     _chanlinkm:
  1343                           	opt stack 0
  1344  00FDBC  50                 	db	80
  1345  00FDBD  72                 	db	114
  1346  00FDBE  65                 	db	101
  1347  00FDBF  73                 	db	115
  1348  00FDC0  73                 	db	115
  1349  00FDC1  20                 	db	32
  1350  00FDC2  63                 	db	99
  1351  00FDC3  68                 	db	104
  1352  00FDC4  61                 	db	97
  1353  00FDC5  6E                 	db	110
  1354  00FDC6  6E                 	db	110
  1355  00FDC7  65                 	db	101
  1356  00FDC8  6C                 	db	108
  1357  00FDC9  20                 	db	32
  1358  00FDCA  62                 	db	98
  1359  00FDCB  75                 	db	117
  1360  00FDCC  74                 	db	116
  1361  00FDCD  74                 	db	116
  1362  00FDCE  6F                 	db	111
  1363  00FDCF  6E                 	db	110
  1364  00FDD0  20                 	db	32
  1365  00FDD1  20                 	db	32
  1366  00FDD2  20                 	db	32
  1367  00FDD3  20                 	db	32
  1368  00FDD4  74                 	db	116
  1369  00FDD5  6F                 	db	111
  1370  00FDD6  20                 	db	32
  1371  00FDD7  6C                 	db	108
  1372  00FDD8  69                 	db	105
  1373  00FDD9  6E                 	db	110
  1374  00FDDA  6B                 	db	107
  1375  00FDDB  20                 	db	32
  1376  00FDDC  74                 	db	116
  1377  00FDDD  6F                 	db	111
  1378  00FDDE  20                 	db	32
  1379  00FDDF  20                 	db	32
  1380  00FDE0  20                 	db	32
  1381  00FDE1  20                 	db	32
  1382  00FDE2  20                 	db	32
  1383  00FDE3  20                 	db	32
  1384  00FDE4  53                 	db	83
  1385  00FDE5  65                 	db	101
  1386  00FDE6  72                 	db	114
  1387  00FDE7  76                 	db	118
  1388  00FDE8  69                 	db	105
  1389  00FDE9  63                 	db	99
  1390  00FDEA  65                 	db	101
  1391  00FDEB  20                 	db	32
  1392  00FDEC  3D                 	db	61
  1393  00FDED  20                 	db	32
  1394  00FDEE  45                 	db	69
  1395  00FDEF  78                 	db	120
  1396  00FDF0  69                 	db	105
  1397  00FDF1  74                 	db	116
  1398  00FDF2  00                 	db	0
  1399  00FDF3                     __end_of_chanlinkm:
  1400                           	opt stack 0
  1401  00FDF3                     _hoppcoin:
  1402                           	opt stack 0
  1403  00FDF3  48                 	db	72
  1404  00FDF4  6F                 	db	111
  1405  00FDF5  70                 	db	112
  1406  00FDF6  70                 	db	112
  1407  00FDF7  65                 	db	101
  1408  00FDF8  72                 	db	114
  1409  00FDF9  20                 	db	32
  1410  00FDFA  43                 	db	67
  1411  00FDFB  6F                 	db	111
  1412  00FDFC  69                 	db	105
  1413  00FDFD  6E                 	db	110
  1414  00FDFE  20                 	db	32
  1415  00FDFF  20                 	db	32
  1416  00FE00  20                 	db	32
  1417  00FE01  20                 	db	32
  1418  00FE02  20                 	db	32
  1419  00FE03  20                 	db	32
  1420  00FE04  20                 	db	32
  1421  00FE05  20                 	db	32
  1422  00FE06  20                 	db	32
  1423  00FE07  42                 	db	66
  1424  00FE08  75                 	db	117
  1425  00FE09  74                 	db	116
  1426  00FE0A  74                 	db	116
  1427  00FE0B  6F                 	db	111
  1428  00FE0C  6E                 	db	110
  1429  00FE0D  20                 	db	32
  1430  00FE0E  31                 	db	49
  1431  00FE0F  20                 	db	32
  1432  00FE10  3D                 	db	61
  1433  00FE11  20                 	db	32
  1434  00FE12  2B                 	db	43
  1435  00FE13  20                 	db	32
  1436  00FE14  26                 	db	38
  1437  00FE15  20                 	db	32
  1438  00FE16  32                 	db	50
  1439  00FE17  20                 	db	32
  1440  00FE18  3D                 	db	61
  1441  00FE19  20                 	db	32
  1442  00FE1A  2D                 	db	45
  1443  00FE1B  20                 	db	32
  1444  00FE1C  56                 	db	86
  1445  00FE1D  61                 	db	97
  1446  00FE1E  6C                 	db	108
  1447  00FE1F  75                 	db	117
  1448  00FE20  65                 	db	101
  1449  00FE21  20                 	db	32
  1450  00FE22  3D                 	db	61
  1451  00FE23  20                 	db	32
  1452  00FE24  52                 	db	82
  1453  00FE25  00                 	db	0
  1454  00FE26                     __end_of_hoppcoin:
  1455                           	opt stack 0
  1456  00FE26                     _inscoin:
  1457                           	opt stack 0
  1458  00FE26  49                 	db	73
  1459  00FE27  6E                 	db	110
  1460  00FE28  73                 	db	115
  1461  00FE29  65                 	db	101
  1462  00FE2A  72                 	db	114
  1463  00FE2B  74                 	db	116
  1464  00FE2C  20                 	db	32
  1465  00FE2D  4E                 	db	78
  1466  00FE2E  6F                 	db	111
  1467  00FE2F  74                 	db	116
  1468  00FE30  65                 	db	101
  1469  00FE31  73                 	db	115
  1470  00FE32  20                 	db	32
  1471  00FE33  26                 	db	38
  1472  00FE34  20                 	db	32
  1473  00FE35  50                 	db	80
  1474  00FE36  72                 	db	114
  1475  00FE37  65                 	db	101
  1476  00FE38  73                 	db	115
  1477  00FE39  73                 	db	115
  1478  00FE3A  20                 	db	32
  1479  00FE3B  4C                 	db	76
  1480  00FE3C  69                 	db	105
  1481  00FE3D  67                 	db	103
  1482  00FE3E  68                 	db	104
  1483  00FE3F  74                 	db	116
  1484  00FE40  65                 	db	101
  1485  00FE41  64                 	db	100
  1486  00FE42  20                 	db	32
  1487  00FE43  42                 	db	66
  1488  00FE44  75                 	db	117
  1489  00FE45  74                 	db	116
  1490  00FE46  74                 	db	116
  1491  00FE47  6F                 	db	111
  1492  00FE48  6E                 	db	110
  1493  00FE49  20                 	db	32
  1494  00FE4A  54                 	db	84
  1495  00FE4B  6F                 	db	111
  1496  00FE4C  20                 	db	32
  1497  00FE4D  20                 	db	32
  1498  00FE4E  20                 	db	32
  1499  00FE4F  20                 	db	32
  1500  00FE50  20                 	db	32
  1501  00FE51  20                 	db	32
  1502  00FE52  56                 	db	86
  1503  00FE53  65                 	db	101
  1504  00FE54  6E                 	db	110
  1505  00FE55  64                 	db	100
  1506  00FE56  00                 	db	0
  1507  00FE57                     __end_of_inscoin:
  1508                           	opt stack 0
  1509  00FE57                     _vendtimem:
  1510                           	opt stack 0
  1511  00FE57  50                 	db	80
  1512  00FE58  75                 	db	117
  1513  00FE59  73                 	db	115
  1514  00FE5A  68                 	db	104
  1515  00FE5B  20                 	db	32
  1516  00FE5C  31                 	db	49
  1517  00FE5D  20                 	db	32
  1518  00FE5E  3D                 	db	61
  1519  00FE5F  20                 	db	32
  1520  00FE60  2B                 	db	43
  1521  00FE61  2E                 	db	46
  1522  00FE62  35                 	db	53
  1523  00FE63  20                 	db	32
  1524  00FE64  73                 	db	115
  1525  00FE65  65                 	db	101
  1526  00FE66  63                 	db	99
  1527  00FE67  6F                 	db	111
  1528  00FE68  6E                 	db	110
  1529  00FE69  64                 	db	100
  1530  00FE6A  20                 	db	32
  1531  00FE6B  50                 	db	80
  1532  00FE6C  75                 	db	117
  1533  00FE6D  73                 	db	115
  1534  00FE6E  68                 	db	104
  1535  00FE6F  20                 	db	32
  1536  00FE70  32                 	db	50
  1537  00FE71  20                 	db	32
  1538  00FE72  3D                 	db	61
  1539  00FE73  20                 	db	32
  1540  00FE74  2D                 	db	45
  1541  00FE75  2E                 	db	46
  1542  00FE76  35                 	db	53
  1543  00FE77  20                 	db	32
  1544  00FE78  73                 	db	115
  1545  00FE79  65                 	db	101
  1546  00FE7A  63                 	db	99
  1547  00FE7B  6F                 	db	111
  1548  00FE7C  6E                 	db	110
  1549  00FE7D  64                 	db	100
  1550  00FE7E  20                 	db	32
  1551  00FE7F  00                 	db	0
  1552  00FE80                     __end_of_vendtimem:
  1553                           	opt stack 0
  1554  00FE80                     _setimemsg:
  1555                           	opt stack 0
  1556  00FE80  50                 	db	80
  1557  00FE81  75                 	db	117
  1558  00FE82  73                 	db	115
  1559  00FE83  68                 	db	104
  1560  00FE84  20                 	db	32
  1561  00FE85  63                 	db	99
  1562  00FE86  68                 	db	104
  1563  00FE87  61                 	db	97
  1564  00FE88  6E                 	db	110
  1565  00FE89  6E                 	db	110
  1566  00FE8A  65                 	db	101
  1567  00FE8B  6C                 	db	108
  1568  00FE8C  20                 	db	32
  1569  00FE8D  62                 	db	98
  1570  00FE8E  75                 	db	117
  1571  00FE8F  74                 	db	116
  1572  00FE90  74                 	db	116
  1573  00FE91  6F                 	db	111
  1574  00FE92  6E                 	db	110
  1575  00FE93  20                 	db	32
  1576  00FE94  50                 	db	80
  1577  00FE95  75                 	db	117
  1578  00FE96  73                 	db	115
  1579  00FE97  68                 	db	104
  1580  00FE98  20                 	db	32
  1581  00FE99  73                 	db	115
  1582  00FE9A  65                 	db	101
  1583  00FE9B  72                 	db	114
  1584  00FE9C  76                 	db	118
  1585  00FE9D  69                 	db	105
  1586  00FE9E  63                 	db	99
  1587  00FE9F  65                 	db	101
  1588  00FEA0  20                 	db	32
  1589  00FEA1  74                 	db	116
  1590  00FEA2  6F                 	db	111
  1591  00FEA3  20                 	db	32
  1592  00FEA4  65                 	db	101
  1593  00FEA5  78                 	db	120
  1594  00FEA6  69                 	db	105
  1595  00FEA7  74                 	db	116
  1596  00FEA8  00                 	db	0
  1597  00FEA9                     __end_of_setimemsg:
  1598                           	opt stack 0
  1599  00FEA9                     _initnote:
  1600                           	opt stack 0
  1601  00FEA9  20                 	db	32
  1602  00FEAA  20                 	db	32
  1603  00FEAB  20                 	db	32
  1604  00FEAC  20                 	db	32
  1605  00FEAD  20                 	db	32
  1606  00FEAE  49                 	db	73
  1607  00FEAF  6E                 	db	110
  1608  00FEB0  69                 	db	105
  1609  00FEB1  74                 	db	116
  1610  00FEB2  69                 	db	105
  1611  00FEB3  61                 	db	97
  1612  00FEB4  6C                 	db	108
  1613  00FEB5  69                 	db	105
  1614  00FEB6  7A                 	db	122
  1615  00FEB7  65                 	db	101
  1616  00FEB8  20                 	db	32
  1617  00FEB9  20                 	db	32
  1618  00FEBA  20                 	db	32
  1619  00FEBB  20                 	db	32
  1620  00FEBC  20                 	db	32
  1621  00FEBD  20                 	db	32
  1622  00FEBE  20                 	db	32
  1623  00FEBF  20                 	db	32
  1624  00FEC0  20                 	db	32
  1625  00FEC1  20                 	db	32
  1626  00FEC2  4E                 	db	78
  1627  00FEC3  6F                 	db	111
  1628  00FEC4  74                 	db	116
  1629  00FEC5  65                 	db	101
  1630  00FEC6  20                 	db	32
  1631  00FEC7  52                 	db	82
  1632  00FEC8  65                 	db	101
  1633  00FEC9  61                 	db	97
  1634  00FECA  64                 	db	100
  1635  00FECB  65                 	db	101
  1636  00FECC  72                 	db	114
  1637  00FECD  00                 	db	0
  1638  00FECE                     __end_of_initnote:
  1639                           	opt stack 0
  1640  00FECE                     _chanresetmsg:
  1641                           	opt stack 0
  1642  00FECE  52                 	db	82
  1643  00FECF  65                 	db	101
  1644  00FED0  73                 	db	115
  1645  00FED1  65                 	db	101
  1646  00FED2  74                 	db	116
  1647  00FED3  20                 	db	32
  1648  00FED4  74                 	db	116
  1649  00FED5  6F                 	db	111
  1650  00FED6  20                 	db	32
  1651  00FED7  44                 	db	68
  1652  00FED8  65                 	db	101
  1653  00FED9  66                 	db	102
  1654  00FEDA  61                 	db	97
  1655  00FEDB  75                 	db	117
  1656  00FEDC  6C                 	db	108
  1657  00FEDD  74                 	db	116
  1658  00FEDE  20                 	db	32
  1659  00FEDF  20                 	db	32
  1660  00FEE0  20                 	db	32
  1661  00FEE1  20                 	db	32
  1662  00FEE2  53                 	db	83
  1663  00FEE3  74                 	db	116
  1664  00FEE4  61                 	db	97
  1665  00FEE5  72                 	db	114
  1666  00FEE6  74                 	db	116
  1667  00FEE7  20                 	db	32
  1668  00FEE8  41                 	db	65
  1669  00FEE9  67                 	db	103
  1670  00FEEA  61                 	db	97
  1671  00FEEB  69                 	db	105
  1672  00FEEC  6E                 	db	110
  1673  00FEED  00                 	db	0
  1674  00FEEE                     __end_of_chanresetmsg:
  1675                           	opt stack 0
  1676  00FEEE                     _sensoffmsg:
  1677                           	opt stack 0
  1678  00FEEE  50                 	db	80
  1679  00FEEF  75                 	db	117
  1680  00FEF0  73                 	db	115
  1681  00FEF1  68                 	db	104
  1682  00FEF2  20                 	db	32
  1683  00FEF3  31                 	db	49
  1684  00FEF4  20                 	db	32
  1685  00FEF5  3D                 	db	61
  1686  00FEF6  20                 	db	32
  1687  00FEF7  4F                 	db	79
  1688  00FEF8  6E                 	db	110
  1689  00FEF9  2C                 	db	44
  1690  00FEFA  20                 	db	32
  1691  00FEFB  32                 	db	50
  1692  00FEFC  20                 	db	32
  1693  00FEFD  3D                 	db	61
  1694  00FEFE  20                 	db	32
  1695  00FEFF  4F                 	db	79
  1696  00FF00  66                 	db	102
  1697  00FF01  66                 	db	102
  1698  00FF02  2C                 	db	44
  1699  00FF03  20                 	db	32
  1700  00FF04  38                 	db	56
  1701  00FF05  20                 	db	32
  1702  00FF06  3D                 	db	61
  1703  00FF07  20                 	db	32
  1704  00FF08  45                 	db	69
  1705  00FF09  78                 	db	120
  1706  00FF0A  69                 	db	105
  1707  00FF0B  74                 	db	116
  1708  00FF0C  00                 	db	0
  1709  00FF0D                     __end_of_sensoffmsg:
  1710                           	opt stack 0
  1711  00FF0D                     _noteerr:
  1712                           	opt stack 0
  1713  00FF0D  20                 	db	32
  1714  00FF0E  20                 	db	32
  1715  00FF0F  20                 	db	32
  1716  00FF10  4E                 	db	78
  1717  00FF11  6F                 	db	111
  1718  00FF12  74                 	db	116
  1719  00FF13  65                 	db	101
  1720  00FF14  20                 	db	32
  1721  00FF15  65                 	db	101
  1722  00FF16  72                 	db	114
  1723  00FF17  72                 	db	114
  1724  00FF18  6F                 	db	111
  1725  00FF19  72                 	db	114
  1726  00FF1A  20                 	db	32
  1727  00FF1B  20                 	db	32
  1728  00FF1C  20                 	db	32
  1729  00FF1D  20                 	db	32
  1730  00FF1E  20                 	db	32
  1731  00FF1F  63                 	db	99
  1732  00FF20  6F                 	db	111
  1733  00FF21  64                 	db	100
  1734  00FF22  65                 	db	101
  1735  00FF23  20                 	db	32
  1736  00FF24  3D                 	db	61
  1737  00FF25  20                 	db	32
  1738  00FF26  30                 	db	48
  1739  00FF27  78                 	db	120
  1740  00FF28  00                 	db	0
  1741  00FF29                     __end_of_noteerr:
  1742                           	opt stack 0
  1743  00FF29                     _clrline:
  1744                           	opt stack 0
  1745  00FF29  20                 	db	32
  1746  00FF2A  20                 	db	32
  1747  00FF2B  20                 	db	32
  1748  00FF2C  20                 	db	32
  1749  00FF2D  20                 	db	32
  1750  00FF2E  20                 	db	32
  1751  00FF2F  20                 	db	32
  1752  00FF30  20                 	db	32
  1753  00FF31  20                 	db	32
  1754  00FF32  20                 	db	32
  1755  00FF33  20                 	db	32
  1756  00FF34  20                 	db	32
  1757  00FF35  20                 	db	32
  1758  00FF36  20                 	db	32
  1759  00FF37  20                 	db	32
  1760  00FF38  20                 	db	32
  1761  00FF39  20                 	db	32
  1762  00FF3A  20                 	db	32
  1763  00FF3B  20                 	db	32
  1764  00FF3C  20                 	db	32
  1765  00FF3D  00                 	db	0
  1766  00FF3E                     __end_of_clrline:
  1767                           	opt stack 0
  1768  00FF3E                     _timemsg:
  1769                           	opt stack 0
  1770  00FF3E  54                 	db	84
  1771  00FF3F  69                 	db	105
  1772  00FF40  6D                 	db	109
  1773  00FF41  65                 	db	101
  1774  00FF42  20                 	db	32
  1775  00FF43  69                 	db	105
  1776  00FF44  6E                 	db	110
  1777  00FF45  20                 	db	32
  1778  00FF46  31                 	db	49
  1779  00FF47  2F                 	db	47
  1780  00FF48  32                 	db	50
  1781  00FF49  73                 	db	115
  1782  00FF4A  65                 	db	101
  1783  00FF4B  63                 	db	99
  1784  00FF4C  20                 	db	32
  1785  00FF4D  3D                 	db	61
  1786  00FF4E  20                 	db	32
  1787  00FF4F  00                 	db	0
  1788  00FF50                     __end_of_timemsg:
  1789                           	opt stack 0
  1790  00FF50                     _pricesetmsg:
  1791                           	opt stack 0
  1792  00FF50  20                 	db	32
  1793  00FF51  20                 	db	32
  1794  00FF52  20                 	db	32
  1795  00FF53  50                 	db	80
  1796  00FF54  72                 	db	114
  1797  00FF55  69                 	db	105
  1798  00FF56  63                 	db	99
  1799  00FF57  65                 	db	101
  1800  00FF58  20                 	db	32
  1801  00FF59  73                 	db	115
  1802  00FF5A  65                 	db	101
  1803  00FF5B  74                 	db	116
  1804  00FF5C  20                 	db	32
  1805  00FF5D  6D                 	db	109
  1806  00FF5E  6F                 	db	111
  1807  00FF5F  64                 	db	100
  1808  00FF60  65                 	db	101
  1809  00FF61  00                 	db	0
  1810  00FF62                     __end_of_pricesetmsg:
  1811                           	opt stack 0
  1812  00FF62                     _creditclr:
  1813                           	opt stack 0
  1814  00FF62  43                 	db	67
  1815  00FF63  72                 	db	114
  1816  00FF64  65                 	db	101
  1817  00FF65  64                 	db	100
  1818  00FF66  69                 	db	105
  1819  00FF67  74                 	db	116
  1820  00FF68  73                 	db	115
  1821  00FF69  20                 	db	32
  1822  00FF6A  43                 	db	67
  1823  00FF6B  6C                 	db	108
  1824  00FF6C  65                 	db	101
  1825  00FF6D  61                 	db	97
  1826  00FF6E  72                 	db	114
  1827  00FF6F  65                 	db	101
  1828  00FF70  64                 	db	100
  1829  00FF71  00                 	db	0
  1830  00FF72                     __end_of_creditclr:
  1831                           	opt stack 0
  1832  00FF72                     _dacmsg:
  1833                           	opt stack 0
  1834  00FF72  53                 	db	83
  1835  00FF73  65                 	db	101
  1836  00FF74  6E                 	db	110
  1837  00FF75  73                 	db	115
  1838  00FF76  69                 	db	105
  1839  00FF77  74                 	db	116
  1840  00FF78  69                 	db	105
  1841  00FF79  76                 	db	118
  1842  00FF7A  69                 	db	105
  1843  00FF7B  74                 	db	116
  1844  00FF7C  79                 	db	121
  1845  00FF7D  20                 	db	32
  1846  00FF7E  00                 	db	0
  1847  00FF7F                     __end_of_dacmsg:
  1848                           	opt stack 0
  1849  00FF7F                     _credits:
  1850                           	opt stack 0
  1851  00FF7F  20                 	db	32
  1852  00FF80  20                 	db	32
  1853  00FF81  43                 	db	67
  1854  00FF82  72                 	db	114
  1855  00FF83  65                 	db	101
  1856  00FF84  64                 	db	100
  1857  00FF85  69                 	db	105
  1858  00FF86  74                 	db	116
  1859  00FF87  20                 	db	32
  1860  00FF88  3D                 	db	61
  1861  00FF89  20                 	db	32
  1862  00FF8A  52                 	db	82
  1863  00FF8B  00                 	db	0
  1864  00FF8C                     __end_of_credits:
  1865                           	opt stack 0
  1866  00FF8C                     _chanmsg:
  1867                           	opt stack 0
  1868  00FF8C  20                 	db	32
  1869  00FF8D  20                 	db	32
  1870  00FF8E  20                 	db	32
  1871  00FF8F  43                 	db	67
  1872  00FF90  68                 	db	104
  1873  00FF91  61                 	db	97
  1874  00FF92  6E                 	db	110
  1875  00FF93  6E                 	db	110
  1876  00FF94  65                 	db	101
  1877  00FF95  6C                 	db	108
  1878  00FF96  20                 	db	32
  1879  00FF97  00                 	db	0
  1880  00FF98                     __end_of_chanmsg:
  1881                           	opt stack 0
  1882  00FF98                     _linkmsg:
  1883                           	opt stack 0
  1884  00FF98  6C                 	db	108
  1885  00FF99  69                 	db	105
  1886  00FF9A  6E                 	db	110
  1887  00FF9B  6B                 	db	107
  1888  00FF9C  65                 	db	101
  1889  00FF9D  64                 	db	100
  1890  00FF9E  20                 	db	32
  1891  00FF9F  74                 	db	116
  1892  00FFA0  6F                 	db	111
  1893  00FFA1  20                 	db	32
  1894  00FFA2  3A                 	db	58
  1895  00FFA3  00                 	db	0
  1896  00FFA4                     __end_of_linkmsg:
  1897                           	opt stack 0
  1898  00FFA4                     _sensmsg:
  1899                           	opt stack 0
  1900  00FFA4  53                 	db	83
  1901  00FFA5  65                 	db	101
  1902  00FFA6  6E                 	db	110
  1903  00FFA7  73                 	db	115
  1904  00FFA8  6F                 	db	111
  1905  00FFA9  72                 	db	114
  1906  00FFAA  20                 	db	32
  1907  00FFAB  69                 	db	105
  1908  00FFAC  73                 	db	115
  1909  00FFAD  20                 	db	32
  1910  00FFAE  00                 	db	0
  1911  00FFAF                     __end_of_sensmsg:
  1912                           	opt stack 0
  1913  00FFAF                     _clrmsg:
  1914                           	opt stack 0
  1915  00FFAF  20                 	db	32
  1916  00FFB0  20                 	db	32
  1917  00FFB1  20                 	db	32
  1918  00FFB2  20                 	db	32
  1919  00FFB3  20                 	db	32
  1920  00FFB4  20                 	db	32
  1921  00FFB5  20                 	db	32
  1922  00FFB6  20                 	db	32
  1923  00FFB7  20                 	db	32
  1924  00FFB8  00                 	db	0
  1925  00FFB9                     __end_of_clrmsg:
  1926                           	opt stack 0
  1927  00FFB9                     _disabled:
  1928                           	opt stack 0
  1929  00FFB9  20                 	db	32
  1930  00FFBA  64                 	db	100
  1931  00FFBB  69                 	db	105
  1932  00FFBC  73                 	db	115
  1933  00FFBD  61                 	db	97
  1934  00FFBE  62                 	db	98
  1935  00FFBF  6C                 	db	108
  1936  00FFC0  65                 	db	101
  1937  00FFC1  64                 	db	100
  1938  00FFC2  00                 	db	0
  1939  00FFC3                     __end_of_disabled:
  1940                           	opt stack 0
  1941  00FFC3                     _enabled:
  1942                           	opt stack 0
  1943  00FFC3  20                 	db	32
  1944  00FFC4  65                 	db	101
  1945  00FFC5  6E                 	db	110
  1946  00FFC6  61                 	db	97
  1947  00FFC7  62                 	db	98
  1948  00FFC8  6C                 	db	108
  1949  00FFC9  65                 	db	101
  1950  00FFCA  64                 	db	100
  1951  00FFCB  20                 	db	32
  1952  00FFCC  00                 	db	0
  1953  00FFCD                     __end_of_enabled:
  1954                           	opt stack 0
  1955  00FFCD                     _tenrand:
  1956                           	opt stack 0
  1957  00FFCD  20                 	db	32
  1958  00FFCE  20                 	db	32
  1959  00FFCF  20                 	db	32
  1960  00FFD0  52                 	db	82
  1961  00FFD1  31                 	db	49
  1962  00FFD2  30                 	db	48
  1963  00FFD3  20                 	db	32
  1964  00FFD4  20                 	db	32
  1965  00FFD5  00                 	db	0
  1966  00FFD6                     __end_of_tenrand:
  1967                           	opt stack 0
  1968  00FFD6                     _twohundredrand:
  1969                           	opt stack 0
  1970  00FFD6  20                 	db	32
  1971  00FFD7  20                 	db	32
  1972  00FFD8  52                 	db	82
  1973  00FFD9  32                 	db	50
  1974  00FFDA  30                 	db	48
  1975  00FFDB  30                 	db	48
  1976  00FFDC  20                 	db	32
  1977  00FFDD  00                 	db	0
  1978  00FFDE                     __end_of_twohundredrand:
  1979                           	opt stack 0
  1980  00FFDE                     _hundredrand:
  1981                           	opt stack 0
  1982  00FFDE  20                 	db	32
  1983  00FFDF  20                 	db	32
  1984  00FFE0  52                 	db	82
  1985  00FFE1  31                 	db	49
  1986  00FFE2  30                 	db	48
  1987  00FFE3  30                 	db	48
  1988  00FFE4  20                 	db	32
  1989  00FFE5  00                 	db	0
  1990  00FFE6                     __end_of_hundredrand:
  1991                           	opt stack 0
  1992  00FFE6                     _fiftyrand:
  1993                           	opt stack 0
  1994  00FFE6  20                 	db	32
  1995  00FFE7  20                 	db	32
  1996  00FFE8  52                 	db	82
  1997  00FFE9  35                 	db	53
  1998  00FFEA  30                 	db	48
  1999  00FFEB  20                 	db	32
  2000  00FFEC  20                 	db	32
  2001  00FFED  00                 	db	0
  2002  00FFEE                     __end_of_fiftyrand:
  2003                           	opt stack 0
  2004  00FFEE                     _twentyrand:
  2005                           	opt stack 0
  2006  00FFEE  20                 	db	32
  2007  00FFEF  20                 	db	32
  2008  00FFF0  52                 	db	82
  2009  00FFF1  32                 	db	50
  2010  00FFF2  30                 	db	48
  2011  00FFF3  20                 	db	32
  2012  00FFF4  20                 	db	32
  2013  00FFF5  00                 	db	0
  2014  00FFF6                     __end_of_twentyrand:
  2015                           	opt stack 0
  2016  00FFF6                     _offmsg:
  2017                           	opt stack 0
  2018  00FFF6  4F                 	db	79
  2019  00FFF7  66                 	db	102
  2020  00FFF8  66                 	db	102
  2021  00FFF9  00                 	db	0
  2022  00FFFA                     __end_of_offmsg:
  2023                           	opt stack 0
  2024  00FFFA                     _onmsg:
  2025                           	opt stack 0
  2026  00FFFA  4F                 	db	79
  2027  00FFFB  6E                 	db	110
  2028  00FFFC  20                 	db	32
  2029  00FFFD  00                 	db	0
  2030  00FFFE                     __end_of_onmsg:
  2031                           	opt stack 0
  2032  00FFFE  00                 	db	0	; dummy byte at the end
  2033  0000                     
  2034                           	psect	nvBANK0
  2035  0000AC                     __pnvBANK0:
  2036                           	opt stack 0
  2037  0000AC                     _timer0ReloadVal16bit:
  2038                           	opt stack 0
  2039  0000AC                     	ds	2
  2040  0000AE                     _timer5ReloadVal:
  2041                           	opt stack 0
  2042  0000AE                     	ds	2
  2043  0000B0                     _timer3ReloadVal:
  2044                           	opt stack 0
  2045  0000B0                     	ds	2
  2046  0000B2                     _timer1ReloadVal:
  2047                           	opt stack 0
  2048  0000B2                     	ds	2
  2049  0000                     _RX2PPSbits	set	3725
  2050  0000                     _RB5PPS	set	3828
  2051  0000                     _PPSLOCKbits	set	3744
  2052  0000                     _PPSLOCK	set	3744
  2053  0000                     _PIR4bits	set	3790
  2054  0000                     _PIR7bits	set	3793
  2055  0000                     _IPR0bits	set	3770
  2056  0000                     _PMD5	set	3814
  2057  0000                     _PMD4	set	3813
  2058  0000                     _PMD3	set	3812
  2059  0000                     _PMD2	set	3811
  2060  0000                     _PMD1	set	3810
  2061  0000                     _PMD0	set	3809
  2062  0000                     _OSCTUNE	set	3805
  2063  0000                     _OSCFRQ	set	3806
  2064  0000                     _OSCEN	set	3804
  2065  0000                     _OSCCON3	set	3802
  2066  0000                     _OSCCON1	set	3800
  2067  0000                     _PIR3bits	set	3789
  2068  0000                     _PIR0bits	set	3786
  2069  0000                     _RC6PPS	set	3837
  2070  0000                     _RX1PPSbits	set	3765
  2071  0000                     _PIE0bits	set	3778
  2072  0000                     _CMOUT	set	3901
  2073  0000                     _DAC1CON1	set	3892
  2074  0000                     _DAC1CON0	set	3891
  2075  0000                     _CMOUTbits	set	3901
  2076  0000                     _CM1PCH	set	3900
  2077  0000                     _CM1NCH	set	3899
  2078  0000                     _CM1CON1	set	3898
  2079  0000                     _CM1CON0	set	3897
  2080  0000                     _ODCOND	set	3876
  2081  0000                     _ODCONC	set	3871
  2082  0000                     _ODCONB	set	3863
  2083  0000                     _ODCONA	set	3855
  2084  0000                     _ODCONE	set	3884
  2085  0000                     _WPUC	set	3872
  2086  0000                     _WPUA	set	3856
  2087  0000                     _WPUB	set	3864
  2088  0000                     _WPUE	set	3885
  2089  0000                     _WPUD	set	3877
  2090  0000                     _ANSELA	set	3857
  2091  0000                     _ANSELE	set	3886
  2092  0000                     _ANSELD	set	3878
  2093  0000                     _ANSELB	set	3865
  2094  0000                     _ANSELC	set	3873
  2095  0000                     _PORTBbits	set	3982
  2096  0000                     _BAUD1CONbits	set	3999
  2097  0000                     _LATCbits	set	3973
  2098  0000                     _TX1STAbits	set	3998
  2099  0000                     _PORTA	set	3981
  2100  0000                     _PORTD	set	3984
  2101  0000                     _PR4	set	4022
  2102  0000                     _TMR4	set	4021
  2103  0000                     _T4CONbits	set	4023
  2104  0000                     _T4RSTbits	set	4026
  2105  0000                     _T4HLTbits	set	4024
  2106  0000                     _T4CON	set	4023
  2107  0000                     _T4TMR	set	4021
  2108  0000                     _T4PR	set	4022
  2109  0000                     _T4RST	set	4026
  2110  0000                     _T4HLT	set	4024
  2111  0000                     _T4CLKCON	set	4025
  2112  0000                     _PR2	set	4028
  2113  0000                     _TMR2	set	4027
  2114  0000                     _T2CONbits	set	4029
  2115  0000                     _T2RSTbits	set	4032
  2116  0000                     _T2HLTbits	set	4030
  2117  0000                     _T2CON	set	4029
  2118  0000                     _T2TMR	set	4027
  2119  0000                     _T2PR	set	4028
  2120  0000                     _T2RST	set	4032
  2121  0000                     _T2HLT	set	4030
  2122  0000                     _T2CLKCON	set	4031
  2123  0000                     _T0CON0bits	set	4053
  2124  0000                     _T0CON0	set	4053
  2125  0000                     _TMR0L	set	4051
  2126  0000                     _TMR0H	set	4052
  2127  0000                     _T0CON1	set	4054
  2128  0000                     _T5GCONbits	set	4036
  2129  0000                     _T5CONbits	set	4035
  2130  0000                     _T5CON	set	4035
  2131  0000                     _TMR5L	set	4033
  2132  0000                     _TMR5H	set	4034
  2133  0000                     _T5CLK	set	4038
  2134  0000                     _T5GATE	set	4037
  2135  0000                     _T5GCON	set	4036
  2136  0000                     _T3GCONbits	set	4042
  2137  0000                     _T3CONbits	set	4041
  2138  0000                     _T3CON	set	4041
  2139  0000                     _TMR3L	set	4039
  2140  0000                     _TMR3H	set	4040
  2141  0000                     _T3CLK	set	4044
  2142  0000                     _T3GATE	set	4043
  2143  0000                     _T3GCON	set	4042
  2144  0000                     _T1GCONbits	set	4048
  2145  0000                     _T1CONbits	set	4047
  2146  0000                     _T1CON	set	4047
  2147  0000                     _TMR1L	set	4045
  2148  0000                     _TMR1H	set	4046
  2149  0000                     _T1CLK	set	4050
  2150  0000                     _T1GATE	set	4049
  2151  0000                     _T1GCON	set	4048
  2152  0000                     _NVMDAT	set	3968
  2153  0000                     _NVMADRL	set	3966
  2154  0000                     _NVMADRH	set	3967
  2155  0000                     _NVMCON2	set	3970
  2156  0000                     _TABLAT	set	4085
  2157  0000                     _TBLPTRL	set	4086
  2158  0000                     _TBLPTRH	set	4087
  2159  0000                     _TBLPTRU	set	4088
  2160  0000                     _NVMCON1bits	set	3969
  2161  0000                     _INTCONbits	set	4082
  2162  0000                     _TX1REG	set	3994
  2163  0000                     _RC1REG	set	3993
  2164  0000                     _RC1STAbits	set	3997
  2165  0000                     _SP1BRGH	set	3996
  2166  0000                     _SP1BRGL	set	3995
  2167  0000                     _TX1STA	set	3998
  2168  0000                     _RC1STA	set	3997
  2169  0000                     _BAUD1CON	set	3999
  2170  0000                     _TRISD	set	3979
  2171  0000                     _TRISC	set	3978
  2172  0000                     _TRISB	set	3977
  2173  0000                     _TRISA	set	3976
  2174  0000                     _TRISE	set	3980
  2175  0000                     _LATC	set	3973
  2176  0000                     _LATB	set	3972
  2177  0000                     _LATA	set	3971
  2178  0000                     _LATD	set	3974
  2179  0000                     _LATE	set	3975
  2180  0000                     _LATA6	set	31774
  2181  0000                     _LATA7	set	31775
  2182                           
  2183                           	psect	nvCOMRAMh
  2184  00004C                     __pnvCOMRAMh:
  2185                           	opt stack 0
  2186  00004C                     _count:
  2187                           	opt stack 0
  2188  00004C                     	ds	1
  2189                           
  2190                           ; #config settings
  2191  0000                     
  2192                           	psect	cinit
  2193  011B32                     __pcinit:
  2194                           	opt stack 0
  2195  011B32                     start_initialization:
  2196                           	opt stack 0
  2197  011B32                     __initialization:
  2198                           	opt stack 0
  2199                           
  2200                           ; Initialize objects allocated to BANK0 (1 bytes)
  2201                           ; load TBLPTR registers with __pidataBANK0
  2202  011B32  0E96               	movlw	low __pidataBANK0
  2203  011B34  6EF6               	movwf	tblptrl,c
  2204  011B36  0E21               	movlw	high __pidataBANK0
  2205  011B38  6EF7               	movwf	tblptrh,c
  2206  011B3A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2207  011B3C  6EF8               	movwf	tblptru,c
  2208  011B3E  0009               	tblrd		*+	;fetch initializer
  2209  011B40  CFF5 F0B4          	movff	tablat,__pdataBANK0
  2210                           
  2211                           ; Initialize objects allocated to COMRAMh (1 bytes)
  2212                           ; load TBLPTR registers with __pidataCOMRAMh
  2213  011B44  0E97               	movlw	low __pidataCOMRAMh
  2214  011B46  6EF6               	movwf	tblptrl,c
  2215  011B48  0E21               	movlw	high __pidataCOMRAMh
  2216  011B4A  6EF7               	movwf	tblptrh,c
  2217  011B4C  0E01               	movlw	low (__pidataCOMRAMh shr (0+16))
  2218  011B4E  6EF8               	movwf	tblptru,c
  2219  011B50  0009               	tblrd		*+	;fetch initializer
  2220  011B52  CFF5 F04D          	movff	tablat,__pdataCOMRAMh
  2221                           
  2222                           ; Clear objects allocated to BANK0 (60 bytes)
  2223  011B56  EE00  F060         	lfsr	0,__pbssBANK0
  2224  011B5A  0E3C               	movlw	60
  2225  011B5C                     clear_0:
  2226  011B5C  6AEE               	clrf	postinc0,c
  2227  011B5E  06E8               	decf	wreg,f,c
  2228  011B60  E1FD               	bnz	clear_0
  2229                           
  2230                           ; Clear objects allocated to COMRAMh (32 bytes)
  2231  011B62  EE00  F02C         	lfsr	0,__pbssCOMRAMh
  2232  011B66  0E20               	movlw	32
  2233  011B68                     clear_1:
  2234  011B68  6AEE               	clrf	postinc0,c
  2235  011B6A  06E8               	decf	wreg,f,c
  2236  011B6C  E1FD               	bnz	clear_1
  2237                           
  2238                           ; Clear objects allocated to COMRAMl (1 bytes)
  2239  011B6E  6A4E               	clrf	__pbssCOMRAMl& (0+255),c
  2240  011B70                     end_of_initialization:
  2241                           	opt stack 0
  2242  011B70                     __end_of__initialization:
  2243                           	opt stack 0
  2244  011B70  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2245  011B72  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2246  011B74  0100               	movlb	0
  2247  011B76  EFA6  F085         	goto	_main	;jump to C main() function
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           
  2255                           	psect	bssCOMRAMh
  2256  00002C                     __pbssCOMRAMh:
  2257                           	opt stack 0
  2258  00002C                     _venflags:
  2259                           	opt stack 0
  2260  00002C                     	ds	3
  2261  00002F                     _hpserial:
  2262                           	opt stack 0
  2263  00002F                     	ds	3
  2264  000032                     _dbcount:
  2265                           	opt stack 0
  2266  000032                     	ds	2
  2267  000034                     _venderr:
  2268                           	opt stack 0
  2269  000034                     	ds	1
  2270  000035                     _senschk:
  2271                           	opt stack 0
  2272  000035                     	ds	1
  2273  000036                     _senspos:
  2274                           	opt stack 0
  2275  000036                     	ds	1
  2276  000037                     _sensorval:
  2277                           	opt stack 0
  2278  000037                     	ds	1
  2279  000038                     _vendprice:
  2280                           	opt stack 0
  2281  000038                     	ds	1
  2282  000039                     _buttons:
  2283                           	opt stack 0
  2284  000039                     	ds	1
  2285  00003A                     _cash:
  2286                           	opt stack 0
  2287  00003A                     	ds	1
  2288  00003B                     _credit:
  2289                           	opt stack 0
  2290  00003B                     	ds	1
  2291  00003C                     _noteen_byte:
  2292                           	opt stack 0
  2293  00003C                     	ds	1
  2294  00003D                     _noteen:
  2295                           	opt stack 0
  2296  00003D                     	ds	1
  2297  00003E                     _mdbflags:
  2298                           	opt stack 0
  2299  00003E                     	ds	1
  2300  00003F                     _chkbyte:
  2301                           	opt stack 0
  2302  00003F                     	ds	1
  2303  000040                     _notebyte:
  2304                           	opt stack 0
  2305  000040                     	ds	1
  2306  000041                     _mcount:
  2307                           	opt stack 0
  2308  000041                     	ds	1
  2309  000042                     _dspposition:
  2310                           	opt stack 0
  2311  000042                     	ds	1
  2312  000043                     _ercode:
  2313                           	opt stack 0
  2314  000043                     	ds	1
  2315  000044                     _stradd:
  2316                           	opt stack 0
  2317  000044                     	ds	1
  2318  000045                     _lcdata:
  2319                           	opt stack 0
  2320  000045                     	ds	1
  2321  000046                     _bflag:
  2322                           	opt stack 0
  2323  000046                     	ds	1
  2324  000047                     _pnvcash:
  2325                           	opt stack 0
  2326  000047                     	ds	3
  2327  00004A                     _pvcash:
  2328                           	opt stack 0
  2329  00004A                     	ds	2
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           
  2337                           	psect	dataCOMRAMh
  2338  00004D                     __pdataCOMRAMh:
  2339                           	opt stack 0
  2340  00004D                     _notenum:
  2341                           	opt stack 0
  2342  00004D                     	ds	1
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           postinc0	equ	0xFEE
  2348                           wreg	equ	0xFE8
  2349                           
  2350                           	psect	bssCOMRAMl
  2351  00004E                     __pbssCOMRAMl:
  2352                           	opt stack 0
  2353  00004E                     _cctflags:
  2354                           	opt stack 0
  2355  00004E                     	ds	1
  2356                           tblptru	equ	0xFF8
  2357                           tblptrh	equ	0xFF7
  2358                           tblptrl	equ	0xFF6
  2359                           tablat	equ	0xFF5
  2360                           postinc0	equ	0xFEE
  2361                           wreg	equ	0xFE8
  2362                           
  2363                           	psect	bssBANK0
  2364  000060                     __pbssBANK0:
  2365                           	opt stack 0
  2366  000060                     _mdbdata:
  2367                           	opt stack 0
  2368  000060                     	ds	32
  2369  000080                     _tvends:
  2370                           	opt stack 0
  2371  000080                     	ds	8
  2372  000088                     _nvcash:
  2373                           	opt stack 0
  2374  000088                     	ds	3
  2375  00008B                     _hexnum:
  2376                           	opt stack 0
  2377  00008B                     	ds	3
  2378  00008E                     _vcashout:
  2379                           	opt stack 0
  2380  00008E                     	ds	2
  2381  000090                     _vcash:
  2382                           	opt stack 0
  2383  000090                     	ds	2
  2384  000092                     _change:
  2385                           	opt stack 0
  2386  000092                     	ds	1
  2387  000093                     _command:
  2388                           	opt stack 0
  2389  000093                     	ds	1
  2390  000094                     _nobytes:
  2391                           	opt stack 0
  2392  000094                     	ds	1
  2393  000095                     _dest:
  2394                           	opt stack 0
  2395  000095                     	ds	1
  2396  000096                     _mdbtxbyte:
  2397                           	opt stack 0
  2398  000096                     	ds	1
  2399  000097                     _errorflags:
  2400                           	opt stack 0
  2401  000097                     	ds	1
  2402  000098                     _slvadd:
  2403                           	opt stack 0
  2404  000098                     	ds	1
  2405  000099                     _lcdaddress:
  2406                           	opt stack 0
  2407  000099                     	ds	1
  2408  00009A                     _lcdline:
  2409                           	opt stack 0
  2410  00009A                     	ds	1
  2411  00009B                     _lcdfunc:
  2412                           	opt stack 0
  2413  00009B                     	ds	1
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           postinc0	equ	0xFEE
  2419                           wreg	equ	0xFE8
  2420                           
  2421                           	psect	dataBANK0
  2422  0000B4                     __pdataBANK0:
  2423                           	opt stack 0
  2424  0000B4                     _hopercount:
  2425                           	opt stack 0
  2426  0000B4                     	ds	1
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           
  2434                           	psect	cstackBANK0
  2435  00009C                     __pcstackBANK0:
  2436                           	opt stack 0
  2437  00009C                     ??_lcd_init:
  2438  00009C                     ??_Link_chan:
  2439  00009C                     off_sens@channel:
  2440                           	opt stack 0
  2441  00009C                     Reset_settings@chanlinkbits:
  2442                           	opt stack 0
  2443  00009C                     displ_hex@value:
  2444                           	opt stack 0
  2445                           
  2446                           ; 8 bytes @ 0x0
  2447  00009C                     	ds	1
  2448  00009D                     off_sens@chanbit:
  2449                           	opt stack 0
  2450                           
  2451                           ; 1 bytes @ 0x1
  2452  00009D                     	ds	1
  2453  00009E                     Link_chan@chanbit:
  2454                           	opt stack 0
  2455  00009E                     off_sens@senseflags:
  2456                           	opt stack 0
  2457                           
  2458                           ; 1 bytes @ 0x2
  2459  00009E                     	ds	1
  2460  00009F                     Link_chan@channel:
  2461                           	opt stack 0
  2462                           
  2463                           ; 1 bytes @ 0x3
  2464  00009F                     	ds	1
  2465  0000A0                     Link_chan@linkflags:
  2466                           	opt stack 0
  2467                           
  2468                           ; 1 bytes @ 0x4
  2469  0000A0                     	ds	1
  2470  0000A1                     ??_Chan_link:
  2471                           
  2472                           ; 1 bytes @ 0x5
  2473  0000A1                     	ds	3
  2474  0000A4                     displ_hex@hexnumsave:
  2475                           	opt stack 0
  2476                           
  2477                           ; 3 bytes @ 0x8
  2478  0000A4                     	ds	3
  2479  0000A7                     displ_hex@i:
  2480                           	opt stack 0
  2481                           
  2482                           ; 1 bytes @ 0xB
  2483  0000A7                     	ds	1
  2484  0000A8                     ??_set_price:
  2485  0000A8                     ??_Vend_timeset:
  2486  0000A8                     Hopper_coin@coinval:
  2487                           	opt stack 0
  2488  0000A8                     Sensor_set@dacpos:
  2489                           	opt stack 0
  2490                           
  2491                           ; 1 bytes @ 0xC
  2492  0000A8                     	ds	2
  2493  0000AA                     set_price@buttons:
  2494                           	opt stack 0
  2495  0000AA                     Vend_timeset@chantime:
  2496                           	opt stack 0
  2497                           
  2498                           ; 1 bytes @ 0xE
  2499  0000AA                     	ds	1
  2500  0000AB                     set_price@channel:
  2501                           	opt stack 0
  2502  0000AB                     Vend_timeset@channel:
  2503                           	opt stack 0
  2504                           
  2505                           ; 1 bytes @ 0xF
  2506  0000AB                     	ds	1
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           postinc0	equ	0xFEE
  2512                           wreg	equ	0xFE8
  2513                           
  2514                           	psect	cstackCOMRAMh
  2515  00000B                     __pcstackCOMRAMh:
  2516                           	opt stack 0
  2517  00000B                     ??_INTERRUPT_InterruptManagerHigh:
  2518  00000B                     
  2519                           ; 1 bytes @ 0x0
  2520  00000B                     	ds	18
  2521  00001D                     ??_TMR3_Initialize:
  2522  00001D                     ??_TMR5_Initialize:
  2523  00001D                     ??_TMR1_Initialize:
  2524  00001D                     ??_TMR0_Initialize:
  2525  00001D                     ??_butin:
  2526  00001D                     ??_switch_read:
  2527  00001D                     ??_Reset_hopper:
  2528  00001D                     ?___ltdiv:
  2529                           	opt stack 0
  2530  00001D                     ?___ltmod:
  2531                           	opt stack 0
  2532  00001D                     EUSART1_Write@txData:
  2533                           	opt stack 0
  2534  00001D                     DAC1_SetOutput@inputData:
  2535                           	opt stack 0
  2536  00001D                     read_busy@savelate:
  2537                           	opt stack 0
  2538  00001D                     Read_Service@senval:
  2539                           	opt stack 0
  2540  00001D                     get_channel@channel:
  2541                           	opt stack 0
  2542  00001D                     init_mdbdata@initdata:
  2543                           	opt stack 0
  2544  00001D                     DATAEE_WriteByte@bAdd:
  2545                           	opt stack 0
  2546  00001D                     DATAEE_ReadByte@bAdd:
  2547                           	opt stack 0
  2548  00001D                     ___ltdiv@dividend:
  2549                           	opt stack 0
  2550  00001D                     ___ltmod@dividend:
  2551                           	opt stack 0
  2552                           
  2553                           ; 3 bytes @ 0x12
  2554  00001D                     	ds	1
  2555  00001E                     read_busy@savelatd:
  2556                           	opt stack 0
  2557  00001E                     butin@butons:
  2558                           	opt stack 0
  2559  00001E                     get_channel@butons:
  2560                           	opt stack 0
  2561  00001E                     init_mdbdata@i:
  2562                           	opt stack 0
  2563  00001E                     mdb_transmit@txbyte:
  2564                           	opt stack 0
  2565                           
  2566                           ; 1 bytes @ 0x13
  2567  00001E                     	ds	1
  2568  00001F                     ??_mdb_unlock:
  2569  00001F                     ??_butindb:
  2570  00001F                     DATAEE_WriteByte@bData:
  2571                           	opt stack 0
  2572  00001F                     lcd_write@savelatd:
  2573                           	opt stack 0
  2574  00001F                     mdb_comm@mcount:
  2575                           	opt stack 0
  2576  00001F                     Init_vendmem@chanlinkbits:
  2577                           	opt stack 0
  2578  00001F                     Read_NVstore@storeadd:
  2579                           	opt stack 0
  2580                           
  2581                           ; 2 bytes @ 0x14
  2582  00001F                     	ds	1
  2583  000020                     DATAEE_WriteByte@GIEBitValue:
  2584                           	opt stack 0
  2585  000020                     lcd_write@lcdata:
  2586                           	opt stack 0
  2587  000020                     mdb_comm@slvadd:
  2588                           	opt stack 0
  2589  000020                     ___ltdiv@divisor:
  2590                           	opt stack 0
  2591  000020                     ___ltmod@divisor:
  2592                           	opt stack 0
  2593                           
  2594                           ; 3 bytes @ 0x15
  2595  000020                     	ds	1
  2596  000021                     lcd_dispadd@lcdaddress:
  2597                           	opt stack 0
  2598  000021                     credit_subtract@credit:
  2599                           	opt stack 0
  2600  000021                     butindb@butval:
  2601                           	opt stack 0
  2602  000021                     mdb_comm@i:
  2603                           	opt stack 0
  2604  000021                     Init_vendmem@chanlink:
  2605                           	opt stack 0
  2606  000021                     Write_NVstore@storeadd:
  2607                           	opt stack 0
  2608  000021                     Read_NVstore@storemem:
  2609                           	opt stack 0
  2610                           
  2611                           ; 2 bytes @ 0x16
  2612  000021                     	ds	1
  2613  000022                     ??_mdb_reset:
  2614  000022                     lcd_dispadd@lcdatasave:
  2615                           	opt stack 0
  2616  000022                     butindb@butt:
  2617                           	opt stack 0
  2618  000022                     mdb_poll@i:
  2619                           	opt stack 0
  2620                           
  2621                           ; 1 bytes @ 0x17
  2622  000022                     	ds	1
  2623  000023                     lcd_writeC@lcdata:
  2624                           	opt stack 0
  2625  000023                     Init_vendmem@i:
  2626                           	opt stack 0
  2627  000023                     Read_NVstore@storesize:
  2628                           	opt stack 0
  2629  000023                     mdb_reset@i:
  2630                           	opt stack 0
  2631  000023                     ___ltmod@counter:
  2632                           	opt stack 0
  2633  000023                     Write_NVstore@storemem:
  2634                           	opt stack 0
  2635  000023                     ___ltdiv@quotient:
  2636                           	opt stack 0
  2637                           
  2638                           ; 3 bytes @ 0x18
  2639  000023                     	ds	1
  2640  000024                     ??_displ_code:
  2641  000024                     lcd_test@character:
  2642                           	opt stack 0
  2643  000024                     Read_NVstore@i:
  2644                           	opt stack 0
  2645  000024                     mdb_reset@i_3717:
  2646                           	opt stack 0
  2647  000024                     lcd_string@lcdstring:
  2648                           	opt stack 0
  2649                           
  2650                           ; 2 bytes @ 0x19
  2651  000024                     	ds	1
  2652  000025                     ??_mdb_init:
  2653  000025                     Write_NVstore@storesize:
  2654                           	opt stack 0
  2655                           
  2656                           ; 1 bytes @ 0x1A
  2657  000025                     	ds	1
  2658  000026                     displ_code@ercode:
  2659                           	opt stack 0
  2660  000026                     lcd_string@lcdline:
  2661                           	opt stack 0
  2662  000026                     Write_NVstore@i:
  2663                           	opt stack 0
  2664  000026                     ___ltdiv@counter:
  2665                           	opt stack 0
  2666                           
  2667                           ; 1 bytes @ 0x1B
  2668  000026                     	ds	1
  2669  000027                     ??_lcd_string:
  2670  000027                     Update_cashaudit@addcash:
  2671                           	opt stack 0
  2672  000027                     mdb_init@i:
  2673                           	opt stack 0
  2674  000027                     Update_coinsout@coinsout:
  2675                           	opt stack 0
  2676  000027                     displ_hex@hexnum:
  2677                           	opt stack 0
  2678                           
  2679                           ; 3 bytes @ 0x1C
  2680  000027                     	ds	1
  2681  000028                     ??_hopper_pay:
  2682  000028                     credit_add@credit:
  2683                           	opt stack 0
  2684                           
  2685                           ; 1 bytes @ 0x1D
  2686  000028                     	ds	1
  2687  000029                     ??_Clear_cred:
  2688  000029                     ??_Reset_settings:
  2689  000029                     displ_lflags@linkflgs:
  2690                           	opt stack 0
  2691  000029                     displ_sflags@chanel:
  2692                           	opt stack 0
  2693  000029                     displ_nendis@note2disp:
  2694                           	opt stack 0
  2695  000029                     hopper_pay@change:
  2696                           	opt stack 0
  2697  000029                     displ_note@notestring:
  2698                           	opt stack 0
  2699                           
  2700                           ; 2 bytes @ 0x1E
  2701  000029                     	ds	1
  2702  00002A                     displ_sens@dmsgpos:
  2703                           	opt stack 0
  2704  00002A                     displ_lflags@chanel:
  2705                           	opt stack 0
  2706  00002A                     displ_sflags@chanbit:
  2707                           	opt stack 0
  2708  00002A                     displ_time@channel:
  2709                           	opt stack 0
  2710  00002A                     displ_nendis@x:
  2711                           	opt stack 0
  2712  00002A                     displ_credit@cash:
  2713                           	opt stack 0
  2714  00002A                     displ_price@vendprice:
  2715                           	opt stack 0
  2716  00002A                     Update_Hopcoin@direction:
  2717                           	opt stack 0
  2718  00002A                     hopper_pay@outcoins:
  2719                           	opt stack 0
  2720                           
  2721                           ; 1 bytes @ 0x1F
  2722  00002A                     	ds	1
  2723  00002B                     displ_sens@smsgpos:
  2724                           	opt stack 0
  2725  00002B                     displ_lflags@lchan:
  2726                           	opt stack 0
  2727  00002B                     displ_sflags@senseflags:
  2728                           	opt stack 0
  2729  00002B                     displ_time@motortime:
  2730                           	opt stack 0
  2731  00002B                     Update_Hopcoin@newval:
  2732                           	opt stack 0
  2733  00002B                     enable_notes@notenum:
  2734                           	opt stack 0
  2735                           
  2736                           ; 1 bytes @ 0x20
  2737  00002B                     	ds	1
  2738  00002C                     tblptru	equ	0xFF8
  2739                           tblptrh	equ	0xFF7
  2740                           tblptrl	equ	0xFF6
  2741                           tablat	equ	0xFF5
  2742                           postinc0	equ	0xFEE
  2743                           wreg	equ	0xFE8
  2744                           
  2745                           ; 1 bytes @ 0x21
  2746                           
  2747                           	psect	cstackCOMRAMl
  2748  000000                     __pcstackCOMRAMl:
  2749                           	opt stack 0
  2750  000000                     tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           postinc0	equ	0xFEE
  2755                           wreg	equ	0xFE8
  2756                           
  2757                           ; 1 bytes @ 0x0
  2758 ;;
  2759 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2760 ;;
  2761 ;; *************** function _main *****************
  2762 ;; Defined at:
  2763 ;;		line 56 in file "main.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels required when called:   13
  2783 ;; This function calls:
  2784 ;;		_CMP1_GetOutputStatus
  2785 ;;		_SYSTEM_Initialize
  2786 ;;		_credit_add
  2787 ;;		_credit_subtract
  2788 ;;		_displ_credit
  2789 ;;		_displ_noteer
  2790 ;;		_enter_service
  2791 ;;		_lcd_init
  2792 ;;		_lcd_string
  2793 ;;		_mdb_init
  2794 ;;		_mdb_poll
  2795 ;;		_vend_init
  2796 ;; This function is called by:
  2797 ;;		Startup code after reset
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text0
  2802  010B4C                     __ptext0:
  2803                           	opt stack 0
  2804  010B4C                     _main:
  2805                           	opt stack 18
  2806                           
  2807                           ;main.c: 59: SYSTEM_Initialize();
  2808                           
  2809                           ;incstack = 0
  2810  010B4C  EC72  F08E         	call	_SYSTEM_Initialize	;wreg free
  2811                           
  2812                           ;main.c: 61: lcd_init();
  2813  010B50  EC64  F086         	call	_lcd_init	;wreg free
  2814                           
  2815                           ;main.c: 62: vend_init();
  2816  010B54  ECB6  F088         	call	_vend_init	;wreg free
  2817  010B58                     l991:
  2818  010B58  F000               	nop		;# 
  2819                           
  2820                           ;main.c: 67: DAC1CON1 = 0x00;
  2821  010B5A  0E00               	movlw	0
  2822  010B5C  010F               	movlb	15	; () banked
  2823  010B5E  6F34               	movwf	52,b	;volatile
  2824                           
  2825                           ; BSR set to: 15
  2826                           ;main.c: 68: if (!CMP1_GetOutputStatus())
  2827  010B60  EC97  F090         	call	_CMP1_GetOutputStatus	;wreg free
  2828  010B64  0900               	iorlw	0
  2829  010B66  B4D8               	btfsc	status,2,c
  2830                           
  2831                           ;main.c: 69: {
  2832                           ;main.c: 70: venflags.service = 1;
  2833  010B68  8E2C               	bsf	_venflags,7,c
  2834                           
  2835                           ;main.c: 72: }
  2836                           ;main.c: 73: DAC1CON1 = sensorval;
  2837  010B6A  C037  FF34         	movff	_sensorval,3892	;volatile
  2838                           
  2839                           ;main.c: 75: if(venflags.service == 1)
  2840  010B6E  BE2C               	btfsc	_venflags,7,c
  2841                           
  2842                           ;main.c: 76: {
  2843                           ;main.c: 77: enter_service();
  2844  010B70  EC22  F088         	call	_enter_service	;wreg free
  2845                           
  2846                           ;main.c: 78: }
  2847                           ;main.c: 80: if(venflags.inscoin == 1)
  2848  010B74  A42C               	btfss	_venflags,2,c
  2849  010B76  D010               	goto	l994
  2850                           
  2851                           ;main.c: 81: {
  2852                           ;main.c: 82: lcd_string(inscoin, line1);
  2853  010B78  0E26               	movlw	low _inscoin
  2854  010B7A  6E24               	movwf	lcd_string@lcdstring,c
  2855  010B7C  0EFE               	movlw	high _inscoin
  2856  010B7E  6E25               	movwf	lcd_string@lcdstring+1,c
  2857  010B80  0E8F               	movlw	low _line1
  2858  010B82  6EF6               	movwf	tblptrl,c
  2859  010B84                     	if	1	;There is more than 1 active tblptr byte
  2860  010B84  0EFC               	movlw	high _line1
  2861  010B86  6EF7               	movwf	tblptrh,c
  2862  010B88                     	endif
  2863  010B88                     	if	1	;There are 3 active tblptr bytes
  2864  010B88  0E00               	movlw	low (_line1 shr (0+16))
  2865  010B8A  6EF8               	movwf	tblptru,c
  2866  010B8C                     	endif
  2867  010B8C  0008               	tblrd		*
  2868  010B8E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  2869  010B92  EC75  F087         	call	_lcd_string	;wreg free
  2870                           
  2871                           ;main.c: 83: venflags.inscoin = 0;
  2872  010B96  942C               	bcf	_venflags,2,c
  2873  010B98                     l994:
  2874                           
  2875                           ;main.c: 84: }
  2876                           ;main.c: 85: if(venflags.initialrun == 1)
  2877  010B98  AA2C               	btfss	_venflags,5,c
  2878  010B9A  D007               	goto	l995
  2879                           
  2880                           ;main.c: 86: {
  2881                           ;main.c: 87: credit_add(0x00);
  2882  010B9C  0E00               	movlw	0
  2883  010B9E  EC2B  F08C         	call	_credit_add
  2884                           
  2885                           ;main.c: 88: credit_subtract(0x00);
  2886  010BA2  0E00               	movlw	0
  2887  010BA4  EC83  F08C         	call	_credit_subtract
  2888                           
  2889                           ;main.c: 89: venflags.initialrun = 0;
  2890  010BA8  9A2C               	bcf	_venflags,5,c
  2891  010BAA                     l995:
  2892                           
  2893                           ;main.c: 91: }
  2894                           ;main.c: 92: if(venflags.credisplay == 1)
  2895  010BAA  B82C               	btfsc	_venflags,4,c
  2896                           
  2897                           ;main.c: 93: {
  2898                           ;main.c: 94: displ_credit();
  2899  010BAC  ECDE  F08E         	call	_displ_credit	;wreg free
  2900                           
  2901                           ;main.c: 95: }
  2902                           ;main.c: 97: if(PIR4bits.TMR3IF)
  2903  010BB0  010E               	movlb	14	; () banked
  2904  010BB2  A5CE               	btfss	206,2,b	;volatile
  2905  010BB4  D7D1               	goto	l991
  2906                           
  2907                           ; BSR set to: 14
  2908                           ;main.c: 98: {
  2909                           ;main.c: 99: credit = mdb_poll();
  2910  010BB6  EC00  F080         	call	_mdb_poll	;wreg free
  2911  010BBA  6E3B               	movwf	_credit,c	;volatile
  2912                           
  2913                           ;main.c: 100: if(credit != 0x00)
  2914  010BBC  503B               	movf	_credit,w,c	;volatile
  2915  010BBE  B4D8               	btfsc	status,2,c
  2916  010BC0  D021               	goto	l998
  2917                           
  2918                           ;main.c: 101: {
  2919                           ;main.c: 102: if(mdbflags.noteerr == 1)
  2920  010BC2  B23E               	btfsc	_mdbflags,1,c
  2921  010BC4  D00D               	goto	l1000
  2922  010BC6  D01A               	goto	l999
  2923  010BC8  EC63  F08B         	call	_mdb_init	;wreg free
  2924  010BCC  D003               	goto	l1006
  2925  010BCE                     l1003:
  2926                           
  2927                           ;main.c: 113: if(mdbflags.vending)
  2928  010BCE  A83E               	btfss	_mdbflags,4,c
  2929                           
  2930                           ;main.c: 117: else
  2931                           ;main.c: 118: {
  2932                           ;main.c: 119: mdb_init();
  2933                           
  2934                           ;main.c: 116: }
  2935                           
  2936                           ;main.c: 114: {
  2937                           ;main.c: 115: credit = 0;
  2938  010BD0  EC63  F08B         	call	_mdb_init	;wreg free
  2939  010BD4                     l1006:
  2940                           
  2941                           ;main.c: 127: credit = 0;
  2942                           
  2943                           ;main.c: 126: case 0x0C : mdbflags.noteerr == 0;
  2944                           
  2945                           ;main.c: 125: break;
  2946                           
  2947                           ;main.c: 124: credit = 0;
  2948  010BD4  0E00               	movlw	0
  2949  010BD6  6E3B               	movwf	_credit,c	;volatile
  2950                           
  2951                           ;main.c: 128: break;
  2952  010BD8  D7BF               	goto	l991
  2953  010BDA  EC5D  F08F         	call	_displ_noteer	;wreg free
  2954                           
  2955                           ;main.c: 130: }
  2956  010BDE  D7BC               	goto	l991
  2957  010BE0                     l1000:
  2958  010BE0  503B               	movf	_credit,w,c	;volatile
  2959                           
  2960                           ; Switch size 1, requested type "space"
  2961                           ; Number of cases is 4, Range of values is 6 to 16
  2962                           ; switch strategies available:
  2963                           ; Name         Instructions Cycles
  2964                           ; simple_byte           13     7 (average)
  2965                           ;	Chosen strategy is simple_byte
  2966  010BE2  0A06               	xorlw	6	; case 6
  2967  010BE4  B4D8               	btfsc	status,2,c
  2968  010BE6  D7F0               	goto	l1001
  2969  010BE8  0A0F               	xorlw	15	; case 9
  2970  010BEA  B4D8               	btfsc	status,2,c
  2971  010BEC  D7F0               	goto	l1003
  2972  010BEE  0A05               	xorlw	5	; case 12
  2973  010BF0  B4D8               	btfsc	status,2,c
  2974  010BF2  D7F0               	goto	l1006
  2975  010BF4  0A1C               	xorlw	28	; case 16
  2976  010BF6  B4D8               	btfsc	status,2,c
  2977  010BF8  D7ED               	goto	l1006
  2978  010BFA  D7EF               	goto	l1008
  2979  010BFC                     l999:
  2980                           
  2981                           ;main.c: 132: else
  2982                           ;main.c: 133: {
  2983                           ;main.c: 134: credit_add(credit);
  2984  010BFC  503B               	movf	_credit,w,c	;volatile
  2985  010BFE  EC2B  F08C         	call	_credit_add
  2986                           
  2987                           ;main.c: 135: }
  2988                           ;main.c: 136: }
  2989  010C02  D7AA               	goto	l991
  2990  010C04                     l998:
  2991                           
  2992                           ;main.c: 137: else
  2993                           ;main.c: 138: {
  2994                           ;main.c: 139: if(mdbflags.noteerr == 1)
  2995  010C04  A23E               	btfss	_mdbflags,1,c
  2996  010C06  D7A8               	goto	l991
  2997                           
  2998                           ;main.c: 140: {
  2999                           ;main.c: 141: displ_noteer();
  3000  010C08  EC5D  F08F         	call	_displ_noteer	;wreg free
  3001  010C0C  D7A5               	goto	l991
  3002  010C0E                     __end_of_main:
  3003                           	opt stack 0
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           postinc0	equ	0xFEE
  3009                           wreg	equ	0xFE8
  3010                           status	equ	0xFD8
  3011                           
  3012 ;; *************** function _vend_init *****************
  3013 ;; Defined at:
  3014 ;;		line 26 in file "vend.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;Total ram usage:        0 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    8
  3035 ;; This function calls:
  3036 ;;		_DAC1_SetOutput
  3037 ;;		_DATAEE_ReadByte
  3038 ;;		_Init_vendmem
  3039 ;;		_credit_check
  3040 ;;		_lcd_string
  3041 ;;		_mdb_init
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text1
  3048  01116C                     __ptext1:
  3049                           	opt stack 0
  3050  01116C                     _vend_init:
  3051                           	opt stack 22
  3052                           
  3053                           ;vend.c: 29: ((uint8_t*) &venderr)[0] = DATAEE_ReadByte(venderrors);
  3054                           
  3055                           ;incstack = 0
  3056  01116C  0E57               	movlw	low _venderrors
  3057  01116E  6EF6               	movwf	tblptrl,c
  3058  011170                     	if	1	;There is more than 1 active tblptr byte
  3059  011170  0EFC               	movlw	high _venderrors
  3060  011172  6EF7               	movwf	tblptrh,c
  3061  011174                     	endif
  3062  011174                     	if	1	;There are 3 active tblptr bytes
  3063  011174  0E00               	movlw	low (_venderrors shr (0+16))
  3064  011176  6EF8               	movwf	tblptru,c
  3065  011178                     	endif
  3066  011178  0009               	tblrd		*+
  3067  01117A  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3068  01117E  000A               	tblrd		*-
  3069  011180  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3070  011184  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  3071  011188  6E34               	movwf	_venderr,c
  3072                           
  3073                           ;vend.c: 31: Init_vendmem();
  3074  01118A  ECF6  F08A         	call	_Init_vendmem	;wreg free
  3075                           
  3076                           ;vend.c: 33: sensorval = DATAEE_ReadByte(sensval);
  3077  01118E  0E53               	movlw	low _sensval
  3078  011190  6EF6               	movwf	tblptrl,c
  3079  011192                     	if	1	;There is more than 1 active tblptr byte
  3080  011192  0EFC               	movlw	high _sensval
  3081  011194  6EF7               	movwf	tblptrh,c
  3082  011196                     	endif
  3083  011196                     	if	1	;There are 3 active tblptr bytes
  3084  011196  0E00               	movlw	low (_sensval shr (0+16))
  3085  011198  6EF8               	movwf	tblptru,c
  3086  01119A                     	endif
  3087  01119A  0009               	tblrd		*+
  3088  01119C  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3089  0111A0  000A               	tblrd		*-
  3090  0111A2  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3091  0111A6  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  3092  0111AA  6E37               	movwf	_sensorval,c	;volatile
  3093                           
  3094                           ;vend.c: 34: DAC1_SetOutput(sensorval);
  3095  0111AC  5037               	movf	_sensorval,w,c	;volatile
  3096  0111AE  ECAB  F090         	call	_DAC1_SetOutput
  3097                           
  3098                           ;vend.c: 39: lcd_string(initnote, line1);
  3099  0111B2  0EA9               	movlw	low _initnote
  3100  0111B4  6E24               	movwf	lcd_string@lcdstring,c
  3101  0111B6  0EFE               	movlw	high _initnote
  3102  0111B8  6E25               	movwf	lcd_string@lcdstring+1,c
  3103  0111BA  0E8F               	movlw	low _line1
  3104  0111BC  6EF6               	movwf	tblptrl,c
  3105  0111BE                     	if	1	;There is more than 1 active tblptr byte
  3106  0111BE  0EFC               	movlw	high _line1
  3107  0111C0  6EF7               	movwf	tblptrh,c
  3108  0111C2                     	endif
  3109  0111C2                     	if	1	;There are 3 active tblptr bytes
  3110  0111C2  0E00               	movlw	low (_line1 shr (0+16))
  3111  0111C4  6EF8               	movwf	tblptru,c
  3112  0111C6                     	endif
  3113  0111C6  0008               	tblrd		*
  3114  0111C8  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3115  0111CC  EC75  F087         	call	_lcd_string	;wreg free
  3116                           
  3117                           ;vend.c: 40: mdb_init();
  3118  0111D0  EC63  F08B         	call	_mdb_init	;wreg free
  3119                           
  3120                           ;vend.c: 42: venflags.service = 0;
  3121  0111D4  9E2C               	bcf	_venflags,7,c
  3122                           
  3123                           ;vend.c: 43: venflags.initialrun = 1;
  3124  0111D6  8A2C               	bsf	_venflags,5,c
  3125                           
  3126                           ;vend.c: 44: if(credit_check() == 0)
  3127  0111D8  ECC4  F08F         	call	_credit_check	;wreg free
  3128  0111DC  0900               	iorlw	0
  3129  0111DE  A4D8               	btfss	status,2,c
  3130  0111E0  D005               	goto	l1980
  3131                           
  3132                           ;vend.c: 45: {
  3133                           ;vend.c: 46: venflags.iscredit = 0;
  3134  0111E2  902C               	bcf	_venflags,0,c
  3135                           
  3136                           ;vend.c: 47: venflags.inscoin = 1;
  3137  0111E4  842C               	bsf	_venflags,2,c
  3138                           
  3139                           ;vend.c: 48: venflags.credisplay = 0;
  3140  0111E6  982C               	bcf	_venflags,4,c
  3141                           
  3142                           ;vend.c: 49: mdbflags.noteerr = 0;
  3143  0111E8  923E               	bcf	_mdbflags,1,c
  3144                           
  3145                           ;vend.c: 50: }
  3146  0111EA  0012               	return	
  3147  0111EC                     l1980:
  3148                           
  3149                           ;vend.c: 51: else
  3150                           ;vend.c: 52: {
  3151                           ;vend.c: 53: venflags.iscredit = 1;
  3152  0111EC  802C               	bsf	_venflags,0,c
  3153                           
  3154                           ;vend.c: 54: venflags.inscoin = 0;
  3155  0111EE  942C               	bcf	_venflags,2,c
  3156                           
  3157                           ;vend.c: 55: venflags.credisplay = 1;
  3158  0111F0  882C               	bsf	_venflags,4,c
  3159                           
  3160                           ;vend.c: 56: mdbflags.noteerr = 0;
  3161  0111F2  923E               	bcf	_mdbflags,1,c
  3162  0111F4  0012               	return	
  3163  0111F6                     __end_of_vend_init:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           postinc0	equ	0xFEE
  3170                           wreg	equ	0xFE8
  3171                           status	equ	0xFD8
  3172                           
  3173 ;; *************** function _mdb_init *****************
  3174 ;; Defined at:
  3175 ;;		line 21 in file "mdb.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  i               1   28[COMRAM] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;Total ram usage:        3 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    6
  3196 ;; This function calls:
  3197 ;;		_DATAEE_ReadByte
  3198 ;;		_eusartmdb_Initialize
  3199 ;;		_mdb_comm
  3200 ;;		_mdb_noten
  3201 ;;		_mdb_reset
  3202 ;;		_mdb_security
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;;		_vend_init
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text2
  3210  0116C6                     __ptext2:
  3211                           	opt stack 0
  3212  0116C6                     _mdb_init:
  3213                           	opt stack 23
  3214                           
  3215                           ;mdb.c: 23: _delay((unsigned long)((250)*(12000000/4000.0)));
  3216                           
  3217                           ;incstack = 0
  3218  0116C6  0E04               	movlw	4
  3219  0116C8  6E26               	movwf	(??_mdb_init+1)& (0+255),c
  3220  0116CA  0ECF               	movlw	207
  3221  0116CC  6E25               	movwf	??_mdb_init& (0+255),c
  3222  0116CE  0E02               	movlw	2
  3223  0116D0                     u3477:
  3224  0116D0  2EE8               	decfsz	wreg,f,c
  3225  0116D2  D7FE               	bra	u3477
  3226  0116D4  2E25               	decfsz	??_mdb_init& (0+255),f,c
  3227  0116D6  D7FC               	bra	u3477
  3228  0116D8  2E26               	decfsz	(??_mdb_init+1)& (0+255),f,c
  3229  0116DA  D7FA               	bra	u3477
  3230                           
  3231                           ;mdb.c: 24: noteen_byte = DATAEE_ReadByte(notebits);
  3232  0116DC  0E55               	movlw	low _notebits
  3233  0116DE  6EF6               	movwf	tblptrl,c
  3234  0116E0                     	if	1	;There is more than 1 active tblptr byte
  3235  0116E0  0EFC               	movlw	high _notebits
  3236  0116E2  6EF7               	movwf	tblptrh,c
  3237  0116E4                     	endif
  3238  0116E4                     	if	1	;There are 3 active tblptr bytes
  3239  0116E4  0E00               	movlw	low (_notebits shr (0+16))
  3240  0116E6  6EF8               	movwf	tblptru,c
  3241  0116E8                     	endif
  3242  0116E8  0009               	tblrd		*+
  3243  0116EA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3244  0116EE  000A               	tblrd		*-
  3245  0116F0  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3246  0116F4  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  3247  0116F8  6E3C               	movwf	_noteen_byte,c	;volatile
  3248                           
  3249                           ;mdb.c: 25: ((uint8_t*) &noteen)[0] = noteen_byte;
  3250  0116FA  C03C  F03D         	movff	_noteen_byte,_noteen	;volatile
  3251                           
  3252                           ;mdb.c: 26: eusartmdb_Initialize();
  3253  0116FE  EC42  F090         	call	_eusartmdb_Initialize	;wreg free
  3254                           
  3255                           ;mdb.c: 27: mdbflags.noteerr = 0;
  3256  011702  923E               	bcf	_mdbflags,1,c
  3257                           
  3258                           ;mdb.c: 28: mdbflags.isdata = 0;
  3259  011704  903E               	bcf	_mdbflags,0,c
  3260                           
  3261                           ;mdb.c: 29: mdb_reset();
  3262  011706  EC40  F089         	call	_mdb_reset	;wreg free
  3263                           
  3264                           ;mdb.c: 30: mdb_noten();
  3265  01170A  EC1C  F08E         	call	_mdb_noten	;wreg free
  3266                           
  3267                           ;mdb.c: 31: mdb_security();
  3268  01170E  ECD5  F08F         	call	_mdb_security	;wreg free
  3269                           
  3270                           ;mdb.c: 32: uint8_t i = mdb_comm(note_poll, 0x00);
  3271  011712  0E00               	movlw	0
  3272  011714  6E1F               	movwf	mdb_comm@mcount,c
  3273  011716  0E88               	movlw	low _note_poll
  3274  011718  6EF6               	movwf	tblptrl,c
  3275  01171A                     	if	1	;There is more than 1 active tblptr byte
  3276  01171A  0EFC               	movlw	high _note_poll
  3277  01171C  6EF7               	movwf	tblptrh,c
  3278  01171E                     	endif
  3279  01171E                     	if	1	;There are 3 active tblptr bytes
  3280  01171E  0E00               	movlw	low (_note_poll shr (0+16))
  3281  011720  6EF8               	movwf	tblptru,c
  3282  011722                     	endif
  3283  011722  0008               	tblrd		*
  3284  011724  50F5               	movf	tablat,w,c
  3285  011726  ECA3  F082         	call	_mdb_comm
  3286  01172A  6E27               	movwf	mdb_init@i,c
  3287  01172C  0012               	return		;funcret
  3288  01172E                     __end_of_mdb_init:
  3289                           	opt stack 0
  3290                           tblptru	equ	0xFF8
  3291                           tblptrh	equ	0xFF7
  3292                           tblptrl	equ	0xFF6
  3293                           tablat	equ	0xFF5
  3294                           postinc0	equ	0xFEE
  3295                           wreg	equ	0xFE8
  3296                           status	equ	0xFD8
  3297                           
  3298 ;; *************** function _mdb_security *****************
  3299 ;; Defined at:
  3300 ;;		line 151 in file "mdb.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;Total ram usage:        0 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    5
  3321 ;; This function calls:
  3322 ;;		_init_mdbdata
  3323 ;;		_mdb_comm
  3324 ;; This function is called by:
  3325 ;;		_mdb_init
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text3
  3330  011FAA                     __ptext3:
  3331                           	opt stack 0
  3332  011FAA                     _mdb_security:
  3333                           	opt stack 23
  3334                           
  3335                           ;mdb.c: 153: init_mdbdata(0x00);
  3336                           
  3337                           ;incstack = 0
  3338  011FAA  0E00               	movlw	0
  3339  011FAC  ECA0  F08F         	call	_init_mdbdata
  3340                           
  3341                           ;mdb.c: 154: mdb_comm(note_security, 0x01);
  3342  011FB0  0E01               	movlw	1
  3343  011FB2  6E1F               	movwf	mdb_comm@mcount,c
  3344  011FB4  0E89               	movlw	low _note_security
  3345  011FB6  6EF6               	movwf	tblptrl,c
  3346  011FB8                     	if	1	;There is more than 1 active tblptr byte
  3347  011FB8  0EFC               	movlw	high _note_security
  3348  011FBA  6EF7               	movwf	tblptrh,c
  3349  011FBC                     	endif
  3350  011FBC                     	if	1	;There are 3 active tblptr bytes
  3351  011FBC  0E00               	movlw	low (_note_security shr (0+16))
  3352  011FBE  6EF8               	movwf	tblptru,c
  3353  011FC0                     	endif
  3354  011FC0  0008               	tblrd		*
  3355  011FC2  50F5               	movf	tablat,w,c
  3356  011FC4  ECA3  F082         	call	_mdb_comm
  3357  011FC8  0012               	return		;funcret
  3358  011FCA                     __end_of_mdb_security:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           postinc0	equ	0xFEE
  3365                           wreg	equ	0xFE8
  3366                           status	equ	0xFD8
  3367                           
  3368 ;; *************** function _mdb_reset *****************
  3369 ;; Defined at:
  3370 ;;		line 36 in file "mdb.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  i               1   24[COMRAM] unsigned char 
  3375 ;;  i               1   25[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      unsigned char 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;Total ram usage:        3 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    5
  3392 ;; This function calls:
  3393 ;;		_mdb_comm
  3394 ;; This function is called by:
  3395 ;;		_mdb_init
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text4
  3400  011280                     __ptext4:
  3401                           	opt stack 0
  3402  011280                     _mdb_reset:
  3403                           	opt stack 23
  3404                           
  3405                           ;mdb.c: 41: mdbflags.timeout = 1;
  3406                           
  3407                           ;incstack = 0
  3408  011280  863E               	bsf	_mdbflags,3,c
  3409                           
  3410                           ;mdb.c: 42: while(mdbflags.timeout)
  3411  011282  D00D               	goto	l2666
  3412  011284                     
  3413                           ;mdb.c: 43: {
  3414                           ;mdb.c: 44: uint8_t i = mdb_comm(note_reset, 0x00);
  3415  011284  0E00               	movlw	0
  3416  011286  6E1F               	movwf	mdb_comm@mcount,c
  3417  011288  0E8B               	movlw	low _note_reset
  3418  01128A  6EF6               	movwf	tblptrl,c
  3419  01128C                     	if	1	;There is more than 1 active tblptr byte
  3420  01128C  0EFC               	movlw	high _note_reset
  3421  01128E  6EF7               	movwf	tblptrh,c
  3422  011290                     	endif
  3423  011290                     	if	1	;There are 3 active tblptr bytes
  3424  011290  0E00               	movlw	low (_note_reset shr (0+16))
  3425  011292  6EF8               	movwf	tblptru,c
  3426  011294                     	endif
  3427  011294  0008               	tblrd		*
  3428  011296  50F5               	movf	tablat,w,c
  3429  011298  ECA3  F082         	call	_mdb_comm
  3430  01129C  6E23               	movwf	mdb_reset@i,c
  3431  01129E                     l2666:
  3432  01129E  B63E               	btfsc	_mdbflags,3,c
  3433  0112A0  D7F1               	goto	l2667
  3434  0112A2  F000               	nop		;# 
  3435                           
  3436                           ;mdb.c: 47: uint8_t i = mdb_comm(note_poll, 0x00);
  3437  0112A4  0E00               	movlw	0
  3438  0112A6  6E1F               	movwf	mdb_comm@mcount,c
  3439  0112A8  0E88               	movlw	low _note_poll
  3440  0112AA  6EF6               	movwf	tblptrl,c
  3441  0112AC                     	if	1	;There is more than 1 active tblptr byte
  3442  0112AC  0EFC               	movlw	high _note_poll
  3443  0112AE  6EF7               	movwf	tblptrh,c
  3444  0112B0                     	endif
  3445  0112B0                     	if	1	;There are 3 active tblptr bytes
  3446  0112B0  0E00               	movlw	low (_note_poll shr (0+16))
  3447  0112B2  6EF8               	movwf	tblptru,c
  3448  0112B4                     	endif
  3449  0112B4  0008               	tblrd		*
  3450  0112B6  50F5               	movf	tablat,w,c
  3451  0112B8  ECA3  F082         	call	_mdb_comm
  3452  0112BC  6E24               	movwf	mdb_reset@i_3717,c
  3453                           
  3454                           ;mdb.c: 48: if(mdbdata[--i] == just_reset)
  3455  0112BE  0624               	decf	mdb_reset@i_3717,f,c
  3456  0112C0  5024               	movf	mdb_reset@i_3717,w,c
  3457  0112C2  0D01               	mullw	1
  3458  0112C4  0E60               	movlw	low _mdbdata
  3459  0112C6  24F3               	addwf	prodl,w,c
  3460  0112C8  6ED9               	movwf	fsr2l,c
  3461  0112CA  0E00               	movlw	high _mdbdata
  3462  0112CC  20F4               	addwfc	prodh,w,c
  3463  0112CE  6EDA               	movwf	fsr2h,c
  3464  0112D0  50DF               	movf	indf2,w,c
  3465  0112D2  6E22               	movwf	??_mdb_reset& (0+255),c
  3466  0112D4  0E7E               	movlw	low _just_reset
  3467  0112D6  6EF6               	movwf	tblptrl,c
  3468  0112D8                     	if	1	;There is more than 1 active tblptr byte
  3469  0112D8  0EFC               	movlw	high _just_reset
  3470  0112DA  6EF7               	movwf	tblptrh,c
  3471  0112DC                     	endif
  3472  0112DC                     	if	1	;There are 3 active tblptr bytes
  3473  0112DC  0E00               	movlw	low (_just_reset shr (0+16))
  3474  0112DE  6EF8               	movwf	tblptru,c
  3475  0112E0                     	endif
  3476  0112E0  0008               	tblrd		*
  3477  0112E2  50F5               	movf	tablat,w,c
  3478  0112E4  1822               	xorwf	??_mdb_reset,w,c
  3479  0112E6  A4D8               	btfss	status,2,c
  3480  0112E8  0012               	return	
  3481                           
  3482                           ;mdb.c: 49: {
  3483                           ;mdb.c: 51: i = mdb_comm(note_poll, 0x00);
  3484  0112EA  0E00               	movlw	0
  3485  0112EC  6E1F               	movwf	mdb_comm@mcount,c
  3486  0112EE  0E88               	movlw	low _note_poll
  3487  0112F0  6EF6               	movwf	tblptrl,c
  3488  0112F2                     	if	1	;There is more than 1 active tblptr byte
  3489  0112F2  0EFC               	movlw	high _note_poll
  3490  0112F4  6EF7               	movwf	tblptrh,c
  3491  0112F6                     	endif
  3492  0112F6                     	if	1	;There are 3 active tblptr bytes
  3493  0112F6  0E00               	movlw	low (_note_poll shr (0+16))
  3494  0112F8  6EF8               	movwf	tblptru,c
  3495  0112FA                     	endif
  3496  0112FA  0008               	tblrd		*
  3497  0112FC  50F5               	movf	tablat,w,c
  3498  0112FE  ECA3  F082         	call	_mdb_comm
  3499  011302  6E24               	movwf	mdb_reset@i_3717,c
  3500  011304  0012               	return	
  3501  011306                     __end_of_mdb_reset:
  3502                           	opt stack 0
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           prodh	equ	0xFF4
  3508                           prodl	equ	0xFF3
  3509                           postinc0	equ	0xFEE
  3510                           wreg	equ	0xFE8
  3511                           indf2	equ	0xFDF
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function _mdb_noten *****************
  3517 ;; Defined at:
  3518 ;;		line 135 in file "mdb.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    5
  3539 ;; This function calls:
  3540 ;;		_init_mdbdata
  3541 ;;		_mdb_comm
  3542 ;; This function is called by:
  3543 ;;		_mdb_init
  3544 ;;		_note_disable
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text5
  3549  011C38                     __ptext5:
  3550                           	opt stack 0
  3551  011C38                     _mdb_noten:
  3552                           	opt stack 23
  3553                           
  3554                           ;mdb.c: 138: init_mdbdata(0x00);
  3555                           
  3556                           ;incstack = 0
  3557  011C38  0E00               	movlw	0
  3558  011C3A  ECA0  F08F         	call	_init_mdbdata
  3559                           
  3560                           ;mdb.c: 140: mcount = 3;
  3561  011C3E  0E03               	movlw	3
  3562  011C40  6E41               	movwf	_mcount,c
  3563                           
  3564                           ;mdb.c: 142: mdbdata[0] = 0x00;
  3565  011C42  0E00               	movlw	0
  3566  011C44  0100               	movlb	0	; () banked
  3567  011C46  6F60               	movwf	_mdbdata& (0+255),b
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;mdb.c: 143: mdbdata[1] = 0x00;
  3571  011C48  0E00               	movlw	0
  3572  011C4A  6F61               	movwf	(_mdbdata+1)& (0+255),b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;mdb.c: 145: mdbdata[2] = noteen_byte;
  3576  011C4C  C03C  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;mdb.c: 147: mdbdata[3] = 0x00;
  3580  011C50  0E00               	movlw	0
  3581  011C52  6F63               	movwf	(_mdbdata+3)& (0+255),b
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;mdb.c: 148: mcount = mdb_comm(note_type, mcount);
  3585  011C54  C041  F01F         	movff	_mcount,mdb_comm@mcount
  3586  011C58  0E87               	movlw	low _note_type
  3587  011C5A  6EF6               	movwf	tblptrl,c
  3588  011C5C                     	if	1	;There is more than 1 active tblptr byte
  3589  011C5C  0EFC               	movlw	high _note_type
  3590  011C5E  6EF7               	movwf	tblptrh,c
  3591  011C60                     	endif
  3592  011C60                     	if	1	;There are 3 active tblptr bytes
  3593  011C60  0E00               	movlw	low (_note_type shr (0+16))
  3594  011C62  6EF8               	movwf	tblptru,c
  3595  011C64                     	endif
  3596  011C64  0008               	tblrd		*
  3597  011C66  50F5               	movf	tablat,w,c
  3598  011C68  ECA3  F082         	call	_mdb_comm
  3599  011C6C  6E41               	movwf	_mcount,c
  3600                           
  3601                           ;mdb.c: 149: mdbflags.vending = 0;
  3602  011C6E  983E               	bcf	_mdbflags,4,c
  3603  011C70  0012               	return		;funcret
  3604  011C72                     __end_of_mdb_noten:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           prodh	equ	0xFF4
  3611                           prodl	equ	0xFF3
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           indf2	equ	0xFDF
  3615                           fsr2h	equ	0xFDA
  3616                           fsr2l	equ	0xFD9
  3617                           status	equ	0xFD8
  3618                           
  3619 ;; *************** function _eusartmdb_Initialize *****************
  3620 ;; Defined at:
  3621 ;;		line 55 in file "eusart_mdb.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    2
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_mdb_init
  3646 ;;		_cctalk_init
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text6
  3651  012084                     __ptext6:
  3652                           	opt stack 0
  3653  012084                     _eusartmdb_Initialize:
  3654                           	opt stack 26
  3655                           
  3656                           ;eusart_mdb.c: 60: BAUD1CON = 0x08;
  3657                           
  3658                           ;incstack = 0
  3659  012084  0E08               	movlw	8
  3660  012086  6E9F               	movwf	3999,c	;volatile
  3661                           
  3662                           ;eusart_mdb.c: 63: RC1STA = 0xD0;
  3663  012088  0ED0               	movlw	208
  3664  01208A  6E9D               	movwf	3997,c	;volatile
  3665                           
  3666                           ;eusart_mdb.c: 66: TX1STA = 0xEC;
  3667  01208C  0EEC               	movlw	236
  3668  01208E  6E9E               	movwf	3998,c	;volatile
  3669                           
  3670                           ;eusart_mdb.c: 69: SP1BRGL = 0x38;
  3671  012090  0E38               	movlw	56
  3672  012092  6E9B               	movwf	3995,c	;volatile
  3673                           
  3674                           ;eusart_mdb.c: 72: SP1BRGH = 0x01;
  3675  012094  0E01               	movlw	1
  3676  012096  6E9C               	movwf	3996,c	;volatile
  3677  012098  0012               	return		;funcret
  3678  01209A                     __end_of_eusartmdb_Initialize:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           tblptrh	equ	0xFF7
  3682                           tblptrl	equ	0xFF6
  3683                           tablat	equ	0xFF5
  3684                           prodh	equ	0xFF4
  3685                           prodl	equ	0xFF3
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           indf2	equ	0xFDF
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function _DAC1_SetOutput *****************
  3694 ;; Defined at:
  3695 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  inputData       1    wreg     unsigned char 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  inputData       1   18[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;Total ram usage:        1 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    2
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_vend_init
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text7
  3724  012156                     __ptext7:
  3725                           	opt stack 0
  3726  012156                     _DAC1_SetOutput:
  3727                           	opt stack 27
  3728                           
  3729                           ;incstack = 0
  3730                           ;DAC1_SetOutput@inputData stored from wreg
  3731  012156  6E1D               	movwf	DAC1_SetOutput@inputData,c
  3732                           
  3733                           ;dac1.c: 67: DAC1CON1 = inputData;
  3734  012158  C01D  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  3735  01215C  0012               	return		;funcret
  3736  01215E                     __end_of_DAC1_SetOutput:
  3737                           	opt stack 0
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           prodh	equ	0xFF4
  3743                           prodl	equ	0xFF3
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           indf2	equ	0xFDF
  3747                           fsr2h	equ	0xFDA
  3748                           fsr2l	equ	0xFD9
  3749                           status	equ	0xFD8
  3750                           
  3751 ;; *************** function _mdb_poll *****************
  3752 ;; Defined at:
  3753 ;;		line 157 in file "mdb.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  i               1   23[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      unsigned char 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;Total ram usage:        1 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    5
  3774 ;; This function calls:
  3775 ;;		_TMR3_Initialize
  3776 ;;		_mdb_comm
  3777 ;; This function is called by:
  3778 ;;		_main
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text8
  3783  010000                     __ptext8:
  3784                           	opt stack 0
  3785  010000                     _mdb_poll:
  3786                           	opt stack 25
  3787                           
  3788                           ;mdb.c: 161: TMR3_Initialize();
  3789                           
  3790                           ;incstack = 0
  3791  010000  ECA8  F08E         	call	_TMR3_Initialize	;wreg free
  3792                           
  3793                           ;mdb.c: 162: uint8_t i = mdb_comm(note_poll, 0x00);
  3794  010004  0E00               	movlw	0
  3795  010006  6E1F               	movwf	mdb_comm@mcount,c
  3796  010008  0E88               	movlw	low _note_poll
  3797  01000A  6EF6               	movwf	tblptrl,c
  3798  01000C                     	if	1	;There is more than 1 active tblptr byte
  3799  01000C  0EFC               	movlw	high _note_poll
  3800  01000E  6EF7               	movwf	tblptrh,c
  3801  010010                     	endif
  3802  010010                     	if	1	;There are 3 active tblptr bytes
  3803  010010  0E00               	movlw	low (_note_poll shr (0+16))
  3804  010012  6EF8               	movwf	tblptru,c
  3805  010014                     	endif
  3806  010014  0008               	tblrd		*
  3807  010016  50F5               	movf	tablat,w,c
  3808  010018  ECA3  F082         	call	_mdb_comm
  3809  01001C  6E22               	movwf	mdb_poll@i,c
  3810                           
  3811                           ;mdb.c: 163: notebyte = mdbdata[0];
  3812  01001E  C060  F040         	movff	_mdbdata,_notebyte
  3813                           
  3814                           ;mdb.c: 165: if((mdbdata[0] & 0x80) != 0)
  3815  010022  0100               	movlb	0	; () banked
  3816  010024  AF60               	btfss	_mdbdata& (0+255),7,b
  3817  010026  D050               	goto	l2723
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;mdb.c: 166: {
  3821                           ;mdb.c: 167: notebyte = mdbdata[0] & 0x7F;
  3822  010028  5160               	movf	_mdbdata& (0+255),w,b
  3823  01002A  0B7F               	andlw	127
  3824  01002C  6E40               	movwf	_notebyte,c
  3825                           
  3826                           ;mdb.c: 168: switch(notebyte)
  3827  01002E  D019               	goto	l2713
  3828  010030                     
  3829                           ; BSR set to: 0
  3830  010030  0E0A               	movlw	10
  3831  010032  6E3B               	movwf	_credit,c	;volatile
  3832                           
  3833                           ;mdb.c: 171: return credit;
  3834  010034  503B               	movf	_credit,w,c	;volatile
  3835  010036  0012               	return	
  3836  010038  0E14               	movlw	20
  3837  01003A  6E3B               	movwf	_credit,c	;volatile
  3838                           
  3839                           ;mdb.c: 173: return credit;
  3840  01003C  503B               	movf	_credit,w,c	;volatile
  3841  01003E  0012               	return	
  3842  010040  0E32               	movlw	50
  3843  010042  6E3B               	movwf	_credit,c	;volatile
  3844                           
  3845                           ;mdb.c: 175: return credit;
  3846  010044  503B               	movf	_credit,w,c	;volatile
  3847  010046  0012               	return	
  3848  010048  0E64               	movlw	100
  3849  01004A  6E3B               	movwf	_credit,c	;volatile
  3850                           
  3851                           ;mdb.c: 177: return credit;
  3852  01004C  503B               	movf	_credit,w,c	;volatile
  3853  01004E  0012               	return	
  3854  010050  0EC8               	movlw	200
  3855  010052  6E3B               	movwf	_credit,c	;volatile
  3856                           
  3857                           ;mdb.c: 179: return credit;
  3858  010054  503B               	movf	_credit,w,c	;volatile
  3859  010056  0012               	return	
  3860  010058  0E10               	movlw	16
  3861  01005A  6E3B               	movwf	_credit,c	;volatile
  3862                           
  3863                           ;mdb.c: 181: mdbflags.noteerr = 1;
  3864  01005C  823E               	bsf	_mdbflags,1,c
  3865                           
  3866                           ;mdb.c: 182: return credit;
  3867  01005E  503B               	movf	_credit,w,c	;volatile
  3868                           
  3869                           ;mdb.c: 183: }
  3870  010060  0012               	return	
  3871  010062                     l2713:
  3872  010062  5040               	movf	_notebyte,w,c
  3873                           
  3874                           ; Switch size 1, requested type "space"
  3875                           ; Number of cases is 5, Range of values is 0 to 4
  3876                           ; switch strategies available:
  3877                           ; Name         Instructions Cycles
  3878                           ; simple_byte           16     9 (average)
  3879                           ;	Chosen strategy is simple_byte
  3880  010064  0A00               	xorlw	0	; case 0
  3881  010066  B4D8               	btfsc	status,2,c
  3882  010068  D7E3               	goto	l2714
  3883  01006A  0A01               	xorlw	1	; case 1
  3884  01006C  B4D8               	btfsc	status,2,c
  3885  01006E  D7E4               	goto	l2716
  3886  010070  0A03               	xorlw	3	; case 2
  3887  010072  B4D8               	btfsc	status,2,c
  3888  010074  D7E5               	goto	l2717
  3889  010076  0A01               	xorlw	1	; case 3
  3890  010078  B4D8               	btfsc	status,2,c
  3891  01007A  D7E6               	goto	l2718
  3892  01007C  0A07               	xorlw	7	; case 4
  3893  01007E  B4D8               	btfsc	status,2,c
  3894  010080  D7E7               	goto	l2719
  3895  010082  D7EA               	goto	l2720
  3896  010084  0E00               	movlw	0
  3897  010086  6E3B               	movwf	_credit,c	;volatile
  3898                           
  3899                           ;mdb.c: 191: return credit;
  3900  010088  503B               	movf	_credit,w,c	;volatile
  3901  01008A  0012               	return	
  3902  01008C  0E01               	movlw	1
  3903  01008E  D01A               	goto	L11
  3904  010090  0E02               	movlw	2
  3905  010092  D018               	goto	L11
  3906  010094  0E00               	movlw	0
  3907  010096  6E3B               	movwf	_credit,c	;volatile
  3908                           
  3909                           ;mdb.c: 200: mdbflags.noteerr = 0;
  3910  010098  923E               	bcf	_mdbflags,1,c
  3911                           
  3912                           ;mdb.c: 201: return credit;
  3913  01009A  503B               	movf	_credit,w,c	;volatile
  3914  01009C  0012               	return	
  3915  01009E  0E04               	movlw	4
  3916  0100A0  D011               	goto	L11
  3917  0100A2  0E05               	movlw	5
  3918  0100A4  D00F               	goto	L11
  3919  0100A6  0E06               	movlw	6
  3920  0100A8  D00D               	goto	L11
  3921  0100AA  0E07               	movlw	7
  3922  0100AC  D00B               	goto	L11
  3923  0100AE  0E08               	movlw	8
  3924  0100B0  D009               	goto	L11
  3925  0100B2  0E09               	movlw	9
  3926  0100B4  D007               	goto	L11
  3927  0100B6  0E0A               	movlw	10
  3928  0100B8  D005               	goto	L11
  3929  0100BA  0E0B               	movlw	11
  3930  0100BC  D003               	goto	L11
  3931  0100BE  0E0C               	movlw	12
  3932  0100C0  D001               	goto	L11
  3933  0100C2  0E00               	movlw	0
  3934  0100C4                     L11:
  3935  0100C4  6E3B               	movwf	_credit,c	;volatile
  3936                           
  3937                           ;mdb.c: 230: }
  3938  0100C6  D02A               	goto	l2726
  3939  0100C8                     l2723:
  3940  0100C8  0100               	movlb	0	; () banked
  3941  0100CA  5160               	movf	_mdbdata& (0+255),w,b
  3942                           
  3943                           ; Switch size 1, requested type "space"
  3944                           ; Number of cases is 13, Range of values is 0 to 12
  3945                           ; switch strategies available:
  3946                           ; Name         Instructions Cycles
  3947                           ; simple_byte           40    21 (average)
  3948                           ;	Chosen strategy is simple_byte
  3949  0100CC  0A00               	xorlw	0	; case 0
  3950  0100CE  B4D8               	btfsc	status,2,c
  3951  0100D0  D7D9               	goto	l2724
  3952  0100D2  0A01               	xorlw	1	; case 1
  3953  0100D4  B4D8               	btfsc	status,2,c
  3954  0100D6  D7DA               	goto	l2725
  3955  0100D8  0A03               	xorlw	3	; case 2
  3956  0100DA  B4D8               	btfsc	status,2,c
  3957  0100DC  D7D9               	goto	l2727
  3958  0100DE  0A01               	xorlw	1	; case 3
  3959  0100E0  B4D8               	btfsc	status,2,c
  3960  0100E2  D7D8               	goto	l2728
  3961  0100E4  0A07               	xorlw	7	; case 4
  3962  0100E6  B4D8               	btfsc	status,2,c
  3963  0100E8  D7DA               	goto	l2729
  3964  0100EA  0A01               	xorlw	1	; case 5
  3965  0100EC  B4D8               	btfsc	status,2,c
  3966  0100EE  D7D9               	goto	l2730
  3967  0100F0  0A03               	xorlw	3	; case 6
  3968  0100F2  B4D8               	btfsc	status,2,c
  3969  0100F4  D7D8               	goto	l2731
  3970  0100F6  0A01               	xorlw	1	; case 7
  3971  0100F8  B4D8               	btfsc	status,2,c
  3972  0100FA  D7D7               	goto	l2732
  3973  0100FC  0A0F               	xorlw	15	; case 8
  3974  0100FE  B4D8               	btfsc	status,2,c
  3975  010100  D7D6               	goto	l2733
  3976  010102  0A01               	xorlw	1	; case 9
  3977  010104  B4D8               	btfsc	status,2,c
  3978  010106  D7D5               	goto	l2734
  3979  010108  0A03               	xorlw	3	; case 10
  3980  01010A  B4D8               	btfsc	status,2,c
  3981  01010C  D7D4               	goto	l2735
  3982  01010E  0A01               	xorlw	1	; case 11
  3983  010110  B4D8               	btfsc	status,2,c
  3984  010112  D7D3               	goto	l2736
  3985  010114  0A07               	xorlw	7	; case 12
  3986  010116  B4D8               	btfsc	status,2,c
  3987  010118  D7D2               	goto	l2737
  3988  01011A  D7D3               	goto	l2738
  3989  01011C                     l2726:
  3990                           
  3991                           ;mdb.c: 231: mdbflags.noteerr = 1;
  3992  01011C  823E               	bsf	_mdbflags,1,c
  3993                           
  3994                           ;mdb.c: 232: return credit;
  3995  01011E  503B               	movf	_credit,w,c	;volatile
  3996  010120  0012               	return	
  3997  010122                     __end_of_mdb_poll:
  3998                           	opt stack 0
  3999                           tblptru	equ	0xFF8
  4000                           tblptrh	equ	0xFF7
  4001                           tblptrl	equ	0xFF6
  4002                           tablat	equ	0xFF5
  4003                           prodh	equ	0xFF4
  4004                           prodl	equ	0xFF3
  4005                           postinc0	equ	0xFEE
  4006                           wreg	equ	0xFE8
  4007                           indf2	equ	0xFDF
  4008                           fsr2h	equ	0xFDA
  4009                           fsr2l	equ	0xFD9
  4010                           status	equ	0xFD8
  4011                           
  4012 ;; *************** function _mdb_comm *****************
  4013 ;; Defined at:
  4014 ;;		line 237 in file "mdb.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  slvadd          1    wreg     unsigned char 
  4017 ;;  mcount          1   20[COMRAM] unsigned char 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  slvadd          1   21[COMRAM] unsigned char 
  4020 ;;  i               1   22[COMRAM] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      unsigned char 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4030 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;Total ram usage:        3 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    4
  4037 ;; This function calls:
  4038 ;;		_EUSART1_Read
  4039 ;;		_TMR1_Initialize
  4040 ;;		_init_mdbdata
  4041 ;;		_mdb_on
  4042 ;;		_mdb_transmit
  4043 ;;		_mdb_waitr
  4044 ;; This function is called by:
  4045 ;;		_mdb_init
  4046 ;;		_mdb_reset
  4047 ;;		_mdb_noten
  4048 ;;		_mdb_security
  4049 ;;		_mdb_poll
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text9
  4054  010546                     __ptext9:
  4055                           	opt stack 0
  4056  010546                     _mdb_comm:
  4057                           	opt stack 23
  4058                           
  4059                           ;incstack = 0
  4060                           ;mdb_comm@slvadd stored from wreg
  4061  010546  6E20               	movwf	mdb_comm@slvadd,c
  4062                           
  4063                           ;mdb.c: 240: uint8_t i = 0;
  4064  010548  0E00               	movlw	0
  4065  01054A  6E21               	movwf	mdb_comm@i,c
  4066                           
  4067                           ;mdb.c: 242: TX1STAbits.TX9D = 1;
  4068  01054C  809E               	bsf	3998,0,c	;volatile
  4069                           
  4070                           ;mdb.c: 243: mdb_on();
  4071  01054E  ECC4  F090         	call	_mdb_on	;wreg free
  4072                           
  4073                           ;mdb.c: 247: mdb_transmit(slvadd);
  4074  010552  5020               	movf	mdb_comm@slvadd,w,c
  4075  010554  EC89  F090         	call	_mdb_transmit
  4076                           
  4077                           ;mdb.c: 248: TX1STAbits.TX9D = 0;
  4078  010558  909E               	bcf	3998,0,c	;volatile
  4079                           
  4080                           ;mdb.c: 252: chkbyte = slvadd;
  4081  01055A  C020  F03F         	movff	mdb_comm@slvadd,_chkbyte
  4082                           
  4083                           ;mdb.c: 253: if(mcount != 0)
  4084  01055E  501F               	movf	mdb_comm@mcount,w,c
  4085  010560  B4D8               	btfsc	status,2,c
  4086  010562  D01E               	goto	u1860
  4087                           
  4088                           ;mdb.c: 254: {
  4089                           ;mdb.c: 255: i = mcount + 1;
  4090  010564  281F               	incf	mdb_comm@mcount,w,c
  4091  010566  6E21               	movwf	mdb_comm@i,c
  4092                           
  4093                           ;mdb.c: 256: while(i != 0)
  4094  010568  D018               	goto	l2742
  4095  01056A                     
  4096                           ;mdb.c: 257: {
  4097                           ;mdb.c: 258: mdb_transmit(mdbdata[mcount]);
  4098  01056A  501F               	movf	mdb_comm@mcount,w,c
  4099  01056C  0D01               	mullw	1
  4100  01056E  0E60               	movlw	low _mdbdata
  4101  010570  24F3               	addwf	prodl,w,c
  4102  010572  6ED9               	movwf	fsr2l,c
  4103  010574  0E00               	movlw	high _mdbdata
  4104  010576  20F4               	addwfc	prodh,w,c
  4105  010578  6EDA               	movwf	fsr2h,c
  4106  01057A  50DF               	movf	indf2,w,c
  4107  01057C  EC89  F090         	call	_mdb_transmit
  4108                           
  4109                           ;mdb.c: 261: chkbyte = chkbyte + mdbdata[mcount];
  4110  010580  501F               	movf	mdb_comm@mcount,w,c
  4111  010582  0D01               	mullw	1
  4112  010584  0E60               	movlw	low _mdbdata
  4113  010586  24F3               	addwf	prodl,w,c
  4114  010588  6ED9               	movwf	fsr2l,c
  4115  01058A  0E00               	movlw	high _mdbdata
  4116  01058C  20F4               	addwfc	prodh,w,c
  4117  01058E  6EDA               	movwf	fsr2h,c
  4118  010590  50DF               	movf	indf2,w,c
  4119  010592  243F               	addwf	_chkbyte,w,c
  4120  010594  6E3F               	movwf	_chkbyte,c
  4121                           
  4122                           ;mdb.c: 262: i--;
  4123  010596  0621               	decf	mdb_comm@i,f,c
  4124                           
  4125                           ;mdb.c: 263: mcount--;
  4126  010598  061F               	decf	mdb_comm@mcount,f,c
  4127  01059A                     l2742:
  4128  01059A  5021               	movf	mdb_comm@i,w,c
  4129  01059C  A4D8               	btfss	status,2,c
  4130  01059E  D7E5               	goto	l2743
  4131  0105A0                     u1860:
  4132                           
  4133                           ;mdb.c: 264: }
  4134                           ;mdb.c: 265: }
  4135                           ;mdb.c: 266: mdb_transmit(chkbyte);
  4136  0105A0  503F               	movf	_chkbyte,w,c
  4137  0105A2  EC89  F090         	call	_mdb_transmit
  4138                           
  4139                           ;mdb.c: 273: init_mdbdata(0xFF);
  4140  0105A6  0EFF               	movlw	255
  4141  0105A8  ECA0  F08F         	call	_init_mdbdata
  4142                           
  4143                           ;mdb.c: 274: TMR1_Initialize();
  4144  0105AC  ECC3  F08E         	call	_TMR1_Initialize	;wreg free
  4145                           
  4146                           ;mdb.c: 275: dbcount = 0;
  4147  0105B0  0E00               	movlw	0
  4148  0105B2  6E33               	movwf	_dbcount+1,c
  4149  0105B4  0E00               	movlw	0
  4150  0105B6  6E32               	movwf	_dbcount,c
  4151                           
  4152                           ;mdb.c: 276: mdbflags.isdata = 0;
  4153  0105B8  903E               	bcf	_mdbflags,0,c
  4154                           
  4155                           ;mdb.c: 277: i = 0;
  4156  0105BA  0E00               	movlw	0
  4157  0105BC  6E21               	movwf	mdb_comm@i,c
  4158                           
  4159                           ;mdb.c: 279: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  4160  0105BE  D01E               	goto	u1890
  4161  0105C0                     
  4162                           ;mdb.c: 280: {
  4163                           ;mdb.c: 282: dbcount++;
  4164  0105C0  4A32               	infsnz	_dbcount,f,c
  4165  0105C2  2A33               	incf	_dbcount+1,f,c
  4166                           
  4167                           ;mdb.c: 283: mdbflags.isdata = 0;
  4168  0105C4  903E               	bcf	_mdbflags,0,c
  4169                           
  4170                           ;mdb.c: 286: while(PIR3bits.RC1IF && !mdbflags.isdata)
  4171  0105C6  D015               	goto	l2747
  4172  0105C8                     
  4173                           ;mdb.c: 287: {
  4174                           ;mdb.c: 290: mdbdata[i] = EUSART1_Read();
  4175  0105C8  5021               	movf	mdb_comm@i,w,c
  4176  0105CA  0D01               	mullw	1
  4177  0105CC  0E60               	movlw	low _mdbdata
  4178  0105CE  24F3               	addwf	prodl,w,c
  4179  0105D0  6ED9               	movwf	fsr2l,c
  4180  0105D2  0E00               	movlw	high _mdbdata
  4181  0105D4  20F4               	addwfc	prodh,w,c
  4182  0105D6  6EDA               	movwf	fsr2h,c
  4183  0105D8  EC77  F090         	call	_EUSART1_Read	;wreg free
  4184  0105DC  6EDF               	movwf	indf2,c
  4185                           
  4186                           ;mdb.c: 291: mdb_waitr();
  4187  0105DE  ECBB  F090         	call	_mdb_waitr	;wreg free
  4188                           
  4189                           ;mdb.c: 293: mdbflags.isdata = RC1STAbits.RX9D;
  4190  0105E2  A09D               	btfss	3997,0,c	;volatile
  4191  0105E4  D002               	bra	u1875
  4192  0105E6  803E               	bsf	_mdbflags,0,c
  4193  0105E8  D001               	bra	u1877
  4194  0105EA                     u1875:
  4195  0105EA  903E               	bcf	_mdbflags,0,c
  4196  0105EC                     u1877:
  4197                           
  4198                           ;mdb.c: 294: TMR1_Initialize();
  4199  0105EC  ECC3  F08E         	call	_TMR1_Initialize	;wreg free
  4200                           
  4201                           ;mdb.c: 295: i++;
  4202  0105F0  2A21               	incf	mdb_comm@i,f,c
  4203  0105F2                     l2747:
  4204  0105F2  010E               	movlb	14	; () banked
  4205  0105F4  ABCD               	btfss	205,5,b	;volatile
  4206  0105F6  D002               	goto	u1890
  4207                           
  4208                           ; BSR set to: 14
  4209  0105F8  A03E               	btfss	_mdbflags,0,c
  4210  0105FA  D7E6               	goto	l2748
  4211  0105FC                     u1890:
  4212                           
  4213                           ; BSR set to: 14
  4214                           
  4215                           ; BSR set to: 14
  4216  0105FC  010E               	movlb	14	; () banked
  4217  0105FE  B1CE               	btfsc	206,0,b	;volatile
  4218  010600  D002               	goto	u1910
  4219                           
  4220                           ; BSR set to: 14
  4221  010602  A03E               	btfss	_mdbflags,0,c
  4222  010604  D7DD               	goto	l2746
  4223  010606                     u1910:
  4224                           
  4225                           ; BSR set to: 14
  4226                           ;mdb.c: 297: }
  4227                           ;mdb.c: 299: }
  4228                           ;mdb.c: 301: i--;
  4229                           
  4230                           ; BSR set to: 14
  4231                           
  4232                           ; BSR set to: 14
  4233  010606  0621               	decf	mdb_comm@i,f,c
  4234                           
  4235                           ; BSR set to: 14
  4236                           ;mdb.c: 303: mdbflags.timeout = PIR4bits.TMR1IF;
  4237  010608  A1CE               	btfss	206,0,b	;volatile
  4238  01060A  D002               	bra	u1925
  4239  01060C  863E               	bsf	_mdbflags,3,c
  4240  01060E  D001               	bra	u1927
  4241  010610                     u1925:
  4242  010610  963E               	bcf	_mdbflags,3,c
  4243  010612                     u1927:
  4244                           
  4245                           ;mdb.c: 305: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  4246  010612  A03E               	btfss	_mdbflags,0,c
  4247  010614  D011               	goto	l2755
  4248  010616  5021               	movf	mdb_comm@i,w,c
  4249  010618  0D01               	mullw	1
  4250  01061A  0E60               	movlw	low _mdbdata
  4251  01061C  24F3               	addwf	prodl,w,c
  4252  01061E  6ED9               	movwf	fsr2l,c
  4253  010620  0E00               	movlw	high _mdbdata
  4254  010622  20F4               	addwfc	prodh,w,c
  4255  010624  6EDA               	movwf	fsr2h,c
  4256  010626  50DF               	movf	indf2,w,c
  4257  010628  B4D8               	btfsc	status,2,c
  4258  01062A  D006               	goto	l2755
  4259                           
  4260                           ;mdb.c: 306: {
  4261                           ;mdb.c: 307: TX1STAbits.TX9D = 1;
  4262  01062C  809E               	bsf	3998,0,c	;volatile
  4263                           
  4264                           ;mdb.c: 308: mdb_on();
  4265  01062E  ECC4  F090         	call	_mdb_on	;wreg free
  4266                           
  4267                           ;mdb.c: 309: mdb_transmit(0x00);
  4268  010632  0E00               	movlw	0
  4269  010634  EC89  F090         	call	_mdb_transmit
  4270  010638                     l2755:
  4271                           
  4272                           ;mdb.c: 311: }
  4273                           ;mdb.c: 313: mdb_on();
  4274  010638  ECC4  F090         	call	_mdb_on	;wreg free
  4275                           
  4276                           ;mdb.c: 315: return(i);
  4277  01063C  5021               	movf	mdb_comm@i,w,c
  4278  01063E  0012               	return	
  4279  010640                     __end_of_mdb_comm:
  4280                           	opt stack 0
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           postinc0	equ	0xFEE
  4288                           wreg	equ	0xFE8
  4289                           indf2	equ	0xFDF
  4290                           fsr2h	equ	0xFDA
  4291                           fsr2l	equ	0xFD9
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function _mdb_waitr *****************
  4295 ;; Defined at:
  4296 ;;		line 339 in file "mdb.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		None
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    2
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_mdb_comm
  4321 ;;		_cctalk_read
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text10
  4326  012176                     __ptext10:
  4327                           	opt stack 0
  4328  012176                     _mdb_waitr:
  4329                           	opt stack 24
  4330                           
  4331                           ;mdb.c: 342: {
  4332                           
  4333                           ;mdb.c: 341: while(BAUD1CONbits.RCIDL == 0)
  4334                           
  4335                           ;incstack = 0
  4336  012176  BC9F               	btfsc	3999,6,c	;volatile
  4337  012178  0012               	return	
  4338  01217A  D7FD               	goto	_mdb_waitr
  4339  01217C                     __end_of_mdb_waitr:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           prodh	equ	0xFF4
  4346                           prodl	equ	0xFF3
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           indf2	equ	0xFDF
  4350                           fsr2h	equ	0xFDA
  4351                           fsr2l	equ	0xFD9
  4352                           status	equ	0xFD8
  4353                           
  4354 ;; *************** function _mdb_transmit *****************
  4355 ;; Defined at:
  4356 ;;		line 440 in file "mdb.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  txbyte          1    wreg     unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  txbyte          1   19[COMRAM] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;Total ram usage:        1 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    3
  4377 ;; This function calls:
  4378 ;;		_EUSART1_Write
  4379 ;;		_mdb_waitx
  4380 ;; This function is called by:
  4381 ;;		_mdb_comm
  4382 ;;		_mdb_test
  4383 ;;		_cctalk_comm
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text11
  4388  012112                     __ptext11:
  4389                           	opt stack 0
  4390  012112                     _mdb_transmit:
  4391                           	opt stack 23
  4392                           
  4393                           ;incstack = 0
  4394                           ;mdb_transmit@txbyte stored from wreg
  4395  012112  6E1E               	movwf	mdb_transmit@txbyte,c
  4396                           
  4397                           ;mdb.c: 442: EUSART1_Write(txbyte);
  4398  012114  501E               	movf	mdb_transmit@txbyte,w,c
  4399  012116  EC90  F090         	call	_EUSART1_Write
  4400                           
  4401                           ;mdb.c: 443: mdb_waitx();
  4402  01211A  ECBE  F090         	call	_mdb_waitx	;wreg free
  4403  01211E  0012               	return		;funcret
  4404  012120                     __end_of_mdb_transmit:
  4405                           	opt stack 0
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           postinc0	equ	0xFEE
  4413                           wreg	equ	0xFE8
  4414                           indf2	equ	0xFDF
  4415                           fsr2h	equ	0xFDA
  4416                           fsr2l	equ	0xFD9
  4417                           status	equ	0xFD8
  4418                           
  4419 ;; *************** function _mdb_waitx *****************
  4420 ;; Defined at:
  4421 ;;		line 331 in file "mdb.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		None
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;Total ram usage:        0 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    2
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_mdb_transmit
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text12
  4450  01217C                     __ptext12:
  4451                           	opt stack 0
  4452  01217C                     _mdb_waitx:
  4453                           	opt stack 23
  4454                           
  4455                           ;mdb.c: 334: {
  4456                           
  4457                           ;mdb.c: 333: while(TX1STAbits.TRMT == 0)
  4458                           
  4459                           ;incstack = 0
  4460  01217C  B29E               	btfsc	3998,1,c	;volatile
  4461  01217E  0012               	return	
  4462  012180  D7FD               	goto	_mdb_waitx
  4463  012182                     __end_of_mdb_waitx:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           prodh	equ	0xFF4
  4470                           prodl	equ	0xFF3
  4471                           postinc0	equ	0xFEE
  4472                           wreg	equ	0xFE8
  4473                           indf2	equ	0xFDF
  4474                           fsr2h	equ	0xFDA
  4475                           fsr2l	equ	0xFD9
  4476                           status	equ	0xFD8
  4477                           
  4478 ;; *************** function _EUSART1_Write *****************
  4479 ;; Defined at:
  4480 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  txData          1    wreg     unsigned char 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  txData          1   18[COMRAM] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;Total ram usage:        1 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    2
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_mdb_transmit
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text13
  4509  012120                     __ptext13:
  4510                           	opt stack 0
  4511  012120                     _EUSART1_Write:
  4512                           	opt stack 23
  4513                           
  4514                           ;incstack = 0
  4515                           ;EUSART1_Write@txData stored from wreg
  4516  012120  6E1D               	movwf	EUSART1_Write@txData,c
  4517  012122                     
  4518                           ;eusart1.c: 96: {
  4519                           
  4520                           ;eusart1.c: 95: while(0 == PIR3bits.TX1IF)
  4521  012122  010E               	movlb	14	; () banked
  4522  012124  A9CD               	btfss	205,4,b	;volatile
  4523  012126  D7FD               	goto	l6410
  4524                           
  4525                           ; BSR set to: 14
  4526                           ;eusart1.c: 97: }
  4527                           ;eusart1.c: 99: TX1REG = txData;
  4528                           
  4529                           ; BSR set to: 14
  4530  012128  C01D  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  4531                           
  4532                           ; BSR set to: 14
  4533  01212C  0012               	return		;funcret
  4534  01212E                     __end_of_EUSART1_Write:
  4535                           	opt stack 0
  4536                           tblptru	equ	0xFF8
  4537                           tblptrh	equ	0xFF7
  4538                           tblptrl	equ	0xFF6
  4539                           tablat	equ	0xFF5
  4540                           prodh	equ	0xFF4
  4541                           prodl	equ	0xFF3
  4542                           postinc0	equ	0xFEE
  4543                           wreg	equ	0xFE8
  4544                           indf2	equ	0xFDF
  4545                           fsr2h	equ	0xFDA
  4546                           fsr2l	equ	0xFD9
  4547                           status	equ	0xFD8
  4548                           
  4549 ;; *************** function _mdb_on *****************
  4550 ;; Defined at:
  4551 ;;		line 318 in file "mdb.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		None
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    2
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_mdb_comm
  4576 ;;		_mdb_test
  4577 ;;		_cctalk_init
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text14
  4582  012188                     __ptext14:
  4583                           	opt stack 0
  4584  012188                     _mdb_on:
  4585                           	opt stack 24
  4586                           
  4587                           ;mdb.c: 324: LATCbits.LATC0 = 1;
  4588                           
  4589                           ; BSR set to: 14
  4590                           ;incstack = 0
  4591  012188  8085               	bsf	3973,0,c	;volatile
  4592  01218A  0012               	return		;funcret
  4593  01218C                     __end_of_mdb_on:
  4594                           	opt stack 0
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           prodh	equ	0xFF4
  4600                           prodl	equ	0xFF3
  4601                           postinc0	equ	0xFEE
  4602                           wreg	equ	0xFE8
  4603                           indf2	equ	0xFDF
  4604                           fsr2h	equ	0xFDA
  4605                           fsr2l	equ	0xFD9
  4606                           status	equ	0xFD8
  4607                           
  4608 ;; *************** function _init_mdbdata *****************
  4609 ;; Defined at:
  4610 ;;		line 13 in file "mdb.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  initdata        1    wreg     unsigned char 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  initdata        1   18[COMRAM] unsigned char 
  4615 ;;  i               1   19[COMRAM] unsigned char 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;Total ram usage:        2 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    2
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_mdb_noten
  4636 ;;		_mdb_security
  4637 ;;		_mdb_comm
  4638 ;;		_cctalk_pinenter
  4639 ;;		_cctalk_comm
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text15
  4644  011F40                     __ptext15:
  4645                           	opt stack 0
  4646  011F40                     _init_mdbdata:
  4647                           	opt stack 24
  4648                           
  4649                           ;incstack = 0
  4650                           ;init_mdbdata@initdata stored from wreg
  4651  011F40  6E1D               	movwf	init_mdbdata@initdata,c
  4652                           
  4653                           ;mdb.c: 15: for(uint8_t i = 0;i < 33; i++)
  4654  011F42  0E00               	movlw	0
  4655  011F44  6E1E               	movwf	init_mdbdata@i,c
  4656  011F46                     l6626:
  4657  011F46  0E20               	movlw	32
  4658  011F48  641E               	cpfsgt	init_mdbdata@i,c
  4659  011F4A  D001               	goto	l2658
  4660  011F4C  0012               	return	
  4661  011F4E                     l2658:
  4662                           
  4663                           ;mdb.c: 16: {
  4664                           ;mdb.c: 17: mdbdata[i] = initdata;
  4665  011F4E  501E               	movf	init_mdbdata@i,w,c
  4666  011F50  0D01               	mullw	1
  4667  011F52  0E60               	movlw	low _mdbdata
  4668  011F54  24F3               	addwf	prodl,w,c
  4669  011F56  6ED9               	movwf	fsr2l,c
  4670  011F58  0E00               	movlw	high _mdbdata
  4671  011F5A  20F4               	addwfc	prodh,w,c
  4672  011F5C  6EDA               	movwf	fsr2h,c
  4673  011F5E  C01D  FFDF         	movff	init_mdbdata@initdata,indf2
  4674  011F62  2A1E               	incf	init_mdbdata@i,f,c
  4675  011F64  D7F0               	goto	l6626
  4676  011F66                     __end_of_init_mdbdata:
  4677                           	opt stack 0
  4678                           tblptru	equ	0xFF8
  4679                           tblptrh	equ	0xFF7
  4680                           tblptrl	equ	0xFF6
  4681                           tablat	equ	0xFF5
  4682                           prodh	equ	0xFF4
  4683                           prodl	equ	0xFF3
  4684                           postinc0	equ	0xFEE
  4685                           wreg	equ	0xFE8
  4686                           indf2	equ	0xFDF
  4687                           fsr2h	equ	0xFDA
  4688                           fsr2l	equ	0xFD9
  4689                           status	equ	0xFD8
  4690                           
  4691 ;; *************** function _EUSART1_Read *****************
  4692 ;; Defined at:
  4693 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      unsigned char 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;Total ram usage:        0 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    2
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_mdb_comm
  4718 ;;		_cctalk_read
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text16
  4723  0120EE                     __ptext16:
  4724                           	opt stack 0
  4725  0120EE                     _EUSART1_Read:
  4726                           	opt stack 24
  4727                           
  4728                           ;eusart1.c: 78: {
  4729                           
  4730                           ;eusart1.c: 77: while(!PIR3bits.RC1IF)
  4731                           
  4732                           ;incstack = 0
  4733  0120EE  010E               	movlb	14	; () banked
  4734  0120F0  ABCD               	btfss	205,5,b	;volatile
  4735  0120F2  D7FD               	goto	_EUSART1_Read
  4736                           
  4737                           ; BSR set to: 14
  4738                           ;eusart1.c: 79: }
  4739                           ;eusart1.c: 82: if(1 == RC1STAbits.OERR)
  4740  0120F4  A29D               	btfss	3997,1,c	;volatile
  4741  0120F6  D002               	goto	l91
  4742                           
  4743                           ; BSR set to: 14
  4744                           ;eusart1.c: 83: {
  4745                           ;eusart1.c: 86: RC1STAbits.CREN = 0;
  4746  0120F8  989D               	bcf	3997,4,c	;volatile
  4747                           
  4748                           ;eusart1.c: 87: RC1STAbits.CREN = 1;
  4749  0120FA  889D               	bsf	3997,4,c	;volatile
  4750  0120FC                     l91:
  4751                           
  4752                           ; BSR set to: 14
  4753                           ;eusart1.c: 88: }
  4754                           ;eusart1.c: 90: return RC1REG;
  4755                           
  4756                           ; BSR set to: 14
  4757  0120FC  5099               	movf	3993,w,c	;volatile
  4758  0120FE  0012               	return	
  4759  012100                     __end_of_EUSART1_Read:
  4760                           	opt stack 0
  4761                           tblptru	equ	0xFF8
  4762                           tblptrh	equ	0xFF7
  4763                           tblptrl	equ	0xFF6
  4764                           tablat	equ	0xFF5
  4765                           prodh	equ	0xFF4
  4766                           prodl	equ	0xFF3
  4767                           postinc0	equ	0xFEE
  4768                           wreg	equ	0xFE8
  4769                           indf2	equ	0xFDF
  4770                           fsr2h	equ	0xFDA
  4771                           fsr2l	equ	0xFD9
  4772                           status	equ	0xFD8
  4773                           
  4774 ;; *************** function _lcd_init *****************
  4775 ;; Defined at:
  4776 ;;		line 11 in file "lcd.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        2 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    8
  4797 ;; This function calls:
  4798 ;;		_hopper_test
  4799 ;;		_lcd_clockE
  4800 ;;		_lcd_test
  4801 ;;		_lcd_write
  4802 ;; This function is called by:
  4803 ;;		_main
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text17
  4808  010CC8                     __ptext17:
  4809                           	opt stack 0
  4810  010CC8                     _lcd_init:
  4811                           	opt stack 22
  4812                           
  4813                           ;lcd.c: 13: LATE = 0x00;
  4814                           
  4815                           ; BSR set to: 14
  4816                           ;incstack = 0
  4817  010CC8  0E00               	movlw	0
  4818  010CCA  6E87               	movwf	3975,c	;volatile
  4819                           
  4820                           ;lcd.c: 15: LATD = 0x03;
  4821  010CCC  0E03               	movlw	3
  4822  010CCE  6E86               	movwf	3974,c	;volatile
  4823                           
  4824                           ;lcd.c: 16: for(count = 3; count > 0; count-- )
  4825  010CD0  0E03               	movlw	3
  4826  010CD2  6E4C               	movwf	_count,c
  4827  010CD4                     l8892:
  4828  010CD4  504C               	movf	_count,w,c
  4829  010CD6  0A80               	xorlw	128
  4830  010CD8  0F7F               	addlw	-129
  4831  010CDA  A0D8               	btfss	status,0,c
  4832  010CDC  D00D               	goto	u3320
  4833                           
  4834                           ;lcd.c: 17: {
  4835                           ;lcd.c: 18: lcd_clockE();
  4836  010CDE  EC9E  F090         	call	_lcd_clockE	;wreg free
  4837                           
  4838                           ;lcd.c: 19: _delay((unsigned long)((5)*(12000000/4000.0)));
  4839  010CE2  0E14               	movlw	20
  4840  010CE4  0100               	movlb	0	; () banked
  4841  010CE6  6F9C               	movwf	??_lcd_init& (0+255),b
  4842  010CE8  0E79               	movlw	121
  4843  010CEA                     u3487:
  4844  010CEA  2EE8               	decfsz	wreg,f,c
  4845  010CEC  D7FE               	bra	u3487
  4846  010CEE  2F9C               	decfsz	??_lcd_init& (0+255),f,b
  4847  010CF0  D7FC               	bra	u3487
  4848  010CF2  D000               	nop2	
  4849  010CF4  064C               	decf	_count,f,c
  4850  010CF6  D7EE               	goto	l8892
  4851  010CF8                     u3320:
  4852                           
  4853                           ;lcd.c: 21: }
  4854                           ;lcd.c: 22: _delay((unsigned long)((50)*(12000000/4000000.0)));
  4855  010CF8  0E32               	movlw	50
  4856  010CFA                     u3497:
  4857  010CFA  2EE8               	decfsz	wreg,f,c
  4858  010CFC  D7FE               	bra	u3497
  4859                           
  4860                           ;lcd.c: 23: LATD = 0x02;
  4861  010CFE  0E02               	movlw	2
  4862  010D00  6E86               	movwf	3974,c	;volatile
  4863                           
  4864                           ;lcd.c: 24: lcd_clockE();
  4865  010D02  EC9E  F090         	call	_lcd_clockE	;wreg free
  4866                           
  4867                           ;lcd.c: 27: lcd_write(dispfunc3);
  4868  010D06  0E9B               	movlw	low _dispfunc3
  4869  010D08  6EF6               	movwf	tblptrl,c
  4870  010D0A                     	if	1	;There is more than 1 active tblptr byte
  4871  010D0A  0EFC               	movlw	high _dispfunc3
  4872  010D0C  6EF7               	movwf	tblptrh,c
  4873  010D0E                     	endif
  4874  010D0E                     	if	1	;There are 3 active tblptr bytes
  4875  010D0E  0E00               	movlw	low (_dispfunc3 shr (0+16))
  4876  010D10  6EF8               	movwf	tblptru,c
  4877  010D12                     	endif
  4878  010D12  0008               	tblrd		*
  4879  010D14  50F5               	movf	tablat,w,c
  4880  010D16  EC44  F08F         	call	_lcd_write
  4881                           
  4882                           ;lcd.c: 29: lcd_write(dispon);
  4883  010D1A  0E9A               	movlw	low _dispon
  4884  010D1C  6EF6               	movwf	tblptrl,c
  4885  010D1E                     	if	1	;There is more than 1 active tblptr byte
  4886  010D1E  0EFC               	movlw	high _dispon
  4887  010D20  6EF7               	movwf	tblptrh,c
  4888  010D22                     	endif
  4889  010D22                     	if	1	;There are 3 active tblptr bytes
  4890  010D22  0E00               	movlw	low (_dispon shr (0+16))
  4891  010D24  6EF8               	movwf	tblptru,c
  4892  010D26                     	endif
  4893  010D26  0008               	tblrd		*
  4894  010D28  50F5               	movf	tablat,w,c
  4895  010D2A  EC44  F08F         	call	_lcd_write
  4896                           
  4897                           ;lcd.c: 31: lcd_write(dispnormal);
  4898  010D2E  0E96               	movlw	low _dispnormal
  4899  010D30  6EF6               	movwf	tblptrl,c
  4900  010D32                     	if	1	;There is more than 1 active tblptr byte
  4901  010D32  0EFC               	movlw	high _dispnormal
  4902  010D34  6EF7               	movwf	tblptrh,c
  4903  010D36                     	endif
  4904  010D36                     	if	1	;There are 3 active tblptr bytes
  4905  010D36  0E00               	movlw	low (_dispnormal shr (0+16))
  4906  010D38  6EF8               	movwf	tblptru,c
  4907  010D3A                     	endif
  4908  010D3A  0008               	tblrd		*
  4909  010D3C  50F5               	movf	tablat,w,c
  4910  010D3E  EC44  F08F         	call	_lcd_write
  4911                           
  4912                           ;lcd.c: 33: lcd_write(dispclr);
  4913  010D42  0E99               	movlw	low _dispclr
  4914  010D44  6EF6               	movwf	tblptrl,c
  4915  010D46                     	if	1	;There is more than 1 active tblptr byte
  4916  010D46  0EFC               	movlw	high _dispclr
  4917  010D48  6EF7               	movwf	tblptrh,c
  4918  010D4A                     	endif
  4919  010D4A                     	if	1	;There are 3 active tblptr bytes
  4920  010D4A  0E00               	movlw	low (_dispclr shr (0+16))
  4921  010D4C  6EF8               	movwf	tblptru,c
  4922  010D4E                     	endif
  4923  010D4E  0008               	tblrd		*
  4924  010D50  50F5               	movf	tablat,w,c
  4925  010D52  EC44  F08F         	call	_lcd_write
  4926                           
  4927                           ;lcd.c: 35: lcd_test();
  4928  010D56  EC4D  F090         	call	_lcd_test	;wreg free
  4929                           
  4930                           ;lcd.c: 36: _delay((unsigned long)((250)*(12000000/4000.0)));
  4931  010D5A  0E04               	movlw	4
  4932  010D5C  0100               	movlb	0	; () banked
  4933  010D5E  6F9D               	movwf	(??_lcd_init+1)& (0+255),b
  4934  010D60  0ECF               	movlw	207
  4935  010D62  6F9C               	movwf	??_lcd_init& (0+255),b
  4936  010D64  0E01               	movlw	1
  4937  010D66                     u3507:
  4938  010D66  2EE8               	decfsz	wreg,f,c
  4939  010D68  D7FE               	bra	u3507
  4940  010D6A  2F9C               	decfsz	??_lcd_init& (0+255),f,b
  4941  010D6C  D7FC               	bra	u3507
  4942  010D6E  2F9D               	decfsz	(??_lcd_init+1)& (0+255),f,b
  4943  010D70  D7FA               	bra	u3507
  4944  010D72  D000               	nop2	
  4945  010D74  F000               	nop		;# 
  4946                           
  4947                           ;lcd.c: 38: hopper_test();
  4948  010D76  EC63  F090         	call	_hopper_test	;wreg free
  4949  010D7A  F000               	nop		;# 
  4950  010D7C  0012               	return		;funcret
  4951  010D7E                     __end_of_lcd_init:
  4952                           	opt stack 0
  4953                           tblptru	equ	0xFF8
  4954                           tblptrh	equ	0xFF7
  4955                           tblptrl	equ	0xFF6
  4956                           tablat	equ	0xFF5
  4957                           prodh	equ	0xFF4
  4958                           prodl	equ	0xFF3
  4959                           postinc0	equ	0xFEE
  4960                           wreg	equ	0xFE8
  4961                           indf2	equ	0xFDF
  4962                           fsr2h	equ	0xFDA
  4963                           fsr2l	equ	0xFD9
  4964                           status	equ	0xFD8
  4965                           
  4966 ;; *************** function _lcd_test *****************
  4967 ;; Defined at:
  4968 ;;		line 298 in file "lcd.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  character       1   25[COMRAM] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      void 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;Total ram usage:        1 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    7
  4989 ;; This function calls:
  4990 ;;		_lcd_writeC
  4991 ;; This function is called by:
  4992 ;;		_lcd_init
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text18
  4997  01209A                     __ptext18:
  4998                           	opt stack 0
  4999  01209A                     _lcd_test:
  5000                           	opt stack 22
  5001                           
  5002                           ;lcd.c: 300: uint8_t character = 0x30;
  5003                           
  5004                           ;incstack = 0
  5005  01209A  0E30               	movlw	48
  5006  01209C  D004               	goto	L12
  5007  01209E                     
  5008                           ;lcd.c: 302: {
  5009                           ;lcd.c: 303: lcd_writeC(character);
  5010  01209E  5024               	movf	lcd_test@character,w,c
  5011  0120A0  EC97  F08B         	call	_lcd_writeC
  5012                           
  5013                           ;lcd.c: 304: character = character+ 1;
  5014  0120A4  2824               	incf	lcd_test@character,w,c
  5015  0120A6                     L12:
  5016  0120A6  6E24               	movwf	lcd_test@character,c
  5017  0120A8  0E7F               	movlw	127
  5018  0120AA  6424               	cpfsgt	lcd_test@character,c
  5019  0120AC  D7F8               	goto	l1537
  5020  0120AE  0012               	return	
  5021  0120B0                     __end_of_lcd_test:
  5022                           	opt stack 0
  5023                           tblptru	equ	0xFF8
  5024                           tblptrh	equ	0xFF7
  5025                           tblptrl	equ	0xFF6
  5026                           tablat	equ	0xFF5
  5027                           prodh	equ	0xFF4
  5028                           prodl	equ	0xFF3
  5029                           postinc0	equ	0xFEE
  5030                           wreg	equ	0xFE8
  5031                           indf2	equ	0xFDF
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _hopper_test *****************
  5037 ;; Defined at:
  5038 ;;		line 10 in file "hopper.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    6
  5059 ;; This function calls:
  5060 ;;		_hopper_pay
  5061 ;; This function is called by:
  5062 ;;		_lcd_init
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text19
  5067  0120C6                     __ptext19:
  5068                           	opt stack 0
  5069  0120C6                     _hopper_test:
  5070                           	opt stack 23
  5071                           
  5072                           ;hopper.c: 12: if(!hopper_pay(0x05))
  5073                           
  5074                           ;incstack = 0
  5075  0120C6  0E05               	movlw	5
  5076  0120C8  EC4E  F08D         	call	_hopper_pay
  5077  0120CC  0900               	iorlw	0
  5078  0120CE  A4D8               	btfss	status,2,c
  5079  0120D0  D002               	goto	l3631
  5080  0120D2  F000               	nop		;# 
  5081                           
  5082                           ;hopper.c: 15: }
  5083  0120D4  0012               	return	
  5084  0120D6                     l3631:
  5085  0120D6  F000               	nop		;# 
  5086  0120D8  0012               	return	
  5087  0120DA                     __end_of_hopper_test:
  5088                           	opt stack 0
  5089                           tblptru	equ	0xFF8
  5090                           tblptrh	equ	0xFF7
  5091                           tblptrl	equ	0xFF6
  5092                           tablat	equ	0xFF5
  5093                           prodh	equ	0xFF4
  5094                           prodl	equ	0xFF3
  5095                           postinc0	equ	0xFEE
  5096                           wreg	equ	0xFE8
  5097                           indf2	equ	0xFDF
  5098                           fsr2h	equ	0xFDA
  5099                           fsr2l	equ	0xFD9
  5100                           status	equ	0xFD8
  5101                           
  5102 ;; *************** function _hopper_pay *****************
  5103 ;; Defined at:
  5104 ;;		line 26 in file "hopper.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  change          1    wreg     unsigned char 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  change          1   30[COMRAM] unsigned char 
  5109 ;;  outcoins        1   31[COMRAM] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      unsigned char 
  5112 ;; Registers used:
  5113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;Total ram usage:        3 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    5
  5126 ;; This function calls:
  5127 ;;		_Update_coinsout
  5128 ;;		_cctalk_off
  5129 ;;		_cctalk_on
  5130 ;;		_pay_coin
  5131 ;; This function is called by:
  5132 ;;		_hopper_test
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text20
  5137  011A9C                     __ptext20:
  5138                           	opt stack 0
  5139  011A9C                     _hopper_pay:
  5140                           	opt stack 23
  5141                           
  5142                           ;incstack = 0
  5143                           ;hopper_pay@change stored from wreg
  5144  011A9C  6E29               	movwf	hopper_pay@change,c
  5145                           
  5146                           ;hopper.c: 28: cctalk_on();
  5147  011A9E  ECC6  F090         	call	_cctalk_on	;wreg free
  5148                           
  5149                           ;hopper.c: 29: uint8_t outcoins = 0x00;
  5150  011AA2  0E00               	movlw	0
  5151  011AA4  6E2A               	movwf	hopper_pay@outcoins,c
  5152                           
  5153                           ;hopper.c: 30: while(change > 0)
  5154  011AA6  D016               	goto	l3636
  5155  011AA8                     
  5156                           ;hopper.c: 31: {
  5157                           ;hopper.c: 32: venflags.nochange = pay_coin();
  5158  011AA8  EC80  F08A         	call	_pay_coin	;wreg free
  5159  011AAC  6E28               	movwf	??_hopper_pay& (0+255),c
  5160  011AAE  4628               	rlncf	??_hopper_pay,f,c
  5161  011AB0  4628               	rlncf	??_hopper_pay,f,c
  5162  011AB2  4628               	rlncf	??_hopper_pay,f,c
  5163  011AB4  502C               	movf	_venflags,w,c
  5164  011AB6  1828               	xorwf	??_hopper_pay,w,c
  5165  011AB8  0BF7               	andlw	-9
  5166  011ABA  1828               	xorwf	??_hopper_pay,w,c
  5167  011ABC  6E2C               	movwf	_venflags,c
  5168                           
  5169                           ;hopper.c: 33: if(venflags.nochange)
  5170  011ABE  A62C               	btfss	_venflags,3,c
  5171  011AC0  D007               	goto	l3638
  5172                           
  5173                           ;hopper.c: 34: {
  5174                           ;hopper.c: 35: cctalk_off();
  5175  011AC2  ECC8  F090         	call	_cctalk_off	;wreg free
  5176                           
  5177                           ;hopper.c: 36: Update_coinsout(outcoins);
  5178  011AC6  502A               	movf	hopper_pay@outcoins,w,c
  5179  011AC8  ECFB  F08B         	call	_Update_coinsout
  5180                           
  5181                           ;hopper.c: 37: return 1;
  5182  011ACC  0E01               	movlw	1
  5183  011ACE  0012               	return	
  5184  011AD0                     l3638:
  5185                           
  5186                           ;hopper.c: 38: }
  5187                           ;hopper.c: 39: outcoins++;
  5188  011AD0  2A2A               	incf	hopper_pay@outcoins,f,c
  5189                           
  5190                           ;hopper.c: 40: change--;
  5191  011AD2  0629               	decf	hopper_pay@change,f,c
  5192  011AD4                     l3636:
  5193  011AD4  5029               	movf	hopper_pay@change,w,c
  5194  011AD6  A4D8               	btfss	status,2,c
  5195  011AD8  D7E7               	goto	l3637
  5196                           
  5197                           ;hopper.c: 41: }
  5198                           ;hopper.c: 42: cctalk_off();
  5199  011ADA  ECC8  F090         	call	_cctalk_off	;wreg free
  5200                           
  5201                           ;hopper.c: 43: Update_coinsout(outcoins);
  5202  011ADE  502A               	movf	hopper_pay@outcoins,w,c
  5203  011AE0  ECFB  F08B         	call	_Update_coinsout
  5204                           
  5205                           ;hopper.c: 44: return 0;
  5206  011AE4  0E00               	movlw	0
  5207  011AE6  0012               	return	
  5208  011AE8                     __end_of_hopper_pay:
  5209                           	opt stack 0
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           postinc0	equ	0xFEE
  5217                           wreg	equ	0xFE8
  5218                           indf2	equ	0xFDF
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function _pay_coin *****************
  5224 ;; Defined at:
  5225 ;;		line 64 in file "hopper.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      unsigned char 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    4
  5246 ;; This function calls:
  5247 ;;		_Reset_hopper
  5248 ;;		_TMR2_Initialize
  5249 ;;		_TMR4_Initialize
  5250 ;;		_switch_read
  5251 ;; This function is called by:
  5252 ;;		_hopper_pay
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text21
  5257  011500                     __ptext21:
  5258                           	opt stack 0
  5259  011500                     _pay_coin:
  5260                           	opt stack 23
  5261                           
  5262                           ;hopper.c: 66: hopercount = 3;
  5263                           
  5264                           ;incstack = 0
  5265  011500  0E03               	movlw	3
  5266  011502  0100               	movlb	0	; () banked
  5267  011504  6FB4               	movwf	_hopercount& (0+255),b
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;hopper.c: 67: if(switch_read())
  5271  011506  ECD8  F08C         	call	_switch_read	;wreg free
  5272  01150A  0900               	iorlw	0
  5273  01150C  B4D8               	btfsc	status,2,c
  5274  01150E  D011               	goto	l3648
  5275                           
  5276                           ;hopper.c: 68: {
  5277                           ;hopper.c: 69: TMR2_Initialize();
  5278  011510  ECE5  F08F         	call	_TMR2_Initialize	;wreg free
  5279  011514  ECD8  F08C         	call	_switch_read	;wreg free
  5280  011518  0900               	iorlw	0
  5281  01151A  B4D8               	btfsc	status,2,c
  5282  01151C  D003               	goto	u1970
  5283  01151E  010E               	movlb	14	; () banked
  5284  011520  A3CE               	btfss	206,1,b	;volatile
  5285  011522  D7F8               	goto	l3650
  5286  011524                     u1970:
  5287                           
  5288                           ;hopper.c: 71: if(PIR4bits.TMR2IF)
  5289                           
  5290                           ; BSR set to: 14
  5291  011524  010E               	movlb	14	; () banked
  5292  011526  A3CE               	btfss	206,1,b	;volatile
  5293  011528  D002               	goto	l3654
  5294                           
  5295                           ; BSR set to: 14
  5296                           ;hopper.c: 72: {
  5297                           ;hopper.c: 73: return 1;
  5298  01152A  0E01               	movlw	1
  5299                           
  5300                           ; BSR set to: 14
  5301                           ;hopper.c: 74: }
  5302                           
  5303                           ; BSR set to: 14
  5304  01152C  0012               	return	
  5305  01152E                     l3654:
  5306                           
  5307                           ; BSR set to: 14
  5308                           ;hopper.c: 75: else
  5309                           ;hopper.c: 76: {
  5310                           ;hopper.c: 77: return 0;
  5311                           
  5312                           ; BSR set to: 14
  5313  01152E  0E00               	movlw	0
  5314                           
  5315                           ; BSR set to: 14
  5316                           ;hopper.c: 78: }
  5317                           ;hopper.c: 79: }
  5318                           
  5319                           ; BSR set to: 14
  5320  011530  0012               	return	
  5321  011532                     l3648:
  5322                           
  5323                           ;hopper.c: 80: else
  5324                           ;hopper.c: 81: {
  5325                           ;hopper.c: 82: TMR4_Initialize();
  5326                           
  5327                           ; BSR set to: 14
  5328  011532  EC02  F090         	call	_TMR4_Initialize	;wreg free
  5329                           
  5330                           ;hopper.c: 84: while(!switch_read())
  5331  011536  D00A               	goto	l3661
  5332  011538                     l3659:
  5333                           
  5334                           ;hopper.c: 85: {
  5335                           ;hopper.c: 86: if(PIR4bits.TMR4IF)
  5336  011538  010E               	movlb	14	; () banked
  5337  01153A  A7CE               	btfss	206,3,b	;volatile
  5338  01153C  D007               	goto	l3661
  5339                           
  5340                           ; BSR set to: 14
  5341                           ;hopper.c: 87: {
  5342                           ;hopper.c: 88: if(Reset_hopper())
  5343  01153E  ECFE  F08D         	call	_Reset_hopper	;wreg free
  5344  011542  0900               	iorlw	0
  5345  011544  B4D8               	btfsc	status,2,c
  5346  011546  D002               	goto	l3661
  5347                           
  5348                           ;hopper.c: 89: {
  5349                           ;hopper.c: 90: return 1;
  5350  011548  0E01               	movlw	1
  5351  01154A  0012               	return	
  5352  01154C                     l3661:
  5353  01154C  ECD8  F08C         	call	_switch_read	;wreg free
  5354  011550  0900               	iorlw	0
  5355  011552  B4D8               	btfsc	status,2,c
  5356  011554  D7F1               	goto	l3659
  5357                           
  5358                           ;hopper.c: 91: }
  5359                           ;hopper.c: 93: }
  5360                           ;hopper.c: 94: }
  5361                           ;hopper.c: 95: TMR2_Initialize();
  5362  011556  ECE5  F08F         	call	_TMR2_Initialize	;wreg free
  5363  01155A  ECD8  F08C         	call	_switch_read	;wreg free
  5364  01155E  0900               	iorlw	0
  5365  011560  B4D8               	btfsc	status,2,c
  5366  011562  D003               	goto	u2030
  5367  011564  010E               	movlb	14	; () banked
  5368  011566  A3CE               	btfss	206,1,b	;volatile
  5369  011568  D7F8               	goto	l3664
  5370  01156A                     u2030:
  5371                           
  5372                           ;hopper.c: 97: if(PIR4bits.TMR2IF)
  5373                           
  5374                           ; BSR set to: 14
  5375  01156A  010E               	movlb	14	; () banked
  5376  01156C  A3CE               	btfss	206,1,b	;volatile
  5377  01156E  D002               	goto	l3668
  5378                           
  5379                           ; BSR set to: 14
  5380                           ;hopper.c: 98: {
  5381                           ;hopper.c: 99: return 1;
  5382  011570  0E01               	movlw	1
  5383                           
  5384                           ; BSR set to: 14
  5385                           ;hopper.c: 100: }
  5386                           
  5387                           ; BSR set to: 14
  5388  011572  0012               	return	
  5389  011574                     l3668:
  5390                           
  5391                           ; BSR set to: 14
  5392                           ;hopper.c: 101: else
  5393                           ;hopper.c: 102: {
  5394                           ;hopper.c: 103: return 0;
  5395                           
  5396                           ; BSR set to: 14
  5397  011574  0E00               	movlw	0
  5398                           
  5399                           ; BSR set to: 14
  5400                           
  5401                           ; BSR set to: 14
  5402  011576  0012               	return	
  5403  011578                     __end_of_pay_coin:
  5404                           	opt stack 0
  5405                           tblptru	equ	0xFF8
  5406                           tblptrh	equ	0xFF7
  5407                           tblptrl	equ	0xFF6
  5408                           tablat	equ	0xFF5
  5409                           prodh	equ	0xFF4
  5410                           prodl	equ	0xFF3
  5411                           postinc0	equ	0xFEE
  5412                           wreg	equ	0xFE8
  5413                           indf2	equ	0xFDF
  5414                           fsr2h	equ	0xFDA
  5415                           fsr2l	equ	0xFD9
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _switch_read *****************
  5419 ;; Defined at:
  5420 ;;		line 110 in file "hopper.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      unsigned char 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;Total ram usage:        1 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    2
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_pay_coin
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text22
  5449  0119B0                     __ptext22:
  5450                           	opt stack 0
  5451  0119B0                     _switch_read:
  5452                           	opt stack 24
  5453                           
  5454                           ;hopper.c: 112: if(PORTBbits.RB4 == venflags.swclosed)
  5455                           
  5456                           ;incstack = 0
  5457  0119B0  A22E               	btfss	_venflags+2,1,c
  5458  0119B2  D002               	goto	u1700
  5459  0119B4  0E01               	movlw	1
  5460  0119B6  D001               	goto	u1702
  5461  0119B8                     u1700:
  5462  0119B8  0E00               	movlw	0
  5463  0119BA                     u1702:
  5464  0119BA  6E1D               	movwf	??_switch_read& (0+255),c
  5465  0119BC  A88E               	btfss	3982,4,c	;volatile
  5466  0119BE  D002               	goto	u1710
  5467  0119C0  0E01               	movlw	1
  5468  0119C2  D001               	goto	u1712
  5469  0119C4                     u1710:
  5470  0119C4  0E00               	movlw	0
  5471  0119C6                     u1712:
  5472  0119C6  1A1D               	xorwf	??_switch_read,f,c
  5473  0119C8  A4D8               	btfss	status,2,c
  5474  0119CA  D012               	goto	l3674
  5475                           
  5476                           ;hopper.c: 113: {
  5477                           ;hopper.c: 114: if(venflags.swclosed)
  5478  0119CC  A22E               	btfss	_venflags+2,1,c
  5479  0119CE  D008               	goto	l3673
  5480                           
  5481                           ;hopper.c: 115: {
  5482                           ;hopper.c: 116: _delay((unsigned long)((5)*(12000000/4000.0)));
  5483  0119D0  0E14               	movlw	20
  5484  0119D2  6E1D               	movwf	??_switch_read& (0+255),c
  5485  0119D4  0E7A               	movlw	122
  5486  0119D6                     u3517:
  5487  0119D6  2EE8               	decfsz	wreg,f,c
  5488  0119D8  D7FE               	bra	u3517
  5489  0119DA  2E1D               	decfsz	??_switch_read& (0+255),f,c
  5490  0119DC  D7FC               	bra	u3517
  5491                           
  5492                           ;hopper.c: 117: }
  5493  0119DE  D008               	goto	l3674
  5494  0119E0                     l3673:
  5495                           
  5496                           ;hopper.c: 118: else
  5497                           ;hopper.c: 119: {
  5498                           ;hopper.c: 120: _delay((unsigned long)((20)*(12000000/4000.0)));
  5499  0119E0  0E4E               	movlw	78
  5500  0119E2  6E1D               	movwf	??_switch_read& (0+255),c
  5501  0119E4  0EEB               	movlw	235
  5502  0119E6                     u3527:
  5503  0119E6  2EE8               	decfsz	wreg,f,c
  5504  0119E8  D7FE               	bra	u3527
  5505  0119EA  2E1D               	decfsz	??_switch_read& (0+255),f,c
  5506  0119EC  D7FC               	bra	u3527
  5507  0119EE  F000               	nop	
  5508  0119F0                     l3674:
  5509                           
  5510                           ;hopper.c: 121: }
  5511                           ;hopper.c: 122: }
  5512                           ;hopper.c: 123: if(PORTBbits.RB4)
  5513  0119F0  A88E               	btfss	3982,4,c	;volatile
  5514  0119F2  D003               	goto	l3675
  5515                           
  5516                           ;hopper.c: 124: {
  5517                           ;hopper.c: 125: venflags.swclosed = 0;
  5518  0119F4  922E               	bcf	_venflags+2,1,c
  5519                           
  5520                           ;hopper.c: 126: return 0;
  5521  0119F6  0E00               	movlw	0
  5522                           
  5523                           ;hopper.c: 127: }
  5524  0119F8  0012               	return	
  5525  0119FA                     l3675:
  5526                           
  5527                           ;hopper.c: 128: else
  5528                           ;hopper.c: 129: {
  5529                           ;hopper.c: 130: venflags.swclosed = 1;
  5530  0119FA  822E               	bsf	_venflags+2,1,c
  5531                           
  5532                           ;hopper.c: 131: return 1;
  5533  0119FC  0E01               	movlw	1
  5534  0119FE  0012               	return	
  5535  011A00                     __end_of_switch_read:
  5536                           	opt stack 0
  5537                           tblptru	equ	0xFF8
  5538                           tblptrh	equ	0xFF7
  5539                           tblptrl	equ	0xFF6
  5540                           tablat	equ	0xFF5
  5541                           prodh	equ	0xFF4
  5542                           prodl	equ	0xFF3
  5543                           postinc0	equ	0xFEE
  5544                           wreg	equ	0xFE8
  5545                           indf2	equ	0xFDF
  5546                           fsr2h	equ	0xFDA
  5547                           fsr2l	equ	0xFD9
  5548                           status	equ	0xFD8
  5549                           
  5550 ;; *************** function _Reset_hopper *****************
  5551 ;; Defined at:
  5552 ;;		line 47 in file "hopper.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      unsigned char 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;Total ram usage:        2 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    3
  5573 ;; This function calls:
  5574 ;;		_TMR4_Initialize
  5575 ;;		_cctalk_off
  5576 ;;		_cctalk_on
  5577 ;; This function is called by:
  5578 ;;		_pay_coin
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text23
  5583  011BFC                     __ptext23:
  5584                           	opt stack 0
  5585  011BFC                     _Reset_hopper:
  5586                           	opt stack 23
  5587                           
  5588                           ;hopper.c: 49: hopercount--;
  5589                           
  5590                           ;incstack = 0
  5591  011BFC  0100               	movlb	0	; () banked
  5592  011BFE  07B4               	decf	_hopercount& (0+255),f,b
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;hopper.c: 50: cctalk_off();
  5596  011C00  ECC8  F090         	call	_cctalk_off	;wreg free
  5597                           
  5598                           ;hopper.c: 51: _delay((unsigned long)((2000)*(12000000/4000.0)));
  5599  011C04  0E1F               	movlw	31
  5600  011C06  6E1E               	movwf	(??_Reset_hopper+1)& (0+255),c
  5601  011C08  0E71               	movlw	113
  5602  011C0A  6E1D               	movwf	??_Reset_hopper& (0+255),c
  5603  011C0C  0E1E               	movlw	30
  5604  011C0E                     u3537:
  5605  011C0E  2EE8               	decfsz	wreg,f,c
  5606  011C10  D7FE               	bra	u3537
  5607  011C12  2E1D               	decfsz	??_Reset_hopper& (0+255),f,c
  5608  011C14  D7FC               	bra	u3537
  5609  011C16  2E1E               	decfsz	(??_Reset_hopper+1)& (0+255),f,c
  5610  011C18  D7FA               	bra	u3537
  5611  011C1A  D000               	nop2	
  5612                           
  5613                           ;hopper.c: 52: TMR4_Initialize();
  5614  011C1C  EC02  F090         	call	_TMR4_Initialize	;wreg free
  5615                           
  5616                           ;hopper.c: 53: if(hopercount > 0)
  5617  011C20  0100               	movlb	0	; () banked
  5618  011C22  51B4               	movf	_hopercount& (0+255),w,b
  5619  011C24  0A80               	xorlw	128
  5620  011C26  0F7F               	addlw	-129
  5621  011C28  A0D8               	btfss	status,0,c
  5622  011C2A  D004               	goto	l3643
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;hopper.c: 54: {
  5626                           ;hopper.c: 55: cctalk_on();
  5627  011C2C  ECC6  F090         	call	_cctalk_on	;wreg free
  5628                           
  5629                           ;hopper.c: 56: return 0;
  5630  011C30  0E00               	movlw	0
  5631                           
  5632                           ;hopper.c: 57: }
  5633  011C32  0012               	return	
  5634  011C34                     l3643:
  5635                           
  5636                           ;hopper.c: 58: else
  5637                           ;hopper.c: 59: {
  5638                           ;hopper.c: 60: return 1;
  5639  011C34  0E01               	movlw	1
  5640  011C36  0012               	return	
  5641  011C38                     __end_of_Reset_hopper:
  5642                           	opt stack 0
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           prodh	equ	0xFF4
  5648                           prodl	equ	0xFF3
  5649                           postinc0	equ	0xFEE
  5650                           wreg	equ	0xFE8
  5651                           indf2	equ	0xFDF
  5652                           fsr2h	equ	0xFDA
  5653                           fsr2l	equ	0xFD9
  5654                           status	equ	0xFD8
  5655                           
  5656 ;; *************** function _cctalk_on *****************
  5657 ;; Defined at:
  5658 ;;		line 137 in file "cctalk.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      void 
  5665 ;; Registers used:
  5666 ;;		None
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;Total ram usage:        0 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    2
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_hopper_pay
  5683 ;;		_Reset_hopper
  5684 ;;		_cctalk_init
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text24
  5689  01218C                     __ptext24:
  5690                           	opt stack 0
  5691  01218C                     _cctalk_on:
  5692                           	opt stack 23
  5693                           
  5694                           ;cctalk.c: 144: LATCbits.LATC1 = 1;
  5695                           
  5696                           ;incstack = 0
  5697  01218C  8285               	bsf	3973,1,c	;volatile
  5698  01218E  0012               	return		;funcret
  5699  012190                     __end_of_cctalk_on:
  5700                           	opt stack 0
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           postinc0	equ	0xFEE
  5708                           wreg	equ	0xFE8
  5709                           indf2	equ	0xFDF
  5710                           fsr2h	equ	0xFDA
  5711                           fsr2l	equ	0xFD9
  5712                           status	equ	0xFD8
  5713                           
  5714 ;; *************** function _cctalk_off *****************
  5715 ;; Defined at:
  5716 ;;		line 132 in file "cctalk.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;		None
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		None
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;Total ram usage:        0 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    2
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_hopper_pay
  5741 ;;		_Reset_hopper
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text25
  5746  012190                     __ptext25:
  5747                           	opt stack 0
  5748  012190                     _cctalk_off:
  5749                           	opt stack 23
  5750                           
  5751                           ;cctalk.c: 134: LATCbits.LATC1 = 0;
  5752                           
  5753                           ;incstack = 0
  5754  012190  9285               	bcf	3973,1,c	;volatile
  5755  012192  0012               	return		;funcret
  5756  012194                     __end_of_cctalk_off:
  5757                           	opt stack 0
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           postinc0	equ	0xFEE
  5765                           wreg	equ	0xFE8
  5766                           indf2	equ	0xFDF
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _Update_coinsout *****************
  5772 ;; Defined at:
  5773 ;;		line 135 in file "hopper.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  coinsout        1    wreg     unsigned char 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  coinsout        1   28[COMRAM] unsigned char 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;Total ram usage:        1 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:    4
  5794 ;; This function calls:
  5795 ;;		_Read_NVstore
  5796 ;;		_Write_NVstore
  5797 ;; This function is called by:
  5798 ;;		_hopper_pay
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text26
  5803  0117F6                     __ptext26:
  5804                           	opt stack 0
  5805  0117F6                     _Update_coinsout:
  5806                           	opt stack 23
  5807                           
  5808                           ;incstack = 0
  5809                           ;Update_coinsout@coinsout stored from wreg
  5810  0117F6  6E27               	movwf	Update_coinsout@coinsout,c
  5811                           
  5812                           ;hopper.c: 137: Read_NVstore(cashoutv, ((uint8_t*) &pvcash), 0x02);
  5813  0117F8  0E51               	movlw	low _cashoutv
  5814  0117FA  6EF6               	movwf	tblptrl,c
  5815  0117FC                     	if	1	;There is more than 1 active tblptr byte
  5816  0117FC  0EFC               	movlw	high _cashoutv
  5817  0117FE  6EF7               	movwf	tblptrh,c
  5818  011800                     	endif
  5819  011800                     	if	1	;There are 3 active tblptr bytes
  5820  011800  0E00               	movlw	low (_cashoutv shr (0+16))
  5821  011802  6EF8               	movwf	tblptru,c
  5822  011804                     	endif
  5823  011804  0009               	tblrd		*+
  5824  011806  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
  5825  01180A  000A               	tblrd		*-
  5826  01180C  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
  5827  011810  0E4A               	movlw	low _pvcash
  5828  011812  6E21               	movwf	Read_NVstore@storemem,c
  5829  011814  0E00               	movlw	high _pvcash
  5830  011816  6E22               	movwf	Read_NVstore@storemem+1,c
  5831  011818  0E02               	movlw	2
  5832  01181A  6E23               	movwf	Read_NVstore@storesize,c
  5833  01181C  ECF8  F08E         	call	_Read_NVstore	;wreg free
  5834                           
  5835                           ;hopper.c: 138: pvcash = pvcash + (uint16_t)coinsout;
  5836  011820  5027               	movf	Update_coinsout@coinsout,w,c
  5837  011822  244A               	addwf	_pvcash,w,c	;volatile
  5838  011824  6E4A               	movwf	_pvcash,c	;volatile
  5839  011826  0E00               	movlw	0
  5840  011828  204B               	addwfc	_pvcash+1,w,c	;volatile
  5841  01182A  6E4B               	movwf	_pvcash+1,c	;volatile
  5842                           
  5843                           ;hopper.c: 139: Write_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
  5844  01182C  0E5F               	movlw	low _cashinv
  5845  01182E  6EF6               	movwf	tblptrl,c
  5846  011830                     	if	1	;There is more than 1 active tblptr byte
  5847  011830  0EFC               	movlw	high _cashinv
  5848  011832  6EF7               	movwf	tblptrh,c
  5849  011834                     	endif
  5850  011834                     	if	1	;There are 3 active tblptr bytes
  5851  011834  0E00               	movlw	low (_cashinv shr (0+16))
  5852  011836  6EF8               	movwf	tblptru,c
  5853  011838                     	endif
  5854  011838  0009               	tblrd		*+
  5855  01183A  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
  5856  01183E  000A               	tblrd		*-
  5857  011840  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
  5858  011844  0E4A               	movlw	low _pvcash
  5859  011846  6E23               	movwf	Write_NVstore@storemem,c
  5860  011848  0E00               	movlw	high _pvcash
  5861  01184A  6E24               	movwf	Write_NVstore@storemem+1,c
  5862  01184C  0E02               	movlw	2
  5863  01184E  6E25               	movwf	Write_NVstore@storesize,c
  5864  011850  EC8C  F08F         	call	_Write_NVstore	;wreg free
  5865  011854  0012               	return		;funcret
  5866  011856                     __end_of_Update_coinsout:
  5867                           	opt stack 0
  5868                           tblptru	equ	0xFF8
  5869                           tblptrh	equ	0xFF7
  5870                           tblptrl	equ	0xFF6
  5871                           tablat	equ	0xFF5
  5872                           prodh	equ	0xFF4
  5873                           prodl	equ	0xFF3
  5874                           postinc0	equ	0xFEE
  5875                           wreg	equ	0xFE8
  5876                           indf2	equ	0xFDF
  5877                           fsr2h	equ	0xFDA
  5878                           fsr2l	equ	0xFD9
  5879                           status	equ	0xFD8
  5880                           
  5881 ;; *************** function _enter_service *****************
  5882 ;; Defined at:
  5883 ;;		line 165 in file "main.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;Total ram usage:        0 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:   12
  5904 ;; This function calls:
  5905 ;;		_Audit
  5906 ;;		_Clear_cred
  5907 ;;		_Hopper_coin
  5908 ;;		_Sensor_set
  5909 ;;		_Vend_setup
  5910 ;;		_butindb
  5911 ;;		_lcd_string
  5912 ;;		_mdb_unlock
  5913 ;;		_price_set
  5914 ;;		_set_notes
  5915 ;; This function is called by:
  5916 ;;		_main
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text27
  5921  011044                     __ptext27:
  5922                           	opt stack 0
  5923  011044                     _enter_service:
  5924                           	opt stack 18
  5925                           
  5926                           ;main.c: 167: mdb_unlock();
  5927                           
  5928                           ;incstack = 0
  5929  011044  ECE0  F084         	call	_mdb_unlock	;wreg free
  5930                           
  5931                           ;main.c: 168: lcd_string(servmsg, line1);
  5932  011048  0E9E               	movlw	low _servmsg
  5933  01104A  6E24               	movwf	lcd_string@lcdstring,c
  5934  01104C  0EFC               	movlw	high _servmsg
  5935  01104E  6E25               	movwf	lcd_string@lcdstring+1,c
  5936  011050  0E8F               	movlw	low _line1
  5937  011052  6EF6               	movwf	tblptrl,c
  5938  011054                     	if	1	;There is more than 1 active tblptr byte
  5939  011054  0EFC               	movlw	high _line1
  5940  011056  6EF7               	movwf	tblptrh,c
  5941  011058                     	endif
  5942  011058                     	if	1	;There are 3 active tblptr bytes
  5943  011058  0E00               	movlw	low (_line1 shr (0+16))
  5944  01105A  6EF8               	movwf	tblptru,c
  5945  01105C                     	endif
  5946  01105C  0008               	tblrd		*
  5947  01105E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5948  011062  EC75  F087         	call	_lcd_string	;wreg free
  5949                           
  5950                           ;main.c: 171: while(venflags.service)
  5951  011066  D036               	goto	l1020
  5952  011068                     
  5953                           ;main.c: 172: {
  5954                           ;main.c: 173: buttons = butindb();
  5955  011068  EC2B  F08F         	call	_butindb	;wreg free
  5956  01106C  6E39               	movwf	_buttons,c	;volatile
  5957                           
  5958                           ;main.c: 174: switch(buttons)
  5959  01106E  D019               	goto	l1018
  5960  011070  ECCA  F090         	call	_Audit	;wreg free
  5961                           
  5962                           ;main.c: 177: break;
  5963  011074  D02F               	goto	l1020
  5964  011076  EC09  F084         	call	_Sensor_set	;wreg free
  5965                           
  5966                           ;main.c: 179: break;
  5967  01107A  D02C               	goto	l1020
  5968  01107C  EC99  F083         	call	_Hopper_coin	;wreg free
  5969                           
  5970                           ;main.c: 181: break;
  5971  011080  D029               	goto	l1020
  5972  011082  EC20  F083         	call	_set_notes	;wreg free
  5973                           
  5974                           ;main.c: 183: break;
  5975  011086  D026               	goto	l1020
  5976  011088  EC58  F08C         	call	_Clear_cred	;wreg free
  5977                           
  5978                           ;main.c: 185: venflags.service = 0;
  5979  01108C  9E2C               	bcf	_venflags,7,c
  5980  01108E  00FF               	reset		;# 
  5981  011090  ECC6  F089         	call	_price_set	;wreg free
  5982                           
  5983                           ;main.c: 188: break;
  5984  011094  D01F               	goto	l1020
  5985  011096  EC1D  F081         	call	_Vend_setup	;wreg free
  5986                           
  5987                           ;main.c: 190: break;
  5988  01109A  D01C               	goto	l1020
  5989  01109C                     l1027:
  5990  01109C  9E2C               	bcf	_venflags,7,c
  5991  01109E  00FF               	reset		;# 
  5992                           
  5993                           ;main.c: 194: }
  5994                           
  5995                           ;main.c: 193: break;
  5996  0110A0  D019               	goto	l1020
  5997  0110A2                     l1018:
  5998  0110A2  5039               	movf	_buttons,w,c	;volatile
  5999                           
  6000                           ; Switch size 1, requested type "space"
  6001                           ; Number of cases is 8, Range of values is 1 to 128
  6002                           ; switch strategies available:
  6003                           ; Name         Instructions Cycles
  6004                           ; simple_byte           25    13 (average)
  6005                           ;	Chosen strategy is simple_byte
  6006  0110A4  0A01               	xorlw	1	; case 1
  6007  0110A6  B4D8               	btfsc	status,2,c
  6008  0110A8  D7E3               	goto	l1019
  6009  0110AA  0A03               	xorlw	3	; case 2
  6010  0110AC  B4D8               	btfsc	status,2,c
  6011  0110AE  D7E3               	goto	l1021
  6012  0110B0  0A06               	xorlw	6	; case 4
  6013  0110B2  B4D8               	btfsc	status,2,c
  6014  0110B4  D7E3               	goto	l1022
  6015  0110B6  0A0C               	xorlw	12	; case 8
  6016  0110B8  B4D8               	btfsc	status,2,c
  6017  0110BA  D7E3               	goto	l1023
  6018  0110BC  0A18               	xorlw	24	; case 16
  6019  0110BE  B4D8               	btfsc	status,2,c
  6020  0110C0  D7E3               	goto	l1024
  6021  0110C2  0A30               	xorlw	48	; case 32
  6022  0110C4  B4D8               	btfsc	status,2,c
  6023  0110C6  D7E4               	goto	l1025
  6024  0110C8  0A60               	xorlw	96	; case 64
  6025  0110CA  B4D8               	btfsc	status,2,c
  6026  0110CC  D7E4               	goto	l1026
  6027  0110CE  0AC0               	xorlw	192	; case 128
  6028  0110D0  B4D8               	btfsc	status,2,c
  6029  0110D2  D7E4               	goto	l1027
  6030  0110D4                     l1020:
  6031  0110D4  AE2C               	btfss	_venflags,7,c
  6032  0110D6  0012               	return	
  6033  0110D8  D7C7               	goto	l1017
  6034  0110DA                     __end_of_enter_service:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           postinc0	equ	0xFEE
  6043                           wreg	equ	0xFE8
  6044                           indf2	equ	0xFDF
  6045                           fsr2h	equ	0xFDA
  6046                           fsr2l	equ	0xFD9
  6047                           status	equ	0xFD8
  6048                           
  6049 ;; *************** function _set_notes *****************
  6050 ;; Defined at:
  6051 ;;		line 57 in file "mdb.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:   10
  6072 ;; This function calls:
  6073 ;;		_butindb
  6074 ;;		_displ_note
  6075 ;;		_enable_notes
  6076 ;;		_lcd_string
  6077 ;; This function is called by:
  6078 ;;		_enter_service
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text28
  6083  010640                     __ptext28:
  6084                           	opt stack 0
  6085  010640                     _set_notes:
  6086                           	opt stack 19
  6087                           
  6088                           ;mdb.c: 59: lcd_string(setnotes, line1);
  6089                           
  6090                           ;incstack = 0
  6091  010640  0E3E               	movlw	low _setnotes
  6092  010642  6E24               	movwf	lcd_string@lcdstring,c
  6093  010644  0EFD               	movlw	high _setnotes
  6094  010646  6E25               	movwf	lcd_string@lcdstring+1,c
  6095  010648  0E8F               	movlw	low _line1
  6096  01064A  6EF6               	movwf	tblptrl,c
  6097  01064C                     	if	1	;There is more than 1 active tblptr byte
  6098  01064C  0EFC               	movlw	high _line1
  6099  01064E  6EF7               	movwf	tblptrh,c
  6100  010650                     	endif
  6101  010650                     	if	1	;There are 3 active tblptr bytes
  6102  010650  0E00               	movlw	low (_line1 shr (0+16))
  6103  010652  6EF8               	movwf	tblptru,c
  6104  010654                     	endif
  6105  010654  0008               	tblrd		*
  6106  010656  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6107  01065A  EC75  F087         	call	_lcd_string	;wreg free
  6108                           
  6109                           ;mdb.c: 60: mdbflags.noteset = 1;
  6110  01065E  8A3E               	bsf	_mdbflags,5,c
  6111                           
  6112                           ;mdb.c: 61: mdbflags.endis = 1;
  6113  010660  8C3E               	bsf	_mdbflags,6,c
  6114                           
  6115                           ;mdb.c: 62: while(mdbflags.noteset)
  6116  010662  D064               	goto	l2673
  6117  010664                     
  6118                           ;mdb.c: 63: {
  6119                           ;mdb.c: 64: buttons = butindb();
  6120  010664  EC2B  F08F         	call	_butindb	;wreg free
  6121  010668  6E39               	movwf	_buttons,c	;volatile
  6122                           
  6123                           ;mdb.c: 65: notenum = buttons;
  6124  01066A  C039  F04D         	movff	_buttons,_notenum	;volatile
  6125                           
  6126                           ;mdb.c: 66: switch(buttons)
  6127  01066E  D048               	goto	l2675
  6128  010670  0ECD               	movlw	low _tenrand
  6129  010672  6E29               	movwf	displ_note@notestring,c
  6130  010674  0EFF               	movlw	high _tenrand
  6131  010676  6E2A               	movwf	displ_note@notestring+1,c
  6132  010678  EC56  F08E         	call	_displ_note	;wreg free
  6133  01067C  6E42               	movwf	_dspposition,c
  6134                           
  6135                           ;mdb.c: 70: enable_notes(0x01);
  6136  01067E  0E01               	movlw	1
  6137  010680  EC06  F08A         	call	_enable_notes
  6138                           
  6139                           ;mdb.c: 71: break;
  6140  010684  D050               	goto	l2677
  6141  010686  0EEE               	movlw	low _twentyrand
  6142  010688  6E29               	movwf	displ_note@notestring,c
  6143  01068A  0EFF               	movlw	high _twentyrand
  6144  01068C  6E2A               	movwf	displ_note@notestring+1,c
  6145  01068E  EC56  F08E         	call	_displ_note	;wreg free
  6146  010692  6E42               	movwf	_dspposition,c
  6147                           
  6148                           ;mdb.c: 74: enable_notes(0x02);
  6149  010694  0E02               	movlw	2
  6150  010696  EC06  F08A         	call	_enable_notes
  6151                           
  6152                           ;mdb.c: 75: break;
  6153  01069A  D045               	goto	l2677
  6154  01069C  0EE6               	movlw	low _fiftyrand
  6155  01069E  6E29               	movwf	displ_note@notestring,c
  6156  0106A0  0EFF               	movlw	high _fiftyrand
  6157  0106A2  6E2A               	movwf	displ_note@notestring+1,c
  6158  0106A4  EC56  F08E         	call	_displ_note	;wreg free
  6159  0106A8  6E42               	movwf	_dspposition,c
  6160                           
  6161                           ;mdb.c: 78: enable_notes(0x04);
  6162  0106AA  0E04               	movlw	4
  6163  0106AC  EC06  F08A         	call	_enable_notes
  6164                           
  6165                           ;mdb.c: 79: break;
  6166  0106B0  D03A               	goto	l2677
  6167  0106B2  0EDE               	movlw	low _hundredrand
  6168  0106B4  6E29               	movwf	displ_note@notestring,c
  6169  0106B6  0EFF               	movlw	high _hundredrand
  6170  0106B8  6E2A               	movwf	displ_note@notestring+1,c
  6171  0106BA  EC56  F08E         	call	_displ_note	;wreg free
  6172  0106BE  6E42               	movwf	_dspposition,c
  6173                           
  6174                           ;mdb.c: 82: enable_notes(0x08);
  6175  0106C0  0E08               	movlw	8
  6176  0106C2  EC06  F08A         	call	_enable_notes
  6177                           
  6178                           ;mdb.c: 83: break;
  6179  0106C6  D02F               	goto	l2677
  6180  0106C8  0ED6               	movlw	low _twohundredrand
  6181  0106CA  6E29               	movwf	displ_note@notestring,c
  6182  0106CC  0EFF               	movlw	high _twohundredrand
  6183  0106CE  6E2A               	movwf	displ_note@notestring+1,c
  6184  0106D0  EC56  F08E         	call	_displ_note	;wreg free
  6185  0106D4  6E42               	movwf	_dspposition,c
  6186                           
  6187                           ;mdb.c: 86: enable_notes(0x10);
  6188  0106D6  0E10               	movlw	16
  6189  0106D8  EC06  F08A         	call	_enable_notes
  6190                           
  6191                           ;mdb.c: 87: break;
  6192  0106DC  D024               	goto	l2677
  6193  0106DE  0E9E               	movlw	low _servmsg
  6194  0106E0  6E24               	movwf	lcd_string@lcdstring,c
  6195  0106E2  0EFC               	movlw	high _servmsg
  6196  0106E4  6E25               	movwf	lcd_string@lcdstring+1,c
  6197  0106E6  0E8F               	movlw	low _line1
  6198  0106E8  6EF6               	movwf	tblptrl,c
  6199  0106EA                     	if	1	;There is more than 1 active tblptr byte
  6200  0106EA  0EFC               	movlw	high _line1
  6201  0106EC  6EF7               	movwf	tblptrh,c
  6202  0106EE                     	endif
  6203  0106EE                     	if	1	;There are 3 active tblptr bytes
  6204  0106EE  0E00               	movlw	low (_line1 shr (0+16))
  6205  0106F0  6EF8               	movwf	tblptru,c
  6206  0106F2                     	endif
  6207  0106F2  0008               	tblrd		*
  6208  0106F4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6209  0106F8  EC75  F087         	call	_lcd_string	;wreg free
  6210                           
  6211                           ;mdb.c: 90: mdbflags.noteset = 0;
  6212  0106FC  9A3E               	bcf	_mdbflags,5,c
  6213                           
  6214                           ;mdb.c: 92: }
  6215                           
  6216                           ;mdb.c: 91: default : break;
  6217  0106FE  D013               	goto	l2677
  6218  010700                     l2675:
  6219  010700  5039               	movf	_buttons,w,c	;volatile
  6220                           
  6221                           ; Switch size 1, requested type "space"
  6222                           ; Number of cases is 6, Range of values is 1 to 128
  6223                           ; switch strategies available:
  6224                           ; Name         Instructions Cycles
  6225                           ; simple_byte           19    10 (average)
  6226                           ;	Chosen strategy is simple_byte
  6227  010702  0A01               	xorlw	1	; case 1
  6228  010704  B4D8               	btfsc	status,2,c
  6229  010706  D7B4               	goto	l2676
  6230  010708  0A03               	xorlw	3	; case 2
  6231  01070A  B4D8               	btfsc	status,2,c
  6232  01070C  D7BC               	goto	l2678
  6233  01070E  0A06               	xorlw	6	; case 4
  6234  010710  B4D8               	btfsc	status,2,c
  6235  010712  D7C4               	goto	l2679
  6236  010714  0A0C               	xorlw	12	; case 8
  6237  010716  B4D8               	btfsc	status,2,c
  6238  010718  D7CC               	goto	l2680
  6239  01071A  0A18               	xorlw	24	; case 16
  6240  01071C  B4D8               	btfsc	status,2,c
  6241  01071E  D7D4               	goto	l2681
  6242  010720  0A90               	xorlw	144	; case 128
  6243  010722  B4D8               	btfsc	status,2,c
  6244  010724  D7DC               	goto	l2682
  6245  010726                     l2677:
  6246                           
  6247                           ;mdb.c: 93: ((uint8_t*) &noteen)[0] = noteen_byte;
  6248  010726  C03C  F03D         	movff	_noteen_byte,_noteen	;volatile
  6249  01072A  F000               	nop		;# 
  6250  01072C                     l2673:
  6251  01072C  AA3E               	btfss	_mdbflags,5,c
  6252  01072E  0012               	return	
  6253  010730  D799               	goto	l2674
  6254  010732                     __end_of_set_notes:
  6255                           	opt stack 0
  6256                           tblptru	equ	0xFF8
  6257                           tblptrh	equ	0xFF7
  6258                           tblptrl	equ	0xFF6
  6259                           tablat	equ	0xFF5
  6260                           prodh	equ	0xFF4
  6261                           prodl	equ	0xFF3
  6262                           postinc0	equ	0xFEE
  6263                           wreg	equ	0xFE8
  6264                           indf2	equ	0xFDF
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8
  6268                           
  6269 ;; *************** function _enable_notes *****************
  6270 ;; Defined at:
  6271 ;;		line 98 in file "mdb.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  notenum         1    wreg     unsigned char 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  notenum         1   32[COMRAM] unsigned char 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;Total ram usage:        1 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    9
  6292 ;; This function calls:
  6293 ;;		_butindb
  6294 ;;		_displ_nendis
  6295 ;;		_lcd_string
  6296 ;;		_save_notes
  6297 ;; This function is called by:
  6298 ;;		_set_notes
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text29
  6303  01140C                     __ptext29:
  6304                           	opt stack 0
  6305  01140C                     _enable_notes:
  6306                           	opt stack 19
  6307                           
  6308                           ;incstack = 0
  6309                           ;enable_notes@notenum stored from wreg
  6310  01140C  6E2B               	movwf	enable_notes@notenum,c
  6311                           
  6312                           ;mdb.c: 100: mdbflags.endis = 1;
  6313  01140E  8C3E               	bsf	_mdbflags,6,c
  6314                           
  6315                           ;mdb.c: 101: displ_nendis(notenum);
  6316  011410  502B               	movf	enable_notes@notenum,w,c
  6317  011412  EC12  F08F         	call	_displ_nendis
  6318                           
  6319                           ;mdb.c: 102: while(mdbflags.endis)
  6320  011416  D034               	goto	l2692
  6321  011418                     
  6322                           ;mdb.c: 103: {
  6323                           ;mdb.c: 104: buttons = butindb();
  6324  011418  EC2B  F08F         	call	_butindb	;wreg free
  6325  01141C  6E39               	movwf	_buttons,c	;volatile
  6326                           
  6327                           ;mdb.c: 105: switch(buttons)
  6328  01141E  D026               	goto	l2690
  6329  011420  503C               	movf	_noteen_byte,w,c	;volatile
  6330  011422  102B               	iorwf	enable_notes@notenum,w,c
  6331  011424  6E3C               	movwf	_noteen_byte,c	;volatile
  6332                           
  6333                           ;mdb.c: 108: save_notes();
  6334  011426  ECB3  F08F         	call	_save_notes	;wreg free
  6335                           
  6336                           ;mdb.c: 109: displ_nendis(notenum);
  6337  01142A  502B               	movf	enable_notes@notenum,w,c
  6338  01142C  EC12  F08F         	call	_displ_nendis
  6339                           
  6340                           ;mdb.c: 110: break;
  6341  011430  D027               	goto	l2692
  6342  011432  502B               	movf	enable_notes@notenum,w,c
  6343  011434  0AFF               	xorlw	255
  6344  011436  143C               	andwf	_noteen_byte,w,c	;volatile
  6345  011438  6E3C               	movwf	_noteen_byte,c	;volatile
  6346                           
  6347                           ;mdb.c: 112: save_notes();
  6348  01143A  ECB3  F08F         	call	_save_notes	;wreg free
  6349                           
  6350                           ;mdb.c: 113: displ_nendis(notenum);
  6351  01143E  502B               	movf	enable_notes@notenum,w,c
  6352  011440  EC12  F08F         	call	_displ_nendis
  6353                           
  6354                           ;mdb.c: 114: break;
  6355  011444  D01D               	goto	l2692
  6356  011446                     l2694:
  6357  011446  9C3E               	bcf	_mdbflags,6,c
  6358                           
  6359                           ;mdb.c: 116: lcd_string(setnotes, line1);
  6360  011448  0E3E               	movlw	low _setnotes
  6361  01144A  6E24               	movwf	lcd_string@lcdstring,c
  6362  01144C  0EFD               	movlw	high _setnotes
  6363  01144E  6E25               	movwf	lcd_string@lcdstring+1,c
  6364  011450  0E8F               	movlw	low _line1
  6365  011452  6EF6               	movwf	tblptrl,c
  6366  011454                     	if	1	;There is more than 1 active tblptr byte
  6367  011454  0EFC               	movlw	high _line1
  6368  011456  6EF7               	movwf	tblptrh,c
  6369  011458                     	endif
  6370  011458                     	if	1	;There are 3 active tblptr bytes
  6371  011458  0E00               	movlw	low (_line1 shr (0+16))
  6372  01145A  6EF8               	movwf	tblptru,c
  6373  01145C                     	endif
  6374  01145C  0008               	tblrd		*
  6375  01145E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6376  011462  EC75  F087         	call	_lcd_string	;wreg free
  6377                           
  6378                           ;mdb.c: 117: buttons = 0;
  6379  011466  0E00               	movlw	0
  6380  011468  6E39               	movwf	_buttons,c	;volatile
  6381                           
  6382                           ;mdb.c: 119: }
  6383                           
  6384                           ;mdb.c: 118: default : break;
  6385  01146A  D00A               	goto	l2692
  6386  01146C                     l2690:
  6387  01146C  5039               	movf	_buttons,w,c	;volatile
  6388                           
  6389                           ; Switch size 1, requested type "space"
  6390                           ; Number of cases is 3, Range of values is 1 to 128
  6391                           ; switch strategies available:
  6392                           ; Name         Instructions Cycles
  6393                           ; simple_byte           10     6 (average)
  6394                           ;	Chosen strategy is simple_byte
  6395  01146E  0A01               	xorlw	1	; case 1
  6396  011470  B4D8               	btfsc	status,2,c
  6397  011472  D7D6               	goto	l2691
  6398  011474  0A03               	xorlw	3	; case 2
  6399  011476  B4D8               	btfsc	status,2,c
  6400  011478  D7DC               	goto	l2693
  6401  01147A  0A82               	xorlw	130	; case 128
  6402  01147C  B4D8               	btfsc	status,2,c
  6403  01147E  D7E3               	goto	l2694
  6404  011480                     l2692:
  6405  011480  AC3E               	btfss	_mdbflags,6,c
  6406  011482  0012               	return	
  6407  011484  D7C9               	goto	l2689
  6408  011486                     __end_of_enable_notes:
  6409                           	opt stack 0
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           prodh	equ	0xFF4
  6415                           prodl	equ	0xFF3
  6416                           postinc0	equ	0xFEE
  6417                           wreg	equ	0xFE8
  6418                           indf2	equ	0xFDF
  6419                           fsr2h	equ	0xFDA
  6420                           fsr2l	equ	0xFD9
  6421                           status	equ	0xFD8
  6422                           
  6423 ;; *************** function _save_notes *****************
  6424 ;; Defined at:
  6425 ;;		line 129 in file "mdb.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    3
  6446 ;; This function calls:
  6447 ;;		_DATAEE_WriteByte
  6448 ;; This function is called by:
  6449 ;;		_enable_notes
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text30
  6454  011F66                     __ptext30:
  6455                           	opt stack 0
  6456  011F66                     _save_notes:
  6457                           	opt stack 24
  6458                           
  6459                           ;mdb.c: 131: DATAEE_WriteByte(notebits, noteen_byte);
  6460                           
  6461                           ;incstack = 0
  6462  011F66  0E55               	movlw	low _notebits
  6463  011F68  6EF6               	movwf	tblptrl,c
  6464  011F6A                     	if	1	;There is more than 1 active tblptr byte
  6465  011F6A  0EFC               	movlw	high _notebits
  6466  011F6C  6EF7               	movwf	tblptrh,c
  6467  011F6E                     	endif
  6468  011F6E                     	if	1	;There are 3 active tblptr bytes
  6469  011F6E  0E00               	movlw	low (_notebits shr (0+16))
  6470  011F70  6EF8               	movwf	tblptru,c
  6471  011F72                     	endif
  6472  011F72  0009               	tblrd		*+
  6473  011F74  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  6474  011F78  000A               	tblrd		*-
  6475  011F7A  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  6476  011F7E  C03C  F01F         	movff	_noteen_byte,DATAEE_WriteByte@bData	;volatile
  6477  011F82  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  6478  011F86  0012               	return		;funcret
  6479  011F88                     __end_of_save_notes:
  6480                           	opt stack 0
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           postinc0	equ	0xFEE
  6488                           wreg	equ	0xFE8
  6489                           indf2	equ	0xFDF
  6490                           fsr2h	equ	0xFDA
  6491                           fsr2l	equ	0xFD9
  6492                           status	equ	0xFD8
  6493                           
  6494 ;; *************** function _displ_nendis *****************
  6495 ;; Defined at:
  6496 ;;		line 116 in file "lcd.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  note2disp       1    wreg     unsigned char 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  note2disp       1   30[COMRAM] unsigned char 
  6501 ;;  x               1   31[COMRAM] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  1    wreg      void 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;Total ram usage:        2 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    8
  6518 ;; This function calls:
  6519 ;;		_lcd_string
  6520 ;; This function is called by:
  6521 ;;		_enable_notes
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text31
  6526  011E24                     __ptext31:
  6527                           	opt stack 0
  6528  011E24                     _displ_nendis:
  6529                           	opt stack 19
  6530                           
  6531                           ;incstack = 0
  6532                           ;displ_nendis@note2disp stored from wreg
  6533  011E24  6E29               	movwf	displ_nendis@note2disp,c
  6534                           
  6535                           ;lcd.c: 118: uint8_t x = note2disp & noteen_byte;
  6536  011E26  5029               	movf	displ_nendis@note2disp,w,c
  6537  011E28  143C               	andwf	_noteen_byte,w,c	;volatile
  6538  011E2A  6E2A               	movwf	displ_nendis@x,c
  6539                           
  6540                           ;lcd.c: 119: if(x != 0x00)
  6541  011E2C  502A               	movf	displ_nendis@x,w,c
  6542  011E2E  B4D8               	btfsc	status,2,c
  6543  011E30  D009               	goto	l1464
  6544                           
  6545                           ;lcd.c: 120: {
  6546                           ;lcd.c: 121: lcd_string(enabled, dspposition);
  6547  011E32  0EC3               	movlw	low _enabled
  6548  011E34  6E24               	movwf	lcd_string@lcdstring,c
  6549  011E36  0EFF               	movlw	high _enabled
  6550  011E38  6E25               	movwf	lcd_string@lcdstring+1,c
  6551  011E3A  C042  F026         	movff	_dspposition,lcd_string@lcdline
  6552  011E3E  EC75  F087         	call	_lcd_string	;wreg free
  6553                           
  6554                           ;lcd.c: 122: }
  6555  011E42  0012               	return	
  6556  011E44                     l1464:
  6557                           
  6558                           ;lcd.c: 123: else
  6559                           ;lcd.c: 124: {
  6560                           ;lcd.c: 125: lcd_string(disabled, dspposition);
  6561  011E44  0EB9               	movlw	low _disabled
  6562  011E46  6E24               	movwf	lcd_string@lcdstring,c
  6563  011E48  0EFF               	movlw	high _disabled
  6564  011E4A  6E25               	movwf	lcd_string@lcdstring+1,c
  6565  011E4C  C042  F026         	movff	_dspposition,lcd_string@lcdline
  6566  011E50  EC75  F087         	call	_lcd_string	;wreg free
  6567  011E54  0012               	return	
  6568  011E56                     __end_of_displ_nendis:
  6569                           	opt stack 0
  6570                           tblptru	equ	0xFF8
  6571                           tblptrh	equ	0xFF7
  6572                           tblptrl	equ	0xFF6
  6573                           tablat	equ	0xFF5
  6574                           prodh	equ	0xFF4
  6575                           prodl	equ	0xFF3
  6576                           postinc0	equ	0xFEE
  6577                           wreg	equ	0xFE8
  6578                           indf2	equ	0xFDF
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583 ;; *************** function _displ_note *****************
  6584 ;; Defined at:
  6585 ;;		line 109 in file "lcd.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  notestring      2   30[COMRAM] PTR unsigned char 
  6588 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  6589 ;;		 -> tenrand(9), 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;		None
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  1    wreg      unsigned char 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;Total ram usage:        2 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:    8
  6608 ;; This function calls:
  6609 ;;		_lcd_string
  6610 ;;		_lcd_write
  6611 ;; This function is called by:
  6612 ;;		_set_notes
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text32
  6617  011CAC                     __ptext32:
  6618                           	opt stack 0
  6619  011CAC                     _displ_note:
  6620                           	opt stack 20
  6621                           
  6622                           ;lcd.c: 111: lcd_write(dispclr);
  6623                           
  6624                           ;incstack = 0
  6625  011CAC  0E99               	movlw	low _dispclr
  6626  011CAE  6EF6               	movwf	tblptrl,c
  6627  011CB0                     	if	1	;There is more than 1 active tblptr byte
  6628  011CB0  0EFC               	movlw	high _dispclr
  6629  011CB2  6EF7               	movwf	tblptrh,c
  6630  011CB4                     	endif
  6631  011CB4                     	if	1	;There are 3 active tblptr bytes
  6632  011CB4  0E00               	movlw	low (_dispclr shr (0+16))
  6633  011CB6  6EF8               	movwf	tblptru,c
  6634  011CB8                     	endif
  6635  011CB8  0008               	tblrd		*
  6636  011CBA  50F5               	movf	tablat,w,c
  6637  011CBC  EC44  F08F         	call	_lcd_write
  6638                           
  6639                           ;lcd.c: 112: lcd_string(notestring, line2);
  6640  011CC0  C029  F024         	movff	displ_note@notestring,lcd_string@lcdstring
  6641  011CC4  C02A  F025         	movff	displ_note@notestring+1,lcd_string@lcdstring+1
  6642  011CC8  0E8E               	movlw	low _line2
  6643  011CCA  6EF6               	movwf	tblptrl,c
  6644  011CCC                     	if	1	;There is more than 1 active tblptr byte
  6645  011CCC  0EFC               	movlw	high _line2
  6646  011CCE  6EF7               	movwf	tblptrh,c
  6647  011CD0                     	endif
  6648  011CD0                     	if	1	;There are 3 active tblptr bytes
  6649  011CD0  0E00               	movlw	low (_line2 shr (0+16))
  6650  011CD2  6EF8               	movwf	tblptru,c
  6651  011CD4                     	endif
  6652  011CD4  0008               	tblrd		*
  6653  011CD6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6654  011CDA  EC75  F087         	call	_lcd_string	;wreg free
  6655                           
  6656                           ;lcd.c: 113: return bflag+2;
  6657  011CDE  5046               	movf	_bflag,w,c
  6658  011CE0  0F02               	addlw	2
  6659  011CE2  0012               	return	
  6660  011CE4                     __end_of_displ_note:
  6661                           	opt stack 0
  6662                           tblptru	equ	0xFF8
  6663                           tblptrh	equ	0xFF7
  6664                           tblptrl	equ	0xFF6
  6665                           tablat	equ	0xFF5
  6666                           prodh	equ	0xFF4
  6667                           prodl	equ	0xFF3
  6668                           postinc0	equ	0xFEE
  6669                           wreg	equ	0xFE8
  6670                           indf2	equ	0xFDF
  6671                           fsr2h	equ	0xFDA
  6672                           fsr2l	equ	0xFD9
  6673                           status	equ	0xFD8
  6674                           
  6675 ;; *************** function _price_set *****************
  6676 ;; Defined at:
  6677 ;;		line 296 in file "vend.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;		None
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;		None
  6682 ;; Return value:  Size  Location     Type
  6683 ;;                  1    wreg      void 
  6684 ;; Registers used:
  6685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;Total ram usage:        0 bytes
  6696 ;; Hardware stack levels used:    1
  6697 ;; Hardware stack levels required when called:   10
  6698 ;; This function calls:
  6699 ;;		_Read_Service
  6700 ;;		_butindb
  6701 ;;		_lcd_string
  6702 ;;		_set_price
  6703 ;; This function is called by:
  6704 ;;		_enter_service
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text33
  6709  01138C                     __ptext33:
  6710                           	opt stack 0
  6711  01138C                     _price_set:
  6712                           	opt stack 19
  6713                           
  6714                           ;vend.c: 298: venflags.priceset = 1;
  6715                           
  6716                           ;incstack = 0
  6717  01138C  802D               	bsf	_venflags+1,0,c
  6718                           
  6719                           ;vend.c: 299: lcd_string(pricesetmsg, line1);
  6720  01138E  0E50               	movlw	low _pricesetmsg
  6721  011390  6E24               	movwf	lcd_string@lcdstring,c
  6722  011392  0EFF               	movlw	high _pricesetmsg
  6723  011394  6E25               	movwf	lcd_string@lcdstring+1,c
  6724  011396  0E8F               	movlw	low _line1
  6725  011398  6EF6               	movwf	tblptrl,c
  6726  01139A                     	if	1	;There is more than 1 active tblptr byte
  6727  01139A  0EFC               	movlw	high _line1
  6728  01139C  6EF7               	movwf	tblptrh,c
  6729  01139E                     	endif
  6730  01139E                     	if	1	;There are 3 active tblptr bytes
  6731  01139E  0E00               	movlw	low (_line1 shr (0+16))
  6732  0113A0  6EF8               	movwf	tblptru,c
  6733  0113A2                     	endif
  6734  0113A2  0008               	tblrd		*
  6735  0113A4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6736  0113A8  EC75  F087         	call	_lcd_string	;wreg free
  6737                           
  6738                           ;vend.c: 300: lcd_string(pricesetm2, line2);
  6739  0113AC  0E83               	movlw	low _pricesetm2
  6740  0113AE  6E24               	movwf	lcd_string@lcdstring,c
  6741  0113B0  0EFD               	movlw	high _pricesetm2
  6742  0113B2  6E25               	movwf	lcd_string@lcdstring+1,c
  6743  0113B4  0E8E               	movlw	low _line2
  6744  0113B6  6EF6               	movwf	tblptrl,c
  6745  0113B8                     	if	1	;There is more than 1 active tblptr byte
  6746  0113B8  0EFC               	movlw	high _line2
  6747  0113BA  6EF7               	movwf	tblptrh,c
  6748  0113BC                     	endif
  6749  0113BC                     	if	1	;There are 3 active tblptr bytes
  6750  0113BC  0E00               	movlw	low (_line2 shr (0+16))
  6751  0113BE  6EF8               	movwf	tblptru,c
  6752  0113C0                     	endif
  6753  0113C0  0008               	tblrd		*
  6754  0113C2  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6755  0113C6  EC75  F087         	call	_lcd_string	;wreg free
  6756                           
  6757                           ;vend.c: 301: while(venflags.priceset)
  6758  0113CA  D00E               	goto	l2073
  6759  0113CC                     
  6760                           ;vend.c: 302: {
  6761                           ;vend.c: 303: buttons = butindb();
  6762  0113CC  EC2B  F08F         	call	_butindb	;wreg free
  6763  0113D0  6E39               	movwf	_buttons,c	;volatile
  6764                           
  6765                           ;vend.c: 304: if(buttons != 0x00)
  6766  0113D2  5039               	movf	_buttons,w,c	;volatile
  6767  0113D4  B4D8               	btfsc	status,2,c
  6768  0113D6  D003               	goto	l2072
  6769                           
  6770                           ;vend.c: 305: {
  6771                           ;vend.c: 306: set_price(buttons);
  6772  0113D8  5039               	movf	_buttons,w,c	;volatile
  6773  0113DA  EC91  F080         	call	_set_price
  6774  0113DE                     l2072:
  6775                           
  6776                           ;vend.c: 307: }
  6777                           ;vend.c: 308: if(Read_Service() == 0x00)
  6778  0113DE  EC80  F090         	call	_Read_Service	;wreg free
  6779  0113E2  0900               	iorlw	0
  6780  0113E4  B4D8               	btfsc	status,2,c
  6781                           
  6782                           ;vend.c: 309: {
  6783                           ;vend.c: 310: venflags.priceset = 0;
  6784  0113E6  902D               	bcf	_venflags+1,0,c
  6785  0113E8                     l2073:
  6786  0113E8  B02D               	btfsc	_venflags+1,0,c
  6787  0113EA  D7F0               	goto	l2071
  6788                           
  6789                           ;vend.c: 311: }
  6790                           ;vend.c: 312: }
  6791                           ;vend.c: 313: lcd_string(servmsg, line1);
  6792  0113EC  0E9E               	movlw	low _servmsg
  6793  0113EE  6E24               	movwf	lcd_string@lcdstring,c
  6794  0113F0  0EFC               	movlw	high _servmsg
  6795  0113F2  6E25               	movwf	lcd_string@lcdstring+1,c
  6796  0113F4  0E8F               	movlw	low _line1
  6797  0113F6  6EF6               	movwf	tblptrl,c
  6798  0113F8                     	if	1	;There is more than 1 active tblptr byte
  6799  0113F8  0EFC               	movlw	high _line1
  6800  0113FA  6EF7               	movwf	tblptrh,c
  6801  0113FC                     	endif
  6802  0113FC                     	if	1	;There are 3 active tblptr bytes
  6803  0113FC  0E00               	movlw	low (_line1 shr (0+16))
  6804  0113FE  6EF8               	movwf	tblptru,c
  6805  011400                     	endif
  6806  011400  0008               	tblrd		*
  6807  011402  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6808  011406  EC75  F087         	call	_lcd_string	;wreg free
  6809  01140A  0012               	return		;funcret
  6810  01140C                     __end_of_price_set:
  6811                           	opt stack 0
  6812                           tblptru	equ	0xFF8
  6813                           tblptrh	equ	0xFF7
  6814                           tblptrl	equ	0xFF6
  6815                           tablat	equ	0xFF5
  6816                           prodh	equ	0xFF4
  6817                           prodl	equ	0xFF3
  6818                           postinc0	equ	0xFEE
  6819                           wreg	equ	0xFE8
  6820                           indf2	equ	0xFDF
  6821                           fsr2h	equ	0xFDA
  6822                           fsr2l	equ	0xFD9
  6823                           status	equ	0xFD8
  6824                           
  6825 ;; *************** function _set_price *****************
  6826 ;; Defined at:
  6827 ;;		line 329 in file "vend.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  buttons         1    wreg     unsigned char 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  buttons         1   14[BANK0 ] unsigned char 
  6832 ;;  channel         1   15[BANK0 ] unsigned char 
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  1    wreg      void 
  6835 ;; Registers used:
  6836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;Total ram usage:        4 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    9
  6849 ;; This function calls:
  6850 ;;		_DATAEE_ReadByte
  6851 ;;		_DATAEE_WriteByte
  6852 ;;		_butindb
  6853 ;;		_displ_price
  6854 ;;		_get_channel
  6855 ;;		_lcd_string
  6856 ;; This function is called by:
  6857 ;;		_price_set
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text34
  6862  010122                     __ptext34:
  6863                           	opt stack 0
  6864  010122                     _set_price:
  6865                           	opt stack 19
  6866                           
  6867                           ;incstack = 0
  6868                           ;set_price@buttons stored from wreg
  6869  010122  0100               	movlb	0	; () banked
  6870  010124  6FAA               	movwf	set_price@buttons& (0+255),b
  6871                           
  6872                           ;vend.c: 331: venflags.setprice = 1;
  6873  010126  822D               	bsf	_venflags+1,1,c
  6874                           
  6875                           ;vend.c: 332: uint8_t channel = get_channel(buttons);
  6876  010128  0100               	movlb	0	; () banked
  6877  01012A  51AA               	movf	set_price@buttons& (0+255),w,b
  6878  01012C  ECF4  F08F         	call	_get_channel
  6879  010130  0100               	movlb	0	; () banked
  6880  010132  6FAB               	movwf	set_price@channel& (0+255),b
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;vend.c: 334: vendprice = DATAEE_ReadByte(pricestore + channel);
  6884  010134  0E59               	movlw	low _pricestore
  6885  010136  6EF6               	movwf	tblptrl,c
  6886  010138                     	if	1	;There is more than 1 active tblptr byte
  6887  010138  0EFC               	movlw	high _pricestore
  6888  01013A  6EF7               	movwf	tblptrh,c
  6889  01013C                     	endif
  6890  01013C                     	if	1	;There are 3 active tblptr bytes
  6891  01013C  0E00               	movlw	low (_pricestore shr (0+16))
  6892  01013E  6EF8               	movwf	tblptru,c
  6893  010140                     	endif
  6894  010140  0009               	tblrd		*+
  6895  010142  CFF5 F0A8          	movff	tablat,??_set_price
  6896  010146  0009               	tblrd		*+
  6897  010148  CFF5 F0A9          	movff	tablat,??_set_price+1
  6898  01014C  51AB               	movf	set_price@channel& (0+255),w,b
  6899  01014E  25A8               	addwf	??_set_price& (0+255),w,b
  6900  010150  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  6901  010152  0E00               	movlw	0
  6902  010154  21A9               	addwfc	(??_set_price+1)& (0+255),w,b
  6903  010156  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  6904  010158  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  6905  01015C  6E38               	movwf	_vendprice,c	;volatile
  6906                           
  6907                           ;vend.c: 335: displ_price(vendprice);
  6908  01015E  5038               	movf	_vendprice,w,c	;volatile
  6909  010160  ECDE  F08D         	call	_displ_price
  6910                           
  6911                           ;vend.c: 336: while(venflags.setprice)
  6912  010164  D067               	goto	l2088
  6913  010166                     
  6914                           ;vend.c: 337: {
  6915                           ;vend.c: 338: buttons = butindb();
  6916  010166  EC2B  F08F         	call	_butindb	;wreg free
  6917  01016A  0100               	movlb	0	; () banked
  6918  01016C  6FAA               	movwf	set_price@buttons& (0+255),b
  6919                           
  6920                           ;vend.c: 340: switch(buttons)
  6921  01016E  D057               	goto	l2086
  6922  010170                     
  6923                           ; BSR set to: 0
  6924                           
  6925                           ; BSR set to: 0
  6926  010170  2A38               	incf	_vendprice,f,c	;volatile
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;vend.c: 343: DATAEE_WriteByte(pricestore + channel, vendprice);
  6930  010172  0E59               	movlw	low _pricestore
  6931  010174  6EF6               	movwf	tblptrl,c
  6932  010176                     	if	1	;There is more than 1 active tblptr byte
  6933  010176  0EFC               	movlw	high _pricestore
  6934  010178  6EF7               	movwf	tblptrh,c
  6935  01017A                     	endif
  6936  01017A                     	if	1	;There are 3 active tblptr bytes
  6937  01017A  0E00               	movlw	low (_pricestore shr (0+16))
  6938  01017C  6EF8               	movwf	tblptru,c
  6939  01017E                     	endif
  6940  01017E  0009               	tblrd		*+
  6941  010180  CFF5 F0A8          	movff	tablat,??_set_price
  6942  010184  0009               	tblrd		*+
  6943  010186  CFF5 F0A9          	movff	tablat,??_set_price+1
  6944  01018A  51AB               	movf	set_price@channel& (0+255),w,b
  6945  01018C  25A8               	addwf	??_set_price& (0+255),w,b
  6946  01018E  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6947  010190  0E00               	movlw	0
  6948  010192  21A9               	addwfc	(??_set_price+1)& (0+255),w,b
  6949  010194  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6950  010196  C038  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  6951  01019A  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  6952                           
  6953                           ;vend.c: 344: displ_price(vendprice);
  6954  01019E  5038               	movf	_vendprice,w,c	;volatile
  6955  0101A0  ECDE  F08D         	call	_displ_price
  6956                           
  6957                           ;vend.c: 345: break;
  6958  0101A4  D047               	goto	l2088
  6959  0101A6  0638               	decf	_vendprice,f,c	;volatile
  6960                           
  6961                           ;vend.c: 347: DATAEE_WriteByte(pricestore + channel, vendprice);
  6962  0101A8  0E59               	movlw	low _pricestore
  6963  0101AA  6EF6               	movwf	tblptrl,c
  6964  0101AC                     	if	1	;There is more than 1 active tblptr byte
  6965  0101AC  0EFC               	movlw	high _pricestore
  6966  0101AE  6EF7               	movwf	tblptrh,c
  6967  0101B0                     	endif
  6968  0101B0                     	if	1	;There are 3 active tblptr bytes
  6969  0101B0  0E00               	movlw	low (_pricestore shr (0+16))
  6970  0101B2  6EF8               	movwf	tblptru,c
  6971  0101B4                     	endif
  6972  0101B4  0009               	tblrd		*+
  6973  0101B6  CFF5 F0A8          	movff	tablat,??_set_price
  6974  0101BA  0009               	tblrd		*+
  6975  0101BC  CFF5 F0A9          	movff	tablat,??_set_price+1
  6976  0101C0  0100               	movlb	0	; () banked
  6977  0101C2  51AB               	movf	set_price@channel& (0+255),w,b
  6978  0101C4  25A8               	addwf	??_set_price& (0+255),w,b
  6979  0101C6  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6980  0101C8  0E00               	movlw	0
  6981  0101CA  21A9               	addwfc	(??_set_price+1)& (0+255),w,b
  6982  0101CC  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6983  0101CE  C038  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  6984  0101D2  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  6985                           
  6986                           ;vend.c: 348: displ_price(vendprice);
  6987  0101D6  5038               	movf	_vendprice,w,c	;volatile
  6988  0101D8  ECDE  F08D         	call	_displ_price
  6989                           
  6990                           ;vend.c: 349: break;
  6991  0101DC  D02B               	goto	l2088
  6992  0101DE                     l2090:
  6993                           
  6994                           ; BSR set to: 0
  6995  0101DE  922D               	bcf	_venflags+1,1,c
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;vend.c: 351: lcd_string(pricesetmsg, line1);
  6999  0101E0  0E50               	movlw	low _pricesetmsg
  7000  0101E2  6E24               	movwf	lcd_string@lcdstring,c
  7001  0101E4  0EFF               	movlw	high _pricesetmsg
  7002  0101E6  6E25               	movwf	lcd_string@lcdstring+1,c
  7003  0101E8  0E8F               	movlw	low _line1
  7004  0101EA  6EF6               	movwf	tblptrl,c
  7005  0101EC                     	if	1	;There is more than 1 active tblptr byte
  7006  0101EC  0EFC               	movlw	high _line1
  7007  0101EE  6EF7               	movwf	tblptrh,c
  7008  0101F0                     	endif
  7009  0101F0                     	if	1	;There are 3 active tblptr bytes
  7010  0101F0  0E00               	movlw	low (_line1 shr (0+16))
  7011  0101F2  6EF8               	movwf	tblptru,c
  7012  0101F4                     	endif
  7013  0101F4  0008               	tblrd		*
  7014  0101F6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7015  0101FA  EC75  F087         	call	_lcd_string	;wreg free
  7016                           
  7017                           ;vend.c: 352: lcd_string(pricesetm2, line2);
  7018  0101FE  0E83               	movlw	low _pricesetm2
  7019  010200  6E24               	movwf	lcd_string@lcdstring,c
  7020  010202  0EFD               	movlw	high _pricesetm2
  7021  010204  6E25               	movwf	lcd_string@lcdstring+1,c
  7022  010206  0E8E               	movlw	low _line2
  7023  010208  6EF6               	movwf	tblptrl,c
  7024  01020A                     	if	1	;There is more than 1 active tblptr byte
  7025  01020A  0EFC               	movlw	high _line2
  7026  01020C  6EF7               	movwf	tblptrh,c
  7027  01020E                     	endif
  7028  01020E                     	if	1	;There are 3 active tblptr bytes
  7029  01020E  0E00               	movlw	low (_line2 shr (0+16))
  7030  010210  6EF8               	movwf	tblptru,c
  7031  010212                     	endif
  7032  010212  0008               	tblrd		*
  7033  010214  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7034  010218  EC75  F087         	call	_lcd_string	;wreg free
  7035                           
  7036                           ;vend.c: 355: }
  7037                           
  7038                           ;vend.c: 354: break;
  7039  01021C  D00B               	goto	l2088
  7040  01021E                     l2086:
  7041  01021E  0100               	movlb	0	; () banked
  7042  010220  51AA               	movf	set_price@buttons& (0+255),w,b
  7043                           
  7044                           ; Switch size 1, requested type "space"
  7045                           ; Number of cases is 3, Range of values is 1 to 128
  7046                           ; switch strategies available:
  7047                           ; Name         Instructions Cycles
  7048                           ; simple_byte           10     6 (average)
  7049                           ;	Chosen strategy is simple_byte
  7050  010222  0A01               	xorlw	1	; case 1
  7051  010224  B4D8               	btfsc	status,2,c
  7052  010226  D7A4               	goto	l2087
  7053  010228  0A03               	xorlw	3	; case 2
  7054  01022A  B4D8               	btfsc	status,2,c
  7055  01022C  D7BC               	goto	l2089
  7056  01022E  0A82               	xorlw	130	; case 128
  7057  010230  B4D8               	btfsc	status,2,c
  7058  010232  D7D5               	goto	l2090
  7059  010234                     l2088:
  7060                           
  7061                           ; BSR set to: 0
  7062  010234  A22D               	btfss	_venflags+1,1,c
  7063  010236  0012               	return	
  7064  010238  D796               	goto	l2085
  7065  01023A                     __end_of_set_price:
  7066                           	opt stack 0
  7067                           tblptru	equ	0xFF8
  7068                           tblptrh	equ	0xFF7
  7069                           tblptrl	equ	0xFF6
  7070                           tablat	equ	0xFF5
  7071                           prodh	equ	0xFF4
  7072                           prodl	equ	0xFF3
  7073                           postinc0	equ	0xFEE
  7074                           wreg	equ	0xFE8
  7075                           indf2	equ	0xFDF
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function _displ_price *****************
  7081 ;; Defined at:
  7082 ;;		line 237 in file "lcd.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  vendprice       1    wreg     unsigned char 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  vendprice       1   31[COMRAM] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      void 
  7089 ;; Registers used:
  7090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;Total ram usage:        1 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    8
  7103 ;; This function calls:
  7104 ;;		_displ_hex
  7105 ;;		_lcd_dispadd
  7106 ;;		_lcd_write
  7107 ;;		_lcd_writeC
  7108 ;; This function is called by:
  7109 ;;		_set_price
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text35
  7114  011BBC                     __ptext35:
  7115                           	opt stack 0
  7116  011BBC                     _displ_price:
  7117                           	opt stack 19
  7118                           
  7119                           ;incstack = 0
  7120                           ;displ_price@vendprice stored from wreg
  7121  011BBC  6E2A               	movwf	displ_price@vendprice,c
  7122                           
  7123                           ;lcd.c: 239: lcd_write(dispclr);
  7124  011BBE  0E99               	movlw	low _dispclr
  7125  011BC0  6EF6               	movwf	tblptrl,c
  7126  011BC2                     	if	1	;There is more than 1 active tblptr byte
  7127  011BC2  0EFC               	movlw	high _dispclr
  7128  011BC4  6EF7               	movwf	tblptrh,c
  7129  011BC6                     	endif
  7130  011BC6                     	if	1	;There are 3 active tblptr bytes
  7131  011BC6  0E00               	movlw	low (_dispclr shr (0+16))
  7132  011BC8  6EF8               	movwf	tblptru,c
  7133  011BCA                     	endif
  7134  011BCA  0008               	tblrd		*
  7135  011BCC  50F5               	movf	tablat,w,c
  7136  011BCE  EC44  F08F         	call	_lcd_write
  7137                           
  7138                           ;lcd.c: 240: lcd_dispadd(line2 + 4);
  7139  011BD2  0E8E               	movlw	low _line2
  7140  011BD4  6EF6               	movwf	tblptrl,c
  7141  011BD6                     	if	1	;There is more than 1 active tblptr byte
  7142  011BD6  0EFC               	movlw	high _line2
  7143  011BD8  6EF7               	movwf	tblptrh,c
  7144  011BDA                     	endif
  7145  011BDA                     	if	1	;There are 3 active tblptr bytes
  7146  011BDA  0E00               	movlw	low (_line2 shr (0+16))
  7147  011BDC  6EF8               	movwf	tblptru,c
  7148  011BDE                     	endif
  7149  011BDE  0008               	tblrd		*
  7150  011BE0  50F5               	movf	tablat,w,c
  7151  011BE2  0F04               	addlw	4
  7152  011BE4  EC1E  F090         	call	_lcd_dispadd
  7153                           
  7154                           ;lcd.c: 241: lcd_writeC((uint8_t)'R');
  7155  011BE8  0E52               	movlw	82
  7156  011BEA  EC97  F08B         	call	_lcd_writeC
  7157                           
  7158                           ;lcd.c: 242: displ_hex(vendprice);
  7159  011BEE  502A               	movf	displ_price@vendprice,w,c
  7160  011BF0  6E27               	movwf	displ_hex@hexnum,c
  7161  011BF2  6A28               	clrf	displ_hex@hexnum+1,c
  7162  011BF4  6A29               	clrf	displ_hex@hexnum+2,c
  7163  011BF6  EC1A  F087         	call	_displ_hex	;wreg free
  7164  011BFA  0012               	return		;funcret
  7165  011BFC                     __end_of_displ_price:
  7166                           	opt stack 0
  7167                           tblptru	equ	0xFF8
  7168                           tblptrh	equ	0xFF7
  7169                           tblptrl	equ	0xFF6
  7170                           tablat	equ	0xFF5
  7171                           prodh	equ	0xFF4
  7172                           prodl	equ	0xFF3
  7173                           postinc0	equ	0xFEE
  7174                           wreg	equ	0xFE8
  7175                           indf2	equ	0xFDF
  7176                           fsr2h	equ	0xFDA
  7177                           fsr2l	equ	0xFD9
  7178                           status	equ	0xFD8
  7179                           
  7180 ;; *************** function _mdb_unlock *****************
  7181 ;; Defined at:
  7182 ;;		line 375 in file "mdb.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;		None
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;		None
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      void 
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7200 ;;Total ram usage:        1 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    3
  7203 ;; This function calls:
  7204 ;;		_CMP1_Initialize
  7205 ;;		_DAC1_Initialize
  7206 ;;		_TMR1_Initialize
  7207 ;;		_TMR3_Initialize
  7208 ;;		_TMR5_Initialize
  7209 ;; This function is called by:
  7210 ;;		_enter_service
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text36
  7215  0109C0                     __ptext36:
  7216                           	opt stack 0
  7217  0109C0                     _mdb_unlock:
  7218                           	opt stack 26
  7219                           
  7220                           ;mdb.c: 377: _delay((unsigned long)((50)*(12000000/4000.0)));
  7221                           
  7222                           ;incstack = 0
  7223  0109C0  0EC3               	movlw	195
  7224  0109C2  6E1F               	movwf	??_mdb_unlock& (0+255),c
  7225  0109C4  0ECD               	movlw	205
  7226  0109C6                     u3547:
  7227  0109C6  2EE8               	decfsz	wreg,f,c
  7228  0109C8  D7FE               	bra	u3547
  7229  0109CA  2E1F               	decfsz	??_mdb_unlock& (0+255),f,c
  7230  0109CC  D7FC               	bra	u3547
  7231  0109CE  F000               	nop	
  7232                           
  7233                           ;mdb.c: 378: LATE = 0x00;
  7234  0109D0  0E00               	movlw	0
  7235  0109D2  6E87               	movwf	3975,c	;volatile
  7236                           
  7237                           ;mdb.c: 379: LATD = 0x00;
  7238  0109D4  0E00               	movlw	0
  7239  0109D6  6E86               	movwf	3974,c	;volatile
  7240                           
  7241                           ;mdb.c: 380: LATA = 0xC0;
  7242  0109D8  0EC0               	movlw	192
  7243  0109DA  6E83               	movwf	3971,c	;volatile
  7244                           
  7245                           ;mdb.c: 381: LATB = 0x00;
  7246  0109DC  0E00               	movlw	0
  7247  0109DE  6E84               	movwf	3972,c	;volatile
  7248                           
  7249                           ;mdb.c: 382: LATC = 0x01;
  7250  0109E0  0E01               	movlw	1
  7251  0109E2  6E85               	movwf	3973,c	;volatile
  7252                           
  7253                           ;mdb.c: 387: TRISE = 0x00;
  7254  0109E4  0E00               	movlw	0
  7255  0109E6  6E8C               	movwf	3980,c	;volatile
  7256                           
  7257                           ;mdb.c: 388: TRISA = 0x1F;
  7258  0109E8  0E1F               	movlw	31
  7259  0109EA  6E88               	movwf	3976,c	;volatile
  7260                           
  7261                           ;mdb.c: 389: TRISB = 0xD0;
  7262  0109EC  0ED0               	movlw	208
  7263  0109EE  6E89               	movwf	3977,c	;volatile
  7264                           
  7265                           ;mdb.c: 390: TRISC = 0x80;
  7266  0109F0  0E80               	movlw	128
  7267  0109F2  6E8A               	movwf	3978,c	;volatile
  7268                           
  7269                           ;mdb.c: 391: TRISD = 0x00;
  7270  0109F4  0E00               	movlw	0
  7271  0109F6  6E8B               	movwf	3979,c	;volatile
  7272                           
  7273                           ;mdb.c: 396: ANSELC = 0x00;
  7274  0109F8  0E00               	movlw	0
  7275  0109FA  010F               	movlb	15	; () banked
  7276  0109FC  6F21               	movwf	33,b	;volatile
  7277                           
  7278                           ; BSR set to: 15
  7279                           ;mdb.c: 397: ANSELB = 0xC0;
  7280  0109FE  0EC0               	movlw	192
  7281  010A00  6F19               	movwf	25,b	;volatile
  7282                           
  7283                           ; BSR set to: 15
  7284                           ;mdb.c: 398: ANSELD = 0x00;
  7285  010A02  0E00               	movlw	0
  7286  010A04  6F26               	movwf	38,b	;volatile
  7287                           
  7288                           ; BSR set to: 15
  7289                           ;mdb.c: 399: ANSELE = 0x00;
  7290  010A06  0E00               	movlw	0
  7291  010A08  6F2E               	movwf	46,b	;volatile
  7292                           
  7293                           ; BSR set to: 15
  7294                           ;mdb.c: 400: ANSELA = 0x01;
  7295  010A0A  0E01               	movlw	1
  7296  010A0C  6F11               	movwf	17,b	;volatile
  7297                           
  7298                           ; BSR set to: 15
  7299                           ;mdb.c: 405: WPUD = 0x00;
  7300  010A0E  0E00               	movlw	0
  7301  010A10  6F25               	movwf	37,b	;volatile
  7302                           
  7303                           ; BSR set to: 15
  7304                           ;mdb.c: 406: WPUE = 0x00;
  7305  010A12  0E00               	movlw	0
  7306  010A14  6F2D               	movwf	45,b	;volatile
  7307                           
  7308                           ; BSR set to: 15
  7309                           ;mdb.c: 407: WPUB = 0x00;
  7310  010A16  0E00               	movlw	0
  7311  010A18  6F18               	movwf	24,b	;volatile
  7312                           
  7313                           ; BSR set to: 15
  7314                           ;mdb.c: 408: WPUA = 0x00;
  7315  010A1A  0E00               	movlw	0
  7316  010A1C  6F10               	movwf	16,b	;volatile
  7317                           
  7318                           ; BSR set to: 15
  7319                           ;mdb.c: 409: WPUC = 0x00;
  7320  010A1E  0E00               	movlw	0
  7321  010A20  6F20               	movwf	32,b	;volatile
  7322                           
  7323                           ; BSR set to: 15
  7324                           ;mdb.c: 414: ODCONE = 0x00;
  7325  010A22  0E00               	movlw	0
  7326  010A24  6F2C               	movwf	44,b	;volatile
  7327                           
  7328                           ; BSR set to: 15
  7329                           ;mdb.c: 415: ODCONA = 0x00;
  7330  010A26  0E00               	movlw	0
  7331  010A28  6F0F               	movwf	15,b	;volatile
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;mdb.c: 416: ODCONB = 0x00;
  7335  010A2A  0E00               	movlw	0
  7336  010A2C  6F17               	movwf	23,b	;volatile
  7337                           
  7338                           ; BSR set to: 15
  7339                           ;mdb.c: 417: ODCONC = 0x00;
  7340  010A2E  0E00               	movlw	0
  7341  010A30  6F1F               	movwf	31,b	;volatile
  7342                           
  7343                           ; BSR set to: 15
  7344                           ;mdb.c: 418: ODCOND = 0x00;
  7345  010A32  0E00               	movlw	0
  7346  010A34  6F24               	movwf	36,b	;volatile
  7347                           
  7348                           ; BSR set to: 15
  7349                           ;mdb.c: 419: LATC = 0x01;
  7350  010A36  0E01               	movlw	1
  7351  010A38  6E85               	movwf	3973,c	;volatile
  7352                           
  7353                           ; BSR set to: 15
  7354                           ;mdb.c: 420: TRISC = 0x80;
  7355  010A3A  0E80               	movlw	128
  7356  010A3C  6E8A               	movwf	3978,c	;volatile
  7357                           
  7358                           ; BSR set to: 15
  7359                           ;mdb.c: 421: ANSELC = 0x00;
  7360  010A3E  0E00               	movlw	0
  7361  010A40  6F21               	movwf	33,b	;volatile
  7362                           
  7363                           ; BSR set to: 15
  7364                           ;mdb.c: 422: WPUC = 0x00;
  7365  010A42  0E00               	movlw	0
  7366  010A44  6F20               	movwf	32,b	;volatile
  7367                           
  7368                           ; BSR set to: 15
  7369                           ;mdb.c: 423: ODCONC = 0x00;
  7370  010A46  0E00               	movlw	0
  7371  010A48  6F1F               	movwf	31,b	;volatile
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;mdb.c: 424: PPSLOCK = 0x55;
  7375  010A4A  0E55               	movlw	85
  7376  010A4C  010E               	movlb	14	; () banked
  7377  010A4E  6FA0               	movwf	160,b	;volsfr
  7378                           
  7379                           ; BSR set to: 14
  7380                           ;mdb.c: 425: PPSLOCK = 0xAA;
  7381  010A50  0EAA               	movlw	170
  7382  010A52  6FA0               	movwf	160,b	;volsfr
  7383                           
  7384                           ; BSR set to: 14
  7385                           ;mdb.c: 426: PPSLOCKbits.PPSLOCKED = 0x00;
  7386  010A54  91A0               	bcf	160,0,b	;volsfr
  7387                           
  7388                           ; BSR set to: 14
  7389                           ;mdb.c: 428: RX1PPSbits.RXPPS = 0x0;
  7390  010A56  91B5               	bcf	181,0,b	;volatile
  7391  010A58  93B5               	bcf	181,1,b	;volatile
  7392  010A5A  95B5               	bcf	181,2,b	;volatile
  7393  010A5C  97B5               	bcf	181,3,b	;volatile
  7394  010A5E  99B5               	bcf	181,4,b	;volatile
  7395                           
  7396                           ; BSR set to: 14
  7397                           ;mdb.c: 429: RC6PPS = 0x0;
  7398  010A60  0E00               	movlw	0
  7399  010A62  6FFD               	movwf	253,b	;volatile
  7400                           
  7401                           ; BSR set to: 14
  7402                           ;mdb.c: 430: RB5PPS = 0x0;
  7403  010A64  0E00               	movlw	0
  7404  010A66  6FF4               	movwf	244,b	;volatile
  7405                           
  7406                           ; BSR set to: 14
  7407                           ;mdb.c: 431: RX2PPSbits.RXPPS = 0x0;
  7408  010A68  918D               	bcf	141,0,b	;volatile
  7409  010A6A  938D               	bcf	141,1,b	;volatile
  7410  010A6C  958D               	bcf	141,2,b	;volatile
  7411  010A6E  978D               	bcf	141,3,b	;volatile
  7412  010A70  998D               	bcf	141,4,b	;volatile
  7413                           
  7414                           ; BSR set to: 14
  7415                           ;mdb.c: 432: CMP1_Initialize();
  7416  010A72  EC6D  F090         	call	_CMP1_Initialize	;wreg free
  7417                           
  7418                           ;mdb.c: 433: TMR3_Initialize();
  7419  010A76  ECA8  F08E         	call	_TMR3_Initialize	;wreg free
  7420                           
  7421                           ;mdb.c: 434: DAC1_Initialize();
  7422  010A7A  ECA5  F090         	call	_DAC1_Initialize	;wreg free
  7423                           
  7424                           ;mdb.c: 435: TMR5_Initialize();
  7425  010A7E  EC8D  F08E         	call	_TMR5_Initialize	;wreg free
  7426                           
  7427                           ;mdb.c: 436: TMR1_Initialize();
  7428  010A82  ECC3  F08E         	call	_TMR1_Initialize	;wreg free
  7429  010A86  0012               	return		;funcret
  7430  010A88                     __end_of_mdb_unlock:
  7431                           	opt stack 0
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           postinc0	equ	0xFEE
  7439                           wreg	equ	0xFE8
  7440                           indf2	equ	0xFDF
  7441                           fsr2h	equ	0xFDA
  7442                           fsr2l	equ	0xFD9
  7443                           status	equ	0xFD8
  7444                           
  7445 ;; *************** function _Vend_setup *****************
  7446 ;; Defined at:
  7447 ;;		line 363 in file "vend.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;		None
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;		None
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      void 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;Total ram usage:        0 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:   11
  7468 ;; This function calls:
  7469 ;;		_Chan_link
  7470 ;;		_Init_vendmem
  7471 ;;		_Reset_settings
  7472 ;;		_Sens_off
  7473 ;;		_Vend_settime
  7474 ;;		_butindb
  7475 ;;		_lcd_string
  7476 ;; This function is called by:
  7477 ;;		_enter_service
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text37
  7482  01023A                     __ptext37:
  7483                           	opt stack 0
  7484  01023A                     _Vend_setup:
  7485                           	opt stack 18
  7486                           
  7487                           ;vend.c: 365: venflags.vendset = 1;
  7488                           
  7489                           ;incstack = 0
  7490  01023A  842D               	bsf	_venflags+1,2,c
  7491                           
  7492                           ;vend.c: 366: lcd_string(vendsetup, line1);
  7493  01023C  0EEE               	movlw	low _vendsetup
  7494  01023E  6E24               	movwf	lcd_string@lcdstring,c
  7495  010240  0EFC               	movlw	high _vendsetup
  7496  010242  6E25               	movwf	lcd_string@lcdstring+1,c
  7497  010244  0E8F               	movlw	low _line1
  7498  010246  6EF6               	movwf	tblptrl,c
  7499  010248                     	if	1	;There is more than 1 active tblptr byte
  7500  010248  0EFC               	movlw	high _line1
  7501  01024A  6EF7               	movwf	tblptrh,c
  7502  01024C                     	endif
  7503  01024C                     	if	1	;There are 3 active tblptr bytes
  7504  01024C  0E00               	movlw	low (_line1 shr (0+16))
  7505  01024E  6EF8               	movwf	tblptru,c
  7506  010250                     	endif
  7507  010250  0008               	tblrd		*
  7508  010252  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7509  010256  EC75  F087         	call	_lcd_string	;wreg free
  7510                           
  7511                           ;vend.c: 367: while(venflags.vendset)
  7512  01025A  D06F               	goto	l2099
  7513  01025C                     
  7514                           ;vend.c: 368: {
  7515                           ;vend.c: 369: buttons = butindb();
  7516  01025C  EC2B  F08F         	call	_butindb	;wreg free
  7517  010260  6E39               	movwf	_buttons,c	;volatile
  7518                           
  7519                           ;vend.c: 370: switch(buttons)
  7520  010262  D05B               	goto	l2097
  7521  010264  EC00  F08D         	call	_Vend_settime	;wreg free
  7522                           
  7523                           ;vend.c: 373: lcd_string(vendsetup, line1);
  7524  010268  0EEE               	movlw	low _vendsetup
  7525  01026A  6E24               	movwf	lcd_string@lcdstring,c
  7526  01026C  0EFC               	movlw	high _vendsetup
  7527  01026E  6E25               	movwf	lcd_string@lcdstring+1,c
  7528  010270  0E8F               	movlw	low _line1
  7529  010272  6EF6               	movwf	tblptrl,c
  7530  010274                     	if	1	;There is more than 1 active tblptr byte
  7531  010274  0EFC               	movlw	high _line1
  7532  010276  6EF7               	movwf	tblptrh,c
  7533  010278                     	endif
  7534  010278                     	if	1	;There are 3 active tblptr bytes
  7535  010278  0E00               	movlw	low (_line1 shr (0+16))
  7536  01027A  6EF8               	movwf	tblptru,c
  7537  01027C                     	endif
  7538  01027C  0008               	tblrd		*
  7539  01027E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7540  010282  EC75  F087         	call	_lcd_string	;wreg free
  7541                           
  7542                           ;vend.c: 374: break;
  7543  010286  D059               	goto	l2099
  7544  010288  ECCA  F08B         	call	_Chan_link	;wreg free
  7545                           
  7546                           ;vend.c: 376: lcd_string(vendsetup, line1);
  7547  01028C  0EEE               	movlw	low _vendsetup
  7548  01028E  6E24               	movwf	lcd_string@lcdstring,c
  7549  010290  0EFC               	movlw	high _vendsetup
  7550  010292  6E25               	movwf	lcd_string@lcdstring+1,c
  7551  010294  0E8F               	movlw	low _line1
  7552  010296  6EF6               	movwf	tblptrl,c
  7553  010298                     	if	1	;There is more than 1 active tblptr byte
  7554  010298  0EFC               	movlw	high _line1
  7555  01029A  6EF7               	movwf	tblptrh,c
  7556  01029C                     	endif
  7557  01029C                     	if	1	;There are 3 active tblptr bytes
  7558  01029C  0E00               	movlw	low (_line1 shr (0+16))
  7559  01029E  6EF8               	movwf	tblptru,c
  7560  0102A0                     	endif
  7561  0102A0  0008               	tblrd		*
  7562  0102A2  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7563  0102A6  EC75  F087         	call	_lcd_string	;wreg free
  7564                           
  7565                           ;vend.c: 377: break;
  7566  0102AA  D047               	goto	l2099
  7567  0102AC  EC27  F08D         	call	_Sens_off	;wreg free
  7568                           
  7569                           ;vend.c: 379: lcd_string(vendsetup, line1);
  7570  0102B0  0EEE               	movlw	low _vendsetup
  7571  0102B2  6E24               	movwf	lcd_string@lcdstring,c
  7572  0102B4  0EFC               	movlw	high _vendsetup
  7573  0102B6  6E25               	movwf	lcd_string@lcdstring+1,c
  7574  0102B8  0E8F               	movlw	low _line1
  7575  0102BA  6EF6               	movwf	tblptrl,c
  7576  0102BC                     	if	1	;There is more than 1 active tblptr byte
  7577  0102BC  0EFC               	movlw	high _line1
  7578  0102BE  6EF7               	movwf	tblptrh,c
  7579  0102C0                     	endif
  7580  0102C0                     	if	1	;There are 3 active tblptr bytes
  7581  0102C0  0E00               	movlw	low (_line1 shr (0+16))
  7582  0102C2  6EF8               	movwf	tblptru,c
  7583  0102C4                     	endif
  7584  0102C4  0008               	tblrd		*
  7585  0102C6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7586  0102CA  EC75  F087         	call	_lcd_string	;wreg free
  7587                           
  7588                           ;vend.c: 380: break;
  7589  0102CE  D035               	goto	l2099
  7590  0102D0  ECCF  F087         	call	_Reset_settings	;wreg free
  7591                           
  7592                           ;vend.c: 382: lcd_string(vendsetup, line1);
  7593  0102D4  0EEE               	movlw	low _vendsetup
  7594  0102D6  6E24               	movwf	lcd_string@lcdstring,c
  7595  0102D8  0EFC               	movlw	high _vendsetup
  7596  0102DA  6E25               	movwf	lcd_string@lcdstring+1,c
  7597  0102DC  0E8F               	movlw	low _line1
  7598  0102DE  6EF6               	movwf	tblptrl,c
  7599  0102E0                     	if	1	;There is more than 1 active tblptr byte
  7600  0102E0  0EFC               	movlw	high _line1
  7601  0102E2  6EF7               	movwf	tblptrh,c
  7602  0102E4                     	endif
  7603  0102E4                     	if	1	;There are 3 active tblptr bytes
  7604  0102E4  0E00               	movlw	low (_line1 shr (0+16))
  7605  0102E6  6EF8               	movwf	tblptru,c
  7606  0102E8                     	endif
  7607  0102E8  0008               	tblrd		*
  7608  0102EA  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7609  0102EE  EC75  F087         	call	_lcd_string	;wreg free
  7610                           
  7611                           ;vend.c: 383: break;
  7612  0102F2  D023               	goto	l2099
  7613  0102F4                     l2103:
  7614  0102F4  942D               	bcf	_venflags+1,2,c
  7615                           
  7616                           ;vend.c: 386: Init_vendmem();
  7617  0102F6  ECF6  F08A         	call	_Init_vendmem	;wreg free
  7618                           
  7619                           ;vend.c: 387: lcd_string(servmsg, line1);
  7620  0102FA  0E9E               	movlw	low _servmsg
  7621  0102FC  6E24               	movwf	lcd_string@lcdstring,c
  7622  0102FE  0EFC               	movlw	high _servmsg
  7623  010300  6E25               	movwf	lcd_string@lcdstring+1,c
  7624  010302  0E8F               	movlw	low _line1
  7625  010304  6EF6               	movwf	tblptrl,c
  7626  010306                     	if	1	;There is more than 1 active tblptr byte
  7627  010306  0EFC               	movlw	high _line1
  7628  010308  6EF7               	movwf	tblptrh,c
  7629  01030A                     	endif
  7630  01030A                     	if	1	;There are 3 active tblptr bytes
  7631  01030A  0E00               	movlw	low (_line1 shr (0+16))
  7632  01030C  6EF8               	movwf	tblptru,c
  7633  01030E                     	endif
  7634  01030E  0008               	tblrd		*
  7635  010310  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7636  010314  EC75  F087         	call	_lcd_string	;wreg free
  7637                           
  7638                           ;vend.c: 389: }
  7639                           
  7640                           ;vend.c: 388: break;
  7641  010318  D010               	goto	l2099
  7642  01031A                     l2097:
  7643  01031A  5039               	movf	_buttons,w,c	;volatile
  7644                           
  7645                           ; Switch size 1, requested type "space"
  7646                           ; Number of cases is 5, Range of values is 1 to 128
  7647                           ; switch strategies available:
  7648                           ; Name         Instructions Cycles
  7649                           ; simple_byte           16     9 (average)
  7650                           ;	Chosen strategy is simple_byte
  7651  01031C  0A01               	xorlw	1	; case 1
  7652  01031E  B4D8               	btfsc	status,2,c
  7653  010320  D7A1               	goto	l2098
  7654  010322  0A03               	xorlw	3	; case 2
  7655  010324  B4D8               	btfsc	status,2,c
  7656  010326  D7B0               	goto	l2100
  7657  010328  0A06               	xorlw	6	; case 4
  7658  01032A  B4D8               	btfsc	status,2,c
  7659  01032C  D7BF               	goto	l2101
  7660  01032E  0A0C               	xorlw	12	; case 8
  7661  010330  B4D8               	btfsc	status,2,c
  7662  010332  D7CE               	goto	l2102
  7663  010334  0A88               	xorlw	136	; case 128
  7664  010336  B4D8               	btfsc	status,2,c
  7665  010338  D7DD               	goto	l2103
  7666  01033A                     l2099:
  7667  01033A  A42D               	btfss	_venflags+1,2,c
  7668  01033C  0012               	return	
  7669  01033E  D78E               	goto	l2096
  7670  010340                     __end_of_Vend_setup:
  7671                           	opt stack 0
  7672                           tblptru	equ	0xFF8
  7673                           tblptrh	equ	0xFF7
  7674                           tblptrl	equ	0xFF6
  7675                           tablat	equ	0xFF5
  7676                           prodh	equ	0xFF4
  7677                           prodl	equ	0xFF3
  7678                           postinc0	equ	0xFEE
  7679                           wreg	equ	0xFE8
  7680                           indf2	equ	0xFDF
  7681                           fsr2h	equ	0xFDA
  7682                           fsr2l	equ	0xFD9
  7683                           status	equ	0xFD8
  7684                           
  7685 ;; *************** function _Vend_settime *****************
  7686 ;; Defined at:
  7687 ;;		line 393 in file "vend.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:   10
  7708 ;; This function calls:
  7709 ;;		_Read_Service
  7710 ;;		_Vend_timeset
  7711 ;;		_butindb
  7712 ;;		_get_channel
  7713 ;;		_lcd_string
  7714 ;; This function is called by:
  7715 ;;		_Vend_setup
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text38
  7720  011A00                     __ptext38:
  7721                           	opt stack 0
  7722  011A00                     _Vend_settime:
  7723                           	opt stack 18
  7724                           
  7725                           ;vend.c: 396: lcd_string(setimemsg, line1);
  7726                           
  7727                           ;incstack = 0
  7728  011A00  0E80               	movlw	low _setimemsg
  7729  011A02  6E24               	movwf	lcd_string@lcdstring,c
  7730  011A04  0EFE               	movlw	high _setimemsg
  7731  011A06  6E25               	movwf	lcd_string@lcdstring+1,c
  7732  011A08  0E8F               	movlw	low _line1
  7733  011A0A  6EF6               	movwf	tblptrl,c
  7734  011A0C                     	if	1	;There is more than 1 active tblptr byte
  7735  011A0C  0EFC               	movlw	high _line1
  7736  011A0E  6EF7               	movwf	tblptrh,c
  7737  011A10                     	endif
  7738  011A10                     	if	1	;There are 3 active tblptr bytes
  7739  011A10  0E00               	movlw	low (_line1 shr (0+16))
  7740  011A12  6EF8               	movwf	tblptru,c
  7741  011A14                     	endif
  7742  011A14  0008               	tblrd		*
  7743  011A16  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7744  011A1A  EC75  F087         	call	_lcd_string	;wreg free
  7745                           
  7746                           ;vend.c: 397: buttons = butindb();
  7747  011A1E  EC2B  F08F         	call	_butindb	;wreg free
  7748  011A22  6E39               	movwf	_buttons,c	;volatile
  7749                           
  7750                           ;vend.c: 398: venflags.settime = 1;
  7751  011A24  8C2D               	bsf	_venflags+1,6,c
  7752                           
  7753                           ;vend.c: 400: while(venflags.settime)
  7754  011A26  D010               	goto	l2111
  7755  011A28                     
  7756                           ;vend.c: 401: {
  7757                           ;vend.c: 402: buttons = butindb();
  7758  011A28  EC2B  F08F         	call	_butindb	;wreg free
  7759  011A2C  6E39               	movwf	_buttons,c	;volatile
  7760                           
  7761                           ;vend.c: 403: if(buttons != 0x00)
  7762  011A2E  5039               	movf	_buttons,w,c	;volatile
  7763  011A30  B4D8               	btfsc	status,2,c
  7764  011A32  D005               	goto	l2110
  7765                           
  7766                           ;vend.c: 404: {
  7767                           ;vend.c: 405: Vend_timeset(get_channel(buttons));
  7768  011A34  5039               	movf	_buttons,w,c	;volatile
  7769  011A36  ECF4  F08F         	call	_get_channel
  7770  011A3A  EC23  F082         	call	_Vend_timeset
  7771  011A3E                     l2110:
  7772                           
  7773                           ;vend.c: 406: }
  7774                           ;vend.c: 407: if(Read_Service() == 0x00)
  7775  011A3E  EC80  F090         	call	_Read_Service	;wreg free
  7776  011A42  0900               	iorlw	0
  7777  011A44  B4D8               	btfsc	status,2,c
  7778                           
  7779                           ;vend.c: 408: {
  7780                           ;vend.c: 409: venflags.settime = 0;
  7781  011A46  9C2D               	bcf	_venflags+1,6,c
  7782  011A48                     l2111:
  7783  011A48  AC2D               	btfss	_venflags+1,6,c
  7784  011A4A  0012               	return	
  7785  011A4C  D7ED               	goto	l2109
  7786  011A4E                     __end_of_Vend_settime:
  7787                           	opt stack 0
  7788                           tblptru	equ	0xFF8
  7789                           tblptrh	equ	0xFF7
  7790                           tblptrl	equ	0xFF6
  7791                           tablat	equ	0xFF5
  7792                           prodh	equ	0xFF4
  7793                           prodl	equ	0xFF3
  7794                           postinc0	equ	0xFEE
  7795                           wreg	equ	0xFE8
  7796                           indf2	equ	0xFDF
  7797                           fsr2h	equ	0xFDA
  7798                           fsr2l	equ	0xFD9
  7799                           status	equ	0xFD8
  7800                           
  7801 ;; *************** function _Vend_timeset *****************
  7802 ;; Defined at:
  7803 ;;		line 416 in file "vend.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  channel         1    wreg     unsigned char 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  channel         1   15[BANK0 ] unsigned char 
  7808 ;;  chantime        1   14[BANK0 ] unsigned char 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      void 
  7811 ;; Registers used:
  7812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;Total ram usage:        4 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    9
  7825 ;; This function calls:
  7826 ;;		_DATAEE_ReadByte
  7827 ;;		_DATAEE_WriteByte
  7828 ;;		_butindb
  7829 ;;		_displ_time
  7830 ;;		_lcd_string
  7831 ;; This function is called by:
  7832 ;;		_Vend_settime
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text39
  7837  010446                     __ptext39:
  7838                           	opt stack 0
  7839  010446                     _Vend_timeset:
  7840                           	opt stack 18
  7841                           
  7842                           ;incstack = 0
  7843                           ;Vend_timeset@channel stored from wreg
  7844  010446  0100               	movlb	0	; () banked
  7845  010448  6FAB               	movwf	Vend_timeset@channel& (0+255),b
  7846                           
  7847                           ;vend.c: 418: venflags.mottime = 1;
  7848  01044A  882D               	bsf	_venflags+1,4,c
  7849                           
  7850                           ;vend.c: 419: lcd_string(vendtimem, line1);
  7851  01044C  0E57               	movlw	low _vendtimem
  7852  01044E  6E24               	movwf	lcd_string@lcdstring,c
  7853  010450  0EFE               	movlw	high _vendtimem
  7854  010452  6E25               	movwf	lcd_string@lcdstring+1,c
  7855  010454  0E8F               	movlw	low _line1
  7856  010456  6EF6               	movwf	tblptrl,c
  7857  010458                     	if	1	;There is more than 1 active tblptr byte
  7858  010458  0EFC               	movlw	high _line1
  7859  01045A  6EF7               	movwf	tblptrh,c
  7860  01045C                     	endif
  7861  01045C                     	if	1	;There are 3 active tblptr bytes
  7862  01045C  0E00               	movlw	low (_line1 shr (0+16))
  7863  01045E  6EF8               	movwf	tblptru,c
  7864  010460                     	endif
  7865  010460  0008               	tblrd		*
  7866  010462  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7867  010466  EC75  F087         	call	_lcd_string	;wreg free
  7868                           
  7869                           ;vend.c: 420: uint8_t chantime = DATAEE_ReadByte(chan1time + channel);
  7870  01046A  0E3B               	movlw	low _chan1time
  7871  01046C  6EF6               	movwf	tblptrl,c
  7872  01046E                     	if	1	;There is more than 1 active tblptr byte
  7873  01046E  0EFC               	movlw	high _chan1time
  7874  010470  6EF7               	movwf	tblptrh,c
  7875  010472                     	endif
  7876  010472                     	if	1	;There are 3 active tblptr bytes
  7877  010472  0E00               	movlw	low (_chan1time shr (0+16))
  7878  010474  6EF8               	movwf	tblptru,c
  7879  010476                     	endif
  7880  010476  0009               	tblrd		*+
  7881  010478  CFF5 F0A8          	movff	tablat,??_Vend_timeset
  7882  01047C  0009               	tblrd		*+
  7883  01047E  CFF5 F0A9          	movff	tablat,??_Vend_timeset+1
  7884  010482  0100               	movlb	0	; () banked
  7885  010484  51AB               	movf	Vend_timeset@channel& (0+255),w,b
  7886  010486  25A8               	addwf	??_Vend_timeset& (0+255),w,b
  7887  010488  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  7888  01048A  0E00               	movlw	0
  7889  01048C  21A9               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
  7890  01048E  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  7891  010490  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  7892  010494  0100               	movlb	0	; () banked
  7893  010496  6FAA               	movwf	Vend_timeset@chantime& (0+255),b
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;vend.c: 421: displ_time(chantime, channel);
  7897  010498  C0AB  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7898  01049C  51AA               	movf	Vend_timeset@chantime& (0+255),w,b
  7899  01049E  EC6D  F088         	call	_displ_time
  7900                           
  7901                           ;vend.c: 422: while(venflags.mottime)
  7902  0104A2  D04E               	goto	l2120
  7903  0104A4                     
  7904                           ;vend.c: 423: {
  7905                           ;vend.c: 424: buttons = butindb();
  7906  0104A4  EC2B  F08F         	call	_butindb	;wreg free
  7907  0104A8  6E39               	movwf	_buttons,c	;volatile
  7908                           
  7909                           ;vend.c: 425: switch(buttons)
  7910  0104AA  D040               	goto	l2118
  7911  0104AC  0100               	movlb	0	; () banked
  7912  0104AE  2BAA               	incf	Vend_timeset@chantime& (0+255),f,b
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;vend.c: 428: DATAEE_WriteByte(chan1time + channel, chantime);
  7916  0104B0  0E3B               	movlw	low _chan1time
  7917  0104B2  6EF6               	movwf	tblptrl,c
  7918  0104B4                     	if	1	;There is more than 1 active tblptr byte
  7919  0104B4  0EFC               	movlw	high _chan1time
  7920  0104B6  6EF7               	movwf	tblptrh,c
  7921  0104B8                     	endif
  7922  0104B8                     	if	1	;There are 3 active tblptr bytes
  7923  0104B8  0E00               	movlw	low (_chan1time shr (0+16))
  7924  0104BA  6EF8               	movwf	tblptru,c
  7925  0104BC                     	endif
  7926  0104BC  0009               	tblrd		*+
  7927  0104BE  CFF5 F0A8          	movff	tablat,??_Vend_timeset
  7928  0104C2  0009               	tblrd		*+
  7929  0104C4  CFF5 F0A9          	movff	tablat,??_Vend_timeset+1
  7930  0104C8  51AB               	movf	Vend_timeset@channel& (0+255),w,b
  7931  0104CA  25A8               	addwf	??_Vend_timeset& (0+255),w,b
  7932  0104CC  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  7933  0104CE  0E00               	movlw	0
  7934  0104D0  21A9               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
  7935  0104D2  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  7936  0104D4  C0AA  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
  7937  0104D8  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  7938                           
  7939                           ;vend.c: 429: displ_time(chantime, channel);
  7940  0104DC  C0AB  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7941  0104E0  0100               	movlb	0	; () banked
  7942  0104E2  51AA               	movf	Vend_timeset@chantime& (0+255),w,b
  7943  0104E4  EC6D  F088         	call	_displ_time
  7944                           
  7945                           ;vend.c: 430: break;
  7946  0104E8  D02B               	goto	l2120
  7947  0104EA  0100               	movlb	0	; () banked
  7948  0104EC  07AA               	decf	Vend_timeset@chantime& (0+255),f,b
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;vend.c: 432: DATAEE_WriteByte(chan1time + channel, chantime);
  7952  0104EE  0E3B               	movlw	low _chan1time
  7953  0104F0  6EF6               	movwf	tblptrl,c
  7954  0104F2                     	if	1	;There is more than 1 active tblptr byte
  7955  0104F2  0EFC               	movlw	high _chan1time
  7956  0104F4  6EF7               	movwf	tblptrh,c
  7957  0104F6                     	endif
  7958  0104F6                     	if	1	;There are 3 active tblptr bytes
  7959  0104F6  0E00               	movlw	low (_chan1time shr (0+16))
  7960  0104F8  6EF8               	movwf	tblptru,c
  7961  0104FA                     	endif
  7962  0104FA  0009               	tblrd		*+
  7963  0104FC  CFF5 F0A8          	movff	tablat,??_Vend_timeset
  7964  010500  0009               	tblrd		*+
  7965  010502  CFF5 F0A9          	movff	tablat,??_Vend_timeset+1
  7966  010506  51AB               	movf	Vend_timeset@channel& (0+255),w,b
  7967  010508  25A8               	addwf	??_Vend_timeset& (0+255),w,b
  7968  01050A  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  7969  01050C  0E00               	movlw	0
  7970  01050E  21A9               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
  7971  010510  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  7972  010512  C0AA  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
  7973  010516  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  7974                           
  7975                           ;vend.c: 433: displ_time(chantime, channel);
  7976  01051A  C0AB  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7977  01051E  0100               	movlb	0	; () banked
  7978  010520  51AA               	movf	Vend_timeset@chantime& (0+255),w,b
  7979  010522  EC6D  F088         	call	_displ_time
  7980                           
  7981                           ;vend.c: 434: break;
  7982  010526  D00C               	goto	l2120
  7983  010528                     l2122:
  7984  010528  982D               	bcf	_venflags+1,4,c
  7985                           
  7986                           ;vend.c: 436: }
  7987  01052A  D00A               	goto	l2120
  7988  01052C                     l2118:
  7989  01052C  5039               	movf	_buttons,w,c	;volatile
  7990                           
  7991                           ; Switch size 1, requested type "space"
  7992                           ; Number of cases is 3, Range of values is 1 to 128
  7993                           ; switch strategies available:
  7994                           ; Name         Instructions Cycles
  7995                           ; simple_byte           10     6 (average)
  7996                           ;	Chosen strategy is simple_byte
  7997  01052E  0A01               	xorlw	1	; case 1
  7998  010530  B4D8               	btfsc	status,2,c
  7999  010532  D7BC               	goto	l2119
  8000  010534  0A03               	xorlw	3	; case 2
  8001  010536  B4D8               	btfsc	status,2,c
  8002  010538  D7D8               	goto	l2121
  8003  01053A  0A82               	xorlw	130	; case 128
  8004  01053C  B4D8               	btfsc	status,2,c
  8005  01053E  D7F4               	goto	l2122
  8006  010540                     l2120:
  8007  010540  A82D               	btfss	_venflags+1,4,c
  8008  010542  0012               	return	
  8009  010544  D7AF               	goto	l2117
  8010  010546                     __end_of_Vend_timeset:
  8011                           	opt stack 0
  8012                           tblptru	equ	0xFF8
  8013                           tblptrh	equ	0xFF7
  8014                           tblptrl	equ	0xFF6
  8015                           tablat	equ	0xFF5
  8016                           prodh	equ	0xFF4
  8017                           prodl	equ	0xFF3
  8018                           postinc0	equ	0xFEE
  8019                           wreg	equ	0xFE8
  8020                           indf2	equ	0xFDF
  8021                           fsr2h	equ	0xFDA
  8022                           fsr2l	equ	0xFD9
  8023                           status	equ	0xFD8
  8024                           
  8025 ;; *************** function _displ_time *****************
  8026 ;; Defined at:
  8027 ;;		line 99 in file "lcd.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  motortime       1    wreg     unsigned char 
  8030 ;;  channel         1   31[COMRAM] unsigned char 
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;  motortime       1   32[COMRAM] unsigned char 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8042 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;Total ram usage:        2 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    8
  8049 ;; This function calls:
  8050 ;;		_displ_hex
  8051 ;;		_lcd_string
  8052 ;;		_lcd_writeC
  8053 ;; This function is called by:
  8054 ;;		_Vend_timeset
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text40
  8059  0110DA                     __ptext40:
  8060                           	opt stack 0
  8061  0110DA                     _displ_time:
  8062                           	opt stack 18
  8063                           
  8064                           ;incstack = 0
  8065                           ;displ_time@motortime stored from wreg
  8066  0110DA  6E2B               	movwf	displ_time@motortime,c
  8067                           
  8068                           ;lcd.c: 101: lcd_string(clrline, line3);
  8069  0110DC  0E29               	movlw	low _clrline
  8070  0110DE  6E24               	movwf	lcd_string@lcdstring,c
  8071  0110E0  0EFF               	movlw	high _clrline
  8072  0110E2  6E25               	movwf	lcd_string@lcdstring+1,c
  8073  0110E4  0E8D               	movlw	low _line3
  8074  0110E6  6EF6               	movwf	tblptrl,c
  8075  0110E8                     	if	1	;There is more than 1 active tblptr byte
  8076  0110E8  0EFC               	movlw	high _line3
  8077  0110EA  6EF7               	movwf	tblptrh,c
  8078  0110EC                     	endif
  8079  0110EC                     	if	1	;There are 3 active tblptr bytes
  8080  0110EC  0E00               	movlw	low (_line3 shr (0+16))
  8081  0110EE  6EF8               	movwf	tblptru,c
  8082  0110F0                     	endif
  8083  0110F0  0008               	tblrd		*
  8084  0110F2  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8085  0110F6  EC75  F087         	call	_lcd_string	;wreg free
  8086                           
  8087                           ;lcd.c: 102: lcd_string(clrline, line4);
  8088  0110FA  0E29               	movlw	low _clrline
  8089  0110FC  6E24               	movwf	lcd_string@lcdstring,c
  8090  0110FE  0EFF               	movlw	high _clrline
  8091  011100  6E25               	movwf	lcd_string@lcdstring+1,c
  8092  011102  0E8C               	movlw	low _line4
  8093  011104  6EF6               	movwf	tblptrl,c
  8094  011106                     	if	1	;There is more than 1 active tblptr byte
  8095  011106  0EFC               	movlw	high _line4
  8096  011108  6EF7               	movwf	tblptrh,c
  8097  01110A                     	endif
  8098  01110A                     	if	1	;There are 3 active tblptr bytes
  8099  01110A  0E00               	movlw	low (_line4 shr (0+16))
  8100  01110C  6EF8               	movwf	tblptru,c
  8101  01110E                     	endif
  8102  01110E  0008               	tblrd		*
  8103  011110  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8104  011114  EC75  F087         	call	_lcd_string	;wreg free
  8105                           
  8106                           ;lcd.c: 103: lcd_string(chanmsg, line3);
  8107  011118  0E8C               	movlw	low _chanmsg
  8108  01111A  6E24               	movwf	lcd_string@lcdstring,c
  8109  01111C  0EFF               	movlw	high _chanmsg
  8110  01111E  6E25               	movwf	lcd_string@lcdstring+1,c
  8111  011120  0E8D               	movlw	low _line3
  8112  011122  6EF6               	movwf	tblptrl,c
  8113  011124                     	if	1	;There is more than 1 active tblptr byte
  8114  011124  0EFC               	movlw	high _line3
  8115  011126  6EF7               	movwf	tblptrh,c
  8116  011128                     	endif
  8117  011128                     	if	1	;There are 3 active tblptr bytes
  8118  011128  0E00               	movlw	low (_line3 shr (0+16))
  8119  01112A  6EF8               	movwf	tblptru,c
  8120  01112C                     	endif
  8121  01112C  0008               	tblrd		*
  8122  01112E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8123  011132  EC75  F087         	call	_lcd_string	;wreg free
  8124                           
  8125                           ;lcd.c: 104: lcd_writeC(channel++ | 0x30);
  8126  011136  502A               	movf	displ_time@channel,w,c
  8127  011138  0930               	iorlw	48
  8128  01113A  EC97  F08B         	call	_lcd_writeC
  8129  01113E  2A2A               	incf	displ_time@channel,f,c
  8130                           
  8131                           ;lcd.c: 105: lcd_string(timemsg, line4);
  8132  011140  0E3E               	movlw	low _timemsg
  8133  011142  6E24               	movwf	lcd_string@lcdstring,c
  8134  011144  0EFF               	movlw	high _timemsg
  8135  011146  6E25               	movwf	lcd_string@lcdstring+1,c
  8136  011148  0E8C               	movlw	low _line4
  8137  01114A  6EF6               	movwf	tblptrl,c
  8138  01114C                     	if	1	;There is more than 1 active tblptr byte
  8139  01114C  0EFC               	movlw	high _line4
  8140  01114E  6EF7               	movwf	tblptrh,c
  8141  011150                     	endif
  8142  011150                     	if	1	;There are 3 active tblptr bytes
  8143  011150  0E00               	movlw	low (_line4 shr (0+16))
  8144  011152  6EF8               	movwf	tblptru,c
  8145  011154                     	endif
  8146  011154  0008               	tblrd		*
  8147  011156  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8148  01115A  EC75  F087         	call	_lcd_string	;wreg free
  8149                           
  8150                           ;lcd.c: 106: displ_hex((uint8_t) motortime);
  8151  01115E  502B               	movf	displ_time@motortime,w,c
  8152  011160  6E27               	movwf	displ_hex@hexnum,c
  8153  011162  6A28               	clrf	displ_hex@hexnum+1,c
  8154  011164  6A29               	clrf	displ_hex@hexnum+2,c
  8155  011166  EC1A  F087         	call	_displ_hex	;wreg free
  8156  01116A  0012               	return		;funcret
  8157  01116C                     __end_of_displ_time:
  8158                           	opt stack 0
  8159                           tblptru	equ	0xFF8
  8160                           tblptrh	equ	0xFF7
  8161                           tblptrl	equ	0xFF6
  8162                           tablat	equ	0xFF5
  8163                           prodh	equ	0xFF4
  8164                           prodl	equ	0xFF3
  8165                           postinc0	equ	0xFEE
  8166                           wreg	equ	0xFE8
  8167                           indf2	equ	0xFDF
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function _Sens_off *****************
  8173 ;; Defined at:
  8174 ;;		line 495 in file "vend.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;Total ram usage:        0 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:   10
  8195 ;; This function calls:
  8196 ;;		_Read_Service
  8197 ;;		_butindb
  8198 ;;		_get_channel
  8199 ;;		_lcd_string
  8200 ;;		_off_sens
  8201 ;; This function is called by:
  8202 ;;		_Vend_setup
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text41
  8207  011A4E                     __ptext41:
  8208                           	opt stack 0
  8209  011A4E                     _Sens_off:
  8210                           	opt stack 18
  8211                           
  8212                           ;vend.c: 497: venflags.nosense = 1;
  8213                           
  8214                           ;incstack = 0
  8215  011A4E  8A2D               	bsf	_venflags+1,5,c
  8216                           
  8217                           ;vend.c: 498: lcd_string(setimemsg, line1);
  8218  011A50  0E80               	movlw	low _setimemsg
  8219  011A52  6E24               	movwf	lcd_string@lcdstring,c
  8220  011A54  0EFE               	movlw	high _setimemsg
  8221  011A56  6E25               	movwf	lcd_string@lcdstring+1,c
  8222  011A58  0E8F               	movlw	low _line1
  8223  011A5A  6EF6               	movwf	tblptrl,c
  8224  011A5C                     	if	1	;There is more than 1 active tblptr byte
  8225  011A5C  0EFC               	movlw	high _line1
  8226  011A5E  6EF7               	movwf	tblptrh,c
  8227  011A60                     	endif
  8228  011A60                     	if	1	;There are 3 active tblptr bytes
  8229  011A60  0E00               	movlw	low (_line1 shr (0+16))
  8230  011A62  6EF8               	movwf	tblptru,c
  8231  011A64                     	endif
  8232  011A64  0008               	tblrd		*
  8233  011A66  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8234  011A6A  EC75  F087         	call	_lcd_string	;wreg free
  8235                           
  8236                           ;vend.c: 499: buttons = butindb();
  8237  011A6E  EC2B  F08F         	call	_butindb	;wreg free
  8238  011A72  6E39               	movwf	_buttons,c	;volatile
  8239                           
  8240                           ;vend.c: 500: while(venflags.nosense)
  8241  011A74  D010               	goto	l2150
  8242  011A76                     
  8243                           ;vend.c: 501: {
  8244                           ;vend.c: 502: buttons = butindb();
  8245  011A76  EC2B  F08F         	call	_butindb	;wreg free
  8246  011A7A  6E39               	movwf	_buttons,c	;volatile
  8247                           
  8248                           ;vend.c: 503: if(buttons != 0x00)
  8249  011A7C  5039               	movf	_buttons,w,c	;volatile
  8250  011A7E  B4D8               	btfsc	status,2,c
  8251  011A80  D005               	goto	l2149
  8252                           
  8253                           ;vend.c: 504: {
  8254                           ;vend.c: 505: off_sens(get_channel(buttons));
  8255  011A82  5039               	movf	_buttons,w,c	;volatile
  8256  011A84  ECF4  F08F         	call	_get_channel
  8257  011A88  EC75  F084         	call	_off_sens
  8258  011A8C                     l2149:
  8259                           
  8260                           ;vend.c: 506: }
  8261                           ;vend.c: 507: if(Read_Service() == 0x00)
  8262  011A8C  EC80  F090         	call	_Read_Service	;wreg free
  8263  011A90  0900               	iorlw	0
  8264  011A92  B4D8               	btfsc	status,2,c
  8265                           
  8266                           ;vend.c: 508: {
  8267                           ;vend.c: 509: venflags.nosense = 0;
  8268  011A94  9A2D               	bcf	_venflags+1,5,c
  8269  011A96                     l2150:
  8270  011A96  AA2D               	btfss	_venflags+1,5,c
  8271  011A98  0012               	return	
  8272  011A9A  D7ED               	goto	l2148
  8273  011A9C                     __end_of_Sens_off:
  8274                           	opt stack 0
  8275                           tblptru	equ	0xFF8
  8276                           tblptrh	equ	0xFF7
  8277                           tblptrl	equ	0xFF6
  8278                           tablat	equ	0xFF5
  8279                           prodh	equ	0xFF4
  8280                           prodl	equ	0xFF3
  8281                           postinc0	equ	0xFEE
  8282                           wreg	equ	0xFE8
  8283                           indf2	equ	0xFDF
  8284                           fsr2h	equ	0xFDA
  8285                           fsr2l	equ	0xFD9
  8286                           status	equ	0xFD8
  8287                           
  8288 ;; *************** function _off_sens *****************
  8289 ;; Defined at:
  8290 ;;		line 516 in file "vend.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  channel         1    wreg     unsigned char 
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;  channel         1    0[BANK0 ] unsigned char 
  8295 ;;  senseflags      1    2[BANK0 ] unsigned char 
  8296 ;;  chanbit         1    1[BANK0 ] unsigned char 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      void 
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;Total ram usage:        3 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    9
  8313 ;; This function calls:
  8314 ;;		_DATAEE_ReadByte
  8315 ;;		_DATAEE_WriteByte
  8316 ;;		_butindb
  8317 ;;		_displ_sflags
  8318 ;; This function is called by:
  8319 ;;		_Sens_off
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text42
  8324  0108EA                     __ptext42:
  8325                           	opt stack 0
  8326  0108EA                     _off_sens:
  8327                           	opt stack 18
  8328                           
  8329                           ;incstack = 0
  8330                           ;off_sens@channel stored from wreg
  8331  0108EA  0100               	movlb	0	; () banked
  8332  0108EC  6F9C               	movwf	off_sens@channel& (0+255),b
  8333                           
  8334                           ;vend.c: 518: uint8_t chanbit = buttons;
  8335  0108EE  C039  F09D         	movff	_buttons,off_sens@chanbit	;volatile
  8336                           
  8337                           ;vend.c: 519: venflags.sensno = 1;
  8338  0108F2  8E2D               	bsf	_venflags+1,7,c
  8339                           
  8340                           ;vend.c: 520: uint8_t senseflags = DATAEE_ReadByte(sensorflags);
  8341  0108F4  0E3D               	movlw	low _sensorflags
  8342  0108F6  6EF6               	movwf	tblptrl,c
  8343  0108F8                     	if	1	;There is more than 1 active tblptr byte
  8344  0108F8  0EFC               	movlw	high _sensorflags
  8345  0108FA  6EF7               	movwf	tblptrh,c
  8346  0108FC                     	endif
  8347  0108FC                     	if	1	;There are 3 active tblptr bytes
  8348  0108FC  0E00               	movlw	low (_sensorflags shr (0+16))
  8349  0108FE  6EF8               	movwf	tblptru,c
  8350  010900                     	endif
  8351  010900  0009               	tblrd		*+
  8352  010902  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  8353  010906  000A               	tblrd		*-
  8354  010908  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  8355  01090C  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  8356  010910  0100               	movlb	0	; () banked
  8357  010912  6F9E               	movwf	off_sens@senseflags& (0+255),b
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;vend.c: 521: displ_sflags(senseflags, channel, chanbit);
  8361  010914  C09C  F029         	movff	off_sens@channel,displ_sflags@chanel
  8362  010918  C09D  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  8363  01091C  519E               	movf	off_sens@senseflags& (0+255),w,b
  8364  01091E  ECBF  F086         	call	_displ_sflags
  8365                           
  8366                           ;vend.c: 523: while(venflags.sensno)
  8367  010922  D04B               	goto	l2159
  8368  010924                     
  8369                           ;vend.c: 524: {
  8370                           ;vend.c: 525: buttons = butindb();
  8371  010924  EC2B  F08F         	call	_butindb	;wreg free
  8372  010928  6E39               	movwf	_buttons,c	;volatile
  8373                           
  8374                           ;vend.c: 526: switch(buttons)
  8375  01092A  D03D               	goto	l2157
  8376  01092C  0100               	movlb	0	; () banked
  8377  01092E  519D               	movf	off_sens@chanbit& (0+255),w,b
  8378  010930  0AFF               	xorlw	255
  8379  010932  159E               	andwf	off_sens@senseflags& (0+255),w,b
  8380  010934  6F9E               	movwf	off_sens@senseflags& (0+255),b
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;vend.c: 530: DATAEE_WriteByte(sensorflags, senseflags);
  8384  010936  0E3D               	movlw	low _sensorflags
  8385  010938  6EF6               	movwf	tblptrl,c
  8386  01093A                     	if	1	;There is more than 1 active tblptr byte
  8387  01093A  0EFC               	movlw	high _sensorflags
  8388  01093C  6EF7               	movwf	tblptrh,c
  8389  01093E                     	endif
  8390  01093E                     	if	1	;There are 3 active tblptr bytes
  8391  01093E  0E00               	movlw	low (_sensorflags shr (0+16))
  8392  010940  6EF8               	movwf	tblptru,c
  8393  010942                     	endif
  8394  010942  0009               	tblrd		*+
  8395  010944  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  8396  010948  000A               	tblrd		*-
  8397  01094A  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  8398  01094E  C09E  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
  8399  010952  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  8400                           
  8401                           ;vend.c: 531: displ_sflags(senseflags, channel, chanbit);
  8402  010956  C09C  F029         	movff	off_sens@channel,displ_sflags@chanel
  8403  01095A  C09D  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  8404  01095E  0100               	movlb	0	; () banked
  8405  010960  519E               	movf	off_sens@senseflags& (0+255),w,b
  8406  010962  ECBF  F086         	call	_displ_sflags
  8407                           
  8408                           ;vend.c: 532: break;
  8409  010966  D029               	goto	l2159
  8410  010968  0100               	movlb	0	; () banked
  8411  01096A  519E               	movf	off_sens@senseflags& (0+255),w,b
  8412  01096C  119D               	iorwf	off_sens@chanbit& (0+255),w,b
  8413  01096E  6F9E               	movwf	off_sens@senseflags& (0+255),b
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;vend.c: 535: DATAEE_WriteByte(sensorflags, senseflags);
  8417  010970  0E3D               	movlw	low _sensorflags
  8418  010972  6EF6               	movwf	tblptrl,c
  8419  010974                     	if	1	;There is more than 1 active tblptr byte
  8420  010974  0EFC               	movlw	high _sensorflags
  8421  010976  6EF7               	movwf	tblptrh,c
  8422  010978                     	endif
  8423  010978                     	if	1	;There are 3 active tblptr bytes
  8424  010978  0E00               	movlw	low (_sensorflags shr (0+16))
  8425  01097A  6EF8               	movwf	tblptru,c
  8426  01097C                     	endif
  8427  01097C  0009               	tblrd		*+
  8428  01097E  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  8429  010982  000A               	tblrd		*-
  8430  010984  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  8431  010988  C09E  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
  8432  01098C  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  8433                           
  8434                           ;vend.c: 536: displ_sflags(senseflags, channel, chanbit);
  8435  010990  C09C  F029         	movff	off_sens@channel,displ_sflags@chanel
  8436  010994  C09D  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  8437  010998  0100               	movlb	0	; () banked
  8438  01099A  519E               	movf	off_sens@senseflags& (0+255),w,b
  8439  01099C  ECBF  F086         	call	_displ_sflags
  8440                           
  8441                           ;vend.c: 537: break;
  8442  0109A0  D00C               	goto	l2159
  8443  0109A2                     l2161:
  8444  0109A2  9E2D               	bcf	_venflags+1,7,c
  8445                           
  8446                           ;vend.c: 540: }
  8447                           
  8448                           ;vend.c: 539: break;
  8449  0109A4  D00A               	goto	l2159
  8450  0109A6                     l2157:
  8451  0109A6  5039               	movf	_buttons,w,c	;volatile
  8452                           
  8453                           ; Switch size 1, requested type "space"
  8454                           ; Number of cases is 3, Range of values is 1 to 128
  8455                           ; switch strategies available:
  8456                           ; Name         Instructions Cycles
  8457                           ; simple_byte           10     6 (average)
  8458                           ;	Chosen strategy is simple_byte
  8459  0109A8  0A01               	xorlw	1	; case 1
  8460  0109AA  B4D8               	btfsc	status,2,c
  8461  0109AC  D7BF               	goto	l2158
  8462  0109AE  0A03               	xorlw	3	; case 2
  8463  0109B0  B4D8               	btfsc	status,2,c
  8464  0109B2  D7DA               	goto	l2160
  8465  0109B4  0A82               	xorlw	130	; case 128
  8466  0109B6  B4D8               	btfsc	status,2,c
  8467  0109B8  D7F4               	goto	l2161
  8468  0109BA                     l2159:
  8469  0109BA  AE2D               	btfss	_venflags+1,7,c
  8470  0109BC  0012               	return	
  8471  0109BE  D7B2               	goto	l2156
  8472  0109C0                     __end_of_off_sens:
  8473                           	opt stack 0
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           postinc0	equ	0xFEE
  8481                           wreg	equ	0xFE8
  8482                           indf2	equ	0xFDF
  8483                           fsr2h	equ	0xFDA
  8484                           fsr2l	equ	0xFD9
  8485                           status	equ	0xFD8
  8486                           
  8487 ;; *************** function _displ_sflags *****************
  8488 ;; Defined at:
  8489 ;;		line 80 in file "lcd.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  senseflags      1    wreg     unsigned char 
  8492 ;;  chanel          1   30[COMRAM] unsigned char 
  8493 ;;  chanbit         1   31[COMRAM] unsigned char 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  senseflags      1   32[COMRAM] unsigned char 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;Total ram usage:        3 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    8
  8512 ;; This function calls:
  8513 ;;		_lcd_string
  8514 ;;		_lcd_writeC
  8515 ;; This function is called by:
  8516 ;;		_off_sens
  8517 ;; This function uses a non-reentrant model
  8518 ;;
  8519                           
  8520                           	psect	text43
  8521  010D7E                     __ptext43:
  8522                           	opt stack 0
  8523  010D7E                     _displ_sflags:
  8524                           	opt stack 18
  8525                           
  8526                           ;incstack = 0
  8527                           ;displ_sflags@senseflags stored from wreg
  8528  010D7E  6E2B               	movwf	displ_sflags@senseflags,c
  8529                           
  8530                           ;lcd.c: 83: lcd_string(chanmsg, line1);
  8531  010D80  0E8C               	movlw	low _chanmsg
  8532  010D82  6E24               	movwf	lcd_string@lcdstring,c
  8533  010D84  0EFF               	movlw	high _chanmsg
  8534  010D86  6E25               	movwf	lcd_string@lcdstring+1,c
  8535  010D88  0E8F               	movlw	low _line1
  8536  010D8A  6EF6               	movwf	tblptrl,c
  8537  010D8C                     	if	1	;There is more than 1 active tblptr byte
  8538  010D8C  0EFC               	movlw	high _line1
  8539  010D8E  6EF7               	movwf	tblptrh,c
  8540  010D90                     	endif
  8541  010D90                     	if	1	;There are 3 active tblptr bytes
  8542  010D90  0E00               	movlw	low (_line1 shr (0+16))
  8543  010D92  6EF8               	movwf	tblptru,c
  8544  010D94                     	endif
  8545  010D94  0008               	tblrd		*
  8546  010D96  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8547  010D9A  EC75  F087         	call	_lcd_string	;wreg free
  8548                           
  8549                           ;lcd.c: 84: lcd_writeC(chanel++ | 0x30);
  8550  010D9E  5029               	movf	displ_sflags@chanel,w,c
  8551  010DA0  0930               	iorlw	48
  8552  010DA2  EC97  F08B         	call	_lcd_writeC
  8553  010DA6  2A29               	incf	displ_sflags@chanel,f,c
  8554                           
  8555                           ;lcd.c: 85: lcd_string(sensmsg, line2);
  8556  010DA8  0EA4               	movlw	low _sensmsg
  8557  010DAA  6E24               	movwf	lcd_string@lcdstring,c
  8558  010DAC  0EFF               	movlw	high _sensmsg
  8559  010DAE  6E25               	movwf	lcd_string@lcdstring+1,c
  8560  010DB0  0E8E               	movlw	low _line2
  8561  010DB2  6EF6               	movwf	tblptrl,c
  8562  010DB4                     	if	1	;There is more than 1 active tblptr byte
  8563  010DB4  0EFC               	movlw	high _line2
  8564  010DB6  6EF7               	movwf	tblptrh,c
  8565  010DB8                     	endif
  8566  010DB8                     	if	1	;There are 3 active tblptr bytes
  8567  010DB8  0E00               	movlw	low (_line2 shr (0+16))
  8568  010DBA  6EF8               	movwf	tblptru,c
  8569  010DBC                     	endif
  8570  010DBC  0008               	tblrd		*
  8571  010DBE  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8572  010DC2  EC75  F087         	call	_lcd_string	;wreg free
  8573                           
  8574                           ;lcd.c: 86: lcd_string(sensoffmsg, line3);
  8575  010DC6  0EEE               	movlw	low _sensoffmsg
  8576  010DC8  6E24               	movwf	lcd_string@lcdstring,c
  8577  010DCA  0EFE               	movlw	high _sensoffmsg
  8578  010DCC  6E25               	movwf	lcd_string@lcdstring+1,c
  8579  010DCE  0E8D               	movlw	low _line3
  8580  010DD0  6EF6               	movwf	tblptrl,c
  8581  010DD2                     	if	1	;There is more than 1 active tblptr byte
  8582  010DD2  0EFC               	movlw	high _line3
  8583  010DD4  6EF7               	movwf	tblptrh,c
  8584  010DD6                     	endif
  8585  010DD6                     	if	1	;There are 3 active tblptr bytes
  8586  010DD6  0E00               	movlw	low (_line3 shr (0+16))
  8587  010DD8  6EF8               	movwf	tblptru,c
  8588  010DDA                     	endif
  8589  010DDA  0008               	tblrd		*
  8590  010DDC  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8591  010DE0  EC75  F087         	call	_lcd_string	;wreg free
  8592                           
  8593                           ;lcd.c: 88: if(senseflags && chanbit)
  8594  010DE4  502B               	movf	displ_sflags@senseflags,w,c
  8595  010DE6  B4D8               	btfsc	status,2,c
  8596  010DE8  D014               	goto	l1453
  8597  010DEA  502A               	movf	displ_sflags@chanbit,w,c
  8598  010DEC  B4D8               	btfsc	status,2,c
  8599  010DEE  D011               	goto	l1453
  8600                           
  8601                           ;lcd.c: 89: {
  8602                           ;lcd.c: 90: lcd_string(disabled, line2 + 10);
  8603  010DF0  0EB9               	movlw	low _disabled
  8604  010DF2  6E24               	movwf	lcd_string@lcdstring,c
  8605  010DF4  0EFF               	movlw	high _disabled
  8606  010DF6  6E25               	movwf	lcd_string@lcdstring+1,c
  8607  010DF8  0E8E               	movlw	low _line2
  8608  010DFA  6EF6               	movwf	tblptrl,c
  8609  010DFC                     	if	1	;There is more than 1 active tblptr byte
  8610  010DFC  0EFC               	movlw	high _line2
  8611  010DFE  6EF7               	movwf	tblptrh,c
  8612  010E00                     	endif
  8613  010E00                     	if	1	;There are 3 active tblptr bytes
  8614  010E00  0E00               	movlw	low (_line2 shr (0+16))
  8615  010E02  6EF8               	movwf	tblptru,c
  8616  010E04                     	endif
  8617  010E04  0008               	tblrd		*
  8618  010E06  50F5               	movf	tablat,w,c
  8619  010E08  0F0A               	addlw	10
  8620  010E0A  6E26               	movwf	lcd_string@lcdline,c
  8621  010E0C  EC75  F087         	call	_lcd_string	;wreg free
  8622                           
  8623                           ;lcd.c: 91: }
  8624  010E10  0012               	return	
  8625  010E12                     l1453:
  8626                           
  8627                           ;lcd.c: 92: else
  8628                           ;lcd.c: 93: {
  8629                           ;lcd.c: 94: lcd_string(enabled, line2 + 10);
  8630  010E12  0EC3               	movlw	low _enabled
  8631  010E14  6E24               	movwf	lcd_string@lcdstring,c
  8632  010E16  0EFF               	movlw	high _enabled
  8633  010E18  6E25               	movwf	lcd_string@lcdstring+1,c
  8634  010E1A  0E8E               	movlw	low _line2
  8635  010E1C  6EF6               	movwf	tblptrl,c
  8636  010E1E                     	if	1	;There is more than 1 active tblptr byte
  8637  010E1E  0EFC               	movlw	high _line2
  8638  010E20  6EF7               	movwf	tblptrh,c
  8639  010E22                     	endif
  8640  010E22                     	if	1	;There are 3 active tblptr bytes
  8641  010E22  0E00               	movlw	low (_line2 shr (0+16))
  8642  010E24  6EF8               	movwf	tblptru,c
  8643  010E26                     	endif
  8644  010E26  0008               	tblrd		*
  8645  010E28  50F5               	movf	tablat,w,c
  8646  010E2A  0F0A               	addlw	10
  8647  010E2C  6E26               	movwf	lcd_string@lcdline,c
  8648  010E2E  EC75  F087         	call	_lcd_string	;wreg free
  8649  010E32  0012               	return	
  8650  010E34                     __end_of_displ_sflags:
  8651                           	opt stack 0
  8652                           tblptru	equ	0xFF8
  8653                           tblptrh	equ	0xFF7
  8654                           tblptrl	equ	0xFF6
  8655                           tablat	equ	0xFF5
  8656                           prodh	equ	0xFF4
  8657                           prodl	equ	0xFF3
  8658                           postinc0	equ	0xFEE
  8659                           wreg	equ	0xFE8
  8660                           indf2	equ	0xFDF
  8661                           fsr2h	equ	0xFDA
  8662                           fsr2l	equ	0xFD9
  8663                           status	equ	0xFD8
  8664                           
  8665 ;; *************** function _Reset_settings *****************
  8666 ;; Defined at:
  8667 ;;		line 544 in file "vend.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;		None
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  chanlinkbits    2    0[BANK0 ] unsigned int 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8682 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;Total ram usage:        4 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:    8
  8688 ;; This function calls:
  8689 ;;		_DATAEE_WriteByte
  8690 ;;		_lcd_string
  8691 ;; This function is called by:
  8692 ;;		_Vend_setup
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text44
  8697  010F9E                     __ptext44:
  8698                           	opt stack 0
  8699  010F9E                     _Reset_settings:
  8700                           	opt stack 20
  8701                           
  8702                           ;vend.c: 546: lcd_string(chanresetmsg, line1);
  8703                           
  8704                           ;incstack = 0
  8705  010F9E  0ECE               	movlw	low _chanresetmsg
  8706  010FA0  6E24               	movwf	lcd_string@lcdstring,c
  8707  010FA2  0EFE               	movlw	high _chanresetmsg
  8708  010FA4  6E25               	movwf	lcd_string@lcdstring+1,c
  8709  010FA6  0E8F               	movlw	low _line1
  8710  010FA8  6EF6               	movwf	tblptrl,c
  8711  010FAA                     	if	1	;There is more than 1 active tblptr byte
  8712  010FAA  0EFC               	movlw	high _line1
  8713  010FAC  6EF7               	movwf	tblptrh,c
  8714  010FAE                     	endif
  8715  010FAE                     	if	1	;There are 3 active tblptr bytes
  8716  010FAE  0E00               	movlw	low (_line1 shr (0+16))
  8717  010FB0  6EF8               	movwf	tblptru,c
  8718  010FB2                     	endif
  8719  010FB2  0008               	tblrd		*
  8720  010FB4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8721  010FB8  EC75  F087         	call	_lcd_string	;wreg free
  8722                           
  8723                           ;vend.c: 547: uint16_t chanlinkbits = chan1linkbits;
  8724  010FBC  0E4D               	movlw	low _chan1linkbits
  8725  010FBE  6EF6               	movwf	tblptrl,c
  8726  010FC0                     	if	1	;There is more than 1 active tblptr byte
  8727  010FC0  0EFC               	movlw	high _chan1linkbits
  8728  010FC2  6EF7               	movwf	tblptrh,c
  8729  010FC4                     	endif
  8730  010FC4                     	if	1	;There are 3 active tblptr bytes
  8731  010FC4  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8732  010FC6  6EF8               	movwf	tblptru,c
  8733  010FC8                     	endif
  8734  010FC8  0009               	tblrd		*+
  8735  010FCA  CFF5 F09C          	movff	tablat,Reset_settings@chanlinkbits
  8736  010FCE  000A               	tblrd		*-
  8737  010FD0  CFF5 F09D          	movff	tablat,Reset_settings@chanlinkbits+1
  8738                           
  8739                           ;vend.c: 548: while(chanlinkbits < chan1time)
  8740  010FD4  D00B               	goto	l2166
  8741  010FD6                     
  8742                           ;vend.c: 549: {
  8743                           ;vend.c: 551: DATAEE_WriteByte(chanlinkbits, 0x00);
  8744  010FD6  C09C  F01D         	movff	Reset_settings@chanlinkbits,DATAEE_WriteByte@bAdd
  8745  010FDA  C09D  F01E         	movff	Reset_settings@chanlinkbits+1,DATAEE_WriteByte@bAdd+1
  8746  010FDE  0E00               	movlw	0
  8747  010FE0  6E1F               	movwf	DATAEE_WriteByte@bData,c
  8748  010FE2  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  8749                           
  8750                           ;vend.c: 552: chanlinkbits++;
  8751  010FE6  0100               	movlb	0	; () banked
  8752  010FE8  4B9C               	infsnz	Reset_settings@chanlinkbits& (0+255),f,b
  8753  010FEA  2B9D               	incf	(Reset_settings@chanlinkbits+1)& (0+255),f,b
  8754  010FEC                     l2166:
  8755                           
  8756                           ; BSR set to: 0
  8757  010FEC  0E3B               	movlw	low _chan1time
  8758  010FEE  6EF6               	movwf	tblptrl,c
  8759  010FF0                     	if	1	;There is more than 1 active tblptr byte
  8760  010FF0  0EFC               	movlw	high _chan1time
  8761  010FF2  6EF7               	movwf	tblptrh,c
  8762  010FF4                     	endif
  8763  010FF4                     	if	1	;There are 3 active tblptr bytes
  8764  010FF4  0E00               	movlw	low (_chan1time shr (0+16))
  8765  010FF6  6EF8               	movwf	tblptru,c
  8766  010FF8                     	endif
  8767  010FF8  0009               	tblrd		*+
  8768  010FFA  50F5               	movf	tablat,w,c
  8769  010FFC  0100               	movlb	0	; () banked
  8770  010FFE  5D9C               	subwf	Reset_settings@chanlinkbits& (0+255),w,b
  8771  011000  0009               	tblrd		*+
  8772  011002  50F5               	movf	tablat,w,c
  8773  011004  599D               	subwfb	(Reset_settings@chanlinkbits+1)& (0+255),w,b
  8774  011006  A0D8               	btfss	status,0,c
  8775  011008  D7E6               	goto	l2167
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;vend.c: 553: }
  8779                           ;vend.c: 554: DATAEE_WriteByte(sensorflags, 0x00);
  8780                           
  8781                           ; BSR set to: 0
  8782  01100A  0E3D               	movlw	low _sensorflags
  8783  01100C  6EF6               	movwf	tblptrl,c
  8784  01100E                     	if	1	;There is more than 1 active tblptr byte
  8785  01100E  0EFC               	movlw	high _sensorflags
  8786  011010  6EF7               	movwf	tblptrh,c
  8787  011012                     	endif
  8788  011012                     	if	1	;There are 3 active tblptr bytes
  8789  011012  0E00               	movlw	low (_sensorflags shr (0+16))
  8790  011014  6EF8               	movwf	tblptru,c
  8791  011016                     	endif
  8792  011016  0009               	tblrd		*+
  8793  011018  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  8794  01101C  000A               	tblrd		*-
  8795  01101E  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  8796  011022  0E00               	movlw	0
  8797  011024  6E1F               	movwf	DATAEE_WriteByte@bData,c
  8798  011026  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  8799                           
  8800                           ;vend.c: 555: _delay((unsigned long)((2000)*(12000000/4000.0)));
  8801  01102A  0E1F               	movlw	31
  8802  01102C  6E2A               	movwf	(??_Reset_settings+1)& (0+255),c
  8803  01102E  0E71               	movlw	113
  8804  011030  6E29               	movwf	??_Reset_settings& (0+255),c
  8805  011032  0E1E               	movlw	30
  8806  011034                     u3557:
  8807  011034  2EE8               	decfsz	wreg,f,c
  8808  011036  D7FE               	bra	u3557
  8809  011038  2E29               	decfsz	??_Reset_settings& (0+255),f,c
  8810  01103A  D7FC               	bra	u3557
  8811  01103C  2E2A               	decfsz	(??_Reset_settings+1)& (0+255),f,c
  8812  01103E  D7FA               	bra	u3557
  8813  011040  D000               	nop2	
  8814  011042  0012               	return		;funcret
  8815  011044                     __end_of_Reset_settings:
  8816                           	opt stack 0
  8817                           tblptru	equ	0xFF8
  8818                           tblptrh	equ	0xFF7
  8819                           tblptrl	equ	0xFF6
  8820                           tablat	equ	0xFF5
  8821                           prodh	equ	0xFF4
  8822                           prodl	equ	0xFF3
  8823                           postinc0	equ	0xFEE
  8824                           wreg	equ	0xFE8
  8825                           indf2	equ	0xFDF
  8826                           fsr2h	equ	0xFDA
  8827                           fsr2l	equ	0xFD9
  8828                           status	equ	0xFD8
  8829                           
  8830 ;; *************** function _Init_vendmem *****************
  8831 ;; Defined at:
  8832 ;;		line 9 in file "vend.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;		None
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  chanlink        2   22[COMRAM] PTR unsigned char 
  8837 ;;		 -> chanlink1(1), 
  8838 ;;  chanlinkbits    2   20[COMRAM] unsigned int 
  8839 ;;  i               1   24[COMRAM] unsigned char 
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  1    wreg      void 
  8842 ;; Registers used:
  8843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8844 ;; Tracked objects:
  8845 ;;		On entry : 0/0
  8846 ;;		On exit  : 0/0
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;Total ram usage:        5 bytes
  8854 ;; Hardware stack levels used:    1
  8855 ;; Hardware stack levels required when called:    3
  8856 ;; This function calls:
  8857 ;;		_DATAEE_ReadByte
  8858 ;; This function is called by:
  8859 ;;		_vend_init
  8860 ;;		_Vend_setup
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text45
  8865  0115EC                     __ptext45:
  8866                           	opt stack 0
  8867  0115EC                     _Init_vendmem:
  8868                           	opt stack 26
  8869                           
  8870                           ;vend.c: 12: ((uint8_t*) &senschk)[0] = DATAEE_ReadByte(sensorflags);
  8871                           
  8872                           ;incstack = 0
  8873  0115EC  0E3D               	movlw	low _sensorflags
  8874  0115EE  6EF6               	movwf	tblptrl,c
  8875  0115F0                     	if	1	;There is more than 1 active tblptr byte
  8876  0115F0  0EFC               	movlw	high _sensorflags
  8877  0115F2  6EF7               	movwf	tblptrh,c
  8878  0115F4                     	endif
  8879  0115F4                     	if	1	;There are 3 active tblptr bytes
  8880  0115F4  0E00               	movlw	low (_sensorflags shr (0+16))
  8881  0115F6  6EF8               	movwf	tblptru,c
  8882  0115F8                     	endif
  8883  0115F8  0009               	tblrd		*+
  8884  0115FA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  8885  0115FE  000A               	tblrd		*-
  8886  011600  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  8887  011604  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  8888  011608  6E35               	movwf	_senschk,c
  8889                           
  8890                           ;vend.c: 14: uint16_t chanlinkbits = chan1linkbits;
  8891  01160A  0E4D               	movlw	low _chan1linkbits
  8892  01160C  6EF6               	movwf	tblptrl,c
  8893  01160E                     	if	1	;There is more than 1 active tblptr byte
  8894  01160E  0EFC               	movlw	high _chan1linkbits
  8895  011610  6EF7               	movwf	tblptrh,c
  8896  011612                     	endif
  8897  011612                     	if	1	;There are 3 active tblptr bytes
  8898  011612  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8899  011614  6EF8               	movwf	tblptru,c
  8900  011616                     	endif
  8901  011616  0009               	tblrd		*+
  8902  011618  CFF5 F01F          	movff	tablat,Init_vendmem@chanlinkbits
  8903  01161C  000A               	tblrd		*-
  8904  01161E  CFF5 F020          	movff	tablat,Init_vendmem@chanlinkbits+1
  8905                           
  8906                           ;vend.c: 15: uint8_t *chanlink = ((uint8_t*) &chanlink1);
  8907  011622  0E03               	movlw	3
  8908  011624  6E21               	movwf	Init_vendmem@chanlink,c
  8909  011626  0E00               	movlw	0
  8910  011628  6E22               	movwf	Init_vendmem@chanlink+1,c
  8911                           
  8912                           ;vend.c: 16: char i = 0;
  8913  01162A  0E00               	movlw	0
  8914  01162C  6E23               	movwf	Init_vendmem@i,c
  8915                           
  8916                           ;vend.c: 17: while(i < 8)
  8917  01162E  D012               	goto	l1974
  8918  011630                     
  8919                           ;vend.c: 18: {
  8920                           ;vend.c: 19: chanlink[i] = DATAEE_ReadByte(chanlinkbits + i);
  8921  011630  5023               	movf	Init_vendmem@i,w,c
  8922  011632  0D01               	mullw	1
  8923  011634  50F3               	movf	prodl,w,c
  8924  011636  2421               	addwf	Init_vendmem@chanlink,w,c
  8925  011638  6ED9               	movwf	fsr2l,c
  8926  01163A  50F4               	movf	prodh,w,c
  8927  01163C  2022               	addwfc	Init_vendmem@chanlink+1,w,c
  8928  01163E  6EDA               	movwf	fsr2h,c
  8929  011640  5023               	movf	Init_vendmem@i,w,c
  8930  011642  241F               	addwf	Init_vendmem@chanlinkbits,w,c
  8931  011644  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  8932  011646  0E00               	movlw	0
  8933  011648  2020               	addwfc	Init_vendmem@chanlinkbits+1,w,c
  8934  01164A  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  8935  01164C  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  8936  011650  6EDF               	movwf	indf2,c
  8937                           
  8938                           ;vend.c: 20: i++;
  8939  011652  2A23               	incf	Init_vendmem@i,f,c
  8940  011654                     l1974:
  8941  011654  0E07               	movlw	7
  8942  011656  6423               	cpfsgt	Init_vendmem@i,c
  8943  011658  D7EB               	goto	l1975
  8944  01165A  0012               	return	
  8945  01165C                     __end_of_Init_vendmem:
  8946                           	opt stack 0
  8947                           tblptru	equ	0xFF8
  8948                           tblptrh	equ	0xFF7
  8949                           tblptrl	equ	0xFF6
  8950                           tablat	equ	0xFF5
  8951                           prodh	equ	0xFF4
  8952                           prodl	equ	0xFF3
  8953                           postinc0	equ	0xFEE
  8954                           wreg	equ	0xFE8
  8955                           indf2	equ	0xFDF
  8956                           fsr2h	equ	0xFDA
  8957                           fsr2l	equ	0xFD9
  8958                           status	equ	0xFD8
  8959                           
  8960 ;; *************** function _Chan_link *****************
  8961 ;; Defined at:
  8962 ;;		line 441 in file "vend.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8979 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8980 ;;Total ram usage:        2 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:   10
  8983 ;; This function calls:
  8984 ;;		_Link_chan
  8985 ;;		_Read_Service
  8986 ;;		_butindb
  8987 ;;		_get_channel
  8988 ;;		_lcd_string
  8989 ;; This function is called by:
  8990 ;;		_Vend_setup
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           	psect	text46
  8995  011794                     __ptext46:
  8996                           	opt stack 0
  8997  011794                     _Chan_link:
  8998                           	opt stack 18
  8999                           
  9000                           ;vend.c: 443: lcd_string(chanlinkm, line1);
  9001                           
  9002                           ;incstack = 0
  9003  011794  0EBC               	movlw	low _chanlinkm
  9004  011796  6E24               	movwf	lcd_string@lcdstring,c
  9005  011798  0EFD               	movlw	high _chanlinkm
  9006  01179A  6E25               	movwf	lcd_string@lcdstring+1,c
  9007  01179C  0E8F               	movlw	low _line1
  9008  01179E  6EF6               	movwf	tblptrl,c
  9009  0117A0                     	if	1	;There is more than 1 active tblptr byte
  9010  0117A0  0EFC               	movlw	high _line1
  9011  0117A2  6EF7               	movwf	tblptrh,c
  9012  0117A4                     	endif
  9013  0117A4                     	if	1	;There are 3 active tblptr bytes
  9014  0117A4  0E00               	movlw	low (_line1 shr (0+16))
  9015  0117A6  6EF8               	movwf	tblptru,c
  9016  0117A8                     	endif
  9017  0117A8  0008               	tblrd		*
  9018  0117AA  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9019  0117AE  EC75  F087         	call	_lcd_string	;wreg free
  9020                           
  9021                           ;vend.c: 444: venflags.chanlink = 1;
  9022  0117B2  862D               	bsf	_venflags+1,3,c
  9023                           
  9024                           ;vend.c: 445: while(venflags.chanlink)
  9025  0117B4  D01D               	goto	l2130
  9026  0117B6                     
  9027                           ;vend.c: 446: {
  9028                           ;vend.c: 447: buttons = butindb();
  9029  0117B6  EC2B  F08F         	call	_butindb	;wreg free
  9030  0117BA  6E39               	movwf	_buttons,c	;volatile
  9031                           
  9032                           ;vend.c: 448: if(buttons != 0x00)
  9033  0117BC  5039               	movf	_buttons,w,c	;volatile
  9034  0117BE  B4D8               	btfsc	status,2,c
  9035  0117C0  D012               	goto	l2129
  9036                           
  9037                           ;vend.c: 449: {
  9038                           ;vend.c: 450: Link_chan(get_channel(buttons));
  9039  0117C2  5039               	movf	_buttons,w,c	;volatile
  9040  0117C4  ECF4  F08F         	call	_get_channel
  9041  0117C8  EC07  F086         	call	_Link_chan
  9042                           
  9043                           ;vend.c: 451: _delay((unsigned long)((1000)*(12000000/4000.0)));
  9044  0117CC  0E10               	movlw	16
  9045  0117CE  0100               	movlb	0	; () banked
  9046  0117D0  6FA2               	movwf	(??_Chan_link+1)& (0+255),b
  9047  0117D2  0E39               	movlw	57
  9048  0117D4  6FA1               	movwf	??_Chan_link& (0+255),b
  9049  0117D6  0E0D               	movlw	13
  9050  0117D8                     u3567:
  9051  0117D8  2EE8               	decfsz	wreg,f,c
  9052  0117DA  D7FE               	bra	u3567
  9053  0117DC  2FA1               	decfsz	??_Chan_link& (0+255),f,b
  9054  0117DE  D7FC               	bra	u3567
  9055  0117E0  2FA2               	decfsz	(??_Chan_link+1)& (0+255),f,b
  9056  0117E2  D7FA               	bra	u3567
  9057  0117E4  D000               	nop2	
  9058  0117E6                     l2129:
  9059                           
  9060                           ;vend.c: 452: }
  9061                           ;vend.c: 453: if(Read_Service() == 0x00)
  9062  0117E6  EC80  F090         	call	_Read_Service	;wreg free
  9063  0117EA  0900               	iorlw	0
  9064  0117EC  B4D8               	btfsc	status,2,c
  9065                           
  9066                           ;vend.c: 454: {
  9067                           ;vend.c: 455: venflags.chanlink = 0;
  9068  0117EE  962D               	bcf	_venflags+1,3,c
  9069  0117F0                     l2130:
  9070  0117F0  A62D               	btfss	_venflags+1,3,c
  9071  0117F2  0012               	return	
  9072  0117F4  D7E0               	goto	l2128
  9073  0117F6                     __end_of_Chan_link:
  9074                           	opt stack 0
  9075                           tblptru	equ	0xFF8
  9076                           tblptrh	equ	0xFF7
  9077                           tblptrl	equ	0xFF6
  9078                           tablat	equ	0xFF5
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           postinc0	equ	0xFEE
  9082                           wreg	equ	0xFE8
  9083                           indf2	equ	0xFDF
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function _get_channel *****************
  9089 ;; Defined at:
  9090 ;;		line 316 in file "vend.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  butons          1    wreg     unsigned char 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  butons          1   19[COMRAM] unsigned char 
  9095 ;;  channel         1   18[COMRAM] unsigned char 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      unsigned char 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9109 ;;Total ram usage:        2 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; Hardware stack levels required when called:    2
  9112 ;; This function calls:
  9113 ;;		Nothing
  9114 ;; This function is called by:
  9115 ;;		_set_price
  9116 ;;		_Vend_settime
  9117 ;;		_Chan_link
  9118 ;;		_Sens_off
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           	psect	text47
  9123  011FE8                     __ptext47:
  9124                           	opt stack 0
  9125  011FE8                     _get_channel:
  9126                           	opt stack 25
  9127                           
  9128                           ;incstack = 0
  9129                           ;get_channel@butons stored from wreg
  9130  011FE8  6E1E               	movwf	get_channel@butons,c
  9131                           
  9132                           ;vend.c: 319: uint8_t channel = 0x00;
  9133  011FEA  0E00               	movlw	0
  9134  011FEC  6E1D               	movwf	get_channel@channel,c
  9135                           
  9136                           ;vend.c: 320: while(butons != 0)
  9137  011FEE  D004               	goto	l2078
  9138  011FF0                     
  9139                           ;vend.c: 321: {
  9140                           ;vend.c: 322: channel++;
  9141  011FF0  2A1D               	incf	get_channel@channel,f,c
  9142                           
  9143                           ;vend.c: 323: butons = butons >> 1;
  9144  011FF2  90D8               	bcf	status,0,c
  9145  011FF4  301E               	rrcf	get_channel@butons,w,c
  9146  011FF6  6E1E               	movwf	get_channel@butons,c
  9147  011FF8                     l2078:
  9148  011FF8  501E               	movf	get_channel@butons,w,c
  9149  011FFA  A4D8               	btfss	status,2,c
  9150  011FFC  D7F9               	goto	l2079
  9151                           
  9152                           ;vend.c: 324: }
  9153                           ;vend.c: 325: channel--;
  9154  011FFE  061D               	decf	get_channel@channel,f,c
  9155                           
  9156                           ;vend.c: 326: return channel;
  9157  012000  501D               	movf	get_channel@channel,w,c
  9158  012002  0012               	return	
  9159  012004                     __end_of_get_channel:
  9160                           	opt stack 0
  9161                           tblptru	equ	0xFF8
  9162                           tblptrh	equ	0xFF7
  9163                           tblptrl	equ	0xFF6
  9164                           tablat	equ	0xFF5
  9165                           prodh	equ	0xFF4
  9166                           prodl	equ	0xFF3
  9167                           postinc0	equ	0xFEE
  9168                           wreg	equ	0xFE8
  9169                           indf2	equ	0xFDF
  9170                           fsr2h	equ	0xFDA
  9171                           fsr2l	equ	0xFD9
  9172                           status	equ	0xFD8
  9173                           
  9174 ;; *************** function _Link_chan *****************
  9175 ;; Defined at:
  9176 ;;		line 462 in file "vend.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  channel         1    wreg     unsigned char 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  channel         1    3[BANK0 ] unsigned char 
  9181 ;;  linkflags       1    4[BANK0 ] unsigned char 
  9182 ;;  chanbit         1    2[BANK0 ] unsigned char 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;Total ram usage:        5 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    9
  9199 ;; This function calls:
  9200 ;;		_DATAEE_ReadByte
  9201 ;;		_DATAEE_WriteByte
  9202 ;;		_Read_Service
  9203 ;;		_butindb
  9204 ;;		_displ_lflags
  9205 ;; This function is called by:
  9206 ;;		_Chan_link
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text48
  9211  010C0E                     __ptext48:
  9212                           	opt stack 0
  9213  010C0E                     _Link_chan:
  9214                           	opt stack 18
  9215                           
  9216                           ;incstack = 0
  9217                           ;Link_chan@channel stored from wreg
  9218  010C0E  0100               	movlb	0	; () banked
  9219  010C10  6F9F               	movwf	Link_chan@channel& (0+255),b
  9220                           
  9221                           ;vend.c: 464: venflags.linkchan = 1;
  9222  010C12  802E               	bsf	_venflags+2,0,c
  9223                           
  9224                           ;vend.c: 465: uint8_t chanbit = buttons;
  9225  010C14  C039  F09E         	movff	_buttons,Link_chan@chanbit	;volatile
  9226                           
  9227                           ;vend.c: 466: uint8_t linkflags = DATAEE_ReadByte(chan1linkbits + channel);
  9228  010C18  0E4D               	movlw	low _chan1linkbits
  9229  010C1A  6EF6               	movwf	tblptrl,c
  9230  010C1C                     	if	1	;There is more than 1 active tblptr byte
  9231  010C1C  0EFC               	movlw	high _chan1linkbits
  9232  010C1E  6EF7               	movwf	tblptrh,c
  9233  010C20                     	endif
  9234  010C20                     	if	1	;There are 3 active tblptr bytes
  9235  010C20  0E00               	movlw	low (_chan1linkbits shr (0+16))
  9236  010C22  6EF8               	movwf	tblptru,c
  9237  010C24                     	endif
  9238  010C24  0009               	tblrd		*+
  9239  010C26  CFF5 F09C          	movff	tablat,??_Link_chan
  9240  010C2A  0009               	tblrd		*+
  9241  010C2C  CFF5 F09D          	movff	tablat,??_Link_chan+1
  9242  010C30  0100               	movlb	0	; () banked
  9243  010C32  519F               	movf	Link_chan@channel& (0+255),w,b
  9244  010C34  259C               	addwf	??_Link_chan& (0+255),w,b
  9245  010C36  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  9246  010C38  0E00               	movlw	0
  9247  010C3A  219D               	addwfc	(??_Link_chan+1)& (0+255),w,b
  9248  010C3C  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  9249  010C3E  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
  9250  010C42  0100               	movlb	0	; () banked
  9251  010C44  6FA0               	movwf	Link_chan@linkflags& (0+255),b
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;vend.c: 467: displ_lflags(channel, linkflags);
  9255  010C46  C0A0  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
  9256  010C4A  519F               	movf	Link_chan@channel& (0+255),w,b
  9257  010C4C  ECFB  F088         	call	_displ_lflags
  9258                           
  9259                           ;vend.c: 468: while(venflags.linkchan)
  9260  010C50  D038               	goto	u2970
  9261  010C52                     
  9262                           ;vend.c: 469: {
  9263                           ;vend.c: 470: buttons = butindb();
  9264  010C52  EC2B  F08F         	call	_butindb	;wreg free
  9265  010C56  6E39               	movwf	_buttons,c	;volatile
  9266                           
  9267                           ;vend.c: 471: if(buttons != 0x00)
  9268  010C58  5039               	movf	_buttons,w,c	;volatile
  9269  010C5A  B4D8               	btfsc	status,2,c
  9270  010C5C  D02D               	goto	l2140
  9271                           
  9272                           ;vend.c: 472: {
  9273                           ;vend.c: 473: if(buttons && linkflags)
  9274  010C5E  5039               	movf	_buttons,w,c	;volatile
  9275  010C60  B4D8               	btfsc	status,2,c
  9276  010C62  D008               	goto	l2138
  9277  010C64  0100               	movlb	0	; () banked
  9278  010C66  51A0               	movf	Link_chan@linkflags& (0+255),w,b
  9279  010C68  B4D8               	btfsc	status,2,c
  9280  010C6A  D004               	goto	l2138
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;vend.c: 474: {
  9284                           ;vend.c: 476: linkflags = linkflags & ~buttons;
  9285  010C6C  5039               	movf	_buttons,w,c	;volatile
  9286  010C6E  0AFF               	xorlw	255
  9287  010C70  15A0               	andwf	Link_chan@linkflags& (0+255),w,b
  9288  010C72  D003               	goto	L13
  9289  010C74                     l2138:
  9290                           
  9291                           ;vend.c: 478: else
  9292                           ;vend.c: 479: {
  9293                           ;vend.c: 481: linkflags = linkflags | buttons;
  9294                           
  9295                           ; BSR set to: 0
  9296  010C74  0100               	movlb	0	; () banked
  9297  010C76  51A0               	movf	Link_chan@linkflags& (0+255),w,b
  9298  010C78  1039               	iorwf	_buttons,w,c	;volatile
  9299  010C7A                     L13:
  9300  010C7A  6FA0               	movwf	Link_chan@linkflags& (0+255),b
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;vend.c: 482: }
  9304                           ;vend.c: 483: DATAEE_WriteByte(chan1linkbits + channel, linkflags);
  9305                           
  9306                           ; BSR set to: 0
  9307  010C7C  0E4D               	movlw	low _chan1linkbits
  9308  010C7E  6EF6               	movwf	tblptrl,c
  9309  010C80                     	if	1	;There is more than 1 active tblptr byte
  9310  010C80  0EFC               	movlw	high _chan1linkbits
  9311  010C82  6EF7               	movwf	tblptrh,c
  9312  010C84                     	endif
  9313  010C84                     	if	1	;There are 3 active tblptr bytes
  9314  010C84  0E00               	movlw	low (_chan1linkbits shr (0+16))
  9315  010C86  6EF8               	movwf	tblptru,c
  9316  010C88                     	endif
  9317  010C88  0009               	tblrd		*+
  9318  010C8A  CFF5 F09C          	movff	tablat,??_Link_chan
  9319  010C8E  0009               	tblrd		*+
  9320  010C90  CFF5 F09D          	movff	tablat,??_Link_chan+1
  9321  010C94  519F               	movf	Link_chan@channel& (0+255),w,b
  9322  010C96  259C               	addwf	??_Link_chan& (0+255),w,b
  9323  010C98  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  9324  010C9A  0E00               	movlw	0
  9325  010C9C  219D               	addwfc	(??_Link_chan+1)& (0+255),w,b
  9326  010C9E  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  9327  010CA0  C0A0  F01F         	movff	Link_chan@linkflags,DATAEE_WriteByte@bData
  9328  010CA4  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  9329                           
  9330                           ;vend.c: 484: displ_lflags(channel, linkflags);
  9331  010CA8  C0A0  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
  9332  010CAC  0100               	movlb	0	; () banked
  9333  010CAE  519F               	movf	Link_chan@channel& (0+255),w,b
  9334  010CB0  ECFB  F088         	call	_displ_lflags
  9335                           
  9336                           ;vend.c: 485: }
  9337                           ;vend.c: 486: while(Read_Service() == 0x00)
  9338  010CB4  D001               	goto	l2140
  9339  010CB6                     l2141:
  9340                           
  9341                           ;vend.c: 487: {
  9342                           ;vend.c: 488: venflags.linkchan = 0;
  9343  010CB6  902E               	bcf	_venflags+2,0,c
  9344  010CB8                     l2140:
  9345  010CB8  EC80  F090         	call	_Read_Service	;wreg free
  9346  010CBC  0900               	iorlw	0
  9347  010CBE  B4D8               	btfsc	status,2,c
  9348  010CC0  D7FA               	goto	l2141
  9349  010CC2                     u2970:
  9350  010CC2  A02E               	btfss	_venflags+2,0,c
  9351  010CC4  0012               	return	
  9352  010CC6  D7C5               	goto	l2136
  9353  010CC8                     __end_of_Link_chan:
  9354                           	opt stack 0
  9355                           tblptru	equ	0xFF8
  9356                           tblptrh	equ	0xFF7
  9357                           tblptrl	equ	0xFF6
  9358                           tablat	equ	0xFF5
  9359                           prodh	equ	0xFF4
  9360                           prodl	equ	0xFF3
  9361                           postinc0	equ	0xFEE
  9362                           wreg	equ	0xFE8
  9363                           indf2	equ	0xFDF
  9364                           fsr2h	equ	0xFDA
  9365                           fsr2l	equ	0xFD9
  9366                           status	equ	0xFD8
  9367                           
  9368 ;; *************** function _displ_lflags *****************
  9369 ;; Defined at:
  9370 ;;		line 59 in file "lcd.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  chanel          1    wreg     unsigned char 
  9373 ;;  linkflgs        1   30[COMRAM] unsigned char 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  chanel          1   31[COMRAM] unsigned char 
  9376 ;;  lchan           1   32[COMRAM] unsigned char 
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      void 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9386 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9389 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;Total ram usage:        3 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:    8
  9393 ;; This function calls:
  9394 ;;		_lcd_dispadd
  9395 ;;		_lcd_string
  9396 ;;		_lcd_writeC
  9397 ;; This function is called by:
  9398 ;;		_Link_chan
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           	psect	text49
  9403  0111F6                     __ptext49:
  9404                           	opt stack 0
  9405  0111F6                     _displ_lflags:
  9406                           	opt stack 18
  9407                           
  9408                           ;incstack = 0
  9409                           ;displ_lflags@chanel stored from wreg
  9410  0111F6  6E2A               	movwf	displ_lflags@chanel,c
  9411                           
  9412                           ;lcd.c: 61: lcd_string(chanmsg, line1);
  9413  0111F8  0E8C               	movlw	low _chanmsg
  9414  0111FA  6E24               	movwf	lcd_string@lcdstring,c
  9415  0111FC  0EFF               	movlw	high _chanmsg
  9416  0111FE  6E25               	movwf	lcd_string@lcdstring+1,c
  9417  011200  0E8F               	movlw	low _line1
  9418  011202  6EF6               	movwf	tblptrl,c
  9419  011204                     	if	1	;There is more than 1 active tblptr byte
  9420  011204  0EFC               	movlw	high _line1
  9421  011206  6EF7               	movwf	tblptrh,c
  9422  011208                     	endif
  9423  011208                     	if	1	;There are 3 active tblptr bytes
  9424  011208  0E00               	movlw	low (_line1 shr (0+16))
  9425  01120A  6EF8               	movwf	tblptru,c
  9426  01120C                     	endif
  9427  01120C  0008               	tblrd		*
  9428  01120E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9429  011212  EC75  F087         	call	_lcd_string	;wreg free
  9430                           
  9431                           ;lcd.c: 62: lcd_writeC(chanel++ | 0x30);
  9432  011216  502A               	movf	displ_lflags@chanel,w,c
  9433  011218  0930               	iorlw	48
  9434  01121A  EC97  F08B         	call	_lcd_writeC
  9435  01121E  2A2A               	incf	displ_lflags@chanel,f,c
  9436                           
  9437                           ;lcd.c: 63: uint8_t lchan = 1;
  9438  011220  0E01               	movlw	1
  9439  011222  6E2B               	movwf	displ_lflags@lchan,c
  9440                           
  9441                           ;lcd.c: 65: lcd_string(linkmsg, line2);
  9442  011224  0E98               	movlw	low _linkmsg
  9443  011226  6E24               	movwf	lcd_string@lcdstring,c
  9444  011228  0EFF               	movlw	high _linkmsg
  9445  01122A  6E25               	movwf	lcd_string@lcdstring+1,c
  9446  01122C  0E8E               	movlw	low _line2
  9447  01122E  6EF6               	movwf	tblptrl,c
  9448  011230                     	if	1	;There is more than 1 active tblptr byte
  9449  011230  0EFC               	movlw	high _line2
  9450  011232  6EF7               	movwf	tblptrh,c
  9451  011234                     	endif
  9452  011234                     	if	1	;There are 3 active tblptr bytes
  9453  011234  0E00               	movlw	low (_line2 shr (0+16))
  9454  011236  6EF8               	movwf	tblptru,c
  9455  011238                     	endif
  9456  011238  0008               	tblrd		*
  9457  01123A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9458  01123E  EC75  F087         	call	_lcd_string	;wreg free
  9459                           
  9460                           ;lcd.c: 66: lcd_dispadd(line3);
  9461  011242  0E8D               	movlw	low _line3
  9462  011244  6EF6               	movwf	tblptrl,c
  9463  011246                     	if	1	;There is more than 1 active tblptr byte
  9464  011246  0EFC               	movlw	high _line3
  9465  011248  6EF7               	movwf	tblptrh,c
  9466  01124A                     	endif
  9467  01124A                     	if	1	;There are 3 active tblptr bytes
  9468  01124A  0E00               	movlw	low (_line3 shr (0+16))
  9469  01124C  6EF8               	movwf	tblptru,c
  9470  01124E                     	endif
  9471  01124E  0008               	tblrd		*
  9472  011250  50F5               	movf	tablat,w,c
  9473  011252  EC1E  F090         	call	_lcd_dispadd
  9474                           
  9475                           ;lcd.c: 67: while(lchan < 0x09)
  9476  011256  D010               	goto	l1446
  9477  011258                     l1447:
  9478                           
  9479                           ;lcd.c: 68: {
  9480                           ;lcd.c: 69: if(linkflgs & 0x01)
  9481  011258  A029               	btfss	displ_lflags@linkflgs,0,c
  9482  01125A  D00A               	goto	l1448
  9483                           
  9484                           ;lcd.c: 70: {
  9485                           ;lcd.c: 71: lcd_writeC(lchan | 0x30);
  9486  01125C  502B               	movf	displ_lflags@lchan,w,c
  9487  01125E  0930               	iorlw	48
  9488  011260  EC97  F08B         	call	_lcd_writeC
  9489                           
  9490                           ;lcd.c: 72: lcd_writeC(',');
  9491  011264  0E2C               	movlw	44
  9492  011266  EC97  F08B         	call	_lcd_writeC
  9493                           
  9494                           ;lcd.c: 73: lcd_writeC(' ');
  9495  01126A  0E20               	movlw	32
  9496  01126C  EC97  F08B         	call	_lcd_writeC
  9497  011270                     l1448:
  9498                           
  9499                           ;lcd.c: 74: }
  9500                           ;lcd.c: 75: lchan++;
  9501  011270  2A2B               	incf	displ_lflags@lchan,f,c
  9502                           
  9503                           ;lcd.c: 76: linkflgs = linkflgs >> 1;
  9504  011272  90D8               	bcf	status,0,c
  9505  011274  3029               	rrcf	displ_lflags@linkflgs,w,c
  9506  011276  6E29               	movwf	displ_lflags@linkflgs,c
  9507  011278                     l1446:
  9508  011278  0E08               	movlw	8
  9509  01127A  642B               	cpfsgt	displ_lflags@lchan,c
  9510  01127C  D7ED               	goto	l1447
  9511  01127E  0012               	return	
  9512  011280                     __end_of_displ_lflags:
  9513                           	opt stack 0
  9514                           tblptru	equ	0xFF8
  9515                           tblptrh	equ	0xFF7
  9516                           tblptrl	equ	0xFF6
  9517                           tablat	equ	0xFF5
  9518                           prodh	equ	0xFF4
  9519                           prodl	equ	0xFF3
  9520                           postinc0	equ	0xFEE
  9521                           wreg	equ	0xFE8
  9522                           indf2	equ	0xFDF
  9523                           fsr2h	equ	0xFDA
  9524                           fsr2l	equ	0xFD9
  9525                           status	equ	0xFD8
  9526                           
  9527 ;; *************** function _Read_Service *****************
  9528 ;; Defined at:
  9529 ;;		line 246 in file "vend.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  senval          1   18[COMRAM] unsigned char 
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      unsigned char 
  9536 ;; Registers used:
  9537 ;;		wreg, status,2
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;Total ram usage:        1 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    2
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_price_set
  9554 ;;		_Vend_settime
  9555 ;;		_Chan_link
  9556 ;;		_Link_chan
  9557 ;;		_Sens_off
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text50
  9562  012100                     __ptext50:
  9563                           	opt stack 0
  9564  012100                     _Read_Service:
  9565                           	opt stack 26
  9566                           
  9567                           ;vend.c: 248: DAC1CON1 = 0x00;
  9568                           
  9569                           ;incstack = 0
  9570  012100  0E00               	movlw	0
  9571  012102  010F               	movlb	15	; () banked
  9572  012104  6F34               	movwf	52,b	;volatile
  9573                           
  9574                           ; BSR set to: 15
  9575                           ;vend.c: 249: uint8_t senval = CMOUT;
  9576  012106  CF3D F01D          	movff	3901,Read_Service@senval	;volatile
  9577                           
  9578                           ; BSR set to: 15
  9579                           ;vend.c: 250: DAC1CON1 = sensorval;
  9580  01210A  C037  FF34         	movff	_sensorval,3892	;volatile
  9581                           
  9582                           ;vend.c: 251: return senval;
  9583  01210E  501D               	movf	Read_Service@senval,w,c
  9584  012110  0012               	return	
  9585  012112                     __end_of_Read_Service:
  9586                           	opt stack 0
  9587                           tblptru	equ	0xFF8
  9588                           tblptrh	equ	0xFF7
  9589                           tblptrl	equ	0xFF6
  9590                           tablat	equ	0xFF5
  9591                           prodh	equ	0xFF4
  9592                           prodl	equ	0xFF3
  9593                           postinc0	equ	0xFEE
  9594                           wreg	equ	0xFE8
  9595                           indf2	equ	0xFDF
  9596                           fsr2h	equ	0xFDA
  9597                           fsr2l	equ	0xFD9
  9598                           status	equ	0xFD8
  9599                           
  9600 ;; *************** function _Sensor_set *****************
  9601 ;; Defined at:
  9602 ;;		line 254 in file "vend.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  dacpos          1   12[BANK0 ] unsigned char 
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;Total ram usage:        1 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:    9
  9623 ;; This function calls:
  9624 ;;		_butindb
  9625 ;;		_displ_sens
  9626 ;;		_lcd_string
  9627 ;; This function is called by:
  9628 ;;		_enter_service
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           	psect	text51
  9633  010812                     __ptext51:
  9634                           	opt stack 0
  9635  010812                     _Sensor_set:
  9636                           	opt stack 20
  9637                           
  9638                           ;vend.c: 256: mdbflags.endis = 1;
  9639                           
  9640                           ; BSR set to: 15
  9641                           ;incstack = 0
  9642  010812  8C3E               	bsf	_mdbflags,6,c
  9643                           
  9644                           ;vend.c: 258: lcd_string(sensmsg, line1);
  9645  010814  0EA4               	movlw	low _sensmsg
  9646  010816  6E24               	movwf	lcd_string@lcdstring,c
  9647  010818  0EFF               	movlw	high _sensmsg
  9648  01081A  6E25               	movwf	lcd_string@lcdstring+1,c
  9649  01081C  0E8F               	movlw	low _line1
  9650  01081E  6EF6               	movwf	tblptrl,c
  9651  010820                     	if	1	;There is more than 1 active tblptr byte
  9652  010820  0EFC               	movlw	high _line1
  9653  010822  6EF7               	movwf	tblptrh,c
  9654  010824                     	endif
  9655  010824                     	if	1	;There are 3 active tblptr bytes
  9656  010824  0E00               	movlw	low (_line1 shr (0+16))
  9657  010826  6EF8               	movwf	tblptru,c
  9658  010828                     	endif
  9659  010828  0008               	tblrd		*
  9660  01082A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9661  01082E  EC75  F087         	call	_lcd_string	;wreg free
  9662                           
  9663                           ;vend.c: 260: senspos = bflag + 2;
  9664  010832  5046               	movf	_bflag,w,c
  9665  010834  0F02               	addlw	2
  9666  010836  6E36               	movwf	_senspos,c	;volatile
  9667                           
  9668                           ;vend.c: 262: lcd_string(dacmsg, line2);
  9669  010838  0E72               	movlw	low _dacmsg
  9670  01083A  6E24               	movwf	lcd_string@lcdstring,c
  9671  01083C  0EFF               	movlw	high _dacmsg
  9672  01083E  6E25               	movwf	lcd_string@lcdstring+1,c
  9673  010840  0E8E               	movlw	low _line2
  9674  010842  6EF6               	movwf	tblptrl,c
  9675  010844                     	if	1	;There is more than 1 active tblptr byte
  9676  010844  0EFC               	movlw	high _line2
  9677  010846  6EF7               	movwf	tblptrh,c
  9678  010848                     	endif
  9679  010848                     	if	1	;There are 3 active tblptr bytes
  9680  010848  0E00               	movlw	low (_line2 shr (0+16))
  9681  01084A  6EF8               	movwf	tblptru,c
  9682  01084C                     	endif
  9683  01084C  0008               	tblrd		*
  9684  01084E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9685  010852  EC75  F087         	call	_lcd_string	;wreg free
  9686                           
  9687                           ;vend.c: 264: uint8_t dacpos = bflag + 2;
  9688  010856  5046               	movf	_bflag,w,c
  9689  010858  0F02               	addlw	2
  9690  01085A  0100               	movlb	0	; () banked
  9691  01085C  6FA8               	movwf	Sensor_set@dacpos& (0+255),b
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;vend.c: 265: displ_sens(senspos, dacpos);
  9695  01085E  C0A8  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9696  010862  5036               	movf	_senspos,w,c	;volatile
  9697  010864  ECBC  F08A         	call	_displ_sens
  9698                           
  9699                           ;vend.c: 266: while(mdbflags.endis)
  9700  010868  D03D               	goto	l2062
  9701  01086A                     
  9702                           ;vend.c: 267: {
  9703                           ;vend.c: 268: buttons = butindb();
  9704  01086A  EC2B  F08F         	call	_butindb	;wreg free
  9705  01086E  6E39               	movwf	_buttons,c	;volatile
  9706                           
  9707                           ;vend.c: 269: switch(buttons)
  9708  010870  D027               	goto	l2057
  9709  010872  5037               	movf	_sensorval,w,c	;volatile
  9710  010874  0B1F               	andlw	31
  9711  010876  010F               	movlb	15	; () banked
  9712  010878  6F34               	movwf	52,b	;volatile
  9713                           
  9714                           ; BSR set to: 15
  9715  01087A  2A37               	incf	_sensorval,f,c	;volatile
  9716                           
  9717                           ; BSR set to: 15
  9718                           ;vend.c: 272: displ_sens(senspos, dacpos);
  9719  01087C  C0A8  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9720  010880  5036               	movf	_senspos,w,c	;volatile
  9721  010882  ECBC  F08A         	call	_displ_sens
  9722                           
  9723                           ;vend.c: 273: break;
  9724  010886  D026               	goto	l2059
  9725  010888  5037               	movf	_sensorval,w,c	;volatile
  9726  01088A  0B1F               	andlw	31
  9727  01088C  010F               	movlb	15	; () banked
  9728  01088E  6F34               	movwf	52,b	;volatile
  9729                           
  9730                           ; BSR set to: 15
  9731  010890  0637               	decf	_sensorval,f,c	;volatile
  9732                           
  9733                           ; BSR set to: 15
  9734                           ;vend.c: 275: displ_sens(senspos, dacpos);
  9735  010892  C0A8  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9736  010896  5036               	movf	_senspos,w,c	;volatile
  9737  010898  ECBC  F08A         	call	_displ_sens
  9738                           
  9739                           ;vend.c: 276: break;
  9740  01089C  D01B               	goto	l2059
  9741  01089E                     l2061:
  9742  01089E  9C3E               	bcf	_mdbflags,6,c
  9743                           
  9744                           ;vend.c: 278: lcd_string(servmsg, line1);
  9745  0108A0  0E9E               	movlw	low _servmsg
  9746  0108A2  6E24               	movwf	lcd_string@lcdstring,c
  9747  0108A4  0EFC               	movlw	high _servmsg
  9748  0108A6  6E25               	movwf	lcd_string@lcdstring+1,c
  9749  0108A8  0E8F               	movlw	low _line1
  9750  0108AA  6EF6               	movwf	tblptrl,c
  9751  0108AC                     	if	1	;There is more than 1 active tblptr byte
  9752  0108AC  0EFC               	movlw	high _line1
  9753  0108AE  6EF7               	movwf	tblptrh,c
  9754  0108B0                     	endif
  9755  0108B0                     	if	1	;There are 3 active tblptr bytes
  9756  0108B0  0E00               	movlw	low (_line1 shr (0+16))
  9757  0108B2  6EF8               	movwf	tblptru,c
  9758  0108B4                     	endif
  9759  0108B4  0008               	tblrd		*
  9760  0108B6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9761  0108BA  EC75  F087         	call	_lcd_string	;wreg free
  9762                           
  9763                           ;vend.c: 280: }
  9764                           
  9765                           ;vend.c: 279: break;
  9766  0108BE  D00A               	goto	l2059
  9767  0108C0                     l2057:
  9768  0108C0  5039               	movf	_buttons,w,c	;volatile
  9769                           
  9770                           ; Switch size 1, requested type "space"
  9771                           ; Number of cases is 3, Range of values is 1 to 128
  9772                           ; switch strategies available:
  9773                           ; Name         Instructions Cycles
  9774                           ; simple_byte           10     6 (average)
  9775                           ;	Chosen strategy is simple_byte
  9776  0108C2  0A01               	xorlw	1	; case 1
  9777  0108C4  B4D8               	btfsc	status,2,c
  9778  0108C6  D7D5               	goto	l2058
  9779  0108C8  0A03               	xorlw	3	; case 2
  9780  0108CA  B4D8               	btfsc	status,2,c
  9781  0108CC  D7DD               	goto	l2060
  9782  0108CE  0A82               	xorlw	130	; case 128
  9783  0108D0  B4D8               	btfsc	status,2,c
  9784  0108D2  D7E5               	goto	l2061
  9785  0108D4                     l2059:
  9786                           
  9787                           ;vend.c: 281: if(PIR4bits.TMR3IF)
  9788  0108D4  010E               	movlb	14	; () banked
  9789  0108D6  A5CE               	btfss	206,2,b	;volatile
  9790  0108D8  D005               	goto	l2062
  9791                           
  9792                           ; BSR set to: 14
  9793                           ;vend.c: 282: {
  9794                           ;vend.c: 283: displ_sens(senspos, dacpos);
  9795  0108DA  C0A8  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9796  0108DE  5036               	movf	_senspos,w,c	;volatile
  9797  0108E0  ECBC  F08A         	call	_displ_sens
  9798  0108E4                     l2062:
  9799  0108E4  AC3E               	btfss	_mdbflags,6,c
  9800  0108E6  0012               	return	
  9801  0108E8  D7C0               	goto	l2056
  9802  0108EA                     __end_of_Sensor_set:
  9803                           	opt stack 0
  9804                           tblptru	equ	0xFF8
  9805                           tblptrh	equ	0xFF7
  9806                           tblptrl	equ	0xFF6
  9807                           tablat	equ	0xFF5
  9808                           prodh	equ	0xFF4
  9809                           prodl	equ	0xFF3
  9810                           postinc0	equ	0xFEE
  9811                           wreg	equ	0xFE8
  9812                           indf2	equ	0xFDF
  9813                           fsr2h	equ	0xFDA
  9814                           fsr2l	equ	0xFD9
  9815                           status	equ	0xFD8
  9816                           
  9817 ;; *************** function _displ_sens *****************
  9818 ;; Defined at:
  9819 ;;		line 42 in file "lcd.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  smsgpos         1    wreg     unsigned char 
  9822 ;;  dmsgpos         1   31[COMRAM] unsigned char 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  smsgpos         1   32[COMRAM] unsigned char 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  1    wreg      void 
  9827 ;; Registers used:
  9828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9834 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9838 ;;Total ram usage:        2 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    8
  9841 ;; This function calls:
  9842 ;;		_CMP1_GetOutputStatus
  9843 ;;		_DATAEE_WriteByte
  9844 ;;		_displ_hex
  9845 ;;		_lcd_dispadd
  9846 ;;		_lcd_string
  9847 ;; This function is called by:
  9848 ;;		_Sensor_set
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           	psect	text52
  9853  011578                     __ptext52:
  9854                           	opt stack 0
  9855  011578                     _displ_sens:
  9856                           	opt stack 20
  9857                           
  9858                           ;incstack = 0
  9859                           ;displ_sens@smsgpos stored from wreg
  9860  011578  6E2B               	movwf	displ_sens@smsgpos,c
  9861                           
  9862                           ;lcd.c: 44: if(CMP1_GetOutputStatus())
  9863  01157A  EC97  F090         	call	_CMP1_GetOutputStatus	;wreg free
  9864  01157E  0900               	iorlw	0
  9865  011580  B4D8               	btfsc	status,2,c
  9866  011582  D009               	goto	l1441
  9867                           
  9868                           ;lcd.c: 45: {
  9869                           ;lcd.c: 46: lcd_string(offmsg, smsgpos);
  9870  011584  0EF6               	movlw	low _offmsg
  9871  011586  6E24               	movwf	lcd_string@lcdstring,c
  9872  011588  0EFF               	movlw	high _offmsg
  9873  01158A  6E25               	movwf	lcd_string@lcdstring+1,c
  9874  01158C  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
  9875  011590  EC75  F087         	call	_lcd_string	;wreg free
  9876                           
  9877                           ;lcd.c: 47: }
  9878  011594  D008               	goto	l1442
  9879  011596                     l1441:
  9880                           
  9881                           ;lcd.c: 48: else
  9882                           ;lcd.c: 49: {
  9883                           ;lcd.c: 50: lcd_string(onmsg, smsgpos);
  9884  011596  0EFA               	movlw	low _onmsg
  9885  011598  6E24               	movwf	lcd_string@lcdstring,c
  9886  01159A  0EFF               	movlw	high _onmsg
  9887  01159C  6E25               	movwf	lcd_string@lcdstring+1,c
  9888  01159E  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
  9889  0115A2  EC75  F087         	call	_lcd_string	;wreg free
  9890  0115A6                     l1442:
  9891                           
  9892                           ;lcd.c: 51: }
  9893                           ;lcd.c: 52: DATAEE_WriteByte(sensval, sensorval);
  9894  0115A6  0E53               	movlw	low _sensval
  9895  0115A8  6EF6               	movwf	tblptrl,c
  9896  0115AA                     	if	1	;There is more than 1 active tblptr byte
  9897  0115AA  0EFC               	movlw	high _sensval
  9898  0115AC  6EF7               	movwf	tblptrh,c
  9899  0115AE                     	endif
  9900  0115AE                     	if	1	;There are 3 active tblptr bytes
  9901  0115AE  0E00               	movlw	low (_sensval shr (0+16))
  9902  0115B0  6EF8               	movwf	tblptru,c
  9903  0115B2                     	endif
  9904  0115B2  0009               	tblrd		*+
  9905  0115B4  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9906  0115B8  000A               	tblrd		*-
  9907  0115BA  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9908  0115BE  C037  F01F         	movff	_sensorval,DATAEE_WriteByte@bData	;volatile
  9909  0115C2  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
  9910                           
  9911                           ;lcd.c: 53: lcd_string(clrmsg, dmsgpos);
  9912  0115C6  0EAF               	movlw	low _clrmsg
  9913  0115C8  6E24               	movwf	lcd_string@lcdstring,c
  9914  0115CA  0EFF               	movlw	high _clrmsg
  9915  0115CC  6E25               	movwf	lcd_string@lcdstring+1,c
  9916  0115CE  C02A  F026         	movff	displ_sens@dmsgpos,lcd_string@lcdline
  9917  0115D2  EC75  F087         	call	_lcd_string	;wreg free
  9918                           
  9919                           ;lcd.c: 54: lcd_dispadd(dmsgpos);
  9920  0115D6  502A               	movf	displ_sens@dmsgpos,w,c
  9921  0115D8  EC1E  F090         	call	_lcd_dispadd
  9922                           
  9923                           ;lcd.c: 55: displ_hex((uint8_t) DAC1CON1);
  9924  0115DC  010F               	movlb	15	; () banked
  9925  0115DE  5134               	movf	52,w,b	;volatile
  9926  0115E0  6E27               	movwf	displ_hex@hexnum,c
  9927  0115E2  6A28               	clrf	displ_hex@hexnum+1,c
  9928  0115E4  6A29               	clrf	displ_hex@hexnum+2,c
  9929  0115E6  EC1A  F087         	call	_displ_hex	;wreg free
  9930  0115EA  0012               	return		;funcret
  9931  0115EC                     __end_of_displ_sens:
  9932                           	opt stack 0
  9933                           tblptru	equ	0xFF8
  9934                           tblptrh	equ	0xFF7
  9935                           tblptrl	equ	0xFF6
  9936                           tablat	equ	0xFF5
  9937                           prodh	equ	0xFF4
  9938                           prodl	equ	0xFF3
  9939                           postinc0	equ	0xFEE
  9940                           wreg	equ	0xFE8
  9941                           indf2	equ	0xFDF
  9942                           fsr2h	equ	0xFDA
  9943                           fsr2l	equ	0xFD9
  9944                           status	equ	0xFD8
  9945                           
  9946 ;; *************** function _CMP1_GetOutputStatus *****************
  9947 ;; Defined at:
  9948 ;;		line 74 in file "mcc_generated_files/cmp1.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;		None
  9951 ;; Auto vars:     Size  Location     Type
  9952 ;;		None
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  1    wreg      unsigned char 
  9955 ;; Registers used:
  9956 ;;		wreg
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;Total ram usage:        0 bytes
  9967 ;; Hardware stack levels used:    1
  9968 ;; Hardware stack levels required when called:    2
  9969 ;; This function calls:
  9970 ;;		Nothing
  9971 ;; This function is called by:
  9972 ;;		_main
  9973 ;;		_displ_sens
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text53
  9978  01212E                     __ptext53:
  9979                           	opt stack 0
  9980  01212E                     _CMP1_GetOutputStatus:
  9981                           	opt stack 25
  9982                           
  9983                           ;cmp1.c: 76: return (CMOUTbits.MC1OUT);
  9984                           
  9985                           ;incstack = 0
  9986  01212E  010F               	movlb	15	; () banked
  9987  012130  A13D               	btfss	61,0,b	;volatile
  9988  012132  D002               	goto	u2900
  9989  012134  0E01               	movlw	1
  9990  012136  0012               	return	
  9991  012138                     u2900:
  9992  012138  0E00               	movlw	0
  9993  01213A  0012               	return	
  9994  01213C                     __end_of_CMP1_GetOutputStatus:
  9995                           	opt stack 0
  9996                           tblptru	equ	0xFF8
  9997                           tblptrh	equ	0xFF7
  9998                           tblptrl	equ	0xFF6
  9999                           tablat	equ	0xFF5
 10000                           prodh	equ	0xFF4
 10001                           prodl	equ	0xFF3
 10002                           postinc0	equ	0xFEE
 10003                           wreg	equ	0xFE8
 10004                           indf2	equ	0xFDF
 10005                           fsr2h	equ	0xFDA
 10006                           fsr2l	equ	0xFD9
 10007                           status	equ	0xFD8
 10008                           
 10009 ;; *************** function _Hopper_coin *****************
 10010 ;; Defined at:
 10011 ;;		line 179 in file "vend.c"
 10012 ;; Parameters:    Size  Location     Type
 10013 ;;		None
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;  coinval         1   12[BANK0 ] unsigned char 
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  1    wreg      void 
 10018 ;; Registers used:
 10019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10026 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10028 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;Total ram usage:        1 bytes
 10030 ;; Hardware stack levels used:    1
 10031 ;; Hardware stack levels required when called:    9
 10032 ;; This function calls:
 10033 ;;		_DATAEE_ReadByte
 10034 ;;		_Update_Hopcoin
 10035 ;;		_butindb
 10036 ;;		_displ_hex
 10037 ;;		_lcd_dispadd
 10038 ;;		_lcd_string
 10039 ;; This function is called by:
 10040 ;;		_enter_service
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text54
 10045  010732                     __ptext54:
 10046                           	opt stack 0
 10047  010732                     _Hopper_coin:
 10048                           	opt stack 20
 10049                           
 10050                           ;vend.c: 181: lcd_string(hoppcoin, line1);
 10051                           
 10052                           ; BSR set to: 15
 10053                           ;incstack = 0
 10054  010732  0EF3               	movlw	low _hoppcoin
 10055  010734  6E24               	movwf	lcd_string@lcdstring,c
 10056  010736  0EFD               	movlw	high _hoppcoin
 10057  010738  6E25               	movwf	lcd_string@lcdstring+1,c
 10058  01073A  0E8F               	movlw	low _line1
 10059  01073C  6EF6               	movwf	tblptrl,c
 10060  01073E                     	if	1	;There is more than 1 active tblptr byte
 10061  01073E  0EFC               	movlw	high _line1
 10062  010740  6EF7               	movwf	tblptrh,c
 10063  010742                     	endif
 10064  010742                     	if	1	;There are 3 active tblptr bytes
 10065  010742  0E00               	movlw	low (_line1 shr (0+16))
 10066  010744  6EF8               	movwf	tblptru,c
 10067  010746                     	endif
 10068  010746  0008               	tblrd		*
 10069  010748  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10070  01074C  EC75  F087         	call	_lcd_string	;wreg free
 10071                           
 10072                           ;vend.c: 182: mdbflags.endis = 1;
 10073  010750  8C3E               	bsf	_mdbflags,6,c
 10074                           
 10075                           ;vend.c: 183: senspos = bflag + 2;
 10076  010752  5046               	movf	_bflag,w,c
 10077  010754  0F02               	addlw	2
 10078  010756  6E36               	movwf	_senspos,c	;volatile
 10079                           
 10080                           ;vend.c: 184: uint8_t coinval = DATAEE_ReadByte(hopcoin);
 10081  010758  0E4F               	movlw	low _hopcoin
 10082  01075A  6EF6               	movwf	tblptrl,c
 10083  01075C                     	if	1	;There is more than 1 active tblptr byte
 10084  01075C  0EFC               	movlw	high _hopcoin
 10085  01075E  6EF7               	movwf	tblptrh,c
 10086  010760                     	endif
 10087  010760                     	if	1	;There are 3 active tblptr bytes
 10088  010760  0E00               	movlw	low (_hopcoin shr (0+16))
 10089  010762  6EF8               	movwf	tblptru,c
 10090  010764                     	endif
 10091  010764  0009               	tblrd		*+
 10092  010766  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 10093  01076A  000A               	tblrd		*-
 10094  01076C  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 10095  010770  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
 10096  010774  0100               	movlb	0	; () banked
 10097  010776  6FA8               	movwf	Hopper_coin@coinval& (0+255),b
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;vend.c: 185: lcd_dispadd(senspos);
 10101  010778  5036               	movf	_senspos,w,c	;volatile
 10102  01077A  EC1E  F090         	call	_lcd_dispadd
 10103                           
 10104                           ;vend.c: 186: displ_hex((uint24_t)coinval);
 10105  01077E  0100               	movlb	0	; () banked
 10106  010780  51A8               	movf	Hopper_coin@coinval& (0+255),w,b
 10107  010782  6E27               	movwf	displ_hex@hexnum,c
 10108  010784  6A28               	clrf	displ_hex@hexnum+1,c
 10109  010786  6A29               	clrf	displ_hex@hexnum+2,c
 10110  010788  EC1A  F087         	call	_displ_hex	;wreg free
 10111                           
 10112                           ;vend.c: 187: while(mdbflags.endis)
 10113  01078C  D03F               	goto	l2026
 10114  01078E                     
 10115                           ;vend.c: 188: {
 10116                           ;vend.c: 189: buttons = butindb();
 10117  01078E  EC2B  F08F         	call	_butindb	;wreg free
 10118  010792  6E39               	movwf	_buttons,c	;volatile
 10119                           
 10120                           ;vend.c: 190: switch(buttons)
 10121  010794  D021               	goto	l2028
 10122  010796  0E01               	movlw	1
 10123  010798  6E2A               	movwf	Update_Hopcoin@direction,c
 10124  01079A  0100               	movlb	0	; () banked
 10125  01079C  51A8               	movf	Hopper_coin@coinval& (0+255),w,b
 10126  01079E  EC83  F089         	call	_Update_Hopcoin
 10127                           
 10128                           ;vend.c: 193: break;
 10129  0107A2  D024               	goto	l2030
 10130  0107A4  0E02               	movlw	2
 10131  0107A6  6E2A               	movwf	Update_Hopcoin@direction,c
 10132  0107A8  0100               	movlb	0	; () banked
 10133  0107AA  51A8               	movf	Hopper_coin@coinval& (0+255),w,b
 10134  0107AC  EC83  F089         	call	_Update_Hopcoin
 10135                           
 10136                           ;vend.c: 195: break;
 10137  0107B0  D01D               	goto	l2030
 10138  0107B2                     l2032:
 10139  0107B2  9C3E               	bcf	_mdbflags,6,c
 10140                           
 10141                           ;vend.c: 197: lcd_string(servmsg, line1);
 10142  0107B4  0E9E               	movlw	low _servmsg
 10143  0107B6  6E24               	movwf	lcd_string@lcdstring,c
 10144  0107B8  0EFC               	movlw	high _servmsg
 10145  0107BA  6E25               	movwf	lcd_string@lcdstring+1,c
 10146  0107BC  0E8F               	movlw	low _line1
 10147  0107BE  6EF6               	movwf	tblptrl,c
 10148  0107C0                     	if	1	;There is more than 1 active tblptr byte
 10149  0107C0  0EFC               	movlw	high _line1
 10150  0107C2  6EF7               	movwf	tblptrh,c
 10151  0107C4                     	endif
 10152  0107C4                     	if	1	;There are 3 active tblptr bytes
 10153  0107C4  0E00               	movlw	low (_line1 shr (0+16))
 10154  0107C6  6EF8               	movwf	tblptru,c
 10155  0107C8                     	endif
 10156  0107C8  0008               	tblrd		*
 10157  0107CA  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10158  0107CE  EC75  F087         	call	_lcd_string	;wreg free
 10159                           
 10160                           ;vend.c: 198: buttons = 0x00;
 10161  0107D2  0E00               	movlw	0
 10162  0107D4  6E39               	movwf	_buttons,c	;volatile
 10163                           
 10164                           ;vend.c: 200: }
 10165                           
 10166                           ;vend.c: 199: break;
 10167  0107D6  D00A               	goto	l2030
 10168  0107D8                     l2028:
 10169  0107D8  5039               	movf	_buttons,w,c	;volatile
 10170                           
 10171                           ; Switch size 1, requested type "space"
 10172                           ; Number of cases is 3, Range of values is 1 to 128
 10173                           ; switch strategies available:
 10174                           ; Name         Instructions Cycles
 10175                           ; simple_byte           10     6 (average)
 10176                           ;	Chosen strategy is simple_byte
 10177  0107DA  0A01               	xorlw	1	; case 1
 10178  0107DC  B4D8               	btfsc	status,2,c
 10179  0107DE  D7DB               	goto	l2029
 10180  0107E0  0A03               	xorlw	3	; case 2
 10181  0107E2  B4D8               	btfsc	status,2,c
 10182  0107E4  D7DF               	goto	l2031
 10183  0107E6  0A82               	xorlw	130	; case 128
 10184  0107E8  B4D8               	btfsc	status,2,c
 10185  0107EA  D7E3               	goto	l2032
 10186  0107EC                     l2030:
 10187                           
 10188                           ;vend.c: 201: coinval = DATAEE_ReadByte(hopcoin);
 10189  0107EC  0E4F               	movlw	low _hopcoin
 10190  0107EE  6EF6               	movwf	tblptrl,c
 10191  0107F0                     	if	1	;There is more than 1 active tblptr byte
 10192  0107F0  0EFC               	movlw	high _hopcoin
 10193  0107F2  6EF7               	movwf	tblptrh,c
 10194  0107F4                     	endif
 10195  0107F4                     	if	1	;There are 3 active tblptr bytes
 10196  0107F4  0E00               	movlw	low (_hopcoin shr (0+16))
 10197  0107F6  6EF8               	movwf	tblptru,c
 10198  0107F8                     	endif
 10199  0107F8  0009               	tblrd		*+
 10200  0107FA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 10201  0107FE  000A               	tblrd		*-
 10202  010800  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 10203  010804  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
 10204  010808  0100               	movlb	0	; () banked
 10205  01080A  6FA8               	movwf	Hopper_coin@coinval& (0+255),b
 10206  01080C                     l2026:
 10207                           
 10208                           ; BSR set to: 0
 10209  01080C  AC3E               	btfss	_mdbflags,6,c
 10210  01080E  0012               	return	
 10211  010810  D7BE               	goto	l2027
 10212  010812                     __end_of_Hopper_coin:
 10213                           	opt stack 0
 10214                           tblptru	equ	0xFF8
 10215                           tblptrh	equ	0xFF7
 10216                           tblptrl	equ	0xFF6
 10217                           tablat	equ	0xFF5
 10218                           prodh	equ	0xFF4
 10219                           prodl	equ	0xFF3
 10220                           postinc0	equ	0xFEE
 10221                           wreg	equ	0xFE8
 10222                           indf2	equ	0xFDF
 10223                           fsr2h	equ	0xFDA
 10224                           fsr2l	equ	0xFD9
 10225                           status	equ	0xFD8
 10226                           
 10227 ;; *************** function _butindb *****************
 10228 ;; Defined at:
 10229 ;;		line 130 in file "vend.c"
 10230 ;; Parameters:    Size  Location     Type
 10231 ;;		None
 10232 ;; Auto vars:     Size  Location     Type
 10233 ;;  butt            1   23[COMRAM] unsigned char 
 10234 ;;  butval          1   22[COMRAM] unsigned char 
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      unsigned char 
 10237 ;; Registers used:
 10238 ;;		wreg, status,2, status,0, cstack
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10248 ;;Total ram usage:        4 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    3
 10251 ;; This function calls:
 10252 ;;		_butin
 10253 ;; This function is called by:
 10254 ;;		_enter_service
 10255 ;;		_Hopper_coin
 10256 ;;		_Sensor_set
 10257 ;;		_price_set
 10258 ;;		_set_price
 10259 ;;		_Vend_setup
 10260 ;;		_Vend_settime
 10261 ;;		_Vend_timeset
 10262 ;;		_Chan_link
 10263 ;;		_Link_chan
 10264 ;;		_Sens_off
 10265 ;;		_off_sens
 10266 ;;		_set_notes
 10267 ;;		_enable_notes
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text55
 10272  011E56                     __ptext55:
 10273                           	opt stack 0
 10274  011E56                     _butindb:
 10275                           	opt stack 24
 10276                           
 10277                           ;vend.c: 132: uint8_t butt = butin();
 10278                           
 10279                           ;incstack = 0
 10280  011E56  EC74  F08D         	call	_butin	;wreg free
 10281  011E5A  6E22               	movwf	butindb@butt,c
 10282                           
 10283                           ;vend.c: 133: uint8_t butval = butt;
 10284  011E5C  C022  F021         	movff	butindb@butt,butindb@butval
 10285                           
 10286                           ;vend.c: 134: while(butval != 0x00)
 10287  011E60  D003               	goto	l2011
 10288  011E62                     
 10289                           ;vend.c: 135: {
 10290                           ;vend.c: 136: butval = butin();
 10291  011E62  EC74  F08D         	call	_butin	;wreg free
 10292  011E66  6E21               	movwf	butindb@butval,c
 10293  011E68                     l2011:
 10294  011E68  5021               	movf	butindb@butval,w,c
 10295  011E6A  A4D8               	btfss	status,2,c
 10296  011E6C  D7FA               	goto	l2012
 10297                           
 10298                           ;vend.c: 137: }
 10299                           ;vend.c: 138: _delay((unsigned long)((500)*(12000000/4000.0)));
 10300  011E6E  0E08               	movlw	8
 10301  011E70  6E20               	movwf	(??_butindb+1)& (0+255),c
 10302  011E72  0E9D               	movlw	157
 10303  011E74  6E1F               	movwf	??_butindb& (0+255),c
 10304  011E76  0E06               	movlw	6
 10305  011E78                     u3577:
 10306  011E78  2EE8               	decfsz	wreg,f,c
 10307  011E7A  D7FE               	bra	u3577
 10308  011E7C  2E1F               	decfsz	??_butindb& (0+255),f,c
 10309  011E7E  D7FC               	bra	u3577
 10310  011E80  2E20               	decfsz	(??_butindb+1)& (0+255),f,c
 10311  011E82  D7FA               	bra	u3577
 10312                           
 10313                           ;vend.c: 140: return butt;
 10314  011E84  5022               	movf	butindb@butt,w,c
 10315  011E86  0012               	return	
 10316  011E88                     __end_of_butindb:
 10317                           	opt stack 0
 10318                           tblptru	equ	0xFF8
 10319                           tblptrh	equ	0xFF7
 10320                           tblptrl	equ	0xFF6
 10321                           tablat	equ	0xFF5
 10322                           prodh	equ	0xFF4
 10323                           prodl	equ	0xFF3
 10324                           postinc0	equ	0xFEE
 10325                           wreg	equ	0xFE8
 10326                           indf2	equ	0xFDF
 10327                           fsr2h	equ	0xFDA
 10328                           fsr2l	equ	0xFD9
 10329                           status	equ	0xFD8
 10330                           
 10331 ;; *************** function _butin *****************
 10332 ;; Defined at:
 10333 ;;		line 143 in file "vend.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;		None
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;  butons          1   19[COMRAM] unsigned char 
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  1    wreg      unsigned char 
 10340 ;; Registers used:
 10341 ;;		wreg, status,2, status,0
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;Total ram usage:        2 bytes
 10352 ;; Hardware stack levels used:    1
 10353 ;; Hardware stack levels required when called:    2
 10354 ;; This function calls:
 10355 ;;		Nothing
 10356 ;; This function is called by:
 10357 ;;		_butindb
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           	psect	text56
 10362  011AE8                     __ptext56:
 10363                           	opt stack 0
 10364  011AE8                     _butin:
 10365                           	opt stack 24
 10366                           
 10367                           ;vend.c: 145: LATA7 = 0;
 10368                           
 10369                           ;incstack = 0
 10370  011AE8  9E83               	bcf	3971,7,c	;volatile
 10371                           
 10372                           ;vend.c: 146: LATA6 = 1;
 10373  011AEA  8C83               	bsf	3971,6,c	;volatile
 10374                           
 10375                           ;vend.c: 147: _delay((unsigned long)((15)*(12000000/4000.0)));
 10376  011AEC  0E3B               	movlw	59
 10377  011AEE  6E1D               	movwf	??_butin& (0+255),c
 10378  011AF0  0E70               	movlw	112
 10379  011AF2                     u3587:
 10380  011AF2  2EE8               	decfsz	wreg,f,c
 10381  011AF4  D7FE               	bra	u3587
 10382  011AF6  2E1D               	decfsz	??_butin& (0+255),f,c
 10383  011AF8  D7FC               	bra	u3587
 10384                           
 10385                           ;vend.c: 149: uint8_t butons = ((PORTA >> 1) & 0x0F) << 4;
 10386  011AFA  CF8D F01D          	movff	3981,??_butin	;volatile
 10387  011AFE  90D8               	bcf	status,0,c
 10388  011B00  321D               	rrcf	??_butin,f,c
 10389  011B02  0E0F               	movlw	15
 10390  011B04  161D               	andwf	??_butin,f,c
 10391  011B06  381D               	swapf	??_butin,w,c
 10392  011B08  0BF0               	andlw	240
 10393  011B0A  6E1E               	movwf	butin@butons,c
 10394                           
 10395                           ;vend.c: 150: LATA7 = 1;
 10396  011B0C  8E83               	bsf	3971,7,c	;volatile
 10397                           
 10398                           ;vend.c: 151: LATA6 = 0;
 10399  011B0E  9C83               	bcf	3971,6,c	;volatile
 10400                           
 10401                           ;vend.c: 152: _delay((unsigned long)((15)*(12000000/4000.0)));
 10402  011B10  0E3B               	movlw	59
 10403  011B12  6E1D               	movwf	??_butin& (0+255),c
 10404  011B14  0E70               	movlw	112
 10405  011B16                     u3597:
 10406  011B16  2EE8               	decfsz	wreg,f,c
 10407  011B18  D7FE               	bra	u3597
 10408  011B1A  2E1D               	decfsz	??_butin& (0+255),f,c
 10409  011B1C  D7FC               	bra	u3597
 10410                           
 10411                           ;vend.c: 154: butons = ((PORTA >> 1) & 0x0F) | butons;
 10412  011B1E  90D8               	bcf	status,0,c
 10413  011B20  308D               	rrcf	3981,w,c	;volatile
 10414  011B22  0B0F               	andlw	15
 10415  011B24  101E               	iorwf	butin@butons,w,c
 10416  011B26  6E1E               	movwf	butin@butons,c
 10417                           
 10418                           ;vend.c: 155: LATA7 = 1;
 10419  011B28  8E83               	bsf	3971,7,c	;volatile
 10420                           
 10421                           ;vend.c: 156: LATA6 = 1;
 10422  011B2A  8C83               	bsf	3971,6,c	;volatile
 10423                           
 10424                           ;vend.c: 157: return ~butons;
 10425  011B2C  501E               	movf	butin@butons,w,c
 10426  011B2E  0AFF               	xorlw	255
 10427  011B30  0012               	return	
 10428  011B32                     __end_of_butin:
 10429                           	opt stack 0
 10430                           tblptru	equ	0xFF8
 10431                           tblptrh	equ	0xFF7
 10432                           tblptrl	equ	0xFF6
 10433                           tablat	equ	0xFF5
 10434                           prodh	equ	0xFF4
 10435                           prodl	equ	0xFF3
 10436                           postinc0	equ	0xFEE
 10437                           wreg	equ	0xFE8
 10438                           indf2	equ	0xFDF
 10439                           fsr2h	equ	0xFDA
 10440                           fsr2l	equ	0xFD9
 10441                           status	equ	0xFD8
 10442                           
 10443 ;; *************** function _Update_Hopcoin *****************
 10444 ;; Defined at:
 10445 ;;		line 205 in file "vend.c"
 10446 ;; Parameters:    Size  Location     Type
 10447 ;;  newval          1    wreg     unsigned char 
 10448 ;;  direction       1   31[COMRAM] unsigned char 
 10449 ;; Auto vars:     Size  Location     Type
 10450 ;;  newval          1   32[COMRAM] unsigned char 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  1    wreg      void 
 10453 ;; Registers used:
 10454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10460 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;Total ram usage:        2 bytes
 10465 ;; Hardware stack levels used:    1
 10466 ;; Hardware stack levels required when called:    8
 10467 ;; This function calls:
 10468 ;;		_DATAEE_WriteByte
 10469 ;;		_displ_hex
 10470 ;;		_lcd_dispadd
 10471 ;;		_lcd_string
 10472 ;; This function is called by:
 10473 ;;		_Hopper_coin
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text57
 10478  011306                     __ptext57:
 10479                           	opt stack 0
 10480  011306                     _Update_Hopcoin:
 10481                           	opt stack 20
 10482                           
 10483                           ;incstack = 0
 10484                           ;Update_Hopcoin@newval stored from wreg
 10485  011306  6E2B               	movwf	Update_Hopcoin@newval,c
 10486                           
 10487                           ;vend.c: 208: switch(newval)
 10488  011308  D014               	goto	l2037
 10489  01130A  042A               	decf	Update_Hopcoin@direction,w,c
 10490  01130C  A4D8               	btfss	status,2,c
 10491  01130E  D005               	goto	u3030
 10492                           
 10493                           ;vend.c: 211: {
 10494                           ;vend.c: 212: newval++;
 10495  011310  2A2B               	incf	Update_Hopcoin@newval,f,c
 10496                           
 10497                           ;vend.c: 213: }
 10498  011312  D01A               	goto	l2041
 10499  011314  042A               	decf	Update_Hopcoin@direction,w,c
 10500  011316  A4D8               	btfss	status,2,c
 10501  011318  D002               	goto	l2043
 10502  01131A                     u3030:
 10503                           
 10504                           ;vend.c: 220: {
 10505                           ;vend.c: 221: newval = 0x05;
 10506  01131A  0E05               	movlw	5
 10507  01131C  D006               	goto	L15
 10508  01131E                     l2043:
 10509                           
 10510                           ;vend.c: 223: else
 10511                           ;vend.c: 224: {
 10512                           ;vend.c: 225: newval--;
 10513  01131E  062B               	decf	Update_Hopcoin@newval,f,c
 10514                           
 10515                           ;vend.c: 226: }
 10516                           ;vend.c: 227: break;
 10517  011320  D013               	goto	l2041
 10518  011322  042A               	decf	Update_Hopcoin@direction,w,c
 10519  011324  A4D8               	btfss	status,2,c
 10520  011326  D003               	goto	l2048
 10521                           
 10522                           ;vend.c: 229: {
 10523                           ;vend.c: 231: newval = 0x01;
 10524  011328  0E01               	movlw	1
 10525  01132A                     L15:
 10526  01132A  6E2B               	movwf	Update_Hopcoin@newval,c
 10527                           
 10528                           ;vend.c: 236: }
 10529                           ;vend.c: 237: break;
 10530  01132C  D00D               	goto	l2041
 10531  01132E                     l2048:
 10532  01132E  0E02               	movlw	2
 10533  011330  D7FC               	goto	L15
 10534  011332                     l2037:
 10535  011332  502B               	movf	Update_Hopcoin@newval,w,c
 10536                           
 10537                           ; Switch size 1, requested type "space"
 10538                           ; Number of cases is 3, Range of values is 1 to 5
 10539                           ; switch strategies available:
 10540                           ; Name         Instructions Cycles
 10541                           ; simple_byte           10     6 (average)
 10542                           ;	Chosen strategy is simple_byte
 10543  011334  0A01               	xorlw	1	; case 1
 10544  011336  B4D8               	btfsc	status,2,c
 10545  011338  D7E8               	goto	l2038
 10546  01133A  0A03               	xorlw	3	; case 2
 10547  01133C  B4D8               	btfsc	status,2,c
 10548  01133E  D7EA               	goto	l2042
 10549  011340  0A07               	xorlw	7	; case 5
 10550  011342  B4D8               	btfsc	status,2,c
 10551  011344  D7EE               	goto	l2045
 10552  011346  D7F3               	goto	l2048
 10553  011348                     l2041:
 10554                           
 10555                           ;vend.c: 240: lcd_string(clrmsg, senspos);
 10556  011348  0EAF               	movlw	low _clrmsg
 10557  01134A  6E24               	movwf	lcd_string@lcdstring,c
 10558  01134C  0EFF               	movlw	high _clrmsg
 10559  01134E  6E25               	movwf	lcd_string@lcdstring+1,c
 10560  011350  C036  F026         	movff	_senspos,lcd_string@lcdline	;volatile
 10561  011354  EC75  F087         	call	_lcd_string	;wreg free
 10562                           
 10563                           ;vend.c: 241: DATAEE_WriteByte(hopcoin, newval);
 10564  011358  0E4F               	movlw	low _hopcoin
 10565  01135A  6EF6               	movwf	tblptrl,c
 10566  01135C                     	if	1	;There is more than 1 active tblptr byte
 10567  01135C  0EFC               	movlw	high _hopcoin
 10568  01135E  6EF7               	movwf	tblptrh,c
 10569  011360                     	endif
 10570  011360                     	if	1	;There are 3 active tblptr bytes
 10571  011360  0E00               	movlw	low (_hopcoin shr (0+16))
 10572  011362  6EF8               	movwf	tblptru,c
 10573  011364                     	endif
 10574  011364  0009               	tblrd		*+
 10575  011366  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 10576  01136A  000A               	tblrd		*-
 10577  01136C  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 10578  011370  C02B  F01F         	movff	Update_Hopcoin@newval,DATAEE_WriteByte@bData
 10579  011374  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
 10580                           
 10581                           ;vend.c: 242: lcd_dispadd(senspos);
 10582  011378  5036               	movf	_senspos,w,c	;volatile
 10583  01137A  EC1E  F090         	call	_lcd_dispadd
 10584                           
 10585                           ;vend.c: 243: displ_hex((uint24_t)newval);
 10586  01137E  502B               	movf	Update_Hopcoin@newval,w,c
 10587  011380  6E27               	movwf	displ_hex@hexnum,c
 10588  011382  6A28               	clrf	displ_hex@hexnum+1,c
 10589  011384  6A29               	clrf	displ_hex@hexnum+2,c
 10590  011386  EC1A  F087         	call	_displ_hex	;wreg free
 10591  01138A  0012               	return		;funcret
 10592  01138C                     __end_of_Update_Hopcoin:
 10593                           	opt stack 0
 10594                           tblptru	equ	0xFF8
 10595                           tblptrh	equ	0xFF7
 10596                           tblptrl	equ	0xFF6
 10597                           tablat	equ	0xFF5
 10598                           prodh	equ	0xFF4
 10599                           prodl	equ	0xFF3
 10600                           postinc0	equ	0xFEE
 10601                           wreg	equ	0xFE8
 10602                           indf2	equ	0xFDF
 10603                           fsr2h	equ	0xFDA
 10604                           fsr2l	equ	0xFD9
 10605                           status	equ	0xFD8
 10606                           
 10607 ;; *************** function _Clear_cred *****************
 10608 ;; Defined at:
 10609 ;;		line 288 in file "vend.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;		None
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;		None
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1    wreg      void 
 10616 ;; Registers used:
 10617 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;Total ram usage:        2 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    8
 10630 ;; This function calls:
 10631 ;;		_DATAEE_WriteByte
 10632 ;;		_lcd_string
 10633 ;; This function is called by:
 10634 ;;		_enter_service
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text58
 10639  0118B0                     __ptext58:
 10640                           	opt stack 0
 10641  0118B0                     _Clear_cred:
 10642                           	opt stack 21
 10643                           
 10644                           ;vend.c: 290: DATAEE_WriteByte(credmem, 0x00);
 10645                           
 10646                           ;incstack = 0
 10647  0118B0  0E61               	movlw	low _credmem
 10648  0118B2  6EF6               	movwf	tblptrl,c
 10649  0118B4                     	if	1	;There is more than 1 active tblptr byte
 10650  0118B4  0EFC               	movlw	high _credmem
 10651  0118B6  6EF7               	movwf	tblptrh,c
 10652  0118B8                     	endif
 10653  0118B8                     	if	1	;There are 3 active tblptr bytes
 10654  0118B8  0E00               	movlw	low (_credmem shr (0+16))
 10655  0118BA  6EF8               	movwf	tblptru,c
 10656  0118BC                     	endif
 10657  0118BC  0009               	tblrd		*+
 10658  0118BE  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 10659  0118C2  000A               	tblrd		*-
 10660  0118C4  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 10661  0118C8  0E00               	movlw	0
 10662  0118CA  6E1F               	movwf	DATAEE_WriteByte@bData,c
 10663  0118CC  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
 10664                           
 10665                           ;vend.c: 291: lcd_string(creditclr, line1);
 10666  0118D0  0E62               	movlw	low _creditclr
 10667  0118D2  6E24               	movwf	lcd_string@lcdstring,c
 10668  0118D4  0EFF               	movlw	high _creditclr
 10669  0118D6  6E25               	movwf	lcd_string@lcdstring+1,c
 10670  0118D8  0E8F               	movlw	low _line1
 10671  0118DA  6EF6               	movwf	tblptrl,c
 10672  0118DC                     	if	1	;There is more than 1 active tblptr byte
 10673  0118DC  0EFC               	movlw	high _line1
 10674  0118DE  6EF7               	movwf	tblptrh,c
 10675  0118E0                     	endif
 10676  0118E0                     	if	1	;There are 3 active tblptr bytes
 10677  0118E0  0E00               	movlw	low (_line1 shr (0+16))
 10678  0118E2  6EF8               	movwf	tblptru,c
 10679  0118E4                     	endif
 10680  0118E4  0008               	tblrd		*
 10681  0118E6  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10682  0118EA  EC75  F087         	call	_lcd_string	;wreg free
 10683                           
 10684                           ;vend.c: 292: _delay((unsigned long)((1000)*(12000000/4000.0)));
 10685  0118EE  0E10               	movlw	16
 10686  0118F0  6E2A               	movwf	(??_Clear_cred+1)& (0+255),c
 10687  0118F2  0E39               	movlw	57
 10688  0118F4  6E29               	movwf	??_Clear_cred& (0+255),c
 10689  0118F6  0E0E               	movlw	14
 10690  0118F8                     u3607:
 10691  0118F8  2EE8               	decfsz	wreg,f,c
 10692  0118FA  D7FE               	bra	u3607
 10693  0118FC  2E29               	decfsz	??_Clear_cred& (0+255),f,c
 10694  0118FE  D7FC               	bra	u3607
 10695  011900  2E2A               	decfsz	(??_Clear_cred+1)& (0+255),f,c
 10696  011902  D7FA               	bra	u3607
 10697  011904  0012               	return		;funcret
 10698  011906                     __end_of_Clear_cred:
 10699                           	opt stack 0
 10700                           tblptru	equ	0xFF8
 10701                           tblptrh	equ	0xFF7
 10702                           tblptrl	equ	0xFF6
 10703                           tablat	equ	0xFF5
 10704                           prodh	equ	0xFF4
 10705                           prodl	equ	0xFF3
 10706                           postinc0	equ	0xFEE
 10707                           wreg	equ	0xFE8
 10708                           indf2	equ	0xFDF
 10709                           fsr2h	equ	0xFDA
 10710                           fsr2l	equ	0xFD9
 10711                           status	equ	0xFD8
 10712                           
 10713 ;; *************** function _Audit *****************
 10714 ;; Defined at:
 10715 ;;		line 165 in file "vend.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		None
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;Total ram usage:        0 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    2
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_enter_service
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           	psect	text59
 10744  012194                     __ptext59:
 10745                           	opt stack 0
 10746  012194                     _Audit:
 10747                           	opt stack 27
 10748                           
 10749                           ;incstack = 0
 10750  012194  0012               	return		;funcret
 10751  012196                     __end_of_Audit:
 10752                           	opt stack 0
 10753                           tblptru	equ	0xFF8
 10754                           tblptrh	equ	0xFF7
 10755                           tblptrl	equ	0xFF6
 10756                           tablat	equ	0xFF5
 10757                           prodh	equ	0xFF4
 10758                           prodl	equ	0xFF3
 10759                           postinc0	equ	0xFEE
 10760                           wreg	equ	0xFE8
 10761                           indf2	equ	0xFDF
 10762                           fsr2h	equ	0xFDA
 10763                           fsr2l	equ	0xFD9
 10764                           status	equ	0xFD8
 10765                           
 10766 ;; *************** function _displ_noteer *****************
 10767 ;; Defined at:
 10768 ;;		line 184 in file "lcd.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10786 ;;Total ram usage:        0 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; Hardware stack levels required when called:    8
 10789 ;; This function calls:
 10790 ;;		_displ_code
 10791 ;;		_lcd_string
 10792 ;; This function is called by:
 10793 ;;		_main
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797                           	psect	text60
 10798  011EBA                     __ptext60:
 10799                           	opt stack 0
 10800  011EBA                     _displ_noteer:
 10801                           	opt stack 22
 10802                           
 10803                           ;lcd.c: 186: lcd_string(noteerr, line1);
 10804                           
 10805                           ;incstack = 0
 10806  011EBA  0E0D               	movlw	low _noteerr
 10807  011EBC  6E24               	movwf	lcd_string@lcdstring,c
 10808  011EBE  0EFF               	movlw	high _noteerr
 10809  011EC0  6E25               	movwf	lcd_string@lcdstring+1,c
 10810  011EC2  0E8F               	movlw	low _line1
 10811  011EC4  6EF6               	movwf	tblptrl,c
 10812  011EC6                     	if	1	;There is more than 1 active tblptr byte
 10813  011EC6  0EFC               	movlw	high _line1
 10814  011EC8  6EF7               	movwf	tblptrh,c
 10815  011ECA                     	endif
 10816  011ECA                     	if	1	;There are 3 active tblptr bytes
 10817  011ECA  0E00               	movlw	low (_line1 shr (0+16))
 10818  011ECC  6EF8               	movwf	tblptru,c
 10819  011ECE                     	endif
 10820  011ECE  0008               	tblrd		*
 10821  011ED0  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10822  011ED4  EC75  F087         	call	_lcd_string	;wreg free
 10823                           
 10824                           ;lcd.c: 187: ercode = mdbdata[0];
 10825  011ED8  C060  F043         	movff	_mdbdata,_ercode
 10826                           
 10827                           ;lcd.c: 188: displ_code(ercode);
 10828  011EDC  5043               	movf	_ercode,w,c
 10829  011EDE  ECA0  F081         	call	_displ_code
 10830                           
 10831                           ;lcd.c: 189: mdbflags.noteerr = 0;
 10832  011EE2  923E               	bcf	_mdbflags,1,c
 10833                           
 10834                           ;lcd.c: 190: venflags.noterr = 0;
 10835  011EE4  9C2C               	bcf	_venflags,6,c
 10836                           
 10837                           ;lcd.c: 191: venflags.credisplay = 0;
 10838  011EE6  982C               	bcf	_venflags,4,c
 10839  011EE8  0012               	return		;funcret
 10840  011EEA                     __end_of_displ_noteer:
 10841                           	opt stack 0
 10842                           tblptru	equ	0xFF8
 10843                           tblptrh	equ	0xFF7
 10844                           tblptrl	equ	0xFF6
 10845                           tablat	equ	0xFF5
 10846                           prodh	equ	0xFF4
 10847                           prodl	equ	0xFF3
 10848                           postinc0	equ	0xFEE
 10849                           wreg	equ	0xFE8
 10850                           indf2	equ	0xFDF
 10851                           fsr2h	equ	0xFDA
 10852                           fsr2l	equ	0xFD9
 10853                           status	equ	0xFD8
 10854                           
 10855 ;; *************** function _displ_code *****************
 10856 ;; Defined at:
 10857 ;;		line 137 in file "lcd.c"
 10858 ;; Parameters:    Size  Location     Type
 10859 ;;  ercode          1    wreg     unsigned char 
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;  ercode          1   27[COMRAM] unsigned char 
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1    wreg      void 
 10864 ;; Registers used:
 10865 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10874 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;Total ram usage:        3 bytes
 10876 ;; Hardware stack levels used:    1
 10877 ;; Hardware stack levels required when called:    7
 10878 ;; This function calls:
 10879 ;;		_lcd_writeC
 10880 ;; This function is called by:
 10881 ;;		_displ_noteer
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           	psect	text61
 10886  010340                     __ptext61:
 10887                           	opt stack 0
 10888  010340                     _displ_code:
 10889                           	opt stack 22
 10890                           
 10891                           ;incstack = 0
 10892                           ;displ_code@ercode stored from wreg
 10893  010340  6E26               	movwf	displ_code@ercode,c
 10894                           
 10895                           ;lcd.c: 139: if((ercode >> 4) < 0x0A)
 10896  010342  C026  F024         	movff	displ_code@ercode,??_displ_code
 10897  010346  3A24               	swapf	??_displ_code,f,c
 10898  010348  0E0F               	movlw	15
 10899  01034A  1624               	andwf	??_displ_code,f,c
 10900  01034C  0E0A               	movlw	10
 10901  01034E  6024               	cpfslt	??_displ_code,c
 10902  010350  D01E               	goto	l1474
 10903                           
 10904                           ;lcd.c: 140: {
 10905                           ;lcd.c: 141: lcd_writeC((ercode >> 4) | 0x30);
 10906  010352  3826               	swapf	displ_code@ercode,w,c
 10907  010354  0B0F               	andlw	15
 10908  010356  0930               	iorlw	48
 10909  010358  EC97  F08B         	call	_lcd_writeC
 10910                           
 10911                           ;lcd.c: 142: }
 10912  01035C  D033               	goto	l1476
 10913  01035E  0E41               	movlw	65
 10914  010360  EC97  F08B         	call	_lcd_writeC
 10915                           
 10916                           ;lcd.c: 148: break;
 10917  010364  D02F               	goto	l1476
 10918  010366  0E42               	movlw	66
 10919  010368  EC97  F08B         	call	_lcd_writeC
 10920                           
 10921                           ;lcd.c: 150: break;
 10922  01036C  D02B               	goto	l1476
 10923  01036E  0E43               	movlw	67
 10924  010370  EC97  F08B         	call	_lcd_writeC
 10925                           
 10926                           ;lcd.c: 152: break;
 10927  010374  D027               	goto	l1476
 10928  010376  0E44               	movlw	68
 10929  010378  EC97  F08B         	call	_lcd_writeC
 10930                           
 10931                           ;lcd.c: 154: break;
 10932  01037C  D023               	goto	l1476
 10933  01037E  0E45               	movlw	69
 10934  010380  EC97  F08B         	call	_lcd_writeC
 10935                           
 10936                           ;lcd.c: 156: break;
 10937  010384  D01F               	goto	l1476
 10938  010386  0E46               	movlw	70
 10939  010388  EC97  F08B         	call	_lcd_writeC
 10940                           
 10941                           ;lcd.c: 158: }
 10942  01038C  D01B               	goto	l1476
 10943  01038E                     l1474:
 10944  01038E  3826               	swapf	displ_code@ercode,w,c
 10945  010390  0B0F               	andlw	15
 10946  010392  6E24               	movwf	??_displ_code& (0+255),c
 10947  010394  6A25               	clrf	(??_displ_code+1)& (0+255),c
 10948                           
 10949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10950                           ; Switch size 1, requested type "space"
 10951                           ; Number of cases is 1, Range of values is 0 to 0
 10952                           ; switch strategies available:
 10953                           ; Name         Instructions Cycles
 10954                           ; simple_byte            4     3 (average)
 10955                           ;	Chosen strategy is simple_byte
 10956  010396  5025               	movf	??_displ_code+1,w,c
 10957  010398  0A00               	xorlw	0	; case 0
 10958  01039A  A4D8               	btfss	status,2,c
 10959  01039C  D013               	goto	l1476
 10960                           
 10961                           ; Switch size 1, requested type "space"
 10962                           ; Number of cases is 6, Range of values is 10 to 15
 10963                           ; switch strategies available:
 10964                           ; Name         Instructions Cycles
 10965                           ; simple_byte           19    10 (average)
 10966                           ;	Chosen strategy is simple_byte
 10967  01039E  5024               	movf	??_displ_code,w,c
 10968  0103A0  0A0A               	xorlw	10	; case 10
 10969  0103A2  B4D8               	btfsc	status,2,c
 10970  0103A4  D7DC               	goto	l1475
 10971  0103A6  0A01               	xorlw	1	; case 11
 10972  0103A8  B4D8               	btfsc	status,2,c
 10973  0103AA  D7DD               	goto	l1477
 10974  0103AC  0A07               	xorlw	7	; case 12
 10975  0103AE  B4D8               	btfsc	status,2,c
 10976  0103B0  D7DE               	goto	l1478
 10977  0103B2  0A01               	xorlw	1	; case 13
 10978  0103B4  B4D8               	btfsc	status,2,c
 10979  0103B6  D7DF               	goto	l1479
 10980  0103B8  0A03               	xorlw	3	; case 14
 10981  0103BA  B4D8               	btfsc	status,2,c
 10982  0103BC  D7E0               	goto	l1480
 10983  0103BE  0A01               	xorlw	1	; case 15
 10984  0103C0  B4D8               	btfsc	status,2,c
 10985  0103C2  D7E1               	goto	l1481
 10986  0103C4                     l1476:
 10987                           
 10988                           ;lcd.c: 159: }
 10989                           ;lcd.c: 160: if((ercode & 0x0F) < 0x0A)
 10990  0103C4  C026  F024         	movff	displ_code@ercode,??_displ_code
 10991  0103C8  0E0F               	movlw	15
 10992  0103CA  1624               	andwf	??_displ_code,f,c
 10993  0103CC  0E0A               	movlw	10
 10994  0103CE  6024               	cpfslt	??_displ_code,c
 10995  0103D0  D01E               	goto	l1484
 10996                           
 10997                           ;lcd.c: 161: {
 10998                           ;lcd.c: 162: lcd_writeC((ercode & 0x0F) | 0x30);
 10999  0103D2  5026               	movf	displ_code@ercode,w,c
 11000  0103D4  0B0F               	andlw	15
 11001  0103D6  0930               	iorlw	48
 11002  0103D8  EC97  F08B         	call	_lcd_writeC
 11003                           
 11004                           ;lcd.c: 163: }
 11005  0103DC  0012               	return	
 11006  0103DE  0E41               	movlw	65
 11007  0103E0  EC97  F08B         	call	_lcd_writeC
 11008                           
 11009                           ;lcd.c: 169: break;
 11010  0103E4  0012               	return	
 11011  0103E6  0E42               	movlw	66
 11012  0103E8  EC97  F08B         	call	_lcd_writeC
 11013                           
 11014                           ;lcd.c: 171: break;
 11015  0103EC  0012               	return	
 11016  0103EE  0E43               	movlw	67
 11017  0103F0  EC97  F08B         	call	_lcd_writeC
 11018                           
 11019                           ;lcd.c: 173: break;
 11020  0103F4  0012               	return	
 11021  0103F6  0E44               	movlw	68
 11022  0103F8  EC97  F08B         	call	_lcd_writeC
 11023                           
 11024                           ;lcd.c: 175: break;
 11025  0103FC  0012               	return	
 11026  0103FE  0E45               	movlw	69
 11027  010400  EC97  F08B         	call	_lcd_writeC
 11028                           
 11029                           ;lcd.c: 177: break;
 11030  010404  0012               	return	
 11031  010406  0E46               	movlw	70
 11032  010408  EC97  F08B         	call	_lcd_writeC
 11033                           
 11034                           ;lcd.c: 179: }
 11035  01040C  0012               	return	
 11036  01040E                     l1484:
 11037  01040E  5026               	movf	displ_code@ercode,w,c
 11038  010410  0B0F               	andlw	15
 11039  010412  6E24               	movwf	??_displ_code& (0+255),c
 11040  010414  6A25               	clrf	(??_displ_code+1)& (0+255),c
 11041                           
 11042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11043                           ; Switch size 1, requested type "space"
 11044                           ; Number of cases is 1, Range of values is 0 to 0
 11045                           ; switch strategies available:
 11046                           ; Name         Instructions Cycles
 11047                           ; simple_byte            4     3 (average)
 11048                           ;	Chosen strategy is simple_byte
 11049  010416  5025               	movf	??_displ_code+1,w,c
 11050  010418  0A00               	xorlw	0	; case 0
 11051  01041A  A4D8               	btfss	status,2,c
 11052  01041C  0012               	return	
 11053                           
 11054                           ; Switch size 1, requested type "space"
 11055                           ; Number of cases is 6, Range of values is 10 to 15
 11056                           ; switch strategies available:
 11057                           ; Name         Instructions Cycles
 11058                           ; simple_byte           19    10 (average)
 11059                           ;	Chosen strategy is simple_byte
 11060  01041E  5024               	movf	??_displ_code,w,c
 11061  010420  0A0A               	xorlw	10	; case 10
 11062  010422  B4D8               	btfsc	status,2,c
 11063  010424  D7DC               	goto	l1485
 11064  010426  0A01               	xorlw	1	; case 11
 11065  010428  B4D8               	btfsc	status,2,c
 11066  01042A  D7DD               	goto	l1487
 11067  01042C  0A07               	xorlw	7	; case 12
 11068  01042E  B4D8               	btfsc	status,2,c
 11069  010430  D7DE               	goto	l1488
 11070  010432  0A01               	xorlw	1	; case 13
 11071  010434  B4D8               	btfsc	status,2,c
 11072  010436  D7DF               	goto	l1489
 11073  010438  0A03               	xorlw	3	; case 14
 11074  01043A  B4D8               	btfsc	status,2,c
 11075  01043C  D7E0               	goto	l1490
 11076  01043E  0A01               	xorlw	1	; case 15
 11077  010440  A4D8               	btfss	status,2,c
 11078  010442  0012               	return	
 11079  010444  D7E0               	goto	l1491
 11080  010446                     __end_of_displ_code:
 11081                           	opt stack 0
 11082                           tblptru	equ	0xFF8
 11083                           tblptrh	equ	0xFF7
 11084                           tblptrl	equ	0xFF6
 11085                           tablat	equ	0xFF5
 11086                           prodh	equ	0xFF4
 11087                           prodl	equ	0xFF3
 11088                           postinc0	equ	0xFEE
 11089                           wreg	equ	0xFE8
 11090                           indf2	equ	0xFDF
 11091                           fsr2h	equ	0xFDA
 11092                           fsr2l	equ	0xFD9
 11093                           status	equ	0xFD8
 11094                           
 11095 ;; *************** function _displ_credit *****************
 11096 ;; Defined at:
 11097 ;;		line 129 in file "lcd.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;		None
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;  cash            1   31[COMRAM] unsigned char 
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  1    wreg      void 
 11104 ;; Registers used:
 11105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11115 ;;Total ram usage:        1 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:    8
 11118 ;; This function calls:
 11119 ;;		_credit_check
 11120 ;;		_displ_hex
 11121 ;;		_lcd_string
 11122 ;; This function is called by:
 11123 ;;		_main
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           	psect	text62
 11128  011DBC                     __ptext62:
 11129                           	opt stack 0
 11130  011DBC                     _displ_credit:
 11131                           	opt stack 22
 11132                           
 11133                           ;lcd.c: 131: lcd_string(credits, line1);
 11134                           
 11135                           ;incstack = 0
 11136  011DBC  0E7F               	movlw	low _credits
 11137  011DBE  6E24               	movwf	lcd_string@lcdstring,c
 11138  011DC0  0EFF               	movlw	high _credits
 11139  011DC2  6E25               	movwf	lcd_string@lcdstring+1,c
 11140  011DC4  0E8F               	movlw	low _line1
 11141  011DC6  6EF6               	movwf	tblptrl,c
 11142  011DC8                     	if	1	;There is more than 1 active tblptr byte
 11143  011DC8  0EFC               	movlw	high _line1
 11144  011DCA  6EF7               	movwf	tblptrh,c
 11145  011DCC                     	endif
 11146  011DCC                     	if	1	;There are 3 active tblptr bytes
 11147  011DCC  0E00               	movlw	low (_line1 shr (0+16))
 11148  011DCE  6EF8               	movwf	tblptru,c
 11149  011DD0                     	endif
 11150  011DD0  0008               	tblrd		*
 11151  011DD2  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11152  011DD6  EC75  F087         	call	_lcd_string	;wreg free
 11153                           
 11154                           ;lcd.c: 132: uint8_t cash = credit_check();
 11155  011DDA  ECC4  F08F         	call	_credit_check	;wreg free
 11156  011DDE  6E2A               	movwf	displ_credit@cash,c
 11157                           
 11158                           ;lcd.c: 133: displ_hex((uint8_t) cash);
 11159  011DE0  502A               	movf	displ_credit@cash,w,c
 11160  011DE2  6E27               	movwf	displ_hex@hexnum,c
 11161  011DE4  6A28               	clrf	displ_hex@hexnum+1,c
 11162  011DE6  6A29               	clrf	displ_hex@hexnum+2,c
 11163  011DE8  EC1A  F087         	call	_displ_hex	;wreg free
 11164                           
 11165                           ;lcd.c: 134: venflags.credisplay = 0;
 11166  011DEC  982C               	bcf	_venflags,4,c
 11167  011DEE  0012               	return		;funcret
 11168  011DF0                     __end_of_displ_credit:
 11169                           	opt stack 0
 11170                           tblptru	equ	0xFF8
 11171                           tblptrh	equ	0xFF7
 11172                           tblptrl	equ	0xFF6
 11173                           tablat	equ	0xFF5
 11174                           prodh	equ	0xFF4
 11175                           prodl	equ	0xFF3
 11176                           postinc0	equ	0xFEE
 11177                           wreg	equ	0xFE8
 11178                           indf2	equ	0xFDF
 11179                           fsr2h	equ	0xFDA
 11180                           fsr2l	equ	0xFD9
 11181                           status	equ	0xFD8
 11182                           
 11183 ;; *************** function _lcd_string *****************
 11184 ;; Defined at:
 11185 ;;		line 219 in file "lcd.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;  lcdstring       2   25[COMRAM] PTR unsigned char 
 11188 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
 11189 ;;		 -> tenrand(9), setnotes(69), chanresetmsg(32), chanlinkm(55), 
 11190 ;;		 -> vendtimem(41), setimemsg(41), vendsetup(80), pricesetm2(57), 
 11191 ;;		 -> pricesetmsg(18), creditclr(16), dacmsg(13), hoppcoin(51), 
 11192 ;;		 -> initnote(37), noteerr(28), credits(13), timemsg(18), 
 11193 ;;		 -> clrline(21), enabled(10), disabled(10), sensoffmsg(31), 
 11194 ;;		 -> sensmsg(11), linkmsg(12), chanmsg(12), clrmsg(10), 
 11195 ;;		 -> onmsg(4), offmsg(4), servmsg(80), inscoin(49), 
 11196 ;;  lcdline         1   27[COMRAM] unsigned char 
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;		None
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  1    wreg      void 
 11201 ;; Registers used:
 11202 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11203 ;; Tracked objects:
 11204 ;;		On entry : 0/0
 11205 ;;		On exit  : 0/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11208 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11211 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11212 ;;Total ram usage:        5 bytes
 11213 ;; Hardware stack levels used:    1
 11214 ;; Hardware stack levels required when called:    7
 11215 ;; This function calls:
 11216 ;;		_lcd_dispadd
 11217 ;;		_lcd_write
 11218 ;;		_lcd_writeC
 11219 ;; This function is called by:
 11220 ;;		_main
 11221 ;;		_enter_service
 11222 ;;		_displ_sens
 11223 ;;		_displ_lflags
 11224 ;;		_displ_sflags
 11225 ;;		_displ_time
 11226 ;;		_displ_note
 11227 ;;		_displ_nendis
 11228 ;;		_displ_credit
 11229 ;;		_displ_noteer
 11230 ;;		_vend_init
 11231 ;;		_Hopper_coin
 11232 ;;		_Update_Hopcoin
 11233 ;;		_Sensor_set
 11234 ;;		_Clear_cred
 11235 ;;		_price_set
 11236 ;;		_set_price
 11237 ;;		_Vend_setup
 11238 ;;		_Vend_settime
 11239 ;;		_Vend_timeset
 11240 ;;		_Chan_link
 11241 ;;		_Sens_off
 11242 ;;		_Reset_settings
 11243 ;;		_set_notes
 11244 ;;		_enable_notes
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           	psect	text63
 11249  010EEA                     __ptext63:
 11250                           	opt stack 0
 11251  010EEA                     _lcd_string:
 11252                           	opt stack 22
 11253                           
 11254                           ;lcd.c: 221: if(lcdline == line1)
 11255                           
 11256                           ;incstack = 0
 11257  010EEA  0E8F               	movlw	low _line1
 11258  010EEC  6EF6               	movwf	tblptrl,c
 11259  010EEE                     	if	1	;There is more than 1 active tblptr byte
 11260  010EEE  0EFC               	movlw	high _line1
 11261  010EF0  6EF7               	movwf	tblptrh,c
 11262  010EF2                     	endif
 11263  010EF2                     	if	1	;There are 3 active tblptr bytes
 11264  010EF2  0E00               	movlw	low (_line1 shr (0+16))
 11265  010EF4  6EF8               	movwf	tblptru,c
 11266  010EF6                     	endif
 11267  010EF6  0008               	tblrd		*
 11268  010EF8  50F5               	movf	tablat,w,c
 11269  010EFA  6226               	cpfseq	lcd_string@lcdline,c
 11270  010EFC  D00B               	goto	l1508
 11271                           
 11272                           ;lcd.c: 222: {
 11273                           ;lcd.c: 223: lcd_write(dispclr);
 11274  010EFE  0E99               	movlw	low _dispclr
 11275  010F00  6EF6               	movwf	tblptrl,c
 11276  010F02                     	if	1	;There is more than 1 active tblptr byte
 11277  010F02  0EFC               	movlw	high _dispclr
 11278  010F04  6EF7               	movwf	tblptrh,c
 11279  010F06                     	endif
 11280  010F06                     	if	1	;There are 3 active tblptr bytes
 11281  010F06  0E00               	movlw	low (_dispclr shr (0+16))
 11282  010F08  6EF8               	movwf	tblptru,c
 11283  010F0A                     	endif
 11284  010F0A  0008               	tblrd		*
 11285  010F0C  50F5               	movf	tablat,w,c
 11286  010F0E  EC44  F08F         	call	_lcd_write
 11287                           
 11288                           ;lcd.c: 224: }
 11289  010F12  D004               	goto	l1509
 11290  010F14                     l1508:
 11291                           
 11292                           ;lcd.c: 225: else
 11293                           ;lcd.c: 226: {
 11294                           ;lcd.c: 228: lcd_dispadd(lcdline | 0x80);
 11295  010F14  5026               	movf	lcd_string@lcdline,w,c
 11296  010F16  0980               	iorlw	128
 11297  010F18  EC1E  F090         	call	_lcd_dispadd
 11298  010F1C                     l1509:
 11299                           
 11300                           ;lcd.c: 229: }
 11301                           ;lcd.c: 230: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
 11302  010F1C  0E00               	movlw	0
 11303  010F1E  6E44               	movwf	_stradd,c
 11304  010F20  D028               	goto	l1510
 11305  010F22                     
 11306                           ;lcd.c: 231: {
 11307                           ;lcd.c: 232: lcdata = lcdstring[stradd];
 11308  010F22  5044               	movf	_stradd,w,c
 11309  010F24  0D01               	mullw	1
 11310  010F26  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 11311  010F2A  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 11312  010F2E  50F3               	movf	prodl,w,c
 11313  010F30  2627               	addwf	??_lcd_string,f,c
 11314  010F32  50F4               	movf	prodh,w,c
 11315  010F34  2228               	addwfc	??_lcd_string+1,f,c
 11316  010F36  C027  FFF6         	movff	??_lcd_string,tblptrl
 11317  010F3A  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 11318  010F3E                     	if	0	;tblptru may be non-zero
 11319  010F3E                     	endif
 11320  010F3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11321  010F3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11322  010F40  6EF8               	movwf	tblptru,c
 11323  010F42                     	endif
 11324  010F42  0008               	tblrd		*
 11325  010F44  CFF5 F045          	movff	tablat,_lcdata
 11326                           
 11327                           ;lcd.c: 233: lcd_writeC(lcdstring[stradd]);
 11328  010F48  5044               	movf	_stradd,w,c
 11329  010F4A  0D01               	mullw	1
 11330  010F4C  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 11331  010F50  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 11332  010F54  50F3               	movf	prodl,w,c
 11333  010F56  2627               	addwf	??_lcd_string,f,c
 11334  010F58  50F4               	movf	prodh,w,c
 11335  010F5A  2228               	addwfc	??_lcd_string+1,f,c
 11336  010F5C  C027  FFF6         	movff	??_lcd_string,tblptrl
 11337  010F60  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 11338  010F64                     	if	0	;tblptru may be non-zero
 11339  010F64                     	endif
 11340  010F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11341  010F64  0E00               	movlw	low (__mediumconst shr (0+16))
 11342  010F66  6EF8               	movwf	tblptru,c
 11343  010F68                     	endif
 11344  010F68  0008               	tblrd		*
 11345  010F6A  50F5               	movf	tablat,w,c
 11346  010F6C  EC97  F08B         	call	_lcd_writeC
 11347  010F70  2A44               	incf	_stradd,f,c
 11348  010F72                     l1510:
 11349  010F72  5044               	movf	_stradd,w,c
 11350  010F74  0D01               	mullw	1
 11351  010F76  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 11352  010F7A  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 11353  010F7E  50F3               	movf	prodl,w,c
 11354  010F80  2627               	addwf	??_lcd_string,f,c
 11355  010F82  50F4               	movf	prodh,w,c
 11356  010F84  2228               	addwfc	??_lcd_string+1,f,c
 11357  010F86  C027  FFF6         	movff	??_lcd_string,tblptrl
 11358  010F8A  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 11359  010F8E                     	if	0	;tblptru may be non-zero
 11360  010F8E                     	endif
 11361  010F8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11362  010F8E  0E00               	movlw	low (__mediumconst shr (0+16))
 11363  010F90  6EF8               	movwf	tblptru,c
 11364  010F92                     	endif
 11365  010F92  0008               	tblrd		*
 11366  010F94  50F5               	movf	tablat,w,c
 11367  010F96  0900               	iorlw	0
 11368  010F98  B4D8               	btfsc	status,2,c
 11369  010F9A  0012               	return	
 11370  010F9C  D7C2               	goto	l1511
 11371  010F9E                     __end_of_lcd_string:
 11372                           	opt stack 0
 11373                           tblptru	equ	0xFF8
 11374                           tblptrh	equ	0xFF7
 11375                           tblptrl	equ	0xFF6
 11376                           tablat	equ	0xFF5
 11377                           prodh	equ	0xFF4
 11378                           prodl	equ	0xFF3
 11379                           postinc0	equ	0xFEE
 11380                           wreg	equ	0xFE8
 11381                           indf2	equ	0xFDF
 11382                           fsr2h	equ	0xFDA
 11383                           fsr2l	equ	0xFD9
 11384                           status	equ	0xFD8
 11385                           
 11386 ;; *************** function _displ_hex *****************
 11387 ;; Defined at:
 11388 ;;		line 194 in file "lcd.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  hexnum          3   28[COMRAM] unsigned um
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;  value           8    0[BANK0 ] unsigned char [8]
 11393 ;;  hexnumsave      3    8[BANK0 ] unsigned um
 11394 ;;  i               1   11[BANK0 ] char 
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  1    wreg      void 
 11397 ;; Registers used:
 11398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11399 ;; Tracked objects:
 11400 ;;		On entry : 0/0
 11401 ;;		On exit  : 0/0
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11404 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Totals:         3       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;Total ram usage:       15 bytes
 11409 ;; Hardware stack levels used:    1
 11410 ;; Hardware stack levels required when called:    7
 11411 ;; This function calls:
 11412 ;;		___ltdiv
 11413 ;;		___ltmod
 11414 ;;		_lcd_writeC
 11415 ;; This function is called by:
 11416 ;;		_displ_sens
 11417 ;;		_displ_time
 11418 ;;		_displ_credit
 11419 ;;		_displ_price
 11420 ;;		_Hopper_coin
 11421 ;;		_Update_Hopcoin
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text64
 11426  010E34                     __ptext64:
 11427                           	opt stack 0
 11428  010E34                     _displ_hex:
 11429                           	opt stack 19
 11430                           
 11431                           ;lcd.c: 196: signed char i = 0;
 11432                           
 11433                           ;incstack = 0
 11434  010E34  0E00               	movlw	0
 11435  010E36  0100               	movlb	0	; () banked
 11436  010E38  6FA7               	movwf	displ_hex@i& (0+255),b
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;lcd.c: 197: uint8_t value[8];
 11440                           ;lcd.c: 198: uint24_t hexnumsave = hexnum;
 11441  010E3A  C027  F0A4         	movff	displ_hex@hexnum,displ_hex@hexnumsave
 11442  010E3E  C028  F0A5         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
 11443  010E42  C029  F0A6         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
 11444                           
 11445                           ;lcd.c: 199: while(hexnum > 0)
 11446  010E46  D02F               	goto	l1498
 11447  010E48                     
 11448                           ; BSR set to: 0
 11449                           ;lcd.c: 200: {
 11450                           ;lcd.c: 201: value[i] = hexnum % 10;
 11451                           
 11452                           ; BSR set to: 0
 11453  010E48  51A7               	movf	displ_hex@i& (0+255),w,b
 11454  010E4A  0D01               	mullw	1
 11455  010E4C  0E9C               	movlw	low displ_hex@value
 11456  010E4E  24F3               	addwf	prodl,w,c
 11457  010E50  6ED9               	movwf	fsr2l,c
 11458  010E52  0E00               	movlw	high displ_hex@value
 11459  010E54  20F4               	addwfc	prodh,w,c
 11460  010E56  6EDA               	movwf	fsr2h,c
 11461  010E58  C027  F01D         	movff	displ_hex@hexnum,___ltmod@dividend
 11462  010E5C  C028  F01E         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
 11463  010E60  C029  F01F         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
 11464  010E64  0E0A               	movlw	10
 11465  010E66  6E20               	movwf	___ltmod@divisor,c
 11466  010E68  0E00               	movlw	0
 11467  010E6A  6E21               	movwf	___ltmod@divisor+1,c
 11468  010E6C  0E00               	movlw	0
 11469  010E6E  6E22               	movwf	___ltmod@divisor+2,c
 11470  010E70  ECAE  F08C         	call	___ltmod	;wreg free
 11471  010E74  501D               	movf	?___ltmod,w,c
 11472  010E76  6EDF               	movwf	indf2,c
 11473                           
 11474                           ;lcd.c: 202: hexnum /= 10;
 11475  010E78  C027  F01D         	movff	displ_hex@hexnum,___ltdiv@dividend
 11476  010E7C  C028  F01E         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
 11477  010E80  C029  F01F         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
 11478  010E84  0E0A               	movlw	10
 11479  010E86  6E20               	movwf	___ltdiv@divisor,c
 11480  010E88  0E00               	movlw	0
 11481  010E8A  6E21               	movwf	___ltdiv@divisor+1,c
 11482  010E8C  0E00               	movlw	0
 11483  010E8E  6E22               	movwf	___ltdiv@divisor+2,c
 11484  010E90  EC2E  F08B         	call	___ltdiv	;wreg free
 11485  010E94  C01D  F027         	movff	?___ltdiv,displ_hex@hexnum
 11486  010E98  C01E  F028         	movff	?___ltdiv+1,displ_hex@hexnum+1
 11487  010E9C  C01F  F029         	movff	?___ltdiv+2,displ_hex@hexnum+2
 11488                           
 11489                           ;lcd.c: 203: i = i + 1;
 11490  010EA0  0100               	movlb	0	; () banked
 11491  010EA2  29A7               	incf	displ_hex@i& (0+255),w,b
 11492  010EA4  6FA7               	movwf	displ_hex@i& (0+255),b
 11493  010EA6                     l1498:
 11494                           
 11495                           ; BSR set to: 0
 11496                           
 11497                           ; BSR set to: 0
 11498  010EA6  5027               	movf	displ_hex@hexnum,w,c
 11499  010EA8  1028               	iorwf	displ_hex@hexnum+1,w,c
 11500  010EAA  1029               	iorwf	displ_hex@hexnum+2,w,c
 11501  010EAC  B4D8               	btfsc	status,2,c
 11502  010EAE  D00E               	goto	l1501
 11503  010EB0  D7CB               	goto	l1499
 11504  010EB2                     
 11505                           ; BSR set to: 0
 11506                           ;lcd.c: 207: {
 11507                           ;lcd.c: 208: i--;
 11508                           
 11509                           ; BSR set to: 0
 11510  010EB2  07A7               	decf	displ_hex@i& (0+255),f,b
 11511                           
 11512                           ; BSR set to: 0
 11513                           ;lcd.c: 209: lcd_writeC(value[i] | 0x30);
 11514  010EB4  51A7               	movf	displ_hex@i& (0+255),w,b
 11515  010EB6  0D01               	mullw	1
 11516  010EB8  0E9C               	movlw	low displ_hex@value
 11517  010EBA  24F3               	addwf	prodl,w,c
 11518  010EBC  6ED9               	movwf	fsr2l,c
 11519  010EBE  0E00               	movlw	high displ_hex@value
 11520  010EC0  20F4               	addwfc	prodh,w,c
 11521  010EC2  6EDA               	movwf	fsr2h,c
 11522  010EC4  50DF               	movf	indf2,w,c
 11523  010EC6  0930               	iorlw	48
 11524  010EC8  EC97  F08B         	call	_lcd_writeC
 11525  010ECC                     l1501:
 11526  010ECC  0100               	movlb	0	; () banked
 11527  010ECE  51A7               	movf	displ_hex@i& (0+255),w,b
 11528  010ED0  0A80               	xorlw	128
 11529  010ED2  0F7F               	addlw	-129
 11530  010ED4  B0D8               	btfsc	status,0,c
 11531  010ED6  D7ED               	goto	l1502
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;lcd.c: 210: }
 11535                           ;lcd.c: 212: if(hexnumsave == 0)
 11536                           
 11537                           ; BSR set to: 0
 11538  010ED8  51A4               	movf	displ_hex@hexnumsave& (0+255),w,b
 11539  010EDA  11A5               	iorwf	(displ_hex@hexnumsave+1)& (0+255),w,b
 11540  010EDC  11A6               	iorwf	(displ_hex@hexnumsave+2)& (0+255),w,b
 11541  010EDE  A4D8               	btfss	status,2,c
 11542  010EE0  0012               	return	
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;lcd.c: 213: {
 11546                           ;lcd.c: 214: lcd_writeC(0x30);
 11547  010EE2  0E30               	movlw	48
 11548  010EE4  EC97  F08B         	call	_lcd_writeC
 11549  010EE8  0012               	return	
 11550  010EEA                     __end_of_displ_hex:
 11551                           	opt stack 0
 11552                           tblptru	equ	0xFF8
 11553                           tblptrh	equ	0xFF7
 11554                           tblptrl	equ	0xFF6
 11555                           tablat	equ	0xFF5
 11556                           prodh	equ	0xFF4
 11557                           prodl	equ	0xFF3
 11558                           postinc0	equ	0xFEE
 11559                           wreg	equ	0xFE8
 11560                           indf2	equ	0xFDF
 11561                           fsr2h	equ	0xFDA
 11562                           fsr2l	equ	0xFD9
 11563                           status	equ	0xFD8
 11564                           
 11565 ;; *************** function _lcd_writeC *****************
 11566 ;; Defined at:
 11567 ;;		line 246 in file "lcd.c"
 11568 ;; Parameters:    Size  Location     Type
 11569 ;;  lcdata          1    wreg     unsigned char 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;  lcdata          1   24[COMRAM] unsigned char 
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11585 ;;Total ram usage:        1 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:    6
 11588 ;; This function calls:
 11589 ;;		_lcd_dispadd
 11590 ;;		_lcd_write
 11591 ;; This function is called by:
 11592 ;;		_displ_lflags
 11593 ;;		_displ_sflags
 11594 ;;		_displ_time
 11595 ;;		_displ_code
 11596 ;;		_displ_hex
 11597 ;;		_lcd_string
 11598 ;;		_displ_price
 11599 ;;		_lcd_test
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603                           	psect	text65
 11604  01172E                     __ptext65:
 11605                           	opt stack 0
 11606  01172E                     _lcd_writeC:
 11607                           	opt stack 22
 11608                           
 11609                           ;incstack = 0
 11610                           ;lcd_writeC@lcdata stored from wreg
 11611  01172E  6E23               	movwf	lcd_writeC@lcdata,c
 11612  011730  8487               	bsf	3975,2,c	;# 
 11613                           
 11614                           ;lcd.c: 251: lcd_write(lcdata);
 11615  011732  5023               	movf	lcd_writeC@lcdata,w,c
 11616  011734  EC44  F08F         	call	_lcd_write
 11617                           
 11618                           ;lcd.c: 255: switch(bflag)
 11619  011738  D021               	goto	l1519
 11620  01173A  0E8E               	movlw	low _line2
 11621  01173C  6EF6               	movwf	tblptrl,c
 11622  01173E                     	if	1	;There is more than 1 active tblptr byte
 11623  01173E  0EFC               	movlw	high _line2
 11624  011740  6EF7               	movwf	tblptrh,c
 11625  011742                     	endif
 11626  011742                     	if	1	;There are 3 active tblptr bytes
 11627  011742  0E00               	movlw	low (_line2 shr (0+16))
 11628  011744  6EF8               	movwf	tblptru,c
 11629  011746                     	endif
 11630  011746  0008               	tblrd		*
 11631  011748  50F5               	movf	tablat,w,c
 11632  01174A  EC1E  F090         	call	_lcd_dispadd
 11633                           
 11634                           ;lcd.c: 258: break;
 11635  01174E  D020               	goto	l1521
 11636  011750  0E8D               	movlw	low _line3
 11637  011752  6EF6               	movwf	tblptrl,c
 11638  011754                     	if	1	;There is more than 1 active tblptr byte
 11639  011754  0EFC               	movlw	high _line3
 11640  011756  6EF7               	movwf	tblptrh,c
 11641  011758                     	endif
 11642  011758                     	if	1	;There are 3 active tblptr bytes
 11643  011758  0E00               	movlw	low (_line3 shr (0+16))
 11644  01175A  6EF8               	movwf	tblptru,c
 11645  01175C                     	endif
 11646  01175C  0008               	tblrd		*
 11647  01175E  50F5               	movf	tablat,w,c
 11648  011760  EC1E  F090         	call	_lcd_dispadd
 11649                           
 11650                           ;lcd.c: 260: break;
 11651  011764  D015               	goto	l1521
 11652  011766  0E8C               	movlw	low _line4
 11653  011768  6EF6               	movwf	tblptrl,c
 11654  01176A                     	if	1	;There is more than 1 active tblptr byte
 11655  01176A  0EFC               	movlw	high _line4
 11656  01176C  6EF7               	movwf	tblptrh,c
 11657  01176E                     	endif
 11658  01176E                     	if	1	;There are 3 active tblptr bytes
 11659  01176E  0E00               	movlw	low (_line4 shr (0+16))
 11660  011770  6EF8               	movwf	tblptru,c
 11661  011772                     	endif
 11662  011772  0008               	tblrd		*
 11663  011774  50F5               	movf	tablat,w,c
 11664  011776  EC1E  F090         	call	_lcd_dispadd
 11665                           
 11666                           ;lcd.c: 262: }
 11667  01177A  D00A               	goto	l1521
 11668  01177C                     l1519:
 11669  01177C  5046               	movf	_bflag,w,c
 11670                           
 11671                           ; Switch size 1, requested type "space"
 11672                           ; Number of cases is 3, Range of values is 19 to 83
 11673                           ; switch strategies available:
 11674                           ; Name         Instructions Cycles
 11675                           ; simple_byte           10     6 (average)
 11676                           ;	Chosen strategy is simple_byte
 11677  01177E  0A13               	xorlw	19	; case 19
 11678  011780  B4D8               	btfsc	status,2,c
 11679  011782  D7DB               	goto	l1520
 11680  011784  0A34               	xorlw	52	; case 39
 11681  011786  B4D8               	btfsc	status,2,c
 11682  011788  D7EE               	goto	l1523
 11683  01178A  0A74               	xorlw	116	; case 83
 11684  01178C  B4D8               	btfsc	status,2,c
 11685  01178E  D7E0               	goto	l1522
 11686  011790                     l1521:
 11687  011790  9487               	bcf	3975,2,c	;# 
 11688  011792  0012               	return		;funcret
 11689  011794                     __end_of_lcd_writeC:
 11690                           	opt stack 0
 11691                           tblptru	equ	0xFF8
 11692                           tblptrh	equ	0xFF7
 11693                           tblptrl	equ	0xFF6
 11694                           tablat	equ	0xFF5
 11695                           prodh	equ	0xFF4
 11696                           prodl	equ	0xFF3
 11697                           postinc0	equ	0xFEE
 11698                           wreg	equ	0xFE8
 11699                           indf2	equ	0xFDF
 11700                           fsr2h	equ	0xFDA
 11701                           fsr2l	equ	0xFD9
 11702                           status	equ	0xFD8
 11703                           
 11704 ;; *************** function _lcd_dispadd *****************
 11705 ;; Defined at:
 11706 ;;		line 266 in file "lcd.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;  lcdaddress      1    wreg     unsigned char 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  lcdaddress      1   22[COMRAM] unsigned char 
 11711 ;;  lcdatasave      1   23[COMRAM] unsigned char 
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  1    wreg      void 
 11714 ;; Registers used:
 11715 ;;		wreg, status,2, status,0, cstack
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;Total ram usage:        2 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:    5
 11728 ;; This function calls:
 11729 ;;		_lcd_write
 11730 ;; This function is called by:
 11731 ;;		_displ_sens
 11732 ;;		_displ_lflags
 11733 ;;		_lcd_string
 11734 ;;		_displ_price
 11735 ;;		_lcd_writeC
 11736 ;;		_Hopper_coin
 11737 ;;		_Update_Hopcoin
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text66
 11742  01203C                     __ptext66:
 11743                           	opt stack 0
 11744  01203C                     _lcd_dispadd:
 11745                           	opt stack 22
 11746                           
 11747                           ;incstack = 0
 11748                           ;lcd_dispadd@lcdaddress stored from wreg
 11749  01203C  6E21               	movwf	lcd_dispadd@lcdaddress,c
 11750                           
 11751                           ;lcd.c: 268: uint8_t lcdatasave = lcdata;
 11752  01203E  C045  F022         	movff	_lcdata,lcd_dispadd@lcdatasave
 11753  012042  9487               	bcf	3975,2,c	;# 
 11754                           
 11755                           ;lcd.c: 271: lcd_write(lcdaddress | 0x80);
 11756  012044  5021               	movf	lcd_dispadd@lcdaddress,w,c
 11757  012046  0980               	iorlw	128
 11758  012048  EC44  F08F         	call	_lcd_write
 11759  01204C  8487               	bsf	3975,2,c	;# 
 11760                           
 11761                           ;lcd.c: 273: lcdata = lcdatasave;
 11762  01204E  C022  F045         	movff	lcd_dispadd@lcdatasave,_lcdata
 11763  012052  0012               	return		;funcret
 11764  012054                     __end_of_lcd_dispadd:
 11765                           	opt stack 0
 11766                           tblptru	equ	0xFF8
 11767                           tblptrh	equ	0xFF7
 11768                           tblptrl	equ	0xFF6
 11769                           tablat	equ	0xFF5
 11770                           prodh	equ	0xFF4
 11771                           prodl	equ	0xFF3
 11772                           postinc0	equ	0xFEE
 11773                           wreg	equ	0xFE8
 11774                           indf2	equ	0xFDF
 11775                           fsr2h	equ	0xFDA
 11776                           fsr2l	equ	0xFD9
 11777                           status	equ	0xFD8
 11778                           
 11779 ;; *************** function _lcd_write *****************
 11780 ;; Defined at:
 11781 ;;		line 278 in file "lcd.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;  lcdata          1    wreg     unsigned char 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  lcdata          1   21[COMRAM] unsigned char 
 11786 ;;  savelatd        1   20[COMRAM] unsigned char 
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  1    wreg      void 
 11789 ;; Registers used:
 11790 ;;		wreg, status,2, status,0, cstack
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;Total ram usage:        2 bytes
 11801 ;; Hardware stack levels used:    1
 11802 ;; Hardware stack levels required when called:    4
 11803 ;; This function calls:
 11804 ;;		_lcd_clockE
 11805 ;;		_read_busy
 11806 ;; This function is called by:
 11807 ;;		_lcd_init
 11808 ;;		_displ_note
 11809 ;;		_lcd_string
 11810 ;;		_displ_price
 11811 ;;		_lcd_writeC
 11812 ;;		_lcd_dispadd
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           	psect	text67
 11817  011E88                     __ptext67:
 11818                           	opt stack 0
 11819  011E88                     _lcd_write:
 11820                           	opt stack 23
 11821                           
 11822                           ;incstack = 0
 11823                           ;lcd_write@lcdata stored from wreg
 11824  011E88  6E20               	movwf	lcd_write@lcdata,c
 11825                           
 11826                           ;lcd.c: 280: uint8_t savelatd = LATD;
 11827  011E8A  CF86 F01F          	movff	3974,lcd_write@savelatd	;volatile
 11828                           
 11829                           ;lcd.c: 283: bflag = read_busy();
 11830  011E8E  ECBD  F08D         	call	_read_busy	;wreg free
 11831  011E92  D002               	goto	L16
 11832  011E94                     
 11833                           ;lcd.c: 285: {
 11834                           ;lcd.c: 286: bflag = read_busy();
 11835  011E94  ECBD  F08D         	call	_read_busy	;wreg free
 11836  011E98                     L16:
 11837  011E98  6E46               	movwf	_bflag,c
 11838  011E9A  BE46               	btfsc	_bflag,7,c
 11839  011E9C  D7FB               	goto	l1531
 11840                           
 11841                           ;lcd.c: 287: }
 11842                           ;lcd.c: 288: LATD = (lcdata >> 4) & 0x0F;
 11843  011E9E  3820               	swapf	lcd_write@lcdata,w,c
 11844  011EA0  0B0F               	andlw	15
 11845  011EA2  0B0F               	andlw	15
 11846  011EA4  6E86               	movwf	3974,c	;volatile
 11847                           
 11848                           ;lcd.c: 290: lcd_clockE();
 11849  011EA6  EC9E  F090         	call	_lcd_clockE	;wreg free
 11850                           
 11851                           ;lcd.c: 292: LATD = lcdata & 0x0F;
 11852  011EAA  5020               	movf	lcd_write@lcdata,w,c
 11853  011EAC  0B0F               	andlw	15
 11854  011EAE  6E86               	movwf	3974,c	;volatile
 11855                           
 11856                           ;lcd.c: 293: lcd_clockE();
 11857  011EB0  EC9E  F090         	call	_lcd_clockE	;wreg free
 11858                           
 11859                           ;lcd.c: 294: LATD = savelatd;
 11860  011EB4  C01F  FF86         	movff	lcd_write@savelatd,3974	;volatile
 11861  011EB8  0012               	return		;funcret
 11862  011EBA                     __end_of_lcd_write:
 11863                           	opt stack 0
 11864                           tblptru	equ	0xFF8
 11865                           tblptrh	equ	0xFF7
 11866                           tblptrl	equ	0xFF6
 11867                           tablat	equ	0xFF5
 11868                           prodh	equ	0xFF4
 11869                           prodl	equ	0xFF3
 11870                           postinc0	equ	0xFEE
 11871                           wreg	equ	0xFE8
 11872                           indf2	equ	0xFDF
 11873                           fsr2h	equ	0xFDA
 11874                           fsr2l	equ	0xFD9
 11875                           status	equ	0xFD8
 11876                           
 11877 ;; *************** function _read_busy *****************
 11878 ;; Defined at:
 11879 ;;		line 309 in file "lcd.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;		None
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;  savelatd        1   19[COMRAM] unsigned char 
 11884 ;;  savelate        1   18[COMRAM] unsigned char 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      char 
 11887 ;; Registers used:
 11888 ;;		wreg, status,2, status,0, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11898 ;;Total ram usage:        2 bytes
 11899 ;; Hardware stack levels used:    1
 11900 ;; Hardware stack levels required when called:    3
 11901 ;; This function calls:
 11902 ;;		_lcd_clockH
 11903 ;;		_lcd_clockL
 11904 ;; This function is called by:
 11905 ;;		_lcd_write
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text68
 11910  011B7A                     __ptext68:
 11911                           	opt stack 0
 11912  011B7A                     _read_busy:
 11913                           	opt stack 23
 11914                           
 11915                           ;lcd.c: 311: uint8_t savelate = LATE;
 11916                           
 11917                           ;incstack = 0
 11918  011B7A  CF87 F01D          	movff	3975,read_busy@savelate	;volatile
 11919                           
 11920                           ;lcd.c: 312: uint8_t savelatd = LATD;
 11921  011B7E  CF86 F01E          	movff	3974,read_busy@savelatd	;volatile
 11922  011B82  9487               	bcf	3975,2,c	;# 
 11923  011B84  8287               	bsf	3975,1,c	;# 
 11924                           
 11925                           ;lcd.c: 315: TRISD = (TRISD | 0x0F);
 11926  011B86  508B               	movf	3979,w,c	;volatile
 11927  011B88  090F               	iorlw	15
 11928  011B8A  6E8B               	movwf	3979,c	;volatile
 11929                           
 11930                           ;lcd.c: 316: lcd_clockH();
 11931  011B8C  ECB3  F090         	call	_lcd_clockH	;wreg free
 11932                           
 11933                           ;lcd.c: 317: bflag = (PORTD << 4);
 11934  011B90  3890               	swapf	3984,w,c	;volatile
 11935  011B92  0BF0               	andlw	240
 11936  011B94  6E46               	movwf	_bflag,c
 11937                           
 11938                           ;lcd.c: 318: lcd_clockL();
 11939  011B96  ECAF  F090         	call	_lcd_clockL	;wreg free
 11940                           
 11941                           ;lcd.c: 319: lcd_clockH();
 11942  011B9A  ECB3  F090         	call	_lcd_clockH	;wreg free
 11943                           
 11944                           ;lcd.c: 320: bflag = bflag | (PORTD & 0x0F);
 11945  011B9E  5090               	movf	3984,w,c	;volatile
 11946  011BA0  0B0F               	andlw	15
 11947  011BA2  1046               	iorwf	_bflag,w,c
 11948  011BA4  6E46               	movwf	_bflag,c
 11949  011BA6  9087               	bcf	3975,0,c	;# 
 11950                           
 11951                           ;lcd.c: 322: TRISD = (TRISD & 0xF0);
 11952  011BA8  508B               	movf	3979,w,c	;volatile
 11953  011BAA  0BF0               	andlw	240
 11954  011BAC  6E8B               	movwf	3979,c	;volatile
 11955  011BAE  9287               	bcf	3975,1,c	;# 
 11956                           
 11957                           ;lcd.c: 324: LATD = savelatd;
 11958  011BB0  C01E  FF86         	movff	read_busy@savelatd,3974	;volatile
 11959                           
 11960                           ;lcd.c: 325: LATE = savelate;
 11961  011BB4  C01D  FF87         	movff	read_busy@savelate,3975	;volatile
 11962                           
 11963                           ;lcd.c: 326: return(bflag);
 11964  011BB8  5046               	movf	_bflag,w,c
 11965  011BBA  0012               	return	
 11966  011BBC                     __end_of_read_busy:
 11967                           	opt stack 0
 11968                           tblptru	equ	0xFF8
 11969                           tblptrh	equ	0xFF7
 11970                           tblptrl	equ	0xFF6
 11971                           tablat	equ	0xFF5
 11972                           prodh	equ	0xFF4
 11973                           prodl	equ	0xFF3
 11974                           postinc0	equ	0xFEE
 11975                           wreg	equ	0xFE8
 11976                           indf2	equ	0xFDF
 11977                           fsr2h	equ	0xFDA
 11978                           fsr2l	equ	0xFD9
 11979                           status	equ	0xFD8
 11980                           
 11981 ;; *************** function _lcd_clockL *****************
 11982 ;; Defined at:
 11983 ;;		line 341 in file "lcd.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;		None
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;		None
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  1    wreg      void 
 11990 ;; Registers used:
 11991 ;;		None
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12001 ;;Total ram usage:        0 bytes
 12002 ;; Hardware stack levels used:    1
 12003 ;; Hardware stack levels required when called:    2
 12004 ;; This function calls:
 12005 ;;		Nothing
 12006 ;; This function is called by:
 12007 ;;		_read_busy
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           	psect	text69
 12012  01215E                     __ptext69:
 12013                           	opt stack 0
 12014  01215E                     _lcd_clockL:
 12015                           	opt stack 23
 12016                           
 12017                           ;incstack = 0
 12018  01215E  9087               	bcf	3975,0,c	;# 
 12019                           
 12020                           ;lcd.c: 344: _delay((unsigned long)((1)*(12000000/4000000.0)));
 12021  012160  D000               	nop2		;2 cycle nop
 12022  012162  F000               	nop	
 12023  012164  0012               	return		;funcret
 12024  012166                     __end_of_lcd_clockL:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           postinc0	equ	0xFEE
 12033                           wreg	equ	0xFE8
 12034                           indf2	equ	0xFDF
 12035                           fsr2h	equ	0xFDA
 12036                           fsr2l	equ	0xFD9
 12037                           status	equ	0xFD8
 12038                           
 12039 ;; *************** function _lcd_clockH *****************
 12040 ;; Defined at:
 12041 ;;		line 333 in file "lcd.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;		None
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		None
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;Total ram usage:        0 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    2
 12062 ;; This function calls:
 12063 ;;		Nothing
 12064 ;; This function is called by:
 12065 ;;		_read_busy
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           	psect	text70
 12070  012166                     __ptext70:
 12071                           	opt stack 0
 12072  012166                     _lcd_clockH:
 12073                           	opt stack 23
 12074                           
 12075                           ;incstack = 0
 12076  012166  8087               	bsf	3975,0,c	;# 
 12077                           
 12078                           ;lcd.c: 336: _delay((unsigned long)((1)*(12000000/4000000.0)));
 12079  012168  D000               	nop2		;2 cycle nop
 12080  01216A  F000               	nop	
 12081  01216C  0012               	return		;funcret
 12082  01216E                     __end_of_lcd_clockH:
 12083                           	opt stack 0
 12084                           tblptru	equ	0xFF8
 12085                           tblptrh	equ	0xFF7
 12086                           tblptrl	equ	0xFF6
 12087                           tablat	equ	0xFF5
 12088                           prodh	equ	0xFF4
 12089                           prodl	equ	0xFF3
 12090                           postinc0	equ	0xFEE
 12091                           wreg	equ	0xFE8
 12092                           indf2	equ	0xFDF
 12093                           fsr2h	equ	0xFDA
 12094                           fsr2l	equ	0xFD9
 12095                           status	equ	0xFD8
 12096                           
 12097 ;; *************** function _lcd_clockE *****************
 12098 ;; Defined at:
 12099 ;;		line 349 in file "lcd.c"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;		None
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;		None
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  1    wreg      void 
 12106 ;; Registers used:
 12107 ;;		None
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;Total ram usage:        0 bytes
 12118 ;; Hardware stack levels used:    1
 12119 ;; Hardware stack levels required when called:    2
 12120 ;; This function calls:
 12121 ;;		Nothing
 12122 ;; This function is called by:
 12123 ;;		_lcd_init
 12124 ;;		_lcd_write
 12125 ;; This function uses a non-reentrant model
 12126 ;;
 12127                           
 12128                           	psect	text71
 12129  01213C                     __ptext71:
 12130                           	opt stack 0
 12131  01213C                     _lcd_clockE:
 12132                           	opt stack 24
 12133                           
 12134                           ;incstack = 0
 12135  01213C  8087               	bsf	3975,0,c	;# 
 12136                           
 12137                           ;lcd.c: 352: _delay((unsigned long)((1)*(12000000/4000000.0)));
 12138  01213E  D000               	nop2		;2 cycle nop
 12139  012140  F000               	nop	
 12140  012142  9087               	bcf	3975,0,c	;# 
 12141                           
 12142                           ;lcd.c: 354: _delay((unsigned long)((1)*(12000000/4000000.0)));
 12143  012144  D000               	nop2		;2 cycle nop
 12144  012146  F000               	nop	
 12145  012148  0012               	return		;funcret
 12146  01214A                     __end_of_lcd_clockE:
 12147                           	opt stack 0
 12148                           tblptru	equ	0xFF8
 12149                           tblptrh	equ	0xFF7
 12150                           tblptrl	equ	0xFF6
 12151                           tablat	equ	0xFF5
 12152                           prodh	equ	0xFF4
 12153                           prodl	equ	0xFF3
 12154                           postinc0	equ	0xFEE
 12155                           wreg	equ	0xFE8
 12156                           indf2	equ	0xFDF
 12157                           fsr2h	equ	0xFDA
 12158                           fsr2l	equ	0xFD9
 12159                           status	equ	0xFD8
 12160                           
 12161 ;; *************** function ___ltmod *****************
 12162 ;; Defined at:
 12163 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltmod.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;  dividend        3   18[COMRAM] unsigned um
 12166 ;;  divisor         3   21[COMRAM] unsigned um
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;  counter         1   24[COMRAM] unsigned char 
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  3   18[COMRAM] unsigned um
 12171 ;; Registers used:
 12172 ;;		wreg, status,2, status,0
 12173 ;; Tracked objects:
 12174 ;;		On entry : 0/0
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12178 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;Total ram usage:        7 bytes
 12183 ;; Hardware stack levels used:    1
 12184 ;; Hardware stack levels required when called:    2
 12185 ;; This function calls:
 12186 ;;		Nothing
 12187 ;; This function is called by:
 12188 ;;		_displ_hex
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           	psect	text72
 12193  01195C                     __ptext72:
 12194                           	opt stack 0
 12195  01195C                     ___ltmod:
 12196                           	opt stack 23
 12197                           
 12198                           ;incstack = 0
 12199  01195C  5020               	movf	___ltmod@divisor,w,c
 12200  01195E  1021               	iorwf	___ltmod@divisor+1,w,c
 12201  011960  1022               	iorwf	___ltmod@divisor+2,w,c
 12202  011962  B4D8               	btfsc	status,2,c
 12203  011964  D01E               	goto	l4074
 12204  011966  0E01               	movlw	1
 12205  011968  6E23               	movwf	___ltmod@counter,c
 12206  01196A  D005               	goto	l4069
 12207  01196C  90D8               	bcf	status,0,c
 12208  01196E  3620               	rlcf	___ltmod@divisor,f,c
 12209  011970  3621               	rlcf	___ltmod@divisor+1,f,c
 12210  011972  3622               	rlcf	___ltmod@divisor+2,f,c
 12211  011974  2A23               	incf	___ltmod@counter,f,c
 12212  011976                     l4069:
 12213  011976  AE22               	btfss	___ltmod@divisor+2,7,c
 12214  011978  D7F9               	goto	l4070
 12215  01197A                     u2740:
 12216  01197A  5020               	movf	___ltmod@divisor,w,c
 12217  01197C  5C1D               	subwf	___ltmod@dividend,w,c
 12218  01197E  5021               	movf	___ltmod@divisor+1,w,c
 12219  011980  581E               	subwfb	___ltmod@dividend+1,w,c
 12220  011982  5022               	movf	___ltmod@divisor+2,w,c
 12221  011984  581F               	subwfb	___ltmod@dividend+2,w,c
 12222  011986  A0D8               	btfss	status,0,c
 12223  011988  D006               	goto	l4073
 12224  01198A  5020               	movf	___ltmod@divisor,w,c
 12225  01198C  5E1D               	subwf	___ltmod@dividend,f,c
 12226  01198E  5021               	movf	___ltmod@divisor+1,w,c
 12227  011990  5A1E               	subwfb	___ltmod@dividend+1,f,c
 12228  011992  5022               	movf	___ltmod@divisor+2,w,c
 12229  011994  5A1F               	subwfb	___ltmod@dividend+2,f,c
 12230  011996                     l4073:
 12231  011996  90D8               	bcf	status,0,c
 12232  011998  3222               	rrcf	___ltmod@divisor+2,f,c
 12233  01199A  3221               	rrcf	___ltmod@divisor+1,f,c
 12234  01199C  3220               	rrcf	___ltmod@divisor,f,c
 12235  01199E  2E23               	decfsz	___ltmod@counter,f,c
 12236  0119A0  D7EC               	goto	u2740
 12237  0119A2                     l4074:
 12238  0119A2  C01D  F01D         	movff	___ltmod@dividend,?___ltmod
 12239  0119A6  C01E  F01E         	movff	___ltmod@dividend+1,?___ltmod+1
 12240  0119AA  C01F  F01F         	movff	___ltmod@dividend+2,?___ltmod+2
 12241  0119AE  0012               	return		;funcret
 12242  0119B0                     __end_of___ltmod:
 12243                           	opt stack 0
 12244                           tblptru	equ	0xFF8
 12245                           tblptrh	equ	0xFF7
 12246                           tblptrl	equ	0xFF6
 12247                           tablat	equ	0xFF5
 12248                           prodh	equ	0xFF4
 12249                           prodl	equ	0xFF3
 12250                           postinc0	equ	0xFEE
 12251                           wreg	equ	0xFE8
 12252                           indf2	equ	0xFDF
 12253                           fsr2h	equ	0xFDA
 12254                           fsr2l	equ	0xFD9
 12255                           status	equ	0xFD8
 12256                           
 12257 ;; *************** function ___ltdiv *****************
 12258 ;; Defined at:
 12259 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltdiv.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;  dividend        3   18[COMRAM] unsigned um
 12262 ;;  divisor         3   21[COMRAM] unsigned um
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;  quotient        3   24[COMRAM] unsigned um
 12265 ;;  counter         1   27[COMRAM] unsigned char 
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  3   18[COMRAM] unsigned um
 12268 ;; Registers used:
 12269 ;;		wreg, status,2, status,0
 12270 ;; Tracked objects:
 12271 ;;		On entry : 0/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12275 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12276 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12278 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12279 ;;Total ram usage:       10 bytes
 12280 ;; Hardware stack levels used:    1
 12281 ;; Hardware stack levels required when called:    2
 12282 ;; This function calls:
 12283 ;;		Nothing
 12284 ;; This function is called by:
 12285 ;;		_displ_hex
 12286 ;; This function uses a non-reentrant model
 12287 ;;
 12288                           
 12289                           	psect	text73
 12290  01165C                     __ptext73:
 12291                           	opt stack 0
 12292  01165C                     ___ltdiv:
 12293                           	opt stack 23
 12294                           
 12295                           ;incstack = 0
 12296  01165C  0E00               	movlw	0
 12297  01165E  6E23               	movwf	___ltdiv@quotient,c
 12298  011660  0E00               	movlw	0
 12299  011662  6E24               	movwf	___ltdiv@quotient+1,c
 12300  011664  0E00               	movlw	0
 12301  011666  6E25               	movwf	___ltdiv@quotient+2,c
 12302  011668  5020               	movf	___ltdiv@divisor,w,c
 12303  01166A  1021               	iorwf	___ltdiv@divisor+1,w,c
 12304  01166C  1022               	iorwf	___ltdiv@divisor+2,w,c
 12305  01166E  B4D8               	btfsc	status,2,c
 12306  011670  D023               	goto	l4064
 12307  011672  0E01               	movlw	1
 12308  011674  6E26               	movwf	___ltdiv@counter,c
 12309  011676  D005               	goto	l4059
 12310  011678  90D8               	bcf	status,0,c
 12311  01167A  3620               	rlcf	___ltdiv@divisor,f,c
 12312  01167C  3621               	rlcf	___ltdiv@divisor+1,f,c
 12313  01167E  3622               	rlcf	___ltdiv@divisor+2,f,c
 12314  011680  2A26               	incf	___ltdiv@counter,f,c
 12315  011682                     l4059:
 12316  011682  AE22               	btfss	___ltdiv@divisor+2,7,c
 12317  011684  D7F9               	goto	l4060
 12318  011686                     u2710:
 12319  011686  90D8               	bcf	status,0,c
 12320  011688  3623               	rlcf	___ltdiv@quotient,f,c
 12321  01168A  3624               	rlcf	___ltdiv@quotient+1,f,c
 12322  01168C  3625               	rlcf	___ltdiv@quotient+2,f,c
 12323  01168E  5020               	movf	___ltdiv@divisor,w,c
 12324  011690  5C1D               	subwf	___ltdiv@dividend,w,c
 12325  011692  5021               	movf	___ltdiv@divisor+1,w,c
 12326  011694  581E               	subwfb	___ltdiv@dividend+1,w,c
 12327  011696  5022               	movf	___ltdiv@divisor+2,w,c
 12328  011698  581F               	subwfb	___ltdiv@dividend+2,w,c
 12329  01169A  A0D8               	btfss	status,0,c
 12330  01169C  D007               	goto	l4063
 12331  01169E  5020               	movf	___ltdiv@divisor,w,c
 12332  0116A0  5E1D               	subwf	___ltdiv@dividend,f,c
 12333  0116A2  5021               	movf	___ltdiv@divisor+1,w,c
 12334  0116A4  5A1E               	subwfb	___ltdiv@dividend+1,f,c
 12335  0116A6  5022               	movf	___ltdiv@divisor+2,w,c
 12336  0116A8  5A1F               	subwfb	___ltdiv@dividend+2,f,c
 12337  0116AA  8023               	bsf	___ltdiv@quotient,0,c
 12338  0116AC                     l4063:
 12339  0116AC  90D8               	bcf	status,0,c
 12340  0116AE  3222               	rrcf	___ltdiv@divisor+2,f,c
 12341  0116B0  3221               	rrcf	___ltdiv@divisor+1,f,c
 12342  0116B2  3220               	rrcf	___ltdiv@divisor,f,c
 12343  0116B4  2E26               	decfsz	___ltdiv@counter,f,c
 12344  0116B6  D7E7               	goto	u2710
 12345  0116B8                     l4064:
 12346  0116B8  C023  F01D         	movff	___ltdiv@quotient,?___ltdiv
 12347  0116BC  C024  F01E         	movff	___ltdiv@quotient+1,?___ltdiv+1
 12348  0116C0  C025  F01F         	movff	___ltdiv@quotient+2,?___ltdiv+2
 12349  0116C4  0012               	return		;funcret
 12350  0116C6                     __end_of___ltdiv:
 12351                           	opt stack 0
 12352                           tblptru	equ	0xFF8
 12353                           tblptrh	equ	0xFF7
 12354                           tblptrl	equ	0xFF6
 12355                           tablat	equ	0xFF5
 12356                           prodh	equ	0xFF4
 12357                           prodl	equ	0xFF3
 12358                           postinc0	equ	0xFEE
 12359                           wreg	equ	0xFE8
 12360                           indf2	equ	0xFDF
 12361                           fsr2h	equ	0xFDA
 12362                           fsr2l	equ	0xFD9
 12363                           status	equ	0xFD8
 12364                           
 12365 ;; *************** function _credit_check *****************
 12366 ;; Defined at:
 12367 ;;		line 124 in file "vend.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;		None
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;		None
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      unsigned char 
 12374 ;; Registers used:
 12375 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 0/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;Total ram usage:        0 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; Hardware stack levels required when called:    3
 12388 ;; This function calls:
 12389 ;;		_DATAEE_ReadByte
 12390 ;; This function is called by:
 12391 ;;		_displ_credit
 12392 ;;		_vend_init
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text74
 12397  011F88                     __ptext74:
 12398                           	opt stack 0
 12399  011F88                     _credit_check:
 12400                           	opt stack 26
 12401                           
 12402                           ;vend.c: 126: cash = DATAEE_ReadByte(credmem);
 12403                           
 12404                           ;incstack = 0
 12405  011F88  0E61               	movlw	low _credmem
 12406  011F8A  6EF6               	movwf	tblptrl,c
 12407  011F8C                     	if	1	;There is more than 1 active tblptr byte
 12408  011F8C  0EFC               	movlw	high _credmem
 12409  011F8E  6EF7               	movwf	tblptrh,c
 12410  011F90                     	endif
 12411  011F90                     	if	1	;There are 3 active tblptr bytes
 12412  011F90  0E00               	movlw	low (_credmem shr (0+16))
 12413  011F92  6EF8               	movwf	tblptru,c
 12414  011F94                     	endif
 12415  011F94  0009               	tblrd		*+
 12416  011F96  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 12417  011F9A  000A               	tblrd		*-
 12418  011F9C  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 12419  011FA0  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
 12420  011FA4  6E3A               	movwf	_cash,c	;volatile
 12421                           
 12422                           ;vend.c: 127: return(cash);
 12423  011FA6  503A               	movf	_cash,w,c	;volatile
 12424  011FA8  0012               	return	
 12425  011FAA                     __end_of_credit_check:
 12426                           	opt stack 0
 12427                           tblptru	equ	0xFF8
 12428                           tblptrh	equ	0xFF7
 12429                           tblptrl	equ	0xFF6
 12430                           tablat	equ	0xFF5
 12431                           prodh	equ	0xFF4
 12432                           prodl	equ	0xFF3
 12433                           postinc0	equ	0xFEE
 12434                           wreg	equ	0xFE8
 12435                           indf2	equ	0xFDF
 12436                           fsr2h	equ	0xFDA
 12437                           fsr2l	equ	0xFD9
 12438                           status	equ	0xFD8
 12439                           
 12440 ;; *************** function _credit_subtract *****************
 12441 ;; Defined at:
 12442 ;;		line 111 in file "vend.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;  credit          1    wreg     unsigned char 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;  credit          1   22[COMRAM] unsigned char 
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      void 
 12449 ;; Registers used:
 12450 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12460 ;;Total ram usage:        1 bytes
 12461 ;; Hardware stack levels used:    1
 12462 ;; Hardware stack levels required when called:    3
 12463 ;; This function calls:
 12464 ;;		_DATAEE_ReadByte
 12465 ;;		_DATAEE_WriteByte
 12466 ;; This function is called by:
 12467 ;;		_main
 12468 ;; This function uses a non-reentrant model
 12469 ;;
 12470                           
 12471                           	psect	text75
 12472  011906                     __ptext75:
 12473                           	opt stack 0
 12474  011906                     _credit_subtract:
 12475                           	opt stack 27
 12476                           
 12477                           ;incstack = 0
 12478                           ;credit_subtract@credit stored from wreg
 12479  011906  6E21               	movwf	credit_subtract@credit,c
 12480                           
 12481                           ;vend.c: 113: cash = DATAEE_ReadByte(credmem);
 12482  011908  0E61               	movlw	low _credmem
 12483  01190A  6EF6               	movwf	tblptrl,c
 12484  01190C                     	if	1	;There is more than 1 active tblptr byte
 12485  01190C  0EFC               	movlw	high _credmem
 12486  01190E  6EF7               	movwf	tblptrh,c
 12487  011910                     	endif
 12488  011910                     	if	1	;There are 3 active tblptr bytes
 12489  011910  0E00               	movlw	low (_credmem shr (0+16))
 12490  011912  6EF8               	movwf	tblptru,c
 12491  011914                     	endif
 12492  011914  0009               	tblrd		*+
 12493  011916  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 12494  01191A  000A               	tblrd		*-
 12495  01191C  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 12496  011920  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
 12497  011924  6E3A               	movwf	_cash,c	;volatile
 12498                           
 12499                           ;vend.c: 114: cash = (cash - credit) & 0xFF;
 12500  011926  5021               	movf	credit_subtract@credit,w,c
 12501  011928  0800               	sublw	0
 12502  01192A  243A               	addwf	_cash,w,c	;volatile
 12503  01192C  6E3A               	movwf	_cash,c	;volatile
 12504                           
 12505                           ;vend.c: 115: DATAEE_WriteByte(credmem, cash);
 12506  01192E  0E61               	movlw	low _credmem
 12507  011930  6EF6               	movwf	tblptrl,c
 12508  011932                     	if	1	;There is more than 1 active tblptr byte
 12509  011932  0EFC               	movlw	high _credmem
 12510  011934  6EF7               	movwf	tblptrh,c
 12511  011936                     	endif
 12512  011936                     	if	1	;There are 3 active tblptr bytes
 12513  011936  0E00               	movlw	low (_credmem shr (0+16))
 12514  011938  6EF8               	movwf	tblptru,c
 12515  01193A                     	endif
 12516  01193A  0009               	tblrd		*+
 12517  01193C  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12518  011940  000A               	tblrd		*-
 12519  011942  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12520  011946  C03A  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
 12521  01194A  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
 12522                           
 12523                           ;vend.c: 116: if(cash == 0)
 12524  01194E  503A               	movf	_cash,w,c	;volatile
 12525  011950  A4D8               	btfss	status,2,c
 12526  011952  0012               	return	
 12527                           
 12528                           ;vend.c: 117: {
 12529                           ;vend.c: 118: venflags.iscredit = 0;
 12530  011954  902C               	bcf	_venflags,0,c
 12531                           
 12532                           ;vend.c: 119: venflags.inscoin = 1;
 12533  011956  842C               	bsf	_venflags,2,c
 12534                           
 12535                           ;vend.c: 120: venflags.credisplay = 0;
 12536  011958  982C               	bcf	_venflags,4,c
 12537  01195A  0012               	return	
 12538  01195C                     __end_of_credit_subtract:
 12539                           	opt stack 0
 12540                           tblptru	equ	0xFF8
 12541                           tblptrh	equ	0xFF7
 12542                           tblptrl	equ	0xFF6
 12543                           tablat	equ	0xFF5
 12544                           prodh	equ	0xFF4
 12545                           prodl	equ	0xFF3
 12546                           postinc0	equ	0xFEE
 12547                           wreg	equ	0xFE8
 12548                           indf2	equ	0xFDF
 12549                           fsr2h	equ	0xFDA
 12550                           fsr2l	equ	0xFD9
 12551                           status	equ	0xFD8
 12552                           
 12553 ;; *************** function _credit_add *****************
 12554 ;; Defined at:
 12555 ;;		line 96 in file "vend.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;  credit          1    wreg     unsigned char 
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;  credit          1   29[COMRAM] unsigned char 
 12560 ;; Return value:  Size  Location     Type
 12561 ;;                  1    wreg      void 
 12562 ;; Registers used:
 12563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12564 ;; Tracked objects:
 12565 ;;		On entry : 0/0
 12566 ;;		On exit  : 0/0
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12573 ;;Total ram usage:        1 bytes
 12574 ;; Hardware stack levels used:    1
 12575 ;; Hardware stack levels required when called:    5
 12576 ;; This function calls:
 12577 ;;		_DATAEE_ReadByte
 12578 ;;		_DATAEE_WriteByte
 12579 ;;		_Update_cashaudit
 12580 ;; This function is called by:
 12581 ;;		_main
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           
 12585                           	psect	text76
 12586  011856                     __ptext76:
 12587                           	opt stack 0
 12588  011856                     _credit_add:
 12589                           	opt stack 25
 12590                           
 12591                           ;incstack = 0
 12592                           ;credit_add@credit stored from wreg
 12593  011856  6E28               	movwf	credit_add@credit,c
 12594                           
 12595                           ;vend.c: 98: cash = DATAEE_ReadByte(credmem);
 12596  011858  0E61               	movlw	low _credmem
 12597  01185A  6EF6               	movwf	tblptrl,c
 12598  01185C                     	if	1	;There is more than 1 active tblptr byte
 12599  01185C  0EFC               	movlw	high _credmem
 12600  01185E  6EF7               	movwf	tblptrh,c
 12601  011860                     	endif
 12602  011860                     	if	1	;There are 3 active tblptr bytes
 12603  011860  0E00               	movlw	low (_credmem shr (0+16))
 12604  011862  6EF8               	movwf	tblptru,c
 12605  011864                     	endif
 12606  011864  0009               	tblrd		*+
 12607  011866  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 12608  01186A  000A               	tblrd		*-
 12609  01186C  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 12610  011870  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
 12611  011874  6E3A               	movwf	_cash,c	;volatile
 12612                           
 12613                           ;vend.c: 99: cash = cash + credit;
 12614  011876  503A               	movf	_cash,w,c	;volatile
 12615  011878  2428               	addwf	credit_add@credit,w,c
 12616  01187A  6E3A               	movwf	_cash,c	;volatile
 12617                           
 12618                           ;vend.c: 100: DATAEE_WriteByte(credmem, cash);
 12619  01187C  0E61               	movlw	low _credmem
 12620  01187E  6EF6               	movwf	tblptrl,c
 12621  011880                     	if	1	;There is more than 1 active tblptr byte
 12622  011880  0EFC               	movlw	high _credmem
 12623  011882  6EF7               	movwf	tblptrh,c
 12624  011884                     	endif
 12625  011884                     	if	1	;There are 3 active tblptr bytes
 12626  011884  0E00               	movlw	low (_credmem shr (0+16))
 12627  011886  6EF8               	movwf	tblptru,c
 12628  011888                     	endif
 12629  011888  0009               	tblrd		*+
 12630  01188A  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12631  01188E  000A               	tblrd		*-
 12632  011890  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12633  011894  C03A  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
 12634  011898  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
 12635                           
 12636                           ;vend.c: 101: if(cash != 0)
 12637  01189C  503A               	movf	_cash,w,c	;volatile
 12638  01189E  B4D8               	btfsc	status,2,c
 12639  0118A0  D003               	goto	l2000
 12640                           
 12641                           ;vend.c: 102: {
 12642                           ;vend.c: 103: venflags.iscredit = 1;
 12643  0118A2  802C               	bsf	_venflags,0,c
 12644                           
 12645                           ;vend.c: 104: venflags.inscoin = 0;
 12646  0118A4  942C               	bcf	_venflags,2,c
 12647                           
 12648                           ;vend.c: 105: venflags.credisplay = 1;
 12649  0118A6  882C               	bsf	_venflags,4,c
 12650  0118A8                     l2000:
 12651                           
 12652                           ;vend.c: 107: }
 12653                           ;vend.c: 108: Update_cashaudit(credit);
 12654  0118A8  5028               	movf	credit_add@credit,w,c
 12655  0118AA  EC44  F085         	call	_Update_cashaudit
 12656  0118AE  0012               	return		;funcret
 12657  0118B0                     __end_of_credit_add:
 12658                           	opt stack 0
 12659                           tblptru	equ	0xFF8
 12660                           tblptrh	equ	0xFF7
 12661                           tblptrl	equ	0xFF6
 12662                           tablat	equ	0xFF5
 12663                           prodh	equ	0xFF4
 12664                           prodl	equ	0xFF3
 12665                           postinc0	equ	0xFEE
 12666                           wreg	equ	0xFE8
 12667                           indf2	equ	0xFDF
 12668                           fsr2h	equ	0xFDA
 12669                           fsr2l	equ	0xFD9
 12670                           status	equ	0xFD8
 12671                           
 12672 ;; *************** function _Update_cashaudit *****************
 12673 ;; Defined at:
 12674 ;;		line 81 in file "vend.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;  addcash         1    wreg     unsigned char 
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;  addcash         1   28[COMRAM] unsigned char 
 12679 ;; Return value:  Size  Location     Type
 12680 ;;                  1    wreg      void 
 12681 ;; Registers used:
 12682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12692 ;;Total ram usage:        1 bytes
 12693 ;; Hardware stack levels used:    1
 12694 ;; Hardware stack levels required when called:    4
 12695 ;; This function calls:
 12696 ;;		_Read_NVstore
 12697 ;;		_Write_NVstore
 12698 ;; This function is called by:
 12699 ;;		_credit_add
 12700 ;; This function uses a non-reentrant model
 12701 ;;
 12702                           
 12703                           	psect	text77
 12704  010A88                     __ptext77:
 12705                           	opt stack 0
 12706  010A88                     _Update_cashaudit:
 12707                           	opt stack 25
 12708                           
 12709                           ;incstack = 0
 12710                           ;Update_cashaudit@addcash stored from wreg
 12711  010A88  6E27               	movwf	Update_cashaudit@addcash,c
 12712                           
 12713                           ;vend.c: 83: Read_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 12714  010A8A  0E5F               	movlw	low _cashinv
 12715  010A8C  6EF6               	movwf	tblptrl,c
 12716  010A8E                     	if	1	;There is more than 1 active tblptr byte
 12717  010A8E  0EFC               	movlw	high _cashinv
 12718  010A90  6EF7               	movwf	tblptrh,c
 12719  010A92                     	endif
 12720  010A92                     	if	1	;There are 3 active tblptr bytes
 12721  010A92  0E00               	movlw	low (_cashinv shr (0+16))
 12722  010A94  6EF8               	movwf	tblptru,c
 12723  010A96                     	endif
 12724  010A96  0009               	tblrd		*+
 12725  010A98  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 12726  010A9C  000A               	tblrd		*-
 12727  010A9E  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 12728  010AA2  0E4A               	movlw	low _pvcash
 12729  010AA4  6E21               	movwf	Read_NVstore@storemem,c
 12730  010AA6  0E00               	movlw	high _pvcash
 12731  010AA8  6E22               	movwf	Read_NVstore@storemem+1,c
 12732  010AAA  0E02               	movlw	2
 12733  010AAC  6E23               	movwf	Read_NVstore@storesize,c
 12734  010AAE  ECF8  F08E         	call	_Read_NVstore	;wreg free
 12735                           
 12736                           ;vend.c: 84: Read_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 12737  010AB2  0E5D               	movlw	low _cashint
 12738  010AB4  6EF6               	movwf	tblptrl,c
 12739  010AB6                     	if	1	;There is more than 1 active tblptr byte
 12740  010AB6  0EFC               	movlw	high _cashint
 12741  010AB8  6EF7               	movwf	tblptrh,c
 12742  010ABA                     	endif
 12743  010ABA                     	if	1	;There are 3 active tblptr bytes
 12744  010ABA  0E00               	movlw	low (_cashint shr (0+16))
 12745  010ABC  6EF8               	movwf	tblptru,c
 12746  010ABE                     	endif
 12747  010ABE  0009               	tblrd		*+
 12748  010AC0  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 12749  010AC4  000A               	tblrd		*-
 12750  010AC6  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 12751  010ACA  0E47               	movlw	low _pnvcash
 12752  010ACC  6E21               	movwf	Read_NVstore@storemem,c
 12753  010ACE  0E00               	movlw	high _pnvcash
 12754  010AD0  6E22               	movwf	Read_NVstore@storemem+1,c
 12755  010AD2  0E03               	movlw	3
 12756  010AD4  6E23               	movwf	Read_NVstore@storesize,c
 12757  010AD6  ECF8  F08E         	call	_Read_NVstore	;wreg free
 12758                           
 12759                           ;vend.c: 86: pvcash = pvcash + (uint16_t)addcash;
 12760  010ADA  5027               	movf	Update_cashaudit@addcash,w,c
 12761  010ADC  244A               	addwf	_pvcash,w,c	;volatile
 12762  010ADE  6E4A               	movwf	_pvcash,c	;volatile
 12763  010AE0  0E00               	movlw	0
 12764  010AE2  204B               	addwfc	_pvcash+1,w,c	;volatile
 12765  010AE4  6E4B               	movwf	_pvcash+1,c	;volatile
 12766                           
 12767                           ;vend.c: 88: pnvcash = pnvcash + (uint24_t)addcash;
 12768  010AE6  5027               	movf	Update_cashaudit@addcash,w,c
 12769  010AE8  2447               	addwf	_pnvcash,w,c	;volatile
 12770  010AEA  6E47               	movwf	_pnvcash,c	;volatile
 12771  010AEC  0E00               	movlw	0
 12772  010AEE  2048               	addwfc	_pnvcash+1,w,c	;volatile
 12773  010AF0  6E48               	movwf	_pnvcash+1,c	;volatile
 12774  010AF2  0E00               	movlw	0
 12775  010AF4  2049               	addwfc	_pnvcash+2,w,c	;volatile
 12776  010AF6  6E49               	movwf	_pnvcash+2,c	;volatile
 12777                           
 12778                           ;vend.c: 90: Write_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 12779  010AF8  0E5F               	movlw	low _cashinv
 12780  010AFA  6EF6               	movwf	tblptrl,c
 12781  010AFC                     	if	1	;There is more than 1 active tblptr byte
 12782  010AFC  0EFC               	movlw	high _cashinv
 12783  010AFE  6EF7               	movwf	tblptrh,c
 12784  010B00                     	endif
 12785  010B00                     	if	1	;There are 3 active tblptr bytes
 12786  010B00  0E00               	movlw	low (_cashinv shr (0+16))
 12787  010B02  6EF8               	movwf	tblptru,c
 12788  010B04                     	endif
 12789  010B04  0009               	tblrd		*+
 12790  010B06  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 12791  010B0A  000A               	tblrd		*-
 12792  010B0C  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 12793  010B10  0E4A               	movlw	low _pvcash
 12794  010B12  6E23               	movwf	Write_NVstore@storemem,c
 12795  010B14  0E00               	movlw	high _pvcash
 12796  010B16  6E24               	movwf	Write_NVstore@storemem+1,c
 12797  010B18  0E02               	movlw	2
 12798  010B1A  6E25               	movwf	Write_NVstore@storesize,c
 12799  010B1C  EC8C  F08F         	call	_Write_NVstore	;wreg free
 12800                           
 12801                           ;vend.c: 91: Write_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 12802  010B20  0E5D               	movlw	low _cashint
 12803  010B22  6EF6               	movwf	tblptrl,c
 12804  010B24                     	if	1	;There is more than 1 active tblptr byte
 12805  010B24  0EFC               	movlw	high _cashint
 12806  010B26  6EF7               	movwf	tblptrh,c
 12807  010B28                     	endif
 12808  010B28                     	if	1	;There are 3 active tblptr bytes
 12809  010B28  0E00               	movlw	low (_cashint shr (0+16))
 12810  010B2A  6EF8               	movwf	tblptru,c
 12811  010B2C                     	endif
 12812  010B2C  0009               	tblrd		*+
 12813  010B2E  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 12814  010B32  000A               	tblrd		*-
 12815  010B34  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 12816  010B38  0E47               	movlw	low _pnvcash
 12817  010B3A  6E23               	movwf	Write_NVstore@storemem,c
 12818  010B3C  0E00               	movlw	high _pnvcash
 12819  010B3E  6E24               	movwf	Write_NVstore@storemem+1,c
 12820  010B40  0E03               	movlw	3
 12821  010B42  6E25               	movwf	Write_NVstore@storesize,c
 12822  010B44  EC8C  F08F         	call	_Write_NVstore	;wreg free
 12823  010B48  F000               	nop		;# 
 12824  010B4A  0012               	return		;funcret
 12825  010B4C                     __end_of_Update_cashaudit:
 12826                           	opt stack 0
 12827                           tblptru	equ	0xFF8
 12828                           tblptrh	equ	0xFF7
 12829                           tblptrl	equ	0xFF6
 12830                           tablat	equ	0xFF5
 12831                           prodh	equ	0xFF4
 12832                           prodl	equ	0xFF3
 12833                           postinc0	equ	0xFEE
 12834                           wreg	equ	0xFE8
 12835                           indf2	equ	0xFDF
 12836                           fsr2h	equ	0xFDA
 12837                           fsr2l	equ	0xFD9
 12838                           status	equ	0xFD8
 12839                           
 12840 ;; *************** function _Write_NVstore *****************
 12841 ;; Defined at:
 12842 ;;		line 61 in file "vend.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;  storeadd        2   22[COMRAM] unsigned int 
 12845 ;;  storemem        2   24[COMRAM] PTR unsigned char 
 12846 ;;		 -> pnvcash(3), pvcash(2), 
 12847 ;;  storesize       1   26[COMRAM] unsigned char 
 12848 ;; Auto vars:     Size  Location     Type
 12849 ;;  i               1   27[COMRAM] unsigned char 
 12850 ;; Return value:  Size  Location     Type
 12851 ;;                  1    wreg      void 
 12852 ;; Registers used:
 12853 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12854 ;; Tracked objects:
 12855 ;;		On entry : 0/0
 12856 ;;		On exit  : 0/0
 12857 ;;		Unchanged: 0/0
 12858 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12859 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12862 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12863 ;;Total ram usage:        6 bytes
 12864 ;; Hardware stack levels used:    1
 12865 ;; Hardware stack levels required when called:    3
 12866 ;; This function calls:
 12867 ;;		_DATAEE_WriteByte
 12868 ;; This function is called by:
 12869 ;;		_Update_cashaudit
 12870 ;;		_Update_coinsout
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text78
 12875  011F18                     __ptext78:
 12876                           	opt stack 0
 12877  011F18                     _Write_NVstore:
 12878                           	opt stack 23
 12879                           
 12880                           ;vend.c: 63: uint8_t i = 0;
 12881                           
 12882                           ;incstack = 0
 12883  011F18  0E00               	movlw	0
 12884  011F1A  6E26               	movwf	Write_NVstore@i,c
 12885                           
 12886                           ;vend.c: 64: while(i < storesize)
 12887  011F1C  D00C               	goto	l1985
 12888  011F1E                     
 12889                           ;vend.c: 65: {
 12890                           ;vend.c: 66: DATAEE_WriteByte(storeadd, storemem + i);
 12891  011F1E  C021  F01D         	movff	Write_NVstore@storeadd,DATAEE_WriteByte@bAdd
 12892  011F22  C022  F01E         	movff	Write_NVstore@storeadd+1,DATAEE_WriteByte@bAdd+1
 12893  011F26  5026               	movf	Write_NVstore@i,w,c
 12894  011F28  0D01               	mullw	1
 12895  011F2A  5023               	movf	Write_NVstore@storemem,w,c
 12896  011F2C  24F3               	addwf	prodl,w,c
 12897  011F2E  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12898  011F30  EC39  F08E         	call	_DATAEE_WriteByte	;wreg free
 12899                           
 12900                           ;vend.c: 67: i++;
 12901  011F34  2A26               	incf	Write_NVstore@i,f,c
 12902  011F36                     l1985:
 12903  011F36  5025               	movf	Write_NVstore@storesize,w,c
 12904  011F38  5C26               	subwf	Write_NVstore@i,w,c
 12905  011F3A  B0D8               	btfsc	status,0,c
 12906  011F3C  0012               	return	
 12907  011F3E  D7EF               	goto	l1986
 12908  011F40                     __end_of_Write_NVstore:
 12909                           	opt stack 0
 12910                           tblptru	equ	0xFF8
 12911                           tblptrh	equ	0xFF7
 12912                           tblptrl	equ	0xFF6
 12913                           tablat	equ	0xFF5
 12914                           prodh	equ	0xFF4
 12915                           prodl	equ	0xFF3
 12916                           postinc0	equ	0xFEE
 12917                           wreg	equ	0xFE8
 12918                           indf2	equ	0xFDF
 12919                           fsr2h	equ	0xFDA
 12920                           fsr2l	equ	0xFD9
 12921                           status	equ	0xFD8
 12922                           
 12923 ;; *************** function _DATAEE_WriteByte *****************
 12924 ;; Defined at:
 12925 ;;		line 169 in file "mcc_generated_files/memory.c"
 12926 ;; Parameters:    Size  Location     Type
 12927 ;;  bAdd            2   18[COMRAM] unsigned int 
 12928 ;;  bData           1   20[COMRAM] unsigned char 
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, status,2, status,0
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12940 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12944 ;;Total ram usage:        4 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; Hardware stack levels required when called:    2
 12947 ;; This function calls:
 12948 ;;		Nothing
 12949 ;; This function is called by:
 12950 ;;		_displ_sens
 12951 ;;		_Write_NVstore
 12952 ;;		_credit_add
 12953 ;;		_credit_subtract
 12954 ;;		_Update_Hopcoin
 12955 ;;		_Clear_cred
 12956 ;;		_set_price
 12957 ;;		_Vend_timeset
 12958 ;;		_Link_chan
 12959 ;;		_off_sens
 12960 ;;		_Reset_settings
 12961 ;;		_save_notes
 12962 ;; This function uses a non-reentrant model
 12963 ;;
 12964                           
 12965                           	psect	text79
 12966  011C72                     __ptext79:
 12967                           	opt stack 0
 12968  011C72                     _DATAEE_WriteByte:
 12969                           	opt stack 23
 12970                           
 12971                           ;memory.c: 171: uint8_t GIEBitValue = INTCONbits.GIE;
 12972                           
 12973                           ;incstack = 0
 12974  011C72  0E00               	movlw	0
 12975  011C74  BEF2               	btfsc	intcon,7,c	;volatile
 12976  011C76  0E01               	movlw	1
 12977  011C78  6E20               	movwf	DATAEE_WriteByte@GIEBitValue,c
 12978                           
 12979                           ;memory.c: 173: NVMADRH = ((bAdd >> 8) & 0x03);
 12980  011C7A  501E               	movf	DATAEE_WriteByte@bAdd+1,w,c
 12981  011C7C  0B03               	andlw	3
 12982  011C7E  6E7F               	movwf	3967,c	;volatile
 12983                           
 12984                           ;memory.c: 174: NVMADRL = (bAdd & 0xFF);
 12985  011C80  C01D  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
 12986                           
 12987                           ;memory.c: 175: NVMDAT = bData;
 12988  011C84  C01F  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
 12989                           
 12990                           ;memory.c: 176: NVMCON1bits.NVMREG = 0;
 12991  011C88  0E3F               	movlw	-193
 12992  011C8A  1681               	andwf	3969,f,c	;volsfr
 12993                           
 12994                           ;memory.c: 177: NVMCON1bits.WREN = 1;
 12995  011C8C  8481               	bsf	3969,2,c	;volsfr
 12996                           
 12997                           ;memory.c: 178: INTCONbits.GIE = 0;
 12998  011C8E  9EF2               	bcf	intcon,7,c	;volatile
 12999                           
 13000                           ;memory.c: 179: NVMCON2 = 0x55;
 13001  011C90  0E55               	movlw	85
 13002  011C92  6E82               	movwf	3970,c	;volsfr
 13003                           
 13004                           ;memory.c: 180: NVMCON2 = 0xAA;
 13005  011C94  0EAA               	movlw	170
 13006  011C96  6E82               	movwf	3970,c	;volsfr
 13007                           
 13008                           ;memory.c: 181: NVMCON1bits.WR = 1;
 13009  011C98  8281               	bsf	3969,1,c	;volsfr
 13010  011C9A                     
 13011                           ;memory.c: 184: {
 13012  011C9A  B281               	btfsc	3969,1,c	;volsfr
 13013  011C9C  D7FE               	goto	l245
 13014                           
 13015                           ;memory.c: 185: }
 13016                           ;memory.c: 187: NVMCON1bits.WREN = 0;
 13017  011C9E  9481               	bcf	3969,2,c	;volsfr
 13018                           
 13019                           ;memory.c: 188: INTCONbits.GIE = GIEBitValue;
 13020  011CA0  B020               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
 13021  011CA2  D002               	bra	u2775
 13022  011CA4  9EF2               	bcf	intcon,7,c	;volatile
 13023  011CA6  D001               	bra	u2776
 13024  011CA8                     u2775:
 13025  011CA8  8EF2               	bsf	intcon,7,c	;volatile
 13026  011CAA                     u2776:
 13027  011CAA  0012               	return		;funcret
 13028  011CAC                     __end_of_DATAEE_WriteByte:
 13029                           	opt stack 0
 13030                           tblptru	equ	0xFF8
 13031                           tblptrh	equ	0xFF7
 13032                           tblptrl	equ	0xFF6
 13033                           tablat	equ	0xFF5
 13034                           prodh	equ	0xFF4
 13035                           prodl	equ	0xFF3
 13036                           intcon	equ	0xFF2
 13037                           postinc0	equ	0xFEE
 13038                           wreg	equ	0xFE8
 13039                           indf2	equ	0xFDF
 13040                           fsr2h	equ	0xFDA
 13041                           fsr2l	equ	0xFD9
 13042                           status	equ	0xFD8
 13043                           
 13044 ;; *************** function _Read_NVstore *****************
 13045 ;; Defined at:
 13046 ;;		line 71 in file "vend.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;  storeadd        2   20[COMRAM] unsigned int 
 13049 ;;  storemem        2   22[COMRAM] PTR unsigned char 
 13050 ;;		 -> pnvcash(3), pvcash(2), 
 13051 ;;  storesize       1   24[COMRAM] unsigned char 
 13052 ;; Auto vars:     Size  Location     Type
 13053 ;;  i               1   25[COMRAM] unsigned char 
 13054 ;; Return value:  Size  Location     Type
 13055 ;;                  1    wreg      void 
 13056 ;; Registers used:
 13057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13058 ;; Tracked objects:
 13059 ;;		On entry : 0/0
 13060 ;;		On exit  : 0/0
 13061 ;;		Unchanged: 0/0
 13062 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13063 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13066 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13067 ;;Total ram usage:        6 bytes
 13068 ;; Hardware stack levels used:    1
 13069 ;; Hardware stack levels required when called:    3
 13070 ;; This function calls:
 13071 ;;		_DATAEE_ReadByte
 13072 ;; This function is called by:
 13073 ;;		_Update_cashaudit
 13074 ;;		_Update_coinsout
 13075 ;; This function uses a non-reentrant model
 13076 ;;
 13077                           
 13078                           	psect	text80
 13079  011DF0                     __ptext80:
 13080                           	opt stack 0
 13081  011DF0                     _Read_NVstore:
 13082                           	opt stack 23
 13083                           
 13084                           ;vend.c: 73: uint8_t i = 0;
 13085                           
 13086                           ;incstack = 0
 13087  011DF0  0E00               	movlw	0
 13088  011DF2  6E24               	movwf	Read_NVstore@i,c
 13089                           
 13090                           ;vend.c: 74: while(i < storesize)
 13091  011DF4  D012               	goto	l1991
 13092  011DF6                     
 13093                           ;vend.c: 75: {
 13094                           ;vend.c: 76: storemem[i] = DATAEE_ReadByte(storeadd + i);
 13095  011DF6  5024               	movf	Read_NVstore@i,w,c
 13096  011DF8  0D01               	mullw	1
 13097  011DFA  50F3               	movf	prodl,w,c
 13098  011DFC  2421               	addwf	Read_NVstore@storemem,w,c
 13099  011DFE  6ED9               	movwf	fsr2l,c
 13100  011E00  50F4               	movf	prodh,w,c
 13101  011E02  2022               	addwfc	Read_NVstore@storemem+1,w,c
 13102  011E04  6EDA               	movwf	fsr2h,c
 13103  011E06  5024               	movf	Read_NVstore@i,w,c
 13104  011E08  241F               	addwf	Read_NVstore@storeadd,w,c
 13105  011E0A  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 13106  011E0C  0E00               	movlw	0
 13107  011E0E  2020               	addwfc	Read_NVstore@storeadd+1,w,c
 13108  011E10  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 13109  011E12  EC2A  F090         	call	_DATAEE_ReadByte	;wreg free
 13110  011E16  6EDF               	movwf	indf2,c
 13111                           
 13112                           ;vend.c: 77: i++;
 13113  011E18  2A24               	incf	Read_NVstore@i,f,c
 13114  011E1A                     l1991:
 13115  011E1A  5023               	movf	Read_NVstore@storesize,w,c
 13116  011E1C  5C24               	subwf	Read_NVstore@i,w,c
 13117  011E1E  B0D8               	btfsc	status,0,c
 13118  011E20  0012               	return	
 13119  011E22  D7E9               	goto	l1992
 13120  011E24                     __end_of_Read_NVstore:
 13121                           	opt stack 0
 13122                           tblptru	equ	0xFF8
 13123                           tblptrh	equ	0xFF7
 13124                           tblptrl	equ	0xFF6
 13125                           tablat	equ	0xFF5
 13126                           prodh	equ	0xFF4
 13127                           prodl	equ	0xFF3
 13128                           intcon	equ	0xFF2
 13129                           postinc0	equ	0xFEE
 13130                           wreg	equ	0xFE8
 13131                           indf2	equ	0xFDF
 13132                           fsr2h	equ	0xFDA
 13133                           fsr2l	equ	0xFD9
 13134                           status	equ	0xFD8
 13135                           
 13136 ;; *************** function _DATAEE_ReadByte *****************
 13137 ;; Defined at:
 13138 ;;		line 191 in file "mcc_generated_files/memory.c"
 13139 ;; Parameters:    Size  Location     Type
 13140 ;;  bAdd            2   18[COMRAM] unsigned int 
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;		None
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  1    wreg      unsigned char 
 13145 ;; Registers used:
 13146 ;;		wreg, status,2, status,0
 13147 ;; Tracked objects:
 13148 ;;		On entry : 0/0
 13149 ;;		On exit  : 0/0
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13156 ;;Total ram usage:        2 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; Hardware stack levels required when called:    2
 13159 ;; This function calls:
 13160 ;;		Nothing
 13161 ;; This function is called by:
 13162 ;;		_Init_vendmem
 13163 ;;		_vend_init
 13164 ;;		_Read_NVstore
 13165 ;;		_credit_add
 13166 ;;		_credit_subtract
 13167 ;;		_credit_check
 13168 ;;		_Hopper_coin
 13169 ;;		_set_price
 13170 ;;		_Vend_timeset
 13171 ;;		_Link_chan
 13172 ;;		_off_sens
 13173 ;;		_mdb_init
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text81
 13178  012054                     __ptext81:
 13179                           	opt stack 0
 13180  012054                     _DATAEE_ReadByte:
 13181                           	opt stack 26
 13182                           
 13183                           ;memory.c: 193: NVMADRH = ((bAdd >> 8) & 0x03);
 13184                           
 13185                           ;incstack = 0
 13186  012054  501E               	movf	DATAEE_ReadByte@bAdd+1,w,c
 13187  012056  0B03               	andlw	3
 13188  012058  6E7F               	movwf	3967,c	;volatile
 13189                           
 13190                           ;memory.c: 194: NVMADRL = (bAdd & 0xFF);
 13191  01205A  C01D  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
 13192                           
 13193                           ;memory.c: 195: NVMCON1bits.NVMREG = 0;
 13194  01205E  0E3F               	movlw	-193
 13195  012060  1681               	andwf	3969,f,c	;volsfr
 13196                           
 13197                           ;memory.c: 196: NVMCON1bits.RD = 1;
 13198  012062  8081               	bsf	3969,0,c	;volsfr
 13199                           
 13200                           ;memory.c: 197: __nop();
 13201  012064  F000               	nop	
 13202                           
 13203                           ;memory.c: 198: __nop();
 13204  012066  F000               	nop	
 13205                           
 13206                           ;memory.c: 200: return (NVMDAT);
 13207  012068  5080               	movf	3968,w,c	;volatile
 13208  01206A  0012               	return	
 13209  01206C                     __end_of_DATAEE_ReadByte:
 13210                           	opt stack 0
 13211                           tblptru	equ	0xFF8
 13212                           tblptrh	equ	0xFF7
 13213                           tblptrl	equ	0xFF6
 13214                           tablat	equ	0xFF5
 13215                           prodh	equ	0xFF4
 13216                           prodl	equ	0xFF3
 13217                           intcon	equ	0xFF2
 13218                           postinc0	equ	0xFEE
 13219                           wreg	equ	0xFE8
 13220                           indf2	equ	0xFDF
 13221                           fsr2h	equ	0xFDA
 13222                           fsr2l	equ	0xFD9
 13223                           status	equ	0xFD8
 13224                           
 13225 ;; *************** function _SYSTEM_Initialize *****************
 13226 ;; Defined at:
 13227 ;;		line 116 in file "mcc_generated_files/mcc.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;		None
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;		None
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  1    wreg      void 
 13234 ;; Registers used:
 13235 ;;		wreg, status,2, status,0, cstack
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13245 ;;Total ram usage:        0 bytes
 13246 ;; Hardware stack levels used:    1
 13247 ;; Hardware stack levels required when called:    3
 13248 ;; This function calls:
 13249 ;;		_CMP1_Initialize
 13250 ;;		_DAC1_Initialize
 13251 ;;		_EUSART1_Initialize
 13252 ;;		_INTERRUPT_Initialize
 13253 ;;		_OSCILLATOR_Initialize
 13254 ;;		_PIN_MANAGER_Initialize
 13255 ;;		_PMD_Initialize
 13256 ;;		_TMR0_Initialize
 13257 ;;		_TMR1_Initialize
 13258 ;;		_TMR2_Initialize
 13259 ;;		_TMR3_Initialize
 13260 ;;		_TMR4_Initialize
 13261 ;;		_TMR5_Initialize
 13262 ;; This function is called by:
 13263 ;;		_main
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           	psect	text82
 13268  011CE4                     __ptext82:
 13269                           	opt stack 0
 13270  011CE4                     _SYSTEM_Initialize:
 13271                           	opt stack 27
 13272                           
 13273                           ;mcc.c: 118: INTERRUPT_Initialize();
 13274                           
 13275                           ;incstack = 0
 13276  011CE4  ECB7  F090         	call	_INTERRUPT_Initialize	;wreg free
 13277                           
 13278                           ;mcc.c: 119: PMD_Initialize();
 13279  011CE8  EC10  F090         	call	_PMD_Initialize	;wreg free
 13280                           
 13281                           ;mcc.c: 120: PIN_MANAGER_Initialize();
 13282  011CEC  EC43  F08A         	call	_PIN_MANAGER_Initialize	;wreg free
 13283                           
 13284                           ;mcc.c: 121: OSCILLATOR_Initialize();
 13285  011CF0  EC36  F090         	call	_OSCILLATOR_Initialize	;wreg free
 13286                           
 13287                           ;mcc.c: 122: CMP1_Initialize();
 13288  011CF4  EC6D  F090         	call	_CMP1_Initialize	;wreg free
 13289                           
 13290                           ;mcc.c: 123: TMR3_Initialize();
 13291  011CF8  ECA8  F08E         	call	_TMR3_Initialize	;wreg free
 13292                           
 13293                           ;mcc.c: 124: TMR4_Initialize();
 13294  011CFC  EC02  F090         	call	_TMR4_Initialize	;wreg free
 13295                           
 13296                           ;mcc.c: 125: DAC1_Initialize();
 13297  011D00  ECA5  F090         	call	_DAC1_Initialize	;wreg free
 13298                           
 13299                           ;mcc.c: 126: TMR2_Initialize();
 13300  011D04  ECE5  F08F         	call	_TMR2_Initialize	;wreg free
 13301                           
 13302                           ;mcc.c: 127: TMR5_Initialize();
 13303  011D08  EC8D  F08E         	call	_TMR5_Initialize	;wreg free
 13304                           
 13305                           ;mcc.c: 128: TMR1_Initialize();
 13306  011D0C  ECC3  F08E         	call	_TMR1_Initialize	;wreg free
 13307                           
 13308                           ;mcc.c: 129: TMR0_Initialize();
 13309  011D10  EC75  F08F         	call	_TMR0_Initialize	;wreg free
 13310                           
 13311                           ;mcc.c: 130: EUSART1_Initialize();
 13312  011D14  EC58  F090         	call	_EUSART1_Initialize	;wreg free
 13313  011D18  0012               	return		;funcret
 13314  011D1A                     __end_of_SYSTEM_Initialize:
 13315                           	opt stack 0
 13316                           tblptru	equ	0xFF8
 13317                           tblptrh	equ	0xFF7
 13318                           tblptrl	equ	0xFF6
 13319                           tablat	equ	0xFF5
 13320                           prodh	equ	0xFF4
 13321                           prodl	equ	0xFF3
 13322                           intcon	equ	0xFF2
 13323                           postinc0	equ	0xFEE
 13324                           wreg	equ	0xFE8
 13325                           indf2	equ	0xFDF
 13326                           fsr2h	equ	0xFDA
 13327                           fsr2l	equ	0xFD9
 13328                           status	equ	0xFD8
 13329                           
 13330 ;; *************** function _TMR5_Initialize *****************
 13331 ;; Defined at:
 13332 ;;		line 62 in file "mcc_generated_files/tmr5.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;		None
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;		None
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  1    wreg      void 
 13339 ;; Registers used:
 13340 ;;		wreg, status,2, status,0
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13350 ;;Total ram usage:        2 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; Hardware stack levels required when called:    2
 13353 ;; This function calls:
 13354 ;;		Nothing
 13355 ;; This function is called by:
 13356 ;;		_SYSTEM_Initialize
 13357 ;;		_mdb_unlock
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text83
 13362  011D1A                     __ptext83:
 13363                           	opt stack 0
 13364  011D1A                     _TMR5_Initialize:
 13365                           	opt stack 26
 13366                           
 13367                           ;tmr5.c: 67: T5GCON = 0x00;
 13368                           
 13369                           ;incstack = 0
 13370  011D1A  0E00               	movlw	0
 13371  011D1C  6EC4               	movwf	4036,c	;volatile
 13372                           
 13373                           ;tmr5.c: 70: T5GATE = 0x00;
 13374  011D1E  0E00               	movlw	0
 13375  011D20  6EC5               	movwf	4037,c	;volatile
 13376                           
 13377                           ;tmr5.c: 73: T5CLK = 0x04;
 13378  011D22  0E04               	movlw	4
 13379  011D24  6EC6               	movwf	4038,c	;volatile
 13380                           
 13381                           ;tmr5.c: 76: TMR5H = 0xE1;
 13382  011D26  0EE1               	movlw	225
 13383  011D28  6EC2               	movwf	4034,c	;volatile
 13384                           
 13385                           ;tmr5.c: 79: TMR5L = 0xBA;
 13386  011D2A  0EBA               	movlw	186
 13387  011D2C  6EC1               	movwf	4033,c	;volatile
 13388                           
 13389                           ;tmr5.c: 82: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13390  011D2E  50C1               	movf	4033,w,c	;volatile
 13391  011D30  CFC2 F01D          	movff	4034,??_TMR5_Initialize	;volatile
 13392  011D34  6A1E               	clrf	(??_TMR5_Initialize+1)& (0+255),c
 13393  011D36  C01D  F01E         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13394  011D3A  6A1D               	clrf	??_TMR5_Initialize,c
 13395  011D3C  101D               	iorwf	??_TMR5_Initialize,w,c
 13396  011D3E  0100               	movlb	0	; () banked
 13397  011D40  6FAE               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13398  011D42  501E               	movf	??_TMR5_Initialize+1,w,c
 13399  011D44  6FAF               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;tmr5.c: 85: PIR4bits.TMR5IF = 0;
 13403  011D46  010E               	movlb	14	; () banked
 13404  011D48  99CE               	bcf	206,4,b	;volatile
 13405                           
 13406                           ; BSR set to: 14
 13407                           ;tmr5.c: 88: T5CON = 0x01;
 13408  011D4A  0E01               	movlw	1
 13409  011D4C  6EC3               	movwf	4035,c	;volatile
 13410                           
 13411                           ; BSR set to: 14
 13412  011D4E  0012               	return		;funcret
 13413  011D50                     __end_of_TMR5_Initialize:
 13414                           	opt stack 0
 13415                           tblptru	equ	0xFF8
 13416                           tblptrh	equ	0xFF7
 13417                           tblptrl	equ	0xFF6
 13418                           tablat	equ	0xFF5
 13419                           prodh	equ	0xFF4
 13420                           prodl	equ	0xFF3
 13421                           intcon	equ	0xFF2
 13422                           postinc0	equ	0xFEE
 13423                           wreg	equ	0xFE8
 13424                           indf2	equ	0xFDF
 13425                           fsr2h	equ	0xFDA
 13426                           fsr2l	equ	0xFD9
 13427                           status	equ	0xFD8
 13428                           
 13429 ;; *************** function _TMR4_Initialize *****************
 13430 ;; Defined at:
 13431 ;;		line 61 in file "mcc_generated_files/tmr4.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;		None
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;		None
 13436 ;; Return value:  Size  Location     Type
 13437 ;;                  1    wreg      void 
 13438 ;; Registers used:
 13439 ;;		wreg, status,2
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13449 ;;Total ram usage:        0 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; Hardware stack levels required when called:    2
 13452 ;; This function calls:
 13453 ;;		Nothing
 13454 ;; This function is called by:
 13455 ;;		_SYSTEM_Initialize
 13456 ;;		_Reset_hopper
 13457 ;;		_pay_coin
 13458 ;; This function uses a non-reentrant model
 13459 ;;
 13460                           
 13461                           	psect	text84
 13462  012004                     __ptext84:
 13463                           	opt stack 0
 13464  012004                     _TMR4_Initialize:
 13465                           	opt stack 24
 13466                           
 13467                           ;tmr4.c: 66: T4CLKCON = 0x04;
 13468                           
 13469                           ; BSR set to: 14
 13470                           ;incstack = 0
 13471  012004  0E04               	movlw	4
 13472  012006  6EB9               	movwf	4025,c	;volatile
 13473                           
 13474                           ;tmr4.c: 69: T4HLT = 0x00;
 13475  012008  0E00               	movlw	0
 13476  01200A  6EB8               	movwf	4024,c	;volatile
 13477                           
 13478                           ;tmr4.c: 72: T4RST = 0x00;
 13479  01200C  0E00               	movlw	0
 13480  01200E  6EBA               	movwf	4026,c	;volatile
 13481                           
 13482                           ;tmr4.c: 75: T4PR = 0x4B;
 13483  012010  0E4B               	movlw	75
 13484  012012  6EB6               	movwf	4022,c	;volatile
 13485                           
 13486                           ;tmr4.c: 78: T4TMR = 0x00;
 13487  012014  0E00               	movlw	0
 13488  012016  6EB5               	movwf	4021,c	;volatile
 13489                           
 13490                           ;tmr4.c: 81: PIR4bits.TMR4IF = 0;
 13491  012018  010E               	movlb	14	; () banked
 13492  01201A  97CE               	bcf	206,3,b	;volatile
 13493                           
 13494                           ; BSR set to: 14
 13495                           ;tmr4.c: 84: T4CON = 0xFF;
 13496  01201C  68B7               	setf	4023,c	;volatile
 13497                           
 13498                           ; BSR set to: 14
 13499  01201E  0012               	return		;funcret
 13500  012020                     __end_of_TMR4_Initialize:
 13501                           	opt stack 0
 13502                           tblptru	equ	0xFF8
 13503                           tblptrh	equ	0xFF7
 13504                           tblptrl	equ	0xFF6
 13505                           tablat	equ	0xFF5
 13506                           prodh	equ	0xFF4
 13507                           prodl	equ	0xFF3
 13508                           intcon	equ	0xFF2
 13509                           postinc0	equ	0xFEE
 13510                           wreg	equ	0xFE8
 13511                           indf2	equ	0xFDF
 13512                           fsr2h	equ	0xFDA
 13513                           fsr2l	equ	0xFD9
 13514                           status	equ	0xFD8
 13515                           
 13516 ;; *************** function _TMR3_Initialize *****************
 13517 ;; Defined at:
 13518 ;;		line 62 in file "mcc_generated_files/tmr3.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;		None
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;		None
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      void 
 13525 ;; Registers used:
 13526 ;;		wreg, status,2, status,0
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13536 ;;Total ram usage:        2 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:    2
 13539 ;; This function calls:
 13540 ;;		Nothing
 13541 ;; This function is called by:
 13542 ;;		_SYSTEM_Initialize
 13543 ;;		_mdb_poll
 13544 ;;		_mdb_unlock
 13545 ;;		_cctalk_comm
 13546 ;; This function uses a non-reentrant model
 13547 ;;
 13548                           
 13549                           	psect	text85
 13550  011D50                     __ptext85:
 13551                           	opt stack 0
 13552  011D50                     _TMR3_Initialize:
 13553                           	opt stack 27
 13554                           
 13555                           ;tmr3.c: 67: T3GCON = 0x00;
 13556                           
 13557                           ; BSR set to: 14
 13558                           ;incstack = 0
 13559  011D50  0E00               	movlw	0
 13560  011D52  6ECA               	movwf	4042,c	;volatile
 13561                           
 13562                           ;tmr3.c: 70: T3GATE = 0x00;
 13563  011D54  0E00               	movlw	0
 13564  011D56  6ECB               	movwf	4043,c	;volatile
 13565                           
 13566                           ;tmr3.c: 73: T3CLK = 0x05;
 13567  011D58  0E05               	movlw	5
 13568  011D5A  6ECC               	movwf	4044,c	;volatile
 13569                           
 13570                           ;tmr3.c: 76: TMR3H = 0x9E;
 13571  011D5C  0E9E               	movlw	158
 13572  011D5E  6EC8               	movwf	4040,c	;volatile
 13573                           
 13574                           ;tmr3.c: 79: TMR3L = 0x58;
 13575  011D60  0E58               	movlw	88
 13576  011D62  6EC7               	movwf	4039,c	;volatile
 13577                           
 13578                           ;tmr3.c: 82: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13579  011D64  50C7               	movf	4039,w,c	;volatile
 13580  011D66  CFC8 F01D          	movff	4040,??_TMR3_Initialize	;volatile
 13581  011D6A  6A1E               	clrf	(??_TMR3_Initialize+1)& (0+255),c
 13582  011D6C  C01D  F01E         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13583  011D70  6A1D               	clrf	??_TMR3_Initialize,c
 13584  011D72  101D               	iorwf	??_TMR3_Initialize,w,c
 13585  011D74  0100               	movlb	0	; () banked
 13586  011D76  6FB0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13587  011D78  501E               	movf	??_TMR3_Initialize+1,w,c
 13588  011D7A  6FB1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;tmr3.c: 85: PIR4bits.TMR3IF = 0;
 13592  011D7C  010E               	movlb	14	; () banked
 13593  011D7E  95CE               	bcf	206,2,b	;volatile
 13594                           
 13595                           ; BSR set to: 14
 13596                           ;tmr3.c: 88: T3CON = 0x01;
 13597  011D80  0E01               	movlw	1
 13598  011D82  6EC9               	movwf	4041,c	;volatile
 13599                           
 13600                           ; BSR set to: 14
 13601  011D84  0012               	return		;funcret
 13602  011D86                     __end_of_TMR3_Initialize:
 13603                           	opt stack 0
 13604                           tblptru	equ	0xFF8
 13605                           tblptrh	equ	0xFF7
 13606                           tblptrl	equ	0xFF6
 13607                           tablat	equ	0xFF5
 13608                           prodh	equ	0xFF4
 13609                           prodl	equ	0xFF3
 13610                           intcon	equ	0xFF2
 13611                           postinc0	equ	0xFEE
 13612                           wreg	equ	0xFE8
 13613                           indf2	equ	0xFDF
 13614                           fsr2h	equ	0xFDA
 13615                           fsr2l	equ	0xFD9
 13616                           status	equ	0xFD8
 13617                           
 13618 ;; *************** function _TMR2_Initialize *****************
 13619 ;; Defined at:
 13620 ;;		line 61 in file "mcc_generated_files/tmr2.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;		None
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;		None
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  1    wreg      void 
 13627 ;; Registers used:
 13628 ;;		wreg, status,2
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;Total ram usage:        0 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    2
 13641 ;; This function calls:
 13642 ;;		Nothing
 13643 ;; This function is called by:
 13644 ;;		_SYSTEM_Initialize
 13645 ;;		_pay_coin
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           
 13649                           	psect	text86
 13650  011FCA                     __ptext86:
 13651                           	opt stack 0
 13652  011FCA                     _TMR2_Initialize:
 13653                           	opt stack 24
 13654                           
 13655                           ;tmr2.c: 66: T2CLKCON = 0x05;
 13656                           
 13657                           ; BSR set to: 14
 13658                           ;incstack = 0
 13659  011FCA  0E05               	movlw	5
 13660  011FCC  6EBF               	movwf	4031,c	;volatile
 13661                           
 13662                           ;tmr2.c: 69: T2HLT = 0x20;
 13663  011FCE  0E20               	movlw	32
 13664  011FD0  6EBE               	movwf	4030,c	;volatile
 13665                           
 13666                           ;tmr2.c: 72: T2RST = 0x00;
 13667  011FD2  0E00               	movlw	0
 13668  011FD4  6EC0               	movwf	4032,c	;volatile
 13669                           
 13670                           ;tmr2.c: 75: T2PR = 0x85;
 13671  011FD6  0E85               	movlw	133
 13672  011FD8  6EBC               	movwf	4028,c	;volatile
 13673                           
 13674                           ;tmr2.c: 78: T2TMR = 0x00;
 13675  011FDA  0E00               	movlw	0
 13676  011FDC  6EBB               	movwf	4027,c	;volatile
 13677                           
 13678                           ;tmr2.c: 81: PIR4bits.TMR2IF = 0;
 13679  011FDE  010E               	movlb	14	; () banked
 13680  011FE0  93CE               	bcf	206,1,b	;volatile
 13681                           
 13682                           ;tmr2.c: 84: T2CON = 0xF1;
 13683  011FE2  0EF1               	movlw	241
 13684  011FE4  6EBD               	movwf	4029,c	;volatile
 13685                           
 13686                           ; BSR set to: 14
 13687  011FE6  0012               	return		;funcret
 13688  011FE8                     __end_of_TMR2_Initialize:
 13689                           	opt stack 0
 13690                           tblptru	equ	0xFF8
 13691                           tblptrh	equ	0xFF7
 13692                           tblptrl	equ	0xFF6
 13693                           tablat	equ	0xFF5
 13694                           prodh	equ	0xFF4
 13695                           prodl	equ	0xFF3
 13696                           intcon	equ	0xFF2
 13697                           postinc0	equ	0xFEE
 13698                           wreg	equ	0xFE8
 13699                           indf2	equ	0xFDF
 13700                           fsr2h	equ	0xFDA
 13701                           fsr2l	equ	0xFD9
 13702                           status	equ	0xFD8
 13703                           
 13704 ;; *************** function _TMR1_Initialize *****************
 13705 ;; Defined at:
 13706 ;;		line 62 in file "mcc_generated_files/tmr1.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;		None
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;		None
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  1    wreg      void 
 13713 ;; Registers used:
 13714 ;;		wreg, status,2, status,0
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13724 ;;Total ram usage:        2 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:    2
 13727 ;; This function calls:
 13728 ;;		Nothing
 13729 ;; This function is called by:
 13730 ;;		_SYSTEM_Initialize
 13731 ;;		_mdb_comm
 13732 ;;		_mdb_unlock
 13733 ;; This function uses a non-reentrant model
 13734 ;;
 13735                           
 13736                           	psect	text87
 13737  011D86                     __ptext87:
 13738                           	opt stack 0
 13739  011D86                     _TMR1_Initialize:
 13740                           	opt stack 24
 13741                           
 13742                           ;tmr1.c: 67: T1GCON = 0x00;
 13743                           
 13744                           ; BSR set to: 14
 13745                           ;incstack = 0
 13746  011D86  0E00               	movlw	0
 13747  011D88  6ED0               	movwf	4048,c	;volatile
 13748                           
 13749                           ;tmr1.c: 70: T1GATE = 0x00;
 13750  011D8A  0E00               	movlw	0
 13751  011D8C  6ED1               	movwf	4049,c	;volatile
 13752                           
 13753                           ;tmr1.c: 73: T1CLK = 0x05;
 13754  011D8E  0E05               	movlw	5
 13755  011D90  6ED2               	movwf	4050,c	;volatile
 13756                           
 13757                           ;tmr1.c: 76: TMR1H = 0xF6;
 13758  011D92  0EF6               	movlw	246
 13759  011D94  6ECE               	movwf	4046,c	;volatile
 13760                           
 13761                           ;tmr1.c: 79: TMR1L = 0x3C;
 13762  011D96  0E3C               	movlw	60
 13763  011D98  6ECD               	movwf	4045,c	;volatile
 13764                           
 13765                           ;tmr1.c: 82: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13766  011D9A  50CD               	movf	4045,w,c	;volatile
 13767  011D9C  CFCE F01D          	movff	4046,??_TMR1_Initialize	;volatile
 13768  011DA0  6A1E               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 13769  011DA2  C01D  F01E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13770  011DA6  6A1D               	clrf	??_TMR1_Initialize,c
 13771  011DA8  101D               	iorwf	??_TMR1_Initialize,w,c
 13772  011DAA  0100               	movlb	0	; () banked
 13773  011DAC  6FB2               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 13774  011DAE  501E               	movf	??_TMR1_Initialize+1,w,c
 13775  011DB0  6FB3               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;tmr1.c: 85: PIR4bits.TMR1IF = 0;
 13779  011DB2  010E               	movlb	14	; () banked
 13780  011DB4  91CE               	bcf	206,0,b	;volatile
 13781                           
 13782                           ; BSR set to: 14
 13783                           ;tmr1.c: 88: T1CON = 0x01;
 13784  011DB6  0E01               	movlw	1
 13785  011DB8  6ECF               	movwf	4047,c	;volatile
 13786                           
 13787                           ; BSR set to: 14
 13788  011DBA  0012               	return		;funcret
 13789  011DBC                     __end_of_TMR1_Initialize:
 13790                           	opt stack 0
 13791                           tblptru	equ	0xFF8
 13792                           tblptrh	equ	0xFF7
 13793                           tblptrl	equ	0xFF6
 13794                           tablat	equ	0xFF5
 13795                           prodh	equ	0xFF4
 13796                           prodl	equ	0xFF3
 13797                           intcon	equ	0xFF2
 13798                           postinc0	equ	0xFEE
 13799                           wreg	equ	0xFE8
 13800                           indf2	equ	0xFDF
 13801                           fsr2h	equ	0xFDA
 13802                           fsr2l	equ	0xFD9
 13803                           status	equ	0xFD8
 13804                           
 13805 ;; *************** function _TMR0_Initialize *****************
 13806 ;; Defined at:
 13807 ;;		line 64 in file "mcc_generated_files/tmr0.c"
 13808 ;; Parameters:    Size  Location     Type
 13809 ;;		None
 13810 ;; Auto vars:     Size  Location     Type
 13811 ;;		None
 13812 ;; Return value:  Size  Location     Type
 13813 ;;                  1    wreg      void 
 13814 ;; Registers used:
 13815 ;;		wreg, status,2, status,0
 13816 ;; Tracked objects:
 13817 ;;		On entry : 0/0
 13818 ;;		On exit  : 0/0
 13819 ;;		Unchanged: 0/0
 13820 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13825 ;;Total ram usage:        2 bytes
 13826 ;; Hardware stack levels used:    1
 13827 ;; Hardware stack levels required when called:    2
 13828 ;; This function calls:
 13829 ;;		Nothing
 13830 ;; This function is called by:
 13831 ;;		_SYSTEM_Initialize
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835                           	psect	text88
 13836  011EEA                     __ptext88:
 13837                           	opt stack 0
 13838  011EEA                     _TMR0_Initialize:
 13839                           	opt stack 27
 13840                           
 13841                           ;tmr0.c: 69: T0CON1 = 0x82;
 13842                           
 13843                           ; BSR set to: 14
 13844                           ;incstack = 0
 13845  011EEA  0E82               	movlw	130
 13846  011EEC  6ED6               	movwf	4054,c	;volatile
 13847                           
 13848                           ;tmr0.c: 72: TMR0H = 0xA5;
 13849  011EEE  0EA5               	movlw	165
 13850  011EF0  6ED4               	movwf	4052,c	;volatile
 13851                           
 13852                           ;tmr0.c: 75: TMR0L = 0x2E;
 13853  011EF2  0E2E               	movlw	46
 13854  011EF4  6ED3               	movwf	4051,c	;volatile
 13855                           
 13856                           ;tmr0.c: 78: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 13857  011EF6  50D3               	movf	4051,w,c	;volatile
 13858  011EF8  CFD4 F01D          	movff	4052,??_TMR0_Initialize	;volatile
 13859  011EFC  6A1E               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 13860  011EFE  C01D  F01E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13861  011F02  6A1D               	clrf	??_TMR0_Initialize,c
 13862  011F04  101D               	iorwf	??_TMR0_Initialize,w,c
 13863  011F06  0100               	movlb	0	; () banked
 13864  011F08  6FAC               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 13865  011F0A  501E               	movf	??_TMR0_Initialize+1,w,c
 13866  011F0C  6FAD               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;tmr0.c: 81: PIR0bits.TMR0IF = 0;
 13870  011F0E  010E               	movlb	14	; () banked
 13871  011F10  9BCA               	bcf	202,5,b	;volatile
 13872                           
 13873                           ; BSR set to: 14
 13874                           ;tmr0.c: 84: T0CON0 = 0x90;
 13875  011F12  0E90               	movlw	144
 13876  011F14  6ED5               	movwf	4053,c	;volatile
 13877                           
 13878                           ; BSR set to: 14
 13879  011F16  0012               	return		;funcret
 13880  011F18                     __end_of_TMR0_Initialize:
 13881                           	opt stack 0
 13882                           tblptru	equ	0xFF8
 13883                           tblptrh	equ	0xFF7
 13884                           tblptrl	equ	0xFF6
 13885                           tablat	equ	0xFF5
 13886                           prodh	equ	0xFF4
 13887                           prodl	equ	0xFF3
 13888                           intcon	equ	0xFF2
 13889                           postinc0	equ	0xFEE
 13890                           wreg	equ	0xFE8
 13891                           indf2	equ	0xFDF
 13892                           fsr2h	equ	0xFDA
 13893                           fsr2l	equ	0xFD9
 13894                           status	equ	0xFD8
 13895                           
 13896 ;; *************** function _PMD_Initialize *****************
 13897 ;; Defined at:
 13898 ;;		line 147 in file "mcc_generated_files/mcc.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;		None
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;		None
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1    wreg      void 
 13905 ;; Registers used:
 13906 ;;		wreg, status,2
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13916 ;;Total ram usage:        0 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    2
 13919 ;; This function calls:
 13920 ;;		Nothing
 13921 ;; This function is called by:
 13922 ;;		_SYSTEM_Initialize
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           	psect	text89
 13927  012020                     __ptext89:
 13928                           	opt stack 0
 13929  012020                     _PMD_Initialize:
 13930                           	opt stack 27
 13931                           
 13932                           ;mcc.c: 150: PMD0 = 0x00;
 13933                           
 13934                           ; BSR set to: 14
 13935                           ;incstack = 0
 13936  012020  0E00               	movlw	0
 13937  012022  010E               	movlb	14	; () banked
 13938  012024  6FE1               	movwf	225,b	;volatile
 13939                           
 13940                           ;mcc.c: 152: PMD1 = 0x00;
 13941  012026  0E00               	movlw	0
 13942  012028  6FE2               	movwf	226,b	;volatile
 13943                           
 13944                           ;mcc.c: 154: PMD2 = 0x00;
 13945  01202A  0E00               	movlw	0
 13946  01202C  6FE3               	movwf	227,b	;volatile
 13947                           
 13948                           ;mcc.c: 156: PMD3 = 0x00;
 13949  01202E  0E00               	movlw	0
 13950  012030  6FE4               	movwf	228,b	;volatile
 13951                           
 13952                           ;mcc.c: 158: PMD4 = 0x00;
 13953  012032  0E00               	movlw	0
 13954  012034  6FE5               	movwf	229,b	;volatile
 13955                           
 13956                           ;mcc.c: 160: PMD5 = 0x00;
 13957  012036  0E00               	movlw	0
 13958  012038  6FE6               	movwf	230,b	;volatile
 13959                           
 13960                           ; BSR set to: 14
 13961  01203A  0012               	return		;funcret
 13962  01203C                     __end_of_PMD_Initialize:
 13963                           	opt stack 0
 13964                           tblptru	equ	0xFF8
 13965                           tblptrh	equ	0xFF7
 13966                           tblptrl	equ	0xFF6
 13967                           tablat	equ	0xFF5
 13968                           prodh	equ	0xFF4
 13969                           prodl	equ	0xFF3
 13970                           intcon	equ	0xFF2
 13971                           postinc0	equ	0xFEE
 13972                           wreg	equ	0xFE8
 13973                           indf2	equ	0xFDF
 13974                           fsr2h	equ	0xFDA
 13975                           fsr2l	equ	0xFD9
 13976                           status	equ	0xFD8
 13977                           
 13978 ;; *************** function _PIN_MANAGER_Initialize *****************
 13979 ;; Defined at:
 13980 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;		None
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      void 
 13987 ;; Registers used:
 13988 ;;		wreg, status,2
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;Total ram usage:        0 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    2
 14001 ;; This function calls:
 14002 ;;		Nothing
 14003 ;; This function is called by:
 14004 ;;		_SYSTEM_Initialize
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text90
 14009  011486                     __ptext90:
 14010                           	opt stack 0
 14011  011486                     _PIN_MANAGER_Initialize:
 14012                           	opt stack 27
 14013                           
 14014                           ;pin_manager.c: 57: LATE = 0x00;
 14015                           
 14016                           ; BSR set to: 14
 14017                           ;incstack = 0
 14018  011486  0E00               	movlw	0
 14019  011488  6E87               	movwf	3975,c	;volatile
 14020                           
 14021                           ;pin_manager.c: 58: LATD = 0x00;
 14022  01148A  0E00               	movlw	0
 14023  01148C  6E86               	movwf	3974,c	;volatile
 14024                           
 14025                           ;pin_manager.c: 59: LATA = 0xC0;
 14026  01148E  0EC0               	movlw	192
 14027  011490  6E83               	movwf	3971,c	;volatile
 14028                           
 14029                           ;pin_manager.c: 60: LATB = 0x00;
 14030  011492  0E00               	movlw	0
 14031  011494  6E84               	movwf	3972,c	;volatile
 14032                           
 14033                           ;pin_manager.c: 61: LATC = 0x40;
 14034  011496  0E40               	movlw	64
 14035  011498  6E85               	movwf	3973,c	;volatile
 14036                           
 14037                           ;pin_manager.c: 66: TRISE = 0x00;
 14038  01149A  0E00               	movlw	0
 14039  01149C  6E8C               	movwf	3980,c	;volatile
 14040                           
 14041                           ;pin_manager.c: 67: TRISA = 0x1F;
 14042  01149E  0E1F               	movlw	31
 14043  0114A0  6E88               	movwf	3976,c	;volatile
 14044                           
 14045                           ;pin_manager.c: 68: TRISB = 0xF0;
 14046  0114A2  0EF0               	movlw	240
 14047  0114A4  6E89               	movwf	3977,c	;volatile
 14048                           
 14049                           ;pin_manager.c: 69: TRISC = 0x80;
 14050  0114A6  0E80               	movlw	128
 14051  0114A8  6E8A               	movwf	3978,c	;volatile
 14052                           
 14053                           ;pin_manager.c: 70: TRISD = 0x00;
 14054  0114AA  0E00               	movlw	0
 14055  0114AC  6E8B               	movwf	3979,c	;volatile
 14056                           
 14057                           ;pin_manager.c: 75: ANSELC = 0x00;
 14058  0114AE  0E00               	movlw	0
 14059  0114B0  010F               	movlb	15	; () banked
 14060  0114B2  6F21               	movwf	33,b	;volatile
 14061                           
 14062                           ;pin_manager.c: 76: ANSELB = 0xC0;
 14063  0114B4  0EC0               	movlw	192
 14064  0114B6  6F19               	movwf	25,b	;volatile
 14065                           
 14066                           ;pin_manager.c: 77: ANSELD = 0x00;
 14067  0114B8  0E00               	movlw	0
 14068  0114BA  6F26               	movwf	38,b	;volatile
 14069                           
 14070                           ;pin_manager.c: 78: ANSELE = 0x00;
 14071  0114BC  0E00               	movlw	0
 14072  0114BE  6F2E               	movwf	46,b	;volatile
 14073                           
 14074                           ;pin_manager.c: 79: ANSELA = 0x01;
 14075  0114C0  0E01               	movlw	1
 14076  0114C2  6F11               	movwf	17,b	;volatile
 14077                           
 14078                           ;pin_manager.c: 84: WPUD = 0x00;
 14079  0114C4  0E00               	movlw	0
 14080  0114C6  6F25               	movwf	37,b	;volatile
 14081                           
 14082                           ;pin_manager.c: 85: WPUE = 0x00;
 14083  0114C8  0E00               	movlw	0
 14084  0114CA  6F2D               	movwf	45,b	;volatile
 14085                           
 14086                           ;pin_manager.c: 86: WPUB = 0x00;
 14087  0114CC  0E00               	movlw	0
 14088  0114CE  6F18               	movwf	24,b	;volatile
 14089                           
 14090                           ;pin_manager.c: 87: WPUA = 0x00;
 14091  0114D0  0E00               	movlw	0
 14092  0114D2  6F10               	movwf	16,b	;volatile
 14093                           
 14094                           ;pin_manager.c: 88: WPUC = 0x00;
 14095  0114D4  0E00               	movlw	0
 14096  0114D6  6F20               	movwf	32,b	;volatile
 14097                           
 14098                           ;pin_manager.c: 93: ODCONE = 0x00;
 14099  0114D8  0E00               	movlw	0
 14100  0114DA  6F2C               	movwf	44,b	;volatile
 14101                           
 14102                           ;pin_manager.c: 94: ODCONA = 0x00;
 14103  0114DC  0E00               	movlw	0
 14104  0114DE  6F0F               	movwf	15,b	;volatile
 14105                           
 14106                           ;pin_manager.c: 95: ODCONB = 0x00;
 14107  0114E0  0E00               	movlw	0
 14108  0114E2  6F17               	movwf	23,b	;volatile
 14109                           
 14110                           ;pin_manager.c: 96: ODCONC = 0x00;
 14111  0114E4  0E00               	movlw	0
 14112  0114E6  6F1F               	movwf	31,b	;volatile
 14113                           
 14114                           ;pin_manager.c: 97: ODCOND = 0x00;
 14115  0114E8  0E00               	movlw	0
 14116  0114EA  6F24               	movwf	36,b	;volatile
 14117                           
 14118                           ; BSR set to: 15
 14119                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
 14120  0114EC  010E               	movlb	14	; () banked
 14121  0114EE  89C2               	bsf	194,4,b	;volatile
 14122                           
 14123                           ; BSR set to: 14
 14124                           ;pin_manager.c: 106: RX1PPSbits.RXPPS = 0x17;
 14125  0114F0  81B5               	bsf	181,0,b	;volatile
 14126  0114F2  83B5               	bsf	181,1,b	;volatile
 14127  0114F4  85B5               	bsf	181,2,b	;volatile
 14128  0114F6  97B5               	bcf	181,3,b	;volatile
 14129  0114F8  89B5               	bsf	181,4,b	;volatile
 14130                           
 14131                           ;pin_manager.c: 107: RC6PPS = 0x09;
 14132  0114FA  0E09               	movlw	9
 14133  0114FC  6FFD               	movwf	253,b	;volatile
 14134                           
 14135                           ; BSR set to: 14
 14136  0114FE  0012               	return		;funcret
 14137  011500                     __end_of_PIN_MANAGER_Initialize:
 14138                           	opt stack 0
 14139                           tblptru	equ	0xFF8
 14140                           tblptrh	equ	0xFF7
 14141                           tblptrl	equ	0xFF6
 14142                           tablat	equ	0xFF5
 14143                           prodh	equ	0xFF4
 14144                           prodl	equ	0xFF3
 14145                           intcon	equ	0xFF2
 14146                           postinc0	equ	0xFEE
 14147                           wreg	equ	0xFE8
 14148                           indf2	equ	0xFDF
 14149                           fsr2h	equ	0xFDA
 14150                           fsr2l	equ	0xFD9
 14151                           status	equ	0xFD8
 14152                           
 14153 ;; *************** function _OSCILLATOR_Initialize *****************
 14154 ;; Defined at:
 14155 ;;		line 133 in file "mcc_generated_files/mcc.c"
 14156 ;; Parameters:    Size  Location     Type
 14157 ;;		None
 14158 ;; Auto vars:     Size  Location     Type
 14159 ;;		None
 14160 ;; Return value:  Size  Location     Type
 14161 ;;                  1    wreg      void 
 14162 ;; Registers used:
 14163 ;;		wreg, status,2
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/0
 14166 ;;		On exit  : 0/0
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14173 ;;Total ram usage:        0 bytes
 14174 ;; Hardware stack levels used:    1
 14175 ;; Hardware stack levels required when called:    2
 14176 ;; This function calls:
 14177 ;;		Nothing
 14178 ;; This function is called by:
 14179 ;;		_SYSTEM_Initialize
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           	psect	text91
 14184  01206C                     __ptext91:
 14185                           	opt stack 0
 14186  01206C                     _OSCILLATOR_Initialize:
 14187                           	opt stack 27
 14188                           
 14189                           ;mcc.c: 136: OSCCON1 = 0x60;
 14190                           
 14191                           ; BSR set to: 14
 14192                           ;incstack = 0
 14193  01206C  0E60               	movlw	96
 14194  01206E  010E               	movlb	14	; () banked
 14195  012070  6FD8               	movwf	216,b	;volatile
 14196                           
 14197                           ;mcc.c: 138: OSCCON3 = 0x00;
 14198  012072  0E00               	movlw	0
 14199  012074  6FDA               	movwf	218,b	;volatile
 14200                           
 14201                           ;mcc.c: 140: OSCEN = 0x00;
 14202  012076  0E00               	movlw	0
 14203  012078  6FDC               	movwf	220,b	;volatile
 14204                           
 14205                           ;mcc.c: 142: OSCFRQ = 0x04;
 14206  01207A  0E04               	movlw	4
 14207  01207C  6FDE               	movwf	222,b	;volatile
 14208                           
 14209                           ;mcc.c: 144: OSCTUNE = 0x00;
 14210  01207E  0E00               	movlw	0
 14211  012080  6FDD               	movwf	221,b	;volatile
 14212                           
 14213                           ; BSR set to: 14
 14214  012082  0012               	return		;funcret
 14215  012084                     __end_of_OSCILLATOR_Initialize:
 14216                           	opt stack 0
 14217                           tblptru	equ	0xFF8
 14218                           tblptrh	equ	0xFF7
 14219                           tblptrl	equ	0xFF6
 14220                           tablat	equ	0xFF5
 14221                           prodh	equ	0xFF4
 14222                           prodl	equ	0xFF3
 14223                           intcon	equ	0xFF2
 14224                           postinc0	equ	0xFEE
 14225                           wreg	equ	0xFE8
 14226                           indf2	equ	0xFDF
 14227                           fsr2h	equ	0xFDA
 14228                           fsr2l	equ	0xFD9
 14229                           status	equ	0xFD8
 14230                           
 14231 ;; *************** function _INTERRUPT_Initialize *****************
 14232 ;; Defined at:
 14233 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 14234 ;; Parameters:    Size  Location     Type
 14235 ;;		None
 14236 ;; Auto vars:     Size  Location     Type
 14237 ;;		None
 14238 ;; Return value:  Size  Location     Type
 14239 ;;                  1    wreg      void 
 14240 ;; Registers used:
 14241 ;;		None
 14242 ;; Tracked objects:
 14243 ;;		On entry : 0/0
 14244 ;;		On exit  : 0/0
 14245 ;;		Unchanged: 0/0
 14246 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14251 ;;Total ram usage:        0 bytes
 14252 ;; Hardware stack levels used:    1
 14253 ;; Hardware stack levels required when called:    2
 14254 ;; This function calls:
 14255 ;;		Nothing
 14256 ;; This function is called by:
 14257 ;;		_SYSTEM_Initialize
 14258 ;; This function uses a non-reentrant model
 14259 ;;
 14260                           
 14261                           	psect	text92
 14262  01216E                     __ptext92:
 14263                           	opt stack 0
 14264  01216E                     _INTERRUPT_Initialize:
 14265                           	opt stack 27
 14266                           
 14267                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
 14268                           
 14269                           ; BSR set to: 14
 14270                           ;incstack = 0
 14271  01216E  8AF2               	bsf	intcon,5,c	;volatile
 14272                           
 14273                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
 14274  012170  010E               	movlb	14	; () banked
 14275  012172  89BA               	bsf	186,4,b	;volatile
 14276                           
 14277                           ; BSR set to: 14
 14278  012174  0012               	return		;funcret
 14279  012176                     __end_of_INTERRUPT_Initialize:
 14280                           	opt stack 0
 14281                           tblptru	equ	0xFF8
 14282                           tblptrh	equ	0xFF7
 14283                           tblptrl	equ	0xFF6
 14284                           tablat	equ	0xFF5
 14285                           prodh	equ	0xFF4
 14286                           prodl	equ	0xFF3
 14287                           intcon	equ	0xFF2
 14288                           postinc0	equ	0xFEE
 14289                           wreg	equ	0xFE8
 14290                           indf2	equ	0xFDF
 14291                           fsr2h	equ	0xFDA
 14292                           fsr2l	equ	0xFD9
 14293                           status	equ	0xFD8
 14294                           
 14295 ;; *************** function _EUSART1_Initialize *****************
 14296 ;; Defined at:
 14297 ;;		line 53 in file "mcc_generated_files/eusart1.c"
 14298 ;; Parameters:    Size  Location     Type
 14299 ;;		None
 14300 ;; Auto vars:     Size  Location     Type
 14301 ;;		None
 14302 ;; Return value:  Size  Location     Type
 14303 ;;                  1    wreg      void 
 14304 ;; Registers used:
 14305 ;;		wreg, status,2
 14306 ;; Tracked objects:
 14307 ;;		On entry : 0/0
 14308 ;;		On exit  : 0/0
 14309 ;;		Unchanged: 0/0
 14310 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14315 ;;Total ram usage:        0 bytes
 14316 ;; Hardware stack levels used:    1
 14317 ;; Hardware stack levels required when called:    2
 14318 ;; This function calls:
 14319 ;;		Nothing
 14320 ;; This function is called by:
 14321 ;;		_SYSTEM_Initialize
 14322 ;; This function uses a non-reentrant model
 14323 ;;
 14324                           
 14325                           	psect	text93
 14326  0120B0                     __ptext93:
 14327                           	opt stack 0
 14328  0120B0                     _EUSART1_Initialize:
 14329                           	opt stack 27
 14330                           
 14331                           ;eusart1.c: 58: BAUD1CON = 0x08;
 14332                           
 14333                           ; BSR set to: 14
 14334                           ;incstack = 0
 14335  0120B0  0E08               	movlw	8
 14336  0120B2  6E9F               	movwf	3999,c	;volatile
 14337                           
 14338                           ;eusart1.c: 61: RC1STA = 0xD0;
 14339  0120B4  0ED0               	movlw	208
 14340  0120B6  6E9D               	movwf	3997,c	;volatile
 14341                           
 14342                           ;eusart1.c: 64: TX1STA = 0xEC;
 14343  0120B8  0EEC               	movlw	236
 14344  0120BA  6E9E               	movwf	3998,c	;volatile
 14345                           
 14346                           ;eusart1.c: 67: SP1BRGL = 0x38;
 14347  0120BC  0E38               	movlw	56
 14348  0120BE  6E9B               	movwf	3995,c	;volatile
 14349                           
 14350                           ;eusart1.c: 70: SP1BRGH = 0x01;
 14351  0120C0  0E01               	movlw	1
 14352  0120C2  6E9C               	movwf	3996,c	;volatile
 14353  0120C4  0012               	return		;funcret
 14354  0120C6                     __end_of_EUSART1_Initialize:
 14355                           	opt stack 0
 14356                           tblptru	equ	0xFF8
 14357                           tblptrh	equ	0xFF7
 14358                           tblptrl	equ	0xFF6
 14359                           tablat	equ	0xFF5
 14360                           prodh	equ	0xFF4
 14361                           prodl	equ	0xFF3
 14362                           intcon	equ	0xFF2
 14363                           postinc0	equ	0xFEE
 14364                           wreg	equ	0xFE8
 14365                           indf2	equ	0xFDF
 14366                           fsr2h	equ	0xFDA
 14367                           fsr2l	equ	0xFD9
 14368                           status	equ	0xFD8
 14369                           
 14370 ;; *************** function _DAC1_Initialize *****************
 14371 ;; Defined at:
 14372 ;;		line 57 in file "mcc_generated_files/dac1.c"
 14373 ;; Parameters:    Size  Location     Type
 14374 ;;		None
 14375 ;; Auto vars:     Size  Location     Type
 14376 ;;		None
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  1    wreg      void 
 14379 ;; Registers used:
 14380 ;;		wreg, status,2
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14390 ;;Total ram usage:        0 bytes
 14391 ;; Hardware stack levels used:    1
 14392 ;; Hardware stack levels required when called:    2
 14393 ;; This function calls:
 14394 ;;		Nothing
 14395 ;; This function is called by:
 14396 ;;		_SYSTEM_Initialize
 14397 ;;		_mdb_unlock
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401                           	psect	text94
 14402  01214A                     __ptext94:
 14403                           	opt stack 0
 14404  01214A                     _DAC1_Initialize:
 14405                           	opt stack 26
 14406                           
 14407                           ;dac1.c: 60: DAC1CON0 = 0x80;
 14408                           
 14409                           ;incstack = 0
 14410  01214A  0E80               	movlw	128
 14411  01214C  010F               	movlb	15	; () banked
 14412  01214E  6F33               	movwf	51,b	;volatile
 14413                           
 14414                           ;dac1.c: 62: DAC1CON1 = 0x1C;
 14415  012150  0E1C               	movlw	28
 14416  012152  6F34               	movwf	52,b	;volatile
 14417                           
 14418                           ; BSR set to: 15
 14419  012154  0012               	return		;funcret
 14420  012156                     __end_of_DAC1_Initialize:
 14421                           	opt stack 0
 14422                           tblptru	equ	0xFF8
 14423                           tblptrh	equ	0xFF7
 14424                           tblptrl	equ	0xFF6
 14425                           tablat	equ	0xFF5
 14426                           prodh	equ	0xFF4
 14427                           prodl	equ	0xFF3
 14428                           intcon	equ	0xFF2
 14429                           postinc0	equ	0xFEE
 14430                           wreg	equ	0xFE8
 14431                           indf2	equ	0xFDF
 14432                           fsr2h	equ	0xFDA
 14433                           fsr2l	equ	0xFD9
 14434                           status	equ	0xFD8
 14435                           
 14436 ;; *************** function _CMP1_Initialize *****************
 14437 ;; Defined at:
 14438 ;;		line 57 in file "mcc_generated_files/cmp1.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;		None
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;		None
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  1    wreg      void 
 14445 ;; Registers used:
 14446 ;;		wreg, status,2
 14447 ;; Tracked objects:
 14448 ;;		On entry : 0/0
 14449 ;;		On exit  : 0/0
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;Total ram usage:        0 bytes
 14457 ;; Hardware stack levels used:    1
 14458 ;; Hardware stack levels required when called:    2
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_SYSTEM_Initialize
 14463 ;;		_mdb_unlock
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text95
 14468  0120DA                     __ptext95:
 14469                           	opt stack 0
 14470  0120DA                     _CMP1_Initialize:
 14471                           	opt stack 26
 14472                           
 14473                           ;cmp1.c: 61: CM1CON0 = 0x90;
 14474                           
 14475                           ; BSR set to: 15
 14476                           ;incstack = 0
 14477  0120DA  0E90               	movlw	144
 14478  0120DC  010F               	movlb	15	; () banked
 14479  0120DE  6F39               	movwf	57,b	;volatile
 14480                           
 14481                           ;cmp1.c: 64: CM1CON1 = 0x00;
 14482  0120E0  0E00               	movlw	0
 14483  0120E2  6F3A               	movwf	58,b	;volatile
 14484                           
 14485                           ;cmp1.c: 67: CM1NCH = 0x00;
 14486  0120E4  0E00               	movlw	0
 14487  0120E6  6F3B               	movwf	59,b	;volatile
 14488                           
 14489                           ;cmp1.c: 70: CM1PCH = 0x05;
 14490  0120E8  0E05               	movlw	5
 14491  0120EA  6F3C               	movwf	60,b	;volatile
 14492                           
 14493                           ; BSR set to: 15
 14494  0120EC  0012               	return		;funcret
 14495  0120EE                     __end_of_CMP1_Initialize:
 14496                           	opt stack 0
 14497                           tblptru	equ	0xFF8
 14498                           tblptrh	equ	0xFF7
 14499                           tblptrl	equ	0xFF6
 14500                           tablat	equ	0xFF5
 14501                           prodh	equ	0xFF4
 14502                           prodl	equ	0xFF3
 14503                           intcon	equ	0xFF2
 14504                           postinc0	equ	0xFEE
 14505                           wreg	equ	0xFE8
 14506                           indf2	equ	0xFDF
 14507                           fsr2h	equ	0xFDA
 14508                           fsr2l	equ	0xFD9
 14509                           status	equ	0xFD8
 14510                           
 14511 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 14512 ;; Defined at:
 14513 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
 14514 ;; Parameters:    Size  Location     Type
 14515 ;;		None
 14516 ;; Auto vars:     Size  Location     Type
 14517 ;;		None
 14518 ;; Return value:  Size  Location     Type
 14519 ;;                  1    wreg      void 
 14520 ;; Registers used:
 14521 ;;		cstack
 14522 ;; Tracked objects:
 14523 ;;		On entry : 0/0
 14524 ;;		On exit  : 0/0
 14525 ;;		Unchanged: 0/0
 14526 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14529 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14530 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14531 ;;Total ram usage:       18 bytes
 14532 ;; Hardware stack levels used:    1
 14533 ;; Hardware stack levels required when called:    1
 14534 ;; This function calls:
 14535 ;;		_PIN_MANAGER_IOC
 14536 ;; This function is called by:
 14537 ;;		Interrupt level 2
 14538 ;; This function uses a non-reentrant model
 14539 ;;
 14540                           
 14541                           	psect	intcode
 14542  000008                     __pintcode:
 14543                           	opt stack 0
 14544  000008                     _INTERRUPT_InterruptManagerHigh:
 14545                           	opt stack 18
 14546                           
 14547                           ; BSR set to: 15
 14548                           ;incstack = 0
 14549  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14550  00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 14551  00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 14552  000012  CFE9 F00D          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 14553  000016  CFEA F00E          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 14554  00001A  CFE1 F00F          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 14555  00001E  CFE2 F010          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 14556  000022  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 14557  000026  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 14558  00002A  CFF3 F013          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 14559  00002E  CFF4 F014          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 14560  000032  CFF6 F015          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 14561  000036  CFF7 F016          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 14562  00003A  CFF8 F017          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 14563  00003E  CFF5 F018          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 14564  000042  C04F  F019         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 14565  000046  C050  F01A         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 14566  00004A  C051  F01B         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 14567  00004E  C052  F01C         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 14568                           
 14569                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 14570  000052  010E               	movlb	14	; () banked
 14571  000054  B9C2               	btfsc	194,4,b	;volatile
 14572                           
 14573                           ; BSR set to: 14
 14574  000056  A9CA               	btfss	202,4,b	;volatile
 14575  000058  D002               	goto	i2l189
 14576                           
 14577                           ; BSR set to: 14
 14578                           ;interrupt_manager.c: 68: {
 14579                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
 14580  00005A  ECC1  F090         	call	_PIN_MANAGER_IOC	;wreg free
 14581  00005E                     i2l189:
 14582                           
 14583                           ;interrupt_manager.c: 71: else
 14584                           ;interrupt_manager.c: 72: {
 14585  00005E  C01C  F052         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 14586  000062  C01B  F051         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 14587  000066  C01A  F050         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 14588  00006A  C019  F04F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 14589  00006E  C018  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 14590  000072  C017  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 14591  000076  C016  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 14592  00007A  C015  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 14593  00007E  C014  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 14594  000082  C013  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 14595  000086  C012  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 14596  00008A  C011  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 14597  00008E  C010  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 14598  000092  C00F  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 14599  000096  C00E  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 14600  00009A  C00D  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 14601  00009E  C00C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 14602  0000A2  C00B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 14603  0000A6  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14604  0000A8  0011               	retfie		f
 14605  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
 14606                           	opt stack 0
 14607                           pclatu	equ	0xFFB
 14608                           pclath	equ	0xFFA
 14609                           tblptru	equ	0xFF8
 14610                           tblptrh	equ	0xFF7
 14611                           tblptrl	equ	0xFF6
 14612                           tablat	equ	0xFF5
 14613                           prodh	equ	0xFF4
 14614                           prodl	equ	0xFF3
 14615                           intcon	equ	0xFF2
 14616                           postinc0	equ	0xFEE
 14617                           fsr0h	equ	0xFEA
 14618                           fsr0l	equ	0xFE9
 14619                           wreg	equ	0xFE8
 14620                           fsr1h	equ	0xFE2
 14621                           fsr1l	equ	0xFE1
 14622                           indf2	equ	0xFDF
 14623                           fsr2h	equ	0xFDA
 14624                           fsr2l	equ	0xFD9
 14625                           status	equ	0xFD8
 14626                           
 14627 ;; *************** function _PIN_MANAGER_IOC *****************
 14628 ;; Defined at:
 14629 ;;		line 111 in file "mcc_generated_files/pin_manager.c"
 14630 ;; Parameters:    Size  Location     Type
 14631 ;;		None
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;		None
 14634 ;; Return value:  Size  Location     Type
 14635 ;;                  1    wreg      void 
 14636 ;; Registers used:
 14637 ;;		None
 14638 ;; Tracked objects:
 14639 ;;		On entry : 0/0
 14640 ;;		On exit  : 0/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14647 ;;Total ram usage:        0 bytes
 14648 ;; Hardware stack levels used:    1
 14649 ;; This function calls:
 14650 ;;		Nothing
 14651 ;; This function is called by:
 14652 ;;		_INTERRUPT_InterruptManagerHigh
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           	psect	text97
 14657  012182                     __ptext97:
 14658                           	opt stack 0
 14659  012182                     _PIN_MANAGER_IOC:
 14660                           	opt stack 18
 14661                           
 14662                           ;pin_manager.c: 115: PIR0bits.IOCIF = 0;
 14663                           
 14664                           ;incstack = 0
 14665  012182  010E               	movlb	14	; () banked
 14666  012184  99CA               	bcf	202,4,b	;volatile
 14667                           
 14668                           ; BSR set to: 14
 14669  012186  0012               	return		;funcret
 14670  012188                     __end_of_PIN_MANAGER_IOC:
 14671                           	opt stack 0
 14672                           pclatu	equ	0xFFB
 14673                           pclath	equ	0xFFA
 14674                           tblptru	equ	0xFF8
 14675                           tblptrh	equ	0xFF7
 14676                           tblptrl	equ	0xFF6
 14677                           tablat	equ	0xFF5
 14678                           prodh	equ	0xFF4
 14679                           prodl	equ	0xFF3
 14680                           intcon	equ	0xFF2
 14681                           postinc0	equ	0xFEE
 14682                           fsr0h	equ	0xFEA
 14683                           fsr0l	equ	0xFE9
 14684                           wreg	equ	0xFE8
 14685                           fsr1h	equ	0xFE2
 14686                           fsr1l	equ	0xFE1
 14687                           indf2	equ	0xFDF
 14688                           fsr2h	equ	0xFDA
 14689                           fsr2l	equ	0xFD9
 14690                           status	equ	0xFD8
 14691                           pclatu	equ	0xFFB
 14692                           pclath	equ	0xFFA
 14693                           tblptru	equ	0xFF8
 14694                           tblptrh	equ	0xFF7
 14695                           tblptrl	equ	0xFF6
 14696                           tablat	equ	0xFF5
 14697                           prodh	equ	0xFF4
 14698                           prodl	equ	0xFF3
 14699                           intcon	equ	0xFF2
 14700                           postinc0	equ	0xFEE
 14701                           fsr0h	equ	0xFEA
 14702                           fsr0l	equ	0xFE9
 14703                           wreg	equ	0xFE8
 14704                           fsr1h	equ	0xFE2
 14705                           fsr1l	equ	0xFE1
 14706                           indf2	equ	0xFDF
 14707                           fsr2h	equ	0xFDA
 14708                           fsr2l	equ	0xFD9
 14709                           status	equ	0xFD8
 14710                           
 14711                           	psect	rparam
 14712  0000                     pclatu	equ	0xFFB
 14713                           pclath	equ	0xFFA
 14714                           tblptru	equ	0xFF8
 14715                           tblptrh	equ	0xFF7
 14716                           tblptrl	equ	0xFF6
 14717                           tablat	equ	0xFF5
 14718                           prodh	equ	0xFF4
 14719                           prodl	equ	0xFF3
 14720                           intcon	equ	0xFF2
 14721                           postinc0	equ	0xFEE
 14722                           fsr0h	equ	0xFEA
 14723                           fsr0l	equ	0xFE9
 14724                           wreg	equ	0xFE8
 14725                           fsr1h	equ	0xFE2
 14726                           fsr1l	equ	0xFE1
 14727                           indf2	equ	0xFDF
 14728                           fsr2h	equ	0xFDA
 14729                           fsr2l	equ	0xFD9
 14730                           status	equ	0xFD8
 14731                           
 14732                           	psect	temp
 14733  00004F                     btemp:
 14734                           	opt stack 0
 14735  00004F                     	ds	1
 14736  0000                     int$flags	set	btemp
 14737  0000                     wtemp6	set	btemp+1
 14738                           pclatu	equ	0xFFB
 14739                           pclath	equ	0xFFA
 14740                           tblptru	equ	0xFF8
 14741                           tblptrh	equ	0xFF7
 14742                           tblptrl	equ	0xFF6
 14743                           tablat	equ	0xFF5
 14744                           prodh	equ	0xFF4
 14745                           prodl	equ	0xFF3
 14746                           intcon	equ	0xFF2
 14747                           postinc0	equ	0xFEE
 14748                           fsr0h	equ	0xFEA
 14749                           fsr0l	equ	0xFE9
 14750                           wreg	equ	0xFE8
 14751                           fsr1h	equ	0xFE2
 14752                           fsr1l	equ	0xFE1
 14753                           indf2	equ	0xFDF
 14754                           fsr2h	equ	0xFDA
 14755                           fsr2l	equ	0xFD9
 14756                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1361
    Data        2
    BSS         93
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          85     33      67
    COMRAMl           1      0       1
    BANK0           160     16      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Read_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Write_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Init_vendmem@chanlink	PTR unsigned char  size(2) Largest target is 1
		 -> chanlink1(BIGRAMl[1]), 

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 80
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), setnotes(CODE[69]), chanresetmsg(CODE[32]), chanlinkm(CODE[55]), 
		 -> vendtimem(CODE[41]), setimemsg(CODE[41]), vendsetup(CODE[80]), pricesetm2(CODE[57]), 
		 -> pricesetmsg(CODE[18]), creditclr(CODE[16]), dacmsg(CODE[13]), hoppcoin(CODE[51]), 
		 -> initnote(CODE[37]), noteerr(CODE[28]), credits(CODE[13]), timemsg(CODE[18]), 
		 -> clrline(CODE[21]), enabled(CODE[10]), disabled(CODE[10]), sensoffmsg(CODE[31]), 
		 -> sensmsg(CODE[11]), linkmsg(CODE[12]), chanmsg(CODE[12]), clrmsg(CODE[10]), 
		 -> onmsg(CODE[4]), offmsg(CODE[4]), servmsg(CODE[80]), inscoin(CODE[49]), 

    displ_note@notestring	PTR unsigned char  size(2) Largest target is 9
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), 


Critical Paths under _main in COMRAMh

    _vend_init->_lcd_string
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_reset->_mdb_comm
    _mdb_noten->_mdb_comm
    _mdb_poll->_mdb_comm
    _mdb_comm->_TMR1_Initialize
    _mdb_comm->_init_mdbdata
    _mdb_comm->_mdb_transmit
    _mdb_transmit->_EUSART1_Write
    _lcd_test->_lcd_writeC
    _hopper_test->_hopper_pay
    _hopper_pay->_Update_coinsout
    _pay_coin->_Reset_hopper
    _Update_coinsout->_Write_NVstore
    _set_notes->_enable_notes
    _enable_notes->_displ_nendis
    _save_notes->_DATAEE_WriteByte
    _displ_nendis->_lcd_string
    _displ_note->_lcd_string
    _set_price->_displ_price
    _displ_price->_displ_hex
    _mdb_unlock->_TMR1_Initialize
    _mdb_unlock->_TMR3_Initialize
    _mdb_unlock->_TMR5_Initialize
    _Vend_timeset->_displ_time
    _displ_time->_displ_hex
    _off_sens->_displ_sflags
    _displ_sflags->_lcd_string
    _Reset_settings->_lcd_string
    _Init_vendmem->_DATAEE_ReadByte
    _Link_chan->_displ_lflags
    _displ_lflags->_lcd_string
    _Sensor_set->_displ_sens
    _displ_sens->_displ_hex
    _Hopper_coin->_Update_Hopcoin
    _butindb->_butin
    _Update_Hopcoin->_displ_hex
    _Clear_cred->_lcd_string
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_Update_cashaudit
    _Update_cashaudit->_Write_NVstore
    _Write_NVstore->_DATAEE_WriteByte
    _Read_NVstore->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMh

    None.

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMl

    None.

Critical Paths under _main in BANK0

    _price_set->_set_price
    _displ_price->_displ_hex
    _Vend_settime->_Vend_timeset
    _displ_time->_displ_hex
    _Sens_off->_off_sens
    _Chan_link->_Link_chan
    _displ_sens->_displ_hex
    _Hopper_coin->_displ_hex
    _Update_Hopcoin->_displ_hex
    _displ_credit->_displ_hex

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  340006
               _CMP1_GetOutputStatus
                  _SYSTEM_Initialize
                         _credit_add
                    _credit_subtract
                       _displ_credit
                       _displ_noteer
                      _enter_service
                           _lcd_init
                         _lcd_string
                           _mdb_init
                           _mdb_poll
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   19235
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                       _Init_vendmem
                       _credit_check
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             3     3      0    5198
                                             26 COMRAMh    3     3      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0     924
                                             23 COMRAMh    3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      22
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             1     1      0     894
                                             23 COMRAMh    1     1      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1     893
                                             20 COMRAMh    3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      44
                                             19 COMRAMh    1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0      90
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    7212
                                              0 BANK0      2     2      0
                        _hopper_test
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     523
                                             25 COMRAMh    1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _hopper_test                                          0     0      0    6525
                         _hopper_pay
 ---------------------------------------------------------------------------------
 (3) _hopper_pay                                           3     3      0    6525
                                             29 COMRAMh    3     3      0
                    _Update_coinsout
                         _cctalk_off
                          _cctalk_on
                           _pay_coin
 ---------------------------------------------------------------------------------
 (4) _pay_coin                                             0     0      0       0
                       _Reset_hopper
                    _TMR2_Initialize
                    _TMR4_Initialize
                        _switch_read
 ---------------------------------------------------------------------------------
 (5) _switch_read                                          1     1      0       0
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _Reset_hopper                                         2     2      0       0
                                             18 COMRAMh    2     2      0
                    _TMR4_Initialize
                         _cctalk_off
                          _cctalk_on
 ---------------------------------------------------------------------------------
 (6) _cctalk_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _cctalk_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Update_coinsout                                      1     1      0    6423
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        0     0      0  259028
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                         _Sensor_set
                         _Vend_setup
                            _butindb
                         _lcd_string
                         _mdb_unlock
                          _price_set
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            0     0      0   42660
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         1     1      0   22621
                                             32 COMRAMh    1     1      0
                            _butindb
                       _displ_nendis
                         _lcd_string
                         _save_notes
 ---------------------------------------------------------------------------------
 (4) _save_notes                                           0     0      0    3007
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         2     2      0    9677
                                             30 COMRAMh    2     2      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           2     0      2   10257
                                             30 COMRAMh    2     0      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _price_set                                            0     0      0   27293
                       _Read_Service
                            _butindb
                         _lcd_string
                          _set_price
 ---------------------------------------------------------------------------------
 (3) _set_price                                            4     4      0   17477
                                             12 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                        _displ_price
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _displ_price                                          1     1      0    3010
                                             31 COMRAMh    1     1      0
                          _displ_hex
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _mdb_unlock                                           1     1      0       0
                                             20 COMRAMh    1     1      0
                    _CMP1_Initialize
                    _DAC1_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _Vend_setup                                           0     0      0  112190
                          _Chan_link
                       _Init_vendmem
                     _Reset_settings
                           _Sens_off
                       _Vend_settime
                            _butindb
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _Vend_settime                                         0     0      0   37005
                       _Read_Service
                       _Vend_timeset
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Vend_timeset                                         4     4      0   27084
                                             12 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                         _displ_time
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_time                                           2     1      1   12533
                                             31 COMRAMh    2     1      1
                          _displ_hex
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Sens_off                                             0     0      0   25659
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
                           _off_sens
 ---------------------------------------------------------------------------------
 (4) _off_sens                                             3     3      0   15738
                                              0 BANK0      3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                       _displ_sflags
 ---------------------------------------------------------------------------------
 (5) _displ_sflags                                         3     1      2   10672
                                             30 COMRAMh    3     1      2
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Reset_settings                                       4     4      0   12687
                                             30 COMRAMh    2     2      0
                                              0 BANK0      2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Init_vendmem                                         5     5      0    1579
                                             20 COMRAMh    5     5      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _Chan_link                                            2     2      0   25478
                                              5 BANK0      2     2      0
                          _Link_chan
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _get_channel                                          2     2      0     105
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (4) _Link_chan                                            5     5      0   15557
                                              0 BANK0      5     5      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _Read_Service
                            _butindb
                       _displ_lflags
 ---------------------------------------------------------------------------------
 (5) _displ_lflags                                         3     2      1   10612
                                             30 COMRAMh    3     2      1
                        _lcd_dispadd
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Read_Service                                         1     1      0      34
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           1     1      0   25403
                                             12 BANK0      1     1      0
                            _butindb
                         _displ_sens
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_sens                                           2     1      1   15494
                                             31 COMRAMh    2     1      1
               _CMP1_GetOutputStatus
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          1     1      0   29081
                                             12 BANK0      1     1      0
                    _DATAEE_ReadByte
                     _Update_Hopcoin
                            _butindb
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              4     4      0     170
                                             20 COMRAMh    4     4      0
                              _butin
 ---------------------------------------------------------------------------------
 (5) _butin                                                2     2      0      68
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (3) _Update_Hopcoin                                       2     1      1   15397
                                             31 COMRAMh    2     1      1
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           2     2      0   12619
                                             30 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Audit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0   10222
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     610
                                             25 COMRAMh    3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0   13220
                                             31 COMRAMh    1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3    9612
                                             25 COMRAMh    5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (5) _displ_hex                                           15    12      3    2162
                                             28 COMRAMh    3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           1     1      0     424
                                             24 COMRAMh    1     1      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     229
                                             22 COMRAMh    2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     164
                                             20 COMRAMh    2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      68
                                             18 COMRAMh    2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___ltmod                                              7     1      6     412
                                             18 COMRAMh    7     1      6
 ---------------------------------------------------------------------------------
 (6) ___ltdiv                                             10     4      6     421
                                             18 COMRAMh   10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0    1412
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _credit_subtract                                      1     1      0    4450
                                             22 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _credit_add                                           1     1      0   10935
                                             29 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                   _Update_cashaudit
 ---------------------------------------------------------------------------------
 (2) _Update_cashaudit                                     1     1      0    6454
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (5) _Write_NVstore                                        6     1      5    3978
                                             22 COMRAMh    6     1      5
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (6) _DATAEE_WriteByte                                     4     1      3    3007
                                             18 COMRAMh    4     1      3
 ---------------------------------------------------------------------------------
 (5) _Read_NVstore                                         6     1      5    2414
                                             20 COMRAMh    6     1      5
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2    1412
                                             18 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR5_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0       0
                                              0 COMRAMh   18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (13) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _Update_cashaudit
       _Read_NVstore
         _DATAEE_ReadByte
       _Write_NVstore
         _DATAEE_WriteByte
   _credit_subtract
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _enter_service
     _Audit
     _Clear_cred
       _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Hopper_coin
       _DATAEE_ReadByte
       _Update_Hopcoin
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Sensor_set
       _butindb
         _butin
       _displ_sens
         _CMP1_GetOutputStatus
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Vend_setup
       _Chan_link
         _Link_chan
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _Read_Service
           _butindb
             _butin
           _displ_lflags
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Init_vendmem
         _DATAEE_ReadByte
       _Reset_settings
         _DATAEE_WriteByte
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Sens_off
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _off_sens
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_sflags
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
       _Vend_settime
         _Read_Service
         _Vend_timeset
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_time
             _displ_hex
               ___ltdiv
               ___ltmod
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _butindb
       _butin
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_unlock
       _CMP1_Initialize
       _DAC1_Initialize
       _TMR1_Initialize
       _TMR3_Initialize
       _TMR5_Initialize
     _price_set
       _Read_Service
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _set_price
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _butindb
           _butin
         _displ_price
           _displ_hex
             ___ltdiv
             ___ltmod
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _save_notes
           _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _lcd_init
     _hopper_test
       _hopper_pay
         _Update_coinsout
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
         _cctalk_off
         _cctalk_on
         _pay_coin
           _Reset_hopper
             _TMR4_Initialize
             _cctalk_off
             _cctalk_on
           _TMR2_Initialize
           _TMR4_Initialize
           _switch_read
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _vend_init
     _DAC1_SetOutput
     _DATAEE_ReadByte
     _Init_vendmem
       _DATAEE_ReadByte
     _credit_check
       _DATAEE_ReadByte
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            E7D      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      33        0.0%
BANK13             100      0       0      34        0.0%
BITBANK12          100      0       0      31        0.0%
BANK12             100      0       0      32        0.0%
BITBANK11          100      0       0      29        0.0%
BANK11             100      0       0      30        0.0%
BITBANK10          100      0       0      27        0.0%
BANK10             100      0       0      28        0.0%
BITBANK9           100      0       0      24        0.0%
BANK9              100      0       0      25        0.0%
BITBANK8           100      0       0      22        0.0%
BANK8              100      0       0      23        0.0%
BITBANK7           100      0       0      20        0.0%
BANK7              100      0       0      21        0.0%
BITBANK6           100      0       0      18        0.0%
BANK6              100      0       0      19        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       9        0.0%
BITBANK0            A0      0       0       6        0.0%
BANK0               A0     10      55       7       53.1%
BITBANK14           88      0       0      35        0.0%
BANK14              88      0       0      36        0.0%
COMRAMh             55     21      43       2       78.8%
BITCOMRAMh          55      0       0       0        0.0%
BIGRAMl              2      0       0      38        0.0%
BITCOMRAMl           1      0       0       1        0.0%
COMRAMl              1      0       1       3      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      99      26        0.0%
DATA                 0      0      99       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Mar 23 12:18:43 2018

                       lcd_writeC@lcdata 0023                             ?_displ_price 000B  
                            __CFG_CP$OFF 000000                        ??_CMP1_Initialize 001D  
                                     l91 20FC                            ?_displ_credit 0000  
                          ?_displ_lflags 0029                            ?_displ_nendis 000B  
                          ?_displ_sflags 0029                          lcd_write@lcdata 0020  
                          ?_displ_noteer 0000                              __CFG_LVP$ON 000000  
                                    LATE 000F87                          _DAC1_Initialize 214A  
                                    l245 1C9A                                      l991 0B58  
                                    l994 0B98                                      l995 0BAA  
                                    l998 0C04                                      l999 0BFC  
                                    _PR2 000FBC                                      _PR4 000FB6  
                           __CFG_CPD$OFF 000000                          _timer1ReloadVal 00B2  
                __size_of_PMD_Initialize 001C                       get_channel@channel 001D  
                        _TMR2_Initialize 1FCA                                      prod 000FF3  
                                    wreg 000FE8                         ??_Update_Hopcoin 002B  
                         _DAC1_SetOutput 2156                           ??_credit_check 001F  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                          ?_mdb_security 0000                                     l1000 0BE0  
                                   l1001 0BC8                                     l1003 0BCE  
                                   l1020 10D4                                     l1021 1076  
                                   l1022 107C                                     l1006 0BD4  
                                   l1023 1082                                     l2000 18A8  
                                   l1024 1088                                     l1008 0BDA  
                                   l1025 1090                                     l1017 1068  
                                   l1018 10A2                                     l1026 1096  
                                   l2011 1E68                                     l1027 109C  
                                   l1019 1070                                     l2012 1E62  
                                   l2100 0288                                     l2101 02AC  
                                   l2030 07EC                                     l2110 1A3E  
                                   l2102 02D0                                     l2031 07A4  
                                   l2111 1A48                                     l2103 02F4  
                                   l2032 07B2                                     l2120 0540  
                                   l2041 1348                                     l2121 04EA  
                                   l2042 1314                                     l2026 080C  
                                   l2130 17F0                                     l2122 0528  
                                   l2043 131E                                     l2027 078E  
                                   l2028 07D8                                     l2060 0888  
                                   l2140 0CB8                                     l1501 0ECC  
                                   l2037 1332                                     l2045 1322  
                                   l2029 0796                                     l2061 089E  
                                   l2141 0CB6                                     l2117 04A4  
                                   l2109 1A28                                     l1502 0EB2  
                                   l1510 0F72                                     l2038 130A  
                                   l2062 08E4                                     l2150 1A96  
                                   l2118 052C                                     l1511 0F22  
                                   l2119 04AC                                     l2071 13CC  
                                   l1520 173A                                     l2048 132E  
                                   l2056 086A                                     l2136 0C52  
                                   l2128 17B6                                     l2160 0968  
                                   l2072 13DE                                     l1521 1790  
                                   l1441 1596                                     l2057 08C0  
                                   l2129 17E6                                     l2161 09A2  
                                   l2073 13E8                                     l1522 1750  
                                   l1442 15A6                                     l2058 0872  
                                   l2138 0C74                                     l2090 01DE  
                                   l1531 1E94                                     l1523 1766  
                                   l2059 08D4                          _timer3ReloadVal 00B0  
                                   l1508 0F14                                     l2156 0924  
                                   l2148 1A76                                     l1509 0F1C  
                                   l1453 0E12                                     l2157 09A6  
                                   l2149 1A8C                                     l2085 0166  
                                   l1446 1278                                     l2078 1FF8  
                                   l2166 0FEC                                     l2158 092C  
                                   l2086 021E                                     l1519 177C  
                                   l1447 1258                                     l2079 1FF0  
                                   l2167 0FD6                                     l2159 09BA  
                                   l2087 0170                                     l1480 037E  
                                   l1448 1270                                     l2096 025C  
                                   l2088 0234                                     l1464 1E44  
                                   l1481 0386                                     l2097 031A  
                                   l2089 01A6                                     l1537 209E  
                                   l1490 03FE                                     l1474 038E  
                                   l2098 0264                                     l1491 0406  
                                   l1475 035E                                     l2099 033A  
                                   l4060 1678                                     l1484 040E  
                                   l1476 03C4                                     l1485 03DE  
                                   l1477 0366                                     l4070 196C  
                                   l1478 036E                                     l4063 16AC  
                                   l1487 03E6                                     l1479 0376  
                                   l4064 16B8                                     l1488 03EE  
                                   l2720 0058                                     l4073 1996  
                                   l1489 03F6                                     l2713 0062  
                                   l4074 19A2                                     l1498 0EA6  
                                   l2730 00A2                                     l2714 0030  
                                   l4059 1682                                     l1499 0E48  
                                   l2723 00C8                                     l2731 00A6  
                                   l2732 00AA                                     l2724 0084  
                                   l2716 0038                                     l4069 1976  
                                   l2733 00AE                                     l2725 008C  
                                   l2717 0040                                     l2742 059A  
                                   l2734 00B2                                     l2726 011C  
                                   l2718 0048                                     l3631 20D6  
                                   l2743 056A                                     l2735 00B6  
                                   l2727 0090                                     l2719 0050  
                                   l2680 06B2                                     l2736 00BA  
                                   l2728 0094                                     l2681 06C8  
                                   l2673 072C                                     l2737 00BE  
                                   l2729 009E                                     l2690 146C  
                                   l2682 06DE                                     l2674 0664  
                                   l3650 1514                                     l2658 1F4E  
                                   l2746 05C0                                     l2738 00C2  
                                   l2666 129E                                     l2691 1420  
                                   l2675 0700                                     l3643 1C34  
                                   l2755 0638                                     l2747 05F2  
                                   l2667 1284                                     l2692 1480  
                                   l2676 0670                                     l3636 1AD4  
                                   l2748 05C8                                     l1980 11EC  
                                   l2693 1432                                     l2677 0726  
                                   l3661 154C                                     l3637 1AA8  
                                   l1974 1654                                     l2694 1446  
                                   l2678 0686                                     l3654 152E  
                                   l3638 1AD0                                     l1991 1E1A  
                                   l1975 1630                                     l2679 069C  
                                   l1992 1DF6                                     l3664 155A  
                                   l3648 1532                                     l1985 1F36  
                                   l2689 1418                                     l3673 19E0  
                                   l1986 1F1E                                     l3674 19F0  
                                   l6410 2122                                     l3675 19FA  
                                   l3659 1538                                     l3668 1574  
                                   l6626 1F46                                     l8892 0CD4  
                                   u2030 156A                                     _LATA 000F83  
                                   u3030 131A                                     _LATB 000F84  
                                   _LATC 000F85                                     _LATD 000F86  
                                   _LATE 000F87                                     u1700 19B8  
                                   u1710 19C4                                     u1702 19BA  
                                   u1712 19C6                                     u3320 0CF8  
                                   _T2PR 000FBC                                     u2710 1686  
                                   u1910 0606                                     _T4PR 000FB6  
                                   u3507 0D66                                     u2740 197A  
                                   u2900 2138                                     u1860 05A0  
                                   u3517 19D6                                     u1925 0610  
                                   u3607 18F8                                     u3527 19E6  
                                   u1927 0612                                     u3537 1C0E  
                                   u1970 1524                                     u1890 05FC  
                                   u3547 09C6                                     u1875 05EA  
                                   _PMD0 000EE1                                     u3557 1034  
                                   u1877 05EC                                     u3477 16D0  
                                   _PMD1 000EE2                                     _PMD2 000EE3  
                                   u2775 1CA8                                     u3567 17D8  
                                   u3487 0CEA                                     _PMD3 000EE4  
                                   u2776 1CAA                                     _PMD4 000EE5  
                                   u3577 1E78                                     u3497 0CFA  
                                   _PMD5 000EE6                                     u2970 0CC2  
                                   u3587 1AF2                                     u3597 1B16  
                                   _TMR2 000FBB                                     _TMR4 000FB5  
          __size_of_eusartmdb_Initialize 0016                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                          _EUSART1_Write 2120                            __CFG_FCMEN$ON 000000  
                                   _cash 003A                                     _dest 0095  
                                   _main 0B4C                                     _exit FC26  
                          ?_EUSART1_Read 000B                            ?_mdb_transmit 0000  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004F  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 00AA                          _timer5ReloadVal 00AE  
                   __end_of_chanresetmsg FEEE                               _Clear_cred 18B0  
                        _TMR3_Initialize 1D50                   __size_of_enter_service 0096  
                          __CFG_CSWEN$ON 000000                             ___param_bank 000000  
                          __CFG_SCANE$ON 000000                              _switch_read 19B0  
                         ??_displ_credit 002A                __size_of_DATAEE_WriteByte 003A  
                         ??_displ_lflags 002A                  __end_of_TMR0_Initialize 1F18  
                         ??_displ_nendis 0029                           ??_displ_sflags 002B  
         __size_of_OSCILLATOR_Initialize 0018                           ??_displ_noteer 0029  
                          ?_Read_NVstore 001F            __end_of_OSCILLATOR_Initialize 2084  
                                  ?_main 000B                            __CFG_WDTE$OFF 000000  
                                  _T1CLK 000FD2                                    _T1CON 000FCF  
                                  _T3CLK 000FCC                                    _T2CON 000FBD  
                                  _LATA6 007C1E                                    _T3CON 000FC9  
                                  _LATA7 007C1F                                    _CMOUT 000F3D  
                                  _T5CLK 000FC6                                    _T4CON 000FB7  
                                  _T2HLT 000FBE                                    _T5CON 000FC3  
                        __end_of___ltdiv 16C6                                    _T4HLT 000FB8  
                         __CFG_DEBUG$OFF 000000                          __end_of___ltmod 19B0  
                                  _T2TMR 000FBB                                    _T2RST 000FC0  
                                  _T4TMR 000FB5                                    _T4RST 000FBA  
                 __end_of_DAC1_SetOutput 215E                                    i2l189 005E  
                                  _OSCEN 000EDC                   __size_of_Write_NVstore 0028  
                                  _TMR0H 000FD4                                    _TMR1H 000FCE  
                        __end_of_cc_poll FC6A                                    _TMR0L 000FD3  
                                  _TMR1L 000FCD                                    _TMR3H 000FC8  
                                  _TMR3L 000FC7                                    _TMR5H 000FC2  
                                  _TMR5L 000FC1                                    _PORTA 000F8D  
                        __end_of_cc_test FC75                                    _PORTD 000F90  
                        __end_of_cc_stop FC70                                    _TRISA 000F88  
                                  _TRISB 000F89                                    _TRISC 000F8A  
                                  _TRISD 000F8B                                    _TRISE 000F8C  
                        __end_of_chanmsg FF98                            ?_Read_Service 000B  
                        __end_of_cashint FC5F                          __end_of_cashinv FC61  
                     off_sens@senseflags 009E                                    _Audit 2194  
                          __CFG_WRT0$OFF 000000                          _TMR4_Initialize 2004  
                          __CFG_WRT1$OFF 000000                           __pidataCOMRAMh 2197  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                          __CFG_WRT4$OFF 000000                            __CFG_WRT5$OFF 000000  
                          __CFG_WRT6$OFF 000000                            __CFG_WRT7$OFF 000000  
                        __end_of_enabled FFCD                           __CFG_EBTR0$OFF 000000  
                      lcd_write@savelatd 001F                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                        __end_of_credclr FB7B                           __CFG_EBTR4$OFF 000000  
                        __end_of_credmem FC63                           __CFG_EBTR5$OFF 000000  
                        __end_of_credits FF8C                           __CFG_EBTR6$OFF 000000  
                         __CFG_EBTR7$OFF 000000                          __end_of_clrline FF3E  
                        __end_of_dispclr FC9A                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                          __end_of_dispoff FC93  
                          __CFG_WRTD$OFF 000000                            ??_Hopper_coin 002C  
                                  _bflag 0046                          _DATAEE_ReadByte 2054  
                         __CFG_EBTRB$OFF 000000                           ??_mdb_security 0022  
                __end_of_PIN_MANAGER_IOC 2188                          __end_of_butindb 1E88  
                        __end_of_dsphome FC98                                    _line1 FC8F  
                                  _line2 FC8E                                    _line3 FC8D  
                                  _line4 FC8C                                    _count 004C  
                                  _butin 1AE8                          __end_of_mastadd FC77  
                        __end_of_hopcoin FC51                          __end_of_inithop FBE4  
                                  _vcash 0090                          __end_of_inscoin FE57  
                                  _onmsg FFFA                       __CFG_MCLRE$EXTMCLR 000000  
                        __end_of_linkmsg FFA4                          __end_of_second1 FC69  
                         ?_EUSART1_Write 000B                  __end_of_TMR1_Initialize 1DBC  
                          ?_Init_vendmem 000B                                    pclath 000FFA  
                                  tablat 000FF5                          __end_of_noteerr FF29  
                           ?_hopper_test 0000                          __end_of_tenrand FFD6  
                        __end_of_sensmsg FFAF                          __end_of_sensval FC55  
                        __end_of_timemsg FF50                          __end_of_servmsg FCEE  
                         ??_EUSART1_Read 001D                           ??_mdb_transmit 001E  
                                  status 000FD8                                    wtemp6 0050  
                      ??_Update_coinsout 0027                           _Reset_settings 0F9E  
                        _TMR5_Initialize 1D1A             __end_of_CMP1_GetOutputStatus 213C  
                        __initialization 1B32                              butin@butons 001E  
             __end_of_EUSART1_Initialize 20C6                             __end_of_main 0C0E  
                __end_of_DAC1_Initialize 2156                             __end_of_exit FC2B  
                     __size_of_Chan_link 0062                      displ_time@motortime 002B  
                __end_of_TMR2_Initialize 1FE8                           ??_Read_NVstore 0024  
                                 ??_main 002C                            __activetblptr 000003  
                        ?_DAC1_SetOutput 000B                     __end_of_enable_notes 1486  
                         ??_Read_Service 001D                              butindb@butt 0022  
                       __end_of_Sens_off 1A9C                                   ?_Audit 0000  
                          _enter_service 1044                                   ?_butin 0000  
                                 _CM1NCH 000F3B                                   _CM1PCH 000F3C  
                         ??_Init_vendmem 001F                                   _ANSELA 000F11  
                                 _ANSELB 000F19                                   _ANSELC 000F21  
                                 _ANSELD 000F26                                   _ANSELE 000F2E  
                                 _T0CON0 000FD5                                   _T0CON1 000FD6  
                                 _T1GATE 000FD1                                   _T1GCON 000FD0  
                                 _T3GATE 000FCB                                   _T3GCON 000FCA  
                                 _T5GATE 000FC5                                   _T5GCON 000FC4  
                                 _RC1REG 000F99                                   _RC1STA 000F9D  
                                 _RB5PPS 000EF4                                   _ODCONA 000F0F  
                                 _ODCONB 000F17                                   _ODCONC 000F1F  
                                 _RC6PPS 000EFD                                   _ODCOND 000F24  
                                 _ODCONE 000F2C                 __size_of_credit_subtract 0056  
                       credit_add@credit 0028                  __end_of_TMR3_Initialize 1D86  
                         __CFG_WDTCCS$SC 000000                                   _TABLAT 000FF5  
                          ?_init_mdbdata 000B                         __end_of_cc_level FC6F  
                                 _OSCFRQ 000EDE                                   _NVMDAT 000F80  
                       __end_of_cc_reset FC76                                   _TX1REG 000F9A  
                                 _TX1STA 000F9E                      __end_of_Hopper_coin 0812  
                 __end_of_Reset_settings 1044                            _Write_NVstore 1F18  
                     __size_of_Link_chan 00BA                         __end_of_cashoutv FC53  
                            ?_Clear_cred 0000                           __CFG_PWRTE$OFF 000000  
                DAC1_SetOutput@inputData 001D                     __size_of_get_channel 001C  
                         __CFG_XINST$OFF 000000                         __end_of_disabled FFC3  
                   __size_of_lcd_dispadd 0018                         __end_of_auditmsg FC1E  
                       __end_of_dispaddr FC99                         __end_of_lcd_init 0D7E  
                       __end_of_lcd_test 20B0                         __end_of_mdb_comm 0640  
                       __end_of_mdb_init 172E                         __end_of_mdb_poll 0122  
                   __end_of_credit_check 1FAA                                   _cc_pay FC71  
                                 _cc_pin FC6D                                   _dacmsg FF72  
                         __CFG_STVREN$ON 000000                                   _change 0092  
                      ?_Update_cashaudit 000B                               _Sensor_set 0812  
                          displ_nendis@x 002A                                ??___ltdiv 0023  
                        mdb_reset@i_3717 0024                                ??___ltmod 0023  
                                 _credit 003B                                   _lcdata 0045  
                                 _clrmsg FFAF                                   _dispon FC9A  
                                 _mdb_on 2188                                   _dispsl FC90  
                             _Vend_setup 023A                                   _dispsr FC91  
                                 _ercode 0043                                   _hexnum 008B  
                                 _hopadd FC77                         __end_of_off_sens 09C0  
                       ?_TMR0_Initialize 0000                  __end_of_TMR4_Initialize 2020  
                                 _mcount 0041                                   _offmsg FFF6  
                                 clear_0 1B5C                                   clear_1 1B68  
                     ??_Update_cashaudit 0027                         __end_of_hoperror FC2D  
                       __end_of_hoppcoin FE26                         __end_of_initnote FECE  
                                 _nvcash 0088                                   _noteen 003D  
                                 _senset FBF4                                   _pvcash 004A  
                       __end_of_pay_coin 1578                                   _slvadd 0098  
                       __end_of_nochange FBF4                     __size_of_displ_price 0040  
                                 _stradd 0044                                   _tvends 0080  
                      read_busy@savelatd 001E                        read_busy@savelate 001D  
                __end_of_DATAEE_ReadByte 206C                         __end_of_second_5 FC67  
                              ??_butindb 001F                           _PMD_Initialize 2020  
                         ?_enter_service 0000                         __end_of_notebits FC57  
                       __end_of_pricemsg FC26                         __end_of_notetest FC11  
                           __mediumconst FAAC                         __end_of_setnotes FD83  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                       __end_of_vendtest FBBA                                   tblptru 000FF8  
                   Update_Hopcoin@newval 002B                          ??_EUSART1_Write 001D  
                       ?_PIN_MANAGER_IOC 000B                        __end_of_Chan_link 17F6  
          __size_of_INTERRUPT_Initialize 0008                           ??_init_mdbdata 001D  
                   __end_of_displ_credit 1DF0                         ?_TMR1_Initialize 0000  
                __end_of_TMR5_Initialize 1D50                     __end_of_displ_lflags 1280  
                      displ_lflags@lchan 002B         ??_INTERRUPT_InterruptManagerHigh 000B  
        ?_INTERRUPT_InterruptManagerHigh 000B                        _SYSTEM_Initialize 1CE4  
                   __end_of_displ_nendis 1E56                      Vend_timeset@channel 00AB  
                             __accesstop 0060                  __end_of__initialization 1B70  
                   __end_of_displ_sflags 0E34                     __end_of_displ_noteer 1EEA  
             Reset_settings@chanlinkbits 009C                           ?_Write_NVstore 0021  
                  __end_of_note_features FC85                          _CMP1_Initialize 20DA  
                        ?_Reset_settings 0000                       ?_SYSTEM_Initialize 000B  
                  __end_of_theft_attempt FC79                             __pbssCOMRAMh 002C  
                          ___rparam_used 000001                             __pbssCOMRAMl 004E  
                          __end_of_Audit 2196                             __pidataBANK0 2196  
                    ??_SYSTEM_Initialize 001F                         ?_DAC1_Initialize 0000  
                   __end_of_mdb_security 1FCA                         _DATAEE_WriteByte 1C72  
                          __end_of_line1 FC90                            __end_of_line2 FC8F  
                          __end_of_line3 FC8E                            __end_of_line4 FC8D  
                          __end_of_butin 1B32                            __end_of_onmsg FFFE  
                  __end_of_note_rejected FC7A                         ?_TMR2_Initialize 0000  
                     __size_of_cctalk_on 0004                    __end_of_note_security FC8A  
                 __end_of_PMD_Initialize 203C                     __end_of_EUSART1_Read 2100  
                   __end_of_mdb_transmit 2120                               _cc_countrq FC70  
                      __end_of_Link_chan 0CC8                             _chanresetmsg FECE  
                                ??_Audit 001D                      __size_of_Clear_cred 0056  
                   _CMP1_GetOutputStatus 212E                           Write_NVstore@i 0026  
                     __size_of_displ_hex 00B6                              _Hopper_coin 0732  
                     __size_of_lcd_write 0032                                  ??_butin 001D  
              __end_of_SYSTEM_Initialize 1D1A                       __size_of_mdb_reset 0086  
                     __size_of_mdb_noten 003A                       __size_of_mdb_waitr 0006  
                     __size_of_mdb_waitx 0006                            ?_Reset_hopper 000B  
                             __pbssBANK0 0060                      displ_hex@hexnumsave 00A4  
                       ?_TMR3_Initialize 0000                     __end_of_Read_NVstore 1E24  
                   displ_price@vendprice 002A                            _chan1linkbits FC4D  
                   __size_of_hopper_test 0014                               _cctalk_off 2190  
                          _chan2linkbits FC4B                       __size_of_read_busy 0042  
                   __end_of_Read_Service 2112                        ??_credit_subtract 0021  
                          _chan3linkbits FC49                                ?_Sens_off 0000  
                          _chan4linkbits FC47                             ?_switch_read 0000  
                          _chan5linkbits FC45                              ?_Sensor_set 0000  
           __end_of_eusartmdb_Initialize 209A                              ?_Vend_setup 0000  
                          _chan6linkbits FC43                    __size_of_enable_notes 007A  
                                ?_mdb_on 0000                                  _CM1CON0 000F39  
                                _CM1CON1 000F3A                     __end_of_Init_vendmem 165C  
                          _chan7linkbits FC41                         ?_TMR4_Initialize 0000  
                        ?_PMD_Initialize 0000                            _chan8linkbits FC3F  
                        ??_enter_service 002C                       __size_of_set_price 0118  
                     __size_of_set_notes 00F2                       __size_of_price_set 0080  
                       ?_DATAEE_ReadByte 001D                       __size_of_vend_init 008A  
                  displ_nendis@note2disp 0029                               _credit_add 1856  
                      __end_of_cc_adpoll FC6B                               _lcd_clockE 213C  
                             _lcd_clockH 2166                               _lcd_clockL 215E  
                      __end_of_cc_enable FC74                                  _SP1BRGH 000F9C  
                                _SP1BRGL 000F9B                               _lcdaddress 0099  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                        _Update_coinsout 17F6                                  _TBLPTRH 000FF7  
                      __end_of_chan1time FC3D                                  _TBLPTRL 000FF6  
                                _TBLPTRU 000FF8                        __end_of_chan2time FC3B  
                  ?_CMP1_GetOutputStatus 000B                        __end_of_chan3time FC39  
                      __end_of_chan4time FC37                          off_sens@chanbit 009D  
                      __end_of_chan5time FC35                        __end_of_chan6time FC33  
                                _NVMADRH 000F7F                          off_sens@channel 009C  
                                _NVMADRL 000F7E                               _jammed_err FC7F  
                      __end_of_chan7time FC31                                  _OSCTUNE 000EDD  
                      __end_of_chan8time FC2F                                  _NVMCON2 000F82  
                      __end_of_cc_newpin FC6D                        __end_of_cc_serial FC6C  
                             _displ_code 0340                                  _PPSLOCK 000EA0  
                             _displ_note 1CAC                               _displ_sens 1578  
                             _displ_time 10DA                  __end_of_CMP1_Initialize 20EE  
                         ??_Reset_hopper 001D                        __end_of_cc_status FC73  
                             _lcd_string 0EEA                               _dispcursor FC95  
                             _lcd_writeC 172E                                ?_lcd_init 0000  
                          ?_Vend_timeset 0000                            ?_Vend_settime 0000  
                              ?_lcd_test 0000                                ?_mdb_comm 001F  
                              ?_mdb_init 0000                               _dispshleft FC93  
                             _dispnormal FC96                                ?_mdb_poll 0000  
                        ??_Write_NVstore 0026                               _mdb_unlock 09C0  
                      __end_of_chanlinkm FDF3                         ?_TMR5_Initialize 0000  
                      __end_of_cctalk_on 2190                     DATAEE_WriteByte@bAdd 001D  
                              ?_off_sens 0000                           displ_hex@value 009C  
                  __size_of_credit_check 0022                                ?_pay_coin 0000  
                       hopper_pay@change 0029                             _enable_notes 140C  
                                __Hparam 0000                                  __Lparam 0000  
                             ??_Sens_off 002C               __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                      __end_of_creditclr FF72                           mdb_comm@mcount 001F  
                      __end_of_displ_hex 0EEA                        __end_of_dispfunc1 FC9E  
                      __end_of_dispfunc2 FC9D                        __end_of_dispfunc3 FC9C  
                      __end_of_lcd_write 1EBA                        __end_of_fiftyrand FFEE  
                         mdb_comm@slvadd 0020                                  ___ltdiv 165C  
                      __end_of_mdb_reset 1306                        __end_of_mdb_noten 1C72  
                                ___ltmod 195C                        __end_of_mdb_waitr 217C  
                       ??_DAC1_SetOutput 001D                        __end_of_mdb_waitx 2182  
                                _cc_poll FC69                                  _cc_test FC74  
                                _cc_stop FC6F                          __size_of_mdb_on 0004  
                                _dbcount 0032                         set_price@channel 00AB  
                                __pcinit 1B32                                  _chanmsg FF8C  
                                _cashint FC5D                     __end_of_init_mdbdata 1F66  
                                _cashinv FC5F                                  __ramtop 0F00  
                                _chkbyte 003F                               _hopercount 00B4  
                                _enabled FFC3                               _errorflags 0097  
                                __ptext0 0B4C                                  __ptext1 116C  
                                __ptext2 16C6                                  __ptext3 1FAA  
                                __ptext4 1280                                  __ptext5 1C38  
                                __ptext6 2084                                  __ptext7 2156  
                                __ptext8 0000                                  __ptext9 0546  
                                _credclr FB51                                  _credmem FC61  
                                _credits FF7F                                  _command 0093  
                                _clrline FF29                                  _dispclr FC99  
                                _dispoff FC92                                  _mdbdata 0060  
                                _lcdfunc 009B                                  _lcdline 009A  
                              _T1CONbits 000FCF                               _hopper_pay 1A9C  
                                _butindb 1E56                                  _dsphome FC97  
                  _OSCILLATOR_Initialize 206C                                _T2CONbits 000FBD  
                                _mastadd FC76                                  _hopcoin FC4F  
                       set_price@buttons 00AA                                  _buttons 0039  
                                _inithop FBD0                                _T3CONbits 000FC9  
                                _inscoin FE26                                  _linkmsg FF98  
                              _CMOUTbits 000F3D                        __end_of_read_busy 1BBC  
                                _second1 FC67                                _T4CONbits 000FB7  
                     _EUSART1_Initialize 20B0                 ??_PIN_MANAGER_Initialize 001D  
                              _T2HLTbits 000FBE                    __size_of_displ_credit 0034  
                              _T5CONbits 000FC3                                  _nobytes 0094  
                                _senschk 0035                                  _noteerr FF0D  
                  __size_of_displ_lflags 008A                                  _tenrand FFCD  
                                _notenum 004D                                  _sensmsg FFA4  
                                _sensval FC53                                  _senspos 0036  
                              _T4HLTbits 000FB8                    __size_of_displ_nendis 0032  
                                _pnvcash 0047                                  _venderr 0034  
                                _timemsg FF3E                                  _servmsg FC9E  
                  __size_of_displ_sflags 00B6                           ??_Vend_timeset 00A8  
                         ??_Vend_settime 002C                    __size_of_displ_noteer 0030  
             __size_of_SYSTEM_Initialize 0036                             _credit_check 1F88  
                             ??_lcd_init 009C                               ??_lcd_test 0024  
                             ??_mdb_comm 0020                               ??_mdb_init 0025  
                   end_of_initialization 1B70                        __end_of_secondadd FC65  
                             ??_mdb_poll 0022                                _T2RSTbits 000FC0  
                    __size_of_Sensor_set 00D8                      ?_EUSART1_Initialize 000B  
                    __size_of_Vend_setup 0106                                _T4RSTbits 000FBA  
                             ??_off_sens 002C                            __pdataCOMRAMh 004D  
                      __end_of_note_poll FC89                        __end_of_motimemsg FB24  
                      __end_of_set_price 023A                        __end_of_set_notes 0732  
                __size_of_Update_Hopcoin 0086                        __end_of_note_type FC88  
                      __end_of_price_set 140C                               _save_notes 1F66  
                      __end_of_just_busy FC82                               ??_pay_coin 001F  
                            ?_cctalk_off 000B                        __end_of_priceexit FBD0  
                      __end_of_sensoffms FB51                        __end_of_setimemsg FEA9  
                           ??_Clear_cred 0029                        __end_of_vend_init 11F6  
                  __size_of_mdb_security 0020                         ___ltdiv@dividend 001D  
                      __end_of_rom_error FC81                        __end_of_vendtimem FE80  
                      __end_of_vendsetup FD3E                        __end_of_vendstore FC5D  
                             _note_reset FC8B                               _sens_error FC82  
                             _note_setup FC8A                                  postinc0 000FEE  
                  __size_of_EUSART1_Read 0012                               _motr_error FC83  
                  __size_of_mdb_transmit 000E                               _just_reset FC7E  
                          Read_NVstore@i 0024                               _pricesetm2 FD83  
                             _sensoffmsg FEEE                     ??_EUSART1_Initialize 001D  
                             _pricestore FC59                    __CFG_WDTCPS$WDTCPS_31 000000  
               Init_vendmem@chanlinkbits 001F                             _displ_credit 1DBC  
                __end_of_Update_coinsout 1856                             _displ_lflags 11F6  
                           _displ_nendis 1E24                                _PORTBbits 000F8E  
                             _venderrors FC57                         displ_code@ercode 0026  
                           _displ_sflags 0D7E                             _displ_noteer 1EBA  
                             _settimemsg FB7B                        displ_sens@dmsgpos 002A  
                            ?_credit_add 0000                       displ_lflags@chanel 002A  
                            ?_lcd_clockE 0000                              ?_lcd_clockH 0000  
                            ?_lcd_clockL 0000                   ??_CMP1_GetOutputStatus 001D  
                   Vend_timeset@chantime 00AA                         ___ltdiv@quotient 0023  
                  __size_of_Read_NVstore 0034                       __end_of_Clear_cred 1906  
                            ?_displ_code 000B                __size_of_Update_cashaudit 00C4  
                            ?_displ_note 0029                              ?_displ_sens 002A  
                            ?_displ_time 002A                        displ_sens@smsgpos 002B  
                            ?_lcd_string 0024                              ?_lcd_writeC 0000  
                    EUSART1_Write@txData 001D                         ?_CMP1_Initialize 000B  
                       ??_Reset_settings 0029                         __CFG_FEXTOSC$OFF 000000  
               __end_of_DATAEE_WriteByte 1CAC                             _mdb_security 1FAA  
                            ?_mdb_unlock 0000                     _eusartmdb_Initialize 2084  
                  __size_of_Read_Service 0012                        displ_time@channel 002A  
                          ??_get_channel 001D                        get_channel@butons 001E  
                              _Chan_link 1794                             _EUSART1_Read 20EE  
                    __end_of_cashbox_err FC7D                             _mdb_transmit 2112  
                          ??_lcd_dispadd 0021                               displ_hex@i 00A7  
                    __end_of_chanlinkmsg FAEA                    __size_of_Init_vendmem 0070  
                   _timer0ReloadVal16bit 00AC                          __pcstackCOMRAMh 000B  
                        __pcstackCOMRAMl 0000                  Update_coinsout@coinsout 0027  
                             mdb_reset@i 0023             __end_of_INTERRUPT_Initialize 2176  
                          ??_displ_price 002A                     __end_of_Reset_hopper 1C38  
                     mdb_transmit@txbyte 001E                               _twentyrand FFEE  
                         __end_of_cc_pay FC72                           __end_of_cc_pin FC6E  
                         __end_of_dacmsg FF7F                     __size_of_switch_read 0050  
                         __end_of_clrmsg FFB9                           __end_of_dispon FC9B  
                         __end_of_mdb_on 218C                           __end_of_dispsl FC91  
                         __end_of_dispsr FC92                             _Read_NVstore 1DF0  
                       displ_credit@cash 002A                           __end_of_hopadd FC78  
                 ?_OSCILLATOR_Initialize 0000                           __end_of_offmsg FFFA  
                            ?_hopper_pay 0000                           __end_of_senset FC03  
                    __size_of_cctalk_off 0004                      start_initialization 1B32  
                           _Read_Service 2100                 __size_of_TMR0_Initialize 002E  
        __size_of_PIN_MANAGER_Initialize 007A                             ?_Hopper_coin 0000  
                              _Link_chan 0C0E                          _credit_subtract 1906  
                Update_cashaudit@addcash 0027                    ?_eusartmdb_Initialize 0000  
                  __end_of_EUSART1_Write 212E                             _Init_vendmem 15EC  
                             ?_Chan_link 0000                              ?_save_notes 0000  
                    DATAEE_ReadByte@bAdd 001D                 __size_of_PIN_MANAGER_IOC 0006  
                          Init_vendmem@i 0023                      __size_of_credit_add 005A  
                       __CFG_LPBOREN$OFF 000000                      __size_of_lcd_clockE 000E  
                    __size_of_lcd_clockH 0008                      __size_of_lcd_clockL 0008  
               __size_of_TMR1_Initialize 0036                    __size_of_init_mdbdata 0026  
                    __end_of_get_channel 2004                         ??_PMD_Initialize 001D  
                           ??_Sensor_set 002C                      __size_of_displ_code 0106  
                    __end_of_lcd_dispadd 2054                     __end_of_Vend_timeset 0546  
                   __end_of_Vend_settime 1A4E                        __size_of_Sens_off 004E  
                    __size_of_displ_note 0038                      __size_of_displ_sens 0074  
                           ??_Vend_setup 002C                      __size_of_displ_time 0092  
                               ??_mdb_on 001D                              __pdataBANK0 00B4  
                    __size_of_lcd_string 00B4                      __size_of_lcd_writeC 0066  
                       ?_Update_coinsout 0000                      __size_of_mdb_unlock 00C8  
                     hopper_pay@outcoins 002A                   displ_sflags@senseflags 002B  
               __size_of_DAC1_Initialize 000C                      __end_of_displ_price 1BFC  
                          __pcstackBANK0 009C                 __size_of_TMR2_Initialize 001E  
                    __end_of_dispshright FC95                               ?_Link_chan 0000  
                          butindb@butval 0021                                _cc_adpoll FC6A  
                            _cashbox_err FC7C                              __pnvCOMRAMh 004C  
                              _cc_enable FC73                     __end_of_note_removed FC7E  
                            _chanlinkmsg FAAD                                _chan1time FC3B  
                          ??_hopper_test 002B                    credit_subtract@credit 0021  
                   __end_of_note_stacker FC86                                _chan2time FC39  
                              _chan3time FC37                                _chan4time FC35  
                              _chan5time FC33                                _chan6time FC31  
                              _chan7time FC2F                                _chan8time FC2D  
                              _cc_newpin FC6C                     init_mdbdata@initdata 001D  
                              _cc_serial FC6B                       __end_of_Sensor_set 08EA  
                           _init_mdbdata 1F40                        __size_of_lcd_init 00B6  
                      __size_of_lcd_test 0016                       __end_of_Vend_setup 0340  
                      __size_of_mdb_comm 00FA                                _cc_status FC72  
                      __size_of_mdb_init 0068                           _Update_Hopcoin 1306  
                      __size_of_mdb_poll 0122                                __pnvBANK0 00AC  
                              _chanlink1 000003                                _chanlink2 000004  
                              _chanlink3 000005                                _chanlink4 000006  
                              _chanlink5 000007                                _chanlink6 000008  
                              _chanlink7 000009                                _chanlink8 00000A  
                              _chanlinkm FDBC                      __size_of_hopper_pay 004C  
                      __size_of_off_sens 00D6                                _cctalk_on 218C  
                 _PIN_MANAGER_Initialize 1486                        __size_of_pay_coin 0078  
               __size_of_TMR3_Initialize 0036                                __pintcode 0008  
                          __pmediumconst FAAC                         Link_chan@chanbit 009E  
                       Link_chan@channel 009F                                 ?___ltdiv 001D  
                               ?___ltmod 001D                         __CFG_PPS1WAY$OFF 000000  
                              _creditclr FF62                                 _DAC1CON0 000F33  
                               _DAC1CON1 000F34                                _displ_hex 0E34  
                              _dispfunc1 FC9D                                _dispfunc2 FC9C  
                              _dispfunc3 FC9B                                _lcd_write 1E88  
                     Hopper_coin@coinval 00A8                                _fiftyrand FFE6  
                              _mdb_reset 1280                                _mdb_noten 1C38  
                              _mdb_waitr 2176                                _mdb_waitx 217C  
                               _BAUD1CON 000F9F                  __end_of_credit_subtract 195C  
                               ?_butindb 0000                    __end_of_enter_service 10DA  
                    __size_of_save_notes 0022                           __size_of_Audit 0002  
                              _mdbtxbyte 0096                 __size_of_TMR4_Initialize 001C  
                       _Update_cashaudit 0A88                           _acept_disabled FC7B  
                 ??_eusartmdb_Initialize 001D                           __size_of_butin 004A  
                               _T2CLKCON 000FBF                 __size_of_DATAEE_ReadByte 0018  
                              _read_busy 1B7A                                 _T4CLKCON 000FB9  
                   _INTERRUPT_Initialize 216E                   __end_of_Update_Hopcoin 138C  
                       ___ltmod@dividend 001D                    lcd_dispadd@lcdaddress 0021  
                      ??_TMR0_Initialize 001D                    __end_of_Write_NVstore 1F40  
                            _get_channel 1FE8                                 _LATCbits 000F85  
                            ??_Chan_link 00A1                                _secondadd FC63  
                  lcd_dispadd@lcdatasave 0022                             ??_cctalk_off 001D  
                               _IPR0bits 000EBA                                 _PIE0bits 000EC2  
                          _note_features FC84                              _lcd_dispadd 203C  
                    __CFG_BORV$VBOR_2P45 000000                            _theft_attempt FC78  
                             ?_cctalk_on 0000                    __size_of_Reset_hopper 003C  
                     __end_of_cc_countrq FC71                      __end_of_hopper_test 20DA  
                               _PIR0bits 000ECA                          ___ltdiv@divisor 0020  
                               _PIR3bits 000ECD                                 _PIR4bits 000ECE  
                               _PIR7bits 000ED1                          ___ltdiv@counter 0026  
                              _note_poll FC88                                _motimemsg FAEA  
                              _set_price 0122                                _set_notes 0640  
               __size_of_TMR5_Initialize 0036                                _note_type FC87  
                              _price_set 138C                                _just_busy FC81  
                              _priceexit FBBA                                _sensoffms FB24  
                              _setimemsg FE80                                _vend_init 116C  
                              _sensorval 0037                                _rom_error FC80  
                      ??_PIN_MANAGER_IOC 000B                              _displ_price 1BBC  
                              _vendprice 0038                                _vendtimem FE57  
                              _vendsetup FCEE                                _vendstore FC5B  
                          _note_rejected FC79                        ??_TMR1_Initialize 001D  
                             ?_displ_hex 0027                       Link_chan@linkflags 00A0  
                             ?_lcd_write 0000                            _note_security FC89  
                    __end_of_hundredrand FFE6                               ?_mdb_reset 0000  
                             ?_mdb_noten 0000                              _dispshright FC94  
                             ?_mdb_waitr 0000                               ?_mdb_waitx 000B  
                           ??_credit_add 0028                             ??_lcd_clockE 001D  
                           ??_lcd_clockH 001D                             ??_lcd_clockL 001D  
                 Write_NVstore@storesize 0025                                mdb_comm@i 0021  
                 __end_of_acept_disabled FC7C                                mdb_init@i 0027  
                     __end_of_cctalk_off 2194                    DATAEE_WriteByte@bData 001F  
                           ??_displ_code 0024                                mdb_poll@i 0022  
                        displ_hex@hexnum 0027                             ??_displ_note 002B  
                           ??_displ_sens 002B                             ??_displ_time 002B  
                            ??_Link_chan 009C                             ??_lcd_string 0027  
                           ??_lcd_writeC 0023                               ?_read_busy 0000  
                  ?_INTERRUPT_Initialize 0000                        ??_DAC1_Initialize 001D  
                           _Reset_hopper 1BFC                             ??_mdb_unlock 001F  
                      ?_DATAEE_WriteByte 001D                          ?_Update_Hopcoin 002A  
                   __size_of_Hopper_coin 00E0                        ??_TMR2_Initialize 001D  
                     ??_DATAEE_WriteByte 0020                      lcd_string@lcdstring 0024  
                  __size_of_Vend_timeset 0100                    __size_of_Vend_settime 004E  
                               __Hrparam 0000                         Sensor_set@dacpos 00A8  
                               _Sens_off 1A4E                                 __Lrparam 0000  
                     __end_of_credit_add 18B0                               ?_set_price 0000  
                     __CFG_BOREN$SBORDIS 000000                               ?_set_notes 0000  
                     __end_of_lcd_clockE 214A                               ?_price_set 0000  
                     __end_of_lcd_clockH 216E                       __end_of_lcd_clockL 2166  
                             ?_vend_init 0000                  ??_OSCILLATOR_Initialize 001D  
                     Read_Service@senval 001D                       __end_of_jammed_err FC80  
                     __end_of_displ_code 0446                       __end_of_displ_note 1CE4  
                     __end_of_displ_sens 15EC                       __end_of_displ_time 116C  
            __size_of_EUSART1_Initialize 0016                         __size_of___ltdiv 006A  
                       __size_of___ltmod 0054                       __end_of_lcd_string 0F9E  
                     __end_of_dispcursor FC96                       __end_of_lcd_writeC 1794  
                         _invalid_escrow FC7A                      __end_of_note_escrow FC87  
                     __end_of_dispshleft FC94                       __end_of_dispnormal FC97  
                      ??_TMR3_Initialize 001D                       __end_of_mdb_unlock 0A88  
                           ??_hopper_pay 0028                                 _cc_level FC6E  
                Update_Hopcoin@direction 002A                                 _cc_reset FC75  
                       ?_credit_subtract 0000                              _dspposition 0042  
                             _T0CON0bits 000FD5                         __size_of_butindb 0032  
                               _cctflags 004E                                 _cashoutv FC51  
                __size_of_DAC1_SetOutput 0008            __size_of_CMP1_GetOutputStatus 000E  
                               __ptext10 2176                                 __ptext11 2112  
                               __ptext20 1A9C                                 __ptext12 217C  
                    __end_of_pricesetmsg FF62                                 __ptext21 1500  
                               __ptext13 2120                               _T1GCONbits 000FD0  
                               __ptext30 1F66                                 __ptext22 19B0  
                               __ptext14 2188                                 __ptext31 1E24  
                               __ptext23 1BFC                                 __ptext15 1F40  
                               __ptext40 10DA                                 __ptext32 1CAC  
                               __ptext24 218C                                 __ptext16 20EE  
                               __ptext41 1A4E                                 __ptext33 138C  
                               __ptext25 2190                                 __ptext17 0CC8  
                               __ptext50 2100                                 __ptext42 08EA  
                               __ptext34 0122                                 __ptext26 17F6  
                               __ptext18 209A                                 __ptext51 0812  
                               __ptext43 0D7E                                 __ptext35 1BBC  
                               __ptext27 1044                                 __ptext19 20C6  
                               __ptext60 1EBA                                 __ptext52 1578  
                               __ptext44 0F9E                                 __ptext36 09C0  
                               __ptext28 0640                                 __ptext61 0340  
                               __ptext53 212E                                 __ptext45 15EC  
                               __ptext37 023A                                 __ptext29 140C  
                               __ptext70 2166                                 __ptext62 1DBC  
                               __ptext54 0732                                 __ptext46 1794  
                               __ptext38 1A00                                 __ptext71 213C  
                               __ptext63 0EEA                                 __ptext55 1E56  
                               __ptext47 1FE8                                 __ptext39 0446  
                               __ptext80 1DF0                                 __ptext72 195C  
                               __ptext64 0E34                                 __ptext56 1AE8  
                               __ptext48 0C0E                                 __ptext81 2054  
                               __ptext73 165C                                 __ptext65 172E  
                               __ptext57 1306                                 __ptext49 11F6  
                               __ptext90 1486                                 __ptext82 1CE4  
                               __ptext74 1F88                                 __ptext66 203C  
                               __ptext58 18B0                                 __ptext91 206C  
                               __ptext83 1D1A                                 __ptext75 1906  
                               __ptext67 1E88                                 __ptext59 2194  
                               __ptext92 216E                                 __ptext84 2004  
                               __ptext76 1856                                 __ptext68 1B7A  
                               __ptext93 20B0                                 __ptext85 1D50  
                               __ptext77 0A88                                 __ptext69 215E  
                               __ptext94 214A                                 __ptext86 1FCA  
                               __ptext78 1F18                                 __ptext95 20DA  
                               __ptext87 1D86                                 __ptext79 1C72  
                               __ptext88 1EEA                                 __ptext97 2182  
                               __ptext89 2020                                 _disabled FFB9  
                    __end_of_sensorflags FC3F                                 _auditmsg FC11  
                               _dispaddr FC98                                 _lcd_init 0CC8  
                               _lcd_test 209A                                 _mdb_comm 0546  
                               _mdb_init 16C6                             _Vend_timeset 0446  
                           _Vend_settime 1A00                                 _mdb_poll 0000  
                               _mdbflags 003E                               _T3GCONbits 000FCA  
            DATAEE_WriteByte@GIEBitValue 0020                              _hopper_test 20C6  
                  __end_of_chan1linkbits FC4F                        ??_TMR4_Initialize 001D  
                               _off_sens 08EA                            __size_of_main 00C2  
                             _T5GCONbits 000FC4                                 _hoperror FC2B  
                           ??_save_notes 0021                                 _hoppcoin FDF3  
                               _initnote FEA9                    __end_of_chan2linkbits FC4D  
                               _hpserial 002F                                 _pay_coin 1500  
                               _nochange FBE4                          ___ltmod@divisor 0020  
                      ??_DATAEE_ReadByte 001F                     __CFG_WDTCWS$WDTCWS_7 000000  
                  __end_of_chan3linkbits FC4B                 __size_of_CMP1_Initialize 0014  
                               _second_5 FC65                          ___ltmod@counter 0023  
                            ??_cctalk_on 001D                    __end_of_chan4linkbits FC49  
                     __end_of_hopper_pay 1AE8                               _RC1STAbits 000F9D  
                               _vcashout 008E                                 _notebits FC55  
                               _notebyte 0040                                 _pricemsg FC1E  
                  __end_of_chan5linkbits FC47                                 _notetest FC03  
                          ??_switch_read 001D                                 _venflags 002C  
                               _setnotes FD3E                            init_mdbdata@i 001E  
                               _vendtest FBA1                              _hundredrand FFDE  
                  __end_of_chan6linkbits FC45                                 int$flags 004F  
                 __end_of_invalid_escrow FC7B                    __end_of_chan7linkbits FC43  
                           _note_removed FC7D                    Write_NVstore@storeadd 0021  
                  Read_NVstore@storesize 0023                    Write_NVstore@storemem 0023  
                           _note_stacker FC85                    __end_of_chan8linkbits FC41  
                            ??_displ_hex 002A                              ??_lcd_write 001F  
                      ??_TMR5_Initialize 001D                              ??_mdb_reset 0022  
                            ??_mdb_noten 0022                              ??_mdb_waitr 001D  
                            ??_mdb_waitx 001D                               _INTCONbits 000FF2  
                            _NVMCON1bits 000F81                       __end_of_save_notes 1F88  
                 ??_INTERRUPT_Initialize 001D                              ??_read_busy 001D  
                     __end_of_note_reset FC8C                           _twohundredrand FFD6  
                     __end_of_sens_error FC83                       __end_of_note_setup FC8B  
                               intlevel2 0000                       __end_of_motr_error FC84  
                     __end_of_just_reset FC7F                       __end_of_pricesetm2 FDBC  
                     __end_of_sensoffmsg FF0D                  ?_PIN_MANAGER_Initialize 000B  
                     __end_of_pricestore FC5B                        __CFG_CLKOUTEN$OFF 000000  
                          ?_enable_notes 0000                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors FC59                       __end_of_settimemsg FBA1  
                __size_of_Reset_settings 00A6                      displ_sflags@chanbit 002A  
                            _note_escrow FC86                              ??_set_price 00A8  
                            ??_set_notes 002C                              ??_price_set 002B  
               __end_of_Update_cashaudit 0B4C                     Read_NVstore@storeadd 001F  
                            ??_vend_init 0029                     Read_NVstore@storemem 0021  
                            _noteen_byte 003C                        lcd_string@lcdline 0026  
                 __size_of_EUSART1_Write 000E                     displ_note@notestring 0029  
 __end_of_INTERRUPT_InterruptManagerHigh 00AA  __size_of_INTERRUPT_InterruptManagerHigh 00A2  
         _INTERRUPT_InterruptManagerHigh 0008                               _RX1PPSbits 000EB5  
                            _pricesetmsg FF50                      __end_of_switch_read 1A00  
                             _RX2PPSbits 000E8D                              _sensorflags FC3D  
                      lcd_test@character 0024                          _TMR0_Initialize 1EEA  
                     displ_sflags@chanel 0029                     Init_vendmem@chanlink 0021  
                 __end_of_twohundredrand FFDE                 __size_of_Update_coinsout 0060  
                          ?_credit_check 0000                               _TX1STAbits 000F9E  
         __end_of_PIN_MANAGER_Initialize 1500                      enable_notes@notenum 002B  
                           ?_get_channel 000B                       __end_of_twentyrand FFF6  
                        _PIN_MANAGER_IOC 2182                           ??_enable_notes 002B  
                           ?_lcd_dispadd 0000                          _TMR1_Initialize 1D86  
                   displ_lflags@linkflgs 0029  
