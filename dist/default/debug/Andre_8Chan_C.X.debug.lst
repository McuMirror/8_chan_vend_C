

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Dec 26 15:04:08 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89  0000                     
    90                           ; Version 1.44
    91                           ; Generated 14/09/2017 GMT
    92                           ; 
    93                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC18F47K40 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     
   125                           	psect	idataCOMRAM
   126  011290                     __pidataCOMRAM:
   127                           	opt stack 0
   128                           
   129                           ;initializer for _notenum
   130  011290  FF                 	db	255
   131                           
   132                           	psect	mediumconst
   133  00FDC6                     __pmediumconst:
   134                           	opt stack 0
   135  00FDC6  00                 	db	0
   136  00FDC7                     _credclr:
   137                           	opt stack 0
   138  00FDC7  50                 	db	80
   139  00FDC8  75                 	db	117
   140  00FDC9  73                 	db	115
   141  00FDCA  68                 	db	104
   142  00FDCB  20                 	db	32
   143  00FDCC  62                 	db	98
   144  00FDCD  75                 	db	117
   145  00FDCE  74                 	db	116
   146  00FDCF  74                 	db	116
   147  00FDD0  6F                 	db	111
   148  00FDD1  6E                 	db	110
   149  00FDD2  20                 	db	32
   150  00FDD3  31                 	db	49
   151  00FDD4  20                 	db	32
   152  00FDD5  74                 	db	116
   153  00FDD6  6F                 	db	111
   154  00FDD7  20                 	db	32
   155  00FDD8  63                 	db	99
   156  00FDD9  6C                 	db	108
   157  00FDDA  65                 	db	101
   158  00FDDB  61                 	db	97
   159  00FDDC  72                 	db	114
   160  00FDDD  20                 	db	32
   161  00FDDE  63                 	db	99
   162  00FDDF  72                 	db	114
   163  00FDE0  65                 	db	101
   164  00FDE1  64                 	db	100
   165  00FDE2  69                 	db	105
   166  00FDE3  74                 	db	116
   167  00FDE4  73                 	db	115
   168  00FDE5  20                 	db	32
   169  00FDE6  20                 	db	32
   170  00FDE7  20                 	db	32
   171  00FDE8  61                 	db	97
   172  00FDE9  6E                 	db	110
   173  00FDEA  64                 	db	100
   174  00FDEB  20                 	db	32
   175  00FDEC  65                 	db	101
   176  00FDED  78                 	db	120
   177  00FDEE  69                 	db	105
   178  00FDEF  74                 	db	116
   179  00FDF0  00                 	db	0
   180  00FDF1                     __end_of_credclr:
   181                           	opt stack 0
   182  00FDF1                     _hopcoin:
   183                           	opt stack 0
   184  00FDF1  48                 	db	72
   185  00FDF2  6F                 	db	111
   186  00FDF3  70                 	db	112
   187  00FDF4  70                 	db	112
   188  00FDF5  65                 	db	101
   189  00FDF6  72                 	db	114
   190  00FDF7  20                 	db	32
   191  00FDF8  43                 	db	67
   192  00FDF9  6F                 	db	111
   193  00FDFA  69                 	db	105
   194  00FDFB  6E                 	db	110
   195  00FDFC  20                 	db	32
   196  00FDFD  20                 	db	32
   197  00FDFE  20                 	db	32
   198  00FDFF  20                 	db	32
   199  00FE00  20                 	db	32
   200  00FE01  20                 	db	32
   201  00FE02  20                 	db	32
   202  00FE03  20                 	db	32
   203  00FE04  20                 	db	32
   204  00FE05  56                 	db	86
   205  00FE06  61                 	db	97
   206  00FE07  6C                 	db	108
   207  00FE08  75                 	db	117
   208  00FE09  65                 	db	101
   209  00FE0A  00                 	db	0
   210  00FE0B                     __end_of_hopcoin:
   211                           	opt stack 0
   212  00FE0B                     _vendtest:
   213                           	opt stack 0
   214  00FE0B  20                 	db	32
   215  00FE0C  50                 	db	80
   216  00FE0D  75                 	db	117
   217  00FE0E  73                 	db	115
   218  00FE0F  68                 	db	104
   219  00FE10  20                 	db	32
   220  00FE11  62                 	db	98
   221  00FE12  75                 	db	117
   222  00FE13  74                 	db	116
   223  00FE14  74                 	db	116
   224  00FE15  6F                 	db	111
   225  00FE16  6E                 	db	110
   226  00FE17  20                 	db	32
   227  00FE18  74                 	db	116
   228  00FE19  6F                 	db	111
   229  00FE1A  20                 	db	32
   230  00FE1B  20                 	db	32
   231  00FE1C  20                 	db	32
   232  00FE1D  20                 	db	32
   233  00FE1E  20                 	db	32
   234  00FE1F  76                 	db	118
   235  00FE20  65                 	db	101
   236  00FE21  6E                 	db	110
   237  00FE22  64                 	db	100
   238  00FE23  00                 	db	0
   239  00FE24                     __end_of_vendtest:
   240                           	opt stack 0
   241  00FE24                     _nochange:
   242                           	opt stack 0
   243  00FE24  4E                 	db	78
   244  00FE25  6F                 	db	111
   245  00FE26  20                 	db	32
   246  00FE27  43                 	db	67
   247  00FE28  68                 	db	104
   248  00FE29  61                 	db	97
   249  00FE2A  6E                 	db	110
   250  00FE2B  67                 	db	103
   251  00FE2C  65                 	db	101
   252  00FE2D  20                 	db	32
   253  00FE2E  47                 	db	71
   254  00FE2F  69                 	db	105
   255  00FE30  76                 	db	118
   256  00FE31  65                 	db	101
   257  00FE32  6E                 	db	110
   258  00FE33  00                 	db	0
   259  00FE34                     __end_of_nochange:
   260                           	opt stack 0
   261  00FE34                     _senset:
   262                           	opt stack 0
   263  00FE34  20                 	db	32
   264  00FE35  20                 	db	32
   265  00FE36  53                 	db	83
   266  00FE37  65                 	db	101
   267  00FE38  74                 	db	116
   268  00FE39  75                 	db	117
   269  00FE3A  70                 	db	112
   270  00FE3B  20                 	db	32
   271  00FE3C  53                 	db	83
   272  00FE3D  65                 	db	101
   273  00FE3E  6E                 	db	110
   274  00FE3F  73                 	db	115
   275  00FE40  6F                 	db	111
   276  00FE41  72                 	db	114
   277  00FE42  00                 	db	0
   278  00FE43                     __end_of_senset:
   279                           	opt stack 0
   280  00FE43                     _service:
   281                           	opt stack 0
   282  00FE43  20                 	db	32
   283  00FE44  20                 	db	32
   284  00FE45  53                 	db	83
   285  00FE46  65                 	db	101
   286  00FE47  72                 	db	114
   287  00FE48  76                 	db	118
   288  00FE49  69                 	db	105
   289  00FE4A  63                 	db	99
   290  00FE4B  65                 	db	101
   291  00FE4C  20                 	db	32
   292  00FE4D  4D                 	db	77
   293  00FE4E  6F                 	db	111
   294  00FE4F  64                 	db	100
   295  00FE50  65                 	db	101
   296  00FE51  00                 	db	0
   297  00FE52                     __end_of_service:
   298                           	opt stack 0
   299  00FE52                     _notetest:
   300                           	opt stack 0
   301  00FE52  20                 	db	32
   302  00FE53  20                 	db	32
   303  00FE54  49                 	db	73
   304  00FE55  6E                 	db	110
   305  00FE56  73                 	db	115
   306  00FE57  65                 	db	101
   307  00FE58  72                 	db	114
   308  00FE59  74                 	db	116
   309  00FE5A  20                 	db	32
   310  00FE5B  4E                 	db	78
   311  00FE5C  6F                 	db	111
   312  00FE5D  74                 	db	116
   313  00FE5E  65                 	db	101
   314  00FE5F  00                 	db	0
   315  00FE60                     __end_of_notetest:
   316                           	opt stack 0
   317  00FE60                     _audit:
   318                           	opt stack 0
   319  00FE60  20                 	db	32
   320  00FE61  20                 	db	32
   321  00FE62  41                 	db	65
   322  00FE63  75                 	db	117
   323  00FE64  64                 	db	100
   324  00FE65  69                 	db	105
   325  00FE66  74                 	db	116
   326  00FE67  20                 	db	32
   327  00FE68  4D                 	db	77
   328  00FE69  6F                 	db	111
   329  00FE6A  64                 	db	100
   330  00FE6B  65                 	db	101
   331  00FE6C  00                 	db	0
   332  00FE6D                     __end_of_audit:
   333                           	opt stack 0
   334  00FE6D                     _exit:
   335                           	opt stack 0
   336  00FE6D  45                 	db	69
   337  00FE6E  78                 	db	120
   338  00FE6F  69                 	db	105
   339  00FE70  74                 	db	116
   340  00FE71  00                 	db	0
   341  00FE72                     __end_of_exit:
   342                           	opt stack 0
   343  00FE72                     _notebits:
   344                           	opt stack 0
   345  00FE72  0018               	dw	24
   346  00FE74                     __end_of_notebits:
   347                           	opt stack 0
   348  00FE74                     _venderrors:
   349                           	opt stack 0
   350  00FE74  0017               	dw	23
   351  00FE76                     __end_of_venderrors:
   352                           	opt stack 0
   353  00FE76                     _pricestore:
   354                           	opt stack 0
   355  00FE76  000F               	dw	15
   356  00FE78                     __end_of_pricestore:
   357                           	opt stack 0
   358  00FE78                     _vendstore:
   359                           	opt stack 0
   360  00FE78  0007               	dw	7
   361  00FE7A                     __end_of_vendstore:
   362                           	opt stack 0
   363  00FE7A                     _cashint:
   364                           	opt stack 0
   365  00FE7A  0004               	dw	4
   366  00FE7C                     __end_of_cashint:
   367                           	opt stack 0
   368  00FE7C                     _cashinv:
   369                           	opt stack 0
   370  00FE7C  0002               	dw	2
   371  00FE7E                     __end_of_cashinv:
   372                           	opt stack 0
   373  00FE7E                     _credmem:
   374                           	opt stack 0
   375  00FE7E  0000               	dw	0
   376  00FE80                     __end_of_credmem:
   377                           	opt stack 0
   378  00FE80                     _cc_poll:
   379                           	opt stack 0
   380  00FE80  FE                 	db	254
   381  00FE81                     __end_of_cc_poll:
   382                           	opt stack 0
   383  00FE81                     _cc_adpoll:
   384                           	opt stack 0
   385  00FE81  FD                 	db	253
   386  00FE82                     __end_of_cc_adpoll:
   387                           	opt stack 0
   388  00FE82                     _cc_serial:
   389                           	opt stack 0
   390  00FE82  F2                 	db	242
   391  00FE83                     __end_of_cc_serial:
   392                           	opt stack 0
   393  00FE83                     _cc_newpin:
   394                           	opt stack 0
   395  00FE83  DB                 	db	219
   396  00FE84                     __end_of_cc_newpin:
   397                           	opt stack 0
   398  00FE84                     _cc_pin:
   399                           	opt stack 0
   400  00FE84  DA                 	db	218
   401  00FE85                     __end_of_cc_pin:
   402                           	opt stack 0
   403  00FE85                     _cc_level:
   404                           	opt stack 0
   405  00FE85  EC                 	db	236
   406  00FE86                     __end_of_cc_level:
   407                           	opt stack 0
   408  00FE86                     _cc_stop:
   409                           	opt stack 0
   410  00FE86  AC                 	db	172
   411  00FE87                     __end_of_cc_stop:
   412                           	opt stack 0
   413  00FE87                     _cc_countrq:
   414                           	opt stack 0
   415  00FE87  A8                 	db	168
   416  00FE88                     __end_of_cc_countrq:
   417                           	opt stack 0
   418  00FE88                     _cc_pay:
   419                           	opt stack 0
   420  00FE88  A7                 	db	167
   421  00FE89                     __end_of_cc_pay:
   422                           	opt stack 0
   423  00FE89                     _cc_status:
   424                           	opt stack 0
   425  00FE89  A6                 	db	166
   426  00FE8A                     __end_of_cc_status:
   427                           	opt stack 0
   428  00FE8A                     _cc_enable:
   429                           	opt stack 0
   430  00FE8A  A4                 	db	164
   431  00FE8B                     __end_of_cc_enable:
   432                           	opt stack 0
   433  00FE8B                     _cc_test:
   434                           	opt stack 0
   435  00FE8B  A3                 	db	163
   436  00FE8C                     __end_of_cc_test:
   437                           	opt stack 0
   438  00FE8C                     _cc_reset:
   439                           	opt stack 0
   440  00FE8C  01                 	db	1
   441  00FE8D                     __end_of_cc_reset:
   442                           	opt stack 0
   443  00FE8D                     _mastadd:
   444                           	opt stack 0
   445  00FE8D  01                 	db	1
   446  00FE8E                     __end_of_mastadd:
   447                           	opt stack 0
   448  00FE8E                     _hopadd:
   449                           	opt stack 0
   450  00FE8E  03                 	db	3
   451  00FE8F                     __end_of_hopadd:
   452                           	opt stack 0
   453  00FE8F                     _theft_attempt:
   454                           	opt stack 0
   455  00FE8F  0C                 	db	12
   456  00FE90                     __end_of_theft_attempt:
   457                           	opt stack 0
   458  00FE90                     _note_rejected:
   459                           	opt stack 0
   460  00FE90  0B                 	db	11
   461  00FE91                     __end_of_note_rejected:
   462                           	opt stack 0
   463  00FE91                     _invalid_escrow:
   464                           	opt stack 0
   465  00FE91  0A                 	db	10
   466  00FE92                     __end_of_invalid_escrow:
   467                           	opt stack 0
   468  00FE92                     _acept_disabled:
   469                           	opt stack 0
   470  00FE92  09                 	db	9
   471  00FE93                     __end_of_acept_disabled:
   472                           	opt stack 0
   473  00FE93                     _cashbox_err:
   474                           	opt stack 0
   475  00FE93  08                 	db	8
   476  00FE94                     __end_of_cashbox_err:
   477                           	opt stack 0
   478  00FE94                     _note_removed:
   479                           	opt stack 0
   480  00FE94  07                 	db	7
   481  00FE95                     __end_of_note_removed:
   482                           	opt stack 0
   483  00FE95                     _just_reset:
   484                           	opt stack 0
   485  00FE95  06                 	db	6
   486  00FE96                     __end_of_just_reset:
   487                           	opt stack 0
   488  00FE96                     _jammed_err:
   489                           	opt stack 0
   490  00FE96  05                 	db	5
   491  00FE97                     __end_of_jammed_err:
   492                           	opt stack 0
   493  00FE97                     _rom_error:
   494                           	opt stack 0
   495  00FE97  04                 	db	4
   496  00FE98                     __end_of_rom_error:
   497                           	opt stack 0
   498  00FE98                     _just_busy:
   499                           	opt stack 0
   500  00FE98  03                 	db	3
   501  00FE99                     __end_of_just_busy:
   502                           	opt stack 0
   503  00FE99                     _sens_error:
   504                           	opt stack 0
   505  00FE99  02                 	db	2
   506  00FE9A                     __end_of_sens_error:
   507                           	opt stack 0
   508  00FE9A                     _motr_error:
   509                           	opt stack 0
   510  00FE9A  01                 	db	1
   511  00FE9B                     __end_of_motr_error:
   512                           	opt stack 0
   513  00FE9B                     _note_features:
   514                           	opt stack 0
   515  00FE9B  33                 	db	51
   516  00FE9C                     __end_of_note_features:
   517                           	opt stack 0
   518  00FE9C                     _note_stacker:
   519                           	opt stack 0
   520  00FE9C  36                 	db	54
   521  00FE9D                     __end_of_note_stacker:
   522                           	opt stack 0
   523  00FE9D                     _note_escrow:
   524                           	opt stack 0
   525  00FE9D  35                 	db	53
   526  00FE9E                     __end_of_note_escrow:
   527                           	opt stack 0
   528  00FE9E                     _note_type:
   529                           	opt stack 0
   530  00FE9E  34                 	db	52
   531  00FE9F                     __end_of_note_type:
   532                           	opt stack 0
   533  00FE9F                     _note_poll:
   534                           	opt stack 0
   535  00FE9F  33                 	db	51
   536  00FEA0                     __end_of_note_poll:
   537                           	opt stack 0
   538  00FEA0                     _note_security:
   539                           	opt stack 0
   540  00FEA0  32                 	db	50
   541  00FEA1                     __end_of_note_security:
   542                           	opt stack 0
   543  00FEA1                     _note_setup:
   544                           	opt stack 0
   545  00FEA1  31                 	db	49
   546  00FEA2                     __end_of_note_setup:
   547                           	opt stack 0
   548  00FEA2                     _note_reset:
   549                           	opt stack 0
   550  00FEA2  30                 	db	48
   551  00FEA3                     __end_of_note_reset:
   552                           	opt stack 0
   553  00FEA3                     _line4:
   554                           	opt stack 0
   555  00FEA3  D4                 	db	212
   556  00FEA4                     __end_of_line4:
   557                           	opt stack 0
   558  00FEA4                     _line3:
   559                           	opt stack 0
   560  00FEA4  94                 	db	148
   561  00FEA5                     __end_of_line3:
   562                           	opt stack 0
   563  00FEA5                     _line2:
   564                           	opt stack 0
   565  00FEA5  C0                 	db	192
   566  00FEA6                     __end_of_line2:
   567                           	opt stack 0
   568  00FEA6                     _line1:
   569                           	opt stack 0
   570  00FEA6  80                 	db	128
   571  00FEA7                     __end_of_line1:
   572                           	opt stack 0
   573  00FEA7                     _dispsl:
   574                           	opt stack 0
   575  00FEA7  18                 	db	24
   576  00FEA8                     __end_of_dispsl:
   577                           	opt stack 0
   578  00FEA8                     _dispsr:
   579                           	opt stack 0
   580  00FEA8  1B                 	db	27
   581  00FEA9                     __end_of_dispsr:
   582                           	opt stack 0
   583  00FEA9                     _dispoff:
   584                           	opt stack 0
   585  00FEA9  08                 	db	8
   586  00FEAA                     __end_of_dispoff:
   587                           	opt stack 0
   588  00FEAA                     _dispshleft:
   589                           	opt stack 0
   590  00FEAA  07                 	db	7
   591  00FEAB                     __end_of_dispshleft:
   592                           	opt stack 0
   593  00FEAB                     _dispshright:
   594                           	opt stack 0
   595  00FEAB  05                 	db	5
   596  00FEAC                     __end_of_dispshright:
   597                           	opt stack 0
   598  00FEAC                     _dispcursor:
   599                           	opt stack 0
   600  00FEAC  04                 	db	4
   601  00FEAD                     __end_of_dispcursor:
   602                           	opt stack 0
   603  00FEAD                     _dispnormal:
   604                           	opt stack 0
   605  00FEAD  06                 	db	6
   606  00FEAE                     __end_of_dispnormal:
   607                           	opt stack 0
   608  00FEAE                     _dsphome:
   609                           	opt stack 0
   610  00FEAE  02                 	db	2
   611  00FEAF                     __end_of_dsphome:
   612                           	opt stack 0
   613  00FEAF                     _dispaddr:
   614                           	opt stack 0
   615  00FEAF  A8                 	db	168
   616  00FEB0                     __end_of_dispaddr:
   617                           	opt stack 0
   618  00FEB0                     _dispclr:
   619                           	opt stack 0
   620  00FEB0  01                 	db	1
   621  00FEB1                     __end_of_dispclr:
   622                           	opt stack 0
   623  00FEB1                     _dispon:
   624                           	opt stack 0
   625  00FEB1  0C                 	db	12
   626  00FEB2                     __end_of_dispon:
   627                           	opt stack 0
   628  00FEB2                     _dispfunc3:
   629                           	opt stack 0
   630  00FEB2  2C                 	db	44
   631  00FEB3                     __end_of_dispfunc3:
   632                           	opt stack 0
   633  00FEB3                     _dispfunc2:
   634                           	opt stack 0
   635  00FEB3  28                 	db	40
   636  00FEB4                     __end_of_dispfunc2:
   637                           	opt stack 0
   638  00FEB4                     _dispfunc1:
   639                           	opt stack 0
   640  00FEB4  24                 	db	36
   641  00FEB5                     __end_of_dispfunc1:
   642                           	opt stack 0
   643  00FEB5                     _servmsg:
   644                           	opt stack 0
   645  00FEB5  53                 	db	83
   646  00FEB6  65                 	db	101
   647  00FEB7  72                 	db	114
   648  00FEB8  76                 	db	118
   649  00FEB9  69                 	db	105
   650  00FEBA  63                 	db	99
   651  00FEBB  65                 	db	101
   652  00FEBC  20                 	db	32
   653  00FEBD  4D                 	db	77
   654  00FEBE  6F                 	db	111
   655  00FEBF  64                 	db	100
   656  00FEC0  65                 	db	101
   657  00FEC1  3A                 	db	58
   658  00FEC2  20                 	db	32
   659  00FEC3  70                 	db	112
   660  00FEC4  72                 	db	114
   661  00FEC5  65                 	db	101
   662  00FEC6  73                 	db	115
   663  00FEC7  73                 	db	115
   664  00FEC8  20                 	db	32
   665  00FEC9  31                 	db	49
   666  00FECA  20                 	db	32
   667  00FECB  3D                 	db	61
   668  00FECC  20                 	db	32
   669  00FECD  41                 	db	65
   670  00FECE  75                 	db	117
   671  00FECF  64                 	db	100
   672  00FED0  69                 	db	105
   673  00FED1  74                 	db	116
   674  00FED2  20                 	db	32
   675  00FED3  32                 	db	50
   676  00FED4  20                 	db	32
   677  00FED5  3D                 	db	61
   678  00FED6  20                 	db	32
   679  00FED7  53                 	db	83
   680  00FED8  65                 	db	101
   681  00FED9  6E                 	db	110
   682  00FEDA  73                 	db	115
   683  00FEDB  6F                 	db	111
   684  00FEDC  72                 	db	114
   685  00FEDD  33                 	db	51
   686  00FEDE  3D                 	db	61
   687  00FEDF  4E                 	db	78
   688  00FEE0  6F                 	db	111
   689  00FEE1  74                 	db	116
   690  00FEE2  65                 	db	101
   691  00FEE3  2D                 	db	45
   692  00FEE4  65                 	db	101
   693  00FEE5  6E                 	db	110
   694  00FEE6  20                 	db	32
   695  00FEE7  34                 	db	52
   696  00FEE8  3D                 	db	61
   697  00FEE9  43                 	db	67
   698  00FEEA  72                 	db	114
   699  00FEEB  65                 	db	101
   700  00FEEC  64                 	db	100
   701  00FEED  2D                 	db	45
   702  00FEEE  63                 	db	99
   703  00FEEF  6C                 	db	108
   704  00FEF0  72                 	db	114
   705  00FEF1  20                 	db	32
   706  00FEF2  35                 	db	53
   707  00FEF3  3D                 	db	61
   708  00FEF4  56                 	db	86
   709  00FEF5  65                 	db	101
   710  00FEF6  6E                 	db	110
   711  00FEF7  64                 	db	100
   712  00FEF8  20                 	db	32
   713  00FEF9  36                 	db	54
   714  00FEFA  3D                 	db	61
   715  00FEFB  4E                 	db	78
   716  00FEFC  6F                 	db	111
   717  00FEFD  74                 	db	116
   718  00FEFE  65                 	db	101
   719  00FEFF  20                 	db	32
   720  00FF00  38                 	db	56
   721  00FF01  3D                 	db	61
   722  00FF02  45                 	db	69
   723  00FF03  78                 	db	120
   724  00FF04  69                 	db	105
   725  00FF05  74                 	db	116
   726  00FF06  00                 	db	0
   727  00FF07                     __end_of_servmsg:
   728                           	opt stack 0
   729  00FF07                     _setnotes:
   730                           	opt stack 0
   731  00FF07  45                 	db	69
   732  00FF08  6E                 	db	110
   733  00FF09  61                 	db	97
   734  00FF0A  62                 	db	98
   735  00FF0B  6C                 	db	108
   736  00FF0C  65                 	db	101
   737  00FF0D  20                 	db	32
   738  00FF0E  2F                 	db	47
   739  00FF0F  20                 	db	32
   740  00FF10  44                 	db	68
   741  00FF11  69                 	db	105
   742  00FF12  73                 	db	115
   743  00FF13  61                 	db	97
   744  00FF14  62                 	db	98
   745  00FF15  6C                 	db	108
   746  00FF16  65                 	db	101
   747  00FF17  20                 	db	32
   748  00FF18  20                 	db	32
   749  00FF19  20                 	db	32
   750  00FF1A  20                 	db	32
   751  00FF1B  31                 	db	49
   752  00FF1C  20                 	db	32
   753  00FF1D  3D                 	db	61
   754  00FF1E  20                 	db	32
   755  00FF1F  52                 	db	82
   756  00FF20  31                 	db	49
   757  00FF21  30                 	db	48
   758  00FF22  2C                 	db	44
   759  00FF23  20                 	db	32
   760  00FF24  32                 	db	50
   761  00FF25  20                 	db	32
   762  00FF26  3D                 	db	61
   763  00FF27  20                 	db	32
   764  00FF28  52                 	db	82
   765  00FF29  32                 	db	50
   766  00FF2A  30                 	db	48
   767  00FF2B  20                 	db	32
   768  00FF2C  20                 	db	32
   769  00FF2D  20                 	db	32
   770  00FF2E  20                 	db	32
   771  00FF2F  33                 	db	51
   772  00FF30  20                 	db	32
   773  00FF31  3D                 	db	61
   774  00FF32  20                 	db	32
   775  00FF33  52                 	db	82
   776  00FF34  35                 	db	53
   777  00FF35  30                 	db	48
   778  00FF36  2C                 	db	44
   779  00FF37  20                 	db	32
   780  00FF38  34                 	db	52
   781  00FF39  20                 	db	32
   782  00FF3A  3D                 	db	61
   783  00FF3B  20                 	db	32
   784  00FF3C  52                 	db	82
   785  00FF3D  31                 	db	49
   786  00FF3E  30                 	db	48
   787  00FF3F  30                 	db	48
   788  00FF40  20                 	db	32
   789  00FF41  20                 	db	32
   790  00FF42  20                 	db	32
   791  00FF43  35                 	db	53
   792  00FF44  20                 	db	32
   793  00FF45  3D                 	db	61
   794  00FF46  20                 	db	32
   795  00FF47  52                 	db	82
   796  00FF48  32                 	db	50
   797  00FF49  30                 	db	48
   798  00FF4A  30                 	db	48
   799  00FF4B  00                 	db	0
   800  00FF4C                     __end_of_setnotes:
   801                           	opt stack 0
   802  00FF4C                     _initnote:
   803                           	opt stack 0
   804  00FF4C  20                 	db	32
   805  00FF4D  20                 	db	32
   806  00FF4E  20                 	db	32
   807  00FF4F  20                 	db	32
   808  00FF50  20                 	db	32
   809  00FF51  49                 	db	73
   810  00FF52  6E                 	db	110
   811  00FF53  69                 	db	105
   812  00FF54  74                 	db	116
   813  00FF55  69                 	db	105
   814  00FF56  61                 	db	97
   815  00FF57  6C                 	db	108
   816  00FF58  69                 	db	105
   817  00FF59  7A                 	db	122
   818  00FF5A  65                 	db	101
   819  00FF5B  20                 	db	32
   820  00FF5C  20                 	db	32
   821  00FF5D  20                 	db	32
   822  00FF5E  20                 	db	32
   823  00FF5F  20                 	db	32
   824  00FF60  20                 	db	32
   825  00FF61  20                 	db	32
   826  00FF62  20                 	db	32
   827  00FF63  20                 	db	32
   828  00FF64  20                 	db	32
   829  00FF65  4E                 	db	78
   830  00FF66  6F                 	db	111
   831  00FF67  74                 	db	116
   832  00FF68  65                 	db	101
   833  00FF69  20                 	db	32
   834  00FF6A  52                 	db	82
   835  00FF6B  65                 	db	101
   836  00FF6C  61                 	db	97
   837  00FF6D  64                 	db	100
   838  00FF6E  65                 	db	101
   839  00FF6F  72                 	db	114
   840  00FF70  00                 	db	0
   841  00FF71                     __end_of_initnote:
   842                           	opt stack 0
   843  00FF71                     _noteerr:
   844                           	opt stack 0
   845  00FF71  20                 	db	32
   846  00FF72  20                 	db	32
   847  00FF73  20                 	db	32
   848  00FF74  4E                 	db	78
   849  00FF75  6F                 	db	111
   850  00FF76  74                 	db	116
   851  00FF77  65                 	db	101
   852  00FF78  20                 	db	32
   853  00FF79  65                 	db	101
   854  00FF7A  72                 	db	114
   855  00FF7B  72                 	db	114
   856  00FF7C  6F                 	db	111
   857  00FF7D  72                 	db	114
   858  00FF7E  20                 	db	32
   859  00FF7F  20                 	db	32
   860  00FF80  20                 	db	32
   861  00FF81  20                 	db	32
   862  00FF82  20                 	db	32
   863  00FF83  63                 	db	99
   864  00FF84  6F                 	db	111
   865  00FF85  64                 	db	100
   866  00FF86  65                 	db	101
   867  00FF87  20                 	db	32
   868  00FF88  3D                 	db	61
   869  00FF89  20                 	db	32
   870  00FF8A  30                 	db	48
   871  00FF8B  78                 	db	120
   872  00FF8C  00                 	db	0
   873  00FF8D                     __end_of_noteerr:
   874                           	opt stack 0
   875  00FF8D                     _inscoin:
   876                           	opt stack 0
   877  00FF8D  49                 	db	73
   878  00FF8E  6E                 	db	110
   879  00FF8F  73                 	db	115
   880  00FF90  65                 	db	101
   881  00FF91  72                 	db	114
   882  00FF92  74                 	db	116
   883  00FF93  20                 	db	32
   884  00FF94  43                 	db	67
   885  00FF95  6F                 	db	111
   886  00FF96  69                 	db	105
   887  00FF97  6E                 	db	110
   888  00FF98  73                 	db	115
   889  00FF99  20                 	db	32
   890  00FF9A  6F                 	db	111
   891  00FF9B  72                 	db	114
   892  00FF9C  20                 	db	32
   893  00FF9D  4E                 	db	78
   894  00FF9E  6F                 	db	111
   895  00FF9F  74                 	db	116
   896  00FFA0  65                 	db	101
   897  00FFA1  73                 	db	115
   898  00FFA2  00                 	db	0
   899  00FFA3                     __end_of_inscoin:
   900                           	opt stack 0
   901  00FFA3                     _inithop:
   902                           	opt stack 0
   903  00FFA3  20                 	db	32
   904  00FFA4  20                 	db	32
   905  00FFA5  49                 	db	73
   906  00FFA6  6E                 	db	110
   907  00FFA7  69                 	db	105
   908  00FFA8  74                 	db	116
   909  00FFA9  69                 	db	105
   910  00FFAA  61                 	db	97
   911  00FFAB  6C                 	db	108
   912  00FFAC  69                 	db	105
   913  00FFAD  7A                 	db	122
   914  00FFAE  65                 	db	101
   915  00FFAF  20                 	db	32
   916  00FFB0  48                 	db	72
   917  00FFB1  6F                 	db	111
   918  00FFB2  70                 	db	112
   919  00FFB3  70                 	db	112
   920  00FFB4  65                 	db	101
   921  00FFB5  72                 	db	114
   922  00FFB6  00                 	db	0
   923  00FFB7                     __end_of_inithop:
   924                           	opt stack 0
   925  00FFB7                     _credits:
   926                           	opt stack 0
   927  00FFB7  20                 	db	32
   928  00FFB8  20                 	db	32
   929  00FFB9  43                 	db	67
   930  00FFBA  72                 	db	114
   931  00FFBB  65                 	db	101
   932  00FFBC  64                 	db	100
   933  00FFBD  69                 	db	105
   934  00FFBE  74                 	db	116
   935  00FFBF  20                 	db	32
   936  00FFC0  3D                 	db	61
   937  00FFC1  20                 	db	32
   938  00FFC2  52                 	db	82
   939  00FFC3  00                 	db	0
   940  00FFC4                     __end_of_credits:
   941                           	opt stack 0
   942  00FFC4                     _disabled:
   943                           	opt stack 0
   944  00FFC4  64                 	db	100
   945  00FFC5  69                 	db	105
   946  00FFC6  73                 	db	115
   947  00FFC7  61                 	db	97
   948  00FFC8  62                 	db	98
   949  00FFC9  6C                 	db	108
   950  00FFCA  65                 	db	101
   951  00FFCB  64                 	db	100
   952  00FFCC  00                 	db	0
   953  00FFCD                     __end_of_disabled:
   954                           	opt stack 0
   955  00FFCD                     _enabled:
   956                           	opt stack 0
   957  00FFCD  65                 	db	101
   958  00FFCE  6E                 	db	110
   959  00FFCF  61                 	db	97
   960  00FFD0  62                 	db	98
   961  00FFD1  6C                 	db	108
   962  00FFD2  65                 	db	101
   963  00FFD3  64                 	db	100
   964  00FFD4  20                 	db	32
   965  00FFD5  00                 	db	0
   966  00FFD6                     __end_of_enabled:
   967                           	opt stack 0
   968  00FFD6                     _twohundredrand:
   969                           	opt stack 0
   970  00FFD6  34                 	db	52
   971  00FFD7  20                 	db	32
   972  00FFD8  52                 	db	82
   973  00FFD9  32                 	db	50
   974  00FFDA  30                 	db	48
   975  00FFDB  30                 	db	48
   976  00FFDC  20                 	db	32
   977  00FFDD  00                 	db	0
   978  00FFDE                     __end_of_twohundredrand:
   979                           	opt stack 0
   980  00FFDE                     _hundredrand:
   981                           	opt stack 0
   982  00FFDE  33                 	db	51
   983  00FFDF  20                 	db	32
   984  00FFE0  52                 	db	82
   985  00FFE1  31                 	db	49
   986  00FFE2  30                 	db	48
   987  00FFE3  30                 	db	48
   988  00FFE4  20                 	db	32
   989  00FFE5  00                 	db	0
   990  00FFE6                     __end_of_hundredrand:
   991                           	opt stack 0
   992  00FFE6                     _fiftyrand:
   993                           	opt stack 0
   994  00FFE6  32                 	db	50
   995  00FFE7  20                 	db	32
   996  00FFE8  52                 	db	82
   997  00FFE9  35                 	db	53
   998  00FFEA  30                 	db	48
   999  00FFEB  20                 	db	32
  1000  00FFEC  20                 	db	32
  1001  00FFED  00                 	db	0
  1002  00FFEE                     __end_of_fiftyrand:
  1003                           	opt stack 0
  1004  00FFEE                     _twentyrand:
  1005                           	opt stack 0
  1006  00FFEE  31                 	db	49
  1007  00FFEF  20                 	db	32
  1008  00FFF0  52                 	db	82
  1009  00FFF1  32                 	db	50
  1010  00FFF2  30                 	db	48
  1011  00FFF3  20                 	db	32
  1012  00FFF4  20                 	db	32
  1013  00FFF5  00                 	db	0
  1014  00FFF6                     __end_of_twentyrand:
  1015                           	opt stack 0
  1016  00FFF6                     _tenrand:
  1017                           	opt stack 0
  1018  00FFF6  30                 	db	48
  1019  00FFF7  20                 	db	32
  1020  00FFF8  52                 	db	82
  1021  00FFF9  31                 	db	49
  1022  00FFFA  30                 	db	48
  1023  00FFFB  20                 	db	32
  1024  00FFFC  20                 	db	32
  1025  00FFFD  00                 	db	0
  1026  00FFFE                     __end_of_tenrand:
  1027                           	opt stack 0
  1028  00FFFE  00                 	db	0	; dummy byte at the end
  1029  0000                     
  1030                           	psect	nvCOMRAM
  1031  000043                     __pnvCOMRAM:
  1032                           	opt stack 0
  1033  000043                     _timer5ReloadVal:
  1034                           	opt stack 0
  1035  000043                     	ds	2
  1036  000045                     _timer3ReloadVal:
  1037                           	opt stack 0
  1038  000045                     	ds	2
  1039  000047                     _timer1ReloadVal:
  1040                           	opt stack 0
  1041  000047                     	ds	2
  1042  000049                     _count:
  1043                           	opt stack 0
  1044  000049                     	ds	1
  1045  0000                     _PIR4bits	set	3790
  1046  0000                     _TX2REG	set	3738
  1047  0000                     _RC2REG	set	3737
  1048  0000                     _RC2STAbits	set	3741
  1049  0000                     _SP2BRGH	set	3740
  1050  0000                     _SP2BRGL	set	3739
  1051  0000                     _TX2STA	set	3742
  1052  0000                     _RC2STA	set	3741
  1053  0000                     _BAUD2CON	set	3743
  1054  0000                     _PIR7bits	set	3793
  1055  0000                     _IPR0bits	set	3770
  1056  0000                     _OSCTUNE	set	3805
  1057  0000                     _OSCFRQ	set	3806
  1058  0000                     _OSCEN	set	3804
  1059  0000                     _OSCCON3	set	3802
  1060  0000                     _OSCCON1	set	3800
  1061  0000                     _PIR3bits	set	3789
  1062  0000                     _PIR0bits	set	3786
  1063  0000                     _RX2PPSbits	set	3725
  1064  0000                     _RB5PPS	set	3828
  1065  0000                     _RC6PPS	set	3837
  1066  0000                     _RX1PPSbits	set	3765
  1067  0000                     _PPSLOCKbits	set	3744
  1068  0000                     _PPSLOCK	set	3744
  1069  0000                     _PIE0bits	set	3778
  1070  0000                     _DAC1CON1	set	3892
  1071  0000                     _DAC1CON0	set	3891
  1072  0000                     _CMOUTbits	set	3901
  1073  0000                     _CM1PCH	set	3900
  1074  0000                     _CM1NCH	set	3899
  1075  0000                     _CM1CON1	set	3898
  1076  0000                     _CM1CON0	set	3897
  1077  0000                     _ODCOND	set	3876
  1078  0000                     _ODCONC	set	3871
  1079  0000                     _ODCONB	set	3863
  1080  0000                     _ODCONA	set	3855
  1081  0000                     _ODCONE	set	3884
  1082  0000                     _WPUC	set	3872
  1083  0000                     _WPUA	set	3856
  1084  0000                     _WPUB	set	3864
  1085  0000                     _WPUE	set	3885
  1086  0000                     _WPUD	set	3877
  1087  0000                     _ANSELA	set	3857
  1088  0000                     _ANSELE	set	3886
  1089  0000                     _ANSELD	set	3878
  1090  0000                     _ANSELB	set	3865
  1091  0000                     _ANSELC	set	3873
  1092  0000                     _BAUD1CONbits	set	3999
  1093  0000                     _LATCbits	set	3973
  1094  0000                     _TX1STAbits	set	3998
  1095  0000                     _PORTA	set	3981
  1096  0000                     _PORTD	set	3984
  1097  0000                     _T5GCONbits	set	4036
  1098  0000                     _T5CONbits	set	4035
  1099  0000                     _T5CON	set	4035
  1100  0000                     _TMR5L	set	4033
  1101  0000                     _TMR5H	set	4034
  1102  0000                     _T5CLK	set	4038
  1103  0000                     _T5GATE	set	4037
  1104  0000                     _T5GCON	set	4036
  1105  0000                     _T3GCONbits	set	4042
  1106  0000                     _T3CONbits	set	4041
  1107  0000                     _T3CON	set	4041
  1108  0000                     _TMR3L	set	4039
  1109  0000                     _TMR3H	set	4040
  1110  0000                     _T3CLK	set	4044
  1111  0000                     _T3GATE	set	4043
  1112  0000                     _T3GCON	set	4042
  1113  0000                     _T1GCONbits	set	4048
  1114  0000                     _T1CONbits	set	4047
  1115  0000                     _T1CON	set	4047
  1116  0000                     _TMR1L	set	4045
  1117  0000                     _TMR1H	set	4046
  1118  0000                     _T1CLK	set	4050
  1119  0000                     _T1GATE	set	4049
  1120  0000                     _T1GCON	set	4048
  1121  0000                     _NVMDAT	set	3968
  1122  0000                     _NVMADRL	set	3966
  1123  0000                     _NVMADRH	set	3967
  1124  0000                     _NVMCON2	set	3970
  1125  0000                     _TABLAT	set	4085
  1126  0000                     _TBLPTRL	set	4086
  1127  0000                     _TBLPTRH	set	4087
  1128  0000                     _TBLPTRU	set	4088
  1129  0000                     _NVMCON1bits	set	3969
  1130  0000                     _INTCONbits	set	4082
  1131  0000                     _TX1REG	set	3994
  1132  0000                     _RC1REG	set	3993
  1133  0000                     _RC1STAbits	set	3997
  1134  0000                     _SP1BRGH	set	3996
  1135  0000                     _SP1BRGL	set	3995
  1136  0000                     _TX1STA	set	3998
  1137  0000                     _RC1STA	set	3997
  1138  0000                     _BAUD1CON	set	3999
  1139  0000                     _TRISD	set	3979
  1140  0000                     _TRISC	set	3978
  1141  0000                     _TRISB	set	3977
  1142  0000                     _TRISA	set	3976
  1143  0000                     _TRISE	set	3980
  1144  0000                     _LATC	set	3973
  1145  0000                     _LATB	set	3972
  1146  0000                     _LATA	set	3971
  1147  0000                     _LATD	set	3974
  1148  0000                     _LATE	set	3975
  1149  0000                     _LATA6	set	31774
  1150  0000                     _LATA7	set	31775
  1151  0000                     _GIE	set	32663
  1152                           
  1153                           ; #config settings
  1154  0000                     
  1155                           	psect	cinit
  1156  010E88                     __pcinit:
  1157                           	opt stack 0
  1158  010E88                     start_initialization:
  1159                           	opt stack 0
  1160  010E88                     __initialization:
  1161                           	opt stack 0
  1162                           
  1163                           ; Initialize objects allocated to COMRAM (1 bytes)
  1164                           ; load TBLPTR registers with __pidataCOMRAM
  1165  010E88  0E90               	movlw	low __pidataCOMRAM
  1166  010E8A  6EF6               	movwf	tblptrl,c
  1167  010E8C  0E12               	movlw	high __pidataCOMRAM
  1168  010E8E  6EF7               	movwf	tblptrh,c
  1169  010E90  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1170  010E92  6EF8               	movwf	tblptru,c
  1171  010E94  0009               	tblrd		*+	;fetch initializer
  1172  010E96  CFF5 F04A          	movff	tablat,__pdataCOMRAM
  1173                           
  1174                           ; Clear objects allocated to BANK0 (32 bytes)
  1175  010E9A  EE00  F060         	lfsr	0,__pbssBANK0
  1176  010E9E  0E20               	movlw	32
  1177  010EA0                     clear_0:
  1178  010EA0  6AEE               	clrf	postinc0,c
  1179  010EA2  06E8               	decf	wreg,f,c
  1180  010EA4  E1FD               	bnz	clear_0
  1181                           
  1182                           ; Clear objects allocated to COMRAM (32 bytes)
  1183  010EA6  EE00  F023         	lfsr	0,__pbssCOMRAM
  1184  010EAA  0E20               	movlw	32
  1185  010EAC                     clear_1:
  1186  010EAC  6AEE               	clrf	postinc0,c
  1187  010EAE  06E8               	decf	wreg,f,c
  1188  010EB0  E1FD               	bnz	clear_1
  1189  010EB2                     end_of_initialization:
  1190                           	opt stack 0
  1191  010EB2                     __end_of__initialization:
  1192                           	opt stack 0
  1193  010EB2  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1194  010EB4  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1195  010EB6  0100               	movlb	0
  1196  010EB8  EFE8  F082         	goto	_main	;jump to C main() function
  1197                           tblptru	equ	0xFF8
  1198                           tblptrh	equ	0xFF7
  1199                           tblptrl	equ	0xFF6
  1200                           tablat	equ	0xFF5
  1201                           postinc0	equ	0xFEE
  1202                           wreg	equ	0xFE8
  1203                           
  1204                           	psect	bssCOMRAM
  1205  000023                     __pbssCOMRAM:
  1206                           	opt stack 0
  1207  000023                     _hpserial:
  1208                           	opt stack 0
  1209  000023                     	ds	3
  1210  000026                     _hexnum:
  1211                           	opt stack 0
  1212  000026                     	ds	3
  1213  000029                     _dbcount:
  1214                           	opt stack 0
  1215  000029                     	ds	2
  1216  00002B                     _venflags:
  1217                           	opt stack 0
  1218  00002B                     	ds	1
  1219  00002C                     _buttons:
  1220                           	opt stack 0
  1221  00002C                     	ds	1
  1222  00002D                     _cash:
  1223                           	opt stack 0
  1224  00002D                     	ds	1
  1225  00002E                     _credit:
  1226                           	opt stack 0
  1227  00002E                     	ds	1
  1228  00002F                     _cctflags:
  1229                           	opt stack 0
  1230  00002F                     	ds	1
  1231  000030                     _command:
  1232                           	opt stack 0
  1233  000030                     	ds	1
  1234  000031                     _nobytes:
  1235                           	opt stack 0
  1236  000031                     	ds	1
  1237  000032                     _dest:
  1238                           	opt stack 0
  1239  000032                     	ds	1
  1240  000033                     _mdbtxbyte:
  1241                           	opt stack 0
  1242  000033                     	ds	1
  1243  000034                     _errorflags:
  1244                           	opt stack 0
  1245  000034                     	ds	1
  1246  000035                     _noteen_byte:
  1247                           	opt stack 0
  1248  000035                     	ds	1
  1249  000036                     _noteen:
  1250                           	opt stack 0
  1251  000036                     	ds	1
  1252  000037                     _mdbflags:
  1253                           	opt stack 0
  1254  000037                     	ds	1
  1255  000038                     _chkbyte:
  1256                           	opt stack 0
  1257  000038                     	ds	1
  1258  000039                     _notebyte:
  1259                           	opt stack 0
  1260  000039                     	ds	1
  1261  00003A                     _mcount:
  1262                           	opt stack 0
  1263  00003A                     	ds	1
  1264  00003B                     _slvadd:
  1265                           	opt stack 0
  1266  00003B                     	ds	1
  1267  00003C                     _lcdaddress:
  1268                           	opt stack 0
  1269  00003C                     	ds	1
  1270  00003D                     _ercode:
  1271                           	opt stack 0
  1272  00003D                     	ds	1
  1273  00003E                     _stradd:
  1274                           	opt stack 0
  1275  00003E                     	ds	1
  1276  00003F                     _lcdline:
  1277                           	opt stack 0
  1278  00003F                     	ds	1
  1279  000040                     _lcdata:
  1280                           	opt stack 0
  1281  000040                     	ds	1
  1282  000041                     _lcdfunc:
  1283                           	opt stack 0
  1284  000041                     	ds	1
  1285  000042                     _bflag:
  1286                           	opt stack 0
  1287  000042                     	ds	1
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           
  1295                           	psect	dataCOMRAM
  1296  00004A                     __pdataCOMRAM:
  1297                           	opt stack 0
  1298  00004A                     _notenum:
  1299                           	opt stack 0
  1300  00004A                     	ds	1
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           
  1308                           	psect	bssBANK0
  1309  000060                     __pbssBANK0:
  1310                           	opt stack 0
  1311  000060                     _mdbdata:
  1312                           	opt stack 0
  1313  000060                     	ds	32
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           postinc0	equ	0xFEE
  1319                           wreg	equ	0xFE8
  1320                           
  1321                           	psect	cstackBANK0
  1322  000080                     __pcstackBANK0:
  1323                           	opt stack 0
  1324  000080                     displ_hex@value:
  1325                           	opt stack 0
  1326                           
  1327                           ; 8 bytes @ 0x0
  1328  000080                     	ds	8
  1329  000088                     displ_hex@hexnumsave:
  1330                           	opt stack 0
  1331                           
  1332                           ; 3 bytes @ 0x8
  1333  000088                     	ds	3
  1334  00008B                     displ_hex@i:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0xB
  1338  00008B                     	ds	1
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           tblptrl	equ	0xFF6
  1342                           tablat	equ	0xFF5
  1343                           postinc0	equ	0xFEE
  1344                           wreg	equ	0xFE8
  1345                           
  1346                           	psect	cstackCOMRAM
  1347  000001                     __pcstackCOMRAM:
  1348                           	opt stack 0
  1349  000001                     ??_INTERRUPT_InterruptManagerHigh:
  1350  000001                     
  1351                           ; 1 bytes @ 0x0
  1352  000001                     	ds	18
  1353  000013                     ??_TMR3_Initialize:
  1354  000013                     ??_TMR5_Initialize:
  1355  000013                     ??_TMR1_Initialize:
  1356  000013                     ??_butin:
  1357  000013                     ?___ltdiv:
  1358                           	opt stack 0
  1359  000013                     ?___ltmod:
  1360                           	opt stack 0
  1361  000013                     PIN_MANAGER_Initialize@state:
  1362                           	opt stack 0
  1363  000013                     EUSART1_Write@txData:
  1364                           	opt stack 0
  1365  000013                     DAC1_SetOutput@inputData:
  1366                           	opt stack 0
  1367  000013                     read_busy@savelate:
  1368                           	opt stack 0
  1369  000013                     init_mdbdata@initdata:
  1370                           	opt stack 0
  1371  000013                     cctalk_read@data:
  1372                           	opt stack 0
  1373  000013                     DATAEE_WriteByte@bAdd:
  1374                           	opt stack 0
  1375  000013                     DATAEE_ReadByte@bAdd:
  1376                           	opt stack 0
  1377  000013                     ___ltdiv@dividend:
  1378                           	opt stack 0
  1379  000013                     ___ltmod@dividend:
  1380                           	opt stack 0
  1381                           
  1382                           ; 3 bytes @ 0x12
  1383  000013                     	ds	1
  1384  000014                     read_busy@savelatd:
  1385                           	opt stack 0
  1386  000014                     butindb@butt:
  1387                           	opt stack 0
  1388  000014                     init_mdbdata@i:
  1389                           	opt stack 0
  1390  000014                     mdb_transmit@txbyte:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x13
  1394  000014                     	ds	1
  1395  000015                     DATAEE_WriteByte@bData:
  1396                           	opt stack 0
  1397  000015                     lcd_write@savelatd:
  1398                           	opt stack 0
  1399  000015                     butindb@butval:
  1400                           	opt stack 0
  1401  000015                     mdb_comm@mcount:
  1402                           	opt stack 0
  1403  000015                     cctalk_comm@nobytes:
  1404                           	opt stack 0
  1405                           
  1406                           ; 1 bytes @ 0x14
  1407  000015                     	ds	1
  1408  000016                     DATAEE_WriteByte@GIEBitValue:
  1409                           	opt stack 0
  1410  000016                     lcd_write@lcdata:
  1411                           	opt stack 0
  1412  000016                     mdb_comm@slvadd:
  1413                           	opt stack 0
  1414  000016                     cctalk_comm@command:
  1415                           	opt stack 0
  1416  000016                     ___ltdiv@divisor:
  1417                           	opt stack 0
  1418  000016                     ___ltmod@divisor:
  1419                           	opt stack 0
  1420                           
  1421                           ; 3 bytes @ 0x15
  1422  000016                     	ds	1
  1423  000017                     ??_cctalk_comm:
  1424  000017                     lcd_dispadd@lcdaddress:
  1425                           	opt stack 0
  1426  000017                     credit_add@credit:
  1427                           	opt stack 0
  1428  000017                     credit_subtract@credit:
  1429                           	opt stack 0
  1430  000017                     mdb_comm@i:
  1431                           	opt stack 0
  1432                           
  1433                           ; 1 bytes @ 0x16
  1434  000017                     	ds	1
  1435  000018                     ??_mdb_reset:
  1436  000018                     lcd_dispadd@lcdatasave:
  1437                           	opt stack 0
  1438  000018                     mdb_poll@i:
  1439                           	opt stack 0
  1440  000018                     cctalk_comm@i:
  1441                           	opt stack 0
  1442                           
  1443                           ; 1 bytes @ 0x17
  1444  000018                     	ds	1
  1445  000019                     lcd_writeC@lcdata:
  1446                           	opt stack 0
  1447  000019                     mdb_reset@i:
  1448                           	opt stack 0
  1449  000019                     cctalk_comm@dest:
  1450                           	opt stack 0
  1451  000019                     ___ltmod@counter:
  1452                           	opt stack 0
  1453  000019                     ___ltdiv@quotient:
  1454                           	opt stack 0
  1455                           
  1456                           ; 3 bytes @ 0x18
  1457  000019                     	ds	1
  1458  00001A                     ??_displ_code:
  1459  00001A                     lcd_test@character:
  1460                           	opt stack 0
  1461  00001A                     mdb_reset@i_2281:
  1462                           	opt stack 0
  1463  00001A                     cctalk_adpoll@i:
  1464                           	opt stack 0
  1465  00001A                     cctalk_pinenter@i:
  1466                           	opt stack 0
  1467  00001A                     cctalk_poll@i:
  1468                           	opt stack 0
  1469  00001A                     lcd_string@lcdstring:
  1470                           	opt stack 0
  1471                           
  1472                           ; 2 bytes @ 0x19
  1473  00001A                     	ds	1
  1474  00001B                     ??_lcd_init:
  1475  00001B                     ??_cctalk_init:
  1476  00001B                     mdb_init@i:
  1477                           	opt stack 0
  1478                           
  1479                           ; 1 bytes @ 0x1A
  1480  00001B                     	ds	1
  1481  00001C                     displ_code@ercode:
  1482                           	opt stack 0
  1483  00001C                     lcd_string@lcdline:
  1484                           	opt stack 0
  1485  00001C                     ___ltdiv@counter:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0x1B
  1489  00001C                     	ds	1
  1490  00001D                     ??_lcd_string:
  1491  00001D                     displ_hex@hexnum:
  1492                           	opt stack 0
  1493                           
  1494                           ; 3 bytes @ 0x1C
  1495  00001D                     	ds	2
  1496  00001F                     displ_nendis@notenum:
  1497                           	opt stack 0
  1498  00001F                     displ_note@lcdstring:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x1E
  1502  00001F                     	ds	1
  1503  000020                     displ_credit@cash:
  1504                           	opt stack 0
  1505  000020                     enable_notes@notenum:
  1506                           	opt stack 0
  1507                           
  1508                           ; 1 bytes @ 0x1F
  1509  000020                     	ds	1
  1510  000021                     ??_displ_note:
  1511                           
  1512                           ; 1 bytes @ 0x20
  1513  000021                     	ds	2
  1514  000023                     tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           postinc0	equ	0xFEE
  1519                           wreg	equ	0xFE8
  1520                           
  1521                           ; 1 bytes @ 0x22
  1522 ;;
  1523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1524 ;;
  1525 ;; *************** function _main *****************
  1526 ;; Defined at:
  1527 ;;		line 56 in file "main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1545 ;;Total ram usage:        0 bytes
  1546 ;; Hardware stack levels required when called:   12
  1547 ;; This function calls:
  1548 ;;		_CMP1_GetOutputStatus
  1549 ;;		_SYSTEM_Initialize
  1550 ;;		_credit_add
  1551 ;;		_credit_subtract
  1552 ;;		_displ_credit
  1553 ;;		_displ_noteer
  1554 ;;		_enter_service
  1555 ;;		_lcd_init
  1556 ;;		_lcd_string
  1557 ;;		_mdb_init
  1558 ;;		_mdb_poll
  1559 ;;		_vend_init
  1560 ;; This function is called by:
  1561 ;;		Startup code after reset
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text0
  1566  0105D0                     __ptext0:
  1567                           	opt stack 0
  1568  0105D0                     _main:
  1569                           	opt stack 19
  1570                           
  1571                           ;main.c: 59: SYSTEM_Initialize();
  1572                           
  1573                           ;incstack = 0
  1574  0105D0  EC28  F088         	call	_SYSTEM_Initialize	;wreg free
  1575                           
  1576                           ;main.c: 61: lcd_init();
  1577  0105D4  ECF7  F083         	call	_lcd_init	;wreg free
  1578                           
  1579                           ;main.c: 62: vend_init();
  1580  0105D8  EC14  F085         	call	_vend_init	;wreg free
  1581  0105DC                     l709:
  1582  0105DC  F000               	nop		;# 
  1583                           
  1584                           ;main.c: 68: if (!CMP1_GetOutputStatus())
  1585  0105DE  EC16  F089         	call	_CMP1_GetOutputStatus	;wreg free
  1586  0105E2  0900               	iorlw	0
  1587  0105E4  B4D8               	btfsc	status,2,c
  1588                           
  1589                           ;main.c: 69: {
  1590                           ;main.c: 70: venflags.service = 1;
  1591  0105E6  8E2B               	bsf	_venflags,7,c
  1592                           
  1593                           ;main.c: 72: }
  1594                           ;main.c: 74: if(venflags.service == 1)
  1595  0105E8  BE2B               	btfsc	_venflags,7,c
  1596                           
  1597                           ;main.c: 75: {
  1598                           ;main.c: 76: enter_service();
  1599  0105EA  EC4B  F084         	call	_enter_service	;wreg free
  1600                           
  1601                           ;main.c: 77: }
  1602                           ;main.c: 79: if(venflags.inscoin == 1)
  1603  0105EE  A42B               	btfss	_venflags,2,c
  1604  0105F0  D010               	goto	l712
  1605                           
  1606                           ;main.c: 80: {
  1607                           ;main.c: 81: lcd_string(inscoin, line1);
  1608  0105F2  0E8D               	movlw	low _inscoin
  1609  0105F4  6E1A               	movwf	lcd_string@lcdstring,c
  1610  0105F6  0EFF               	movlw	high _inscoin
  1611  0105F8  6E1B               	movwf	lcd_string@lcdstring+1,c
  1612  0105FA  0EA6               	movlw	low _line1
  1613  0105FC  6EF6               	movwf	tblptrl,c
  1614  0105FE                     	if	1	;There is more than 1 active tblptr byte
  1615  0105FE  0EFE               	movlw	high _line1
  1616  010600  6EF7               	movwf	tblptrh,c
  1617  010602                     	endif
  1618  010602                     	if	1	;There are 3 active tblptr bytes
  1619  010602  0E00               	movlw	low (_line1 shr (0+16))
  1620  010604  6EF8               	movwf	tblptru,c
  1621  010606                     	endif
  1622  010606  0008               	tblrd		*
  1623  010608  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  1624  01060C  EC0F  F082         	call	_lcd_string	;wreg free
  1625                           
  1626                           ;main.c: 82: venflags.inscoin = 0;
  1627  010610  942B               	bcf	_venflags,2,c
  1628  010612                     l712:
  1629                           
  1630                           ;main.c: 83: }
  1631                           ;main.c: 84: if(venflags.initialrun == 1)
  1632  010612  AA2B               	btfss	_venflags,5,c
  1633  010614  D007               	goto	l713
  1634                           
  1635                           ;main.c: 85: {
  1636                           ;main.c: 86: credit_add(0x00);
  1637  010616  0E00               	movlw	0
  1638  010618  EC30  F086         	call	_credit_add
  1639                           
  1640                           ;main.c: 87: credit_subtract(0x00);
  1641  01061C  0E00               	movlw	0
  1642  01061E  ECB1  F085         	call	_credit_subtract
  1643                           
  1644                           ;main.c: 88: venflags.initialrun = 0;
  1645  010622  9A2B               	bcf	_venflags,5,c
  1646  010624                     l713:
  1647                           
  1648                           ;main.c: 90: }
  1649                           ;main.c: 91: if(venflags.credisplay == 1)
  1650  010624  B82B               	btfsc	_venflags,4,c
  1651                           
  1652                           ;main.c: 92: {
  1653                           ;main.c: 93: displ_credit();
  1654  010626  EC78  F087         	call	_displ_credit	;wreg free
  1655                           
  1656                           ;main.c: 94: }
  1657                           ;main.c: 96: if(PIR4bits.TMR3IF)
  1658  01062A  010E               	movlb	14	; () banked
  1659  01062C  A5CE               	btfss	206,2,b	;volatile
  1660  01062E  D7D6               	goto	l709
  1661                           
  1662                           ; BSR set to: 14
  1663                           ;main.c: 97: {
  1664                           ;main.c: 98: credit = mdb_poll();
  1665  010630  EC00  F080         	call	_mdb_poll	;wreg free
  1666  010634  6E2E               	movwf	_credit,c	;volatile
  1667                           
  1668                           ;main.c: 99: if(credit != 0x00)
  1669  010636  502E               	movf	_credit,w,c	;volatile
  1670  010638  B4D8               	btfsc	status,2,c
  1671  01063A  D021               	goto	l716
  1672                           
  1673                           ;main.c: 100: {
  1674                           ;main.c: 101: if(mdbflags.noteerr == 1)
  1675  01063C  B237               	btfsc	_mdbflags,1,c
  1676  01063E  D00D               	goto	l718
  1677  010640  D01A               	goto	l717
  1678  010642  EC83  F086         	call	_mdb_init	;wreg free
  1679  010646  D003               	goto	l724
  1680  010648                     l721:
  1681                           
  1682                           ;main.c: 112: if(mdbflags.vending)
  1683  010648  A837               	btfss	_mdbflags,4,c
  1684                           
  1685                           ;main.c: 116: else
  1686                           ;main.c: 117: {
  1687                           ;main.c: 118: mdb_init();
  1688                           
  1689                           ;main.c: 115: }
  1690                           
  1691                           ;main.c: 113: {
  1692                           ;main.c: 114: credit = 0;
  1693  01064A  EC83  F086         	call	_mdb_init	;wreg free
  1694  01064E                     l724:
  1695                           
  1696                           ;main.c: 126: credit = 0;
  1697                           
  1698                           ;main.c: 125: case 0x0C : mdbflags.noteerr == 0;
  1699                           
  1700                           ;main.c: 124: break;
  1701                           
  1702                           ;main.c: 123: credit = 0;
  1703  01064E  0E00               	movlw	0
  1704  010650  6E2E               	movwf	_credit,c	;volatile
  1705                           
  1706                           ;main.c: 127: break;
  1707  010652  D7C4               	goto	l709
  1708  010654  ECF9  F087         	call	_displ_noteer	;wreg free
  1709                           
  1710                           ;main.c: 129: }
  1711  010658  D7C1               	goto	l709
  1712  01065A                     l718:
  1713  01065A  502E               	movf	_credit,w,c	;volatile
  1714                           
  1715                           ; Switch size 1, requested type "space"
  1716                           ; Number of cases is 4, Range of values is 6 to 16
  1717                           ; switch strategies available:
  1718                           ; Name         Instructions Cycles
  1719                           ; simple_byte           13     7 (average)
  1720                           ;	Chosen strategy is simple_byte
  1721  01065C  0A06               	xorlw	6	; case 6
  1722  01065E  B4D8               	btfsc	status,2,c
  1723  010660  D7F0               	goto	l719
  1724  010662  0A0F               	xorlw	15	; case 9
  1725  010664  B4D8               	btfsc	status,2,c
  1726  010666  D7F0               	goto	l721
  1727  010668  0A05               	xorlw	5	; case 12
  1728  01066A  B4D8               	btfsc	status,2,c
  1729  01066C  D7F0               	goto	l724
  1730  01066E  0A1C               	xorlw	28	; case 16
  1731  010670  B4D8               	btfsc	status,2,c
  1732  010672  D7ED               	goto	l724
  1733  010674  D7EF               	goto	l726
  1734  010676                     l717:
  1735                           
  1736                           ;main.c: 131: else
  1737                           ;main.c: 132: {
  1738                           ;main.c: 133: credit_add(credit);
  1739  010676  502E               	movf	_credit,w,c	;volatile
  1740  010678  EC30  F086         	call	_credit_add
  1741                           
  1742                           ;main.c: 134: }
  1743                           ;main.c: 135: }
  1744  01067C  D7AF               	goto	l709
  1745  01067E                     l716:
  1746                           
  1747                           ;main.c: 136: else
  1748                           ;main.c: 137: {
  1749                           ;main.c: 138: if(mdbflags.noteerr == 1)
  1750  01067E  A237               	btfss	_mdbflags,1,c
  1751  010680  D7AD               	goto	l709
  1752                           
  1753                           ;main.c: 139: {
  1754                           ;main.c: 140: displ_noteer();
  1755  010682  ECF9  F087         	call	_displ_noteer	;wreg free
  1756  010686  D7AA               	goto	l709
  1757  010688                     __end_of_main:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           postinc0	equ	0xFEE
  1764                           wreg	equ	0xFE8
  1765                           status	equ	0xFD8
  1766                           
  1767 ;; *************** function _vend_init *****************
  1768 ;; Defined at:
  1769 ;;		line 13 in file "vend.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    8
  1790 ;; This function calls:
  1791 ;;		_DAC1_SetOutput
  1792 ;;		_cctalk_init
  1793 ;;		_credit_check
  1794 ;;		_lcd_string
  1795 ;;		_mdb_init
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text1
  1802  010A28                     __ptext1:
  1803                           	opt stack 0
  1804  010A28                     _vend_init:
  1805                           	opt stack 22
  1806                           
  1807                           ;vend.c: 15: lcd_string(inithop, line1);
  1808                           
  1809                           ;incstack = 0
  1810  010A28  0EA3               	movlw	low _inithop
  1811  010A2A  6E1A               	movwf	lcd_string@lcdstring,c
  1812  010A2C  0EFF               	movlw	high _inithop
  1813  010A2E  6E1B               	movwf	lcd_string@lcdstring+1,c
  1814  010A30  0EA6               	movlw	low _line1
  1815  010A32  6EF6               	movwf	tblptrl,c
  1816  010A34                     	if	1	;There is more than 1 active tblptr byte
  1817  010A34  0EFE               	movlw	high _line1
  1818  010A36  6EF7               	movwf	tblptrh,c
  1819  010A38                     	endif
  1820  010A38                     	if	1	;There are 3 active tblptr bytes
  1821  010A38  0E00               	movlw	low (_line1 shr (0+16))
  1822  010A3A  6EF8               	movwf	tblptru,c
  1823  010A3C                     	endif
  1824  010A3C  0008               	tblrd		*
  1825  010A3E  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  1826  010A42  EC0F  F082         	call	_lcd_string	;wreg free
  1827                           
  1828                           ;vend.c: 16: cctalk_init();
  1829  010A46  ECAA  F086         	call	_cctalk_init	;wreg free
  1830                           
  1831                           ;vend.c: 18: lcd_string(initnote, line1);
  1832  010A4A  0E4C               	movlw	low _initnote
  1833  010A4C  6E1A               	movwf	lcd_string@lcdstring,c
  1834  010A4E  0EFF               	movlw	high _initnote
  1835  010A50  6E1B               	movwf	lcd_string@lcdstring+1,c
  1836  010A52  0EA6               	movlw	low _line1
  1837  010A54  6EF6               	movwf	tblptrl,c
  1838  010A56                     	if	1	;There is more than 1 active tblptr byte
  1839  010A56  0EFE               	movlw	high _line1
  1840  010A58  6EF7               	movwf	tblptrh,c
  1841  010A5A                     	endif
  1842  010A5A                     	if	1	;There are 3 active tblptr bytes
  1843  010A5A  0E00               	movlw	low (_line1 shr (0+16))
  1844  010A5C  6EF8               	movwf	tblptru,c
  1845  010A5E                     	endif
  1846  010A5E  0008               	tblrd		*
  1847  010A60  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  1848  010A64  EC0F  F082         	call	_lcd_string	;wreg free
  1849                           
  1850                           ;vend.c: 19: mdb_init();
  1851  010A68  EC83  F086         	call	_mdb_init	;wreg free
  1852                           
  1853                           ;vend.c: 21: venflags.service = 0;
  1854  010A6C  9E2B               	bcf	_venflags,7,c
  1855                           
  1856                           ;vend.c: 22: venflags.initialrun = 1;
  1857  010A6E  8A2B               	bsf	_venflags,5,c
  1858                           
  1859                           ;vend.c: 23: if(credit_check() == 0)
  1860  010A70  EC50  F088         	call	_credit_check	;wreg free
  1861  010A74  0900               	iorlw	0
  1862  010A76  A4D8               	btfss	status,2,c
  1863  010A78  D004               	goto	l1353
  1864                           
  1865                           ;vend.c: 24: {
  1866                           ;vend.c: 25: venflags.iscredit = 0;
  1867  010A7A  902B               	bcf	_venflags,0,c
  1868                           
  1869                           ;vend.c: 26: venflags.inscoin = 1;
  1870  010A7C  842B               	bsf	_venflags,2,c
  1871                           
  1872                           ;vend.c: 27: venflags.credisplay = 0;
  1873  010A7E  982B               	bcf	_venflags,4,c
  1874  010A80  D003               	goto	L1
  1875  010A82                     l1353:
  1876                           
  1877                           ;vend.c: 30: else
  1878                           ;vend.c: 31: {
  1879                           ;vend.c: 32: venflags.iscredit = 1;
  1880  010A82  802B               	bsf	_venflags,0,c
  1881                           
  1882                           ;vend.c: 33: venflags.inscoin = 0;
  1883  010A84  942B               	bcf	_venflags,2,c
  1884                           
  1885                           ;vend.c: 34: venflags.credisplay = 1;
  1886  010A86  882B               	bsf	_venflags,4,c
  1887  010A88                     L1:
  1888                           
  1889                           ;vend.c: 35: mdbflags.noteerr = 0;
  1890  010A88  9237               	bcf	_mdbflags,1,c
  1891                           
  1892                           ;vend.c: 36: }
  1893                           ;vend.c: 38: DAC1_SetOutput(0x00);
  1894  010A8A  0E00               	movlw	0
  1895  010A8C  EC23  F089         	call	_DAC1_SetOutput
  1896  010A90  0012               	return		;funcret
  1897  010A92                     __end_of_vend_init:
  1898                           	opt stack 0
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function _mdb_init *****************
  1908 ;; Defined at:
  1909 ;;		line 21 in file "mdb.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  i               1   26[COMRAM] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;Total ram usage:        1 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    6
  1930 ;; This function calls:
  1931 ;;		_DATAEE_ReadByte
  1932 ;;		_eusartmdb_Initialize
  1933 ;;		_mdb_comm
  1934 ;;		_mdb_noten
  1935 ;;		_mdb_reset
  1936 ;;		_mdb_security
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;;		_vend_init
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text2
  1944  010D06                     __ptext2:
  1945                           	opt stack 0
  1946  010D06                     _mdb_init:
  1947                           	opt stack 23
  1948                           
  1949                           ;mdb.c: 23: noteen_byte = DATAEE_ReadByte(notebits);
  1950                           
  1951                           ;incstack = 0
  1952  010D06  0E72               	movlw	low _notebits
  1953  010D08  6EF6               	movwf	tblptrl,c
  1954  010D0A                     	if	1	;There is more than 1 active tblptr byte
  1955  010D0A  0EFE               	movlw	high _notebits
  1956  010D0C  6EF7               	movwf	tblptrh,c
  1957  010D0E                     	endif
  1958  010D0E                     	if	1	;There are 3 active tblptr bytes
  1959  010D0E  0E00               	movlw	low (_notebits shr (0+16))
  1960  010D10  6EF8               	movwf	tblptru,c
  1961  010D12                     	endif
  1962  010D12  0009               	tblrd		*+
  1963  010D14  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  1964  010D18  000A               	tblrd		*-
  1965  010D1A  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  1966  010D1E  EC9E  F088         	call	_DATAEE_ReadByte	;wreg free
  1967  010D22  6E35               	movwf	_noteen_byte,c	;volatile
  1968                           
  1969                           ;mdb.c: 24: eusartmdb_Initialize();
  1970  010D24  ECC2  F088         	call	_eusartmdb_Initialize	;wreg free
  1971                           
  1972                           ;mdb.c: 25: mdbflags.noteerr = 0;
  1973  010D28  9237               	bcf	_mdbflags,1,c
  1974                           
  1975                           ;mdb.c: 26: mdbflags.isdata = 0;
  1976  010D2A  9037               	bcf	_mdbflags,0,c
  1977                           
  1978                           ;mdb.c: 27: mdb_reset();
  1979  010D2C  EC95  F084         	call	_mdb_reset	;wreg free
  1980                           
  1981                           ;mdb.c: 28: mdb_noten();
  1982  010D30  ECED  F086         	call	_mdb_noten	;wreg free
  1983                           
  1984                           ;mdb.c: 29: mdb_security();
  1985  010D34  EC61  F088         	call	_mdb_security	;wreg free
  1986                           
  1987                           ;mdb.c: 30: uint8_t i = mdb_comm(note_poll, 0x00);
  1988  010D38  0E00               	movlw	0
  1989  010D3A  6E15               	movwf	mdb_comm@mcount,c
  1990  010D3C  0E9F               	movlw	low _note_poll
  1991  010D3E  6EF6               	movwf	tblptrl,c
  1992  010D40                     	if	1	;There is more than 1 active tblptr byte
  1993  010D40  0EFE               	movlw	high _note_poll
  1994  010D42  6EF7               	movwf	tblptrh,c
  1995  010D44                     	endif
  1996  010D44                     	if	1	;There are 3 active tblptr bytes
  1997  010D44  0E00               	movlw	low (_note_poll shr (0+16))
  1998  010D46  6EF8               	movwf	tblptru,c
  1999  010D48                     	endif
  2000  010D48  0008               	tblrd		*
  2001  010D4A  50F5               	movf	tablat,w,c
  2002  010D4C  EC92  F081         	call	_mdb_comm
  2003  010D50  6E1B               	movwf	mdb_init@i,c
  2004  010D52  0012               	return		;funcret
  2005  010D54                     __end_of_mdb_init:
  2006                           	opt stack 0
  2007                           tblptru	equ	0xFF8
  2008                           tblptrh	equ	0xFF7
  2009                           tblptrl	equ	0xFF6
  2010                           tablat	equ	0xFF5
  2011                           postinc0	equ	0xFEE
  2012                           wreg	equ	0xFE8
  2013                           status	equ	0xFD8
  2014                           
  2015 ;; *************** function _mdb_security *****************
  2016 ;; Defined at:
  2017 ;;		line 135 in file "mdb.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    5
  2038 ;; This function calls:
  2039 ;;		_init_mdbdata
  2040 ;;		_mdb_comm
  2041 ;; This function is called by:
  2042 ;;		_mdb_init
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text3
  2047  0110C2                     __ptext3:
  2048                           	opt stack 0
  2049  0110C2                     _mdb_security:
  2050                           	opt stack 23
  2051                           
  2052                           ;mdb.c: 137: init_mdbdata(0x00);
  2053                           
  2054                           ;incstack = 0
  2055  0110C2  0E00               	movlw	0
  2056  0110C4  EC3D  F088         	call	_init_mdbdata
  2057                           
  2058                           ;mdb.c: 138: mdb_comm(note_security, 0x01);
  2059  0110C8  0E01               	movlw	1
  2060  0110CA  6E15               	movwf	mdb_comm@mcount,c
  2061  0110CC  0EA0               	movlw	low _note_security
  2062  0110CE  6EF6               	movwf	tblptrl,c
  2063  0110D0                     	if	1	;There is more than 1 active tblptr byte
  2064  0110D0  0EFE               	movlw	high _note_security
  2065  0110D2  6EF7               	movwf	tblptrh,c
  2066  0110D4                     	endif
  2067  0110D4                     	if	1	;There are 3 active tblptr bytes
  2068  0110D4  0E00               	movlw	low (_note_security shr (0+16))
  2069  0110D6  6EF8               	movwf	tblptru,c
  2070  0110D8                     	endif
  2071  0110D8  0008               	tblrd		*
  2072  0110DA  50F5               	movf	tablat,w,c
  2073  0110DC  EC92  F081         	call	_mdb_comm
  2074  0110E0  0012               	return		;funcret
  2075  0110E2                     __end_of_mdb_security:
  2076                           	opt stack 0
  2077                           tblptru	equ	0xFF8
  2078                           tblptrh	equ	0xFF7
  2079                           tblptrl	equ	0xFF6
  2080                           tablat	equ	0xFF5
  2081                           postinc0	equ	0xFEE
  2082                           wreg	equ	0xFE8
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _mdb_noten *****************
  2086 ;; Defined at:
  2087 ;;		line 119 in file "mdb.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    5
  2108 ;; This function calls:
  2109 ;;		_init_mdbdata
  2110 ;;		_mdb_comm
  2111 ;; This function is called by:
  2112 ;;		_mdb_init
  2113 ;;		_note_disable
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text4
  2118  010DDA                     __ptext4:
  2119                           	opt stack 0
  2120  010DDA                     _mdb_noten:
  2121                           	opt stack 23
  2122                           
  2123                           ;mdb.c: 122: init_mdbdata(0x00);
  2124                           
  2125                           ;incstack = 0
  2126  010DDA  0E00               	movlw	0
  2127  010DDC  EC3D  F088         	call	_init_mdbdata
  2128                           
  2129                           ;mdb.c: 124: mcount = 3;
  2130  010DE0  0E03               	movlw	3
  2131  010DE2  6E3A               	movwf	_mcount,c
  2132                           
  2133                           ;mdb.c: 126: mdbdata[0] = 0x00;
  2134  010DE4  0E00               	movlw	0
  2135  010DE6  0100               	movlb	0	; () banked
  2136  010DE8  6F60               	movwf	_mdbdata& (0+255),b
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;mdb.c: 127: mdbdata[1] = 0x00;
  2140  010DEA  0E00               	movlw	0
  2141  010DEC  6F61               	movwf	(_mdbdata+1)& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;mdb.c: 129: mdbdata[2] = noteen_byte;
  2145  010DEE  C035  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;mdb.c: 131: mdbdata[3] = 0x00;
  2149  010DF2  0E00               	movlw	0
  2150  010DF4  6F63               	movwf	(_mdbdata+3)& (0+255),b
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;mdb.c: 132: mcount = mdb_comm(note_type, mcount);
  2154  010DF6  C03A  F015         	movff	_mcount,mdb_comm@mcount
  2155  010DFA  0E9E               	movlw	low _note_type
  2156  010DFC  6EF6               	movwf	tblptrl,c
  2157  010DFE                     	if	1	;There is more than 1 active tblptr byte
  2158  010DFE  0EFE               	movlw	high _note_type
  2159  010E00  6EF7               	movwf	tblptrh,c
  2160  010E02                     	endif
  2161  010E02                     	if	1	;There are 3 active tblptr bytes
  2162  010E02  0E00               	movlw	low (_note_type shr (0+16))
  2163  010E04  6EF8               	movwf	tblptru,c
  2164  010E06                     	endif
  2165  010E06  0008               	tblrd		*
  2166  010E08  50F5               	movf	tablat,w,c
  2167  010E0A  EC92  F081         	call	_mdb_comm
  2168  010E0E  6E3A               	movwf	_mcount,c
  2169                           
  2170                           ;mdb.c: 133: mdbflags.vending = 0;
  2171  010E10  9837               	bcf	_mdbflags,4,c
  2172  010E12  0012               	return		;funcret
  2173  010E14                     __end_of_mdb_noten:
  2174                           	opt stack 0
  2175                           tblptru	equ	0xFF8
  2176                           tblptrh	equ	0xFF7
  2177                           tblptrl	equ	0xFF6
  2178                           tablat	equ	0xFF5
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           status	equ	0xFD8
  2182                           
  2183 ;; *************** function _cctalk_init *****************
  2184 ;; Defined at:
  2185 ;;		line 9 in file "cctalk.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;Total ram usage:        1 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    6
  2206 ;; This function calls:
  2207 ;;		_cctalk_adpoll
  2208 ;;		_cctalk_on
  2209 ;;		_cctalk_pinenter
  2210 ;;		_cctalk_poll
  2211 ;;		_eusartmdb_Initialize
  2212 ;;		_mdb_on
  2213 ;; This function is called by:
  2214 ;;		_vend_init
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text5
  2219  010D54                     __ptext5:
  2220                           	opt stack 0
  2221  010D54                     _cctalk_init:
  2222                           	opt stack 23
  2223                           
  2224                           ;cctalk.c: 11: cctalk_on();
  2225                           
  2226                           ;incstack = 0
  2227  010D54  EC33  F089         	call	_cctalk_on	;wreg free
  2228                           
  2229                           ;cctalk.c: 12: cctflags.timeout = 1;
  2230  010D58  862F               	bsf	_cctflags,3,c
  2231                           
  2232                           ;cctalk.c: 13: cctalk_adpoll();
  2233  010D5A  EC71  F088         	call	_cctalk_adpoll	;wreg free
  2234                           
  2235                           ;cctalk.c: 14: cctalk_pinenter();
  2236  010D5E  EC5E  F087         	call	_cctalk_pinenter	;wreg free
  2237                           
  2238                           ;cctalk.c: 15: count = 0;
  2239  010D62  0E00               	movlw	0
  2240  010D64  6E49               	movwf	_count,c
  2241                           
  2242                           ;cctalk.c: 16: while(cctflags.timeout && count < 0x03)
  2243  010D66  D00B               	goto	l2081
  2244  010D68                     
  2245                           ;cctalk.c: 17: {
  2246                           ;cctalk.c: 18: _delay((unsigned long)((50)*(12000000/4000.0)));
  2247  010D68  0EC3               	movlw	195
  2248  010D6A  6E1B               	movwf	??_cctalk_init& (0+255),c
  2249  010D6C  0ECD               	movlw	205
  2250  010D6E                     u2027:
  2251  010D6E  2EE8               	decfsz	wreg,f,c
  2252  010D70  D7FE               	bra	u2027
  2253  010D72  2E1B               	decfsz	??_cctalk_init& (0+255),f,c
  2254  010D74  D7FC               	bra	u2027
  2255  010D76  F000               	nop	
  2256                           
  2257                           ;cctalk.c: 19: cctalk_poll();
  2258  010D78  EC11  F088         	call	_cctalk_poll	;wreg free
  2259                           
  2260                           ;cctalk.c: 20: count++;
  2261  010D7C  2A49               	incf	_count,f,c
  2262  010D7E                     l2081:
  2263  010D7E  A62F               	btfss	_cctflags,3,c
  2264  010D80  D005               	goto	u1450
  2265  010D82  5049               	movf	_count,w,c
  2266  010D84  0A80               	xorlw	128
  2267  010D86  0F7D               	addlw	-131
  2268  010D88  A0D8               	btfss	status,0,c
  2269  010D8A  D7EE               	goto	l2082
  2270  010D8C                     u1450:
  2271  010D8C  F000               	nop		;# 
  2272                           
  2273                           ;cctalk.c: 23: eusartmdb_Initialize();
  2274  010D8E  ECC2  F088         	call	_eusartmdb_Initialize	;wreg free
  2275                           
  2276                           ;cctalk.c: 24: mdb_on();
  2277  010D92  EC3C  F089         	call	_mdb_on	;wreg free
  2278  010D96  0012               	return		;funcret
  2279  010D98                     __end_of_cctalk_init:
  2280                           	opt stack 0
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           postinc0	equ	0xFEE
  2286                           wreg	equ	0xFE8
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _eusartmdb_Initialize *****************
  2290 ;; Defined at:
  2291 ;;		line 55 in file "eusart_mdb.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2309 ;;Total ram usage:        0 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    2
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_mdb_init
  2316 ;;		_cctalk_init
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text6
  2321  011184                     __ptext6:
  2322                           	opt stack 0
  2323  011184                     _eusartmdb_Initialize:
  2324                           	opt stack 26
  2325                           
  2326                           ;eusart_mdb.c: 60: BAUD1CON = 0x08;
  2327                           
  2328                           ;incstack = 0
  2329  011184  0E08               	movlw	8
  2330  011186  6E9F               	movwf	3999,c	;volatile
  2331                           
  2332                           ;eusart_mdb.c: 63: RC1STA = 0xD0;
  2333  011188  0ED0               	movlw	208
  2334  01118A  6E9D               	movwf	3997,c	;volatile
  2335                           
  2336                           ;eusart_mdb.c: 66: TX1STA = 0xEC;
  2337  01118C  0EEC               	movlw	236
  2338  01118E  6E9E               	movwf	3998,c	;volatile
  2339                           
  2340                           ;eusart_mdb.c: 69: SP1BRGL = 0x38;
  2341  011190  0E38               	movlw	56
  2342  011192  6E9B               	movwf	3995,c	;volatile
  2343                           
  2344                           ;eusart_mdb.c: 72: SP1BRGH = 0x01;
  2345  011194  0E01               	movlw	1
  2346  011196  6E9C               	movwf	3996,c	;volatile
  2347  011198  0012               	return		;funcret
  2348  01119A                     __end_of_eusartmdb_Initialize:
  2349                           	opt stack 0
  2350                           tblptru	equ	0xFF8
  2351                           tblptrh	equ	0xFF7
  2352                           tblptrl	equ	0xFF6
  2353                           tablat	equ	0xFF5
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _cctalk_poll *****************
  2359 ;; Defined at:
  2360 ;;		line 38 in file "cctalk.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  i               1   25[COMRAM] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2378 ;;Total ram usage:        1 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    5
  2381 ;; This function calls:
  2382 ;;		_cctalk_comm
  2383 ;; This function is called by:
  2384 ;;		_cctalk_init
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text7
  2389  011022                     __ptext7:
  2390                           	opt stack 0
  2391  011022                     _cctalk_poll:
  2392                           	opt stack 23
  2393                           
  2394                           ;cctalk.c: 40: uint8_t i = cctalk_comm(hopadd, 0x00, cc_poll);
  2395                           
  2396                           ;incstack = 0
  2397  011022  0E00               	movlw	0
  2398  011024  6E15               	movwf	cctalk_comm@nobytes,c
  2399  011026  0E80               	movlw	low _cc_poll
  2400  011028  6EF6               	movwf	tblptrl,c
  2401  01102A                     	if	1	;There is more than 1 active tblptr byte
  2402  01102A  0EFE               	movlw	high _cc_poll
  2403  01102C  6EF7               	movwf	tblptrh,c
  2404  01102E                     	endif
  2405  01102E                     	if	1	;There are 3 active tblptr bytes
  2406  01102E  0E00               	movlw	low (_cc_poll shr (0+16))
  2407  011030  6EF8               	movwf	tblptru,c
  2408  011032                     	endif
  2409  011032  0008               	tblrd		*
  2410  011034  CFF5 F016          	movff	tablat,cctalk_comm@command
  2411  011038  0E8E               	movlw	low _hopadd
  2412  01103A  6EF6               	movwf	tblptrl,c
  2413  01103C                     	if	1	;There is more than 1 active tblptr byte
  2414  01103C  0EFE               	movlw	high _hopadd
  2415  01103E  6EF7               	movwf	tblptrh,c
  2416  011040                     	endif
  2417  011040                     	if	1	;There are 3 active tblptr bytes
  2418  011040  0E00               	movlw	low (_hopadd shr (0+16))
  2419  011042  6EF8               	movwf	tblptru,c
  2420  011044                     	endif
  2421  011044  0008               	tblrd		*
  2422  011046  50F5               	movf	tablat,w,c
  2423  011048  EC14  F081         	call	_cctalk_comm
  2424  01104C  6E1A               	movwf	cctalk_poll@i,c
  2425  01104E  0012               	return		;funcret
  2426  011050                     __end_of_cctalk_poll:
  2427                           	opt stack 0
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           postinc0	equ	0xFEE
  2433                           wreg	equ	0xFE8
  2434                           status	equ	0xFD8
  2435                           
  2436 ;; *************** function _cctalk_pinenter *****************
  2437 ;; Defined at:
  2438 ;;		line 32 in file "cctalk.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  i               1   25[COMRAM] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;Total ram usage:        1 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    5
  2459 ;; This function calls:
  2460 ;;		_cctalk_comm
  2461 ;;		_init_mdbdata
  2462 ;; This function is called by:
  2463 ;;		_cctalk_init
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text8
  2468  010EBC                     __ptext8:
  2469                           	opt stack 0
  2470  010EBC                     _cctalk_pinenter:
  2471                           	opt stack 23
  2472                           
  2473                           ;cctalk.c: 34: init_mdbdata(0x00);
  2474                           
  2475                           ;incstack = 0
  2476  010EBC  0E00               	movlw	0
  2477  010EBE  EC3D  F088         	call	_init_mdbdata
  2478                           
  2479                           ;cctalk.c: 35: uint8_t i = cctalk_comm(hopadd, 0x04, cc_pin);
  2480  010EC2  0E04               	movlw	4
  2481  010EC4  6E15               	movwf	cctalk_comm@nobytes,c
  2482  010EC6  0E84               	movlw	low _cc_pin
  2483  010EC8  6EF6               	movwf	tblptrl,c
  2484  010ECA                     	if	1	;There is more than 1 active tblptr byte
  2485  010ECA  0EFE               	movlw	high _cc_pin
  2486  010ECC  6EF7               	movwf	tblptrh,c
  2487  010ECE                     	endif
  2488  010ECE                     	if	1	;There are 3 active tblptr bytes
  2489  010ECE  0E00               	movlw	low (_cc_pin shr (0+16))
  2490  010ED0  6EF8               	movwf	tblptru,c
  2491  010ED2                     	endif
  2492  010ED2  0008               	tblrd		*
  2493  010ED4  CFF5 F016          	movff	tablat,cctalk_comm@command
  2494  010ED8  0E8E               	movlw	low _hopadd
  2495  010EDA  6EF6               	movwf	tblptrl,c
  2496  010EDC                     	if	1	;There is more than 1 active tblptr byte
  2497  010EDC  0EFE               	movlw	high _hopadd
  2498  010EDE  6EF7               	movwf	tblptrh,c
  2499  010EE0                     	endif
  2500  010EE0                     	if	1	;There are 3 active tblptr bytes
  2501  010EE0  0E00               	movlw	low (_hopadd shr (0+16))
  2502  010EE2  6EF8               	movwf	tblptru,c
  2503  010EE4                     	endif
  2504  010EE4  0008               	tblrd		*
  2505  010EE6  50F5               	movf	tablat,w,c
  2506  010EE8  EC14  F081         	call	_cctalk_comm
  2507  010EEC  6E1A               	movwf	cctalk_pinenter@i,c
  2508  010EEE  0012               	return		;funcret
  2509  010EF0                     __end_of_cctalk_pinenter:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           postinc0	equ	0xFEE
  2516                           wreg	equ	0xFE8
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function _cctalk_on *****************
  2520 ;; Defined at:
  2521 ;;		line 132 in file "cctalk.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		None
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    2
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_cctalk_init
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text9
  2550  011266                     __ptext9:
  2551                           	opt stack 0
  2552  011266                     _cctalk_on:
  2553                           	opt stack 26
  2554                           
  2555                           ;cctalk.c: 138: LATCbits.LATC0 = 0;
  2556                           
  2557                           ;incstack = 0
  2558  011266  9085               	bcf	3973,0,c	;volatile
  2559                           
  2560                           ;cctalk.c: 139: LATCbits.LATC1 = 1;
  2561  011268  8285               	bsf	3973,1,c	;volatile
  2562  01126A  0012               	return		;funcret
  2563  01126C                     __end_of_cctalk_on:
  2564                           	opt stack 0
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           postinc0	equ	0xFEE
  2570                           wreg	equ	0xFE8
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _cctalk_adpoll *****************
  2574 ;; Defined at:
  2575 ;;		line 27 in file "cctalk.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  i               1   25[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    5
  2596 ;; This function calls:
  2597 ;;		_cctalk_comm
  2598 ;; This function is called by:
  2599 ;;		_cctalk_init
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text10
  2604  0110E2                     __ptext10:
  2605                           	opt stack 0
  2606  0110E2                     _cctalk_adpoll:
  2607                           	opt stack 23
  2608                           
  2609                           ;cctalk.c: 29: uint8_t i = cctalk_comm(0x00, 0x00, cc_adpoll);
  2610                           
  2611                           ;incstack = 0
  2612  0110E2  0E00               	movlw	0
  2613  0110E4  6E15               	movwf	cctalk_comm@nobytes,c
  2614  0110E6  0E81               	movlw	low _cc_adpoll
  2615  0110E8  6EF6               	movwf	tblptrl,c
  2616  0110EA                     	if	1	;There is more than 1 active tblptr byte
  2617  0110EA  0EFE               	movlw	high _cc_adpoll
  2618  0110EC  6EF7               	movwf	tblptrh,c
  2619  0110EE                     	endif
  2620  0110EE                     	if	1	;There are 3 active tblptr bytes
  2621  0110EE  0E00               	movlw	low (_cc_adpoll shr (0+16))
  2622  0110F0  6EF8               	movwf	tblptru,c
  2623  0110F2                     	endif
  2624  0110F2  0008               	tblrd		*
  2625  0110F4  CFF5 F016          	movff	tablat,cctalk_comm@command
  2626  0110F8  0E00               	movlw	0
  2627  0110FA  EC14  F081         	call	_cctalk_comm
  2628  0110FE  6E1A               	movwf	cctalk_adpoll@i,c
  2629  011100  0012               	return		;funcret
  2630  011102                     __end_of_cctalk_adpoll:
  2631                           	opt stack 0
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           status	equ	0xFD8
  2639                           
  2640 ;; *************** function _cctalk_comm *****************
  2641 ;; Defined at:
  2642 ;;		line 56 in file "cctalk.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  dest            1    wreg     unsigned char 
  2645 ;;  nobytes         1   20[COMRAM] unsigned char 
  2646 ;;  command         1   21[COMRAM] unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  dest            1   24[COMRAM] unsigned char 
  2649 ;;  i               1   23[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      unsigned char 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2662 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2663 ;;Total ram usage:        5 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    4
  2666 ;; This function calls:
  2667 ;;		_TMR3_Initialize
  2668 ;;		_cctalk_read
  2669 ;;		_init_mdbdata
  2670 ;;		_mdb_transmit
  2671 ;; This function is called by:
  2672 ;;		_cctalk_adpoll
  2673 ;;		_cctalk_pinenter
  2674 ;;		_cctalk_poll
  2675 ;;		_cctalk_serial
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text11
  2680  010228                     __ptext11:
  2681                           	opt stack 0
  2682  010228                     _cctalk_comm:
  2683                           	opt stack 23
  2684                           
  2685                           ;incstack = 0
  2686                           ;cctalk_comm@dest stored from wreg
  2687  010228  6E19               	movwf	cctalk_comm@dest,c
  2688                           
  2689                           ;cctalk.c: 59: uint8_t i = 0;
  2690  01022A  0E00               	movlw	0
  2691  01022C  6E18               	movwf	cctalk_comm@i,c
  2692                           
  2693                           ;cctalk.c: 63: i = RC1REG;
  2694  01022E  CF99 F018          	movff	3993,cctalk_comm@i	;volatile
  2695                           
  2696                           ;cctalk.c: 65: i = 0;
  2697  010232  0E00               	movlw	0
  2698  010234  6E18               	movwf	cctalk_comm@i,c
  2699                           
  2700                           ;cctalk.c: 68: chkbyte = dest + nobytes + command + mastadd;
  2701  010236  0E8D               	movlw	low _mastadd
  2702  010238  6EF6               	movwf	tblptrl,c
  2703  01023A                     	if	1	;There is more than 1 active tblptr byte
  2704  01023A  0EFE               	movlw	high _mastadd
  2705  01023C  6EF7               	movwf	tblptrh,c
  2706  01023E                     	endif
  2707  01023E                     	if	1	;There are 3 active tblptr bytes
  2708  01023E  0E00               	movlw	low (_mastadd shr (0+16))
  2709  010240  6EF8               	movwf	tblptru,c
  2710  010242                     	endif
  2711  010242  0008               	tblrd		*
  2712  010244  CFF5 F017          	movff	tablat,??_cctalk_comm
  2713  010248  5019               	movf	cctalk_comm@dest,w,c
  2714  01024A  2415               	addwf	cctalk_comm@nobytes,w,c
  2715  01024C  2416               	addwf	cctalk_comm@command,w,c
  2716  01024E  2417               	addwf	??_cctalk_comm,w,c
  2717  010250  6E38               	movwf	_chkbyte,c
  2718                           
  2719                           ;cctalk.c: 69: mdb_transmit(dest);
  2720  010252  5019               	movf	cctalk_comm@dest,w,c
  2721  010254  EC01  F089         	call	_mdb_transmit
  2722                           
  2723                           ;cctalk.c: 71: mdb_transmit(nobytes);
  2724  010258  5015               	movf	cctalk_comm@nobytes,w,c
  2725  01025A  EC01  F089         	call	_mdb_transmit
  2726                           
  2727                           ;cctalk.c: 73: mdb_transmit(mastadd);
  2728  01025E  0E8D               	movlw	low _mastadd
  2729  010260  6EF6               	movwf	tblptrl,c
  2730  010262                     	if	1	;There is more than 1 active tblptr byte
  2731  010262  0EFE               	movlw	high _mastadd
  2732  010264  6EF7               	movwf	tblptrh,c
  2733  010266                     	endif
  2734  010266                     	if	1	;There are 3 active tblptr bytes
  2735  010266  0E00               	movlw	low (_mastadd shr (0+16))
  2736  010268  6EF8               	movwf	tblptru,c
  2737  01026A                     	endif
  2738  01026A  0008               	tblrd		*
  2739  01026C  50F5               	movf	tablat,w,c
  2740  01026E  EC01  F089         	call	_mdb_transmit
  2741                           
  2742                           ;cctalk.c: 75: mdb_transmit(command);
  2743  010272  5016               	movf	cctalk_comm@command,w,c
  2744  010274  EC01  F089         	call	_mdb_transmit
  2745                           
  2746                           ;cctalk.c: 77: while(nobytes != 0)
  2747  010278  D017               	goto	l2102
  2748  01027A                     
  2749                           ;cctalk.c: 78: {
  2750                           ;cctalk.c: 79: chkbyte = mdbdata[nobytes] + chkbyte;
  2751  01027A  5015               	movf	cctalk_comm@nobytes,w,c
  2752  01027C  0D01               	mullw	1
  2753  01027E  0E60               	movlw	low _mdbdata
  2754  010280  24F3               	addwf	prodl,w,c
  2755  010282  6ED9               	movwf	fsr2l,c
  2756  010284  0E00               	movlw	high _mdbdata
  2757  010286  20F4               	addwfc	prodh,w,c
  2758  010288  6EDA               	movwf	fsr2h,c
  2759  01028A  50DF               	movf	indf2,w,c
  2760  01028C  2438               	addwf	_chkbyte,w,c
  2761  01028E  6E38               	movwf	_chkbyte,c
  2762                           
  2763                           ;cctalk.c: 80: mdb_transmit(mdbdata[nobytes]);
  2764  010290  5015               	movf	cctalk_comm@nobytes,w,c
  2765  010292  0D01               	mullw	1
  2766  010294  0E60               	movlw	low _mdbdata
  2767  010296  24F3               	addwf	prodl,w,c
  2768  010298  6ED9               	movwf	fsr2l,c
  2769  01029A  0E00               	movlw	high _mdbdata
  2770  01029C  20F4               	addwfc	prodh,w,c
  2771  01029E  6EDA               	movwf	fsr2h,c
  2772  0102A0  50DF               	movf	indf2,w,c
  2773  0102A2  EC01  F089         	call	_mdb_transmit
  2774                           
  2775                           ;cctalk.c: 82: nobytes--;
  2776  0102A6  0615               	decf	cctalk_comm@nobytes,f,c
  2777  0102A8                     l2102:
  2778  0102A8  5015               	movf	cctalk_comm@nobytes,w,c
  2779  0102AA  A4D8               	btfss	status,2,c
  2780  0102AC  D7E6               	goto	l2103
  2781                           
  2782                           ;cctalk.c: 83: }
  2783                           ;cctalk.c: 84: chkbyte = 0 - chkbyte;
  2784  0102AE  6C38               	negf	_chkbyte,c
  2785                           
  2786                           ;cctalk.c: 85: mdb_transmit(chkbyte);
  2787  0102B0  5038               	movf	_chkbyte,w,c
  2788  0102B2  EC01  F089         	call	_mdb_transmit
  2789                           
  2790                           ;cctalk.c: 89: cctflags.timeout = 0;
  2791  0102B6  962F               	bcf	_cctflags,3,c
  2792                           
  2793                           ;cctalk.c: 90: cctflags.hoperr = 0;
  2794  0102B8  922F               	bcf	_cctflags,1,c
  2795                           
  2796                           ;cctalk.c: 93: init_mdbdata(0xFF);
  2797  0102BA  0EFF               	movlw	255
  2798  0102BC  EC3D  F088         	call	_init_mdbdata
  2799                           
  2800                           ;cctalk.c: 94: RC1STAbits.SPEN = 0;
  2801  0102C0  9E9D               	bcf	3997,7,c	;volatile
  2802                           
  2803                           ;cctalk.c: 95: RC1STAbits.SPEN = 1;
  2804  0102C2  8E9D               	bsf	3997,7,c	;volatile
  2805                           
  2806                           ;cctalk.c: 96: chkbyte = RC1REG;
  2807  0102C4  CF99 F038          	movff	3993,_chkbyte	;volatile
  2808                           
  2809                           ;cctalk.c: 98: TMR3_Initialize();
  2810  0102C8  ECAC  F087         	call	_TMR3_Initialize	;wreg free
  2811                           
  2812                           ;cctalk.c: 99: while(!cctflags.timeout)
  2813  0102CC  D016               	goto	u1217
  2814  0102CE                     
  2815                           ;cctalk.c: 100: {
  2816                           ;cctalk.c: 102: dest = cctalk_read();
  2817  0102CE  EC81  F088         	call	_cctalk_read	;wreg free
  2818  0102D2  6E19               	movwf	cctalk_comm@dest,c
  2819                           
  2820                           ;cctalk.c: 104: if(cctflags.isdata)
  2821  0102D4  A02F               	btfss	_cctflags,0,c
  2822  0102D6  D00B               	goto	l2107
  2823                           
  2824                           ;cctalk.c: 105: {
  2825                           ;cctalk.c: 106: mdbdata[i++] = dest;
  2826  0102D8  5018               	movf	cctalk_comm@i,w,c
  2827  0102DA  0D01               	mullw	1
  2828  0102DC  0E60               	movlw	low _mdbdata
  2829  0102DE  24F3               	addwf	prodl,w,c
  2830  0102E0  6ED9               	movwf	fsr2l,c
  2831  0102E2  0E00               	movlw	high _mdbdata
  2832  0102E4  20F4               	addwfc	prodh,w,c
  2833  0102E6  6EDA               	movwf	fsr2h,c
  2834  0102E8  C019  FFDF         	movff	cctalk_comm@dest,indf2
  2835  0102EC  2A18               	incf	cctalk_comm@i,f,c
  2836  0102EE                     l2107:
  2837                           
  2838                           ;cctalk.c: 108: }
  2839                           ;cctalk.c: 109: cctflags.timeout = PIR4bits.TMR3IF;
  2840  0102EE  010E               	movlb	14	; () banked
  2841  0102F0  A5CE               	btfss	206,2,b	;volatile
  2842  0102F2  D002               	bra	u1215
  2843  0102F4  862F               	bsf	_cctflags,3,c
  2844  0102F6  D001               	bra	u1217
  2845  0102F8                     u1215:
  2846  0102F8  962F               	bcf	_cctflags,3,c
  2847  0102FA                     u1217:
  2848  0102FA  A62F               	btfss	_cctflags,3,c
  2849  0102FC  D7E8               	goto	l2106
  2850                           
  2851                           ;cctalk.c: 110: }
  2852                           ;cctalk.c: 111: if(mdbdata[0] == mastadd && mdbdata[3] == 0x00)
  2853  0102FE  0E8D               	movlw	low _mastadd
  2854  010300  6EF6               	movwf	tblptrl,c
  2855  010302                     	if	1	;There is more than 1 active tblptr byte
  2856  010302  0EFE               	movlw	high _mastadd
  2857  010304  6EF7               	movwf	tblptrh,c
  2858  010306                     	endif
  2859  010306                     	if	1	;There are 3 active tblptr bytes
  2860  010306  0E00               	movlw	low (_mastadd shr (0+16))
  2861  010308  6EF8               	movwf	tblptru,c
  2862  01030A                     	endif
  2863  01030A  0008               	tblrd		*
  2864  01030C  50F5               	movf	tablat,w,c
  2865  01030E  0100               	movlb	0	; () banked
  2866  010310  6360               	cpfseq	_mdbdata& (0+255),b
  2867  010312  D005               	goto	l2109
  2868                           
  2869                           ; BSR set to: 0
  2870  010314  5163               	movf	(_mdbdata+3)& (0+255),w,b
  2871  010316  A4D8               	btfss	status,2,c
  2872  010318  D002               	goto	l2109
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;cctalk.c: 112: {
  2876                           ;cctalk.c: 113: return i;
  2877  01031A  5018               	movf	cctalk_comm@i,w,c
  2878                           
  2879                           ; BSR set to: 0
  2880  01031C  0012               	return	
  2881  01031E                     l2109:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;cctalk.c: 114: }
  2885                           ;cctalk.c: 115: cctflags.timeout = 1;
  2886  01031E  862F               	bsf	_cctflags,3,c
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;cctalk.c: 116: return 0x00;
  2890  010320  0E00               	movlw	0
  2891  010322  0012               	return	
  2892  010324                     __end_of_cctalk_comm:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           tblptrh	equ	0xFF7
  2896                           tblptrl	equ	0xFF6
  2897                           tablat	equ	0xFF5
  2898                           prodh	equ	0xFF4
  2899                           prodl	equ	0xFF3
  2900                           postinc0	equ	0xFEE
  2901                           wreg	equ	0xFE8
  2902                           indf2	equ	0xFDF
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function _cctalk_read *****************
  2908 ;; Defined at:
  2909 ;;		line 119 in file "cctalk.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  data            1   18[COMRAM] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      unsigned char 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;Total ram usage:        1 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    3
  2930 ;; This function calls:
  2931 ;;		_EUSART1_Read
  2932 ;;		_mdb_waitr
  2933 ;; This function is called by:
  2934 ;;		_cctalk_comm
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text12
  2939  011102                     __ptext12:
  2940                           	opt stack 0
  2941  011102                     _cctalk_read:
  2942                           	opt stack 23
  2943                           
  2944                           ;cctalk.c: 121: uint8_t data = 0;
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;incstack = 0
  2948  011102  0E00               	movlw	0
  2949  011104  6E13               	movwf	cctalk_read@data,c
  2950                           
  2951                           ;cctalk.c: 122: cctflags.isdata = 0;
  2952  011106  902F               	bcf	_cctflags,0,c
  2953                           
  2954                           ;cctalk.c: 123: while(PIR3bits.RC1IF)
  2955  011108  D006               	goto	l2113
  2956  01110A                     
  2957                           ;cctalk.c: 124: {
  2958                           ;cctalk.c: 125: data = EUSART1_Read();
  2959  01110A  ECF8  F088         	call	_EUSART1_Read	;wreg free
  2960  01110E  6E13               	movwf	cctalk_read@data,c
  2961                           
  2962                           ;cctalk.c: 126: mdb_waitr();
  2963  011110  EC36  F089         	call	_mdb_waitr	;wreg free
  2964                           
  2965                           ;cctalk.c: 127: cctflags.isdata = 1;
  2966  011114  802F               	bsf	_cctflags,0,c
  2967  011116                     l2113:
  2968  011116  010E               	movlb	14	; () banked
  2969  011118  BBCD               	btfsc	205,5,b	;volatile
  2970  01111A  D7F7               	goto	l2114
  2971                           
  2972                           ; BSR set to: 14
  2973                           ;cctalk.c: 128: }
  2974                           ;cctalk.c: 129: return data;
  2975                           
  2976                           ; BSR set to: 14
  2977  01111C  5013               	movf	cctalk_read@data,w,c
  2978  01111E  0012               	return	
  2979  011120                     __end_of_cctalk_read:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           prodh	equ	0xFF4
  2986                           prodl	equ	0xFF3
  2987                           postinc0	equ	0xFEE
  2988                           wreg	equ	0xFE8
  2989                           indf2	equ	0xFDF
  2990                           fsr2h	equ	0xFDA
  2991                           fsr2l	equ	0xFD9
  2992                           status	equ	0xFD8
  2993                           
  2994 ;; *************** function _DAC1_SetOutput *****************
  2995 ;; Defined at:
  2996 ;;		line 65 in file "mcc_generated_files/dac1.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  inputData       1    wreg     unsigned char 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  inputData       1   18[COMRAM] unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3014 ;;Total ram usage:        1 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    2
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_vend_init
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text13
  3025  011246                     __ptext13:
  3026                           	opt stack 0
  3027  011246                     _DAC1_SetOutput:
  3028                           	opt stack 27
  3029                           
  3030                           ; BSR set to: 14
  3031                           ;incstack = 0
  3032                           ;DAC1_SetOutput@inputData stored from wreg
  3033  011246  6E13               	movwf	DAC1_SetOutput@inputData,c
  3034                           
  3035                           ;dac1.c: 67: DAC1CON1 = inputData;
  3036  011248  C013  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  3037  01124C  0012               	return		;funcret
  3038  01124E                     __end_of_DAC1_SetOutput:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           prodh	equ	0xFF4
  3045                           prodl	equ	0xFF3
  3046                           postinc0	equ	0xFEE
  3047                           wreg	equ	0xFE8
  3048                           indf2	equ	0xFDF
  3049                           fsr2h	equ	0xFDA
  3050                           fsr2l	equ	0xFD9
  3051                           status	equ	0xFD8
  3052                           
  3053 ;; *************** function _mdb_poll *****************
  3054 ;; Defined at:
  3055 ;;		line 141 in file "mdb.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  i               1   23[COMRAM] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      unsigned char 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;Total ram usage:        1 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    5
  3076 ;; This function calls:
  3077 ;;		_TMR3_Initialize
  3078 ;;		_mdb_comm
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text14
  3085  010000                     __ptext14:
  3086                           	opt stack 0
  3087  010000                     _mdb_poll:
  3088                           	opt stack 25
  3089                           
  3090                           ;mdb.c: 145: TMR3_Initialize();
  3091                           
  3092                           ;incstack = 0
  3093  010000  ECAC  F087         	call	_TMR3_Initialize	;wreg free
  3094                           
  3095                           ;mdb.c: 146: uint8_t i = mdb_comm(note_poll, 0x00);
  3096  010004  0E00               	movlw	0
  3097  010006  6E15               	movwf	mdb_comm@mcount,c
  3098  010008  0E9F               	movlw	low _note_poll
  3099  01000A  6EF6               	movwf	tblptrl,c
  3100  01000C                     	if	1	;There is more than 1 active tblptr byte
  3101  01000C  0EFE               	movlw	high _note_poll
  3102  01000E  6EF7               	movwf	tblptrh,c
  3103  010010                     	endif
  3104  010010                     	if	1	;There are 3 active tblptr bytes
  3105  010010  0E00               	movlw	low (_note_poll shr (0+16))
  3106  010012  6EF8               	movwf	tblptru,c
  3107  010014                     	endif
  3108  010014  0008               	tblrd		*
  3109  010016  50F5               	movf	tablat,w,c
  3110  010018  EC92  F081         	call	_mdb_comm
  3111  01001C  6E18               	movwf	mdb_poll@i,c
  3112                           
  3113                           ;mdb.c: 147: notebyte = mdbdata[0];
  3114  01001E  C060  F039         	movff	_mdbdata,_notebyte
  3115                           
  3116                           ;mdb.c: 149: if((mdbdata[0] & 0x80) != 0)
  3117  010022  0100               	movlb	0	; () banked
  3118  010024  AF60               	btfss	_mdbdata& (0+255),7,b
  3119  010026  D050               	goto	l1754
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;mdb.c: 150: {
  3123                           ;mdb.c: 151: notebyte = mdbdata[0] & 0x7F;
  3124  010028  5160               	movf	_mdbdata& (0+255),w,b
  3125  01002A  0B7F               	andlw	127
  3126  01002C  6E39               	movwf	_notebyte,c
  3127                           
  3128                           ;mdb.c: 152: switch(notebyte)
  3129  01002E  D019               	goto	l1744
  3130  010030                     
  3131                           ; BSR set to: 0
  3132  010030  0E0A               	movlw	10
  3133  010032  6E2E               	movwf	_credit,c	;volatile
  3134                           
  3135                           ;mdb.c: 155: return credit;
  3136  010034  502E               	movf	_credit,w,c	;volatile
  3137  010036  0012               	return	
  3138  010038  0E14               	movlw	20
  3139  01003A  6E2E               	movwf	_credit,c	;volatile
  3140                           
  3141                           ;mdb.c: 157: return credit;
  3142  01003C  502E               	movf	_credit,w,c	;volatile
  3143  01003E  0012               	return	
  3144  010040  0E32               	movlw	50
  3145  010042  6E2E               	movwf	_credit,c	;volatile
  3146                           
  3147                           ;mdb.c: 159: return credit;
  3148  010044  502E               	movf	_credit,w,c	;volatile
  3149  010046  0012               	return	
  3150  010048  0E64               	movlw	100
  3151  01004A  6E2E               	movwf	_credit,c	;volatile
  3152                           
  3153                           ;mdb.c: 161: return credit;
  3154  01004C  502E               	movf	_credit,w,c	;volatile
  3155  01004E  0012               	return	
  3156  010050  0EC8               	movlw	200
  3157  010052  6E2E               	movwf	_credit,c	;volatile
  3158                           
  3159                           ;mdb.c: 163: return credit;
  3160  010054  502E               	movf	_credit,w,c	;volatile
  3161  010056  0012               	return	
  3162  010058  0E10               	movlw	16
  3163  01005A  6E2E               	movwf	_credit,c	;volatile
  3164                           
  3165                           ;mdb.c: 165: mdbflags.noteerr = 1;
  3166  01005C  8237               	bsf	_mdbflags,1,c
  3167                           
  3168                           ;mdb.c: 166: return credit;
  3169  01005E  502E               	movf	_credit,w,c	;volatile
  3170                           
  3171                           ;mdb.c: 167: }
  3172  010060  0012               	return	
  3173  010062                     l1744:
  3174  010062  5039               	movf	_notebyte,w,c
  3175                           
  3176                           ; Switch size 1, requested type "space"
  3177                           ; Number of cases is 5, Range of values is 0 to 4
  3178                           ; switch strategies available:
  3179                           ; Name         Instructions Cycles
  3180                           ; simple_byte           16     9 (average)
  3181                           ;	Chosen strategy is simple_byte
  3182  010064  0A00               	xorlw	0	; case 0
  3183  010066  B4D8               	btfsc	status,2,c
  3184  010068  D7E3               	goto	l1745
  3185  01006A  0A01               	xorlw	1	; case 1
  3186  01006C  B4D8               	btfsc	status,2,c
  3187  01006E  D7E4               	goto	l1747
  3188  010070  0A03               	xorlw	3	; case 2
  3189  010072  B4D8               	btfsc	status,2,c
  3190  010074  D7E5               	goto	l1748
  3191  010076  0A01               	xorlw	1	; case 3
  3192  010078  B4D8               	btfsc	status,2,c
  3193  01007A  D7E6               	goto	l1749
  3194  01007C  0A07               	xorlw	7	; case 4
  3195  01007E  B4D8               	btfsc	status,2,c
  3196  010080  D7E7               	goto	l1750
  3197  010082  D7EA               	goto	l1751
  3198  010084  0E00               	movlw	0
  3199  010086  6E2E               	movwf	_credit,c	;volatile
  3200                           
  3201                           ;mdb.c: 175: return credit;
  3202  010088  502E               	movf	_credit,w,c	;volatile
  3203  01008A  0012               	return	
  3204  01008C  0E01               	movlw	1
  3205  01008E  D01A               	goto	L12
  3206  010090  0E02               	movlw	2
  3207  010092  D018               	goto	L12
  3208  010094  0E00               	movlw	0
  3209  010096  6E2E               	movwf	_credit,c	;volatile
  3210                           
  3211                           ;mdb.c: 184: mdbflags.noteerr = 0;
  3212  010098  9237               	bcf	_mdbflags,1,c
  3213                           
  3214                           ;mdb.c: 185: return credit;
  3215  01009A  502E               	movf	_credit,w,c	;volatile
  3216  01009C  0012               	return	
  3217  01009E  0E04               	movlw	4
  3218  0100A0  D011               	goto	L12
  3219  0100A2  0E05               	movlw	5
  3220  0100A4  D00F               	goto	L12
  3221  0100A6  0E06               	movlw	6
  3222  0100A8  D00D               	goto	L12
  3223  0100AA  0E07               	movlw	7
  3224  0100AC  D00B               	goto	L12
  3225  0100AE  0E08               	movlw	8
  3226  0100B0  D009               	goto	L12
  3227  0100B2  0E09               	movlw	9
  3228  0100B4  D007               	goto	L12
  3229  0100B6  0E0A               	movlw	10
  3230  0100B8  D005               	goto	L12
  3231  0100BA  0E0B               	movlw	11
  3232  0100BC  D003               	goto	L12
  3233  0100BE  0E0C               	movlw	12
  3234  0100C0  D001               	goto	L12
  3235  0100C2  0E00               	movlw	0
  3236  0100C4                     L12:
  3237  0100C4  6E2E               	movwf	_credit,c	;volatile
  3238                           
  3239                           ;mdb.c: 214: }
  3240  0100C6  D02A               	goto	l1757
  3241  0100C8                     l1754:
  3242  0100C8  0100               	movlb	0	; () banked
  3243  0100CA  5160               	movf	_mdbdata& (0+255),w,b
  3244                           
  3245                           ; Switch size 1, requested type "space"
  3246                           ; Number of cases is 13, Range of values is 0 to 12
  3247                           ; switch strategies available:
  3248                           ; Name         Instructions Cycles
  3249                           ; simple_byte           40    21 (average)
  3250                           ;	Chosen strategy is simple_byte
  3251  0100CC  0A00               	xorlw	0	; case 0
  3252  0100CE  B4D8               	btfsc	status,2,c
  3253  0100D0  D7D9               	goto	l1755
  3254  0100D2  0A01               	xorlw	1	; case 1
  3255  0100D4  B4D8               	btfsc	status,2,c
  3256  0100D6  D7DA               	goto	l1756
  3257  0100D8  0A03               	xorlw	3	; case 2
  3258  0100DA  B4D8               	btfsc	status,2,c
  3259  0100DC  D7D9               	goto	l1758
  3260  0100DE  0A01               	xorlw	1	; case 3
  3261  0100E0  B4D8               	btfsc	status,2,c
  3262  0100E2  D7D8               	goto	l1759
  3263  0100E4  0A07               	xorlw	7	; case 4
  3264  0100E6  B4D8               	btfsc	status,2,c
  3265  0100E8  D7DA               	goto	l1760
  3266  0100EA  0A01               	xorlw	1	; case 5
  3267  0100EC  B4D8               	btfsc	status,2,c
  3268  0100EE  D7D9               	goto	l1761
  3269  0100F0  0A03               	xorlw	3	; case 6
  3270  0100F2  B4D8               	btfsc	status,2,c
  3271  0100F4  D7D8               	goto	l1762
  3272  0100F6  0A01               	xorlw	1	; case 7
  3273  0100F8  B4D8               	btfsc	status,2,c
  3274  0100FA  D7D7               	goto	l1763
  3275  0100FC  0A0F               	xorlw	15	; case 8
  3276  0100FE  B4D8               	btfsc	status,2,c
  3277  010100  D7D6               	goto	l1764
  3278  010102  0A01               	xorlw	1	; case 9
  3279  010104  B4D8               	btfsc	status,2,c
  3280  010106  D7D5               	goto	l1765
  3281  010108  0A03               	xorlw	3	; case 10
  3282  01010A  B4D8               	btfsc	status,2,c
  3283  01010C  D7D4               	goto	l1766
  3284  01010E  0A01               	xorlw	1	; case 11
  3285  010110  B4D8               	btfsc	status,2,c
  3286  010112  D7D3               	goto	l1767
  3287  010114  0A07               	xorlw	7	; case 12
  3288  010116  B4D8               	btfsc	status,2,c
  3289  010118  D7D2               	goto	l1768
  3290  01011A  D7D3               	goto	l1769
  3291  01011C                     l1757:
  3292                           
  3293                           ;mdb.c: 215: mdbflags.noteerr = 1;
  3294  01011C  8237               	bsf	_mdbflags,1,c
  3295                           
  3296                           ;mdb.c: 216: return credit;
  3297  01011E  502E               	movf	_credit,w,c	;volatile
  3298  010120  0012               	return	
  3299  010122                     __end_of_mdb_poll:
  3300                           	opt stack 0
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           prodh	equ	0xFF4
  3306                           prodl	equ	0xFF3
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           indf2	equ	0xFDF
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function _lcd_init *****************
  3315 ;; Defined at:
  3316 ;;		line 10 in file "lcd.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3334 ;;Total ram usage:        2 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    8
  3337 ;; This function calls:
  3338 ;;		_lcd_clockE
  3339 ;;		_lcd_test
  3340 ;;		_lcd_write
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text15
  3347  0107EE                     __ptext15:
  3348                           	opt stack 0
  3349  0107EE                     _lcd_init:
  3350                           	opt stack 22
  3351                           
  3352                           ;lcd.c: 12: LATE = 0x00;
  3353                           
  3354                           ;incstack = 0
  3355  0107EE  0E00               	movlw	0
  3356  0107F0  6E87               	movwf	3975,c	;volatile
  3357                           
  3358                           ;lcd.c: 14: LATD = 0x03;
  3359  0107F2  0E03               	movlw	3
  3360  0107F4  6E86               	movwf	3974,c	;volatile
  3361                           
  3362                           ;lcd.c: 15: for(count = 3; count > 0; count-- )
  3363  0107F6  0E03               	movlw	3
  3364  0107F8  6E49               	movwf	_count,c
  3365  0107FA                     l5166:
  3366  0107FA  5049               	movf	_count,w,c
  3367  0107FC  0A80               	xorlw	128
  3368  0107FE  0F7F               	addlw	-129
  3369  010800  A0D8               	btfss	status,0,c
  3370  010802  D00B               	goto	u1890
  3371                           
  3372                           ;lcd.c: 16: {
  3373                           ;lcd.c: 17: lcd_clockE();
  3374  010804  EC0F  F089         	call	_lcd_clockE	;wreg free
  3375                           
  3376                           ;lcd.c: 18: _delay((unsigned long)((5)*(12000000/4000.0)));
  3377  010808  0E14               	movlw	20
  3378  01080A  6E1B               	movwf	??_lcd_init& (0+255),c
  3379  01080C  0E7A               	movlw	122
  3380  01080E                     u2037:
  3381  01080E  2EE8               	decfsz	wreg,f,c
  3382  010810  D7FE               	bra	u2037
  3383  010812  2E1B               	decfsz	??_lcd_init& (0+255),f,c
  3384  010814  D7FC               	bra	u2037
  3385  010816  0649               	decf	_count,f,c
  3386  010818  D7F0               	goto	l5166
  3387  01081A                     u1890:
  3388                           
  3389                           ;lcd.c: 20: }
  3390                           ;lcd.c: 21: _delay((unsigned long)((50)*(12000000/4000000.0)));
  3391  01081A  0E32               	movlw	50
  3392  01081C                     u2047:
  3393  01081C  2EE8               	decfsz	wreg,f,c
  3394  01081E  D7FE               	bra	u2047
  3395                           
  3396                           ;lcd.c: 22: LATD = 0x02;
  3397  010820  0E02               	movlw	2
  3398  010822  6E86               	movwf	3974,c	;volatile
  3399                           
  3400                           ;lcd.c: 23: lcd_clockE();
  3401  010824  EC0F  F089         	call	_lcd_clockE	;wreg free
  3402                           
  3403                           ;lcd.c: 26: lcd_write(dispfunc3);
  3404  010828  0EB2               	movlw	low _dispfunc3
  3405  01082A  6EF6               	movwf	tblptrl,c
  3406  01082C                     	if	1	;There is more than 1 active tblptr byte
  3407  01082C  0EFE               	movlw	high _dispfunc3
  3408  01082E  6EF7               	movwf	tblptrh,c
  3409  010830                     	endif
  3410  010830                     	if	1	;There are 3 active tblptr bytes
  3411  010830  0E00               	movlw	low (_dispfunc3 shr (0+16))
  3412  010832  6EF8               	movwf	tblptru,c
  3413  010834                     	endif
  3414  010834  0008               	tblrd		*
  3415  010836  50F5               	movf	tablat,w,c
  3416  010838  ECE0  F087         	call	_lcd_write
  3417                           
  3418                           ;lcd.c: 28: lcd_write(dispon);
  3419  01083C  0EB1               	movlw	low _dispon
  3420  01083E  6EF6               	movwf	tblptrl,c
  3421  010840                     	if	1	;There is more than 1 active tblptr byte
  3422  010840  0EFE               	movlw	high _dispon
  3423  010842  6EF7               	movwf	tblptrh,c
  3424  010844                     	endif
  3425  010844                     	if	1	;There are 3 active tblptr bytes
  3426  010844  0E00               	movlw	low (_dispon shr (0+16))
  3427  010846  6EF8               	movwf	tblptru,c
  3428  010848                     	endif
  3429  010848  0008               	tblrd		*
  3430  01084A  50F5               	movf	tablat,w,c
  3431  01084C  ECE0  F087         	call	_lcd_write
  3432                           
  3433                           ;lcd.c: 30: lcd_write(dispnormal);
  3434  010850  0EAD               	movlw	low _dispnormal
  3435  010852  6EF6               	movwf	tblptrl,c
  3436  010854                     	if	1	;There is more than 1 active tblptr byte
  3437  010854  0EFE               	movlw	high _dispnormal
  3438  010856  6EF7               	movwf	tblptrh,c
  3439  010858                     	endif
  3440  010858                     	if	1	;There are 3 active tblptr bytes
  3441  010858  0E00               	movlw	low (_dispnormal shr (0+16))
  3442  01085A  6EF8               	movwf	tblptru,c
  3443  01085C                     	endif
  3444  01085C  0008               	tblrd		*
  3445  01085E  50F5               	movf	tablat,w,c
  3446  010860  ECE0  F087         	call	_lcd_write
  3447                           
  3448                           ;lcd.c: 32: lcd_write(dispclr);
  3449  010864  0EB0               	movlw	low _dispclr
  3450  010866  6EF6               	movwf	tblptrl,c
  3451  010868                     	if	1	;There is more than 1 active tblptr byte
  3452  010868  0EFE               	movlw	high _dispclr
  3453  01086A  6EF7               	movwf	tblptrh,c
  3454  01086C                     	endif
  3455  01086C                     	if	1	;There are 3 active tblptr bytes
  3456  01086C  0E00               	movlw	low (_dispclr shr (0+16))
  3457  01086E  6EF8               	movwf	tblptru,c
  3458  010870                     	endif
  3459  010870  0008               	tblrd		*
  3460  010872  50F5               	movf	tablat,w,c
  3461  010874  ECE0  F087         	call	_lcd_write
  3462                           
  3463                           ;lcd.c: 34: lcd_test();
  3464  010878  ECCD  F088         	call	_lcd_test	;wreg free
  3465                           
  3466                           ;lcd.c: 35: _delay((unsigned long)((250)*(12000000/4000.0)));
  3467  01087C  0E04               	movlw	4
  3468  01087E  6E1C               	movwf	(??_lcd_init+1)& (0+255),c
  3469  010880  0ECF               	movlw	207
  3470  010882  6E1B               	movwf	??_lcd_init& (0+255),c
  3471  010884  0E02               	movlw	2
  3472  010886                     u2057:
  3473  010886  2EE8               	decfsz	wreg,f,c
  3474  010888  D7FE               	bra	u2057
  3475  01088A  2E1B               	decfsz	??_lcd_init& (0+255),f,c
  3476  01088C  D7FC               	bra	u2057
  3477  01088E  2E1C               	decfsz	(??_lcd_init+1)& (0+255),f,c
  3478  010890  D7FA               	bra	u2057
  3479  010892  F000               	nop		;# 
  3480  010894  0012               	return		;funcret
  3481  010896                     __end_of_lcd_init:
  3482                           	opt stack 0
  3483                           tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           prodh	equ	0xFF4
  3488                           prodl	equ	0xFF3
  3489                           postinc0	equ	0xFEE
  3490                           wreg	equ	0xFE8
  3491                           indf2	equ	0xFDF
  3492                           fsr2h	equ	0xFDA
  3493                           fsr2l	equ	0xFD9
  3494                           status	equ	0xFD8
  3495                           
  3496 ;; *************** function _lcd_test *****************
  3497 ;; Defined at:
  3498 ;;		line 223 in file "lcd.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  character       1   25[COMRAM] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3516 ;;Total ram usage:        1 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    7
  3519 ;; This function calls:
  3520 ;;		_lcd_writeC
  3521 ;; This function is called by:
  3522 ;;		_lcd_init
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text16
  3527  01119A                     __ptext16:
  3528                           	opt stack 0
  3529  01119A                     _lcd_test:
  3530                           	opt stack 22
  3531                           
  3532                           ;lcd.c: 225: uint8_t character = 0x30;
  3533                           
  3534                           ;incstack = 0
  3535  01119A  0E30               	movlw	48
  3536  01119C  D004               	goto	L13
  3537  01119E                     
  3538                           ;lcd.c: 227: {
  3539                           ;lcd.c: 228: lcd_writeC(character);
  3540  01119E  501A               	movf	lcd_test@character,w,c
  3541  0111A0  EC7E  F085         	call	_lcd_writeC
  3542                           
  3543                           ;lcd.c: 229: character = character+ 1;
  3544  0111A4  281A               	incf	lcd_test@character,w,c
  3545  0111A6                     L13:
  3546  0111A6  6E1A               	movwf	lcd_test@character,c
  3547  0111A8  0E7F               	movlw	127
  3548  0111AA  641A               	cpfsgt	lcd_test@character,c
  3549  0111AC  D7F8               	goto	l1086
  3550  0111AE  0012               	return	
  3551  0111B0                     __end_of_lcd_test:
  3552                           	opt stack 0
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           postinc0	equ	0xFEE
  3560                           wreg	equ	0xFE8
  3561                           indf2	equ	0xFDF
  3562                           fsr2h	equ	0xFDA
  3563                           fsr2l	equ	0xFD9
  3564                           status	equ	0xFD8
  3565                           
  3566 ;; *************** function _enter_service *****************
  3567 ;; Defined at:
  3568 ;;		line 164 in file "main.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:   11
  3589 ;; This function calls:
  3590 ;;		_Audit
  3591 ;;		_Clear_cred
  3592 ;;		_Hopper_coin
  3593 ;;		_Note_test
  3594 ;;		_Sensor_set
  3595 ;;		_Vend_test
  3596 ;;		_butindb
  3597 ;;		_lcd_string
  3598 ;;		_mdb_reset
  3599 ;;		_set_notes
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text17
  3606  010896                     __ptext17:
  3607                           	opt stack 0
  3608  010896                     _enter_service:
  3609                           	opt stack 19
  3610                           
  3611                           ;main.c: 166: mdb_reset();
  3612                           
  3613                           ;incstack = 0
  3614  010896  EC95  F084         	call	_mdb_reset	;wreg free
  3615                           
  3616                           ;main.c: 167: lcd_string(servmsg, line1);
  3617  01089A  0EB5               	movlw	low _servmsg
  3618  01089C  6E1A               	movwf	lcd_string@lcdstring,c
  3619  01089E  0EFE               	movlw	high _servmsg
  3620  0108A0  6E1B               	movwf	lcd_string@lcdstring+1,c
  3621  0108A2  0EA6               	movlw	low _line1
  3622  0108A4  6EF6               	movwf	tblptrl,c
  3623  0108A6                     	if	1	;There is more than 1 active tblptr byte
  3624  0108A6  0EFE               	movlw	high _line1
  3625  0108A8  6EF7               	movwf	tblptrh,c
  3626  0108AA                     	endif
  3627  0108AA                     	if	1	;There are 3 active tblptr bytes
  3628  0108AA  0E00               	movlw	low (_line1 shr (0+16))
  3629  0108AC  6EF8               	movwf	tblptru,c
  3630  0108AE                     	endif
  3631  0108AE  0008               	tblrd		*
  3632  0108B0  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  3633  0108B4  EC0F  F082         	call	_lcd_string	;wreg free
  3634                           
  3635                           ;main.c: 170: while(venflags.service)
  3636  0108B8  D035               	goto	l738
  3637  0108BA                     
  3638                           ;main.c: 171: {
  3639                           ;main.c: 172: buttons = butindb();
  3640  0108BA  EC90  F088         	call	_butindb	;wreg free
  3641  0108BE  6E2C               	movwf	_buttons,c	;volatile
  3642                           
  3643                           ;main.c: 173: switch(buttons)
  3644  0108C0  D018               	goto	l736
  3645  0108C2  EC47  F089         	call	_Audit	;wreg free
  3646                           
  3647                           ;main.c: 176: break;
  3648  0108C6  D02E               	goto	l738
  3649  0108C8  EC45  F089         	call	_Hopper_coin	;wreg free
  3650                           
  3651                           ;main.c: 178: break;
  3652  0108CC  D02B               	goto	l738
  3653  0108CE  EC43  F089         	call	_Sensor_set	;wreg free
  3654                           
  3655                           ;main.c: 180: break;
  3656  0108D2  D028               	goto	l738
  3657  0108D4  EC83  F082         	call	_set_notes	;wreg free
  3658                           
  3659                           ;main.c: 182: break;
  3660  0108D8  D025               	goto	l738
  3661  0108DA  EC46  F089         	call	_Clear_cred	;wreg free
  3662                           
  3663                           ;main.c: 184: break;
  3664  0108DE  D022               	goto	l738
  3665  0108E0  EC42  F089         	call	_Vend_test	;wreg free
  3666                           
  3667                           ;main.c: 186: break;
  3668  0108E4  D01F               	goto	l738
  3669  0108E6  EC44  F089         	call	_Note_test	;wreg free
  3670                           
  3671                           ;main.c: 188: break;
  3672  0108EA  D01C               	goto	l738
  3673  0108EC                     l745:
  3674  0108EC  9E2B               	bcf	_venflags,7,c
  3675                           
  3676                           ;main.c: 190: venflags.initialrun = 1;
  3677  0108EE  8A2B               	bsf	_venflags,5,c
  3678                           
  3679                           ;main.c: 192: }
  3680                           
  3681                           ;main.c: 191: break;
  3682  0108F0  D019               	goto	l738
  3683  0108F2                     l736:
  3684  0108F2  502C               	movf	_buttons,w,c	;volatile
  3685                           
  3686                           ; Switch size 1, requested type "space"
  3687                           ; Number of cases is 8, Range of values is 1 to 128
  3688                           ; switch strategies available:
  3689                           ; Name         Instructions Cycles
  3690                           ; simple_byte           25    13 (average)
  3691                           ;	Chosen strategy is simple_byte
  3692  0108F4  0A01               	xorlw	1	; case 1
  3693  0108F6  B4D8               	btfsc	status,2,c
  3694  0108F8  D7E4               	goto	l737
  3695  0108FA  0A03               	xorlw	3	; case 2
  3696  0108FC  B4D8               	btfsc	status,2,c
  3697  0108FE  D7E4               	goto	l739
  3698  010900  0A06               	xorlw	6	; case 4
  3699  010902  B4D8               	btfsc	status,2,c
  3700  010904  D7E4               	goto	l740
  3701  010906  0A0C               	xorlw	12	; case 8
  3702  010908  B4D8               	btfsc	status,2,c
  3703  01090A  D7E4               	goto	l741
  3704  01090C  0A18               	xorlw	24	; case 16
  3705  01090E  B4D8               	btfsc	status,2,c
  3706  010910  D7E4               	goto	l742
  3707  010912  0A30               	xorlw	48	; case 32
  3708  010914  B4D8               	btfsc	status,2,c
  3709  010916  D7E4               	goto	l743
  3710  010918  0A60               	xorlw	96	; case 64
  3711  01091A  B4D8               	btfsc	status,2,c
  3712  01091C  D7E4               	goto	l744
  3713  01091E  0AC0               	xorlw	192	; case 128
  3714  010920  B4D8               	btfsc	status,2,c
  3715  010922  D7E4               	goto	l745
  3716  010924                     l738:
  3717  010924  AE2B               	btfss	_venflags,7,c
  3718  010926  0012               	return	
  3719  010928  D7C8               	goto	l735
  3720  01092A                     __end_of_enter_service:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           postinc0	equ	0xFEE
  3729                           wreg	equ	0xFE8
  3730                           indf2	equ	0xFDF
  3731                           fsr2h	equ	0xFDA
  3732                           fsr2l	equ	0xFD9
  3733                           status	equ	0xFD8
  3734                           
  3735 ;; *************** function _set_notes *****************
  3736 ;; Defined at:
  3737 ;;		line 56 in file "mdb.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      void 
  3744 ;; Registers used:
  3745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;Total ram usage:        0 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:   10
  3758 ;; This function calls:
  3759 ;;		_butindb
  3760 ;;		_displ_note
  3761 ;;		_enable_notes
  3762 ;;		_lcd_string
  3763 ;; This function is called by:
  3764 ;;		_enter_service
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text18
  3769  010506                     __ptext18:
  3770                           	opt stack 0
  3771  010506                     _set_notes:
  3772                           	opt stack 19
  3773                           
  3774                           ;mdb.c: 58: lcd_string(setnotes, line1);
  3775                           
  3776                           ;incstack = 0
  3777  010506  0E07               	movlw	low _setnotes
  3778  010508  6E1A               	movwf	lcd_string@lcdstring,c
  3779  01050A  0EFF               	movlw	high _setnotes
  3780  01050C  6E1B               	movwf	lcd_string@lcdstring+1,c
  3781  01050E  0EA6               	movlw	low _line1
  3782  010510  6EF6               	movwf	tblptrl,c
  3783  010512                     	if	1	;There is more than 1 active tblptr byte
  3784  010512  0EFE               	movlw	high _line1
  3785  010514  6EF7               	movwf	tblptrh,c
  3786  010516                     	endif
  3787  010516                     	if	1	;There are 3 active tblptr bytes
  3788  010516  0E00               	movlw	low (_line1 shr (0+16))
  3789  010518  6EF8               	movwf	tblptru,c
  3790  01051A                     	endif
  3791  01051A  0008               	tblrd		*
  3792  01051C  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  3793  010520  EC0F  F082         	call	_lcd_string	;wreg free
  3794                           
  3795                           ;mdb.c: 59: noteen.noteset = 1;
  3796  010524  8A36               	bsf	_noteen,5,c
  3797                           
  3798                           ;mdb.c: 60: noteen.endis = 1;
  3799  010526  8C36               	bsf	_noteen,6,c
  3800                           
  3801                           ;mdb.c: 61: while(noteen.noteset)
  3802  010528  D050               	goto	l1714
  3803  01052A                     
  3804                           ;mdb.c: 62: {
  3805                           ;mdb.c: 63: buttons = butindb();
  3806  01052A  EC90  F088         	call	_butindb	;wreg free
  3807  01052E  6E2C               	movwf	_buttons,c	;volatile
  3808                           
  3809                           ;mdb.c: 64: switch(buttons)
  3810  010530  D039               	goto	l1706
  3811  010532  0EF6               	movlw	low _tenrand
  3812  010534  6E1F               	movwf	displ_note@lcdstring,c
  3813  010536  0EFF               	movlw	high _tenrand
  3814  010538  6E20               	movwf	displ_note@lcdstring+1,c
  3815  01053A  ECD8  F084         	call	_displ_note	;wreg free
  3816  01053E  ECDC  F085         	call	_enable_notes
  3817  010542                     l1708:
  3818  010542  0EEE               	movlw	low _twentyrand
  3819  010544  6E1F               	movwf	displ_note@lcdstring,c
  3820  010546  0EFF               	movlw	high _twentyrand
  3821  010548  6E20               	movwf	displ_note@lcdstring+1,c
  3822  01054A  ECD8  F084         	call	_displ_note	;wreg free
  3823  01054E  ECDC  F085         	call	_enable_notes
  3824  010552                     l1709:
  3825  010552  0EE6               	movlw	low _fiftyrand
  3826  010554  6E1F               	movwf	displ_note@lcdstring,c
  3827  010556  0EFF               	movlw	high _fiftyrand
  3828  010558  6E20               	movwf	displ_note@lcdstring+1,c
  3829  01055A  ECD8  F084         	call	_displ_note	;wreg free
  3830  01055E  ECDC  F085         	call	_enable_notes
  3831  010562                     l1710:
  3832  010562  0EDE               	movlw	low _hundredrand
  3833  010564  6E1F               	movwf	displ_note@lcdstring,c
  3834  010566  0EFF               	movlw	high _hundredrand
  3835  010568  6E20               	movwf	displ_note@lcdstring+1,c
  3836  01056A  ECD8  F084         	call	_displ_note	;wreg free
  3837  01056E  ECDC  F085         	call	_enable_notes
  3838  010572                     l1711:
  3839  010572  0ED6               	movlw	low _twohundredrand
  3840  010574  6E1F               	movwf	displ_note@lcdstring,c
  3841  010576  0EFF               	movlw	high _twohundredrand
  3842  010578  6E20               	movwf	displ_note@lcdstring+1,c
  3843  01057A  ECD8  F084         	call	_displ_note	;wreg free
  3844  01057E  ECDC  F085         	call	_enable_notes
  3845  010582                     l1712:
  3846  010582  0EB5               	movlw	low _servmsg
  3847  010584  6E1A               	movwf	lcd_string@lcdstring,c
  3848  010586  0EFE               	movlw	high _servmsg
  3849  010588  6E1B               	movwf	lcd_string@lcdstring+1,c
  3850  01058A  0EA6               	movlw	low _line1
  3851  01058C  6EF6               	movwf	tblptrl,c
  3852  01058E                     	if	1	;There is more than 1 active tblptr byte
  3853  01058E  0EFE               	movlw	high _line1
  3854  010590  6EF7               	movwf	tblptrh,c
  3855  010592                     	endif
  3856  010592                     	if	1	;There are 3 active tblptr bytes
  3857  010592  0E00               	movlw	low (_line1 shr (0+16))
  3858  010594  6EF8               	movwf	tblptru,c
  3859  010596                     	endif
  3860  010596  0008               	tblrd		*
  3861  010598  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  3862  01059C  EC0F  F082         	call	_lcd_string	;wreg free
  3863                           
  3864                           ;mdb.c: 79: noteen.noteset = 0;
  3865  0105A0  9A36               	bcf	_noteen,5,c
  3866                           
  3867                           ;mdb.c: 81: }
  3868                           
  3869                           ;mdb.c: 80: default : break;
  3870  0105A2  D013               	goto	l1714
  3871  0105A4                     l1706:
  3872  0105A4  502C               	movf	_buttons,w,c	;volatile
  3873                           
  3874                           ; Switch size 1, requested type "space"
  3875                           ; Number of cases is 6, Range of values is 1 to 128
  3876                           ; switch strategies available:
  3877                           ; Name         Instructions Cycles
  3878                           ; simple_byte           19    10 (average)
  3879                           ;	Chosen strategy is simple_byte
  3880  0105A6  0A01               	xorlw	1	; case 1
  3881  0105A8  B4D8               	btfsc	status,2,c
  3882  0105AA  D7C3               	goto	l1707
  3883  0105AC  0A03               	xorlw	3	; case 2
  3884  0105AE  B4D8               	btfsc	status,2,c
  3885  0105B0  D7C8               	goto	l1708
  3886  0105B2  0A06               	xorlw	6	; case 4
  3887  0105B4  B4D8               	btfsc	status,2,c
  3888  0105B6  D7CD               	goto	l1709
  3889  0105B8  0A0C               	xorlw	12	; case 8
  3890  0105BA  B4D8               	btfsc	status,2,c
  3891  0105BC  D7D2               	goto	l1710
  3892  0105BE  0A18               	xorlw	24	; case 16
  3893  0105C0  B4D8               	btfsc	status,2,c
  3894  0105C2  D7D7               	goto	l1711
  3895  0105C4  0A90               	xorlw	144	; case 128
  3896  0105C6  B4D8               	btfsc	status,2,c
  3897  0105C8  D7DC               	goto	l1712
  3898  0105CA                     l1714:
  3899  0105CA  AA36               	btfss	_noteen,5,c
  3900  0105CC  0012               	return	
  3901  0105CE  D7AD               	goto	l1705
  3902  0105D0                     __end_of_set_notes:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           tblptrh	equ	0xFF7
  3906                           tblptrl	equ	0xFF6
  3907                           tablat	equ	0xFF5
  3908                           prodh	equ	0xFF4
  3909                           prodl	equ	0xFF3
  3910                           postinc0	equ	0xFEE
  3911                           wreg	equ	0xFE8
  3912                           indf2	equ	0xFDF
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _enable_notes *****************
  3918 ;; Defined at:
  3919 ;;		line 85 in file "mdb.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  notenum         1    wreg     unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  notenum         1   31[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;Total ram usage:        1 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    9
  3940 ;; This function calls:
  3941 ;;		_butindb
  3942 ;;		_displ_nendis
  3943 ;; This function is called by:
  3944 ;;		_set_notes
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text19
  3949  010BB8                     __ptext19:
  3950                           	opt stack 0
  3951  010BB8                     _enable_notes:
  3952                           	opt stack 19
  3953                           
  3954                           ;incstack = 0
  3955                           ;enable_notes@notenum stored from wreg
  3956  010BB8  6E20               	movwf	enable_notes@notenum,c
  3957                           
  3958                           ;mdb.c: 87: noteen.endis = 1;
  3959  010BBA  8C36               	bsf	_noteen,6,c
  3960                           
  3961                           ;mdb.c: 88: displ_nendis(notenum);
  3962  010BBC  5020               	movf	enable_notes@notenum,w,c
  3963  010BBE  EC5A  F086         	call	_displ_nendis
  3964                           
  3965                           ;mdb.c: 89: while(noteen.endis)
  3966  010BC2  D021               	goto	l1723
  3967  010BC4                     
  3968                           ;mdb.c: 90: {
  3969                           ;mdb.c: 91: buttons = butindb();
  3970  010BC4  EC90  F088         	call	_butindb	;wreg free
  3971  010BC8  6E2C               	movwf	_buttons,c	;volatile
  3972                           
  3973                           ;mdb.c: 92: switch(buttons)
  3974  010BCA  D013               	goto	l1721
  3975  010BCC  5035               	movf	_noteen_byte,w,c	;volatile
  3976  010BCE  1020               	iorwf	enable_notes@notenum,w,c
  3977  010BD0  6E35               	movwf	_noteen_byte,c	;volatile
  3978                           
  3979                           ;mdb.c: 95: displ_nendis(notenum);
  3980  010BD2  5020               	movf	enable_notes@notenum,w,c
  3981  010BD4  EC5A  F086         	call	_displ_nendis
  3982                           
  3983                           ;mdb.c: 96: break;
  3984  010BD8  D016               	goto	l1723
  3985  010BDA  5020               	movf	enable_notes@notenum,w,c
  3986  010BDC  0AFF               	xorlw	255
  3987  010BDE  1435               	andwf	_noteen_byte,w,c	;volatile
  3988  010BE0  6E35               	movwf	_noteen_byte,c	;volatile
  3989                           
  3990                           ;mdb.c: 98: displ_nendis(notenum);
  3991  010BE2  5020               	movf	enable_notes@notenum,w,c
  3992  010BE4  EC5A  F086         	call	_displ_nendis
  3993                           
  3994                           ;mdb.c: 99: break;
  3995  010BE8  D00E               	goto	l1723
  3996  010BEA                     l1725:
  3997  010BEA  9C36               	bcf	_noteen,6,c
  3998                           
  3999                           ;mdb.c: 101: buttons = 0;
  4000  010BEC  0E00               	movlw	0
  4001  010BEE  6E2C               	movwf	_buttons,c	;volatile
  4002                           
  4003                           ;mdb.c: 103: }
  4004                           
  4005                           ;mdb.c: 102: default : break;
  4006  010BF0  D00A               	goto	l1723
  4007  010BF2                     l1721:
  4008  010BF2  502C               	movf	_buttons,w,c	;volatile
  4009                           
  4010                           ; Switch size 1, requested type "space"
  4011                           ; Number of cases is 3, Range of values is 1 to 4
  4012                           ; switch strategies available:
  4013                           ; Name         Instructions Cycles
  4014                           ; simple_byte           10     6 (average)
  4015                           ;	Chosen strategy is simple_byte
  4016  010BF4  0A01               	xorlw	1	; case 1
  4017  010BF6  B4D8               	btfsc	status,2,c
  4018  010BF8  D7E9               	goto	l1722
  4019  010BFA  0A03               	xorlw	3	; case 2
  4020  010BFC  B4D8               	btfsc	status,2,c
  4021  010BFE  D7ED               	goto	l1724
  4022  010C00  0A06               	xorlw	6	; case 4
  4023  010C02  B4D8               	btfsc	status,2,c
  4024  010C04  D7F2               	goto	l1725
  4025  010C06                     l1723:
  4026  010C06  AC36               	btfss	_noteen,6,c
  4027  010C08  0012               	return	
  4028  010C0A  D7DC               	goto	l1720
  4029  010C0C                     __end_of_enable_notes:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           prodh	equ	0xFF4
  4036                           prodl	equ	0xFF3
  4037                           postinc0	equ	0xFEE
  4038                           wreg	equ	0xFE8
  4039                           indf2	equ	0xFDF
  4040                           fsr2h	equ	0xFDA
  4041                           fsr2l	equ	0xFD9
  4042                           status	equ	0xFD8
  4043                           
  4044 ;; *************** function _displ_nendis *****************
  4045 ;; Defined at:
  4046 ;;		line 52 in file "lcd.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  notenum         1    wreg     unsigned char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  notenum         1   30[COMRAM] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;Total ram usage:        1 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    8
  4067 ;; This function calls:
  4068 ;;		_lcd_string
  4069 ;; This function is called by:
  4070 ;;		_enable_notes
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text20
  4075  010CB4                     __ptext20:
  4076                           	opt stack 0
  4077  010CB4                     _displ_nendis:
  4078                           	opt stack 19
  4079                           
  4080                           ;incstack = 0
  4081                           ;displ_nendis@notenum stored from wreg
  4082  010CB4  6E1F               	movwf	displ_nendis@notenum,c
  4083                           
  4084                           ;lcd.c: 54: if(notenum && noteen_byte)
  4085  010CB6  501F               	movf	displ_nendis@notenum,w,c
  4086  010CB8  B4D8               	btfsc	status,2,c
  4087  010CBA  D014               	goto	l1016
  4088  010CBC  5035               	movf	_noteen_byte,w,c	;volatile
  4089  010CBE  B4D8               	btfsc	status,2,c
  4090  010CC0  D011               	goto	l1016
  4091                           
  4092                           ;lcd.c: 55: {
  4093                           ;lcd.c: 56: lcd_string(enabled, line2 + 0x06);
  4094  010CC2  0ECD               	movlw	low _enabled
  4095  010CC4  6E1A               	movwf	lcd_string@lcdstring,c
  4096  010CC6  0EFF               	movlw	high _enabled
  4097  010CC8  6E1B               	movwf	lcd_string@lcdstring+1,c
  4098  010CCA  0EA5               	movlw	low _line2
  4099  010CCC  6EF6               	movwf	tblptrl,c
  4100  010CCE                     	if	1	;There is more than 1 active tblptr byte
  4101  010CCE  0EFE               	movlw	high _line2
  4102  010CD0  6EF7               	movwf	tblptrh,c
  4103  010CD2                     	endif
  4104  010CD2                     	if	1	;There are 3 active tblptr bytes
  4105  010CD2  0E00               	movlw	low (_line2 shr (0+16))
  4106  010CD4  6EF8               	movwf	tblptru,c
  4107  010CD6                     	endif
  4108  010CD6  0008               	tblrd		*
  4109  010CD8  50F5               	movf	tablat,w,c
  4110  010CDA  0F06               	addlw	6
  4111  010CDC  6E1C               	movwf	lcd_string@lcdline,c
  4112  010CDE  EC0F  F082         	call	_lcd_string	;wreg free
  4113                           
  4114                           ;lcd.c: 57: }
  4115  010CE2  0012               	return	
  4116  010CE4                     l1016:
  4117                           
  4118                           ;lcd.c: 58: else
  4119                           ;lcd.c: 59: {
  4120                           ;lcd.c: 60: lcd_string(disabled, line2 + 0x06);
  4121  010CE4  0EC4               	movlw	low _disabled
  4122  010CE6  6E1A               	movwf	lcd_string@lcdstring,c
  4123  010CE8  0EFF               	movlw	high _disabled
  4124  010CEA  6E1B               	movwf	lcd_string@lcdstring+1,c
  4125  010CEC  0EA5               	movlw	low _line2
  4126  010CEE  6EF6               	movwf	tblptrl,c
  4127  010CF0                     	if	1	;There is more than 1 active tblptr byte
  4128  010CF0  0EFE               	movlw	high _line2
  4129  010CF2  6EF7               	movwf	tblptrh,c
  4130  010CF4                     	endif
  4131  010CF4                     	if	1	;There are 3 active tblptr bytes
  4132  010CF4  0E00               	movlw	low (_line2 shr (0+16))
  4133  010CF6  6EF8               	movwf	tblptru,c
  4134  010CF8                     	endif
  4135  010CF8  0008               	tblrd		*
  4136  010CFA  50F5               	movf	tablat,w,c
  4137  010CFC  0F06               	addlw	6
  4138  010CFE  6E1C               	movwf	lcd_string@lcdline,c
  4139  010D00  EC0F  F082         	call	_lcd_string	;wreg free
  4140  010D04  0012               	return	
  4141  010D06                     __end_of_displ_nendis:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           postinc0	equ	0xFEE
  4150                           wreg	equ	0xFE8
  4151                           indf2	equ	0xFDF
  4152                           fsr2h	equ	0xFDA
  4153                           fsr2l	equ	0xFD9
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _butindb *****************
  4157 ;; Defined at:
  4158 ;;		line 75 in file "vend.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  butval          1   20[COMRAM] unsigned char 
  4163 ;;  butt            1   19[COMRAM] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      unsigned char 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;Total ram usage:        2 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    3
  4180 ;; This function calls:
  4181 ;;		_butin
  4182 ;; This function is called by:
  4183 ;;		_enter_service
  4184 ;;		_set_notes
  4185 ;;		_enable_notes
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text21
  4190  011120                     __ptext21:
  4191                           	opt stack 0
  4192  011120                     _butindb:
  4193                           	opt stack 24
  4194                           
  4195                           ;vend.c: 77: uint8_t butt = butin();
  4196                           
  4197                           ;incstack = 0
  4198  011120  EC0A  F087         	call	_butin	;wreg free
  4199  011124  6E14               	movwf	butindb@butt,c
  4200                           
  4201                           ;vend.c: 78: uint8_t butval = buttons;
  4202  011126  C02C  F015         	movff	_buttons,butindb@butval	;volatile
  4203                           
  4204                           ;vend.c: 79: while(butval != 0x00)
  4205  01112A  D003               	goto	l1369
  4206  01112C                     
  4207                           ;vend.c: 80: {
  4208                           ;vend.c: 81: butval = butin();
  4209  01112C  EC0A  F087         	call	_butin	;wreg free
  4210  011130  6E15               	movwf	butindb@butval,c
  4211  011132                     l1369:
  4212  011132  5015               	movf	butindb@butval,w,c
  4213  011134  A4D8               	btfss	status,2,c
  4214  011136  D7FA               	goto	l1370
  4215                           
  4216                           ;vend.c: 82: }
  4217                           ;vend.c: 84: return butt;
  4218  011138  5014               	movf	butindb@butt,w,c
  4219  01113A  0012               	return	
  4220  01113C                     __end_of_butindb:
  4221                           	opt stack 0
  4222                           tblptru	equ	0xFF8
  4223                           tblptrh	equ	0xFF7
  4224                           tblptrl	equ	0xFF6
  4225                           tablat	equ	0xFF5
  4226                           prodh	equ	0xFF4
  4227                           prodl	equ	0xFF3
  4228                           postinc0	equ	0xFEE
  4229                           wreg	equ	0xFE8
  4230                           indf2	equ	0xFDF
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _butin *****************
  4236 ;; Defined at:
  4237 ;;		line 87 in file "vend.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      unsigned char 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4255 ;;Total ram usage:        1 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    2
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_butindb
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text22
  4266  010E14                     __ptext22:
  4267                           	opt stack 0
  4268  010E14                     _butin:
  4269                           	opt stack 24
  4270                           
  4271                           ;vend.c: 89: LATA7 = 0;
  4272                           
  4273                           ;incstack = 0
  4274  010E14  9E83               	bcf	3971,7,c	;volatile
  4275                           
  4276                           ;vend.c: 90: LATA6 = 1;
  4277  010E16  8C83               	bsf	3971,6,c	;volatile
  4278                           
  4279                           ;vend.c: 91: _delay((unsigned long)((15)*(12000000/4000000.0)));
  4280  010E18  0E0F               	movlw	15
  4281  010E1A                     u2067:
  4282  010E1A  2EE8               	decfsz	wreg,f,c
  4283  010E1C  D7FE               	bra	u2067
  4284                           
  4285                           ;vend.c: 93: buttons = ((PORTA >> 1) & 0x0F) << 4;
  4286  010E1E  CF8D F013          	movff	3981,??_butin	;volatile
  4287  010E22  90D8               	bcf	status,0,c
  4288  010E24  3213               	rrcf	??_butin,f,c
  4289  010E26  0E0F               	movlw	15
  4290  010E28  1613               	andwf	??_butin,f,c
  4291  010E2A  3813               	swapf	??_butin,w,c
  4292  010E2C  0BF0               	andlw	240
  4293  010E2E  6E2C               	movwf	_buttons,c	;volatile
  4294                           
  4295                           ;vend.c: 94: LATA7 = 1;
  4296  010E30  8E83               	bsf	3971,7,c	;volatile
  4297                           
  4298                           ;vend.c: 95: LATA6 = 0;
  4299  010E32  9C83               	bcf	3971,6,c	;volatile
  4300                           
  4301                           ;vend.c: 96: _delay((unsigned long)((15)*(12000000/4000000.0)));
  4302  010E34  0E0F               	movlw	15
  4303  010E36                     u2077:
  4304  010E36  2EE8               	decfsz	wreg,f,c
  4305  010E38  D7FE               	bra	u2077
  4306                           
  4307                           ;vend.c: 98: buttons = ((PORTA >> 1) & 0x0F) | buttons;
  4308  010E3A  90D8               	bcf	status,0,c
  4309  010E3C  308D               	rrcf	3981,w,c	;volatile
  4310  010E3E  0B0F               	andlw	15
  4311  010E40  102C               	iorwf	_buttons,w,c	;volatile
  4312  010E42  6E2C               	movwf	_buttons,c	;volatile
  4313                           
  4314                           ;vend.c: 99: LATA7 = 1;
  4315  010E44  8E83               	bsf	3971,7,c	;volatile
  4316                           
  4317                           ;vend.c: 100: LATA6 = 1;
  4318  010E46  8C83               	bsf	3971,6,c	;volatile
  4319                           
  4320                           ;vend.c: 101: return ~buttons;
  4321  010E48  502C               	movf	_buttons,w,c	;volatile
  4322  010E4A  0AFF               	xorlw	255
  4323  010E4C  0012               	return	
  4324  010E4E                     __end_of_butin:
  4325                           	opt stack 0
  4326                           tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           prodh	equ	0xFF4
  4331                           prodl	equ	0xFF3
  4332                           postinc0	equ	0xFEE
  4333                           wreg	equ	0xFE8
  4334                           indf2	equ	0xFDF
  4335                           fsr2h	equ	0xFDA
  4336                           fsr2l	equ	0xFD9
  4337                           status	equ	0xFD8
  4338                           
  4339 ;; *************** function _displ_note *****************
  4340 ;; Defined at:
  4341 ;;		line 40 in file "lcd.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  lcdstring       2   30[COMRAM] PTR unsigned char 
  4344 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  4345 ;;		 -> tenrand(8), 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      unsigned char 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;Total ram usage:        4 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    8
  4364 ;; This function calls:
  4365 ;;		_lcd_string
  4366 ;;		_lcd_write
  4367 ;; This function is called by:
  4368 ;;		_set_notes
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text23
  4373  0109B0                     __ptext23:
  4374                           	opt stack 0
  4375  0109B0                     _displ_note:
  4376                           	opt stack 20
  4377                           
  4378                           ;lcd.c: 44: notenum = 0x01 << (lcdstring[0] & 0x07);
  4379                           
  4380                           ;incstack = 0
  4381  0109B0  C01F  FFF6         	movff	displ_note@lcdstring,tblptrl
  4382  0109B4  C020  FFF7         	movff	displ_note@lcdstring+1,tblptrh
  4383  0109B8                     	if	0	;tblptru may be non-zero
  4384  0109B8                     	endif
  4385  0109B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4386  0109B8  0E00               	movlw	low (__mediumconst shr (0+16))
  4387  0109BA  6EF8               	movwf	tblptru,c
  4388  0109BC                     	endif
  4389  0109BC  0008               	tblrd		*
  4390  0109BE  CFF5 F021          	movff	tablat,??_displ_note
  4391  0109C2  0E07               	movlw	7
  4392  0109C4  1621               	andwf	??_displ_note,f,c
  4393  0109C6  0E01               	movlw	1
  4394  0109C8  6E22               	movwf	(??_displ_note+1)& (0+255),c
  4395  0109CA  2A21               	incf	??_displ_note,f,c
  4396  0109CC  D002               	goto	u1734
  4397  0109CE                     u1735:
  4398  0109CE  90D8               	bcf	status,0,c
  4399  0109D0  3622               	rlcf	??_displ_note+1,f,c
  4400  0109D2                     u1734:
  4401  0109D2  2E21               	decfsz	??_displ_note,f,c
  4402  0109D4  D7FC               	goto	u1735
  4403  0109D6  5022               	movf	??_displ_note+1,w,c
  4404  0109D8  6E4A               	movwf	_notenum,c
  4405                           
  4406                           ;lcd.c: 46: lcdstring ++;
  4407  0109DA  4A1F               	infsnz	displ_note@lcdstring,f,c
  4408  0109DC  2A20               	incf	displ_note@lcdstring+1,f,c
  4409                           
  4410                           ;lcd.c: 47: lcd_write(dispclr);
  4411  0109DE  0EB0               	movlw	low _dispclr
  4412  0109E0  6EF6               	movwf	tblptrl,c
  4413  0109E2                     	if	1	;There is more than 1 active tblptr byte
  4414  0109E2  0EFE               	movlw	high _dispclr
  4415  0109E4  6EF7               	movwf	tblptrh,c
  4416  0109E6                     	endif
  4417  0109E6                     	if	1	;There are 3 active tblptr bytes
  4418  0109E6  0E00               	movlw	low (_dispclr shr (0+16))
  4419  0109E8  6EF8               	movwf	tblptru,c
  4420  0109EA                     	endif
  4421  0109EA  0008               	tblrd		*
  4422  0109EC  50F5               	movf	tablat,w,c
  4423  0109EE  ECE0  F087         	call	_lcd_write
  4424                           
  4425                           ;lcd.c: 48: lcd_string(*lcdstring, line2);
  4426  0109F2  C01F  FFF6         	movff	displ_note@lcdstring,tblptrl
  4427  0109F6  C020  FFF7         	movff	displ_note@lcdstring+1,tblptrh
  4428  0109FA                     	if	0	;tblptru may be non-zero
  4429  0109FA                     	endif
  4430  0109FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4431  0109FA  0E00               	movlw	low (__mediumconst shr (0+16))
  4432  0109FC  6EF8               	movwf	tblptru,c
  4433  0109FE                     	endif
  4434  0109FE  0008               	tblrd		*
  4435  010A00  50F5               	movf	tablat,w,c
  4436  010A02  6E21               	movwf	??_displ_note& (0+255),c
  4437  010A04  6A22               	clrf	(??_displ_note+1)& (0+255),c
  4438  010A06  C021  F01A         	movff	??_displ_note,lcd_string@lcdstring
  4439  010A0A  C022  F01B         	movff	??_displ_note+1,lcd_string@lcdstring+1
  4440  010A0E  0EA5               	movlw	low _line2
  4441  010A10  6EF6               	movwf	tblptrl,c
  4442  010A12                     	if	1	;There is more than 1 active tblptr byte
  4443  010A12  0EFE               	movlw	high _line2
  4444  010A14  6EF7               	movwf	tblptrh,c
  4445  010A16                     	endif
  4446  010A16                     	if	1	;There are 3 active tblptr bytes
  4447  010A16  0E00               	movlw	low (_line2 shr (0+16))
  4448  010A18  6EF8               	movwf	tblptru,c
  4449  010A1A                     	endif
  4450  010A1A  0008               	tblrd		*
  4451  010A1C  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  4452  010A20  EC0F  F082         	call	_lcd_string	;wreg free
  4453                           
  4454                           ;lcd.c: 49: return notenum;
  4455  010A24  504A               	movf	_notenum,w,c
  4456  010A26  0012               	return	
  4457  010A28                     __end_of_displ_note:
  4458                           	opt stack 0
  4459                           tblptru	equ	0xFF8
  4460                           tblptrh	equ	0xFF7
  4461                           tblptrl	equ	0xFF6
  4462                           tablat	equ	0xFF5
  4463                           prodh	equ	0xFF4
  4464                           prodl	equ	0xFF3
  4465                           postinc0	equ	0xFEE
  4466                           wreg	equ	0xFE8
  4467                           indf2	equ	0xFDF
  4468                           fsr2h	equ	0xFDA
  4469                           fsr2l	equ	0xFD9
  4470                           status	equ	0xFD8
  4471                           
  4472 ;; *************** function _mdb_reset *****************
  4473 ;; Defined at:
  4474 ;;		line 34 in file "mdb.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  i               1   24[COMRAM] unsigned char 
  4479 ;;  i               1   25[COMRAM] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      unsigned char 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;Total ram usage:        3 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    5
  4496 ;; This function calls:
  4497 ;;		_mdb_comm
  4498 ;; This function is called by:
  4499 ;;		_enter_service
  4500 ;;		_mdb_init
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text24
  4505  01092A                     __ptext24:
  4506                           	opt stack 0
  4507  01092A                     _mdb_reset:
  4508                           	opt stack 23
  4509                           
  4510                           ;mdb.c: 39: mdbflags.timeout = 1;
  4511                           
  4512                           ;incstack = 0
  4513  01092A  8637               	bsf	_mdbflags,3,c
  4514                           
  4515                           ;mdb.c: 40: while(mdbflags.timeout)
  4516  01092C  D00D               	goto	l1697
  4517  01092E                     
  4518                           ;mdb.c: 41: {
  4519                           ;mdb.c: 42: uint8_t i = mdb_comm(note_reset, 0x00);
  4520  01092E  0E00               	movlw	0
  4521  010930  6E15               	movwf	mdb_comm@mcount,c
  4522  010932  0EA2               	movlw	low _note_reset
  4523  010934  6EF6               	movwf	tblptrl,c
  4524  010936                     	if	1	;There is more than 1 active tblptr byte
  4525  010936  0EFE               	movlw	high _note_reset
  4526  010938  6EF7               	movwf	tblptrh,c
  4527  01093A                     	endif
  4528  01093A                     	if	1	;There are 3 active tblptr bytes
  4529  01093A  0E00               	movlw	low (_note_reset shr (0+16))
  4530  01093C  6EF8               	movwf	tblptru,c
  4531  01093E                     	endif
  4532  01093E  0008               	tblrd		*
  4533  010940  50F5               	movf	tablat,w,c
  4534  010942  EC92  F081         	call	_mdb_comm
  4535  010946  6E19               	movwf	mdb_reset@i,c
  4536  010948                     l1697:
  4537  010948  B637               	btfsc	_mdbflags,3,c
  4538  01094A  D7F1               	goto	l1698
  4539  01094C  F000               	nop		;# 
  4540                           
  4541                           ;mdb.c: 45: uint8_t i = mdb_comm(note_poll, 0x00);
  4542  01094E  0E00               	movlw	0
  4543  010950  6E15               	movwf	mdb_comm@mcount,c
  4544  010952  0E9F               	movlw	low _note_poll
  4545  010954  6EF6               	movwf	tblptrl,c
  4546  010956                     	if	1	;There is more than 1 active tblptr byte
  4547  010956  0EFE               	movlw	high _note_poll
  4548  010958  6EF7               	movwf	tblptrh,c
  4549  01095A                     	endif
  4550  01095A                     	if	1	;There are 3 active tblptr bytes
  4551  01095A  0E00               	movlw	low (_note_poll shr (0+16))
  4552  01095C  6EF8               	movwf	tblptru,c
  4553  01095E                     	endif
  4554  01095E  0008               	tblrd		*
  4555  010960  50F5               	movf	tablat,w,c
  4556  010962  EC92  F081         	call	_mdb_comm
  4557  010966  6E1A               	movwf	mdb_reset@i_2281,c
  4558                           
  4559                           ;mdb.c: 46: if(mdbdata[--i] == just_reset)
  4560  010968  061A               	decf	mdb_reset@i_2281,f,c
  4561  01096A  501A               	movf	mdb_reset@i_2281,w,c
  4562  01096C  0D01               	mullw	1
  4563  01096E  0E60               	movlw	low _mdbdata
  4564  010970  24F3               	addwf	prodl,w,c
  4565  010972  6ED9               	movwf	fsr2l,c
  4566  010974  0E00               	movlw	high _mdbdata
  4567  010976  20F4               	addwfc	prodh,w,c
  4568  010978  6EDA               	movwf	fsr2h,c
  4569  01097A  50DF               	movf	indf2,w,c
  4570  01097C  6E18               	movwf	??_mdb_reset& (0+255),c
  4571  01097E  0E95               	movlw	low _just_reset
  4572  010980  6EF6               	movwf	tblptrl,c
  4573  010982                     	if	1	;There is more than 1 active tblptr byte
  4574  010982  0EFE               	movlw	high _just_reset
  4575  010984  6EF7               	movwf	tblptrh,c
  4576  010986                     	endif
  4577  010986                     	if	1	;There are 3 active tblptr bytes
  4578  010986  0E00               	movlw	low (_just_reset shr (0+16))
  4579  010988  6EF8               	movwf	tblptru,c
  4580  01098A                     	endif
  4581  01098A  0008               	tblrd		*
  4582  01098C  50F5               	movf	tablat,w,c
  4583  01098E  1818               	xorwf	??_mdb_reset,w,c
  4584  010990  A4D8               	btfss	status,2,c
  4585  010992  0012               	return	
  4586                           
  4587                           ;mdb.c: 47: {
  4588                           ;mdb.c: 50: i = mdb_comm(note_poll, 0x00);
  4589  010994  0E00               	movlw	0
  4590  010996  6E15               	movwf	mdb_comm@mcount,c
  4591  010998  0E9F               	movlw	low _note_poll
  4592  01099A  6EF6               	movwf	tblptrl,c
  4593  01099C                     	if	1	;There is more than 1 active tblptr byte
  4594  01099C  0EFE               	movlw	high _note_poll
  4595  01099E  6EF7               	movwf	tblptrh,c
  4596  0109A0                     	endif
  4597  0109A0                     	if	1	;There are 3 active tblptr bytes
  4598  0109A0  0E00               	movlw	low (_note_poll shr (0+16))
  4599  0109A2  6EF8               	movwf	tblptru,c
  4600  0109A4                     	endif
  4601  0109A4  0008               	tblrd		*
  4602  0109A6  50F5               	movf	tablat,w,c
  4603  0109A8  EC92  F081         	call	_mdb_comm
  4604  0109AC  6E1A               	movwf	mdb_reset@i_2281,c
  4605  0109AE  0012               	return	
  4606  0109B0                     __end_of_mdb_reset:
  4607                           	opt stack 0
  4608                           tblptru	equ	0xFF8
  4609                           tblptrh	equ	0xFF7
  4610                           tblptrl	equ	0xFF6
  4611                           tablat	equ	0xFF5
  4612                           prodh	equ	0xFF4
  4613                           prodl	equ	0xFF3
  4614                           postinc0	equ	0xFEE
  4615                           wreg	equ	0xFE8
  4616                           indf2	equ	0xFDF
  4617                           fsr2h	equ	0xFDA
  4618                           fsr2l	equ	0xFD9
  4619                           status	equ	0xFD8
  4620                           
  4621 ;; *************** function _mdb_comm *****************
  4622 ;; Defined at:
  4623 ;;		line 221 in file "mdb.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  slvadd          1    wreg     unsigned char 
  4626 ;;  mcount          1   20[COMRAM] unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  slvadd          1   21[COMRAM] unsigned char 
  4629 ;;  i               1   22[COMRAM] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      unsigned char 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4639 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4642 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4643 ;;Total ram usage:        3 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    4
  4646 ;; This function calls:
  4647 ;;		_EUSART1_Read
  4648 ;;		_TMR1_Initialize
  4649 ;;		_init_mdbdata
  4650 ;;		_mdb_on
  4651 ;;		_mdb_transmit
  4652 ;;		_mdb_waitr
  4653 ;; This function is called by:
  4654 ;;		_mdb_init
  4655 ;;		_mdb_reset
  4656 ;;		_mdb_noten
  4657 ;;		_mdb_security
  4658 ;;		_mdb_poll
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text25
  4663  010324                     __ptext25:
  4664                           	opt stack 0
  4665  010324                     _mdb_comm:
  4666                           	opt stack 23
  4667                           
  4668                           ;incstack = 0
  4669                           ;mdb_comm@slvadd stored from wreg
  4670  010324  6E16               	movwf	mdb_comm@slvadd,c
  4671                           
  4672                           ;mdb.c: 224: uint8_t i = 0;
  4673  010326  0E00               	movlw	0
  4674  010328  6E17               	movwf	mdb_comm@i,c
  4675                           
  4676                           ;mdb.c: 226: TX1STAbits.TX9D = 1;
  4677  01032A  809E               	bsf	3998,0,c	;volatile
  4678                           
  4679                           ;mdb.c: 227: mdb_on();
  4680  01032C  EC3C  F089         	call	_mdb_on	;wreg free
  4681                           
  4682                           ;mdb.c: 231: mdb_transmit(slvadd);
  4683  010330  5016               	movf	mdb_comm@slvadd,w,c
  4684  010332  EC01  F089         	call	_mdb_transmit
  4685                           
  4686                           ;mdb.c: 232: TX1STAbits.TX9D = 0;
  4687  010336  909E               	bcf	3998,0,c	;volatile
  4688                           
  4689                           ;mdb.c: 236: chkbyte = slvadd;
  4690  010338  C016  F038         	movff	mdb_comm@slvadd,_chkbyte
  4691                           
  4692                           ;mdb.c: 237: if(mcount != 0)
  4693  01033C  5015               	movf	mdb_comm@mcount,w,c
  4694  01033E  B4D8               	btfsc	status,2,c
  4695  010340  D01E               	goto	u1100
  4696                           
  4697                           ;mdb.c: 238: {
  4698                           ;mdb.c: 239: i = mcount + 1;
  4699  010342  2815               	incf	mdb_comm@mcount,w,c
  4700  010344  6E17               	movwf	mdb_comm@i,c
  4701                           
  4702                           ;mdb.c: 240: while(i != 0)
  4703  010346  D018               	goto	l1773
  4704  010348                     
  4705                           ;mdb.c: 241: {
  4706                           ;mdb.c: 242: mdb_transmit(mdbdata[mcount]);
  4707  010348  5015               	movf	mdb_comm@mcount,w,c
  4708  01034A  0D01               	mullw	1
  4709  01034C  0E60               	movlw	low _mdbdata
  4710  01034E  24F3               	addwf	prodl,w,c
  4711  010350  6ED9               	movwf	fsr2l,c
  4712  010352  0E00               	movlw	high _mdbdata
  4713  010354  20F4               	addwfc	prodh,w,c
  4714  010356  6EDA               	movwf	fsr2h,c
  4715  010358  50DF               	movf	indf2,w,c
  4716  01035A  EC01  F089         	call	_mdb_transmit
  4717                           
  4718                           ;mdb.c: 245: chkbyte = chkbyte + mdbdata[mcount];
  4719  01035E  5015               	movf	mdb_comm@mcount,w,c
  4720  010360  0D01               	mullw	1
  4721  010362  0E60               	movlw	low _mdbdata
  4722  010364  24F3               	addwf	prodl,w,c
  4723  010366  6ED9               	movwf	fsr2l,c
  4724  010368  0E00               	movlw	high _mdbdata
  4725  01036A  20F4               	addwfc	prodh,w,c
  4726  01036C  6EDA               	movwf	fsr2h,c
  4727  01036E  50DF               	movf	indf2,w,c
  4728  010370  2438               	addwf	_chkbyte,w,c
  4729  010372  6E38               	movwf	_chkbyte,c
  4730                           
  4731                           ;mdb.c: 246: i--;
  4732  010374  0617               	decf	mdb_comm@i,f,c
  4733                           
  4734                           ;mdb.c: 247: mcount--;
  4735  010376  0615               	decf	mdb_comm@mcount,f,c
  4736  010378                     l1773:
  4737  010378  5017               	movf	mdb_comm@i,w,c
  4738  01037A  A4D8               	btfss	status,2,c
  4739  01037C  D7E5               	goto	l1774
  4740  01037E                     u1100:
  4741                           
  4742                           ;mdb.c: 248: }
  4743                           ;mdb.c: 249: }
  4744                           ;mdb.c: 250: mdb_transmit(chkbyte);
  4745  01037E  5038               	movf	_chkbyte,w,c
  4746  010380  EC01  F089         	call	_mdb_transmit
  4747                           
  4748                           ;mdb.c: 257: init_mdbdata(0xFF);
  4749  010384  0EFF               	movlw	255
  4750  010386  EC3D  F088         	call	_init_mdbdata
  4751                           
  4752                           ;mdb.c: 258: TMR1_Initialize();
  4753  01038A  ECC6  F087         	call	_TMR1_Initialize	;wreg free
  4754                           
  4755                           ;mdb.c: 259: dbcount = 0;
  4756  01038E  0E00               	movlw	0
  4757  010390  6E2A               	movwf	_dbcount+1,c
  4758  010392  0E00               	movlw	0
  4759  010394  6E29               	movwf	_dbcount,c
  4760                           
  4761                           ;mdb.c: 260: mdbflags.isdata = 0;
  4762  010396  9037               	bcf	_mdbflags,0,c
  4763                           
  4764                           ;mdb.c: 261: i = 0;
  4765  010398  0E00               	movlw	0
  4766  01039A  6E17               	movwf	mdb_comm@i,c
  4767                           
  4768                           ;mdb.c: 263: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  4769  01039C  D01E               	goto	u1130
  4770  01039E                     
  4771                           ;mdb.c: 264: {
  4772                           ;mdb.c: 266: dbcount++;
  4773  01039E  4A29               	infsnz	_dbcount,f,c
  4774  0103A0  2A2A               	incf	_dbcount+1,f,c
  4775                           
  4776                           ;mdb.c: 267: mdbflags.isdata = 0;
  4777  0103A2  9037               	bcf	_mdbflags,0,c
  4778                           
  4779                           ;mdb.c: 270: while(PIR3bits.RC1IF && !mdbflags.isdata)
  4780  0103A4  D015               	goto	l1778
  4781  0103A6                     
  4782                           ;mdb.c: 271: {
  4783                           ;mdb.c: 274: mdbdata[i] = EUSART1_Read();
  4784  0103A6  5017               	movf	mdb_comm@i,w,c
  4785  0103A8  0D01               	mullw	1
  4786  0103AA  0E60               	movlw	low _mdbdata
  4787  0103AC  24F3               	addwf	prodl,w,c
  4788  0103AE  6ED9               	movwf	fsr2l,c
  4789  0103B0  0E00               	movlw	high _mdbdata
  4790  0103B2  20F4               	addwfc	prodh,w,c
  4791  0103B4  6EDA               	movwf	fsr2h,c
  4792  0103B6  ECF8  F088         	call	_EUSART1_Read	;wreg free
  4793  0103BA  6EDF               	movwf	indf2,c
  4794                           
  4795                           ;mdb.c: 275: mdb_waitr();
  4796  0103BC  EC36  F089         	call	_mdb_waitr	;wreg free
  4797                           
  4798                           ;mdb.c: 277: mdbflags.isdata = RC1STAbits.RX9D;
  4799  0103C0  A09D               	btfss	3997,0,c	;volatile
  4800  0103C2  D002               	bra	u1115
  4801  0103C4  8037               	bsf	_mdbflags,0,c
  4802  0103C6  D001               	bra	u1117
  4803  0103C8                     u1115:
  4804  0103C8  9037               	bcf	_mdbflags,0,c
  4805  0103CA                     u1117:
  4806                           
  4807                           ;mdb.c: 278: TMR1_Initialize();
  4808  0103CA  ECC6  F087         	call	_TMR1_Initialize	;wreg free
  4809                           
  4810                           ;mdb.c: 279: i++;
  4811  0103CE  2A17               	incf	mdb_comm@i,f,c
  4812  0103D0                     l1778:
  4813  0103D0  010E               	movlb	14	; () banked
  4814  0103D2  ABCD               	btfss	205,5,b	;volatile
  4815  0103D4  D002               	goto	u1130
  4816                           
  4817                           ; BSR set to: 14
  4818  0103D6  A037               	btfss	_mdbflags,0,c
  4819  0103D8  D7E6               	goto	l1779
  4820  0103DA                     u1130:
  4821                           
  4822                           ; BSR set to: 14
  4823                           
  4824                           ; BSR set to: 14
  4825  0103DA  010E               	movlb	14	; () banked
  4826  0103DC  B1CE               	btfsc	206,0,b	;volatile
  4827  0103DE  D002               	goto	u1150
  4828                           
  4829                           ; BSR set to: 14
  4830  0103E0  A037               	btfss	_mdbflags,0,c
  4831  0103E2  D7DD               	goto	l1777
  4832  0103E4                     u1150:
  4833                           
  4834                           ; BSR set to: 14
  4835                           ;mdb.c: 281: }
  4836                           ;mdb.c: 283: }
  4837                           ;mdb.c: 285: i--;
  4838                           
  4839                           ; BSR set to: 14
  4840                           
  4841                           ; BSR set to: 14
  4842  0103E4  0617               	decf	mdb_comm@i,f,c
  4843                           
  4844                           ; BSR set to: 14
  4845                           ;mdb.c: 287: mdbflags.timeout = PIR4bits.TMR1IF;
  4846  0103E6  A1CE               	btfss	206,0,b	;volatile
  4847  0103E8  D002               	bra	u1165
  4848  0103EA  8637               	bsf	_mdbflags,3,c
  4849  0103EC  D001               	bra	u1167
  4850  0103EE                     u1165:
  4851  0103EE  9637               	bcf	_mdbflags,3,c
  4852  0103F0                     u1167:
  4853                           
  4854                           ;mdb.c: 289: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  4855  0103F0  A037               	btfss	_mdbflags,0,c
  4856  0103F2  D011               	goto	l1786
  4857  0103F4  5017               	movf	mdb_comm@i,w,c
  4858  0103F6  0D01               	mullw	1
  4859  0103F8  0E60               	movlw	low _mdbdata
  4860  0103FA  24F3               	addwf	prodl,w,c
  4861  0103FC  6ED9               	movwf	fsr2l,c
  4862  0103FE  0E00               	movlw	high _mdbdata
  4863  010400  20F4               	addwfc	prodh,w,c
  4864  010402  6EDA               	movwf	fsr2h,c
  4865  010404  50DF               	movf	indf2,w,c
  4866  010406  B4D8               	btfsc	status,2,c
  4867  010408  D006               	goto	l1786
  4868                           
  4869                           ;mdb.c: 290: {
  4870                           ;mdb.c: 291: TX1STAbits.TX9D = 1;
  4871  01040A  809E               	bsf	3998,0,c	;volatile
  4872                           
  4873                           ;mdb.c: 292: mdb_on();
  4874  01040C  EC3C  F089         	call	_mdb_on	;wreg free
  4875                           
  4876                           ;mdb.c: 293: mdb_transmit(0x00);
  4877  010410  0E00               	movlw	0
  4878  010412  EC01  F089         	call	_mdb_transmit
  4879  010416                     l1786:
  4880                           
  4881                           ;mdb.c: 295: }
  4882                           ;mdb.c: 297: mdb_on();
  4883  010416  EC3C  F089         	call	_mdb_on	;wreg free
  4884                           
  4885                           ;mdb.c: 299: return(i);
  4886  01041A  5017               	movf	mdb_comm@i,w,c
  4887  01041C  0012               	return	
  4888  01041E                     __end_of_mdb_comm:
  4889                           	opt stack 0
  4890                           tblptru	equ	0xFF8
  4891                           tblptrh	equ	0xFF7
  4892                           tblptrl	equ	0xFF6
  4893                           tablat	equ	0xFF5
  4894                           prodh	equ	0xFF4
  4895                           prodl	equ	0xFF3
  4896                           postinc0	equ	0xFEE
  4897                           wreg	equ	0xFE8
  4898                           indf2	equ	0xFDF
  4899                           fsr2h	equ	0xFDA
  4900                           fsr2l	equ	0xFD9
  4901                           status	equ	0xFD8
  4902                           
  4903 ;; *************** function _mdb_waitr *****************
  4904 ;; Defined at:
  4905 ;;		line 323 in file "mdb.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		None
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4923 ;;Total ram usage:        0 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    2
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_mdb_comm
  4930 ;;		_cctalk_read
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text26
  4935  01126C                     __ptext26:
  4936                           	opt stack 0
  4937  01126C                     _mdb_waitr:
  4938                           	opt stack 24
  4939                           
  4940                           ;mdb.c: 326: {
  4941                           
  4942                           ;mdb.c: 325: while(BAUD1CONbits.RCIDL == 0)
  4943                           
  4944                           ;incstack = 0
  4945  01126C  BC9F               	btfsc	3999,6,c	;volatile
  4946  01126E  0012               	return	
  4947  011270  D7FD               	goto	_mdb_waitr
  4948  011272                     __end_of_mdb_waitr:
  4949                           	opt stack 0
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           prodh	equ	0xFF4
  4955                           prodl	equ	0xFF3
  4956                           postinc0	equ	0xFEE
  4957                           wreg	equ	0xFE8
  4958                           indf2	equ	0xFDF
  4959                           fsr2h	equ	0xFDA
  4960                           fsr2l	equ	0xFD9
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function _mdb_transmit *****************
  4964 ;; Defined at:
  4965 ;;		line 366 in file "mdb.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  txbyte          1    wreg     unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  txbyte          1   19[COMRAM] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;Total ram usage:        1 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    3
  4986 ;; This function calls:
  4987 ;;		_EUSART1_Write
  4988 ;;		_mdb_waitx
  4989 ;; This function is called by:
  4990 ;;		_mdb_comm
  4991 ;;		_cctalk_comm
  4992 ;;		_mdb_test
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text27
  4997  011202                     __ptext27:
  4998                           	opt stack 0
  4999  011202                     _mdb_transmit:
  5000                           	opt stack 23
  5001                           
  5002                           ;incstack = 0
  5003                           ;mdb_transmit@txbyte stored from wreg
  5004  011202  6E14               	movwf	mdb_transmit@txbyte,c
  5005                           
  5006                           ;mdb.c: 368: EUSART1_Write(txbyte);
  5007  011204  5014               	movf	mdb_transmit@txbyte,w,c
  5008  011206  EC08  F089         	call	_EUSART1_Write
  5009                           
  5010                           ;mdb.c: 369: mdb_waitx();
  5011  01120A  EC39  F089         	call	_mdb_waitx	;wreg free
  5012  01120E  0012               	return		;funcret
  5013  011210                     __end_of_mdb_transmit:
  5014                           	opt stack 0
  5015                           tblptru	equ	0xFF8
  5016                           tblptrh	equ	0xFF7
  5017                           tblptrl	equ	0xFF6
  5018                           tablat	equ	0xFF5
  5019                           prodh	equ	0xFF4
  5020                           prodl	equ	0xFF3
  5021                           postinc0	equ	0xFEE
  5022                           wreg	equ	0xFE8
  5023                           indf2	equ	0xFDF
  5024                           fsr2h	equ	0xFDA
  5025                           fsr2l	equ	0xFD9
  5026                           status	equ	0xFD8
  5027                           
  5028 ;; *************** function _mdb_waitx *****************
  5029 ;; Defined at:
  5030 ;;		line 315 in file "mdb.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		None
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    2
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_mdb_transmit
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text28
  5059  011272                     __ptext28:
  5060                           	opt stack 0
  5061  011272                     _mdb_waitx:
  5062                           	opt stack 23
  5063                           
  5064                           ;mdb.c: 318: {
  5065                           
  5066                           ;mdb.c: 317: while(TX1STAbits.TRMT == 0)
  5067                           
  5068                           ;incstack = 0
  5069  011272  B29E               	btfsc	3998,1,c	;volatile
  5070  011274  0012               	return	
  5071  011276  D7FD               	goto	_mdb_waitx
  5072  011278                     __end_of_mdb_waitx:
  5073                           	opt stack 0
  5074                           tblptru	equ	0xFF8
  5075                           tblptrh	equ	0xFF7
  5076                           tblptrl	equ	0xFF6
  5077                           tablat	equ	0xFF5
  5078                           prodh	equ	0xFF4
  5079                           prodl	equ	0xFF3
  5080                           postinc0	equ	0xFEE
  5081                           wreg	equ	0xFE8
  5082                           indf2	equ	0xFDF
  5083                           fsr2h	equ	0xFDA
  5084                           fsr2l	equ	0xFD9
  5085                           status	equ	0xFD8
  5086                           
  5087 ;; *************** function _EUSART1_Write *****************
  5088 ;; Defined at:
  5089 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  txData          1    wreg     unsigned char 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  txData          1   18[COMRAM] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5107 ;;Total ram usage:        1 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    2
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_mdb_transmit
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text29
  5118  011210                     __ptext29:
  5119                           	opt stack 0
  5120  011210                     _EUSART1_Write:
  5121                           	opt stack 23
  5122                           
  5123                           ;incstack = 0
  5124                           ;EUSART1_Write@txData stored from wreg
  5125  011210  6E13               	movwf	EUSART1_Write@txData,c
  5126  011212                     
  5127                           ;eusart1.c: 96: {
  5128                           
  5129                           ;eusart1.c: 95: while(0 == PIR3bits.TX1IF)
  5130  011212  010E               	movlb	14	; () banked
  5131  011214  A9CD               	btfss	205,4,b	;volatile
  5132  011216  D7FD               	goto	l4052
  5133                           
  5134                           ; BSR set to: 14
  5135                           ;eusart1.c: 97: }
  5136                           ;eusart1.c: 99: TX1REG = txData;
  5137                           
  5138                           ; BSR set to: 14
  5139  011218  C013  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  5140                           
  5141                           ; BSR set to: 14
  5142  01121C  0012               	return		;funcret
  5143  01121E                     __end_of_EUSART1_Write:
  5144                           	opt stack 0
  5145                           tblptru	equ	0xFF8
  5146                           tblptrh	equ	0xFF7
  5147                           tblptrl	equ	0xFF6
  5148                           tablat	equ	0xFF5
  5149                           prodh	equ	0xFF4
  5150                           prodl	equ	0xFF3
  5151                           postinc0	equ	0xFEE
  5152                           wreg	equ	0xFE8
  5153                           indf2	equ	0xFDF
  5154                           fsr2h	equ	0xFDA
  5155                           fsr2l	equ	0xFD9
  5156                           status	equ	0xFD8
  5157                           
  5158 ;; *************** function _mdb_on *****************
  5159 ;; Defined at:
  5160 ;;		line 302 in file "mdb.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		None
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5178 ;;Total ram usage:        0 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    2
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_mdb_comm
  5185 ;;		_cctalk_init
  5186 ;;		_mdb_test
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text30
  5191  011278                     __ptext30:
  5192                           	opt stack 0
  5193  011278                     _mdb_on:
  5194                           	opt stack 24
  5195                           
  5196                           ;mdb.c: 308: LATCbits.LATC0 = 1;
  5197                           
  5198                           ; BSR set to: 14
  5199                           ;incstack = 0
  5200  011278  8085               	bsf	3973,0,c	;volatile
  5201                           
  5202                           ;mdb.c: 309: LATCbits.LATC1 = 0;
  5203  01127A  9285               	bcf	3973,1,c	;volatile
  5204  01127C  0012               	return		;funcret
  5205  01127E                     __end_of_mdb_on:
  5206                           	opt stack 0
  5207                           tblptru	equ	0xFF8
  5208                           tblptrh	equ	0xFF7
  5209                           tblptrl	equ	0xFF6
  5210                           tablat	equ	0xFF5
  5211                           prodh	equ	0xFF4
  5212                           prodl	equ	0xFF3
  5213                           postinc0	equ	0xFEE
  5214                           wreg	equ	0xFE8
  5215                           indf2	equ	0xFDF
  5216                           fsr2h	equ	0xFDA
  5217                           fsr2l	equ	0xFD9
  5218                           status	equ	0xFD8
  5219                           
  5220 ;; *************** function _init_mdbdata *****************
  5221 ;; Defined at:
  5222 ;;		line 13 in file "mdb.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  initdata        1    wreg     unsigned char 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  initdata        1   18[COMRAM] unsigned char 
  5227 ;;  i               1   19[COMRAM] unsigned char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5241 ;;Total ram usage:        2 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    2
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_mdb_noten
  5248 ;;		_mdb_security
  5249 ;;		_mdb_comm
  5250 ;;		_cctalk_pinenter
  5251 ;;		_cctalk_comm
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           	psect	text31
  5256  01107A                     __ptext31:
  5257                           	opt stack 0
  5258  01107A                     _init_mdbdata:
  5259                           	opt stack 24
  5260                           
  5261                           ;incstack = 0
  5262                           ;init_mdbdata@initdata stored from wreg
  5263  01107A  6E13               	movwf	init_mdbdata@initdata,c
  5264                           
  5265                           ;mdb.c: 15: for(uint8_t i = 0;i < 33; i++)
  5266  01107C  0E00               	movlw	0
  5267  01107E  6E14               	movwf	init_mdbdata@i,c
  5268  011080                     l4106:
  5269  011080  0E20               	movlw	32
  5270  011082  6414               	cpfsgt	init_mdbdata@i,c
  5271  011084  D001               	goto	l1689
  5272  011086  0012               	return	
  5273  011088                     l1689:
  5274                           
  5275                           ;mdb.c: 16: {
  5276                           ;mdb.c: 17: mdbdata[i] = initdata;
  5277  011088  5014               	movf	init_mdbdata@i,w,c
  5278  01108A  0D01               	mullw	1
  5279  01108C  0E60               	movlw	low _mdbdata
  5280  01108E  24F3               	addwf	prodl,w,c
  5281  011090  6ED9               	movwf	fsr2l,c
  5282  011092  0E00               	movlw	high _mdbdata
  5283  011094  20F4               	addwfc	prodh,w,c
  5284  011096  6EDA               	movwf	fsr2h,c
  5285  011098  C013  FFDF         	movff	init_mdbdata@initdata,indf2
  5286  01109C  2A14               	incf	init_mdbdata@i,f,c
  5287  01109E  D7F0               	goto	l4106
  5288  0110A0                     __end_of_init_mdbdata:
  5289                           	opt stack 0
  5290                           tblptru	equ	0xFF8
  5291                           tblptrh	equ	0xFF7
  5292                           tblptrl	equ	0xFF6
  5293                           tablat	equ	0xFF5
  5294                           prodh	equ	0xFF4
  5295                           prodl	equ	0xFF3
  5296                           postinc0	equ	0xFEE
  5297                           wreg	equ	0xFE8
  5298                           indf2	equ	0xFDF
  5299                           fsr2h	equ	0xFDA
  5300                           fsr2l	equ	0xFD9
  5301                           status	equ	0xFD8
  5302                           
  5303 ;; *************** function _EUSART1_Read *****************
  5304 ;; Defined at:
  5305 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      unsigned char 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;Total ram usage:        0 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    2
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_mdb_comm
  5330 ;;		_cctalk_read
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text32
  5335  0111F0                     __ptext32:
  5336                           	opt stack 0
  5337  0111F0                     _EUSART1_Read:
  5338                           	opt stack 24
  5339                           
  5340                           ;eusart1.c: 78: {
  5341                           
  5342                           ;eusart1.c: 77: while(!PIR3bits.RC1IF)
  5343                           
  5344                           ;incstack = 0
  5345  0111F0  010E               	movlb	14	; () banked
  5346  0111F2  ABCD               	btfss	205,5,b	;volatile
  5347  0111F4  D7FD               	goto	_EUSART1_Read
  5348                           
  5349                           ; BSR set to: 14
  5350                           ;eusart1.c: 79: }
  5351                           ;eusart1.c: 82: if(1 == RC1STAbits.OERR)
  5352  0111F6  A29D               	btfss	3997,1,c	;volatile
  5353  0111F8  D002               	goto	l101
  5354                           
  5355                           ; BSR set to: 14
  5356                           ;eusart1.c: 83: {
  5357                           ;eusart1.c: 86: RC1STAbits.CREN = 0;
  5358  0111FA  989D               	bcf	3997,4,c	;volatile
  5359                           
  5360                           ;eusart1.c: 87: RC1STAbits.CREN = 1;
  5361  0111FC  889D               	bsf	3997,4,c	;volatile
  5362  0111FE                     l101:
  5363                           
  5364                           ; BSR set to: 14
  5365                           ;eusart1.c: 88: }
  5366                           ;eusart1.c: 90: return RC1REG;
  5367                           
  5368                           ; BSR set to: 14
  5369  0111FE  5099               	movf	3993,w,c	;volatile
  5370  011200  0012               	return	
  5371  011202                     __end_of_EUSART1_Read:
  5372                           	opt stack 0
  5373                           tblptru	equ	0xFF8
  5374                           tblptrh	equ	0xFF7
  5375                           tblptrl	equ	0xFF6
  5376                           tablat	equ	0xFF5
  5377                           prodh	equ	0xFF4
  5378                           prodl	equ	0xFF3
  5379                           postinc0	equ	0xFEE
  5380                           wreg	equ	0xFE8
  5381                           indf2	equ	0xFDF
  5382                           fsr2h	equ	0xFDA
  5383                           fsr2l	equ	0xFD9
  5384                           status	equ	0xFD8
  5385                           
  5386 ;; *************** function _Vend_test *****************
  5387 ;; Defined at:
  5388 ;;		line 129 in file "vend.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;		None
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		None
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;Total ram usage:        0 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    2
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_enter_service
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text33
  5417  011284                     __ptext33:
  5418                           	opt stack 0
  5419  011284                     _Vend_test:
  5420                           	opt stack 27
  5421                           
  5422                           ; BSR set to: 14
  5423                           ;incstack = 0
  5424  011284  0012               	return		;funcret
  5425  011286                     __end_of_Vend_test:
  5426                           	opt stack 0
  5427                           tblptru	equ	0xFF8
  5428                           tblptrh	equ	0xFF7
  5429                           tblptrl	equ	0xFF6
  5430                           tablat	equ	0xFF5
  5431                           prodh	equ	0xFF4
  5432                           prodl	equ	0xFF3
  5433                           postinc0	equ	0xFEE
  5434                           wreg	equ	0xFE8
  5435                           indf2	equ	0xFDF
  5436                           fsr2h	equ	0xFDA
  5437                           fsr2l	equ	0xFD9
  5438                           status	equ	0xFD8
  5439                           
  5440 ;; *************** function _Sensor_set *****************
  5441 ;; Defined at:
  5442 ;;		line 119 in file "vend.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;		None
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1    wreg      void 
  5449 ;; Registers used:
  5450 ;;		None
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;Total ram usage:        0 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    2
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_enter_service
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text34
  5471  011286                     __ptext34:
  5472                           	opt stack 0
  5473  011286                     _Sensor_set:
  5474                           	opt stack 27
  5475                           
  5476                           ;incstack = 0
  5477  011286  0012               	return		;funcret
  5478  011288                     __end_of_Sensor_set:
  5479                           	opt stack 0
  5480                           tblptru	equ	0xFF8
  5481                           tblptrh	equ	0xFF7
  5482                           tblptrl	equ	0xFF6
  5483                           tablat	equ	0xFF5
  5484                           prodh	equ	0xFF4
  5485                           prodl	equ	0xFF3
  5486                           postinc0	equ	0xFEE
  5487                           wreg	equ	0xFE8
  5488                           indf2	equ	0xFDF
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function _Note_test *****************
  5494 ;; Defined at:
  5495 ;;		line 134 in file "vend.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;		None
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		None
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5513 ;;Total ram usage:        0 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    2
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_enter_service
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text35
  5524  011288                     __ptext35:
  5525                           	opt stack 0
  5526  011288                     _Note_test:
  5527                           	opt stack 27
  5528                           
  5529                           ;incstack = 0
  5530  011288  0012               	return		;funcret
  5531  01128A                     __end_of_Note_test:
  5532                           	opt stack 0
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           prodh	equ	0xFF4
  5538                           prodl	equ	0xFF3
  5539                           postinc0	equ	0xFEE
  5540                           wreg	equ	0xFE8
  5541                           indf2	equ	0xFDF
  5542                           fsr2h	equ	0xFDA
  5543                           fsr2l	equ	0xFD9
  5544                           status	equ	0xFD8
  5545                           
  5546 ;; *************** function _Hopper_coin *****************
  5547 ;; Defined at:
  5548 ;;		line 114 in file "vend.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		None
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    2
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_enter_service
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text36
  5577  01128A                     __ptext36:
  5578                           	opt stack 0
  5579  01128A                     _Hopper_coin:
  5580                           	opt stack 27
  5581                           
  5582                           ;incstack = 0
  5583  01128A  0012               	return		;funcret
  5584  01128C                     __end_of_Hopper_coin:
  5585                           	opt stack 0
  5586                           tblptru	equ	0xFF8
  5587                           tblptrh	equ	0xFF7
  5588                           tblptrl	equ	0xFF6
  5589                           tablat	equ	0xFF5
  5590                           prodh	equ	0xFF4
  5591                           prodl	equ	0xFF3
  5592                           postinc0	equ	0xFEE
  5593                           wreg	equ	0xFE8
  5594                           indf2	equ	0xFDF
  5595                           fsr2h	equ	0xFDA
  5596                           fsr2l	equ	0xFD9
  5597                           status	equ	0xFD8
  5598                           
  5599 ;; *************** function _Clear_cred *****************
  5600 ;; Defined at:
  5601 ;;		line 124 in file "vend.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		None
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5619 ;;Total ram usage:        0 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    2
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_enter_service
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text37
  5630  01128C                     __ptext37:
  5631                           	opt stack 0
  5632  01128C                     _Clear_cred:
  5633                           	opt stack 27
  5634                           
  5635                           ;incstack = 0
  5636  01128C  0012               	return		;funcret
  5637  01128E                     __end_of_Clear_cred:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           postinc0	equ	0xFEE
  5646                           wreg	equ	0xFE8
  5647                           indf2	equ	0xFDF
  5648                           fsr2h	equ	0xFDA
  5649                           fsr2l	equ	0xFD9
  5650                           status	equ	0xFD8
  5651                           
  5652 ;; *************** function _Audit *****************
  5653 ;; Defined at:
  5654 ;;		line 109 in file "vend.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;		None
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		None
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;Total ram usage:        0 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    2
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_enter_service
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text38
  5683  01128E                     __ptext38:
  5684                           	opt stack 0
  5685  01128E                     _Audit:
  5686                           	opt stack 27
  5687                           
  5688                           ;incstack = 0
  5689  01128E  0012               	return		;funcret
  5690  011290                     __end_of_Audit:
  5691                           	opt stack 0
  5692                           tblptru	equ	0xFF8
  5693                           tblptrh	equ	0xFF7
  5694                           tblptrl	equ	0xFF6
  5695                           tablat	equ	0xFF5
  5696                           prodh	equ	0xFF4
  5697                           prodl	equ	0xFF3
  5698                           postinc0	equ	0xFEE
  5699                           wreg	equ	0xFE8
  5700                           indf2	equ	0xFDF
  5701                           fsr2h	equ	0xFDA
  5702                           fsr2l	equ	0xFD9
  5703                           status	equ	0xFD8
  5704                           
  5705 ;; *************** function _displ_noteer *****************
  5706 ;; Defined at:
  5707 ;;		line 119 in file "lcd.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    8
  5728 ;; This function calls:
  5729 ;;		_displ_code
  5730 ;;		_lcd_string
  5731 ;; This function is called by:
  5732 ;;		_main
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text39
  5737  010FF2                     __ptext39:
  5738                           	opt stack 0
  5739  010FF2                     _displ_noteer:
  5740                           	opt stack 22
  5741                           
  5742                           ;lcd.c: 121: lcd_string(noteerr, line1);
  5743                           
  5744                           ;incstack = 0
  5745  010FF2  0E71               	movlw	low _noteerr
  5746  010FF4  6E1A               	movwf	lcd_string@lcdstring,c
  5747  010FF6  0EFF               	movlw	high _noteerr
  5748  010FF8  6E1B               	movwf	lcd_string@lcdstring+1,c
  5749  010FFA  0EA6               	movlw	low _line1
  5750  010FFC  6EF6               	movwf	tblptrl,c
  5751  010FFE                     	if	1	;There is more than 1 active tblptr byte
  5752  010FFE  0EFE               	movlw	high _line1
  5753  011000  6EF7               	movwf	tblptrh,c
  5754  011002                     	endif
  5755  011002                     	if	1	;There are 3 active tblptr bytes
  5756  011002  0E00               	movlw	low (_line1 shr (0+16))
  5757  011004  6EF8               	movwf	tblptru,c
  5758  011006                     	endif
  5759  011006  0008               	tblrd		*
  5760  011008  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  5761  01100C  EC0F  F082         	call	_lcd_string	;wreg free
  5762                           
  5763                           ;lcd.c: 122: ercode = mdbdata[0];
  5764  011010  C060  F03D         	movff	_mdbdata,_ercode
  5765                           
  5766                           ;lcd.c: 123: displ_code(ercode);
  5767  011014  503D               	movf	_ercode,w,c
  5768  011016  EC91  F080         	call	_displ_code
  5769                           
  5770                           ;lcd.c: 124: mdbflags.noteerr = 0;
  5771  01101A  9237               	bcf	_mdbflags,1,c
  5772                           
  5773                           ;lcd.c: 125: venflags.noterr = 0;
  5774  01101C  9C2B               	bcf	_venflags,6,c
  5775                           
  5776                           ;lcd.c: 126: venflags.credisplay = 0;
  5777  01101E  982B               	bcf	_venflags,4,c
  5778  011020  0012               	return		;funcret
  5779  011022                     __end_of_displ_noteer:
  5780                           	opt stack 0
  5781                           tblptru	equ	0xFF8
  5782                           tblptrh	equ	0xFF7
  5783                           tblptrl	equ	0xFF6
  5784                           tablat	equ	0xFF5
  5785                           prodh	equ	0xFF4
  5786                           prodl	equ	0xFF3
  5787                           postinc0	equ	0xFEE
  5788                           wreg	equ	0xFE8
  5789                           indf2	equ	0xFDF
  5790                           fsr2h	equ	0xFDA
  5791                           fsr2l	equ	0xFD9
  5792                           status	equ	0xFD8
  5793                           
  5794 ;; *************** function _displ_code *****************
  5795 ;; Defined at:
  5796 ;;		line 72 in file "lcd.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  ercode          1    wreg     unsigned char 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  ercode          1   27[COMRAM] unsigned char 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;Total ram usage:        3 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    7
  5817 ;; This function calls:
  5818 ;;		_lcd_writeC
  5819 ;; This function is called by:
  5820 ;;		_displ_noteer
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text40
  5825  010122                     __ptext40:
  5826                           	opt stack 0
  5827  010122                     _displ_code:
  5828                           	opt stack 22
  5829                           
  5830                           ;incstack = 0
  5831                           ;displ_code@ercode stored from wreg
  5832  010122  6E1C               	movwf	displ_code@ercode,c
  5833                           
  5834                           ;lcd.c: 74: if((ercode >> 4) < 0x0A)
  5835  010124  C01C  F01A         	movff	displ_code@ercode,??_displ_code
  5836  010128  3A1A               	swapf	??_displ_code,f,c
  5837  01012A  0E0F               	movlw	15
  5838  01012C  161A               	andwf	??_displ_code,f,c
  5839  01012E  0E0A               	movlw	10
  5840  010130  601A               	cpfslt	??_displ_code,c
  5841  010132  D01E               	goto	l1026
  5842                           
  5843                           ;lcd.c: 75: {
  5844                           ;lcd.c: 76: lcd_writeC((ercode >> 4) | 0x30);
  5845  010134  381C               	swapf	displ_code@ercode,w,c
  5846  010136  0B0F               	andlw	15
  5847  010138  0930               	iorlw	48
  5848  01013A  EC7E  F085         	call	_lcd_writeC
  5849                           
  5850                           ;lcd.c: 77: }
  5851  01013E  D033               	goto	l1028
  5852  010140  0E41               	movlw	65
  5853  010142  EC7E  F085         	call	_lcd_writeC
  5854                           
  5855                           ;lcd.c: 83: break;
  5856  010146  D02F               	goto	l1028
  5857  010148  0E42               	movlw	66
  5858  01014A  EC7E  F085         	call	_lcd_writeC
  5859                           
  5860                           ;lcd.c: 85: break;
  5861  01014E  D02B               	goto	l1028
  5862  010150  0E43               	movlw	67
  5863  010152  EC7E  F085         	call	_lcd_writeC
  5864                           
  5865                           ;lcd.c: 87: break;
  5866  010156  D027               	goto	l1028
  5867  010158  0E44               	movlw	68
  5868  01015A  EC7E  F085         	call	_lcd_writeC
  5869                           
  5870                           ;lcd.c: 89: break;
  5871  01015E  D023               	goto	l1028
  5872  010160  0E45               	movlw	69
  5873  010162  EC7E  F085         	call	_lcd_writeC
  5874                           
  5875                           ;lcd.c: 91: break;
  5876  010166  D01F               	goto	l1028
  5877  010168  0E46               	movlw	70
  5878  01016A  EC7E  F085         	call	_lcd_writeC
  5879                           
  5880                           ;lcd.c: 93: }
  5881  01016E  D01B               	goto	l1028
  5882  010170                     l1026:
  5883  010170  381C               	swapf	displ_code@ercode,w,c
  5884  010172  0B0F               	andlw	15
  5885  010174  6E1A               	movwf	??_displ_code& (0+255),c
  5886  010176  6A1B               	clrf	(??_displ_code+1)& (0+255),c
  5887                           
  5888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5889                           ; Switch size 1, requested type "space"
  5890                           ; Number of cases is 1, Range of values is 0 to 0
  5891                           ; switch strategies available:
  5892                           ; Name         Instructions Cycles
  5893                           ; simple_byte            4     3 (average)
  5894                           ;	Chosen strategy is simple_byte
  5895  010178  501B               	movf	??_displ_code+1,w,c
  5896  01017A  0A00               	xorlw	0	; case 0
  5897  01017C  A4D8               	btfss	status,2,c
  5898  01017E  D013               	goto	l1028
  5899                           
  5900                           ; Switch size 1, requested type "space"
  5901                           ; Number of cases is 6, Range of values is 10 to 15
  5902                           ; switch strategies available:
  5903                           ; Name         Instructions Cycles
  5904                           ; simple_byte           19    10 (average)
  5905                           ;	Chosen strategy is simple_byte
  5906  010180  501A               	movf	??_displ_code,w,c
  5907  010182  0A0A               	xorlw	10	; case 10
  5908  010184  B4D8               	btfsc	status,2,c
  5909  010186  D7DC               	goto	l1027
  5910  010188  0A01               	xorlw	1	; case 11
  5911  01018A  B4D8               	btfsc	status,2,c
  5912  01018C  D7DD               	goto	l1029
  5913  01018E  0A07               	xorlw	7	; case 12
  5914  010190  B4D8               	btfsc	status,2,c
  5915  010192  D7DE               	goto	l1030
  5916  010194  0A01               	xorlw	1	; case 13
  5917  010196  B4D8               	btfsc	status,2,c
  5918  010198  D7DF               	goto	l1031
  5919  01019A  0A03               	xorlw	3	; case 14
  5920  01019C  B4D8               	btfsc	status,2,c
  5921  01019E  D7E0               	goto	l1032
  5922  0101A0  0A01               	xorlw	1	; case 15
  5923  0101A2  B4D8               	btfsc	status,2,c
  5924  0101A4  D7E1               	goto	l1033
  5925  0101A6                     l1028:
  5926                           
  5927                           ;lcd.c: 94: }
  5928                           ;lcd.c: 95: if((ercode & 0x0F) < 0x0A)
  5929  0101A6  C01C  F01A         	movff	displ_code@ercode,??_displ_code
  5930  0101AA  0E0F               	movlw	15
  5931  0101AC  161A               	andwf	??_displ_code,f,c
  5932  0101AE  0E0A               	movlw	10
  5933  0101B0  601A               	cpfslt	??_displ_code,c
  5934  0101B2  D01E               	goto	l1036
  5935                           
  5936                           ;lcd.c: 96: {
  5937                           ;lcd.c: 97: lcd_writeC((ercode & 0x0F) | 0x30);
  5938  0101B4  501C               	movf	displ_code@ercode,w,c
  5939  0101B6  0B0F               	andlw	15
  5940  0101B8  0930               	iorlw	48
  5941  0101BA  EC7E  F085         	call	_lcd_writeC
  5942                           
  5943                           ;lcd.c: 98: }
  5944  0101BE  0012               	return	
  5945  0101C0  0E41               	movlw	65
  5946  0101C2  EC7E  F085         	call	_lcd_writeC
  5947                           
  5948                           ;lcd.c: 104: break;
  5949  0101C6  0012               	return	
  5950  0101C8  0E42               	movlw	66
  5951  0101CA  EC7E  F085         	call	_lcd_writeC
  5952                           
  5953                           ;lcd.c: 106: break;
  5954  0101CE  0012               	return	
  5955  0101D0  0E43               	movlw	67
  5956  0101D2  EC7E  F085         	call	_lcd_writeC
  5957                           
  5958                           ;lcd.c: 108: break;
  5959  0101D6  0012               	return	
  5960  0101D8  0E44               	movlw	68
  5961  0101DA  EC7E  F085         	call	_lcd_writeC
  5962                           
  5963                           ;lcd.c: 110: break;
  5964  0101DE  0012               	return	
  5965  0101E0  0E45               	movlw	69
  5966  0101E2  EC7E  F085         	call	_lcd_writeC
  5967                           
  5968                           ;lcd.c: 112: break;
  5969  0101E6  0012               	return	
  5970  0101E8  0E46               	movlw	70
  5971  0101EA  EC7E  F085         	call	_lcd_writeC
  5972                           
  5973                           ;lcd.c: 114: }
  5974  0101EE  0012               	return	
  5975  0101F0                     l1036:
  5976  0101F0  501C               	movf	displ_code@ercode,w,c
  5977  0101F2  0B0F               	andlw	15
  5978  0101F4  6E1A               	movwf	??_displ_code& (0+255),c
  5979  0101F6  6A1B               	clrf	(??_displ_code+1)& (0+255),c
  5980                           
  5981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5982                           ; Switch size 1, requested type "space"
  5983                           ; Number of cases is 1, Range of values is 0 to 0
  5984                           ; switch strategies available:
  5985                           ; Name         Instructions Cycles
  5986                           ; simple_byte            4     3 (average)
  5987                           ;	Chosen strategy is simple_byte
  5988  0101F8  501B               	movf	??_displ_code+1,w,c
  5989  0101FA  0A00               	xorlw	0	; case 0
  5990  0101FC  A4D8               	btfss	status,2,c
  5991  0101FE  0012               	return	
  5992                           
  5993                           ; Switch size 1, requested type "space"
  5994                           ; Number of cases is 6, Range of values is 10 to 15
  5995                           ; switch strategies available:
  5996                           ; Name         Instructions Cycles
  5997                           ; simple_byte           19    10 (average)
  5998                           ;	Chosen strategy is simple_byte
  5999  010200  501A               	movf	??_displ_code,w,c
  6000  010202  0A0A               	xorlw	10	; case 10
  6001  010204  B4D8               	btfsc	status,2,c
  6002  010206  D7DC               	goto	l1037
  6003  010208  0A01               	xorlw	1	; case 11
  6004  01020A  B4D8               	btfsc	status,2,c
  6005  01020C  D7DD               	goto	l1039
  6006  01020E  0A07               	xorlw	7	; case 12
  6007  010210  B4D8               	btfsc	status,2,c
  6008  010212  D7DE               	goto	l1040
  6009  010214  0A01               	xorlw	1	; case 13
  6010  010216  B4D8               	btfsc	status,2,c
  6011  010218  D7DF               	goto	l1041
  6012  01021A  0A03               	xorlw	3	; case 14
  6013  01021C  B4D8               	btfsc	status,2,c
  6014  01021E  D7E0               	goto	l1042
  6015  010220  0A01               	xorlw	1	; case 15
  6016  010222  A4D8               	btfss	status,2,c
  6017  010224  0012               	return	
  6018  010226  D7E0               	goto	l1043
  6019  010228                     __end_of_displ_code:
  6020                           	opt stack 0
  6021                           tblptru	equ	0xFF8
  6022                           tblptrh	equ	0xFF7
  6023                           tblptrl	equ	0xFF6
  6024                           tablat	equ	0xFF5
  6025                           prodh	equ	0xFF4
  6026                           prodl	equ	0xFF3
  6027                           postinc0	equ	0xFEE
  6028                           wreg	equ	0xFE8
  6029                           indf2	equ	0xFDF
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function _displ_credit *****************
  6035 ;; Defined at:
  6036 ;;		line 64 in file "lcd.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  cash            1   31[COMRAM] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;Total ram usage:        1 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    8
  6057 ;; This function calls:
  6058 ;;		_credit_check
  6059 ;;		_displ_hex
  6060 ;;		_lcd_string
  6061 ;; This function is called by:
  6062 ;;		_main
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text41
  6067  010EF0                     __ptext41:
  6068                           	opt stack 0
  6069  010EF0                     _displ_credit:
  6070                           	opt stack 22
  6071                           
  6072                           ;lcd.c: 66: lcd_string(credits, line1);
  6073                           
  6074                           ;incstack = 0
  6075  010EF0  0EB7               	movlw	low _credits
  6076  010EF2  6E1A               	movwf	lcd_string@lcdstring,c
  6077  010EF4  0EFF               	movlw	high _credits
  6078  010EF6  6E1B               	movwf	lcd_string@lcdstring+1,c
  6079  010EF8  0EA6               	movlw	low _line1
  6080  010EFA  6EF6               	movwf	tblptrl,c
  6081  010EFC                     	if	1	;There is more than 1 active tblptr byte
  6082  010EFC  0EFE               	movlw	high _line1
  6083  010EFE  6EF7               	movwf	tblptrh,c
  6084  010F00                     	endif
  6085  010F00                     	if	1	;There are 3 active tblptr bytes
  6086  010F00  0E00               	movlw	low (_line1 shr (0+16))
  6087  010F02  6EF8               	movwf	tblptru,c
  6088  010F04                     	endif
  6089  010F04  0008               	tblrd		*
  6090  010F06  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  6091  010F0A  EC0F  F082         	call	_lcd_string	;wreg free
  6092                           
  6093                           ;lcd.c: 67: uint8_t cash = credit_check();
  6094  010F0E  EC50  F088         	call	_credit_check	;wreg free
  6095  010F12  6E20               	movwf	displ_credit@cash,c
  6096                           
  6097                           ;lcd.c: 68: displ_hex((uint8_t) cash);
  6098  010F14  5020               	movf	displ_credit@cash,w,c
  6099  010F16  6E1D               	movwf	displ_hex@hexnum,c
  6100  010F18  6A1E               	clrf	displ_hex@hexnum+1,c
  6101  010F1A  6A1F               	clrf	displ_hex@hexnum+2,c
  6102  010F1C  EC44  F083         	call	_displ_hex	;wreg free
  6103                           
  6104                           ;lcd.c: 69: venflags.credisplay = 0;
  6105  010F20  982B               	bcf	_venflags,4,c
  6106  010F22  0012               	return		;funcret
  6107  010F24                     __end_of_displ_credit:
  6108                           	opt stack 0
  6109                           tblptru	equ	0xFF8
  6110                           tblptrh	equ	0xFF7
  6111                           tblptrl	equ	0xFF6
  6112                           tablat	equ	0xFF5
  6113                           prodh	equ	0xFF4
  6114                           prodl	equ	0xFF3
  6115                           postinc0	equ	0xFEE
  6116                           wreg	equ	0xFE8
  6117                           indf2	equ	0xFDF
  6118                           fsr2h	equ	0xFDA
  6119                           fsr2l	equ	0xFD9
  6120                           status	equ	0xFD8
  6121                           
  6122 ;; *************** function _lcd_string *****************
  6123 ;; Defined at:
  6124 ;;		line 154 in file "lcd.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;  lcdstring       2   25[COMRAM] PTR unsigned char 
  6127 ;;		 -> setnotes(69), initnote(37), inithop(20), noteerr(28), 
  6128 ;;		 -> credits(13), disabled(9), enabled(9), RAM(3719), 
  6129 ;;		 -> servmsg(82), inscoin(22), 
  6130 ;;  lcdline         1   27[COMRAM] unsigned char 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6142 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6145 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6146 ;;Total ram usage:        5 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:    7
  6149 ;; This function calls:
  6150 ;;		_lcd_dispadd
  6151 ;;		_lcd_write
  6152 ;;		_lcd_writeC
  6153 ;; This function is called by:
  6154 ;;		_main
  6155 ;;		_enter_service
  6156 ;;		_displ_note
  6157 ;;		_displ_nendis
  6158 ;;		_displ_credit
  6159 ;;		_displ_noteer
  6160 ;;		_vend_init
  6161 ;;		_set_notes
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text42
  6166  01041E                     __ptext42:
  6167                           	opt stack 0
  6168  01041E                     _lcd_string:
  6169                           	opt stack 22
  6170                           
  6171                           ;lcd.c: 156: if(lcdline == line1)
  6172                           
  6173                           ;incstack = 0
  6174  01041E  0EA6               	movlw	low _line1
  6175  010420  6EF6               	movwf	tblptrl,c
  6176  010422                     	if	1	;There is more than 1 active tblptr byte
  6177  010422  0EFE               	movlw	high _line1
  6178  010424  6EF7               	movwf	tblptrh,c
  6179  010426                     	endif
  6180  010426                     	if	1	;There are 3 active tblptr bytes
  6181  010426  0E00               	movlw	low (_line1 shr (0+16))
  6182  010428  6EF8               	movwf	tblptru,c
  6183  01042A                     	endif
  6184  01042A  0008               	tblrd		*
  6185  01042C  50F5               	movf	tablat,w,c
  6186  01042E  621C               	cpfseq	lcd_string@lcdline,c
  6187  010430  D00B               	goto	l1060
  6188                           
  6189                           ;lcd.c: 157: {
  6190                           ;lcd.c: 158: lcd_write(dispclr);
  6191  010432  0EB0               	movlw	low _dispclr
  6192  010434  6EF6               	movwf	tblptrl,c
  6193  010436                     	if	1	;There is more than 1 active tblptr byte
  6194  010436  0EFE               	movlw	high _dispclr
  6195  010438  6EF7               	movwf	tblptrh,c
  6196  01043A                     	endif
  6197  01043A                     	if	1	;There are 3 active tblptr bytes
  6198  01043A  0E00               	movlw	low (_dispclr shr (0+16))
  6199  01043C  6EF8               	movwf	tblptru,c
  6200  01043E                     	endif
  6201  01043E  0008               	tblrd		*
  6202  010440  50F5               	movf	tablat,w,c
  6203  010442  ECE0  F087         	call	_lcd_write
  6204                           
  6205                           ;lcd.c: 159: }
  6206  010446  D003               	goto	l1061
  6207  010448                     l1060:
  6208                           
  6209                           ;lcd.c: 160: else
  6210                           ;lcd.c: 161: {
  6211                           ;lcd.c: 162: lcd_dispadd(lcdline);
  6212  010448  501C               	movf	lcd_string@lcdline,w,c
  6213  01044A  ECD8  F088         	call	_lcd_dispadd
  6214  01044E                     l1061:
  6215                           
  6216                           ;lcd.c: 163: }
  6217                           ;lcd.c: 164: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
  6218  01044E  0E00               	movlw	0
  6219  010450  6E3E               	movwf	_stradd,c
  6220  010452  D03A               	goto	l1062
  6221  010454                     
  6222                           ;lcd.c: 165: {
  6223                           ;lcd.c: 166: lcdata = lcdstring[stradd];
  6224  010454  503E               	movf	_stradd,w,c
  6225  010456  0D01               	mullw	1
  6226  010458  C01A  F01D         	movff	lcd_string@lcdstring,??_lcd_string
  6227  01045C  C01B  F01E         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  6228  010460  50F3               	movf	prodl,w,c
  6229  010462  261D               	addwf	??_lcd_string,f,c
  6230  010464  50F4               	movf	prodh,w,c
  6231  010466  221E               	addwfc	??_lcd_string+1,f,c
  6232  010468  C01D  FFF6         	movff	??_lcd_string,tblptrl
  6233  01046C  C01E  FFF7         	movff	??_lcd_string+1,tblptrh
  6234  010470  0E00               	movlw	low (__mediumconst shr (0+16))
  6235  010472  6EF8               	movwf	tblptru,c
  6236  010474  0E0E               	movlw	(high __ramtop+-1)
  6237  010476  64F7               	cpfsgt	tblptrh,c
  6238  010478  D003               	bra	u1677
  6239  01047A  0008               	tblrd		*
  6240  01047C  50F5               	movf	tablat,w,c
  6241  01047E  D005               	bra	u1670
  6242  010480                     u1677:
  6243  010480  CFF6 FFE9          	movff	tblptrl,fsr0l
  6244  010484  CFF7 FFEA          	movff	tblptrh,fsr0h
  6245  010488  50EF               	movf	indf0,w,c
  6246  01048A                     u1670:
  6247  01048A  6E40               	movwf	_lcdata,c
  6248                           
  6249                           ;lcd.c: 167: lcd_writeC(lcdstring[stradd]);
  6250  01048C  503E               	movf	_stradd,w,c
  6251  01048E  0D01               	mullw	1
  6252  010490  C01A  F01D         	movff	lcd_string@lcdstring,??_lcd_string
  6253  010494  C01B  F01E         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  6254  010498  50F3               	movf	prodl,w,c
  6255  01049A  261D               	addwf	??_lcd_string,f,c
  6256  01049C  50F4               	movf	prodh,w,c
  6257  01049E  221E               	addwfc	??_lcd_string+1,f,c
  6258  0104A0  C01D  FFF6         	movff	??_lcd_string,tblptrl
  6259  0104A4  C01E  FFF7         	movff	??_lcd_string+1,tblptrh
  6260  0104A8  0E00               	movlw	low (__mediumconst shr (0+16))
  6261  0104AA  6EF8               	movwf	tblptru,c
  6262  0104AC  0E0E               	movlw	(high __ramtop+-1)
  6263  0104AE  64F7               	cpfsgt	tblptrh,c
  6264  0104B0  D003               	bra	u1687
  6265  0104B2  0008               	tblrd		*
  6266  0104B4  50F5               	movf	tablat,w,c
  6267  0104B6  D005               	bra	u1680
  6268  0104B8                     u1687:
  6269  0104B8  CFF6 FFE9          	movff	tblptrl,fsr0l
  6270  0104BC  CFF7 FFEA          	movff	tblptrh,fsr0h
  6271  0104C0  50EF               	movf	indf0,w,c
  6272  0104C2                     u1680:
  6273  0104C2  EC7E  F085         	call	_lcd_writeC
  6274  0104C6  2A3E               	incf	_stradd,f,c
  6275  0104C8                     l1062:
  6276  0104C8  503E               	movf	_stradd,w,c
  6277  0104CA  0D01               	mullw	1
  6278  0104CC  C01A  F01D         	movff	lcd_string@lcdstring,??_lcd_string
  6279  0104D0  C01B  F01E         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  6280  0104D4  50F3               	movf	prodl,w,c
  6281  0104D6  261D               	addwf	??_lcd_string,f,c
  6282  0104D8  50F4               	movf	prodh,w,c
  6283  0104DA  221E               	addwfc	??_lcd_string+1,f,c
  6284  0104DC  C01D  FFF6         	movff	??_lcd_string,tblptrl
  6285  0104E0  C01E  FFF7         	movff	??_lcd_string+1,tblptrh
  6286  0104E4  0E00               	movlw	low (__mediumconst shr (0+16))
  6287  0104E6  6EF8               	movwf	tblptru,c
  6288  0104E8  0E0E               	movlw	(high __ramtop+-1)
  6289  0104EA  64F7               	cpfsgt	tblptrh,c
  6290  0104EC  D003               	bra	u1697
  6291  0104EE  0008               	tblrd		*
  6292  0104F0  50F5               	movf	tablat,w,c
  6293  0104F2  D005               	bra	u1690
  6294  0104F4                     u1697:
  6295  0104F4  CFF6 FFE9          	movff	tblptrl,fsr0l
  6296  0104F8  CFF7 FFEA          	movff	tblptrh,fsr0h
  6297  0104FC  50EF               	movf	indf0,w,c
  6298  0104FE                     u1690:
  6299  0104FE  0900               	iorlw	0
  6300  010500  B4D8               	btfsc	status,2,c
  6301  010502  0012               	return	
  6302  010504  D7A7               	goto	l1063
  6303  010506                     __end_of_lcd_string:
  6304                           	opt stack 0
  6305                           tblptru	equ	0xFF8
  6306                           tblptrh	equ	0xFF7
  6307                           tblptrl	equ	0xFF6
  6308                           tablat	equ	0xFF5
  6309                           prodh	equ	0xFF4
  6310                           prodl	equ	0xFF3
  6311                           indf0	equ	0xFEF
  6312                           postinc0	equ	0xFEE
  6313                           fsr0h	equ	0xFEA
  6314                           fsr0l	equ	0xFE9
  6315                           wreg	equ	0xFE8
  6316                           indf2	equ	0xFDF
  6317                           fsr2h	equ	0xFDA
  6318                           fsr2l	equ	0xFD9
  6319                           status	equ	0xFD8
  6320                           
  6321 ;; *************** function _displ_hex *****************
  6322 ;; Defined at:
  6323 ;;		line 129 in file "lcd.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  hexnum          3   28[COMRAM] unsigned um
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  value           8    0[BANK0 ] unsigned char [8]
  6328 ;;  hexnumsave      3    8[BANK0 ] unsigned um
  6329 ;;  i               1   11[BANK0 ] char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      void 
  6332 ;; Registers used:
  6333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6339 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6343 ;;Total ram usage:       15 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    7
  6346 ;; This function calls:
  6347 ;;		___ltdiv
  6348 ;;		___ltmod
  6349 ;;		_lcd_writeC
  6350 ;; This function is called by:
  6351 ;;		_displ_credit
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text43
  6356  010688                     __ptext43:
  6357                           	opt stack 0
  6358  010688                     _displ_hex:
  6359                           	opt stack 22
  6360                           
  6361                           ;lcd.c: 131: signed char i = 0;
  6362                           
  6363                           ;incstack = 0
  6364  010688  0E00               	movlw	0
  6365  01068A  0100               	movlb	0	; () banked
  6366  01068C  6F8B               	movwf	displ_hex@i& (0+255),b
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;lcd.c: 132: uint8_t value[8];
  6370                           ;lcd.c: 133: uint24_t hexnumsave = hexnum;
  6371  01068E  C01D  F088         	movff	displ_hex@hexnum,displ_hex@hexnumsave
  6372  010692  C01E  F089         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
  6373  010696  C01F  F08A         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
  6374                           
  6375                           ;lcd.c: 134: while(hexnum > 0)
  6376  01069A  D02F               	goto	l1050
  6377  01069C                     
  6378                           ; BSR set to: 0
  6379                           ;lcd.c: 135: {
  6380                           ;lcd.c: 136: value[i] = hexnum % 10;
  6381                           
  6382                           ; BSR set to: 0
  6383  01069C  518B               	movf	displ_hex@i& (0+255),w,b
  6384  01069E  0D01               	mullw	1
  6385  0106A0  0E80               	movlw	low displ_hex@value
  6386  0106A2  24F3               	addwf	prodl,w,c
  6387  0106A4  6ED9               	movwf	fsr2l,c
  6388  0106A6  0E00               	movlw	high displ_hex@value
  6389  0106A8  20F4               	addwfc	prodh,w,c
  6390  0106AA  6EDA               	movwf	fsr2h,c
  6391  0106AC  C01D  F013         	movff	displ_hex@hexnum,___ltmod@dividend
  6392  0106B0  C01E  F014         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
  6393  0106B4  C01F  F015         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
  6394  0106B8  0E0A               	movlw	10
  6395  0106BA  6E16               	movwf	___ltmod@divisor,c
  6396  0106BC  0E00               	movlw	0
  6397  0106BE  6E17               	movwf	___ltmod@divisor+1,c
  6398  0106C0  0E00               	movlw	0
  6399  0106C2  6E18               	movwf	___ltmod@divisor+2,c
  6400  0106C4  EC06  F086         	call	___ltmod	;wreg free
  6401  0106C8  5013               	movf	?___ltmod,w,c
  6402  0106CA  6EDF               	movwf	indf2,c
  6403                           
  6404                           ;lcd.c: 137: hexnum /= 10;
  6405  0106CC  C01D  F013         	movff	displ_hex@hexnum,___ltdiv@dividend
  6406  0106D0  C01E  F014         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
  6407  0106D4  C01F  F015         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
  6408  0106D8  0E0A               	movlw	10
  6409  0106DA  6E16               	movwf	___ltdiv@divisor,c
  6410  0106DC  0E00               	movlw	0
  6411  0106DE  6E17               	movwf	___ltdiv@divisor+1,c
  6412  0106E0  0E00               	movlw	0
  6413  0106E2  6E18               	movwf	___ltdiv@divisor+2,c
  6414  0106E4  EC49  F085         	call	___ltdiv	;wreg free
  6415  0106E8  C013  F01D         	movff	?___ltdiv,displ_hex@hexnum
  6416  0106EC  C014  F01E         	movff	?___ltdiv+1,displ_hex@hexnum+1
  6417  0106F0  C015  F01F         	movff	?___ltdiv+2,displ_hex@hexnum+2
  6418                           
  6419                           ;lcd.c: 138: i = i + 1;
  6420  0106F4  0100               	movlb	0	; () banked
  6421  0106F6  298B               	incf	displ_hex@i& (0+255),w,b
  6422  0106F8  6F8B               	movwf	displ_hex@i& (0+255),b
  6423  0106FA                     l1050:
  6424                           
  6425                           ; BSR set to: 0
  6426                           
  6427                           ; BSR set to: 0
  6428  0106FA  501D               	movf	displ_hex@hexnum,w,c
  6429  0106FC  101E               	iorwf	displ_hex@hexnum+1,w,c
  6430  0106FE  101F               	iorwf	displ_hex@hexnum+2,w,c
  6431  010700  B4D8               	btfsc	status,2,c
  6432  010702  D00E               	goto	l1053
  6433  010704  D7CB               	goto	l1051
  6434  010706                     
  6435                           ; BSR set to: 0
  6436                           ;lcd.c: 142: {
  6437                           ;lcd.c: 143: i--;
  6438                           
  6439                           ; BSR set to: 0
  6440  010706  078B               	decf	displ_hex@i& (0+255),f,b
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;lcd.c: 144: lcd_writeC(value[i] | 0x30);
  6444  010708  518B               	movf	displ_hex@i& (0+255),w,b
  6445  01070A  0D01               	mullw	1
  6446  01070C  0E80               	movlw	low displ_hex@value
  6447  01070E  24F3               	addwf	prodl,w,c
  6448  010710  6ED9               	movwf	fsr2l,c
  6449  010712  0E00               	movlw	high displ_hex@value
  6450  010714  20F4               	addwfc	prodh,w,c
  6451  010716  6EDA               	movwf	fsr2h,c
  6452  010718  50DF               	movf	indf2,w,c
  6453  01071A  0930               	iorlw	48
  6454  01071C  EC7E  F085         	call	_lcd_writeC
  6455  010720                     l1053:
  6456  010720  0100               	movlb	0	; () banked
  6457  010722  518B               	movf	displ_hex@i& (0+255),w,b
  6458  010724  0A80               	xorlw	128
  6459  010726  0F7F               	addlw	-129
  6460  010728  B0D8               	btfsc	status,0,c
  6461  01072A  D7ED               	goto	l1054
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;lcd.c: 145: }
  6465                           ;lcd.c: 147: if(hexnumsave == 0)
  6466                           
  6467                           ; BSR set to: 0
  6468  01072C  5188               	movf	displ_hex@hexnumsave& (0+255),w,b
  6469  01072E  1189               	iorwf	(displ_hex@hexnumsave+1)& (0+255),w,b
  6470  010730  118A               	iorwf	(displ_hex@hexnumsave+2)& (0+255),w,b
  6471  010732  A4D8               	btfss	status,2,c
  6472  010734  0012               	return	
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;lcd.c: 148: {
  6476                           ;lcd.c: 149: lcd_writeC(0x30);
  6477  010736  0E30               	movlw	48
  6478  010738  EC7E  F085         	call	_lcd_writeC
  6479  01073C  0012               	return	
  6480  01073E                     __end_of_displ_hex:
  6481                           	opt stack 0
  6482                           tblptru	equ	0xFF8
  6483                           tblptrh	equ	0xFF7
  6484                           tblptrl	equ	0xFF6
  6485                           tablat	equ	0xFF5
  6486                           prodh	equ	0xFF4
  6487                           prodl	equ	0xFF3
  6488                           indf0	equ	0xFEF
  6489                           postinc0	equ	0xFEE
  6490                           fsr0h	equ	0xFEA
  6491                           fsr0l	equ	0xFE9
  6492                           wreg	equ	0xFE8
  6493                           indf2	equ	0xFDF
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8
  6497                           
  6498 ;; *************** function _lcd_writeC *****************
  6499 ;; Defined at:
  6500 ;;		line 171 in file "lcd.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  lcdata          1    wreg     unsigned char 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  lcdata          1   24[COMRAM] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      void 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6518 ;;Total ram usage:        1 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    6
  6521 ;; This function calls:
  6522 ;;		_lcd_dispadd
  6523 ;;		_lcd_write
  6524 ;; This function is called by:
  6525 ;;		_displ_code
  6526 ;;		_displ_hex
  6527 ;;		_lcd_string
  6528 ;;		_lcd_test
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text44
  6533  010AFC                     __ptext44:
  6534                           	opt stack 0
  6535  010AFC                     _lcd_writeC:
  6536                           	opt stack 22
  6537                           
  6538                           ;incstack = 0
  6539                           ;lcd_writeC@lcdata stored from wreg
  6540  010AFC  6E19               	movwf	lcd_writeC@lcdata,c
  6541  010AFE  8487               	bsf	3975,2,c	;# 
  6542                           
  6543                           ;lcd.c: 176: lcd_write(lcdata);
  6544  010B00  5019               	movf	lcd_writeC@lcdata,w,c
  6545  010B02  ECE0  F087         	call	_lcd_write
  6546                           
  6547                           ;lcd.c: 180: switch(bflag)
  6548  010B06  D021               	goto	l1068
  6549  010B08  0EA5               	movlw	low _line2
  6550  010B0A  6EF6               	movwf	tblptrl,c
  6551  010B0C                     	if	1	;There is more than 1 active tblptr byte
  6552  010B0C  0EFE               	movlw	high _line2
  6553  010B0E  6EF7               	movwf	tblptrh,c
  6554  010B10                     	endif
  6555  010B10                     	if	1	;There are 3 active tblptr bytes
  6556  010B10  0E00               	movlw	low (_line2 shr (0+16))
  6557  010B12  6EF8               	movwf	tblptru,c
  6558  010B14                     	endif
  6559  010B14  0008               	tblrd		*
  6560  010B16  50F5               	movf	tablat,w,c
  6561  010B18  ECD8  F088         	call	_lcd_dispadd
  6562                           
  6563                           ;lcd.c: 183: break;
  6564  010B1C  D020               	goto	l1070
  6565  010B1E  0EA4               	movlw	low _line3
  6566  010B20  6EF6               	movwf	tblptrl,c
  6567  010B22                     	if	1	;There is more than 1 active tblptr byte
  6568  010B22  0EFE               	movlw	high _line3
  6569  010B24  6EF7               	movwf	tblptrh,c
  6570  010B26                     	endif
  6571  010B26                     	if	1	;There are 3 active tblptr bytes
  6572  010B26  0E00               	movlw	low (_line3 shr (0+16))
  6573  010B28  6EF8               	movwf	tblptru,c
  6574  010B2A                     	endif
  6575  010B2A  0008               	tblrd		*
  6576  010B2C  50F5               	movf	tablat,w,c
  6577  010B2E  ECD8  F088         	call	_lcd_dispadd
  6578                           
  6579                           ;lcd.c: 185: break;
  6580  010B32  D015               	goto	l1070
  6581  010B34  0EA3               	movlw	low _line4
  6582  010B36  6EF6               	movwf	tblptrl,c
  6583  010B38                     	if	1	;There is more than 1 active tblptr byte
  6584  010B38  0EFE               	movlw	high _line4
  6585  010B3A  6EF7               	movwf	tblptrh,c
  6586  010B3C                     	endif
  6587  010B3C                     	if	1	;There are 3 active tblptr bytes
  6588  010B3C  0E00               	movlw	low (_line4 shr (0+16))
  6589  010B3E  6EF8               	movwf	tblptru,c
  6590  010B40                     	endif
  6591  010B40  0008               	tblrd		*
  6592  010B42  50F5               	movf	tablat,w,c
  6593  010B44  ECD8  F088         	call	_lcd_dispadd
  6594                           
  6595                           ;lcd.c: 187: }
  6596  010B48  D00A               	goto	l1070
  6597  010B4A                     l1068:
  6598  010B4A  5042               	movf	_bflag,w,c
  6599                           
  6600                           ; Switch size 1, requested type "space"
  6601                           ; Number of cases is 3, Range of values is 19 to 83
  6602                           ; switch strategies available:
  6603                           ; Name         Instructions Cycles
  6604                           ; simple_byte           10     6 (average)
  6605                           ;	Chosen strategy is simple_byte
  6606  010B4C  0A13               	xorlw	19	; case 19
  6607  010B4E  B4D8               	btfsc	status,2,c
  6608  010B50  D7DB               	goto	l1069
  6609  010B52  0A34               	xorlw	52	; case 39
  6610  010B54  B4D8               	btfsc	status,2,c
  6611  010B56  D7EE               	goto	l1072
  6612  010B58  0A74               	xorlw	116	; case 83
  6613  010B5A  B4D8               	btfsc	status,2,c
  6614  010B5C  D7E0               	goto	l1071
  6615  010B5E                     l1070:
  6616  010B5E  9487               	bcf	3975,2,c	;# 
  6617  010B60  0012               	return		;funcret
  6618  010B62                     __end_of_lcd_writeC:
  6619                           	opt stack 0
  6620                           tblptru	equ	0xFF8
  6621                           tblptrh	equ	0xFF7
  6622                           tblptrl	equ	0xFF6
  6623                           tablat	equ	0xFF5
  6624                           prodh	equ	0xFF4
  6625                           prodl	equ	0xFF3
  6626                           indf0	equ	0xFEF
  6627                           postinc0	equ	0xFEE
  6628                           fsr0h	equ	0xFEA
  6629                           fsr0l	equ	0xFE9
  6630                           wreg	equ	0xFE8
  6631                           indf2	equ	0xFDF
  6632                           fsr2h	equ	0xFDA
  6633                           fsr2l	equ	0xFD9
  6634                           status	equ	0xFD8
  6635                           
  6636 ;; *************** function _lcd_dispadd *****************
  6637 ;; Defined at:
  6638 ;;		line 191 in file "lcd.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  lcdaddress      1    wreg     unsigned char 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  lcdaddress      1   22[COMRAM] unsigned char 
  6643 ;;  lcdatasave      1   23[COMRAM] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      void 
  6646 ;; Registers used:
  6647 ;;		wreg, status,2, status,0, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;Total ram usage:        2 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    5
  6660 ;; This function calls:
  6661 ;;		_lcd_write
  6662 ;; This function is called by:
  6663 ;;		_lcd_string
  6664 ;;		_lcd_writeC
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text45
  6669  0111B0                     __ptext45:
  6670                           	opt stack 0
  6671  0111B0                     _lcd_dispadd:
  6672                           	opt stack 22
  6673                           
  6674                           ;incstack = 0
  6675                           ;lcd_dispadd@lcdaddress stored from wreg
  6676  0111B0  6E17               	movwf	lcd_dispadd@lcdaddress,c
  6677                           
  6678                           ;lcd.c: 193: uint8_t lcdatasave = lcdata;
  6679  0111B2  C040  F018         	movff	_lcdata,lcd_dispadd@lcdatasave
  6680  0111B6  9487               	bcf	3975,2,c	;# 
  6681                           
  6682                           ;lcd.c: 196: lcd_write(lcdaddress);
  6683  0111B8  5017               	movf	lcd_dispadd@lcdaddress,w,c
  6684  0111BA  ECE0  F087         	call	_lcd_write
  6685  0111BE  8487               	bsf	3975,2,c	;# 
  6686                           
  6687                           ;lcd.c: 198: lcdata = lcdatasave;
  6688  0111C0  C018  F040         	movff	lcd_dispadd@lcdatasave,_lcdata
  6689  0111C4  0012               	return		;funcret
  6690  0111C6                     __end_of_lcd_dispadd:
  6691                           	opt stack 0
  6692                           tblptru	equ	0xFF8
  6693                           tblptrh	equ	0xFF7
  6694                           tblptrl	equ	0xFF6
  6695                           tablat	equ	0xFF5
  6696                           prodh	equ	0xFF4
  6697                           prodl	equ	0xFF3
  6698                           indf0	equ	0xFEF
  6699                           postinc0	equ	0xFEE
  6700                           fsr0h	equ	0xFEA
  6701                           fsr0l	equ	0xFE9
  6702                           wreg	equ	0xFE8
  6703                           indf2	equ	0xFDF
  6704                           fsr2h	equ	0xFDA
  6705                           fsr2l	equ	0xFD9
  6706                           status	equ	0xFD8
  6707                           
  6708 ;; *************** function _lcd_write *****************
  6709 ;; Defined at:
  6710 ;;		line 203 in file "lcd.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  lcdata          1    wreg     unsigned char 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  lcdata          1   21[COMRAM] unsigned char 
  6715 ;;  savelatd        1   20[COMRAM] unsigned char 
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, status,0, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6729 ;;Total ram usage:        2 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    4
  6732 ;; This function calls:
  6733 ;;		_lcd_clockE
  6734 ;;		_read_busy
  6735 ;; This function is called by:
  6736 ;;		_lcd_init
  6737 ;;		_displ_note
  6738 ;;		_lcd_string
  6739 ;;		_lcd_writeC
  6740 ;;		_lcd_dispadd
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text46
  6745  010FC0                     __ptext46:
  6746                           	opt stack 0
  6747  010FC0                     _lcd_write:
  6748                           	opt stack 23
  6749                           
  6750                           ;incstack = 0
  6751                           ;lcd_write@lcdata stored from wreg
  6752  010FC0  6E16               	movwf	lcd_write@lcdata,c
  6753                           
  6754                           ;lcd.c: 205: uint8_t savelatd = LATD;
  6755  010FC2  CF86 F015          	movff	3974,lcd_write@savelatd	;volatile
  6756                           
  6757                           ;lcd.c: 208: bflag = read_busy();
  6758  010FC6  ECCC  F086         	call	_read_busy	;wreg free
  6759  010FCA  D002               	goto	L14
  6760  010FCC                     
  6761                           ;lcd.c: 210: {
  6762                           ;lcd.c: 211: bflag = read_busy();
  6763  010FCC  ECCC  F086         	call	_read_busy	;wreg free
  6764  010FD0                     L14:
  6765  010FD0  6E42               	movwf	_bflag,c
  6766  010FD2  BE42               	btfsc	_bflag,7,c
  6767  010FD4  D7FB               	goto	l1080
  6768                           
  6769                           ;lcd.c: 212: }
  6770                           ;lcd.c: 213: LATD = (lcdata >> 4) & 0x0F;
  6771  010FD6  3816               	swapf	lcd_write@lcdata,w,c
  6772  010FD8  0B0F               	andlw	15
  6773  010FDA  0B0F               	andlw	15
  6774  010FDC  6E86               	movwf	3974,c	;volatile
  6775                           
  6776                           ;lcd.c: 215: lcd_clockE();
  6777  010FDE  EC0F  F089         	call	_lcd_clockE	;wreg free
  6778                           
  6779                           ;lcd.c: 217: LATD = lcdata & 0x0F;
  6780  010FE2  5016               	movf	lcd_write@lcdata,w,c
  6781  010FE4  0B0F               	andlw	15
  6782  010FE6  6E86               	movwf	3974,c	;volatile
  6783                           
  6784                           ;lcd.c: 218: lcd_clockE();
  6785  010FE8  EC0F  F089         	call	_lcd_clockE	;wreg free
  6786                           
  6787                           ;lcd.c: 219: LATD = savelatd;
  6788  010FEC  C015  FF86         	movff	lcd_write@savelatd,3974	;volatile
  6789  010FF0  0012               	return		;funcret
  6790  010FF2                     __end_of_lcd_write:
  6791                           	opt stack 0
  6792                           tblptru	equ	0xFF8
  6793                           tblptrh	equ	0xFF7
  6794                           tblptrl	equ	0xFF6
  6795                           tablat	equ	0xFF5
  6796                           prodh	equ	0xFF4
  6797                           prodl	equ	0xFF3
  6798                           indf0	equ	0xFEF
  6799                           postinc0	equ	0xFEE
  6800                           fsr0h	equ	0xFEA
  6801                           fsr0l	equ	0xFE9
  6802                           wreg	equ	0xFE8
  6803                           indf2	equ	0xFDF
  6804                           fsr2h	equ	0xFDA
  6805                           fsr2l	equ	0xFD9
  6806                           status	equ	0xFD8
  6807                           
  6808 ;; *************** function _read_busy *****************
  6809 ;; Defined at:
  6810 ;;		line 234 in file "lcd.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;  savelatd        1   19[COMRAM] unsigned char 
  6815 ;;  savelate        1   18[COMRAM] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      char 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;Total ram usage:        2 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    3
  6832 ;; This function calls:
  6833 ;;		_lcd_clockH
  6834 ;;		_lcd_clockL
  6835 ;; This function is called by:
  6836 ;;		_lcd_write
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text47
  6841  010D98                     __ptext47:
  6842                           	opt stack 0
  6843  010D98                     _read_busy:
  6844                           	opt stack 23
  6845                           
  6846                           ;lcd.c: 236: uint8_t savelate = LATE;
  6847                           
  6848                           ;incstack = 0
  6849  010D98  CF87 F013          	movff	3975,read_busy@savelate	;volatile
  6850                           
  6851                           ;lcd.c: 237: uint8_t savelatd = LATD;
  6852  010D9C  CF86 F014          	movff	3974,read_busy@savelatd	;volatile
  6853  010DA0  9487               	bcf	3975,2,c	;# 
  6854  010DA2  8287               	bsf	3975,1,c	;# 
  6855                           
  6856                           ;lcd.c: 240: TRISD = (TRISD | 0x0F);
  6857  010DA4  508B               	movf	3979,w,c	;volatile
  6858  010DA6  090F               	iorlw	15
  6859  010DA8  6E8B               	movwf	3979,c	;volatile
  6860                           
  6861                           ;lcd.c: 241: lcd_clockH();
  6862  010DAA  EC2B  F089         	call	_lcd_clockH	;wreg free
  6863                           
  6864                           ;lcd.c: 242: bflag = (PORTD << 4);
  6865  010DAE  3890               	swapf	3984,w,c	;volatile
  6866  010DB0  0BF0               	andlw	240
  6867  010DB2  6E42               	movwf	_bflag,c
  6868                           
  6869                           ;lcd.c: 243: lcd_clockL();
  6870  010DB4  EC27  F089         	call	_lcd_clockL	;wreg free
  6871                           
  6872                           ;lcd.c: 244: lcd_clockH();
  6873  010DB8  EC2B  F089         	call	_lcd_clockH	;wreg free
  6874                           
  6875                           ;lcd.c: 245: bflag = bflag | (PORTD & 0x0F);
  6876  010DBC  5090               	movf	3984,w,c	;volatile
  6877  010DBE  0B0F               	andlw	15
  6878  010DC0  1042               	iorwf	_bflag,w,c
  6879  010DC2  6E42               	movwf	_bflag,c
  6880  010DC4  9087               	bcf	3975,0,c	;# 
  6881                           
  6882                           ;lcd.c: 247: TRISD = (TRISD & 0xF0);
  6883  010DC6  508B               	movf	3979,w,c	;volatile
  6884  010DC8  0BF0               	andlw	240
  6885  010DCA  6E8B               	movwf	3979,c	;volatile
  6886  010DCC  9287               	bcf	3975,1,c	;# 
  6887                           
  6888                           ;lcd.c: 249: LATD = savelatd;
  6889  010DCE  C014  FF86         	movff	read_busy@savelatd,3974	;volatile
  6890                           
  6891                           ;lcd.c: 250: LATE = savelate;
  6892  010DD2  C013  FF87         	movff	read_busy@savelate,3975	;volatile
  6893                           
  6894                           ;lcd.c: 251: return(bflag);
  6895  010DD6  5042               	movf	_bflag,w,c
  6896  010DD8  0012               	return	
  6897  010DDA                     __end_of_read_busy:
  6898                           	opt stack 0
  6899                           tblptru	equ	0xFF8
  6900                           tblptrh	equ	0xFF7
  6901                           tblptrl	equ	0xFF6
  6902                           tablat	equ	0xFF5
  6903                           prodh	equ	0xFF4
  6904                           prodl	equ	0xFF3
  6905                           indf0	equ	0xFEF
  6906                           postinc0	equ	0xFEE
  6907                           fsr0h	equ	0xFEA
  6908                           fsr0l	equ	0xFE9
  6909                           wreg	equ	0xFE8
  6910                           indf2	equ	0xFDF
  6911                           fsr2h	equ	0xFDA
  6912                           fsr2l	equ	0xFD9
  6913                           status	equ	0xFD8
  6914                           
  6915 ;; *************** function _lcd_clockL *****************
  6916 ;; Defined at:
  6917 ;;		line 266 in file "lcd.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		None
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6935 ;;Total ram usage:        0 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    2
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_read_busy
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text48
  6946  01124E                     __ptext48:
  6947                           	opt stack 0
  6948  01124E                     _lcd_clockL:
  6949                           	opt stack 23
  6950                           
  6951                           ;incstack = 0
  6952  01124E  9087               	bcf	3975,0,c	;# 
  6953                           
  6954                           ;lcd.c: 269: _delay((unsigned long)((1)*(12000000/4000000.0)));
  6955  011250  D000               	nop2		;2 cycle nop
  6956  011252  F000               	nop	
  6957  011254  0012               	return		;funcret
  6958  011256                     __end_of_lcd_clockL:
  6959                           	opt stack 0
  6960                           tblptru	equ	0xFF8
  6961                           tblptrh	equ	0xFF7
  6962                           tblptrl	equ	0xFF6
  6963                           tablat	equ	0xFF5
  6964                           prodh	equ	0xFF4
  6965                           prodl	equ	0xFF3
  6966                           indf0	equ	0xFEF
  6967                           postinc0	equ	0xFEE
  6968                           fsr0h	equ	0xFEA
  6969                           fsr0l	equ	0xFE9
  6970                           wreg	equ	0xFE8
  6971                           indf2	equ	0xFDF
  6972                           fsr2h	equ	0xFDA
  6973                           fsr2l	equ	0xFD9
  6974                           status	equ	0xFD8
  6975                           
  6976 ;; *************** function _lcd_clockH *****************
  6977 ;; Defined at:
  6978 ;;		line 258 in file "lcd.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;		None
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  1    wreg      void 
  6985 ;; Registers used:
  6986 ;;		None
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;Total ram usage:        0 bytes
  6997 ;; Hardware stack levels used:    1
  6998 ;; Hardware stack levels required when called:    2
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_read_busy
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text49
  7007  011256                     __ptext49:
  7008                           	opt stack 0
  7009  011256                     _lcd_clockH:
  7010                           	opt stack 23
  7011                           
  7012                           ;incstack = 0
  7013  011256  8087               	bsf	3975,0,c	;# 
  7014                           
  7015                           ;lcd.c: 261: _delay((unsigned long)((1)*(12000000/4000000.0)));
  7016  011258  D000               	nop2		;2 cycle nop
  7017  01125A  F000               	nop	
  7018  01125C  0012               	return		;funcret
  7019  01125E                     __end_of_lcd_clockH:
  7020                           	opt stack 0
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           prodh	equ	0xFF4
  7026                           prodl	equ	0xFF3
  7027                           indf0	equ	0xFEF
  7028                           postinc0	equ	0xFEE
  7029                           fsr0h	equ	0xFEA
  7030                           fsr0l	equ	0xFE9
  7031                           wreg	equ	0xFE8
  7032                           indf2	equ	0xFDF
  7033                           fsr2h	equ	0xFDA
  7034                           fsr2l	equ	0xFD9
  7035                           status	equ	0xFD8
  7036                           
  7037 ;; *************** function _lcd_clockE *****************
  7038 ;; Defined at:
  7039 ;;		line 274 in file "lcd.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;		None
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      void 
  7046 ;; Registers used:
  7047 ;;		None
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7057 ;;Total ram usage:        0 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    2
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_lcd_init
  7064 ;;		_lcd_write
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text50
  7069  01121E                     __ptext50:
  7070                           	opt stack 0
  7071  01121E                     _lcd_clockE:
  7072                           	opt stack 24
  7073                           
  7074                           ;incstack = 0
  7075  01121E  8087               	bsf	3975,0,c	;# 
  7076                           
  7077                           ;lcd.c: 277: _delay((unsigned long)((1)*(12000000/4000000.0)));
  7078  011220  D000               	nop2		;2 cycle nop
  7079  011222  F000               	nop	
  7080  011224  9087               	bcf	3975,0,c	;# 
  7081                           
  7082                           ;lcd.c: 279: _delay((unsigned long)((1)*(12000000/4000000.0)));
  7083  011226  D000               	nop2		;2 cycle nop
  7084  011228  F000               	nop	
  7085  01122A  0012               	return		;funcret
  7086  01122C                     __end_of_lcd_clockE:
  7087                           	opt stack 0
  7088                           tblptru	equ	0xFF8
  7089                           tblptrh	equ	0xFF7
  7090                           tblptrl	equ	0xFF6
  7091                           tablat	equ	0xFF5
  7092                           prodh	equ	0xFF4
  7093                           prodl	equ	0xFF3
  7094                           indf0	equ	0xFEF
  7095                           postinc0	equ	0xFEE
  7096                           fsr0h	equ	0xFEA
  7097                           fsr0l	equ	0xFE9
  7098                           wreg	equ	0xFE8
  7099                           indf2	equ	0xFDF
  7100                           fsr2h	equ	0xFDA
  7101                           fsr2l	equ	0xFD9
  7102                           status	equ	0xFD8
  7103                           
  7104 ;; *************** function ___ltmod *****************
  7105 ;; Defined at:
  7106 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltmod.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  dividend        3   18[COMRAM] unsigned um
  7109 ;;  divisor         3   21[COMRAM] unsigned um
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  counter         1   24[COMRAM] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  3   18[COMRAM] unsigned um
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7121 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;Total ram usage:        7 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:    2
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_displ_hex
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text51
  7136  010C0C                     __ptext51:
  7137                           	opt stack 0
  7138  010C0C                     ___ltmod:
  7139                           	opt stack 26
  7140                           
  7141                           ;incstack = 0
  7142  010C0C  5016               	movf	___ltmod@divisor,w,c
  7143  010C0E  1017               	iorwf	___ltmod@divisor+1,w,c
  7144  010C10  1018               	iorwf	___ltmod@divisor+2,w,c
  7145  010C12  B4D8               	btfsc	status,2,c
  7146  010C14  D01E               	goto	l2526
  7147  010C16  0E01               	movlw	1
  7148  010C18  6E19               	movwf	___ltmod@counter,c
  7149  010C1A  D005               	goto	l2521
  7150  010C1C  90D8               	bcf	status,0,c
  7151  010C1E  3616               	rlcf	___ltmod@divisor,f,c
  7152  010C20  3617               	rlcf	___ltmod@divisor+1,f,c
  7153  010C22  3618               	rlcf	___ltmod@divisor+2,f,c
  7154  010C24  2A19               	incf	___ltmod@counter,f,c
  7155  010C26                     l2521:
  7156  010C26  AE18               	btfss	___ltmod@divisor+2,7,c
  7157  010C28  D7F9               	goto	l2522
  7158  010C2A                     u1790:
  7159  010C2A  5016               	movf	___ltmod@divisor,w,c
  7160  010C2C  5C13               	subwf	___ltmod@dividend,w,c
  7161  010C2E  5017               	movf	___ltmod@divisor+1,w,c
  7162  010C30  5814               	subwfb	___ltmod@dividend+1,w,c
  7163  010C32  5018               	movf	___ltmod@divisor+2,w,c
  7164  010C34  5815               	subwfb	___ltmod@dividend+2,w,c
  7165  010C36  A0D8               	btfss	status,0,c
  7166  010C38  D006               	goto	l2525
  7167  010C3A  5016               	movf	___ltmod@divisor,w,c
  7168  010C3C  5E13               	subwf	___ltmod@dividend,f,c
  7169  010C3E  5017               	movf	___ltmod@divisor+1,w,c
  7170  010C40  5A14               	subwfb	___ltmod@dividend+1,f,c
  7171  010C42  5018               	movf	___ltmod@divisor+2,w,c
  7172  010C44  5A15               	subwfb	___ltmod@dividend+2,f,c
  7173  010C46                     l2525:
  7174  010C46  90D8               	bcf	status,0,c
  7175  010C48  3218               	rrcf	___ltmod@divisor+2,f,c
  7176  010C4A  3217               	rrcf	___ltmod@divisor+1,f,c
  7177  010C4C  3216               	rrcf	___ltmod@divisor,f,c
  7178  010C4E  2E19               	decfsz	___ltmod@counter,f,c
  7179  010C50  D7EC               	goto	u1790
  7180  010C52                     l2526:
  7181  010C52  C013  F013         	movff	___ltmod@dividend,?___ltmod
  7182  010C56  C014  F014         	movff	___ltmod@dividend+1,?___ltmod+1
  7183  010C5A  C015  F015         	movff	___ltmod@dividend+2,?___ltmod+2
  7184  010C5E  0012               	return		;funcret
  7185  010C60                     __end_of___ltmod:
  7186                           	opt stack 0
  7187                           tblptru	equ	0xFF8
  7188                           tblptrh	equ	0xFF7
  7189                           tblptrl	equ	0xFF6
  7190                           tablat	equ	0xFF5
  7191                           prodh	equ	0xFF4
  7192                           prodl	equ	0xFF3
  7193                           indf0	equ	0xFEF
  7194                           postinc0	equ	0xFEE
  7195                           fsr0h	equ	0xFEA
  7196                           fsr0l	equ	0xFE9
  7197                           wreg	equ	0xFE8
  7198                           indf2	equ	0xFDF
  7199                           fsr2h	equ	0xFDA
  7200                           fsr2l	equ	0xFD9
  7201                           status	equ	0xFD8
  7202                           
  7203 ;; *************** function ___ltdiv *****************
  7204 ;; Defined at:
  7205 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltdiv.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  dividend        3   18[COMRAM] unsigned um
  7208 ;;  divisor         3   21[COMRAM] unsigned um
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;  quotient        3   24[COMRAM] unsigned um
  7211 ;;  counter         1   27[COMRAM] unsigned char 
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  3   18[COMRAM] unsigned um
  7214 ;; Registers used:
  7215 ;;		wreg, status,2, status,0
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7221 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7224 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7225 ;;Total ram usage:       10 bytes
  7226 ;; Hardware stack levels used:    1
  7227 ;; Hardware stack levels required when called:    2
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		_displ_hex
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text52
  7236  010A92                     __ptext52:
  7237                           	opt stack 0
  7238  010A92                     ___ltdiv:
  7239                           	opt stack 26
  7240                           
  7241                           ;incstack = 0
  7242  010A92  0E00               	movlw	0
  7243  010A94  6E19               	movwf	___ltdiv@quotient,c
  7244  010A96  0E00               	movlw	0
  7245  010A98  6E1A               	movwf	___ltdiv@quotient+1,c
  7246  010A9A  0E00               	movlw	0
  7247  010A9C  6E1B               	movwf	___ltdiv@quotient+2,c
  7248  010A9E  5016               	movf	___ltdiv@divisor,w,c
  7249  010AA0  1017               	iorwf	___ltdiv@divisor+1,w,c
  7250  010AA2  1018               	iorwf	___ltdiv@divisor+2,w,c
  7251  010AA4  B4D8               	btfsc	status,2,c
  7252  010AA6  D023               	goto	l2516
  7253  010AA8  0E01               	movlw	1
  7254  010AAA  6E1C               	movwf	___ltdiv@counter,c
  7255  010AAC  D005               	goto	l2511
  7256  010AAE  90D8               	bcf	status,0,c
  7257  010AB0  3616               	rlcf	___ltdiv@divisor,f,c
  7258  010AB2  3617               	rlcf	___ltdiv@divisor+1,f,c
  7259  010AB4  3618               	rlcf	___ltdiv@divisor+2,f,c
  7260  010AB6  2A1C               	incf	___ltdiv@counter,f,c
  7261  010AB8                     l2511:
  7262  010AB8  AE18               	btfss	___ltdiv@divisor+2,7,c
  7263  010ABA  D7F9               	goto	l2512
  7264  010ABC                     u1760:
  7265  010ABC  90D8               	bcf	status,0,c
  7266  010ABE  3619               	rlcf	___ltdiv@quotient,f,c
  7267  010AC0  361A               	rlcf	___ltdiv@quotient+1,f,c
  7268  010AC2  361B               	rlcf	___ltdiv@quotient+2,f,c
  7269  010AC4  5016               	movf	___ltdiv@divisor,w,c
  7270  010AC6  5C13               	subwf	___ltdiv@dividend,w,c
  7271  010AC8  5017               	movf	___ltdiv@divisor+1,w,c
  7272  010ACA  5814               	subwfb	___ltdiv@dividend+1,w,c
  7273  010ACC  5018               	movf	___ltdiv@divisor+2,w,c
  7274  010ACE  5815               	subwfb	___ltdiv@dividend+2,w,c
  7275  010AD0  A0D8               	btfss	status,0,c
  7276  010AD2  D007               	goto	l2515
  7277  010AD4  5016               	movf	___ltdiv@divisor,w,c
  7278  010AD6  5E13               	subwf	___ltdiv@dividend,f,c
  7279  010AD8  5017               	movf	___ltdiv@divisor+1,w,c
  7280  010ADA  5A14               	subwfb	___ltdiv@dividend+1,f,c
  7281  010ADC  5018               	movf	___ltdiv@divisor+2,w,c
  7282  010ADE  5A15               	subwfb	___ltdiv@dividend+2,f,c
  7283  010AE0  8019               	bsf	___ltdiv@quotient,0,c
  7284  010AE2                     l2515:
  7285  010AE2  90D8               	bcf	status,0,c
  7286  010AE4  3218               	rrcf	___ltdiv@divisor+2,f,c
  7287  010AE6  3217               	rrcf	___ltdiv@divisor+1,f,c
  7288  010AE8  3216               	rrcf	___ltdiv@divisor,f,c
  7289  010AEA  2E1C               	decfsz	___ltdiv@counter,f,c
  7290  010AEC  D7E7               	goto	u1760
  7291  010AEE                     l2516:
  7292  010AEE  C019  F013         	movff	___ltdiv@quotient,?___ltdiv
  7293  010AF2  C01A  F014         	movff	___ltdiv@quotient+1,?___ltdiv+1
  7294  010AF6  C01B  F015         	movff	___ltdiv@quotient+2,?___ltdiv+2
  7295  010AFA  0012               	return		;funcret
  7296  010AFC                     __end_of___ltdiv:
  7297                           	opt stack 0
  7298                           tblptru	equ	0xFF8
  7299                           tblptrh	equ	0xFF7
  7300                           tblptrl	equ	0xFF6
  7301                           tablat	equ	0xFF5
  7302                           prodh	equ	0xFF4
  7303                           prodl	equ	0xFF3
  7304                           indf0	equ	0xFEF
  7305                           postinc0	equ	0xFEE
  7306                           fsr0h	equ	0xFEA
  7307                           fsr0l	equ	0xFE9
  7308                           wreg	equ	0xFE8
  7309                           indf2	equ	0xFDF
  7310                           fsr2h	equ	0xFDA
  7311                           fsr2l	equ	0xFD9
  7312                           status	equ	0xFD8
  7313                           
  7314 ;; *************** function _credit_check *****************
  7315 ;; Defined at:
  7316 ;;		line 69 in file "vend.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;		None
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      unsigned char 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7334 ;;Total ram usage:        0 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:    3
  7337 ;; This function calls:
  7338 ;;		_DATAEE_ReadByte
  7339 ;; This function is called by:
  7340 ;;		_displ_credit
  7341 ;;		_vend_init
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text53
  7346  0110A0                     __ptext53:
  7347                           	opt stack 0
  7348  0110A0                     _credit_check:
  7349                           	opt stack 26
  7350                           
  7351                           ;vend.c: 71: cash = DATAEE_ReadByte(credmem);
  7352                           
  7353                           ;incstack = 0
  7354  0110A0  0E7E               	movlw	low _credmem
  7355  0110A2  6EF6               	movwf	tblptrl,c
  7356  0110A4                     	if	1	;There is more than 1 active tblptr byte
  7357  0110A4  0EFE               	movlw	high _credmem
  7358  0110A6  6EF7               	movwf	tblptrh,c
  7359  0110A8                     	endif
  7360  0110A8                     	if	1	;There are 3 active tblptr bytes
  7361  0110A8  0E00               	movlw	low (_credmem shr (0+16))
  7362  0110AA  6EF8               	movwf	tblptru,c
  7363  0110AC                     	endif
  7364  0110AC  0009               	tblrd		*+
  7365  0110AE  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  7366  0110B2  000A               	tblrd		*-
  7367  0110B4  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7368  0110B8  EC9E  F088         	call	_DATAEE_ReadByte	;wreg free
  7369  0110BC  6E2D               	movwf	_cash,c	;volatile
  7370                           
  7371                           ;vend.c: 72: return(cash);
  7372  0110BE  502D               	movf	_cash,w,c	;volatile
  7373  0110C0  0012               	return	
  7374  0110C2                     __end_of_credit_check:
  7375                           	opt stack 0
  7376                           tblptru	equ	0xFF8
  7377                           tblptrh	equ	0xFF7
  7378                           tblptrl	equ	0xFF6
  7379                           tablat	equ	0xFF5
  7380                           prodh	equ	0xFF4
  7381                           prodl	equ	0xFF3
  7382                           indf0	equ	0xFEF
  7383                           postinc0	equ	0xFEE
  7384                           fsr0h	equ	0xFEA
  7385                           fsr0l	equ	0xFE9
  7386                           wreg	equ	0xFE8
  7387                           indf2	equ	0xFDF
  7388                           fsr2h	equ	0xFDA
  7389                           fsr2l	equ	0xFD9
  7390                           status	equ	0xFD8
  7391                           
  7392 ;; *************** function _credit_subtract *****************
  7393 ;; Defined at:
  7394 ;;		line 56 in file "vend.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;  credit          1    wreg     unsigned char 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  credit          1   22[COMRAM] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7412 ;;Total ram usage:        1 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:    3
  7415 ;; This function calls:
  7416 ;;		_DATAEE_ReadByte
  7417 ;;		_DATAEE_WriteByte
  7418 ;; This function is called by:
  7419 ;;		_main
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text54
  7424  010B62                     __ptext54:
  7425                           	opt stack 0
  7426  010B62                     _credit_subtract:
  7427                           	opt stack 27
  7428                           
  7429                           ;incstack = 0
  7430                           ;credit_subtract@credit stored from wreg
  7431  010B62  6E17               	movwf	credit_subtract@credit,c
  7432                           
  7433                           ;vend.c: 58: cash = DATAEE_ReadByte(credmem);
  7434  010B64  0E7E               	movlw	low _credmem
  7435  010B66  6EF6               	movwf	tblptrl,c
  7436  010B68                     	if	1	;There is more than 1 active tblptr byte
  7437  010B68  0EFE               	movlw	high _credmem
  7438  010B6A  6EF7               	movwf	tblptrh,c
  7439  010B6C                     	endif
  7440  010B6C                     	if	1	;There are 3 active tblptr bytes
  7441  010B6C  0E00               	movlw	low (_credmem shr (0+16))
  7442  010B6E  6EF8               	movwf	tblptru,c
  7443  010B70                     	endif
  7444  010B70  0009               	tblrd		*+
  7445  010B72  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  7446  010B76  000A               	tblrd		*-
  7447  010B78  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7448  010B7C  EC9E  F088         	call	_DATAEE_ReadByte	;wreg free
  7449  010B80  6E2D               	movwf	_cash,c	;volatile
  7450                           
  7451                           ;vend.c: 59: cash = (cash - credit) & 0xFF;
  7452  010B82  5017               	movf	credit_subtract@credit,w,c
  7453  010B84  0800               	sublw	0
  7454  010B86  242D               	addwf	_cash,w,c	;volatile
  7455  010B88  6E2D               	movwf	_cash,c	;volatile
  7456                           
  7457                           ;vend.c: 60: DATAEE_WriteByte(credmem, cash);
  7458  010B8A  0E7E               	movlw	low _credmem
  7459  010B8C  6EF6               	movwf	tblptrl,c
  7460  010B8E                     	if	1	;There is more than 1 active tblptr byte
  7461  010B8E  0EFE               	movlw	high _credmem
  7462  010B90  6EF7               	movwf	tblptrh,c
  7463  010B92                     	endif
  7464  010B92                     	if	1	;There are 3 active tblptr bytes
  7465  010B92  0E00               	movlw	low (_credmem shr (0+16))
  7466  010B94  6EF8               	movwf	tblptru,c
  7467  010B96                     	endif
  7468  010B96  0009               	tblrd		*+
  7469  010B98  CFF5 F013          	movff	tablat,DATAEE_WriteByte@bAdd
  7470  010B9C  000A               	tblrd		*-
  7471  010B9E  CFF5 F014          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7472  010BA2  C02D  F015         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  7473  010BA6  EC27  F087         	call	_DATAEE_WriteByte	;wreg free
  7474                           
  7475                           ;vend.c: 61: if(cash == 0)
  7476  010BAA  502D               	movf	_cash,w,c	;volatile
  7477  010BAC  A4D8               	btfss	status,2,c
  7478  010BAE  0012               	return	
  7479                           
  7480                           ;vend.c: 62: {
  7481                           ;vend.c: 63: venflags.iscredit = 0;
  7482  010BB0  902B               	bcf	_venflags,0,c
  7483                           
  7484                           ;vend.c: 64: venflags.inscoin = 1;
  7485  010BB2  842B               	bsf	_venflags,2,c
  7486                           
  7487                           ;vend.c: 65: venflags.credisplay = 0;
  7488  010BB4  982B               	bcf	_venflags,4,c
  7489  010BB6  0012               	return	
  7490  010BB8                     __end_of_credit_subtract:
  7491                           	opt stack 0
  7492                           tblptru	equ	0xFF8
  7493                           tblptrh	equ	0xFF7
  7494                           tblptrl	equ	0xFF6
  7495                           tablat	equ	0xFF5
  7496                           prodh	equ	0xFF4
  7497                           prodl	equ	0xFF3
  7498                           indf0	equ	0xFEF
  7499                           postinc0	equ	0xFEE
  7500                           fsr0h	equ	0xFEA
  7501                           fsr0l	equ	0xFE9
  7502                           wreg	equ	0xFE8
  7503                           indf2	equ	0xFDF
  7504                           fsr2h	equ	0xFDA
  7505                           fsr2l	equ	0xFD9
  7506                           status	equ	0xFD8
  7507                           
  7508 ;; *************** function _credit_add *****************
  7509 ;; Defined at:
  7510 ;;		line 42 in file "vend.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  credit          1    wreg     unsigned char 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  credit          1   22[COMRAM] unsigned char 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      void 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7528 ;;Total ram usage:        1 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    3
  7531 ;; This function calls:
  7532 ;;		_DATAEE_ReadByte
  7533 ;;		_DATAEE_WriteByte
  7534 ;; This function is called by:
  7535 ;;		_main
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text55
  7540  010C60                     __ptext55:
  7541                           	opt stack 0
  7542  010C60                     _credit_add:
  7543                           	opt stack 27
  7544                           
  7545                           ;incstack = 0
  7546                           ;credit_add@credit stored from wreg
  7547  010C60  6E17               	movwf	credit_add@credit,c
  7548                           
  7549                           ;vend.c: 44: cash = DATAEE_ReadByte(credmem);
  7550  010C62  0E7E               	movlw	low _credmem
  7551  010C64  6EF6               	movwf	tblptrl,c
  7552  010C66                     	if	1	;There is more than 1 active tblptr byte
  7553  010C66  0EFE               	movlw	high _credmem
  7554  010C68  6EF7               	movwf	tblptrh,c
  7555  010C6A                     	endif
  7556  010C6A                     	if	1	;There are 3 active tblptr bytes
  7557  010C6A  0E00               	movlw	low (_credmem shr (0+16))
  7558  010C6C  6EF8               	movwf	tblptru,c
  7559  010C6E                     	endif
  7560  010C6E  0009               	tblrd		*+
  7561  010C70  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  7562  010C74  000A               	tblrd		*-
  7563  010C76  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7564  010C7A  EC9E  F088         	call	_DATAEE_ReadByte	;wreg free
  7565  010C7E  6E2D               	movwf	_cash,c	;volatile
  7566                           
  7567                           ;vend.c: 45: cash = cash + credit;
  7568  010C80  502D               	movf	_cash,w,c	;volatile
  7569  010C82  2417               	addwf	credit_add@credit,w,c
  7570  010C84  6E2D               	movwf	_cash,c	;volatile
  7571                           
  7572                           ;vend.c: 46: DATAEE_WriteByte(credmem, cash);
  7573  010C86  0E7E               	movlw	low _credmem
  7574  010C88  6EF6               	movwf	tblptrl,c
  7575  010C8A                     	if	1	;There is more than 1 active tblptr byte
  7576  010C8A  0EFE               	movlw	high _credmem
  7577  010C8C  6EF7               	movwf	tblptrh,c
  7578  010C8E                     	endif
  7579  010C8E                     	if	1	;There are 3 active tblptr bytes
  7580  010C8E  0E00               	movlw	low (_credmem shr (0+16))
  7581  010C90  6EF8               	movwf	tblptru,c
  7582  010C92                     	endif
  7583  010C92  0009               	tblrd		*+
  7584  010C94  CFF5 F013          	movff	tablat,DATAEE_WriteByte@bAdd
  7585  010C98  000A               	tblrd		*-
  7586  010C9A  CFF5 F014          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7587  010C9E  C02D  F015         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  7588  010CA2  EC27  F087         	call	_DATAEE_WriteByte	;wreg free
  7589                           
  7590                           ;vend.c: 47: if(cash != 0)
  7591  010CA6  502D               	movf	_cash,w,c	;volatile
  7592  010CA8  B4D8               	btfsc	status,2,c
  7593  010CAA  0012               	return	
  7594                           
  7595                           ;vend.c: 48: {
  7596                           ;vend.c: 49: venflags.iscredit = 1;
  7597  010CAC  802B               	bsf	_venflags,0,c
  7598                           
  7599                           ;vend.c: 50: venflags.inscoin = 0;
  7600  010CAE  942B               	bcf	_venflags,2,c
  7601                           
  7602                           ;vend.c: 51: venflags.credisplay = 1;
  7603  010CB0  882B               	bsf	_venflags,4,c
  7604  010CB2  0012               	return	
  7605  010CB4                     __end_of_credit_add:
  7606                           	opt stack 0
  7607                           tblptru	equ	0xFF8
  7608                           tblptrh	equ	0xFF7
  7609                           tblptrl	equ	0xFF6
  7610                           tablat	equ	0xFF5
  7611                           prodh	equ	0xFF4
  7612                           prodl	equ	0xFF3
  7613                           indf0	equ	0xFEF
  7614                           postinc0	equ	0xFEE
  7615                           fsr0h	equ	0xFEA
  7616                           fsr0l	equ	0xFE9
  7617                           wreg	equ	0xFE8
  7618                           indf2	equ	0xFDF
  7619                           fsr2h	equ	0xFDA
  7620                           fsr2l	equ	0xFD9
  7621                           status	equ	0xFD8
  7622                           
  7623 ;; *************** function _DATAEE_WriteByte *****************
  7624 ;; Defined at:
  7625 ;;		line 169 in file "mcc_generated_files/memory.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  bAdd            2   18[COMRAM] unsigned int 
  7628 ;;  bData           1   20[COMRAM] unsigned char 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  1    wreg      void 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7640 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7644 ;;Total ram usage:        4 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    2
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_credit_add
  7651 ;;		_credit_subtract
  7652 ;;		_save_notes
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text56
  7657  010E4E                     __ptext56:
  7658                           	opt stack 0
  7659  010E4E                     _DATAEE_WriteByte:
  7660                           	opt stack 27
  7661                           
  7662                           ;memory.c: 171: uint8_t GIEBitValue = INTCONbits.GIE;
  7663                           
  7664                           ;incstack = 0
  7665  010E4E  0E00               	movlw	0
  7666  010E50  BEF2               	btfsc	intcon,7,c	;volatile
  7667  010E52  0E01               	movlw	1
  7668  010E54  6E16               	movwf	DATAEE_WriteByte@GIEBitValue,c
  7669                           
  7670                           ;memory.c: 173: NVMADRH = ((bAdd >> 8) & 0x03);
  7671  010E56  5014               	movf	DATAEE_WriteByte@bAdd+1,w,c
  7672  010E58  0B03               	andlw	3
  7673  010E5A  6E7F               	movwf	3967,c	;volatile
  7674                           
  7675                           ;memory.c: 174: NVMADRL = (bAdd & 0xFF);
  7676  010E5C  C013  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  7677                           
  7678                           ;memory.c: 175: NVMDAT = bData;
  7679  010E60  C015  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  7680                           
  7681                           ;memory.c: 176: NVMCON1bits.NVMREG = 0;
  7682  010E64  0E3F               	movlw	-193
  7683  010E66  1681               	andwf	3969,f,c	;volsfr
  7684                           
  7685                           ;memory.c: 177: NVMCON1bits.WREN = 1;
  7686  010E68  8481               	bsf	3969,2,c	;volsfr
  7687                           
  7688                           ;memory.c: 178: INTCONbits.GIE = 0;
  7689  010E6A  9EF2               	bcf	intcon,7,c	;volatile
  7690                           
  7691                           ;memory.c: 179: NVMCON2 = 0x55;
  7692  010E6C  0E55               	movlw	85
  7693  010E6E  6E82               	movwf	3970,c	;volsfr
  7694                           
  7695                           ;memory.c: 180: NVMCON2 = 0xAA;
  7696  010E70  0EAA               	movlw	170
  7697  010E72  6E82               	movwf	3970,c	;volsfr
  7698                           
  7699                           ;memory.c: 181: NVMCON1bits.WR = 1;
  7700  010E74  8281               	bsf	3969,1,c	;volsfr
  7701  010E76                     
  7702                           ;memory.c: 184: {
  7703  010E76  B281               	btfsc	3969,1,c	;volsfr
  7704  010E78  D7FE               	goto	l234
  7705                           
  7706                           ;memory.c: 185: }
  7707                           ;memory.c: 187: NVMCON1bits.WREN = 0;
  7708  010E7A  9481               	bcf	3969,2,c	;volsfr
  7709                           
  7710                           ;memory.c: 188: INTCONbits.GIE = GIEBitValue;
  7711  010E7C  B016               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
  7712  010E7E  D002               	bra	u1365
  7713  010E80  9EF2               	bcf	intcon,7,c	;volatile
  7714  010E82  D001               	bra	u1366
  7715  010E84                     u1365:
  7716  010E84  8EF2               	bsf	intcon,7,c	;volatile
  7717  010E86                     u1366:
  7718  010E86  0012               	return		;funcret
  7719  010E88                     __end_of_DATAEE_WriteByte:
  7720                           	opt stack 0
  7721                           tblptru	equ	0xFF8
  7722                           tblptrh	equ	0xFF7
  7723                           tblptrl	equ	0xFF6
  7724                           tablat	equ	0xFF5
  7725                           prodh	equ	0xFF4
  7726                           prodl	equ	0xFF3
  7727                           intcon	equ	0xFF2
  7728                           indf0	equ	0xFEF
  7729                           postinc0	equ	0xFEE
  7730                           fsr0h	equ	0xFEA
  7731                           fsr0l	equ	0xFE9
  7732                           wreg	equ	0xFE8
  7733                           indf2	equ	0xFDF
  7734                           fsr2h	equ	0xFDA
  7735                           fsr2l	equ	0xFD9
  7736                           status	equ	0xFD8
  7737                           
  7738 ;; *************** function _DATAEE_ReadByte *****************
  7739 ;; Defined at:
  7740 ;;		line 191 in file "mcc_generated_files/memory.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  bAdd            2   18[COMRAM] unsigned int 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  1    wreg      unsigned char 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;Total ram usage:        2 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    2
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_credit_add
  7765 ;;		_credit_subtract
  7766 ;;		_credit_check
  7767 ;;		_mdb_init
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text57
  7772  01113C                     __ptext57:
  7773                           	opt stack 0
  7774  01113C                     _DATAEE_ReadByte:
  7775                           	opt stack 26
  7776                           
  7777                           ;memory.c: 193: NVMADRH = ((bAdd >> 8) & 0x03);
  7778                           
  7779                           ;incstack = 0
  7780  01113C  5014               	movf	DATAEE_ReadByte@bAdd+1,w,c
  7781  01113E  0B03               	andlw	3
  7782  011140  6E7F               	movwf	3967,c	;volatile
  7783                           
  7784                           ;memory.c: 194: NVMADRL = (bAdd & 0xFF);
  7785  011142  C013  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  7786                           
  7787                           ;memory.c: 195: NVMCON1bits.NVMREG = 0;
  7788  011146  0E3F               	movlw	-193
  7789  011148  1681               	andwf	3969,f,c	;volsfr
  7790                           
  7791                           ;memory.c: 196: NVMCON1bits.RD = 1;
  7792  01114A  8081               	bsf	3969,0,c	;volsfr
  7793                           
  7794                           ;memory.c: 197: __nop();
  7795  01114C  F000               	nop	
  7796                           
  7797                           ;memory.c: 198: __nop();
  7798  01114E  F000               	nop	
  7799                           
  7800                           ;memory.c: 200: return (NVMDAT);
  7801  011150  5080               	movf	3968,w,c	;volatile
  7802  011152  0012               	return	
  7803  011154                     __end_of_DATAEE_ReadByte:
  7804                           	opt stack 0
  7805                           tblptru	equ	0xFF8
  7806                           tblptrh	equ	0xFF7
  7807                           tblptrl	equ	0xFF6
  7808                           tablat	equ	0xFF5
  7809                           prodh	equ	0xFF4
  7810                           prodl	equ	0xFF3
  7811                           intcon	equ	0xFF2
  7812                           indf0	equ	0xFEF
  7813                           postinc0	equ	0xFEE
  7814                           fsr0h	equ	0xFEA
  7815                           fsr0l	equ	0xFE9
  7816                           wreg	equ	0xFE8
  7817                           indf2	equ	0xFDF
  7818                           fsr2h	equ	0xFDA
  7819                           fsr2l	equ	0xFD9
  7820                           status	equ	0xFD8
  7821                           
  7822 ;; *************** function _SYSTEM_Initialize *****************
  7823 ;; Defined at:
  7824 ;;		line 116 in file "mcc_generated_files/mcc.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      void 
  7831 ;; Registers used:
  7832 ;;		wreg, status,2, status,0, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7842 ;;Total ram usage:        0 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    3
  7845 ;; This function calls:
  7846 ;;		_CMP1_Initialize
  7847 ;;		_DAC1_Initialize
  7848 ;;		_EUSART1_Initialize
  7849 ;;		_EUSART2_Initialize
  7850 ;;		_INTERRUPT_Initialize
  7851 ;;		_OSCILLATOR_Initialize
  7852 ;;		_PIN_MANAGER_Initialize
  7853 ;;		_TMR1_Initialize
  7854 ;;		_TMR3_Initialize
  7855 ;;		_TMR5_Initialize
  7856 ;; This function is called by:
  7857 ;;		_main
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text58
  7862  011050                     __ptext58:
  7863                           	opt stack 0
  7864  011050                     _SYSTEM_Initialize:
  7865                           	opt stack 27
  7866                           
  7867                           ;mcc.c: 118: INTERRUPT_Initialize();
  7868                           
  7869                           ;incstack = 0
  7870  011050  EC2F  F089         	call	_INTERRUPT_Initialize	;wreg free
  7871                           
  7872                           ;mcc.c: 119: PIN_MANAGER_Initialize();
  7873  011054  EC9F  F083         	call	_PIN_MANAGER_Initialize	;wreg free
  7874                           
  7875                           ;mcc.c: 120: OSCILLATOR_Initialize();
  7876  011058  ECAA  F088         	call	_OSCILLATOR_Initialize	;wreg free
  7877                           
  7878                           ;mcc.c: 121: CMP1_Initialize();
  7879  01105C  ECEE  F088         	call	_CMP1_Initialize	;wreg free
  7880                           
  7881                           ;mcc.c: 122: TMR3_Initialize();
  7882  011060  ECAC  F087         	call	_TMR3_Initialize	;wreg free
  7883                           
  7884                           ;mcc.c: 123: DAC1_Initialize();
  7885  011064  EC1D  F089         	call	_DAC1_Initialize	;wreg free
  7886                           
  7887                           ;mcc.c: 124: TMR5_Initialize();
  7888  011068  EC92  F087         	call	_TMR5_Initialize	;wreg free
  7889                           
  7890                           ;mcc.c: 125: TMR1_Initialize();
  7891  01106C  ECC6  F087         	call	_TMR1_Initialize	;wreg free
  7892                           
  7893                           ;mcc.c: 126: EUSART1_Initialize();
  7894  011070  ECE3  F088         	call	_EUSART1_Initialize	;wreg free
  7895                           
  7896                           ;mcc.c: 127: EUSART2_Initialize();
  7897  011074  ECB6  F088         	call	_EUSART2_Initialize	;wreg free
  7898  011078  0012               	return		;funcret
  7899  01107A                     __end_of_SYSTEM_Initialize:
  7900                           	opt stack 0
  7901                           tblptru	equ	0xFF8
  7902                           tblptrh	equ	0xFF7
  7903                           tblptrl	equ	0xFF6
  7904                           tablat	equ	0xFF5
  7905                           prodh	equ	0xFF4
  7906                           prodl	equ	0xFF3
  7907                           intcon	equ	0xFF2
  7908                           indf0	equ	0xFEF
  7909                           postinc0	equ	0xFEE
  7910                           fsr0h	equ	0xFEA
  7911                           fsr0l	equ	0xFE9
  7912                           wreg	equ	0xFE8
  7913                           indf2	equ	0xFDF
  7914                           fsr2h	equ	0xFDA
  7915                           fsr2l	equ	0xFD9
  7916                           status	equ	0xFD8
  7917                           
  7918 ;; *************** function _TMR5_Initialize *****************
  7919 ;; Defined at:
  7920 ;;		line 62 in file "mcc_generated_files/tmr5.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;		None
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;		None
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		wreg, status,2, status,0
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7938 ;;Total ram usage:        2 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:    2
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_SYSTEM_Initialize
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           	psect	text59
  7949  010F24                     __ptext59:
  7950                           	opt stack 0
  7951  010F24                     _TMR5_Initialize:
  7952                           	opt stack 27
  7953                           
  7954                           ;tmr5.c: 67: T5GCON = 0x00;
  7955                           
  7956                           ;incstack = 0
  7957  010F24  0E00               	movlw	0
  7958  010F26  6EC4               	movwf	4036,c	;volatile
  7959                           
  7960                           ;tmr5.c: 70: T5GATE = 0x00;
  7961  010F28  0E00               	movlw	0
  7962  010F2A  6EC5               	movwf	4037,c	;volatile
  7963                           
  7964                           ;tmr5.c: 73: T5CLK = 0x04;
  7965  010F2C  0E04               	movlw	4
  7966  010F2E  6EC6               	movwf	4038,c	;volatile
  7967                           
  7968                           ;tmr5.c: 76: TMR5H = 0xE1;
  7969  010F30  0EE1               	movlw	225
  7970  010F32  6EC2               	movwf	4034,c	;volatile
  7971                           
  7972                           ;tmr5.c: 79: TMR5L = 0xBA;
  7973  010F34  0EBA               	movlw	186
  7974  010F36  6EC1               	movwf	4033,c	;volatile
  7975                           
  7976                           ;tmr5.c: 82: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  7977  010F38  50C1               	movf	4033,w,c	;volatile
  7978  010F3A  CFC2 F013          	movff	4034,??_TMR5_Initialize	;volatile
  7979  010F3E  6A14               	clrf	(??_TMR5_Initialize+1)& (0+255),c
  7980  010F40  C013  F014         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  7981  010F44  6A13               	clrf	??_TMR5_Initialize,c
  7982  010F46  1013               	iorwf	??_TMR5_Initialize,w,c
  7983  010F48  6E43               	movwf	_timer5ReloadVal,c	;volatile
  7984  010F4A  5014               	movf	??_TMR5_Initialize+1,w,c
  7985  010F4C  6E44               	movwf	_timer5ReloadVal+1,c	;volatile
  7986                           
  7987                           ;tmr5.c: 85: PIR4bits.TMR5IF = 0;
  7988  010F4E  010E               	movlb	14	; () banked
  7989  010F50  99CE               	bcf	206,4,b	;volatile
  7990                           
  7991                           ; BSR set to: 14
  7992                           ;tmr5.c: 88: T5CON = 0x01;
  7993  010F52  0E01               	movlw	1
  7994  010F54  6EC3               	movwf	4035,c	;volatile
  7995                           
  7996                           ; BSR set to: 14
  7997  010F56  0012               	return		;funcret
  7998  010F58                     __end_of_TMR5_Initialize:
  7999                           	opt stack 0
  8000                           tblptru	equ	0xFF8
  8001                           tblptrh	equ	0xFF7
  8002                           tblptrl	equ	0xFF6
  8003                           tablat	equ	0xFF5
  8004                           prodh	equ	0xFF4
  8005                           prodl	equ	0xFF3
  8006                           intcon	equ	0xFF2
  8007                           indf0	equ	0xFEF
  8008                           postinc0	equ	0xFEE
  8009                           fsr0h	equ	0xFEA
  8010                           fsr0l	equ	0xFE9
  8011                           wreg	equ	0xFE8
  8012                           indf2	equ	0xFDF
  8013                           fsr2h	equ	0xFDA
  8014                           fsr2l	equ	0xFD9
  8015                           status	equ	0xFD8
  8016                           
  8017 ;; *************** function _TMR3_Initialize *****************
  8018 ;; Defined at:
  8019 ;;		line 62 in file "mcc_generated_files/tmr3.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;		None
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  1    wreg      void 
  8026 ;; Registers used:
  8027 ;;		wreg, status,2, status,0
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8037 ;;Total ram usage:        2 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    2
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_SYSTEM_Initialize
  8044 ;;		_mdb_poll
  8045 ;;		_cctalk_comm
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           	psect	text60
  8050  010F58                     __ptext60:
  8051                           	opt stack 0
  8052  010F58                     _TMR3_Initialize:
  8053                           	opt stack 24
  8054                           
  8055                           ;tmr3.c: 67: T3GCON = 0x00;
  8056                           
  8057                           ; BSR set to: 14
  8058                           ;incstack = 0
  8059  010F58  0E00               	movlw	0
  8060  010F5A  6ECA               	movwf	4042,c	;volatile
  8061                           
  8062                           ;tmr3.c: 70: T3GATE = 0x00;
  8063  010F5C  0E00               	movlw	0
  8064  010F5E  6ECB               	movwf	4043,c	;volatile
  8065                           
  8066                           ;tmr3.c: 73: T3CLK = 0x05;
  8067  010F60  0E05               	movlw	5
  8068  010F62  6ECC               	movwf	4044,c	;volatile
  8069                           
  8070                           ;tmr3.c: 76: TMR3H = 0x9E;
  8071  010F64  0E9E               	movlw	158
  8072  010F66  6EC8               	movwf	4040,c	;volatile
  8073                           
  8074                           ;tmr3.c: 79: TMR3L = 0x58;
  8075  010F68  0E58               	movlw	88
  8076  010F6A  6EC7               	movwf	4039,c	;volatile
  8077                           
  8078                           ;tmr3.c: 82: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  8079  010F6C  50C7               	movf	4039,w,c	;volatile
  8080  010F6E  CFC8 F013          	movff	4040,??_TMR3_Initialize	;volatile
  8081  010F72  6A14               	clrf	(??_TMR3_Initialize+1)& (0+255),c
  8082  010F74  C013  F014         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  8083  010F78  6A13               	clrf	??_TMR3_Initialize,c
  8084  010F7A  1013               	iorwf	??_TMR3_Initialize,w,c
  8085  010F7C  6E45               	movwf	_timer3ReloadVal,c	;volatile
  8086  010F7E  5014               	movf	??_TMR3_Initialize+1,w,c
  8087  010F80  6E46               	movwf	_timer3ReloadVal+1,c	;volatile
  8088                           
  8089                           ;tmr3.c: 85: PIR4bits.TMR3IF = 0;
  8090  010F82  010E               	movlb	14	; () banked
  8091  010F84  95CE               	bcf	206,2,b	;volatile
  8092                           
  8093                           ; BSR set to: 14
  8094                           ;tmr3.c: 88: T3CON = 0x01;
  8095  010F86  0E01               	movlw	1
  8096  010F88  6EC9               	movwf	4041,c	;volatile
  8097                           
  8098                           ; BSR set to: 14
  8099  010F8A  0012               	return		;funcret
  8100  010F8C                     __end_of_TMR3_Initialize:
  8101                           	opt stack 0
  8102                           tblptru	equ	0xFF8
  8103                           tblptrh	equ	0xFF7
  8104                           tblptrl	equ	0xFF6
  8105                           tablat	equ	0xFF5
  8106                           prodh	equ	0xFF4
  8107                           prodl	equ	0xFF3
  8108                           intcon	equ	0xFF2
  8109                           indf0	equ	0xFEF
  8110                           postinc0	equ	0xFEE
  8111                           fsr0h	equ	0xFEA
  8112                           fsr0l	equ	0xFE9
  8113                           wreg	equ	0xFE8
  8114                           indf2	equ	0xFDF
  8115                           fsr2h	equ	0xFDA
  8116                           fsr2l	equ	0xFD9
  8117                           status	equ	0xFD8
  8118                           
  8119 ;; *************** function _TMR1_Initialize *****************
  8120 ;; Defined at:
  8121 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, status,2, status,0
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8139 ;;Total ram usage:        2 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; Hardware stack levels required when called:    2
  8142 ;; This function calls:
  8143 ;;		Nothing
  8144 ;; This function is called by:
  8145 ;;		_SYSTEM_Initialize
  8146 ;;		_mdb_comm
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text61
  8151  010F8C                     __ptext61:
  8152                           	opt stack 0
  8153  010F8C                     _TMR1_Initialize:
  8154                           	opt stack 24
  8155                           
  8156                           ;tmr1.c: 67: T1GCON = 0x00;
  8157                           
  8158                           ; BSR set to: 14
  8159                           ;incstack = 0
  8160  010F8C  0E00               	movlw	0
  8161  010F8E  6ED0               	movwf	4048,c	;volatile
  8162                           
  8163                           ;tmr1.c: 70: T1GATE = 0x00;
  8164  010F90  0E00               	movlw	0
  8165  010F92  6ED1               	movwf	4049,c	;volatile
  8166                           
  8167                           ;tmr1.c: 73: T1CLK = 0x05;
  8168  010F94  0E05               	movlw	5
  8169  010F96  6ED2               	movwf	4050,c	;volatile
  8170                           
  8171                           ;tmr1.c: 76: TMR1H = 0xF6;
  8172  010F98  0EF6               	movlw	246
  8173  010F9A  6ECE               	movwf	4046,c	;volatile
  8174                           
  8175                           ;tmr1.c: 79: TMR1L = 0x3C;
  8176  010F9C  0E3C               	movlw	60
  8177  010F9E  6ECD               	movwf	4045,c	;volatile
  8178                           
  8179                           ;tmr1.c: 82: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8180  010FA0  50CD               	movf	4045,w,c	;volatile
  8181  010FA2  CFCE F013          	movff	4046,??_TMR1_Initialize	;volatile
  8182  010FA6  6A14               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  8183  010FA8  C013  F014         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  8184  010FAC  6A13               	clrf	??_TMR1_Initialize,c
  8185  010FAE  1013               	iorwf	??_TMR1_Initialize,w,c
  8186  010FB0  6E47               	movwf	_timer1ReloadVal,c	;volatile
  8187  010FB2  5014               	movf	??_TMR1_Initialize+1,w,c
  8188  010FB4  6E48               	movwf	_timer1ReloadVal+1,c	;volatile
  8189                           
  8190                           ;tmr1.c: 85: PIR4bits.TMR1IF = 0;
  8191  010FB6  010E               	movlb	14	; () banked
  8192  010FB8  91CE               	bcf	206,0,b	;volatile
  8193                           
  8194                           ; BSR set to: 14
  8195                           ;tmr1.c: 88: T1CON = 0x01;
  8196  010FBA  0E01               	movlw	1
  8197  010FBC  6ECF               	movwf	4047,c	;volatile
  8198                           
  8199                           ; BSR set to: 14
  8200  010FBE  0012               	return		;funcret
  8201  010FC0                     __end_of_TMR1_Initialize:
  8202                           	opt stack 0
  8203                           tblptru	equ	0xFF8
  8204                           tblptrh	equ	0xFF7
  8205                           tblptrl	equ	0xFF6
  8206                           tablat	equ	0xFF5
  8207                           prodh	equ	0xFF4
  8208                           prodl	equ	0xFF3
  8209                           intcon	equ	0xFF2
  8210                           indf0	equ	0xFEF
  8211                           postinc0	equ	0xFEE
  8212                           fsr0h	equ	0xFEA
  8213                           fsr0l	equ	0xFE9
  8214                           wreg	equ	0xFE8
  8215                           indf2	equ	0xFDF
  8216                           fsr2h	equ	0xFDA
  8217                           fsr2l	equ	0xFD9
  8218                           status	equ	0xFD8
  8219                           
  8220 ;; *************** function _PIN_MANAGER_Initialize *****************
  8221 ;; Defined at:
  8222 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  state           1   18[COMRAM] unsigned char 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1    wreg      void 
  8229 ;; Registers used:
  8230 ;;		wreg, status,2
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8240 ;;Total ram usage:        1 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:    2
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_SYSTEM_Initialize
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text62
  8251  01073E                     __ptext62:
  8252                           	opt stack 0
  8253  01073E                     _PIN_MANAGER_Initialize:
  8254                           	opt stack 27
  8255                           
  8256                           ;pin_manager.c: 57: LATE = 0x00;
  8257                           
  8258                           ; BSR set to: 14
  8259                           ;incstack = 0
  8260  01073E  0E00               	movlw	0
  8261  010740  6E87               	movwf	3975,c	;volatile
  8262                           
  8263                           ;pin_manager.c: 58: LATD = 0x00;
  8264  010742  0E00               	movlw	0
  8265  010744  6E86               	movwf	3974,c	;volatile
  8266                           
  8267                           ;pin_manager.c: 59: LATA = 0xC0;
  8268  010746  0EC0               	movlw	192
  8269  010748  6E83               	movwf	3971,c	;volatile
  8270                           
  8271                           ;pin_manager.c: 60: LATB = 0x00;
  8272  01074A  0E00               	movlw	0
  8273  01074C  6E84               	movwf	3972,c	;volatile
  8274                           
  8275                           ;pin_manager.c: 61: LATC = 0x40;
  8276  01074E  0E40               	movlw	64
  8277  010750  6E85               	movwf	3973,c	;volatile
  8278                           
  8279                           ;pin_manager.c: 66: TRISE = 0x00;
  8280  010752  0E00               	movlw	0
  8281  010754  6E8C               	movwf	3980,c	;volatile
  8282                           
  8283                           ;pin_manager.c: 67: TRISA = 0x1F;
  8284  010756  0E1F               	movlw	31
  8285  010758  6E88               	movwf	3976,c	;volatile
  8286                           
  8287                           ;pin_manager.c: 68: TRISB = 0xD0;
  8288  01075A  0ED0               	movlw	208
  8289  01075C  6E89               	movwf	3977,c	;volatile
  8290                           
  8291                           ;pin_manager.c: 69: TRISC = 0x80;
  8292  01075E  0E80               	movlw	128
  8293  010760  6E8A               	movwf	3978,c	;volatile
  8294                           
  8295                           ;pin_manager.c: 70: TRISD = 0x00;
  8296  010762  0E00               	movlw	0
  8297  010764  6E8B               	movwf	3979,c	;volatile
  8298                           
  8299                           ;pin_manager.c: 75: ANSELC = 0x00;
  8300  010766  0E00               	movlw	0
  8301  010768  010F               	movlb	15	; () banked
  8302  01076A  6F21               	movwf	33,b	;volatile
  8303                           
  8304                           ;pin_manager.c: 76: ANSELB = 0xC0;
  8305  01076C  0EC0               	movlw	192
  8306  01076E  6F19               	movwf	25,b	;volatile
  8307                           
  8308                           ;pin_manager.c: 77: ANSELD = 0x00;
  8309  010770  0E00               	movlw	0
  8310  010772  6F26               	movwf	38,b	;volatile
  8311                           
  8312                           ;pin_manager.c: 78: ANSELE = 0x00;
  8313  010774  0E00               	movlw	0
  8314  010776  6F2E               	movwf	46,b	;volatile
  8315                           
  8316                           ;pin_manager.c: 79: ANSELA = 0x01;
  8317  010778  0E01               	movlw	1
  8318  01077A  6F11               	movwf	17,b	;volatile
  8319                           
  8320                           ;pin_manager.c: 84: WPUD = 0x00;
  8321  01077C  0E00               	movlw	0
  8322  01077E  6F25               	movwf	37,b	;volatile
  8323                           
  8324                           ;pin_manager.c: 85: WPUE = 0x00;
  8325  010780  0E00               	movlw	0
  8326  010782  6F2D               	movwf	45,b	;volatile
  8327                           
  8328                           ;pin_manager.c: 86: WPUB = 0x00;
  8329  010784  0E00               	movlw	0
  8330  010786  6F18               	movwf	24,b	;volatile
  8331                           
  8332                           ;pin_manager.c: 87: WPUA = 0x00;
  8333  010788  0E00               	movlw	0
  8334  01078A  6F10               	movwf	16,b	;volatile
  8335                           
  8336                           ;pin_manager.c: 88: WPUC = 0x00;
  8337  01078C  0E00               	movlw	0
  8338  01078E  6F20               	movwf	32,b	;volatile
  8339                           
  8340                           ;pin_manager.c: 93: ODCONE = 0x00;
  8341  010790  0E00               	movlw	0
  8342  010792  6F2C               	movwf	44,b	;volatile
  8343                           
  8344                           ;pin_manager.c: 94: ODCONA = 0x00;
  8345  010794  0E00               	movlw	0
  8346  010796  6F0F               	movwf	15,b	;volatile
  8347                           
  8348                           ;pin_manager.c: 95: ODCONB = 0x00;
  8349  010798  0E00               	movlw	0
  8350  01079A  6F17               	movwf	23,b	;volatile
  8351                           
  8352                           ;pin_manager.c: 96: ODCONC = 0x00;
  8353  01079C  0E00               	movlw	0
  8354  01079E  6F1F               	movwf	31,b	;volatile
  8355                           
  8356                           ;pin_manager.c: 97: ODCOND = 0x00;
  8357  0107A0  0E00               	movlw	0
  8358  0107A2  6F24               	movwf	36,b	;volatile
  8359                           
  8360                           ; BSR set to: 15
  8361                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
  8362  0107A4  010E               	movlb	14	; () banked
  8363  0107A6  89C2               	bsf	194,4,b	;volatile
  8364                           
  8365                           ;pin_manager.c: 106: bool state = (unsigned char)GIE;
  8366  0107A8  0E00               	movlw	0
  8367  0107AA  BEF2               	btfsc	intcon,7,c	;volatile
  8368  0107AC  0E01               	movlw	1
  8369  0107AE  6E13               	movwf	PIN_MANAGER_Initialize@state,c
  8370                           
  8371                           ; BSR set to: 14
  8372                           ;pin_manager.c: 107: GIE = 0;
  8373  0107B0  9EF2               	bcf	intcon,7,c	;volatile
  8374                           
  8375                           ;pin_manager.c: 108: PPSLOCK = 0x55;
  8376  0107B2  0E55               	movlw	85
  8377  0107B4  6FA0               	movwf	160,b	;volsfr
  8378                           
  8379                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
  8380  0107B6  0EAA               	movlw	170
  8381  0107B8  6FA0               	movwf	160,b	;volsfr
  8382                           
  8383                           ; BSR set to: 14
  8384                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x00;
  8385  0107BA  91A0               	bcf	160,0,b	;volsfr
  8386                           
  8387                           ; BSR set to: 14
  8388                           ;pin_manager.c: 112: RX1PPSbits.RXPPS = 0x17;
  8389  0107BC  81B5               	bsf	181,0,b	;volatile
  8390  0107BE  83B5               	bsf	181,1,b	;volatile
  8391  0107C0  85B5               	bsf	181,2,b	;volatile
  8392  0107C2  97B5               	bcf	181,3,b	;volatile
  8393  0107C4  89B5               	bsf	181,4,b	;volatile
  8394                           
  8395                           ;pin_manager.c: 113: RC6PPS = 0x09;
  8396  0107C6  0E09               	movlw	9
  8397  0107C8  6FFD               	movwf	253,b	;volatile
  8398                           
  8399                           ;pin_manager.c: 114: RB5PPS = 0x0B;
  8400  0107CA  0E0B               	movlw	11
  8401  0107CC  6FF4               	movwf	244,b	;volatile
  8402                           
  8403                           ; BSR set to: 14
  8404                           ;pin_manager.c: 115: RX2PPSbits.RXPPS = 0x0C;
  8405  0107CE  918D               	bcf	141,0,b	;volatile
  8406  0107D0  938D               	bcf	141,1,b	;volatile
  8407  0107D2  858D               	bsf	141,2,b	;volatile
  8408  0107D4  878D               	bsf	141,3,b	;volatile
  8409  0107D6  998D               	bcf	141,4,b	;volatile
  8410                           
  8411                           ;pin_manager.c: 117: PPSLOCK = 0x55;
  8412  0107D8  0E55               	movlw	85
  8413  0107DA  6FA0               	movwf	160,b	;volsfr
  8414                           
  8415                           ;pin_manager.c: 118: PPSLOCK = 0xAA;
  8416  0107DC  0EAA               	movlw	170
  8417  0107DE  6FA0               	movwf	160,b	;volsfr
  8418                           
  8419                           ; BSR set to: 14
  8420                           ;pin_manager.c: 119: PPSLOCKbits.PPSLOCKED = 0x01;
  8421  0107E0  81A0               	bsf	160,0,b	;volsfr
  8422                           
  8423                           ; BSR set to: 14
  8424                           ;pin_manager.c: 121: GIE = state;
  8425  0107E2  A013               	btfss	PIN_MANAGER_Initialize@state,0,c
  8426  0107E4  D002               	goto	u440
  8427  0107E6  8EF2               	bsf	intcon,7,c	;volatile
  8428  0107E8  0012               	return	
  8429  0107EA                     u440:
  8430  0107EA  9EF2               	bcf	intcon,7,c	;volatile
  8431  0107EC  0012               	return		;funcret
  8432  0107EE                     __end_of_PIN_MANAGER_Initialize:
  8433                           	opt stack 0
  8434                           tblptru	equ	0xFF8
  8435                           tblptrh	equ	0xFF7
  8436                           tblptrl	equ	0xFF6
  8437                           tablat	equ	0xFF5
  8438                           prodh	equ	0xFF4
  8439                           prodl	equ	0xFF3
  8440                           intcon	equ	0xFF2
  8441                           indf0	equ	0xFEF
  8442                           postinc0	equ	0xFEE
  8443                           fsr0h	equ	0xFEA
  8444                           fsr0l	equ	0xFE9
  8445                           wreg	equ	0xFE8
  8446                           indf2	equ	0xFDF
  8447                           fsr2h	equ	0xFDA
  8448                           fsr2l	equ	0xFD9
  8449                           status	equ	0xFD8
  8450                           
  8451 ;; *************** function _OSCILLATOR_Initialize *****************
  8452 ;; Defined at:
  8453 ;;		line 130 in file "mcc_generated_files/mcc.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      void 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8471 ;;Total ram usage:        0 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    2
  8474 ;; This function calls:
  8475 ;;		Nothing
  8476 ;; This function is called by:
  8477 ;;		_SYSTEM_Initialize
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text63
  8482  011154                     __ptext63:
  8483                           	opt stack 0
  8484  011154                     _OSCILLATOR_Initialize:
  8485                           	opt stack 27
  8486                           
  8487                           ;mcc.c: 133: OSCCON1 = 0x60;
  8488                           
  8489                           ;incstack = 0
  8490  011154  0E60               	movlw	96
  8491  011156  010E               	movlb	14	; () banked
  8492  011158  6FD8               	movwf	216,b	;volatile
  8493                           
  8494                           ;mcc.c: 135: OSCCON3 = 0x00;
  8495  01115A  0E00               	movlw	0
  8496  01115C  6FDA               	movwf	218,b	;volatile
  8497                           
  8498                           ;mcc.c: 137: OSCEN = 0x00;
  8499  01115E  0E00               	movlw	0
  8500  011160  6FDC               	movwf	220,b	;volatile
  8501                           
  8502                           ;mcc.c: 139: OSCFRQ = 0x04;
  8503  011162  0E04               	movlw	4
  8504  011164  6FDE               	movwf	222,b	;volatile
  8505                           
  8506                           ;mcc.c: 141: OSCTUNE = 0x00;
  8507  011166  0E00               	movlw	0
  8508  011168  6FDD               	movwf	221,b	;volatile
  8509                           
  8510                           ; BSR set to: 14
  8511  01116A  0012               	return		;funcret
  8512  01116C                     __end_of_OSCILLATOR_Initialize:
  8513                           	opt stack 0
  8514                           tblptru	equ	0xFF8
  8515                           tblptrh	equ	0xFF7
  8516                           tblptrl	equ	0xFF6
  8517                           tablat	equ	0xFF5
  8518                           prodh	equ	0xFF4
  8519                           prodl	equ	0xFF3
  8520                           intcon	equ	0xFF2
  8521                           indf0	equ	0xFEF
  8522                           postinc0	equ	0xFEE
  8523                           fsr0h	equ	0xFEA
  8524                           fsr0l	equ	0xFE9
  8525                           wreg	equ	0xFE8
  8526                           indf2	equ	0xFDF
  8527                           fsr2h	equ	0xFDA
  8528                           fsr2l	equ	0xFD9
  8529                           status	equ	0xFD8
  8530                           
  8531 ;; *************** function _INTERRUPT_Initialize *****************
  8532 ;; Defined at:
  8533 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		None
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;Total ram usage:        0 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    2
  8554 ;; This function calls:
  8555 ;;		Nothing
  8556 ;; This function is called by:
  8557 ;;		_SYSTEM_Initialize
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text64
  8562  01125E                     __ptext64:
  8563                           	opt stack 0
  8564  01125E                     _INTERRUPT_Initialize:
  8565                           	opt stack 27
  8566                           
  8567                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
  8568                           
  8569                           ; BSR set to: 14
  8570                           ;incstack = 0
  8571  01125E  8AF2               	bsf	intcon,5,c	;volatile
  8572                           
  8573                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
  8574  011260  010E               	movlb	14	; () banked
  8575  011262  89BA               	bsf	186,4,b	;volatile
  8576                           
  8577                           ; BSR set to: 14
  8578  011264  0012               	return		;funcret
  8579  011266                     __end_of_INTERRUPT_Initialize:
  8580                           	opt stack 0
  8581                           tblptru	equ	0xFF8
  8582                           tblptrh	equ	0xFF7
  8583                           tblptrl	equ	0xFF6
  8584                           tablat	equ	0xFF5
  8585                           prodh	equ	0xFF4
  8586                           prodl	equ	0xFF3
  8587                           intcon	equ	0xFF2
  8588                           indf0	equ	0xFEF
  8589                           postinc0	equ	0xFEE
  8590                           fsr0h	equ	0xFEA
  8591                           fsr0l	equ	0xFE9
  8592                           wreg	equ	0xFE8
  8593                           indf2	equ	0xFDF
  8594                           fsr2h	equ	0xFDA
  8595                           fsr2l	equ	0xFD9
  8596                           status	equ	0xFD8
  8597                           
  8598 ;; *************** function _EUSART2_Initialize *****************
  8599 ;; Defined at:
  8600 ;;		line 53 in file "mcc_generated_files/eusart2.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;		None
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      void 
  8607 ;; Registers used:
  8608 ;;		wreg, status,2
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8618 ;;Total ram usage:        0 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    2
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_SYSTEM_Initialize
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           	psect	text65
  8629  01116C                     __ptext65:
  8630                           	opt stack 0
  8631  01116C                     _EUSART2_Initialize:
  8632                           	opt stack 27
  8633                           
  8634                           ;eusart2.c: 58: BAUD2CON = 0x08;
  8635                           
  8636                           ; BSR set to: 14
  8637                           ;incstack = 0
  8638  01116C  0E08               	movlw	8
  8639  01116E  010E               	movlb	14	; () banked
  8640  011170  6F9F               	movwf	159,b	;volatile
  8641                           
  8642                           ;eusart2.c: 61: RC2STA = 0x10;
  8643  011172  0E10               	movlw	16
  8644  011174  6F9D               	movwf	157,b	;volatile
  8645                           
  8646                           ;eusart2.c: 64: TX2STA = 0x04;
  8647  011176  0E04               	movlw	4
  8648  011178  6F9E               	movwf	158,b	;volatile
  8649                           
  8650                           ;eusart2.c: 67: SP2BRGL = 0x38;
  8651  01117A  0E38               	movlw	56
  8652  01117C  6F9B               	movwf	155,b	;volatile
  8653                           
  8654                           ;eusart2.c: 70: SP2BRGH = 0x01;
  8655  01117E  0E01               	movlw	1
  8656  011180  6F9C               	movwf	156,b	;volatile
  8657                           
  8658                           ; BSR set to: 14
  8659  011182  0012               	return		;funcret
  8660  011184                     __end_of_EUSART2_Initialize:
  8661                           	opt stack 0
  8662                           tblptru	equ	0xFF8
  8663                           tblptrh	equ	0xFF7
  8664                           tblptrl	equ	0xFF6
  8665                           tablat	equ	0xFF5
  8666                           prodh	equ	0xFF4
  8667                           prodl	equ	0xFF3
  8668                           intcon	equ	0xFF2
  8669                           indf0	equ	0xFEF
  8670                           postinc0	equ	0xFEE
  8671                           fsr0h	equ	0xFEA
  8672                           fsr0l	equ	0xFE9
  8673                           wreg	equ	0xFE8
  8674                           indf2	equ	0xFDF
  8675                           fsr2h	equ	0xFDA
  8676                           fsr2l	equ	0xFD9
  8677                           status	equ	0xFD8
  8678                           
  8679 ;; *************** function _EUSART1_Initialize *****************
  8680 ;; Defined at:
  8681 ;;		line 53 in file "mcc_generated_files/eusart1.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;		None
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;		None
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, status,2
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8699 ;;Total ram usage:        0 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; Hardware stack levels required when called:    2
  8702 ;; This function calls:
  8703 ;;		Nothing
  8704 ;; This function is called by:
  8705 ;;		_SYSTEM_Initialize
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text66
  8710  0111C6                     __ptext66:
  8711                           	opt stack 0
  8712  0111C6                     _EUSART1_Initialize:
  8713                           	opt stack 27
  8714                           
  8715                           ;eusart1.c: 58: BAUD1CON = 0x08;
  8716                           
  8717                           ; BSR set to: 14
  8718                           ;incstack = 0
  8719  0111C6  0E08               	movlw	8
  8720  0111C8  6E9F               	movwf	3999,c	;volatile
  8721                           
  8722                           ;eusart1.c: 61: RC1STA = 0x90;
  8723  0111CA  0E90               	movlw	144
  8724  0111CC  6E9D               	movwf	3997,c	;volatile
  8725                           
  8726                           ;eusart1.c: 64: TX1STA = 0xAC;
  8727  0111CE  0EAC               	movlw	172
  8728  0111D0  6E9E               	movwf	3998,c	;volatile
  8729                           
  8730                           ;eusart1.c: 67: SP1BRGL = 0x38;
  8731  0111D2  0E38               	movlw	56
  8732  0111D4  6E9B               	movwf	3995,c	;volatile
  8733                           
  8734                           ;eusart1.c: 70: SP1BRGH = 0x01;
  8735  0111D6  0E01               	movlw	1
  8736  0111D8  6E9C               	movwf	3996,c	;volatile
  8737  0111DA  0012               	return		;funcret
  8738  0111DC                     __end_of_EUSART1_Initialize:
  8739                           	opt stack 0
  8740                           tblptru	equ	0xFF8
  8741                           tblptrh	equ	0xFF7
  8742                           tblptrl	equ	0xFF6
  8743                           tablat	equ	0xFF5
  8744                           prodh	equ	0xFF4
  8745                           prodl	equ	0xFF3
  8746                           intcon	equ	0xFF2
  8747                           indf0	equ	0xFEF
  8748                           postinc0	equ	0xFEE
  8749                           fsr0h	equ	0xFEA
  8750                           fsr0l	equ	0xFE9
  8751                           wreg	equ	0xFE8
  8752                           indf2	equ	0xFDF
  8753                           fsr2h	equ	0xFDA
  8754                           fsr2l	equ	0xFD9
  8755                           status	equ	0xFD8
  8756                           
  8757 ;; *************** function _DAC1_Initialize *****************
  8758 ;; Defined at:
  8759 ;;		line 57 in file "mcc_generated_files/dac1.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;		None
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      void 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8777 ;;Total ram usage:        0 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:    2
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_SYSTEM_Initialize
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text67
  8788  01123A                     __ptext67:
  8789                           	opt stack 0
  8790  01123A                     _DAC1_Initialize:
  8791                           	opt stack 27
  8792                           
  8793                           ;dac1.c: 60: DAC1CON0 = 0x80;
  8794                           
  8795                           ;incstack = 0
  8796  01123A  0E80               	movlw	128
  8797  01123C  010F               	movlb	15	; () banked
  8798  01123E  6F33               	movwf	51,b	;volatile
  8799                           
  8800                           ;dac1.c: 62: DAC1CON1 = 0x1C;
  8801  011240  0E1C               	movlw	28
  8802  011242  6F34               	movwf	52,b	;volatile
  8803                           
  8804                           ; BSR set to: 15
  8805  011244  0012               	return		;funcret
  8806  011246                     __end_of_DAC1_Initialize:
  8807                           	opt stack 0
  8808                           tblptru	equ	0xFF8
  8809                           tblptrh	equ	0xFF7
  8810                           tblptrl	equ	0xFF6
  8811                           tablat	equ	0xFF5
  8812                           prodh	equ	0xFF4
  8813                           prodl	equ	0xFF3
  8814                           intcon	equ	0xFF2
  8815                           indf0	equ	0xFEF
  8816                           postinc0	equ	0xFEE
  8817                           fsr0h	equ	0xFEA
  8818                           fsr0l	equ	0xFE9
  8819                           wreg	equ	0xFE8
  8820                           indf2	equ	0xFDF
  8821                           fsr2h	equ	0xFDA
  8822                           fsr2l	equ	0xFD9
  8823                           status	equ	0xFD8
  8824                           
  8825 ;; *************** function _CMP1_Initialize *****************
  8826 ;; Defined at:
  8827 ;;		line 56 in file "mcc_generated_files/cmp1.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8845 ;;Total ram usage:        0 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    2
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_SYSTEM_Initialize
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           	psect	text68
  8856  0111DC                     __ptext68:
  8857                           	opt stack 0
  8858  0111DC                     _CMP1_Initialize:
  8859                           	opt stack 27
  8860                           
  8861                           ;cmp1.c: 61: CM1CON0 = 0x94;
  8862                           
  8863                           ; BSR set to: 15
  8864                           ;incstack = 0
  8865  0111DC  0E94               	movlw	148
  8866  0111DE  010F               	movlb	15	; () banked
  8867  0111E0  6F39               	movwf	57,b	;volatile
  8868                           
  8869                           ;cmp1.c: 64: CM1CON1 = 0x00;
  8870  0111E2  0E00               	movlw	0
  8871  0111E4  6F3A               	movwf	58,b	;volatile
  8872                           
  8873                           ;cmp1.c: 67: CM1NCH = 0x00;
  8874  0111E6  0E00               	movlw	0
  8875  0111E8  6F3B               	movwf	59,b	;volatile
  8876                           
  8877                           ;cmp1.c: 70: CM1PCH = 0x05;
  8878  0111EA  0E05               	movlw	5
  8879  0111EC  6F3C               	movwf	60,b	;volatile
  8880                           
  8881                           ; BSR set to: 15
  8882  0111EE  0012               	return		;funcret
  8883  0111F0                     __end_of_CMP1_Initialize:
  8884                           	opt stack 0
  8885                           tblptru	equ	0xFF8
  8886                           tblptrh	equ	0xFF7
  8887                           tblptrl	equ	0xFF6
  8888                           tablat	equ	0xFF5
  8889                           prodh	equ	0xFF4
  8890                           prodl	equ	0xFF3
  8891                           intcon	equ	0xFF2
  8892                           indf0	equ	0xFEF
  8893                           postinc0	equ	0xFEE
  8894                           fsr0h	equ	0xFEA
  8895                           fsr0l	equ	0xFE9
  8896                           wreg	equ	0xFE8
  8897                           indf2	equ	0xFDF
  8898                           fsr2h	equ	0xFDA
  8899                           fsr2l	equ	0xFD9
  8900                           status	equ	0xFD8
  8901                           
  8902 ;; *************** function _CMP1_GetOutputStatus *****************
  8903 ;; Defined at:
  8904 ;;		line 74 in file "mcc_generated_files/cmp1.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;		None
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;		None
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      unsigned char 
  8911 ;; Registers used:
  8912 ;;		wreg
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;Total ram usage:        0 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:    2
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_main
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text69
  8933  01122C                     __ptext69:
  8934                           	opt stack 0
  8935  01122C                     _CMP1_GetOutputStatus:
  8936                           	opt stack 28
  8937                           
  8938                           ;cmp1.c: 76: return (CMOUTbits.MC1OUT);
  8939                           
  8940                           ; BSR set to: 15
  8941                           ;incstack = 0
  8942  01122C  010F               	movlb	15	; () banked
  8943  01122E  A13D               	btfss	61,0,b	;volatile
  8944  011230  D002               	goto	u570
  8945  011232  0E01               	movlw	1
  8946  011234  0012               	return	
  8947  011236                     u570:
  8948  011236  0E00               	movlw	0
  8949  011238  0012               	return	
  8950  01123A                     __end_of_CMP1_GetOutputStatus:
  8951                           	opt stack 0
  8952                           tblptru	equ	0xFF8
  8953                           tblptrh	equ	0xFF7
  8954                           tblptrl	equ	0xFF6
  8955                           tablat	equ	0xFF5
  8956                           prodh	equ	0xFF4
  8957                           prodl	equ	0xFF3
  8958                           intcon	equ	0xFF2
  8959                           indf0	equ	0xFEF
  8960                           postinc0	equ	0xFEE
  8961                           fsr0h	equ	0xFEA
  8962                           fsr0l	equ	0xFE9
  8963                           wreg	equ	0xFE8
  8964                           indf2	equ	0xFDF
  8965                           fsr2h	equ	0xFDA
  8966                           fsr2l	equ	0xFD9
  8967                           status	equ	0xFD8
  8968                           
  8969 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  8970 ;; Defined at:
  8971 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		cstack
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8987 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8988 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8989 ;;Total ram usage:       18 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; Hardware stack levels required when called:    1
  8992 ;; This function calls:
  8993 ;;		_PIN_MANAGER_IOC
  8994 ;; This function is called by:
  8995 ;;		Interrupt level 2
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	intcode
  9000  000008                     __pintcode:
  9001                           	opt stack 0
  9002  000008                     _INTERRUPT_InterruptManagerHigh:
  9003                           	opt stack 19
  9004                           
  9005                           ; BSR set to: 15
  9006                           ;incstack = 0
  9007  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9008  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  9009  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  9010  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  9011  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  9012  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  9013  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  9014  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  9015  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  9016  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  9017  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  9018  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  9019  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  9020  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  9021  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  9022  000042  C04B  F00F         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  9023  000046  C04C  F010         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  9024  00004A  C04D  F011         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  9025  00004E  C04E  F012         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  9026                           
  9027                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
  9028  000052  010E               	movlb	14	; () banked
  9029  000054  B9C2               	btfsc	194,4,b	;volatile
  9030                           
  9031                           ; BSR set to: 14
  9032  000056  A9CA               	btfss	202,4,b	;volatile
  9033  000058  D002               	goto	i2l178
  9034                           
  9035                           ; BSR set to: 14
  9036                           ;interrupt_manager.c: 68: {
  9037                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
  9038  00005A  EC3F  F089         	call	_PIN_MANAGER_IOC	;wreg free
  9039  00005E                     i2l178:
  9040                           
  9041                           ;interrupt_manager.c: 71: else
  9042                           ;interrupt_manager.c: 72: {
  9043  00005E  C012  F04E         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  9044  000062  C011  F04D         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  9045  000066  C010  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  9046  00006A  C00F  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  9047  00006E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  9048  000072  C00D  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  9049  000076  C00C  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  9050  00007A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  9051  00007E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  9052  000082  C009  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  9053  000086  C008  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  9054  00008A  C007  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  9055  00008E  C006  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  9056  000092  C005  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  9057  000096  C004  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  9058  00009A  C003  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  9059  00009E  C002  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  9060  0000A2  C001  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  9061  0000A6  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9062  0000A8  0011               	retfie		f
  9063  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
  9064                           	opt stack 0
  9065                           pclatu	equ	0xFFB
  9066                           pclath	equ	0xFFA
  9067                           tblptru	equ	0xFF8
  9068                           tblptrh	equ	0xFF7
  9069                           tblptrl	equ	0xFF6
  9070                           tablat	equ	0xFF5
  9071                           prodh	equ	0xFF4
  9072                           prodl	equ	0xFF3
  9073                           intcon	equ	0xFF2
  9074                           indf0	equ	0xFEF
  9075                           postinc0	equ	0xFEE
  9076                           fsr0h	equ	0xFEA
  9077                           fsr0l	equ	0xFE9
  9078                           wreg	equ	0xFE8
  9079                           fsr1h	equ	0xFE2
  9080                           fsr1l	equ	0xFE1
  9081                           indf2	equ	0xFDF
  9082                           fsr2h	equ	0xFDA
  9083                           fsr2l	equ	0xFD9
  9084                           status	equ	0xFD8
  9085                           
  9086 ;; *************** function _PIN_MANAGER_IOC *****************
  9087 ;; Defined at:
  9088 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;		None
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		None
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9106 ;;Total ram usage:        0 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_INTERRUPT_InterruptManagerHigh
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text71
  9116  01127E                     __ptext71:
  9117                           	opt stack 0
  9118  01127E                     _PIN_MANAGER_IOC:
  9119                           	opt stack 19
  9120                           
  9121                           ;pin_manager.c: 128: PIR0bits.IOCIF = 0;
  9122                           
  9123                           ;incstack = 0
  9124  01127E  010E               	movlb	14	; () banked
  9125  011280  99CA               	bcf	202,4,b	;volatile
  9126                           
  9127                           ; BSR set to: 14
  9128  011282  0012               	return		;funcret
  9129  011284                     __end_of_PIN_MANAGER_IOC:
  9130                           	opt stack 0
  9131                           pclatu	equ	0xFFB
  9132                           pclath	equ	0xFFA
  9133                           tblptru	equ	0xFF8
  9134                           tblptrh	equ	0xFF7
  9135                           tblptrl	equ	0xFF6
  9136                           tablat	equ	0xFF5
  9137                           prodh	equ	0xFF4
  9138                           prodl	equ	0xFF3
  9139                           intcon	equ	0xFF2
  9140                           indf0	equ	0xFEF
  9141                           postinc0	equ	0xFEE
  9142                           fsr0h	equ	0xFEA
  9143                           fsr0l	equ	0xFE9
  9144                           wreg	equ	0xFE8
  9145                           fsr1h	equ	0xFE2
  9146                           fsr1l	equ	0xFE1
  9147                           indf2	equ	0xFDF
  9148                           fsr2h	equ	0xFDA
  9149                           fsr2l	equ	0xFD9
  9150                           status	equ	0xFD8
  9151                           pclatu	equ	0xFFB
  9152                           pclath	equ	0xFFA
  9153                           tblptru	equ	0xFF8
  9154                           tblptrh	equ	0xFF7
  9155                           tblptrl	equ	0xFF6
  9156                           tablat	equ	0xFF5
  9157                           prodh	equ	0xFF4
  9158                           prodl	equ	0xFF3
  9159                           intcon	equ	0xFF2
  9160                           indf0	equ	0xFEF
  9161                           postinc0	equ	0xFEE
  9162                           fsr0h	equ	0xFEA
  9163                           fsr0l	equ	0xFE9
  9164                           wreg	equ	0xFE8
  9165                           fsr1h	equ	0xFE2
  9166                           fsr1l	equ	0xFE1
  9167                           indf2	equ	0xFDF
  9168                           fsr2h	equ	0xFDA
  9169                           fsr2l	equ	0xFD9
  9170                           status	equ	0xFD8
  9171                           
  9172                           	psect	rparam
  9173  0000                     pclatu	equ	0xFFB
  9174                           pclath	equ	0xFFA
  9175                           tblptru	equ	0xFF8
  9176                           tblptrh	equ	0xFF7
  9177                           tblptrl	equ	0xFF6
  9178                           tablat	equ	0xFF5
  9179                           prodh	equ	0xFF4
  9180                           prodl	equ	0xFF3
  9181                           intcon	equ	0xFF2
  9182                           indf0	equ	0xFEF
  9183                           postinc0	equ	0xFEE
  9184                           fsr0h	equ	0xFEA
  9185                           fsr0l	equ	0xFE9
  9186                           wreg	equ	0xFE8
  9187                           fsr1h	equ	0xFE2
  9188                           fsr1l	equ	0xFE1
  9189                           indf2	equ	0xFDF
  9190                           fsr2h	equ	0xFDA
  9191                           fsr2l	equ	0xFD9
  9192                           status	equ	0xFD8
  9193                           
  9194                           	psect	temp
  9195  00004B                     btemp:
  9196                           	opt stack 0
  9197  00004B                     	ds	1
  9198  0000                     int$flags	set	btemp
  9199  0000                     wtemp6	set	btemp+1
  9200                           pclatu	equ	0xFFB
  9201                           pclath	equ	0xFFA
  9202                           tblptru	equ	0xFF8
  9203                           tblptrh	equ	0xFF7
  9204                           tblptrl	equ	0xFF6
  9205                           tablat	equ	0xFF5
  9206                           prodh	equ	0xFF4
  9207                           prodl	equ	0xFF3
  9208                           intcon	equ	0xFF2
  9209                           indf0	equ	0xFEF
  9210                           postinc0	equ	0xFEE
  9211                           fsr0h	equ	0xFEA
  9212                           fsr0l	equ	0xFE9
  9213                           wreg	equ	0xFE8
  9214                           fsr1h	equ	0xFE2
  9215                           fsr1l	equ	0xFE1
  9216                           indf2	equ	0xFDF
  9217                           fsr2h	equ	0xFDA
  9218                           fsr2l	equ	0xFD9
  9219                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    567
    Data        1
    BSS         64
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      74
    BANK0           160     12      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 3719
		 -> setnotes(CODE[69]), initnote(CODE[37]), inithop(CODE[20]), noteerr(CODE[28]), 
		 -> credits(CODE[13]), disabled(CODE[9]), enabled(CODE[9]), RAM(DATA[3719]), 
		 -> servmsg(CODE[82]), inscoin(CODE[22]), 

    displ_note@lcdstring	PTR unsigned char  size(2) Largest target is 8
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[8]), 


Critical Paths under _main in COMRAM

    _vend_init->_lcd_string
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_noten->_mdb_comm
    _cctalk_init->_cctalk_adpoll
    _cctalk_init->_cctalk_pinenter
    _cctalk_init->_cctalk_poll
    _cctalk_poll->_cctalk_comm
    _cctalk_pinenter->_cctalk_comm
    _cctalk_adpoll->_cctalk_comm
    _cctalk_comm->_TMR3_Initialize
    _cctalk_comm->_init_mdbdata
    _cctalk_comm->_mdb_transmit
    _mdb_poll->_mdb_comm
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _set_notes->_displ_note
    _enable_notes->_displ_nendis
    _displ_nendis->_lcd_string
    _butindb->_butin
    _displ_note->_lcd_string
    _mdb_reset->_mdb_comm
    _mdb_comm->_TMR1_Initialize
    _mdb_comm->_init_mdbdata
    _mdb_comm->_mdb_transmit
    _mdb_transmit->_EUSART1_Write
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_DATAEE_WriteByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _displ_credit->_displ_hex

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   43453
               _CMP1_GetOutputStatus
                  _SYSTEM_Initialize
                         _credit_add
                    _credit_subtract
                       _displ_credit
                       _displ_noteer
                      _enter_service
                           _lcd_init
                         _lcd_string
                           _mdb_init
                           _mdb_poll
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   10648
                     _DAC1_SetOutput
                        _cctalk_init
                       _credit_check
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             1     1      0    4132
                                             26 COMRAM     1     1      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (2) _cctalk_init                                          1     1      0    3201
                                             26 COMRAM     1     1      0
                      _cctalk_adpoll
                          _cctalk_on
                    _cctalk_pinenter
                        _cctalk_poll
               _eusartmdb_Initialize
                             _mdb_on
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cctalk_poll                                          1     1      0    1037
                                             25 COMRAM     1     1      0
                        _cctalk_comm
 ---------------------------------------------------------------------------------
 (3) _cctalk_pinenter                                      1     1      0    1127
                                             25 COMRAM     1     1      0
                        _cctalk_comm
                       _init_mdbdata
 ---------------------------------------------------------------------------------
 (3) _cctalk_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cctalk_adpoll                                        1     1      0    1037
                                             25 COMRAM     1     1      0
                        _cctalk_comm
 ---------------------------------------------------------------------------------
 (4) _cctalk_comm                                          5     3      2    1036
                                             20 COMRAM     5     3      2
                    _TMR3_Initialize
                        _cctalk_read
                       _init_mdbdata
                       _mdb_transmit
 ---------------------------------------------------------------------------------
 (5) _cctalk_read                                          1     1      0      24
                                             18 COMRAM     1     1      0
                       _EUSART1_Read
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             1     1      0     894
                                             23 COMRAM     1     1      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     687
                                             26 COMRAM     2     2      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     523
                                             25 COMRAM     1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        0     0      0   13687
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                          _Note_test
                         _Sensor_set
                          _Vend_test
                            _butindb
                         _lcd_string
                          _mdb_reset
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            0     0      0    9781
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         1     1      0    3168
                                             31 COMRAM     1     1      0
                            _butindb
                       _displ_nendis
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         1     1      0    2983
                                             30 COMRAM     1     1      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              2     2      0      30
                                             19 COMRAM     2     2      0
                              _butin
 ---------------------------------------------------------------------------------
 (5) _butin                                                1     1      0       0
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           4     2      2    3631
                                             30 COMRAM     4     2      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0     924
                                             23 COMRAM     3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1     893
                                             20 COMRAM     3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      44
                                             19 COMRAM     1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0      90
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Vend_test                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Note_test                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Audit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0    3562
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     610
                                             25 COMRAM     3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0    5046
                                             31 COMRAM     1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3    2952
                                             25 COMRAM     5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _displ_hex                                           15    12      3    1712
                                             28 COMRAM     3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           1     1      0     424
                                             24 COMRAM     1     1      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     229
                                             22 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     164
                                             20 COMRAM     2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      68
                                             18 COMRAM     2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___ltmod                                              7     1      6     412
                                             18 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) ___ltdiv                                             10     4      6     421
                                             18 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0     348
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _credit_subtract                                      1     1      0     915
                                             22 COMRAM     1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _credit_add                                           1     1      0     915
                                             22 COMRAM     1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     545
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     348
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR3_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerHigh                     18    18      0       0
                                              0 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _TMR3_Initialize
     _TMR5_Initialize
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _credit_subtract
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _enter_service
     _Audit
     _Clear_cred
     _Hopper_coin
     _Note_test
     _Sensor_set
     _Vend_test
     _butindb
       _butin
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _vend_init
     _DAC1_SetOutput
     _cctalk_init
       _cctalk_adpoll
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
       _cctalk_on
       _cctalk_pinenter
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
         _init_mdbdata
       _cctalk_poll
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
       _eusartmdb_Initialize
       _mdb_on
     _credit_check
       _DATAEE_ReadByte
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      2C       5       27.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      4A       1       78.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      76       6        0.0%
DATA                 0      0      76       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Dec 26 15:04:08 2017

                       lcd_writeC@lcdata 0019                              __CFG_CP$OFF 000000  
                      ??_CMP1_Initialize 0013                            ?_displ_credit 0001  
                          ?_displ_nendis 0001                          lcd_write@lcdata 0016  
                          ?_displ_noteer 0001                              __CFG_LVP$ON 000000  
                                    LATE 000F87                          _DAC1_Initialize 123A  
               __size_of_cctalk_pinenter 0034                                      l101 11FE  
                                    l234 0E76                                      l712 0612  
                                    l721 0648                                      l713 0624  
                                    l740 08CE                                      l724 064E  
                                    l716 067E                                      l741 08D4  
                                    l717 0676                                      l709 05DC  
                                    l742 08DA                                      l718 065A  
                                    l726 0654                                      l743 08E0  
                                    l735 08BA                                      l719 0642  
                                    l736 08F2                                      l744 08E6  
                                    l745 08EC                                      l737 08C2  
                                    l738 0924                                      l739 08C8  
                                    _GIE 007F97                                      u440 07EA  
                           __CFG_CPD$OFF 000000                                      u570 1236  
                        _timer1ReloadVal 0047                                      prod 000FF3  
                                    wreg 000FE8                           _DAC1_SetOutput 1246  
                         ??_credit_check 0015                             _BAUD1CONbits 000F9F  
                           __CFG_ZCD$OFF 000000                            ?_mdb_security 0001  
                                   l1030 0150                                     l1031 0158  
                                   l1040 01D0                                     l1032 0160  
                                   l1016 0CE4                                     l1041 01D8  
                                   l1033 0168                                     l1050 06FA  
                                   l1042 01E0                                     l1026 0170  
                                   l1051 069C                                     l1043 01E8  
                                   l1027 0140                                     l1060 0448  
                                   l1036 01F0                                     l1028 01A6  
                                   l1053 0720                                     l1061 044E  
                                   l1037 01C0                                     l1029 0148  
                                   l1070 0B5E                                     l1054 0706  
                                   l1062 04C8                                     l2102 02A8  
                                   l1071 0B1E                                     l1063 0454  
                                   l1039 01C8                                     l2103 027A  
                                   l1080 0FCC                                     l1072 0B34  
                                   l2113 1116                                     l2114 110A  
                                   l2106 02CE                                     l2107 02EE  
                                   l1068 0B4A                                     l1069 0B08  
                                   l2109 031E                                     l1086 119E  
                                   l2081 0D7E                                     l1353 0A82  
                                   l1370 112C                                     l2082 0D68  
                        _timer3ReloadVal 0045                                     l1710 0562  
                                   l2511 0AB8                                     l1711 0572  
                                   l2512 0AAE                                     l1720 0BC4  
                                   l1712 0582                                     l2521 0C26  
                                   l1369 1132                                     l1721 0BF2  
                                   l1705 052A                                     l2522 0C1C  
                                   l4106 1080                                     l1722 0BCC  
                                   l1714 05CA                                     l1706 05A4  
                                   l2515 0AE2                                     l1723 0C06  
                                   l1707 0532                                     l2516 0AEE  
                                   l4052 1212                                     l1724 0BDA  
                                   l1708 0542                                     l2525 0C46  
                                   l1725 0BEA                                     l1709 0552  
                                   l2526 0C52                                     l1750 0050  
                                   l1751 0058                                     l1760 009E  
                                   l1744 0062                                     l1761 00A2  
                                   l1745 0030                                     l1754 00C8  
                                   l1762 00A6                                     l1763 00AA  
                                   l1755 0084                                     l1747 0038  
                                   l1764 00AE                                     l1756 008C  
                                   l1748 0040                                     l1773 0378  
                                   l1765 00B2                                     l1757 011C  
                                   l1749 0048                                     l1774 0348  
                                   l1766 00B6                                     l1758 0090  
                                   l1767 00BA                                     l1759 0094  
                                   l1768 00BE                                     l1689 1088  
                                   l1777 039E                                     l1697 0948  
                                   l1769 00C2                                     l1786 0416  
                                   l1778 03D0                                     l1698 092E  
                                   l1779 03A6                                     l5166 07FA  
                                   u1100 037E                                     u1130 03DA  
                                   u1115 03C8                                     u1117 03CA  
                                   u1150 03E4                                     u1215 02F8  
                                   u1217 02FA                                     u2027 0D6E  
                                   u1165 03EE                                     u2037 080E  
                                   _LATA 000F83                                     _LATB 000F84  
                                   u1167 03F0                                     u2047 081C  
                                   _LATC 000F85                                     _LATD 000F86  
                                   u2057 0886                                     _LATE 000F87  
                                   u1450 0D8C                                     u2067 0E1A  
                                   u1365 0E84                                     u2077 0E36  
                                   u1366 0E86                                     u1670 048A  
                                   u1734 09D2                                     u1735 09CE  
                                   u1760 0ABC                                     u1680 04C2  
                                   u1690 04FE                                     u1677 0480  
                                   u1790 0C2A                                     u1687 04B8  
                                   u1697 04F4                                     u1890 081A  
          __size_of_eusartmdb_Initialize 0016                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                          _EUSART1_Write 1210                            __CFG_FCMEN$ON 000000  
                                   _cash 002D                                     _dest 0032  
                                   _main 05D0                                     _exit FE6D  
                          ?_EUSART1_Read 0001                            ?_mdb_transmit 0001  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   indf0 000FEF                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 004B                                     prodh 000FF4  
                                   prodl 000FF3                                     start 00AA  
                        _timer5ReloadVal 0043                               _Clear_cred 128C  
                        _TMR3_Initialize 0F58                   __size_of_enter_service 0094  
                          __CFG_CSWEN$ON 000000                             ___param_bank 000000  
                          __CFG_SCANE$ON 000000                           ??_displ_credit 0020  
              __size_of_DATAEE_WriteByte 003A                           ??_displ_nendis 001F  
         __size_of_OSCILLATOR_Initialize 0018                           ??_displ_noteer 001F  
          __end_of_OSCILLATOR_Initialize 116C                                    ?_main 0001  
                          __CFG_WDTE$OFF 000000                                    _T1CLK 000FD2  
                                  _T1CON 000FCF                                    _T3CLK 000FCC  
                                  _LATA6 007C1E                                    _T3CON 000FC9  
                                  _LATA7 007C1F                                    _T5CLK 000FC6  
                                  _T5CON 000FC3                          __end_of___ltdiv 0AFC  
                         __CFG_DEBUG$OFF 000000                          __end_of___ltmod 0C60  
                 __end_of_DAC1_SetOutput 124E                                    i2l178 005E  
                                  _OSCEN 000EDC                                    _TMR1H 000FCE  
                        __end_of_cc_poll FE81                                    _TMR1L 000FCD  
                                  _TMR3H 000FC8                                    _TMR3L 000FC7  
                                  _TMR5H 000FC2                                    _TMR5L 000FC1  
                                  _PORTA 000F8D                          __end_of_cc_test FE8C  
                                  _PORTD 000F90                          __end_of_cc_stop FE87  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                          __end_of_cashint FE7C  
                        __end_of_cashinv FE7E                                    _Audit 128E  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                          __CFG_WRT4$OFF 000000                            __CFG_WRT5$OFF 000000  
                          __CFG_WRT6$OFF 000000                            __CFG_WRT7$OFF 000000  
                        __end_of_enabled FFD6                           __CFG_EBTR0$OFF 000000  
                      lcd_write@savelatd 0015                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                        __end_of_credclr FDF1                           __CFG_EBTR4$OFF 000000  
                        __end_of_credmem FE80                           __CFG_EBTR5$OFF 000000  
                        __end_of_credits FFC4                           __CFG_EBTR6$OFF 000000  
                         __CFG_EBTR7$OFF 000000                          __end_of_dispclr FEB1  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                        __end_of_dispoff FEAA                            __CFG_WRTD$OFF 000000  
                          ??_Hopper_coin 0013                                    _bflag 0042  
                        _DATAEE_ReadByte 113C                           __CFG_EBTRB$OFF 000000  
                         ??_mdb_security 0018                  __end_of_PIN_MANAGER_IOC 1284  
                                  _audit FE60                          __end_of_butindb 113C  
                        __end_of_dsphome FEAF                                    _line1 FEA6  
                                  _line2 FEA5                                    _line3 FEA4  
                                  _line4 FEA3                                    _count 0049  
                                  _butin 0E14                          __end_of_mastadd FE8E  
                        __end_of_hopcoin FE0B                          __end_of_inithop FFB7  
                        __end_of_inscoin FFA3                       __CFG_MCLRE$EXTMCLR 000000  
                         ?_EUSART1_Write 0001                  __end_of_TMR1_Initialize 0FC0  
                                  pclath 000FFA                                    tablat 000FF5  
                        __end_of_noteerr FF8D                          __end_of_tenrand FFFE  
                        __end_of_service FE52                          __end_of_servmsg FF07  
                         ??_EUSART1_Read 0013                           ??_mdb_transmit 0014  
                                  status 000FD8                                    wtemp6 004C  
                  __end_of_cctalk_adpoll 1102                     __size_of_cctalk_comm 00FC  
                   __size_of_cctalk_init 0044                     __size_of_cctalk_read 001E  
                   __size_of_cctalk_poll 002E                          _TMR5_Initialize 0F24  
           __end_of_CMP1_GetOutputStatus 123A                          __initialization 0E88  
             __end_of_EUSART1_Initialize 11DC                             __end_of_main 0688  
                __end_of_DAC1_Initialize 1246                             __end_of_exit FE72  
                                 ??_main 0023                            __activetblptr 000003  
                        ?_DAC1_SetOutput 0001                     __end_of_enable_notes 0C0C  
                            butindb@butt 0014                                   ?_Audit 0001  
                          _enter_service 0896               __end_of_EUSART2_Initialize 1184  
                      ??_cctalk_pinenter 001A                                   ?_butin 0001  
                                 _CM1NCH 000F3B                                   _CM1PCH 000F3C  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                                   _T1GATE 000FD1  
                                 _T1GCON 000FD0                                   _T3GATE 000FCB  
                                 _T3GCON 000FCA                                   _T5GATE 000FC5  
                                 _T5GCON 000FC4                                   _RC1REG 000F99  
                                 _RC2REG 000E99                                   _RC1STA 000F9D  
                                 _RC2STA 000E9D                                   _RB5PPS 000EF4  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _RC6PPS 000EFD  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
               __size_of_credit_subtract 0056                         credit_add@credit 0017  
                __end_of_TMR3_Initialize 0F8C                           __CFG_WDTCCS$SC 000000  
                                 _TABLAT 000FF5                            ?_init_mdbdata 0001  
                       __end_of_cc_level FE86                                   _OSCFRQ 000EDE  
                                 _NVMDAT 000F80                         __end_of_cc_reset FE8D  
                                 _TX1REG 000F9A                                   _TX2REG 000E9A  
                                 _TX1STA 000F9E                                   _TX2STA 000E9E  
                    __end_of_Hopper_coin 128C                              ?_Clear_cred 0001  
                         __CFG_PWRTE$OFF 000000                  DAC1_SetOutput@inputData 0013  
                         __CFG_XINST$OFF 000000                         __end_of_disabled FFCD  
                   __size_of_lcd_dispadd 0016                         __end_of_dispaddr FEB0  
                       __end_of_lcd_init 0896                         __end_of_lcd_test 11B0  
                       __end_of_mdb_comm 041E                         __end_of_mdb_init 0D54  
                       __end_of_mdb_poll 0122                     __end_of_credit_check 10C2  
                                 _cc_pay FE88                                   _cc_pin FE84  
                         __CFG_STVREN$ON 000000                               _Sensor_set 1286  
                              ??___ltdiv 0019                          mdb_reset@i_2281 001A  
                              ??___ltmod 0019                                   _credit 002E  
                                 _lcdata 0040                                   _dispon FEB1  
                                 _mdb_on 1278                                   _dispsl FEA7  
                                 _dispsr FEA8                                   _ercode 003D  
                                 _hexnum 0026                                   _hopadd FE8E  
                                 _mcount 003A                                   clear_0 0EA0  
                                 clear_1 0EAC                         __end_of_initnote FF71  
                                 _noteen 0036                                   _senset FE34  
                     __size_of_Note_test 0002                                   _slvadd 003B  
                       __end_of_nochange FE34                                   _stradd 003E  
                      read_busy@savelatd 0014                        read_busy@savelate 0013  
                __end_of_DATAEE_ReadByte 1154                       __size_of_Vend_test 0002  
                              ??_butindb 0014                             __pdataCOMRAM 004A  
                         ?_enter_service 0001                         __end_of_notebits FE74  
                       __end_of_notetest FE60                             __mediumconst FDC6  
                       __end_of_setnotes FF4C                                   tblptrh 000FF7  
                                 tblptrl 000FF6                         __end_of_vendtest FE24  
                                 tblptru 000FF8                          ??_EUSART1_Write 0013  
                       ?_PIN_MANAGER_IOC 0001            __size_of_INTERRUPT_Initialize 0008  
                         ??_init_mdbdata 0013                     __end_of_displ_credit 0F24  
                       ?_TMR1_Initialize 0001                  __end_of_TMR5_Initialize 0F58  
       ??_INTERRUPT_InterruptManagerHigh 0001          ?_INTERRUPT_InterruptManagerHigh 0001  
                      _SYSTEM_Initialize 1050                     __end_of_displ_nendis 0D06  
                             __accesstop 0060                  __end_of__initialization 0EB2  
                   __end_of_displ_noteer 1022                    __end_of_note_features FE9C  
                        _CMP1_Initialize 11DC                       ?_SYSTEM_Initialize 0001  
                  __end_of_theft_attempt FE90                            ___rparam_used 000001  
                          __end_of_Audit 1290                           __pcstackCOMRAM 0001  
                    ??_SYSTEM_Initialize 0015                         ?_DAC1_Initialize 0001  
                   __end_of_mdb_security 10E2                            __end_of_audit FE6D  
                       _DATAEE_WriteByte 0E4E                            __end_of_line1 FEA7  
                          __end_of_line2 FEA6                            __end_of_line3 FEA5  
                          __end_of_line4 FEA4                            __end_of_butin 0E4E  
                  __end_of_note_rejected FE91                       __size_of_cctalk_on 0006  
                  __end_of_note_security FEA1                     __end_of_EUSART1_Read 1202  
                   __end_of_mdb_transmit 1210                               _cc_countrq FE87  
                                ??_Audit 0013                      __size_of_Clear_cred 0002  
                   _CMP1_GetOutputStatus 122C                       __size_of_displ_hex 00B6  
                            _Hopper_coin 128A                       __size_of_lcd_write 0032  
                                ??_butin 0013                __end_of_SYSTEM_Initialize 107A  
                     __size_of_mdb_reset 0086                       __size_of_mdb_noten 003A  
                     __size_of_mdb_waitr 0006                       __size_of_mdb_waitx 0006  
                             __pbssBANK0 0060                      displ_hex@hexnumsave 0088  
                       ?_TMR3_Initialize 0001                        __end_of_Note_test 128A  
                             __pnvCOMRAM 0043                        __end_of_Vend_test 1286  
                     __size_of_read_busy 0042                        ??_credit_subtract 0017  
                        __CFG_PPS1WAY$ON 000000                              ?_Sensor_set 0001  
           __end_of_eusartmdb_Initialize 119A                      displ_nendis@notenum 001F  
                  __size_of_enable_notes 0054                                  ?_mdb_on 0001  
                                _CM1CON0 000F39                                  _CM1CON1 000F3A  
                        ??_enter_service 0023                       __size_of_set_notes 00CA  
                       ?_DATAEE_ReadByte 0013                       __size_of_vend_init 006A  
                             _credit_add 0C60                        __end_of_cc_adpoll FE82  
                             _lcd_clockE 121E                               _lcd_clockH 1256  
                             _lcd_clockL 124E                        __end_of_cc_enable FE8B  
                                _SP1BRGH 000F9C                                  _SP1BRGL 000F9B  
                                _SP2BRGH 000E9C                                  _SP2BRGL 000E9B  
                             _lcdaddress 003C                                  _OSCCON1 000ED8  
                                _OSCCON3 000EDA                                  _TBLPTRH 000FF7  
                                _TBLPTRL 000FF6                                  _TBLPTRU 000FF8  
                  ?_CMP1_GetOutputStatus 0001                                  _NVMADRH 000F7F  
                                _NVMADRL 000F7E                               _jammed_err FE96  
                                _OSCTUNE 000EDD                                  _NVMCON2 000F82  
                      __end_of_cc_newpin FE84                        __end_of_cc_serial FE83  
                             _displ_code 0122                                  _PPSLOCK 000EA0  
                             _displ_note 09B0                  __end_of_CMP1_Initialize 11F0  
                      __end_of_cc_status FE8A                               _lcd_string 041E  
                             _dispcursor FEAC                               _lcd_writeC 0AFC  
                              ?_lcd_init 0001                                ?_lcd_test 0001  
                              ?_mdb_comm 0015                                ?_mdb_init 0001  
                             _dispshleft FEAA                               _dispnormal FEAD  
                              ?_mdb_poll 0001                         ?_TMR5_Initialize 0001  
                      __end_of_cctalk_on 126C                     DATAEE_WriteByte@bAdd 0013  
                         displ_hex@value 0080                    __size_of_credit_check 0022  
                           _enable_notes 0BB8                                  __Hparam 0000  
                                __Lparam 0000               __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                         mdb_comm@mcount 0015                        __end_of_displ_hex 073E  
                      __end_of_dispfunc1 FEB5                        __end_of_dispfunc2 FEB4  
                      __end_of_dispfunc3 FEB3                        __end_of_lcd_write 0FF2  
                      __end_of_fiftyrand FFEE                           mdb_comm@slvadd 0016  
                                ___ltdiv 0A92                        __end_of_mdb_reset 09B0  
                      __end_of_mdb_noten 0E14                                  ___ltmod 0C0C  
                      __end_of_mdb_waitr 1272                         ??_DAC1_SetOutput 0013  
                      __end_of_mdb_waitx 1278                                  _cc_poll FE80  
                                _cc_test FE8B                                  _cc_stop FE86  
                        __size_of_mdb_on 0006                                  _dbcount 0029  
                                __pcinit 0E88                                  _cashint FE7A  
                   __end_of_init_mdbdata 10A0                                  _cashinv FE7C  
                        _cctalk_pinenter 0EBC                                  __ramtop 0F00  
                                _chkbyte 0038                                  _enabled FFCD  
                             _errorflags 0034                                  __ptext0 05D0  
                                __ptext1 0A28                                  __ptext2 0D06  
                                __ptext3 10C2                                  __ptext4 0DDA  
                                __ptext5 0D54                                  __ptext6 1184  
                                __ptext7 1022                                  __ptext8 0EBC  
                                __ptext9 1266                                  _credclr FDC7  
                                _credmem FE7E                                  _credits FFB7  
                                _command 0030                                  _dispclr FEB0  
                                _dispoff FEA9                                  _mdbdata 0060  
                                _lcdfunc 0041                                  _lcdline 003F  
                              _T1CONbits 000FCF                                  _butindb 1120  
                                _dsphome FEAE                    _OSCILLATOR_Initialize 1154  
                                _mastadd FE8D                                  _hopcoin FDF1  
                                _buttons 002C                                  _inithop FFA3  
                              _T3CONbits 000FC9                                  _inscoin FF8D  
                              _CMOUTbits 000F3D                        __end_of_read_busy 0DDA  
                     _EUSART1_Initialize 11C6                 ??_PIN_MANAGER_Initialize 0013  
                  __size_of_displ_credit 0034                                _T5CONbits 000FC3  
                                _nobytes 0031                                  _noteerr FF71  
                                _tenrand FFF6                                  _notenum 004A  
                                _service FE43                    __size_of_displ_nendis 0052  
                                _servmsg FEB5                    __size_of_displ_noteer 0030  
             __size_of_SYSTEM_Initialize 002A                             _credit_check 10A0  
                             ??_lcd_init 001B                               ??_lcd_test 001A  
                             ??_mdb_comm 0016                               ??_mdb_init 001B  
                   end_of_initialization 0EB2                               ??_mdb_poll 0018  
                    __size_of_Sensor_set 0002                      ?_EUSART1_Initialize 0001  
                          ??_cctalk_comm 0017                            ??_cctalk_init 001B  
                          ??_cctalk_read 0013                            ??_cctalk_poll 001A  
                      __end_of_note_poll FEA0                        __end_of_set_notes 05D0  
                      __end_of_note_type FE9F                        __end_of_just_busy FE99  
                           ??_Clear_cred 0013                        __end_of_vend_init 0A92  
                  __size_of_mdb_security 0020                         ___ltdiv@dividend 0013  
                      __end_of_rom_error FE98                       _EUSART2_Initialize 116C  
                      __end_of_vendstore FE7A                               _note_reset FEA2  
                             _sens_error FE99                               _note_setup FEA1  
                                postinc0 000FEE                    __size_of_EUSART1_Read 0012  
                             _motr_error FE9A                    __size_of_mdb_transmit 000E  
                             _just_reset FE95                     ??_EUSART1_Initialize 0013  
                             _pricestore FE76                    __CFG_WDTCPS$WDTCPS_31 000000  
                    ?_EUSART2_Initialize 0001                             _displ_credit 0EF0  
                           _displ_nendis 0CB4                               _venderrors FE74  
                       displ_code@ercode 001C                             _displ_noteer 0FF2  
                            ?_credit_add 0001                              ?_lcd_clockE 0001  
                            ?_lcd_clockH 0001                              ?_lcd_clockL 0001  
                 ??_CMP1_GetOutputStatus 0013                   __size_of_cctalk_adpoll 0020  
                       ___ltdiv@quotient 0019                       __end_of_Clear_cred 128E  
                            ?_displ_code 0001                              ?_displ_note 001F  
                            ?_lcd_string 001A                              ?_lcd_writeC 0001  
                    EUSART1_Write@txData 0013                         ?_CMP1_Initialize 0001  
                       __CFG_FEXTOSC$OFF 000000                 __end_of_DATAEE_WriteByte 0E88  
                           _mdb_security 10C2                     ??_EUSART2_Initialize 0013  
                   _eusartmdb_Initialize 1184                             _EUSART1_Read 11F0  
                    __end_of_cashbox_err FE94                             _mdb_transmit 1202  
                          ??_lcd_dispadd 0017                               displ_hex@i 008B  
                    __end_of_cctalk_comm 0324                      __end_of_cctalk_init 0D98  
                    __end_of_cctalk_read 1120                  __end_of_cctalk_pinenter 0EF0  
                    __end_of_cctalk_poll 1050                               mdb_reset@i 0019  
           __end_of_INTERRUPT_Initialize 1266                       mdb_transmit@txbyte 0014  
                             _twentyrand FFEE                           __end_of_cc_pay FE89  
                         __end_of_cc_pin FE85                            __pidataCOMRAM 1290  
                         __end_of_dispon FEB2                           __end_of_mdb_on 127E  
                         __end_of_dispsl FEA8                           __end_of_dispsr FEA9  
                       displ_credit@cash 0020                           __end_of_hopadd FE8F  
                 ?_OSCILLATOR_Initialize 0001                           __end_of_senset FE43  
                    start_initialization 0E88          __size_of_PIN_MANAGER_Initialize 00B0  
                           ?_Hopper_coin 0001                          _credit_subtract 0B62  
                  ?_eusartmdb_Initialize 0001                    __end_of_EUSART1_Write 121E  
                    DATAEE_ReadByte@bAdd 0013                 __size_of_PIN_MANAGER_IOC 0006  
                          _cctalk_adpoll 10E2                      __size_of_credit_add 0054  
                       __CFG_LPBOREN$OFF 000000                      __size_of_lcd_clockE 000E  
                    __size_of_lcd_clockH 0008                      __size_of_lcd_clockL 0008  
                              _Note_test 1288                 __size_of_TMR1_Initialize 0034  
                  __size_of_init_mdbdata 0026                                _Vend_test 1284  
                           ??_Sensor_set 0013                      __size_of_displ_code 0106  
                    __end_of_lcd_dispadd 11C6                      __size_of_displ_note 0078  
                               ??_mdb_on 0013                      __size_of_lcd_string 00E8  
                    __size_of_lcd_writeC 0066                 __size_of_DAC1_Initialize 000C  
                            __pbssCOMRAM 0023                            __pcstackBANK0 0080  
                    __end_of_dispshright FEAC                            butindb@butval 0015  
                              _cc_adpoll FE81                              _cashbox_err FE93  
                              _cc_enable FE8A                     __end_of_note_removed FE95  
                  credit_subtract@credit 0017                     __end_of_note_stacker FE9D  
                              _cc_newpin FE83                     init_mdbdata@initdata 0013  
                              _cc_serial FE82                       __end_of_Sensor_set 1288  
                            _cctalk_comm 0228                              _cctalk_init 0D54  
                            _cctalk_read 1102                             _init_mdbdata 107A  
                      __size_of_lcd_init 00A8                              _cctalk_poll 1022  
                      __size_of_lcd_test 0016                        __size_of_mdb_comm 00FA  
                              _cc_status FE89                        __size_of_mdb_init 004E  
                      __size_of_mdb_poll 0122                           ?_cctalk_adpoll 0001  
                              _cctalk_on 1266                   _PIN_MANAGER_Initialize 073E  
                             ?_Note_test 0001                         ?_cctalk_pinenter 0001  
               __size_of_TMR3_Initialize 0034                                __pintcode 0008  
                          __pmediumconst FDC6                               ?_Vend_test 0001  
                               ?___ltdiv 0013                                 ?___ltmod 0013  
                               _DAC1CON0 000F33                                 _DAC1CON1 000F34  
                              _displ_hex 0688                                _dispfunc1 FEB4  
                              _dispfunc2 FEB3                                _dispfunc3 FEB2  
                              _lcd_write 0FC0                                _fiftyrand FFE6  
                              _mdb_reset 092A                                _mdb_noten 0DDA  
                              _mdb_waitr 126C                                _mdb_waitx 1272  
                               _BAUD1CON 000F9F                                 _BAUD2CON 000E9F  
                __end_of_credit_subtract 0BB8                                 ?_butindb 0001  
                  __end_of_enter_service 092A                           __size_of_Audit 0002  
                              _mdbtxbyte 0033                           _acept_disabled FE92  
                 ??_eusartmdb_Initialize 0013                           __size_of_butin 003A  
               __size_of_DATAEE_ReadByte 0018                                _read_busy 0D98  
                   _INTERRUPT_Initialize 125E                         ___ltmod@dividend 0013  
                  lcd_dispadd@lcdaddress 0017                                 _LATCbits 000F85  
                  lcd_dispadd@lcdatasave 0018                                 _IPR0bits 000EBA  
                               _PIE0bits 000EC2                            _note_features FE9B  
                            _lcd_dispadd 11B0                      __CFG_BORV$VBOR_2P45 000000  
                          _theft_attempt FE8F                               ?_cctalk_on 0001  
                     __end_of_cc_countrq FE88                                 _PIR0bits 000ECA  
                        ___ltdiv@divisor 0016                             cctalk_comm@i 0018  
                               _PIR3bits 000ECD                                 _PIR4bits 000ECE  
                               _PIR7bits 000ED1                          ___ltdiv@counter 001C  
                              _note_poll FE9F                                _set_notes 0506  
               __size_of_TMR5_Initialize 0034                                _note_type FE9E  
                              _just_busy FE98                             cctalk_poll@i 001A  
                              _vend_init 0A28                                _rom_error FE97  
                      ??_PIN_MANAGER_IOC 0001                                _vendstore FE78  
                          _note_rejected FE90                        ??_TMR1_Initialize 0013  
                             ?_displ_hex 001D                               ?_lcd_write 0001  
                          _note_security FEA0                      __end_of_hundredrand FFE6  
                             ?_mdb_reset 0001                               ?_mdb_noten 0001  
                            _dispshright FEAB                               ?_mdb_waitr 0001  
                             ?_mdb_waitx 0001                             ??_credit_add 0017  
                           ??_lcd_clockE 0013                             ??_lcd_clockH 0013  
                           ??_lcd_clockL 0013                                mdb_comm@i 0017  
                 __end_of_acept_disabled FE93                                mdb_init@i 001B  
                  DATAEE_WriteByte@bData 0015                             ??_displ_code 001A  
                              mdb_poll@i 0018                          displ_hex@hexnum 001D  
                           ??_displ_note 0021                             ??_lcd_string 001D  
                           ??_lcd_writeC 0019                               ?_read_busy 0001  
                  ?_INTERRUPT_Initialize 0001                        ??_DAC1_Initialize 0013  
                      ?_DATAEE_WriteByte 0013                     __size_of_Hopper_coin 0002  
                        ??_cctalk_adpoll 001A                       ??_DATAEE_WriteByte 0016  
                    lcd_string@lcdstring 001A                                 __Hrparam 0000  
                            ??_Note_test 0013                                 __Lrparam 0000  
                     __end_of_credit_add 0CB4                       __CFG_BOREN$SBORDIS 000000  
                             ?_set_notes 0001                       __end_of_lcd_clockE 122C  
                     __end_of_lcd_clockH 125E                       __end_of_lcd_clockL 1256  
                            ??_Vend_test 0013                               ?_vend_init 0001  
                ??_OSCILLATOR_Initialize 0013                       __end_of_jammed_err FE97  
                     __end_of_displ_code 0228                       __end_of_displ_note 0A28  
            __size_of_EUSART1_Initialize 0016                         __size_of___ltdiv 006A  
                       __size_of___ltmod 0054                       __end_of_lcd_string 0506  
                     __end_of_dispcursor FEAD                       __end_of_lcd_writeC 0B62  
                         _invalid_escrow FE91                      __end_of_note_escrow FE9E  
                     __end_of_dispshleft FEAB                       __end_of_dispnormal FEAE  
                      ??_TMR3_Initialize 0013                                 _cc_level FE85  
                       cctalk_pinenter@i 001A                                 _cc_reset FE8C  
                       ?_credit_subtract 0001                         __size_of_butindb 001C  
                               _cctflags 002F                  __size_of_DAC1_SetOutput 0008  
          __size_of_CMP1_GetOutputStatus 000E                                 __ptext10 10E2  
                               __ptext11 0228                                 __ptext20 0CB4  
                               __ptext12 1102                                 __ptext21 1120  
                               __ptext13 1246                               _T1GCONbits 000FD0  
                               __ptext30 1278                                 __ptext22 0E14  
                               __ptext14 0000                                 __ptext31 107A  
                               __ptext23 09B0                                 __ptext15 07EE  
                               __ptext40 0122                                 __ptext32 11F0  
                               __ptext24 092A                                 __ptext16 119A  
                               __ptext41 0EF0                                 __ptext33 1284  
                               __ptext25 0324                                 __ptext17 0896  
                               __ptext50 121E                                 __ptext42 041E  
                               __ptext34 1286                                 __ptext26 126C  
                               __ptext18 0506                                 __ptext51 0C0C  
                               __ptext43 0688                                 __ptext35 1288  
                               __ptext27 1202                                 __ptext19 0BB8  
                               __ptext60 0F58                                 __ptext52 0A92  
                               __ptext44 0AFC                                 __ptext36 128A  
                               __ptext28 1272                                 __ptext61 0F8C  
                               __ptext53 10A0                                 __ptext45 11B0  
                               __ptext37 128C                                 __ptext29 1210  
                               __ptext62 073E                                 __ptext54 0B62  
                               __ptext46 0FC0                                 __ptext38 128E  
                               __ptext71 127E                                 __ptext63 1154  
                               __ptext55 0C60                                 __ptext47 0D98  
                               __ptext39 0FF2                                 __ptext64 125E  
                               __ptext56 0E4E                                 __ptext48 124E  
                               __ptext65 116C                                 __ptext57 113C  
                               __ptext49 1256                                 __ptext66 11C6  
                               __ptext58 1050                                 __ptext67 123A  
                               __ptext59 0F24                                 __ptext68 11DC  
                               __ptext69 122C                                 _disabled FFC4  
                               _dispaddr FEAF                                 _lcd_init 07EE  
                               _lcd_test 119A                                 _mdb_comm 0324  
                               _mdb_init 0D06                                 _mdb_poll 0000  
                               _mdbflags 0037                               _T3GCONbits 000FCA  
            DATAEE_WriteByte@GIEBitValue 0016              __size_of_EUSART2_Initialize 0018  
                          __size_of_main 00B8                               _T5GCONbits 000FC4  
                               _initnote FF4C                                 _hpserial 0023  
                               _nochange FE24                          ___ltmod@divisor 0016  
                        cctalk_comm@dest 0019                        ??_DATAEE_ReadByte 0015  
                   __CFG_WDTCWS$WDTCWS_7 000000                 __size_of_CMP1_Initialize 0014  
                        ___ltmod@counter 0019                              ??_cctalk_on 0013  
                             _RC1STAbits 000F9D                                 _notebits FE72  
                             _RC2STAbits 000E9D                                 _notebyte 0039  
                               _notetest FE52                                 _venflags 002B  
                               _setnotes FF07                            init_mdbdata@i 0014  
                               _vendtest FE0B                              _hundredrand FFDE  
                               int$flags 004B                   __end_of_invalid_escrow FE92  
                     cctalk_comm@command 0016                             _note_removed FE94  
                           _note_stacker FE9C                          cctalk_read@data 0013  
                            ??_displ_hex 0020              PIN_MANAGER_Initialize@state 0013  
                            ??_lcd_write 0015                        ??_TMR5_Initialize 0013  
                     cctalk_comm@nobytes 0015                              ??_mdb_reset 0018  
                            ??_mdb_noten 0018                              ??_mdb_waitr 0013  
                            ??_mdb_waitx 0013                               _INTCONbits 000FF2  
                            _NVMCON1bits 000F81                   ??_INTERRUPT_Initialize 0013  
                            ??_read_busy 0013                       __end_of_note_reset FEA3  
                         _twohundredrand FFD6                       __end_of_sens_error FE9A  
                     __end_of_note_setup FEA2                                 intlevel2 0000  
                     __end_of_motr_error FE9B                             ?_cctalk_comm 0015  
                     __end_of_just_reset FE96                             ?_cctalk_init 0001  
                           ?_cctalk_read 0001                             ?_cctalk_poll 0001  
                ?_PIN_MANAGER_Initialize 0001                       __end_of_pricestore FE78  
                         cctalk_adpoll@i 001A                        __CFG_CLKOUTEN$OFF 000000  
                          ?_enable_notes 0001                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors FE76                      displ_note@lcdstring 001F  
                            _note_escrow FE9D                              ??_set_notes 0023  
                            ??_vend_init 001F                              _noteen_byte 0035  
                      lcd_string@lcdline 001C                   __size_of_EUSART1_Write 000E  
 __end_of_INTERRUPT_InterruptManagerHigh 00AA  __size_of_INTERRUPT_InterruptManagerHigh 00A2  
         _INTERRUPT_InterruptManagerHigh 0008                               _RX1PPSbits 000EB5  
                             _RX2PPSbits 000E8D                        lcd_test@character 001A  
                 __end_of_twohundredrand FFDE                            ?_credit_check 0001  
                             _TX1STAbits 000F9E           __end_of_PIN_MANAGER_Initialize 07EE  
                    enable_notes@notenum 0020                       __end_of_twentyrand FFF6  
                        _PIN_MANAGER_IOC 127E                           ??_enable_notes 0020  
                           ?_lcd_dispadd 0001                          _TMR1_Initialize 0F8C  
