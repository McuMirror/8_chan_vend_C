

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Oct 30 15:04:47 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 1.44
    59                           ; Generated 14/09/2017 GMT
    60                           ; 
    61                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F47K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  0017D2                     __pidataCOMRAM:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _noteen_byte
    98  0017D2  1F                 	db	31
    99                           
   100                           	psect	smallconst
   101  000F00                     __psmallconst:
   102                           	opt stack 0
   103  000F00  00                 	db	0
   104  000F01                     _venderrors:
   105                           	opt stack 0
   106  000F01  0017               	dw	23
   107  000F03                     __end_of_venderrors:
   108                           	opt stack 0
   109  000F03                     _pricestore:
   110                           	opt stack 0
   111  000F03  000F               	dw	15
   112  000F05                     __end_of_pricestore:
   113                           	opt stack 0
   114  000F05                     _vendstore:
   115                           	opt stack 0
   116  000F05  0007               	dw	7
   117  000F07                     __end_of_vendstore:
   118                           	opt stack 0
   119  000F07                     _cashint:
   120                           	opt stack 0
   121  000F07  0004               	dw	4
   122  000F09                     __end_of_cashint:
   123                           	opt stack 0
   124  000F09                     _cashinv:
   125                           	opt stack 0
   126  000F09  0002               	dw	2
   127  000F0B                     __end_of_cashinv:
   128                           	opt stack 0
   129  000F0B                     _credmem:
   130                           	opt stack 0
   131  000F0B  0000               	dw	0
   132  000F0D                     __end_of_credmem:
   133                           	opt stack 0
   134  000F0D                     _theft_attempt:
   135                           	opt stack 0
   136  000F0D  0C                 	db	12
   137  000F0E                     __end_of_theft_attempt:
   138                           	opt stack 0
   139  000F0E                     _note_rejected:
   140                           	opt stack 0
   141  000F0E  0B                 	db	11
   142  000F0F                     __end_of_note_rejected:
   143                           	opt stack 0
   144  000F0F                     _invalid_escrow:
   145                           	opt stack 0
   146  000F0F  0A                 	db	10
   147  000F10                     __end_of_invalid_escrow:
   148                           	opt stack 0
   149  000F10                     _acept_disabled:
   150                           	opt stack 0
   151  000F10  09                 	db	9
   152  000F11                     __end_of_acept_disabled:
   153                           	opt stack 0
   154  000F11                     _cashbox_err:
   155                           	opt stack 0
   156  000F11  08                 	db	8
   157  000F12                     __end_of_cashbox_err:
   158                           	opt stack 0
   159  000F12                     _note_removed:
   160                           	opt stack 0
   161  000F12  07                 	db	7
   162  000F13                     __end_of_note_removed:
   163                           	opt stack 0
   164  000F13                     _just_reset:
   165                           	opt stack 0
   166  000F13  06                 	db	6
   167  000F14                     __end_of_just_reset:
   168                           	opt stack 0
   169  000F14                     _jammed_err:
   170                           	opt stack 0
   171  000F14  05                 	db	5
   172  000F15                     __end_of_jammed_err:
   173                           	opt stack 0
   174  000F15                     _rom_error:
   175                           	opt stack 0
   176  000F15  04                 	db	4
   177  000F16                     __end_of_rom_error:
   178                           	opt stack 0
   179  000F16                     _just_busy:
   180                           	opt stack 0
   181  000F16  03                 	db	3
   182  000F17                     __end_of_just_busy:
   183                           	opt stack 0
   184  000F17                     _sens_error:
   185                           	opt stack 0
   186  000F17  02                 	db	2
   187  000F18                     __end_of_sens_error:
   188                           	opt stack 0
   189  000F18                     _motr_error:
   190                           	opt stack 0
   191  000F18  01                 	db	1
   192  000F19                     __end_of_motr_error:
   193                           	opt stack 0
   194  000F19                     _note_features:
   195                           	opt stack 0
   196  000F19  33                 	db	51
   197  000F1A                     __end_of_note_features:
   198                           	opt stack 0
   199  000F1A                     _note_stacker:
   200                           	opt stack 0
   201  000F1A  36                 	db	54
   202  000F1B                     __end_of_note_stacker:
   203                           	opt stack 0
   204  000F1B                     _note_escrow:
   205                           	opt stack 0
   206  000F1B  35                 	db	53
   207  000F1C                     __end_of_note_escrow:
   208                           	opt stack 0
   209  000F1C                     _note_type:
   210                           	opt stack 0
   211  000F1C  34                 	db	52
   212  000F1D                     __end_of_note_type:
   213                           	opt stack 0
   214  000F1D                     _note_poll:
   215                           	opt stack 0
   216  000F1D  33                 	db	51
   217  000F1E                     __end_of_note_poll:
   218                           	opt stack 0
   219  000F1E                     _note_security:
   220                           	opt stack 0
   221  000F1E  32                 	db	50
   222  000F1F                     __end_of_note_security:
   223                           	opt stack 0
   224  000F1F                     _note_setup:
   225                           	opt stack 0
   226  000F1F  31                 	db	49
   227  000F20                     __end_of_note_setup:
   228                           	opt stack 0
   229  000F20                     _note_reset:
   230                           	opt stack 0
   231  000F20  30                 	db	48
   232  000F21                     __end_of_note_reset:
   233                           	opt stack 0
   234  000F21                     _dispsl:
   235                           	opt stack 0
   236  000F21  18                 	db	24
   237  000F22                     __end_of_dispsl:
   238                           	opt stack 0
   239  000F22                     _dispsr:
   240                           	opt stack 0
   241  000F22  1B                 	db	27
   242  000F23                     __end_of_dispsr:
   243                           	opt stack 0
   244  000F23                     _dispoff:
   245                           	opt stack 0
   246  000F23  08                 	db	8
   247  000F24                     __end_of_dispoff:
   248                           	opt stack 0
   249  000F24                     _dispshleft:
   250                           	opt stack 0
   251  000F24  07                 	db	7
   252  000F25                     __end_of_dispshleft:
   253                           	opt stack 0
   254  000F25                     _dispshright:
   255                           	opt stack 0
   256  000F25  05                 	db	5
   257  000F26                     __end_of_dispshright:
   258                           	opt stack 0
   259  000F26                     _dispcursor:
   260                           	opt stack 0
   261  000F26  04                 	db	4
   262  000F27                     __end_of_dispcursor:
   263                           	opt stack 0
   264  000F27                     _dispnormal:
   265                           	opt stack 0
   266  000F27  06                 	db	6
   267  000F28                     __end_of_dispnormal:
   268                           	opt stack 0
   269  000F28                     _dsphome:
   270                           	opt stack 0
   271  000F28  02                 	db	2
   272  000F29                     __end_of_dsphome:
   273                           	opt stack 0
   274  000F29                     _dispaddr:
   275                           	opt stack 0
   276  000F29  A8                 	db	168
   277  000F2A                     __end_of_dispaddr:
   278                           	opt stack 0
   279  000F2A                     _dispclr:
   280                           	opt stack 0
   281  000F2A  01                 	db	1
   282  000F2B                     __end_of_dispclr:
   283                           	opt stack 0
   284  000F2B                     _dispon:
   285                           	opt stack 0
   286  000F2B  0C                 	db	12
   287  000F2C                     __end_of_dispon:
   288                           	opt stack 0
   289  000F2C                     _dispfunc2:
   290                           	opt stack 0
   291  000F2C  28                 	db	40
   292  000F2D                     __end_of_dispfunc2:
   293                           	opt stack 0
   294  000F2D                     _dispfunc1:
   295                           	opt stack 0
   296  000F2D  24                 	db	36
   297  000F2E                     __end_of_dispfunc1:
   298                           	opt stack 0
   299  000F2E                     _inscoin:
   300                           	opt stack 0
   301  000F2E  49                 	db	73
   302  000F2F  6E                 	db	110
   303  000F30  73                 	db	115
   304  000F31  65                 	db	101
   305  000F32  72                 	db	114
   306  000F33  74                 	db	116
   307  000F34  20                 	db	32
   308  000F35  43                 	db	67
   309  000F36  6F                 	db	111
   310  000F37  69                 	db	105
   311  000F38  6E                 	db	110
   312  000F39  73                 	db	115
   313  000F3A  20                 	db	32
   314  000F3B  6F                 	db	111
   315  000F3C  72                 	db	114
   316  000F3D  20                 	db	32
   317  000F3E  4E                 	db	78
   318  000F3F  6F                 	db	111
   319  000F40  74                 	db	116
   320  000F41  65                 	db	101
   321  000F42  73                 	db	115
   322  000F43  00                 	db	0
   323  000F44                     __end_of_inscoin:
   324                           	opt stack 0
   325  000F44                     _credits:
   326                           	opt stack 0
   327  000F44  20                 	db	32
   328  000F45  20                 	db	32
   329  000F46  43                 	db	67
   330  000F47  72                 	db	114
   331  000F48  65                 	db	101
   332  000F49  64                 	db	100
   333  000F4A  69                 	db	105
   334  000F4B  74                 	db	116
   335  000F4C  20                 	db	32
   336  000F4D  3D                 	db	61
   337  000F4E  20                 	db	32
   338  000F4F  52                 	db	82
   339  000F50  00                 	db	0
   340  000F51                     __end_of_credits:
   341                           	opt stack 0
   342  000F51  00                 	db	0	; dummy byte at the end
   343  0000                     
   344                           	psect	nvCOMRAM
   345  00003F                     __pnvCOMRAM:
   346                           	opt stack 0
   347  00003F                     _timer1ReloadVal:
   348                           	opt stack 0
   349  00003F                     	ds	2
   350  000041                     _count:
   351                           	opt stack 0
   352  000041                     	ds	1
   353  0000                     _PIR4bits	set	3790
   354  0000                     _TX2REG	set	3738
   355  0000                     _RC2REG	set	3737
   356  0000                     _RC2STAbits	set	3741
   357  0000                     _SP2BRGH	set	3740
   358  0000                     _SP2BRGL	set	3739
   359  0000                     _TX2STA	set	3742
   360  0000                     _RC2STA	set	3741
   361  0000                     _BAUD2CON	set	3743
   362  0000                     _PIR7bits	set	3793
   363  0000                     _IPR0bits	set	3770
   364  0000                     _OSCTUNE	set	3805
   365  0000                     _OSCFRQ	set	3806
   366  0000                     _OSCEN	set	3804
   367  0000                     _OSCCON3	set	3802
   368  0000                     _OSCCON1	set	3800
   369  0000                     _PIR3bits	set	3789
   370  0000                     _PIR0bits	set	3786
   371  0000                     _RX2PPSbits	set	3725
   372  0000                     _RB5PPS	set	3828
   373  0000                     _RC6PPS	set	3837
   374  0000                     _RX1PPSbits	set	3765
   375  0000                     _PPSLOCKbits	set	3744
   376  0000                     _PPSLOCK	set	3744
   377  0000                     _PIE0bits	set	3778
   378  0000                     _CMOUTbits	set	3901
   379  0000                     _CM1PCH	set	3900
   380  0000                     _CM1NCH	set	3899
   381  0000                     _CM1CON1	set	3898
   382  0000                     _CM1CON0	set	3897
   383  0000                     _FVRCONbits	set	3889
   384  0000                     _FVRCON	set	3889
   385  0000                     _ODCOND	set	3876
   386  0000                     _ODCONC	set	3871
   387  0000                     _ODCONB	set	3863
   388  0000                     _ODCONA	set	3855
   389  0000                     _ODCONE	set	3884
   390  0000                     _WPUC	set	3872
   391  0000                     _WPUA	set	3856
   392  0000                     _WPUB	set	3864
   393  0000                     _WPUE	set	3885
   394  0000                     _WPUD	set	3877
   395  0000                     _ANSELA	set	3857
   396  0000                     _ANSELE	set	3886
   397  0000                     _ANSELD	set	3878
   398  0000                     _ANSELB	set	3865
   399  0000                     _ANSELC	set	3873
   400  0000                     _BAUD1CONbits	set	3999
   401  0000                     _LATCbits	set	3973
   402  0000                     _TX1STAbits	set	3998
   403  0000                     _PORTD	set	3984
   404  0000                     _T1GCONbits	set	4048
   405  0000                     _T1CONbits	set	4047
   406  0000                     _TMR1L	set	4045
   407  0000                     _TMR1H	set	4046
   408  0000                     _T1CLK	set	4050
   409  0000                     _T1GATE	set	4049
   410  0000                     _T1GCON	set	4048
   411  0000                     _T1CON	set	4047
   412  0000                     _NVMDAT	set	3968
   413  0000                     _NVMADRL	set	3966
   414  0000                     _NVMADRH	set	3967
   415  0000                     _NVMCON2	set	3970
   416  0000                     _TABLAT	set	4085
   417  0000                     _TBLPTRL	set	4086
   418  0000                     _TBLPTRH	set	4087
   419  0000                     _TBLPTRU	set	4088
   420  0000                     _NVMCON1bits	set	3969
   421  0000                     _INTCONbits	set	4082
   422  0000                     _TX1REG	set	3994
   423  0000                     _RC1REG	set	3993
   424  0000                     _RC1STAbits	set	3997
   425  0000                     _SP1BRGH	set	3996
   426  0000                     _SP1BRGL	set	3995
   427  0000                     _TX1STA	set	3998
   428  0000                     _RC1STA	set	3997
   429  0000                     _BAUD1CON	set	3999
   430  0000                     _TRISD	set	3979
   431  0000                     _TRISC	set	3978
   432  0000                     _TRISB	set	3977
   433  0000                     _TRISA	set	3976
   434  0000                     _TRISE	set	3980
   435  0000                     _LATC	set	3973
   436  0000                     _LATB	set	3972
   437  0000                     _LATA	set	3971
   438  0000                     _LATD	set	3974
   439  0000                     _LATE	set	3975
   440  0000                     _GIE	set	32663
   441                           
   442                           ; #config settings
   443  0000                     
   444                           	psect	cinit
   445  0014B2                     __pcinit:
   446                           	opt stack 0
   447  0014B2                     start_initialization:
   448                           	opt stack 0
   449  0014B2                     __initialization:
   450                           	opt stack 0
   451                           
   452                           ; Initialize objects allocated to COMRAM (1 bytes)
   453                           ; load TBLPTR registers with __pidataCOMRAM
   454  0014B2  0ED2               	movlw	low __pidataCOMRAM
   455  0014B4  6EF6               	movwf	tblptrl,c
   456  0014B6  0E17               	movlw	high __pidataCOMRAM
   457  0014B8  6EF7               	movwf	tblptrh,c
   458  0014BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   459  0014BC  6EF8               	movwf	tblptru,c
   460  0014BE  0009               	tblrd		*+	;fetch initializer
   461  0014C0  CFF5 F042          	movff	tablat,__pdataCOMRAM
   462                           
   463                           ; Clear objects allocated to BANK0 (32 bytes)
   464  0014C4  EE00  F060         	lfsr	0,__pbssBANK0
   465  0014C8  0E20               	movlw	32
   466  0014CA                     clear_0:
   467  0014CA  6AEE               	clrf	postinc0,c
   468  0014CC  06E8               	decf	wreg,f,c
   469  0014CE  E1FD               	bnz	clear_0
   470                           
   471                           ; Clear objects allocated to COMRAM (18 bytes)
   472  0014D0  EE00  F02D         	lfsr	0,__pbssCOMRAM
   473  0014D4  0E12               	movlw	18
   474  0014D6                     clear_1:
   475  0014D6  6AEE               	clrf	postinc0,c
   476  0014D8  06E8               	decf	wreg,f,c
   477  0014DA  E1FD               	bnz	clear_1
   478  0014DC                     end_of_initialization:
   479                           	opt stack 0
   480  0014DC                     __end_of__initialization:
   481                           	opt stack 0
   482  0014DC  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   483  0014DE  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   484  0014E0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   485  0014E2  6EF8               	movwf	tblptru,c
   486  0014E4  0E0F               	movlw	high __Lsmallconst
   487  0014E6  6EF7               	movwf	tblptrh,c
   488  0014E8  0100               	movlb	0
   489  0014EA  EF77  F00A         	goto	_main	;jump to C main() function
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497                           	psect	bssCOMRAM
   498  00002D                     __pbssCOMRAM:
   499                           	opt stack 0
   500  00002D                     _hexnum:
   501                           	opt stack 0
   502  00002D                     	ds	3
   503  000030                     _dbcount:
   504                           	opt stack 0
   505  000030                     	ds	2
   506  000032                     _chkbyte:
   507                           	opt stack 0
   508  000032                     	ds	1
   509  000033                     _mcount:
   510                           	opt stack 0
   511  000033                     	ds	1
   512  000034                     _slvadd:
   513                           	opt stack 0
   514  000034                     	ds	1
   515  000035                     _cash:
   516                           	opt stack 0
   517  000035                     	ds	1
   518  000036                     _credit:
   519                           	opt stack 0
   520  000036                     	ds	1
   521  000037                     _stradd:
   522                           	opt stack 0
   523  000037                     	ds	1
   524  000038                     _lcdata:
   525                           	opt stack 0
   526  000038                     	ds	1
   527  000039                     _lcdfunc:
   528                           	opt stack 0
   529  000039                     	ds	1
   530  00003A                     _bflag:
   531                           	opt stack 0
   532  00003A                     	ds	1
   533  00003B                     _errorflags:
   534                           	opt stack 0
   535  00003B                     	ds	1
   536  00003C                     _noteen:
   537                           	opt stack 0
   538  00003C                     	ds	1
   539  00003D                     _mdbflags:
   540                           	opt stack 0
   541  00003D                     	ds	1
   542  00003E                     _venflags:
   543                           	opt stack 0
   544  00003E                     	ds	1
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           
   552                           	psect	dataCOMRAM
   553  000042                     __pdataCOMRAM:
   554                           	opt stack 0
   555  000042                     _noteen_byte:
   556                           	opt stack 0
   557  000042                     	ds	1
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           
   565                           	psect	bssBANK0
   566  000060                     __pbssBANK0:
   567                           	opt stack 0
   568  000060                     _mdbdata:
   569                           	opt stack 0
   570  000060                     	ds	32
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           
   578                           	psect	cstackCOMRAM
   579  000001                     __pcstackCOMRAM:
   580                           	opt stack 0
   581  000001                     ??_INTERRUPT_InterruptManagerHigh:
   582  000001                     
   583                           ; 1 bytes @ 0x0
   584  000001                     	ds	18
   585  000013                     ??_TMR1_Initialize:
   586  000013                     ?___ltdiv:
   587                           	opt stack 0
   588  000013                     ?___ltmod:
   589                           	opt stack 0
   590  000013                     PIN_MANAGER_Initialize@state:
   591                           	opt stack 0
   592  000013                     EUSART1_Write@txData:
   593                           	opt stack 0
   594  000013                     read_busy@savelate:
   595                           	opt stack 0
   596  000013                     init_mdbdata@initdata:
   597                           	opt stack 0
   598  000013                     DATAEE_WriteByte@bAdd:
   599                           	opt stack 0
   600  000013                     DATAEE_ReadByte@bAdd:
   601                           	opt stack 0
   602  000013                     ___ltdiv@dividend:
   603                           	opt stack 0
   604  000013                     ___ltmod@dividend:
   605                           	opt stack 0
   606                           
   607                           ; 3 bytes @ 0x12
   608  000013                     	ds	1
   609  000014                     read_busy@savelatd:
   610                           	opt stack 0
   611  000014                     init_mdbdata@i:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x13
   615  000014                     	ds	1
   616  000015                     DATAEE_WriteByte@bData:
   617                           	opt stack 0
   618  000015                     lcd_write@savelatd:
   619                           	opt stack 0
   620  000015                     mdb_poll@mcount:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x14
   624  000015                     	ds	1
   625  000016                     DATAEE_WriteByte@GIEBitValue:
   626                           	opt stack 0
   627  000016                     lcd_write@lcdata:
   628                           	opt stack 0
   629  000016                     mdb_poll@slvadd:
   630                           	opt stack 0
   631  000016                     ___ltdiv@divisor:
   632                           	opt stack 0
   633  000016                     ___ltmod@divisor:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0x15
   637  000016                     	ds	1
   638  000017                     lcd_writeC@lcdatasave:
   639                           	opt stack 0
   640  000017                     credit_add@credit:
   641                           	opt stack 0
   642  000017                     credit_subtract@credit:
   643                           	opt stack 0
   644  000017                     mdb_poll@i:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x16
   648  000017                     	ds	1
   649  000018                     ??_mdb_reset:
   650  000018                     lcd_writeC@lcdata:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x17
   654  000018                     	ds	1
   655  000019                     lcd_test@character:
   656                           	opt stack 0
   657  000019                     mdb_reset@i_1458:
   658                           	opt stack 0
   659  000019                     ___ltmod@counter:
   660                           	opt stack 0
   661  000019                     lcd_string@lcdstring:
   662                           	opt stack 0
   663  000019                     ___ltdiv@quotient:
   664                           	opt stack 0
   665                           
   666                           ; 3 bytes @ 0x18
   667  000019                     	ds	1
   668  00001A                     ??_lcd_init:
   669  00001A                     mdb_reset@i:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x19
   673  00001A                     	ds	1
   674  00001B                     ??_lcd_string:
   675  00001B                     vend_init@i:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x1A
   679  00001B                     	ds	1
   680  00001C                     ___ltdiv@counter:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x1B
   684  00001C                     	ds	1
   685  00001D                     displ_hex@hexnum:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x1C
   689  00001D                     	ds	3
   690  000020                     displ_hex@value:
   691                           	opt stack 0
   692                           
   693                           ; 8 bytes @ 0x1F
   694  000020                     	ds	8
   695  000028                     displ_hex@hexnumsave:
   696                           	opt stack 0
   697                           
   698                           ; 3 bytes @ 0x27
   699  000028                     	ds	3
   700  00002B                     displ_hex@i:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x2A
   704  00002B                     	ds	1
   705  00002C                     displ_credit@cash:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x2B
   709  00002C                     	ds	1
   710  00002D                     tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           
   717                           ; 1 bytes @ 0x2C
   718 ;;
   719 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   720 ;;
   721 ;; *************** function _main *****************
   722 ;; Defined at:
   723 ;;		line 53 in file "main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels required when called:    8
   743 ;; This function calls:
   744 ;;		_SYSTEM_Initialize
   745 ;;		_credit_add
   746 ;;		_credit_subtract
   747 ;;		_displ_credit
   748 ;;		_lcd_init
   749 ;;		_lcd_string
   750 ;;		_vend_init
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text0
   757  0014EE                     __ptext0:
   758                           	opt stack 0
   759  0014EE                     _main:
   760                           	opt stack 23
   761                           
   762                           ;main.c: 56: SYSTEM_Initialize();
   763                           
   764                           ;incstack = 0
   765  0014EE  EC56  F00B         	call	_SYSTEM_Initialize	;wreg free
   766                           
   767                           ;main.c: 58: lcd_init();
   768  0014F2  EC5A  F009         	call	_lcd_init	;wreg free
   769                           
   770                           ;main.c: 59: vend_init();
   771  0014F6  EC95  F00A         	call	_vend_init	;wreg free
   772  0014FA                     l445:
   773  0014FA  F000               	nop		;# 
   774                           
   775                           ;main.c: 65: if(venflags.inscoin == 1)
   776  0014FC  A43E               	btfss	_venflags,2,c
   777  0014FE  D007               	goto	l446
   778                           
   779                           ;main.c: 66: {
   780                           ;main.c: 67: lcd_string(inscoin);
   781  001500  0E2E               	movlw	low _inscoin
   782  001502  6E19               	movwf	lcd_string@lcdstring,c
   783  001504  0E0F               	movlw	high _inscoin
   784  001506  6E1A               	movwf	lcd_string@lcdstring+1,c
   785  001508  ECDE  F008         	call	_lcd_string	;wreg free
   786                           
   787                           ;main.c: 68: venflags.inscoin = 0;
   788  00150C  943E               	bcf	_venflags,2,c
   789  00150E                     l446:
   790                           
   791                           ;main.c: 69: }
   792                           ;main.c: 70: if(venflags.initialrun == 1)
   793  00150E  AA3E               	btfss	_venflags,5,c
   794  001510  D007               	goto	l447
   795                           
   796                           ;main.c: 71: {
   797                           ;main.c: 72: credit_add(0x05);
   798  001512  0E05               	movlw	5
   799  001514  EC16  F00A         	call	_credit_add
   800                           
   801                           ;main.c: 73: credit_subtract(0x00);
   802  001518  0E00               	movlw	0
   803  00151A  ECF3  F009         	call	_credit_subtract
   804                           
   805                           ;main.c: 74: venflags.initialrun = 0;
   806  00151E  9A3E               	bcf	_venflags,5,c
   807  001520                     l447:
   808                           
   809                           ;main.c: 75: }
   810                           ;main.c: 76: if(venflags.credisplay == 1)
   811  001520  A83E               	btfss	_venflags,4,c
   812  001522  D7EB               	goto	l445
   813                           
   814                           ;main.c: 77: {
   815                           ;main.c: 78: displ_credit();
   816  001524  EC45  F00B         	call	_displ_credit	;wreg free
   817  001528  D7E8               	goto	l445
   818  00152A                     __end_of_main:
   819                           	opt stack 0
   820                           tblptru	equ	0xFF8
   821                           tblptrh	equ	0xFF7
   822                           tblptrl	equ	0xFF6
   823                           tablat	equ	0xFF5
   824                           postinc0	equ	0xFEE
   825                           wreg	equ	0xFE8
   826                           
   827 ;; *************** function _vend_init *****************
   828 ;; Defined at:
   829 ;;		line 17 in file "vend.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  i               1   26[COMRAM] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   846 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   847 ;;Total ram usage:        1 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    6
   850 ;; This function calls:
   851 ;;		_credit_check
   852 ;;		_mdb_noten
   853 ;;		_mdb_poll
   854 ;;		_mdb_reset
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text1
   861  00152A                     __ptext1:
   862                           	opt stack 0
   863  00152A                     _vend_init:
   864                           	opt stack 24
   865                           
   866                           ;vend.c: 20: mdbflags.noteerr = 0;
   867                           
   868                           ;incstack = 0
   869  00152A  923D               	bcf	_mdbflags,1,c
   870                           
   871                           ;vend.c: 21: mdbflags.isdata = 0;
   872  00152C  903D               	bcf	_mdbflags,0,c
   873                           
   874                           ;vend.c: 24: mdb_reset();
   875  00152E  EC1F  F009         	call	_mdb_reset	;wreg free
   876                           
   877                           ;vend.c: 25: mdb_noten();
   878  001532  EC04  F00B         	call	_mdb_noten	;wreg free
   879                           
   880                           ;vend.c: 26: uint8_t i = mdb_poll(note_poll, 0x00);
   881  001536  0E00               	movlw	0
   882  001538  6E15               	movwf	mdb_poll@mcount,c
   883  00153A  0E1D               	movlw	low _note_poll
   884  00153C  6EF6               	movwf	tblptrl,c
   885  00153E                     	if	0	;There is only one active tblptr byte
   886  00153E                     	endif
   887  00153E                     	if	0	;There are less than 3 active tblptr bytes
   888  00153E                     	endif
   889  00153E  0008               	tblrd		*
   890  001540  50F5               	movf	tablat,w,c
   891  001542  ECA9  F007         	call	_mdb_poll
   892  001546  6E1B               	movwf	vend_init@i,c
   893                           
   894                           ;vend.c: 27: venflags.initialrun = 1;
   895  001548  8A3E               	bsf	_venflags,5,c
   896                           
   897                           ;vend.c: 28: if(credit_check() == 0)
   898  00154A  EC67  F00B         	call	_credit_check	;wreg free
   899  00154E  0900               	iorlw	0
   900  001550  A4D8               	btfss	status,2,c
   901  001552  D004               	goto	l771
   902                           
   903                           ;vend.c: 29: {
   904                           ;vend.c: 30: venflags.iscredit = 0;
   905  001554  903E               	bcf	_venflags,0,c
   906                           
   907                           ;vend.c: 31: venflags.inscoin = 1;
   908  001556  843E               	bsf	_venflags,2,c
   909                           
   910                           ;vend.c: 32: venflags.credisplay = 0;
   911  001558  983E               	bcf	_venflags,4,c
   912                           
   913                           ;vend.c: 33: }
   914  00155A  0012               	return	
   915  00155C                     l771:
   916                           
   917                           ;vend.c: 34: else
   918                           ;vend.c: 35: {
   919                           ;vend.c: 36: venflags.iscredit = 1;
   920  00155C  803E               	bsf	_venflags,0,c
   921                           
   922                           ;vend.c: 37: venflags.inscoin = 0;
   923  00155E  943E               	bcf	_venflags,2,c
   924                           
   925                           ;vend.c: 38: venflags.credisplay = 1;
   926  001560  883E               	bsf	_venflags,4,c
   927  001562  0012               	return	
   928  001564                     __end_of_vend_init:
   929                           	opt stack 0
   930                           tblptru	equ	0xFF8
   931                           tblptrh	equ	0xFF7
   932                           tblptrl	equ	0xFF6
   933                           tablat	equ	0xFF5
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           status	equ	0xFD8
   937                           
   938 ;; *************** function _mdb_reset *****************
   939 ;; Defined at:
   940 ;;		line 94 in file "vend.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  i               1   24[COMRAM] unsigned char 
   945 ;;  i               1   25[COMRAM] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      unsigned char 
   948 ;; Registers used:
   949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   958 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   959 ;;Total ram usage:        3 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    5
   962 ;; This function calls:
   963 ;;		_mdb_poll
   964 ;; This function is called by:
   965 ;;		_vend_init
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text2
   970  00123E                     __ptext2:
   971                           	opt stack 0
   972  00123E                     _mdb_reset:
   973                           	opt stack 24
   974                           
   975                           ;vend.c: 96: uint8_t i = mdb_poll(note_reset, 0x00);
   976                           
   977                           ;incstack = 0
   978  00123E  0E00               	movlw	0
   979  001240  6E15               	movwf	mdb_poll@mcount,c
   980  001242  0E20               	movlw	low _note_reset
   981  001244  6EF6               	movwf	tblptrl,c
   982  001246                     	if	0	;There is only one active tblptr byte
   983  001246                     	endif
   984  001246                     	if	0	;There are less than 3 active tblptr bytes
   985  001246                     	endif
   986  001246  0008               	tblrd		*
   987  001248  50F5               	movf	tablat,w,c
   988  00124A  ECA9  F007         	call	_mdb_poll
   989  00124E  6E1A               	movwf	mdb_reset@i,c
   990  001250  F000               	nop		;# 
   991                           
   992                           ;vend.c: 98: uint8_t i = mdb_poll(note_poll, 0x00);
   993  001252  0E00               	movlw	0
   994  001254  6E15               	movwf	mdb_poll@mcount,c
   995  001256  0E1D               	movlw	low _note_poll
   996  001258  6EF6               	movwf	tblptrl,c
   997  00125A                     	if	0	;There is only one active tblptr byte
   998  00125A                     	endif
   999  00125A                     	if	0	;There are less than 3 active tblptr bytes
  1000  00125A                     	endif
  1001  00125A  0008               	tblrd		*
  1002  00125C  50F5               	movf	tablat,w,c
  1003  00125E  ECA9  F007         	call	_mdb_poll
  1004  001262  6E1A               	movwf	mdb_reset@i,c
  1005                           
  1006                           ;vend.c: 99: if(mdbdata[--i] == just_reset)
  1007  001264  061A               	decf	mdb_reset@i,f,c
  1008  001266  501A               	movf	mdb_reset@i,w,c
  1009  001268  0D01               	mullw	1
  1010  00126A  0E60               	movlw	low _mdbdata
  1011  00126C  24F3               	addwf	prodl,w,c
  1012  00126E  6ED9               	movwf	fsr2l,c
  1013  001270  0E00               	movlw	high _mdbdata
  1014  001272  20F4               	addwfc	prodh,w,c
  1015  001274  6EDA               	movwf	fsr2h,c
  1016  001276  50DF               	movf	indf2,w,c
  1017  001278  6E18               	movwf	??_mdb_reset& (0+255),c
  1018  00127A  0E13               	movlw	low _just_reset
  1019  00127C  6EF6               	movwf	tblptrl,c
  1020  00127E                     	if	0	;There is only one active tblptr byte
  1021  00127E                     	endif
  1022  00127E                     	if	0	;There are less than 3 active tblptr bytes
  1023  00127E                     	endif
  1024  00127E  0008               	tblrd		*
  1025  001280  50F5               	movf	tablat,w,c
  1026  001282  1818               	xorwf	??_mdb_reset,w,c
  1027  001284  A4D8               	btfss	status,2,c
  1028  001286  D00A               	goto	l802
  1029                           
  1030                           ;vend.c: 100: {
  1031                           ;vend.c: 102: uint8_t i = mdb_poll(note_poll, 0x00);
  1032  001288  0E00               	movlw	0
  1033  00128A  6E15               	movwf	mdb_poll@mcount,c
  1034  00128C  0E1D               	movlw	low _note_poll
  1035  00128E  6EF6               	movwf	tblptrl,c
  1036  001290                     	if	0	;There is only one active tblptr byte
  1037  001290                     	endif
  1038  001290                     	if	0	;There are less than 3 active tblptr bytes
  1039  001290                     	endif
  1040  001290  0008               	tblrd		*
  1041  001292  50F5               	movf	tablat,w,c
  1042  001294  ECA9  F007         	call	_mdb_poll
  1043  001298  6E19               	movwf	mdb_reset@i_1458,c
  1044                           
  1045                           ;vend.c: 103: }
  1046  00129A  D002               	goto	l803
  1047  00129C                     l802:
  1048                           
  1049                           ;vend.c: 104: else
  1050                           ;vend.c: 105: {
  1051                           ;vend.c: 107: return mdbflags.noteerr = 1;
  1052                           ;	Return value of _mdb_reset is never used
  1053  00129C  823D               	bsf	_mdbflags,1,c
  1054  00129E  0012               	return	
  1055  0012A0                     l803:
  1056                           
  1057                           ;vend.c: 108: }
  1058                           ;vend.c: 109: i = mdb_poll(note_setup, 0x00);
  1059  0012A0  0E00               	movlw	0
  1060  0012A2  6E15               	movwf	mdb_poll@mcount,c
  1061  0012A4  0E1F               	movlw	low _note_setup
  1062  0012A6  6EF6               	movwf	tblptrl,c
  1063  0012A8                     	if	0	;There is only one active tblptr byte
  1064  0012A8                     	endif
  1065  0012A8                     	if	0	;There are less than 3 active tblptr bytes
  1066  0012A8                     	endif
  1067  0012A8  0008               	tblrd		*
  1068  0012AA  50F5               	movf	tablat,w,c
  1069  0012AC  ECA9  F007         	call	_mdb_poll
  1070  0012B0  6E1A               	movwf	mdb_reset@i,c
  1071  0012B2  0012               	return	
  1072  0012B4                     __end_of_mdb_reset:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           prodh	equ	0xFF4
  1079                           prodl	equ	0xFF3
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           indf2	equ	0xFDF
  1083                           fsr2h	equ	0xFDA
  1084                           fsr2l	equ	0xFD9
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function _mdb_noten *****************
  1088 ;; Defined at:
  1089 ;;		line 114 in file "vend.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      unsigned char 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    5
  1110 ;; This function calls:
  1111 ;;		_init_mdbdata
  1112 ;;		_mdb_poll
  1113 ;; This function is called by:
  1114 ;;		_vend_init
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text3
  1119  001608                     __ptext3:
  1120                           	opt stack 0
  1121  001608                     _mdb_noten:
  1122                           	opt stack 24
  1123                           
  1124                           ;vend.c: 117: init_mdbdata(0x00);
  1125                           
  1126                           ;incstack = 0
  1127  001608  0E00               	movlw	0
  1128  00160A  EC32  F00B         	call	_init_mdbdata
  1129                           
  1130                           ;vend.c: 119: mcount = 3;
  1131  00160E  0E03               	movlw	3
  1132  001610  6E33               	movwf	_mcount,c
  1133                           
  1134                           ;vend.c: 121: mdbdata[0] = 0x00;
  1135  001612  0E00               	movlw	0
  1136  001614  0100               	movlb	0	; () banked
  1137  001616  6F60               	movwf	_mdbdata& (0+255),b
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;vend.c: 122: mdbdata[1] = 0x00;
  1141  001618  0E00               	movlw	0
  1142  00161A  6F61               	movwf	(_mdbdata+1)& (0+255),b
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;vend.c: 124: mdbdata[2] = noteen_byte;
  1146  00161C  C042  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;vend.c: 126: mdbdata[3] = 0x00;
  1150  001620  0E00               	movlw	0
  1151  001622  6F63               	movwf	(_mdbdata+3)& (0+255),b
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;vend.c: 127: mcount = mdb_poll(note_type, mcount);
  1155  001624  C033  F015         	movff	_mcount,mdb_poll@mcount
  1156  001628  0E1C               	movlw	low _note_type
  1157  00162A  6EF6               	movwf	tblptrl,c
  1158  00162C                     	if	0	;There is only one active tblptr byte
  1159  00162C                     	endif
  1160  00162C                     	if	0	;There are less than 3 active tblptr bytes
  1161  00162C                     	endif
  1162  00162C  0008               	tblrd		*
  1163  00162E  50F5               	movf	tablat,w,c
  1164  001630  ECA9  F007         	call	_mdb_poll
  1165  001634  6E33               	movwf	_mcount,c
  1166  001636  0012               	return		;funcret
  1167  001638                     __end_of_mdb_noten:
  1168                           	opt stack 0
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           prodh	equ	0xFF4
  1174                           prodl	equ	0xFF3
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           indf2	equ	0xFDF
  1178                           fsr2h	equ	0xFDA
  1179                           fsr2l	equ	0xFD9
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function _mdb_poll *****************
  1183 ;; Defined at:
  1184 ;;		line 130 in file "vend.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  slvadd          1    wreg     unsigned char 
  1187 ;;  mcount          1   20[COMRAM] unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  slvadd          1   21[COMRAM] unsigned char 
  1190 ;;  i               1   22[COMRAM] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      unsigned char 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1200 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1204 ;;Total ram usage:        3 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    4
  1207 ;; This function calls:
  1208 ;;		_EUSART1_Read
  1209 ;;		_EUSART1_Write
  1210 ;;		_TMR1_Initialize
  1211 ;;		_init_mdbdata
  1212 ;;		_mdb_on
  1213 ;;		_mdb_waitr
  1214 ;;		_mdb_waitx
  1215 ;; This function is called by:
  1216 ;;		_vend_init
  1217 ;;		_mdb_reset
  1218 ;;		_mdb_noten
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text4
  1223  000F52                     __ptext4:
  1224                           	opt stack 0
  1225  000F52                     _mdb_poll:
  1226                           	opt stack 24
  1227                           
  1228                           ;incstack = 0
  1229                           ;mdb_poll@slvadd stored from wreg
  1230  000F52  6E16               	movwf	mdb_poll@slvadd,c
  1231                           
  1232                           ;vend.c: 133: uint8_t i = 0;
  1233  000F54  0E00               	movlw	0
  1234  000F56  6E17               	movwf	mdb_poll@i,c
  1235                           
  1236                           ;vend.c: 135: TX1STAbits.TX9D = 1;
  1237  000F58  809E               	bsf	3998,0,c	;volatile
  1238                           
  1239                           ;vend.c: 136: mdb_on();
  1240  000F5A  ECDB  F00B         	call	_mdb_on	;wreg free
  1241                           
  1242                           ;vend.c: 140: EUSART1_Write(slvadd);
  1243  000F5E  5016               	movf	mdb_poll@slvadd,w,c
  1244  000F60  ECC1  F00B         	call	_EUSART1_Write
  1245                           
  1246                           ;vend.c: 141: TX1STAbits.TX9D = 0;
  1247  000F64  909E               	bcf	3998,0,c	;volatile
  1248                           
  1249                           ;vend.c: 143: mdb_waitx();
  1250  000F66  ECD5  F00B         	call	_mdb_waitx	;wreg free
  1251                           
  1252                           ;vend.c: 145: chkbyte = slvadd;
  1253  000F6A  C016  F032         	movff	mdb_poll@slvadd,_chkbyte
  1254                           
  1255                           ;vend.c: 146: if(mcount != 0)
  1256  000F6E  5015               	movf	mdb_poll@mcount,w,c
  1257  000F70  B4D8               	btfsc	status,2,c
  1258  000F72  D020               	goto	u670
  1259                           
  1260                           ;vend.c: 147: {
  1261                           ;vend.c: 148: i = mcount + 1;
  1262  000F74  2815               	incf	mdb_poll@mcount,w,c
  1263  000F76  6E17               	movwf	mdb_poll@i,c
  1264                           
  1265                           ;vend.c: 149: while(i != 0)
  1266  000F78  D01A               	goto	l811
  1267  000F7A                     
  1268                           ;vend.c: 150: {
  1269                           ;vend.c: 151: EUSART1_Write(mdbdata[mcount]);
  1270  000F7A  5015               	movf	mdb_poll@mcount,w,c
  1271  000F7C  0D01               	mullw	1
  1272  000F7E  0E60               	movlw	low _mdbdata
  1273  000F80  24F3               	addwf	prodl,w,c
  1274  000F82  6ED9               	movwf	fsr2l,c
  1275  000F84  0E00               	movlw	high _mdbdata
  1276  000F86  20F4               	addwfc	prodh,w,c
  1277  000F88  6EDA               	movwf	fsr2h,c
  1278  000F8A  50DF               	movf	indf2,w,c
  1279  000F8C  ECC1  F00B         	call	_EUSART1_Write
  1280                           
  1281                           ;vend.c: 152: mdb_waitx();
  1282  000F90  ECD5  F00B         	call	_mdb_waitx	;wreg free
  1283                           
  1284                           ;vend.c: 154: chkbyte = chkbyte + mdbdata[mcount];
  1285  000F94  5015               	movf	mdb_poll@mcount,w,c
  1286  000F96  0D01               	mullw	1
  1287  000F98  0E60               	movlw	low _mdbdata
  1288  000F9A  24F3               	addwf	prodl,w,c
  1289  000F9C  6ED9               	movwf	fsr2l,c
  1290  000F9E  0E00               	movlw	high _mdbdata
  1291  000FA0  20F4               	addwfc	prodh,w,c
  1292  000FA2  6EDA               	movwf	fsr2h,c
  1293  000FA4  50DF               	movf	indf2,w,c
  1294  000FA6  2432               	addwf	_chkbyte,w,c
  1295  000FA8  6E32               	movwf	_chkbyte,c
  1296                           
  1297                           ;vend.c: 155: i--;
  1298  000FAA  0617               	decf	mdb_poll@i,f,c
  1299                           
  1300                           ;vend.c: 156: mcount--;
  1301  000FAC  0615               	decf	mdb_poll@mcount,f,c
  1302  000FAE                     l811:
  1303  000FAE  5017               	movf	mdb_poll@i,w,c
  1304  000FB0  A4D8               	btfss	status,2,c
  1305  000FB2  D7E3               	goto	l812
  1306  000FB4                     u670:
  1307                           
  1308                           ;vend.c: 157: }
  1309                           ;vend.c: 158: }
  1310                           ;vend.c: 159: EUSART1_Write(chkbyte);
  1311  000FB4  5032               	movf	_chkbyte,w,c
  1312  000FB6  ECC1  F00B         	call	_EUSART1_Write
  1313                           
  1314                           ;vend.c: 160: mdb_waitx();
  1315  000FBA  ECD5  F00B         	call	_mdb_waitx	;wreg free
  1316                           
  1317                           ;vend.c: 165: init_mdbdata(0xFF);
  1318  000FBE  0EFF               	movlw	255
  1319  000FC0  EC32  F00B         	call	_init_mdbdata
  1320                           
  1321                           ;vend.c: 166: TMR1_Initialize();
  1322  000FC4  ECCF  F00A         	call	_TMR1_Initialize	;wreg free
  1323                           
  1324                           ;vend.c: 167: dbcount = 0;
  1325  000FC8  0E00               	movlw	0
  1326  000FCA  6E31               	movwf	_dbcount+1,c
  1327  000FCC  0E00               	movlw	0
  1328  000FCE  6E30               	movwf	_dbcount,c
  1329                           
  1330                           ;vend.c: 168: mdbflags.isdata = 0;
  1331  000FD0  903D               	bcf	_mdbflags,0,c
  1332                           
  1333                           ;vend.c: 169: i = 0;
  1334  000FD2  0E00               	movlw	0
  1335  000FD4  6E17               	movwf	mdb_poll@i,c
  1336                           
  1337                           ;vend.c: 171: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  1338  000FD6  D01E               	goto	u700
  1339  000FD8                     
  1340                           ;vend.c: 172: {
  1341                           ;vend.c: 174: dbcount++;
  1342  000FD8  4A30               	infsnz	_dbcount,f,c
  1343  000FDA  2A31               	incf	_dbcount+1,f,c
  1344                           
  1345                           ;vend.c: 175: mdbflags.isdata = 0;
  1346  000FDC  903D               	bcf	_mdbflags,0,c
  1347                           
  1348                           ;vend.c: 178: while(PIR3bits.RC1IF && !mdbflags.isdata)
  1349  000FDE  D015               	goto	l816
  1350  000FE0                     
  1351                           ;vend.c: 179: {
  1352                           ;vend.c: 182: mdbdata[i] = EUSART1_Read();
  1353  000FE0  5017               	movf	mdb_poll@i,w,c
  1354  000FE2  0D01               	mullw	1
  1355  000FE4  0E60               	movlw	low _mdbdata
  1356  000FE6  24F3               	addwf	prodl,w,c
  1357  000FE8  6ED9               	movwf	fsr2l,c
  1358  000FEA  0E00               	movlw	high _mdbdata
  1359  000FEC  20F4               	addwfc	prodh,w,c
  1360  000FEE  6EDA               	movwf	fsr2h,c
  1361  000FF0  ECB8  F00B         	call	_EUSART1_Read	;wreg free
  1362  000FF4  6EDF               	movwf	indf2,c
  1363                           
  1364                           ;vend.c: 183: mdb_waitr();
  1365  000FF6  ECD8  F00B         	call	_mdb_waitr	;wreg free
  1366                           
  1367                           ;vend.c: 185: mdbflags.isdata = RC1STAbits.RX9D;
  1368  000FFA  A09D               	btfss	3997,0,c	;volatile
  1369  000FFC  D002               	bra	u685
  1370  000FFE  803D               	bsf	_mdbflags,0,c
  1371  001000  D001               	bra	u687
  1372  001002                     u685:
  1373  001002  903D               	bcf	_mdbflags,0,c
  1374  001004                     u687:
  1375                           
  1376                           ;vend.c: 186: TMR1_Initialize();
  1377  001004  ECCF  F00A         	call	_TMR1_Initialize	;wreg free
  1378                           
  1379                           ;vend.c: 187: i++;
  1380  001008  2A17               	incf	mdb_poll@i,f,c
  1381  00100A                     l816:
  1382  00100A  010E               	movlb	14	; () banked
  1383  00100C  ABCD               	btfss	205,5,b	;volatile
  1384  00100E  D002               	goto	u700
  1385                           
  1386                           ; BSR set to: 14
  1387  001010  A03D               	btfss	_mdbflags,0,c
  1388  001012  D7E6               	goto	l817
  1389  001014                     u700:
  1390                           
  1391                           ; BSR set to: 14
  1392                           
  1393                           ; BSR set to: 14
  1394  001014  010E               	movlb	14	; () banked
  1395  001016  B1CE               	btfsc	206,0,b	;volatile
  1396  001018  D002               	goto	u720
  1397                           
  1398                           ; BSR set to: 14
  1399  00101A  A03D               	btfss	_mdbflags,0,c
  1400  00101C  D7DD               	goto	l815
  1401  00101E                     u720:
  1402                           
  1403                           ; BSR set to: 14
  1404                           ;vend.c: 189: }
  1405                           ;vend.c: 191: }
  1406                           ;vend.c: 193: i--;
  1407                           
  1408                           ; BSR set to: 14
  1409                           
  1410                           ; BSR set to: 14
  1411  00101E  0617               	decf	mdb_poll@i,f,c
  1412                           
  1413                           ; BSR set to: 14
  1414                           ;vend.c: 195: mdbflags.timeout = PIR4bits.TMR1IF;
  1415  001020  A1CE               	btfss	206,0,b	;volatile
  1416  001022  D002               	bra	u735
  1417  001024  863D               	bsf	_mdbflags,3,c
  1418  001026  D001               	bra	u737
  1419  001028                     u735:
  1420  001028  963D               	bcf	_mdbflags,3,c
  1421  00102A                     u737:
  1422                           
  1423                           ;vend.c: 197: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  1424  00102A  A03D               	btfss	_mdbflags,0,c
  1425  00102C  D013               	goto	l824
  1426  00102E  5017               	movf	mdb_poll@i,w,c
  1427  001030  0D01               	mullw	1
  1428  001032  0E60               	movlw	low _mdbdata
  1429  001034  24F3               	addwf	prodl,w,c
  1430  001036  6ED9               	movwf	fsr2l,c
  1431  001038  0E00               	movlw	high _mdbdata
  1432  00103A  20F4               	addwfc	prodh,w,c
  1433  00103C  6EDA               	movwf	fsr2h,c
  1434  00103E  50DF               	movf	indf2,w,c
  1435  001040  B4D8               	btfsc	status,2,c
  1436  001042  D008               	goto	l824
  1437                           
  1438                           ;vend.c: 198: {
  1439                           ;vend.c: 199: TX1STAbits.TX9D = 1;
  1440  001044  809E               	bsf	3998,0,c	;volatile
  1441                           
  1442                           ;vend.c: 200: mdb_on();
  1443  001046  ECDB  F00B         	call	_mdb_on	;wreg free
  1444                           
  1445                           ;vend.c: 201: EUSART1_Write(0x00);
  1446  00104A  0E00               	movlw	0
  1447  00104C  ECC1  F00B         	call	_EUSART1_Write
  1448                           
  1449                           ;vend.c: 202: mdb_waitx();
  1450  001050  ECD5  F00B         	call	_mdb_waitx	;wreg free
  1451  001054                     l824:
  1452                           
  1453                           ;vend.c: 203: }
  1454                           ;vend.c: 205: mdb_on();
  1455  001054  ECDB  F00B         	call	_mdb_on	;wreg free
  1456                           
  1457                           ;vend.c: 207: return(i);
  1458  001058  5017               	movf	mdb_poll@i,w,c
  1459  00105A  0012               	return	
  1460  00105C                     __end_of_mdb_poll:
  1461                           	opt stack 0
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           prodh	equ	0xFF4
  1467                           prodl	equ	0xFF3
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           indf2	equ	0xFDF
  1471                           fsr2h	equ	0xFDA
  1472                           fsr2l	equ	0xFD9
  1473                           status	equ	0xFD8
  1474                           
  1475 ;; *************** function _mdb_waitx *****************
  1476 ;; Defined at:
  1477 ;;		line 225 in file "vend.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		None
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    2
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_mdb_poll
  1502 ;;		_mdb_test
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text5
  1507  0017AA                     __ptext5:
  1508                           	opt stack 0
  1509  0017AA                     _mdb_waitx:
  1510                           	opt stack 25
  1511                           
  1512                           ;vend.c: 228: {
  1513                           
  1514                           ;vend.c: 227: while(TX1STAbits.TRMT == 0)
  1515                           
  1516                           ;incstack = 0
  1517  0017AA  B29E               	btfsc	3998,1,c	;volatile
  1518  0017AC  0012               	return	
  1519  0017AE  D7FD               	goto	_mdb_waitx
  1520  0017B0                     __end_of_mdb_waitx:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           prodh	equ	0xFF4
  1527                           prodl	equ	0xFF3
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           indf2	equ	0xFDF
  1531                           fsr2h	equ	0xFDA
  1532                           fsr2l	equ	0xFD9
  1533                           status	equ	0xFD8
  1534                           
  1535 ;; *************** function _mdb_waitr *****************
  1536 ;; Defined at:
  1537 ;;		line 233 in file "vend.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		None
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    2
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_mdb_poll
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text6
  1566  0017B0                     __ptext6:
  1567                           	opt stack 0
  1568  0017B0                     _mdb_waitr:
  1569                           	opt stack 25
  1570                           
  1571                           ;vend.c: 236: {
  1572                           
  1573                           ;vend.c: 235: while(BAUD1CONbits.RCIDL == 0)
  1574                           
  1575                           ;incstack = 0
  1576  0017B0  BC9F               	btfsc	3999,6,c	;volatile
  1577  0017B2  0012               	return	
  1578  0017B4  D7FD               	goto	_mdb_waitr
  1579  0017B6                     __end_of_mdb_waitr:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           prodh	equ	0xFF4
  1586                           prodl	equ	0xFF3
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           indf2	equ	0xFDF
  1590                           fsr2h	equ	0xFDA
  1591                           fsr2l	equ	0xFD9
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function _mdb_on *****************
  1595 ;; Defined at:
  1596 ;;		line 210 in file "vend.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		None
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    2
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_mdb_poll
  1621 ;;		_mdb_test
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text7
  1626  0017B6                     __ptext7:
  1627                           	opt stack 0
  1628  0017B6                     _mdb_on:
  1629                           	opt stack 25
  1630                           
  1631                           ;vend.c: 212: LATCbits.LATC0 = 1;
  1632                           
  1633                           ;incstack = 0
  1634  0017B6  8085               	bsf	3973,0,c	;volatile
  1635                           
  1636                           ;vend.c: 213: LATCbits.LATC1 = 1;
  1637  0017B8  8285               	bsf	3973,1,c	;volatile
  1638  0017BA  0012               	return		;funcret
  1639  0017BC                     __end_of_mdb_on:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           indf2	equ	0xFDF
  1650                           fsr2h	equ	0xFDA
  1651                           fsr2l	equ	0xFD9
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _init_mdbdata *****************
  1655 ;; Defined at:
  1656 ;;		line 86 in file "vend.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  initdata        1    wreg     unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  initdata        1   18[COMRAM] unsigned char 
  1661 ;;  i               1   19[COMRAM] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;Total ram usage:        2 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    2
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_mdb_noten
  1682 ;;		_mdb_poll
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text8
  1687  001664                     __ptext8:
  1688                           	opt stack 0
  1689  001664                     _init_mdbdata:
  1690                           	opt stack 25
  1691                           
  1692                           ;incstack = 0
  1693                           ;init_mdbdata@initdata stored from wreg
  1694  001664  6E13               	movwf	init_mdbdata@initdata,c
  1695                           
  1696                           ;vend.c: 88: for(uint8_t i = 0;i < 33; i++)
  1697  001666  0E00               	movlw	0
  1698  001668  6E14               	movwf	init_mdbdata@i,c
  1699  00166A                     l2153:
  1700  00166A  0E20               	movlw	32
  1701  00166C  6414               	cpfsgt	init_mdbdata@i,c
  1702  00166E  D001               	goto	l797
  1703  001670  0012               	return	
  1704  001672                     l797:
  1705                           
  1706                           ;vend.c: 89: {
  1707                           ;vend.c: 90: mdbdata[i] = initdata;
  1708  001672  5014               	movf	init_mdbdata@i,w,c
  1709  001674  0D01               	mullw	1
  1710  001676  0E60               	movlw	low _mdbdata
  1711  001678  24F3               	addwf	prodl,w,c
  1712  00167A  6ED9               	movwf	fsr2l,c
  1713  00167C  0E00               	movlw	high _mdbdata
  1714  00167E  20F4               	addwfc	prodh,w,c
  1715  001680  6EDA               	movwf	fsr2h,c
  1716  001682  C013  FFDF         	movff	init_mdbdata@initdata,indf2
  1717  001686  2A14               	incf	init_mdbdata@i,f,c
  1718  001688  D7F0               	goto	l2153
  1719  00168A                     __end_of_init_mdbdata:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           prodh	equ	0xFF4
  1726                           prodl	equ	0xFF3
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           indf2	equ	0xFDF
  1730                           fsr2h	equ	0xFDA
  1731                           fsr2l	equ	0xFD9
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _EUSART1_Write *****************
  1735 ;; Defined at:
  1736 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  txData          1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  txData          1   18[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;Total ram usage:        1 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    2
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_mdb_poll
  1761 ;;		_mdb_test
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text9
  1766  001782                     __ptext9:
  1767                           	opt stack 0
  1768  001782                     _EUSART1_Write:
  1769                           	opt stack 25
  1770                           
  1771                           ;incstack = 0
  1772                           ;EUSART1_Write@txData stored from wreg
  1773  001782  6E13               	movwf	EUSART1_Write@txData,c
  1774  001784                     
  1775                           ;eusart1.c: 99: {
  1776                           
  1777                           ;eusart1.c: 98: while(0 == PIR3bits.TX1IF)
  1778  001784  010E               	movlb	14	; () banked
  1779  001786  A9CD               	btfss	205,4,b	;volatile
  1780  001788  D7FD               	goto	l2139
  1781                           
  1782                           ; BSR set to: 14
  1783                           ;eusart1.c: 100: }
  1784                           ;eusart1.c: 102: TX1REG = txData;
  1785                           
  1786                           ; BSR set to: 14
  1787  00178A  C013  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  1788                           
  1789                           ; BSR set to: 14
  1790  00178E  0012               	return		;funcret
  1791  001790                     __end_of_EUSART1_Write:
  1792                           	opt stack 0
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           prodh	equ	0xFF4
  1798                           prodl	equ	0xFF3
  1799                           postinc0	equ	0xFEE
  1800                           wreg	equ	0xFE8
  1801                           indf2	equ	0xFDF
  1802                           fsr2h	equ	0xFDA
  1803                           fsr2l	equ	0xFD9
  1804                           status	equ	0xFD8
  1805                           
  1806 ;; *************** function _EUSART1_Read *****************
  1807 ;; Defined at:
  1808 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      unsigned char 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    2
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_mdb_poll
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text10
  1837  001770                     __ptext10:
  1838                           	opt stack 0
  1839  001770                     _EUSART1_Read:
  1840                           	opt stack 25
  1841                           
  1842                           ;eusart1.c: 81: {
  1843                           
  1844                           ;eusart1.c: 80: while(!PIR3bits.RC1IF)
  1845                           
  1846                           ; BSR set to: 14
  1847                           ;incstack = 0
  1848  001770  010E               	movlb	14	; () banked
  1849  001772  ABCD               	btfss	205,5,b	;volatile
  1850  001774  D7FD               	goto	_EUSART1_Read
  1851                           
  1852                           ; BSR set to: 14
  1853                           ;eusart1.c: 82: }
  1854                           ;eusart1.c: 85: if(1 == RC1STAbits.OERR)
  1855  001776  A29D               	btfss	3997,1,c	;volatile
  1856  001778  D002               	goto	l111
  1857                           
  1858                           ; BSR set to: 14
  1859                           ;eusart1.c: 86: {
  1860                           ;eusart1.c: 89: RC1STAbits.SPEN = 0;
  1861  00177A  9E9D               	bcf	3997,7,c	;volatile
  1862                           
  1863                           ;eusart1.c: 90: RC1STAbits.SPEN = 1;
  1864  00177C  8E9D               	bsf	3997,7,c	;volatile
  1865  00177E                     l111:
  1866                           
  1867                           ; BSR set to: 14
  1868                           ;eusart1.c: 91: }
  1869                           ;eusart1.c: 93: return RC1REG;
  1870                           
  1871                           ; BSR set to: 14
  1872  00177E  5099               	movf	3993,w,c	;volatile
  1873  001780  0012               	return	
  1874  001782                     __end_of_EUSART1_Read:
  1875                           	opt stack 0
  1876                           tblptru	equ	0xFF8
  1877                           tblptrh	equ	0xFF7
  1878                           tblptrl	equ	0xFF6
  1879                           tablat	equ	0xFF5
  1880                           prodh	equ	0xFF4
  1881                           prodl	equ	0xFF3
  1882                           postinc0	equ	0xFEE
  1883                           wreg	equ	0xFE8
  1884                           indf2	equ	0xFDF
  1885                           fsr2h	equ	0xFDA
  1886                           fsr2l	equ	0xFD9
  1887                           status	equ	0xFD8
  1888                           
  1889 ;; *************** function _lcd_init *****************
  1890 ;; Defined at:
  1891 ;;		line 15 in file "lcd.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1909 ;;Total ram usage:        1 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    7
  1912 ;; This function calls:
  1913 ;;		_lcd_clockE
  1914 ;;		_lcd_test
  1915 ;;		_lcd_write
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text11
  1922  0012B4                     __ptext11:
  1923                           	opt stack 0
  1924  0012B4                     _lcd_init:
  1925                           	opt stack 23
  1926                           
  1927                           ;lcd.c: 17: LATE = 0x00;
  1928                           
  1929                           ; BSR set to: 14
  1930                           ;incstack = 0
  1931  0012B4  0E00               	movlw	0
  1932  0012B6  6E87               	movwf	3975,c	;volatile
  1933                           
  1934                           ;lcd.c: 19: LATD = 0x03;
  1935  0012B8  0E03               	movlw	3
  1936  0012BA  6E86               	movwf	3974,c	;volatile
  1937                           
  1938                           ;lcd.c: 20: for(count = 3; count > 0; count-- )
  1939  0012BC  0E03               	movlw	3
  1940  0012BE  6E41               	movwf	_count,c
  1941  0012C0                     l1859:
  1942  0012C0  5041               	movf	_count,w,c
  1943  0012C2  0A80               	xorlw	128
  1944  0012C4  0F7F               	addlw	-129
  1945  0012C6  A0D8               	btfss	status,0,c
  1946  0012C8  D00B               	goto	u370
  1947                           
  1948                           ;lcd.c: 21: {
  1949                           ;lcd.c: 22: lcd_clockE();
  1950  0012CA  ECC8  F00B         	call	_lcd_clockE	;wreg free
  1951                           
  1952                           ;lcd.c: 23: _delay((unsigned long)((5)*(8000000/4000.0)));
  1953  0012CE  0E0D               	movlw	13
  1954  0012D0  6E1A               	movwf	??_lcd_init& (0+255),c
  1955  0012D2  0EFC               	movlw	252
  1956  0012D4                     u967:
  1957  0012D4  2EE8               	decfsz	wreg,f,c
  1958  0012D6  D7FE               	bra	u967
  1959  0012D8  2E1A               	decfsz	??_lcd_init& (0+255),f,c
  1960  0012DA  D7FC               	bra	u967
  1961  0012DC  0641               	decf	_count,f,c
  1962  0012DE  D7F0               	goto	l1859
  1963  0012E0                     u370:
  1964                           
  1965                           ;lcd.c: 25: }
  1966                           ;lcd.c: 26: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1967  0012E0  0E21               	movlw	33
  1968  0012E2                     u977:
  1969  0012E2  2EE8               	decfsz	wreg,f,c
  1970  0012E4  D7FE               	bra	u977
  1971  0012E6  F000               	nop	
  1972                           
  1973                           ;lcd.c: 27: LATD = 0x02;
  1974  0012E8  0E02               	movlw	2
  1975  0012EA  6E86               	movwf	3974,c	;volatile
  1976                           
  1977                           ;lcd.c: 28: lcd_clockE();
  1978  0012EC  ECC8  F00B         	call	_lcd_clockE	;wreg free
  1979                           
  1980                           ;lcd.c: 31: lcd_write(dispfunc2);
  1981  0012F0  0E2C               	movlw	low _dispfunc2
  1982  0012F2  6EF6               	movwf	tblptrl,c
  1983  0012F4                     	if	0	;There is only one active tblptr byte
  1984  0012F4                     	endif
  1985  0012F4                     	if	0	;There are less than 3 active tblptr bytes
  1986  0012F4                     	endif
  1987  0012F4  0008               	tblrd		*
  1988  0012F6  50F5               	movf	tablat,w,c
  1989  0012F8  ECEB  F00A         	call	_lcd_write
  1990                           
  1991                           ;lcd.c: 33: lcd_write(dispon);
  1992  0012FC  0E2B               	movlw	low _dispon
  1993  0012FE  6EF6               	movwf	tblptrl,c
  1994  001300                     	if	0	;There is only one active tblptr byte
  1995  001300                     	endif
  1996  001300                     	if	0	;There are less than 3 active tblptr bytes
  1997  001300                     	endif
  1998  001300  0008               	tblrd		*
  1999  001302  50F5               	movf	tablat,w,c
  2000  001304  ECEB  F00A         	call	_lcd_write
  2001                           
  2002                           ;lcd.c: 35: lcd_write(dispnormal);
  2003  001308  0E27               	movlw	low _dispnormal
  2004  00130A  6EF6               	movwf	tblptrl,c
  2005  00130C                     	if	0	;There is only one active tblptr byte
  2006  00130C                     	endif
  2007  00130C                     	if	0	;There are less than 3 active tblptr bytes
  2008  00130C                     	endif
  2009  00130C  0008               	tblrd		*
  2010  00130E  50F5               	movf	tablat,w,c
  2011  001310  ECEB  F00A         	call	_lcd_write
  2012                           
  2013                           ;lcd.c: 37: lcd_write(dispclr);
  2014  001314  0E2A               	movlw	low _dispclr
  2015  001316  6EF6               	movwf	tblptrl,c
  2016  001318                     	if	0	;There is only one active tblptr byte
  2017  001318                     	endif
  2018  001318                     	if	0	;There are less than 3 active tblptr bytes
  2019  001318                     	endif
  2020  001318  0008               	tblrd		*
  2021  00131A  50F5               	movf	tablat,w,c
  2022  00131C  ECEB  F00A         	call	_lcd_write
  2023                           
  2024                           ;lcd.c: 39: lcd_test();
  2025  001320  EC98  F00B         	call	_lcd_test	;wreg free
  2026  001324  F000               	nop		;# 
  2027  001326  0012               	return		;funcret
  2028  001328                     __end_of_lcd_init:
  2029                           	opt stack 0
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           postinc0	equ	0xFEE
  2037                           wreg	equ	0xFE8
  2038                           indf2	equ	0xFDF
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function _lcd_test *****************
  2044 ;; Defined at:
  2045 ;;		line 130 in file "lcd.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  character       1   24[COMRAM] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2063 ;;Total ram usage:        1 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    6
  2066 ;; This function calls:
  2067 ;;		_lcd_writeC
  2068 ;; This function is called by:
  2069 ;;		_lcd_init
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text12
  2074  001730                     __ptext12:
  2075                           	opt stack 0
  2076  001730                     _lcd_test:
  2077                           	opt stack 23
  2078                           
  2079                           ;lcd.c: 132: uint8_t character = 0x30;
  2080                           
  2081                           ;incstack = 0
  2082  001730  0E30               	movlw	48
  2083  001732  D004               	goto	L1
  2084  001734                     
  2085                           ;lcd.c: 134: {
  2086                           ;lcd.c: 135: lcd_writeC(character);
  2087  001734  5019               	movf	lcd_test@character,w,c
  2088  001736  EC1C  F00B         	call	_lcd_writeC
  2089                           
  2090                           ;lcd.c: 136: character = character+ 1;
  2091  00173A  2819               	incf	lcd_test@character,w,c
  2092  00173C                     L1:
  2093  00173C  6E19               	movwf	lcd_test@character,c
  2094  00173E  0E4F               	movlw	79
  2095  001740  6419               	cpfsgt	lcd_test@character,c
  2096  001742  D7F8               	goto	l622
  2097  001744  0012               	return	
  2098  001746                     __end_of_lcd_test:
  2099                           	opt stack 0
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           prodh	equ	0xFF4
  2105                           prodl	equ	0xFF3
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           indf2	equ	0xFDF
  2109                           fsr2h	equ	0xFDA
  2110                           fsr2l	equ	0xFD9
  2111                           status	equ	0xFD8
  2112                           
  2113 ;; *************** function _displ_credit *****************
  2114 ;; Defined at:
  2115 ;;		line 44 in file "lcd.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  cash            1   43[COMRAM] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;Total ram usage:        1 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    7
  2136 ;; This function calls:
  2137 ;;		_credit_check
  2138 ;;		_displ_hex
  2139 ;;		_lcd_string
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text13
  2146  00168A                     __ptext13:
  2147                           	opt stack 0
  2148  00168A                     _displ_credit:
  2149                           	opt stack 23
  2150                           
  2151                           ;lcd.c: 46: lcd_string(credits);
  2152                           
  2153                           ;incstack = 0
  2154  00168A  0E44               	movlw	low _credits
  2155  00168C  6E19               	movwf	lcd_string@lcdstring,c
  2156  00168E  0E0F               	movlw	high _credits
  2157  001690  6E1A               	movwf	lcd_string@lcdstring+1,c
  2158  001692  ECDE  F008         	call	_lcd_string	;wreg free
  2159                           
  2160                           ;lcd.c: 47: uint8_t cash = credit_check();
  2161  001696  EC67  F00B         	call	_credit_check	;wreg free
  2162  00169A  6E2C               	movwf	displ_credit@cash,c
  2163                           
  2164                           ;lcd.c: 48: displ_hex((uint8_t) cash);
  2165  00169C  502C               	movf	displ_credit@cash,w,c
  2166  00169E  6E1D               	movwf	displ_hex@hexnum,c
  2167  0016A0  6A1E               	clrf	displ_hex@hexnum+1,c
  2168  0016A2  6A1F               	clrf	displ_hex@hexnum+2,c
  2169  0016A4  EC2E  F008         	call	_displ_hex	;wreg free
  2170                           
  2171                           ;lcd.c: 49: venflags.credisplay = 0;
  2172  0016A8  983E               	bcf	_venflags,4,c
  2173  0016AA  0012               	return		;funcret
  2174  0016AC                     __end_of_displ_credit:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           prodh	equ	0xFF4
  2181                           prodl	equ	0xFF3
  2182                           postinc0	equ	0xFEE
  2183                           wreg	equ	0xFE8
  2184                           indf2	equ	0xFDF
  2185                           fsr2h	equ	0xFDA
  2186                           fsr2l	equ	0xFD9
  2187                           status	equ	0xFD8
  2188                           
  2189 ;; *************** function _lcd_string *****************
  2190 ;; Defined at:
  2191 ;;		line 78 in file "lcd.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  lcdstring       2   24[COMRAM] PTR unsigned char 
  2194 ;;		 -> credits(13), inscoin(22), 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;Total ram usage:        4 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    6
  2213 ;; This function calls:
  2214 ;;		_lcd_write
  2215 ;;		_lcd_writeC
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;;		_displ_credit
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text14
  2223  0011BC                     __ptext14:
  2224                           	opt stack 0
  2225  0011BC                     _lcd_string:
  2226                           	opt stack 24
  2227                           
  2228                           ;lcd.c: 80: lcd_write(dispclr);
  2229                           
  2230                           ;incstack = 0
  2231  0011BC  0E2A               	movlw	low _dispclr
  2232  0011BE  6EF6               	movwf	tblptrl,c
  2233  0011C0                     	if	0	;There is only one active tblptr byte
  2234  0011C0                     	endif
  2235  0011C0                     	if	0	;There are less than 3 active tblptr bytes
  2236  0011C0                     	endif
  2237  0011C0  0008               	tblrd		*
  2238  0011C2  50F5               	movf	tablat,w,c
  2239  0011C4  ECEB  F00A         	call	_lcd_write
  2240                           
  2241                           ;lcd.c: 81: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
  2242  0011C8  0E00               	movlw	0
  2243  0011CA  6E37               	movwf	_stradd,c
  2244  0011CC  D024               	goto	l605
  2245  0011CE                     
  2246                           ;lcd.c: 82: {
  2247                           ;lcd.c: 83: lcdata = lcdstring[stradd];
  2248  0011CE  5037               	movf	_stradd,w,c
  2249  0011D0  0D01               	mullw	1
  2250  0011D2  C019  F01B         	movff	lcd_string@lcdstring,??_lcd_string
  2251  0011D6  C01A  F01C         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  2252  0011DA  50F3               	movf	prodl,w,c
  2253  0011DC  261B               	addwf	??_lcd_string,f,c
  2254  0011DE  50F4               	movf	prodh,w,c
  2255  0011E0  221C               	addwfc	??_lcd_string+1,f,c
  2256  0011E2  C01B  FFF6         	movff	??_lcd_string,tblptrl
  2257  0011E6  C01C  FFF7         	movff	??_lcd_string+1,tblptrh
  2258  0011EA                     	if	0	;tblptru may be non-zero
  2259  0011EA                     	endif
  2260  0011EA                     	if	0	;tblptru may be non-zero
  2261  0011EA                     	endif
  2262  0011EA  0008               	tblrd		*
  2263  0011EC  CFF5 F038          	movff	tablat,_lcdata
  2264                           
  2265                           ;lcd.c: 84: lcd_writeC(lcdstring[stradd]);
  2266  0011F0  5037               	movf	_stradd,w,c
  2267  0011F2  0D01               	mullw	1
  2268  0011F4  C019  F01B         	movff	lcd_string@lcdstring,??_lcd_string
  2269  0011F8  C01A  F01C         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  2270  0011FC  50F3               	movf	prodl,w,c
  2271  0011FE  261B               	addwf	??_lcd_string,f,c
  2272  001200  50F4               	movf	prodh,w,c
  2273  001202  221C               	addwfc	??_lcd_string+1,f,c
  2274  001204  C01B  FFF6         	movff	??_lcd_string,tblptrl
  2275  001208  C01C  FFF7         	movff	??_lcd_string+1,tblptrh
  2276  00120C                     	if	0	;tblptru may be non-zero
  2277  00120C                     	endif
  2278  00120C                     	if	0	;tblptru may be non-zero
  2279  00120C                     	endif
  2280  00120C  0008               	tblrd		*
  2281  00120E  50F5               	movf	tablat,w,c
  2282  001210  EC1C  F00B         	call	_lcd_writeC
  2283  001214  2A37               	incf	_stradd,f,c
  2284  001216                     l605:
  2285  001216  5037               	movf	_stradd,w,c
  2286  001218  0D01               	mullw	1
  2287  00121A  C019  F01B         	movff	lcd_string@lcdstring,??_lcd_string
  2288  00121E  C01A  F01C         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  2289  001222  50F3               	movf	prodl,w,c
  2290  001224  261B               	addwf	??_lcd_string,f,c
  2291  001226  50F4               	movf	prodh,w,c
  2292  001228  221C               	addwfc	??_lcd_string+1,f,c
  2293  00122A  C01B  FFF6         	movff	??_lcd_string,tblptrl
  2294  00122E  C01C  FFF7         	movff	??_lcd_string+1,tblptrh
  2295  001232                     	if	0	;tblptru may be non-zero
  2296  001232                     	endif
  2297  001232                     	if	0	;tblptru may be non-zero
  2298  001232                     	endif
  2299  001232  0008               	tblrd		*
  2300  001234  50F5               	movf	tablat,w,c
  2301  001236  0900               	iorlw	0
  2302  001238  B4D8               	btfsc	status,2,c
  2303  00123A  0012               	return	
  2304  00123C  D7C8               	goto	l606
  2305  00123E                     __end_of_lcd_string:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           indf2	equ	0xFDF
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _displ_hex *****************
  2321 ;; Defined at:
  2322 ;;		line 53 in file "lcd.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  hexnum          3   28[COMRAM] unsigned um
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  value           8   31[COMRAM] unsigned char [8]
  2327 ;;  hexnumsave      3   39[COMRAM] unsigned um
  2328 ;;  i               1   42[COMRAM] char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2338 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;Total ram usage:       15 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    6
  2345 ;; This function calls:
  2346 ;;		___ltdiv
  2347 ;;		___ltmod
  2348 ;;		_lcd_writeC
  2349 ;; This function is called by:
  2350 ;;		_displ_credit
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text15
  2355  00105C                     __ptext15:
  2356                           	opt stack 0
  2357  00105C                     _displ_hex:
  2358                           	opt stack 23
  2359                           
  2360                           ;lcd.c: 55: signed char i = 0;
  2361                           
  2362                           ;incstack = 0
  2363  00105C  0E00               	movlw	0
  2364  00105E  6E2B               	movwf	displ_hex@i,c
  2365                           
  2366                           ;lcd.c: 56: uint8_t value[8];
  2367                           ;lcd.c: 57: uint24_t hexnumsave = hexnum;
  2368  001060  C01D  F028         	movff	displ_hex@hexnum,displ_hex@hexnumsave
  2369  001064  C01E  F029         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
  2370  001068  C01F  F02A         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
  2371                           
  2372                           ;lcd.c: 58: while(hexnum > 0)
  2373  00106C  D02E               	goto	l595
  2374  00106E                     
  2375                           ;lcd.c: 59: {
  2376                           ;lcd.c: 60: value[i] = hexnum % 10;
  2377  00106E  502B               	movf	displ_hex@i,w,c
  2378  001070  0D01               	mullw	1
  2379  001072  0E20               	movlw	low displ_hex@value
  2380  001074  24F3               	addwf	prodl,w,c
  2381  001076  6ED9               	movwf	fsr2l,c
  2382  001078  0E00               	movlw	high displ_hex@value
  2383  00107A  20F4               	addwfc	prodh,w,c
  2384  00107C  6EDA               	movwf	fsr2h,c
  2385  00107E  C01D  F013         	movff	displ_hex@hexnum,___ltmod@dividend
  2386  001082  C01E  F014         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
  2387  001086  C01F  F015         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
  2388  00108A  0E0A               	movlw	10
  2389  00108C  6E16               	movwf	___ltmod@divisor,c
  2390  00108E  0E00               	movlw	0
  2391  001090  6E17               	movwf	___ltmod@divisor+1,c
  2392  001092  0E00               	movlw	0
  2393  001094  6E18               	movwf	___ltmod@divisor+2,c
  2394  001096  ECC9  F009         	call	___ltmod	;wreg free
  2395  00109A  5013               	movf	?___ltmod,w,c
  2396  00109C  6EDF               	movwf	indf2,c
  2397                           
  2398                           ;lcd.c: 61: hexnum /= 10;
  2399  00109E  C01D  F013         	movff	displ_hex@hexnum,___ltdiv@dividend
  2400  0010A2  C01E  F014         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
  2401  0010A6  C01F  F015         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
  2402  0010AA  0E0A               	movlw	10
  2403  0010AC  6E16               	movwf	___ltdiv@divisor,c
  2404  0010AE  0E00               	movlw	0
  2405  0010B0  6E17               	movwf	___ltdiv@divisor+1,c
  2406  0010B2  0E00               	movlw	0
  2407  0010B4  6E18               	movwf	___ltdiv@divisor+2,c
  2408  0010B6  EC94  F009         	call	___ltdiv	;wreg free
  2409  0010BA  C013  F01D         	movff	?___ltdiv,displ_hex@hexnum
  2410  0010BE  C014  F01E         	movff	?___ltdiv+1,displ_hex@hexnum+1
  2411  0010C2  C015  F01F         	movff	?___ltdiv+2,displ_hex@hexnum+2
  2412                           
  2413                           ;lcd.c: 62: i = i + 1;
  2414  0010C6  282B               	incf	displ_hex@i,w,c
  2415  0010C8  6E2B               	movwf	displ_hex@i,c
  2416  0010CA                     l595:
  2417  0010CA  501D               	movf	displ_hex@hexnum,w,c
  2418  0010CC  101E               	iorwf	displ_hex@hexnum+1,w,c
  2419  0010CE  101F               	iorwf	displ_hex@hexnum+2,w,c
  2420  0010D0  B4D8               	btfsc	status,2,c
  2421  0010D2  D00E               	goto	l598
  2422  0010D4  D7CC               	goto	l596
  2423  0010D6                     
  2424                           ;lcd.c: 66: {
  2425                           ;lcd.c: 67: i--;
  2426  0010D6  062B               	decf	displ_hex@i,f,c
  2427                           
  2428                           ;lcd.c: 68: lcd_writeC(value[i] | 0x30);
  2429  0010D8  502B               	movf	displ_hex@i,w,c
  2430  0010DA  0D01               	mullw	1
  2431  0010DC  0E20               	movlw	low displ_hex@value
  2432  0010DE  24F3               	addwf	prodl,w,c
  2433  0010E0  6ED9               	movwf	fsr2l,c
  2434  0010E2  0E00               	movlw	high displ_hex@value
  2435  0010E4  20F4               	addwfc	prodh,w,c
  2436  0010E6  6EDA               	movwf	fsr2h,c
  2437  0010E8  50DF               	movf	indf2,w,c
  2438  0010EA  0930               	iorlw	48
  2439  0010EC  EC1C  F00B         	call	_lcd_writeC
  2440  0010F0                     l598:
  2441  0010F0  502B               	movf	displ_hex@i,w,c
  2442  0010F2  0A80               	xorlw	128
  2443  0010F4  0F7F               	addlw	-129
  2444  0010F6  B0D8               	btfsc	status,0,c
  2445  0010F8  D7EE               	goto	l599
  2446                           
  2447                           ;lcd.c: 69: }
  2448                           ;lcd.c: 71: if(hexnumsave == 0)
  2449  0010FA  5028               	movf	displ_hex@hexnumsave,w,c
  2450  0010FC  1029               	iorwf	displ_hex@hexnumsave+1,w,c
  2451  0010FE  102A               	iorwf	displ_hex@hexnumsave+2,w,c
  2452  001100  A4D8               	btfss	status,2,c
  2453  001102  0012               	return	
  2454                           
  2455                           ;lcd.c: 72: {
  2456                           ;lcd.c: 73: lcd_writeC(0x30);
  2457  001104  0E30               	movlw	48
  2458  001106  EC1C  F00B         	call	_lcd_writeC
  2459  00110A  0012               	return	
  2460  00110C                     __end_of_displ_hex:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           prodh	equ	0xFF4
  2467                           prodl	equ	0xFF3
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           indf2	equ	0xFDF
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           status	equ	0xFD8
  2474                           
  2475 ;; *************** function _lcd_writeC *****************
  2476 ;; Defined at:
  2477 ;;		line 88 in file "lcd.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  lcdata          1    wreg     unsigned char 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  lcdata          1   23[COMRAM] unsigned char 
  2482 ;;  lcdatasave      1   22[COMRAM] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;Total ram usage:        2 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    5
  2499 ;; This function calls:
  2500 ;;		_lcd_write
  2501 ;; This function is called by:
  2502 ;;		_displ_hex
  2503 ;;		_lcd_string
  2504 ;;		_lcd_test
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text16
  2509  001638                     __ptext16:
  2510                           	opt stack 0
  2511  001638                     _lcd_writeC:
  2512                           	opt stack 24
  2513                           
  2514                           ;incstack = 0
  2515                           ;lcd_writeC@lcdata stored from wreg
  2516  001638  6E18               	movwf	lcd_writeC@lcdata,c
  2517  00163A  8487               	bsf	3975,2,c	;# 
  2518                           
  2519                           ;lcd.c: 93: lcd_write(lcdata);
  2520  00163C  5018               	movf	lcd_writeC@lcdata,w,c
  2521  00163E  ECEB  F00A         	call	_lcd_write
  2522                           
  2523                           ;lcd.c: 96: if(bflag == 0x0F)
  2524  001642  0E0F               	movlw	15
  2525  001644  183A               	xorwf	_bflag,w,c
  2526  001646  A4D8               	btfss	status,2,c
  2527  001648  D00B               	goto	l611
  2528                           
  2529                           ;lcd.c: 97: {
  2530                           ;lcd.c: 98: uint8_t lcdatasave = lcdata;
  2531  00164A  C018  F017         	movff	lcd_writeC@lcdata,lcd_writeC@lcdatasave
  2532  00164E  9487               	bcf	3975,2,c	;# 
  2533                           
  2534                           ;lcd.c: 101: lcdata = 0xC0;
  2535  001650  0EC0               	movlw	192
  2536  001652  6E18               	movwf	lcd_writeC@lcdata,c
  2537                           
  2538                           ;lcd.c: 102: lcd_write(lcdata);
  2539  001654  5018               	movf	lcd_writeC@lcdata,w,c
  2540  001656  ECEB  F00A         	call	_lcd_write
  2541  00165A  8487               	bsf	3975,2,c	;# 
  2542                           
  2543                           ;lcd.c: 104: lcdata = lcdatasave;
  2544  00165C  C017  F018         	movff	lcd_writeC@lcdatasave,lcd_writeC@lcdata
  2545  001660                     l611:
  2546  001660  9487               	bcf	3975,2,c	;# 
  2547  001662  0012               	return		;funcret
  2548  001664                     __end_of_lcd_writeC:
  2549                           	opt stack 0
  2550                           tblptru	equ	0xFF8
  2551                           tblptrh	equ	0xFF7
  2552                           tblptrl	equ	0xFF6
  2553                           tablat	equ	0xFF5
  2554                           prodh	equ	0xFF4
  2555                           prodl	equ	0xFF3
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           indf2	equ	0xFDF
  2559                           fsr2h	equ	0xFDA
  2560                           fsr2l	equ	0xFD9
  2561                           status	equ	0xFD8
  2562                           
  2563 ;; *************** function _lcd_write *****************
  2564 ;; Defined at:
  2565 ;;		line 110 in file "lcd.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  lcdata          1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  lcdata          1   21[COMRAM] unsigned char 
  2570 ;;  savelatd        1   20[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2584 ;;Total ram usage:        2 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    4
  2587 ;; This function calls:
  2588 ;;		_lcd_clockE
  2589 ;;		_read_busy
  2590 ;; This function is called by:
  2591 ;;		_lcd_init
  2592 ;;		_lcd_string
  2593 ;;		_lcd_writeC
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text17
  2598  0015D6                     __ptext17:
  2599                           	opt stack 0
  2600  0015D6                     _lcd_write:
  2601                           	opt stack 24
  2602                           
  2603                           ;incstack = 0
  2604                           ;lcd_write@lcdata stored from wreg
  2605  0015D6  6E16               	movwf	lcd_write@lcdata,c
  2606                           
  2607                           ;lcd.c: 112: uint8_t savelatd = LATD;
  2608  0015D8  CF86 F015          	movff	3974,lcd_write@savelatd	;volatile
  2609                           
  2610                           ;lcd.c: 115: bflag = read_busy();
  2611  0015DC  EC38  F00A         	call	_read_busy	;wreg free
  2612  0015E0  D002               	goto	L2
  2613  0015E2                     
  2614                           ;lcd.c: 117: {
  2615                           ;lcd.c: 118: bflag = read_busy();
  2616  0015E2  EC38  F00A         	call	_read_busy	;wreg free
  2617  0015E6                     L2:
  2618  0015E6  6E3A               	movwf	_bflag,c
  2619  0015E8  BE3A               	btfsc	_bflag,7,c
  2620  0015EA  D7FB               	goto	l616
  2621                           
  2622                           ;lcd.c: 119: }
  2623                           ;lcd.c: 120: LATD = (lcdata >> 4) & 0x0F;
  2624  0015EC  3816               	swapf	lcd_write@lcdata,w,c
  2625  0015EE  0B0F               	andlw	15
  2626  0015F0  0B0F               	andlw	15
  2627  0015F2  6E86               	movwf	3974,c	;volatile
  2628                           
  2629                           ;lcd.c: 122: lcd_clockE();
  2630  0015F4  ECC8  F00B         	call	_lcd_clockE	;wreg free
  2631                           
  2632                           ;lcd.c: 124: LATD = lcdata & 0x0F;
  2633  0015F8  5016               	movf	lcd_write@lcdata,w,c
  2634  0015FA  0B0F               	andlw	15
  2635  0015FC  6E86               	movwf	3974,c	;volatile
  2636                           
  2637                           ;lcd.c: 125: lcd_clockE();
  2638  0015FE  ECC8  F00B         	call	_lcd_clockE	;wreg free
  2639                           
  2640                           ;lcd.c: 126: LATD = savelatd;
  2641  001602  C015  FF86         	movff	lcd_write@savelatd,3974	;volatile
  2642  001606  0012               	return		;funcret
  2643  001608                     __end_of_lcd_write:
  2644                           	opt stack 0
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           prodh	equ	0xFF4
  2650                           prodl	equ	0xFF3
  2651                           postinc0	equ	0xFEE
  2652                           wreg	equ	0xFE8
  2653                           indf2	equ	0xFDF
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _read_busy *****************
  2659 ;; Defined at:
  2660 ;;		line 141 in file "lcd.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  savelatd        1   19[COMRAM] unsigned char 
  2665 ;;  savelate        1   18[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      char 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;Total ram usage:        2 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    3
  2682 ;; This function calls:
  2683 ;;		_lcd_clockH
  2684 ;;		_lcd_clockL
  2685 ;; This function is called by:
  2686 ;;		_lcd_write
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text18
  2691  001470                     __ptext18:
  2692                           	opt stack 0
  2693  001470                     _read_busy:
  2694                           	opt stack 24
  2695                           
  2696                           ;lcd.c: 143: uint8_t savelate = LATE;
  2697                           
  2698                           ;incstack = 0
  2699  001470  CF87 F013          	movff	3975,read_busy@savelate	;volatile
  2700                           
  2701                           ;lcd.c: 144: uint8_t savelatd = LATD;
  2702  001474  CF86 F014          	movff	3974,read_busy@savelatd	;volatile
  2703  001478  9487               	bcf	3975,2,c	;# 
  2704  00147A  8287               	bsf	3975,1,c	;# 
  2705                           
  2706                           ;lcd.c: 147: TRISD = (TRISD | 0x0F);
  2707  00147C  508B               	movf	3979,w,c	;volatile
  2708  00147E  090F               	iorlw	15
  2709  001480  6E8B               	movwf	3979,c	;volatile
  2710                           
  2711                           ;lcd.c: 148: lcd_clockH();
  2712  001482  ECE1  F00B         	call	_lcd_clockH	;wreg free
  2713                           
  2714                           ;lcd.c: 149: bflag = (PORTD << 4);
  2715  001486  3890               	swapf	3984,w,c	;volatile
  2716  001488  0BF0               	andlw	240
  2717  00148A  6E3A               	movwf	_bflag,c
  2718                           
  2719                           ;lcd.c: 150: lcd_clockL();
  2720  00148C  ECDE  F00B         	call	_lcd_clockL	;wreg free
  2721                           
  2722                           ;lcd.c: 151: lcd_clockH();
  2723  001490  ECE1  F00B         	call	_lcd_clockH	;wreg free
  2724                           
  2725                           ;lcd.c: 152: bflag = bflag | (PORTD & 0x0F);
  2726  001494  5090               	movf	3984,w,c	;volatile
  2727  001496  0B0F               	andlw	15
  2728  001498  103A               	iorwf	_bflag,w,c
  2729  00149A  6E3A               	movwf	_bflag,c
  2730  00149C  9087               	bcf	3975,0,c	;# 
  2731                           
  2732                           ;lcd.c: 154: TRISD = (TRISD & 0xF0);
  2733  00149E  508B               	movf	3979,w,c	;volatile
  2734  0014A0  0BF0               	andlw	240
  2735  0014A2  6E8B               	movwf	3979,c	;volatile
  2736  0014A4  9287               	bcf	3975,1,c	;# 
  2737                           
  2738                           ;lcd.c: 156: LATD = savelatd;
  2739  0014A6  C014  FF86         	movff	read_busy@savelatd,3974	;volatile
  2740                           
  2741                           ;lcd.c: 157: LATE = savelate;
  2742  0014AA  C013  FF87         	movff	read_busy@savelate,3975	;volatile
  2743                           
  2744                           ;lcd.c: 158: return(bflag);
  2745  0014AE  503A               	movf	_bflag,w,c
  2746  0014B0  0012               	return	
  2747  0014B2                     __end_of_read_busy:
  2748                           	opt stack 0
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           prodh	equ	0xFF4
  2754                           prodl	equ	0xFF3
  2755                           postinc0	equ	0xFEE
  2756                           wreg	equ	0xFE8
  2757                           indf2	equ	0xFDF
  2758                           fsr2h	equ	0xFDA
  2759                           fsr2l	equ	0xFD9
  2760                           status	equ	0xFD8
  2761                           
  2762 ;; *************** function _lcd_clockL *****************
  2763 ;; Defined at:
  2764 ;;		line 173 in file "lcd.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		None
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    2
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_read_busy
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text19
  2793  0017BC                     __ptext19:
  2794                           	opt stack 0
  2795  0017BC                     _lcd_clockL:
  2796                           	opt stack 24
  2797                           
  2798                           ;incstack = 0
  2799  0017BC  9087               	bcf	3975,0,c	;# 
  2800                           
  2801                           ;lcd.c: 176: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2802  0017BE  D000               	nop2		;2 cycle nop
  2803  0017C0  0012               	return		;funcret
  2804  0017C2                     __end_of_lcd_clockL:
  2805                           	opt stack 0
  2806                           tblptru	equ	0xFF8
  2807                           tblptrh	equ	0xFF7
  2808                           tblptrl	equ	0xFF6
  2809                           tablat	equ	0xFF5
  2810                           prodh	equ	0xFF4
  2811                           prodl	equ	0xFF3
  2812                           postinc0	equ	0xFEE
  2813                           wreg	equ	0xFE8
  2814                           indf2	equ	0xFDF
  2815                           fsr2h	equ	0xFDA
  2816                           fsr2l	equ	0xFD9
  2817                           status	equ	0xFD8
  2818                           
  2819 ;; *************** function _lcd_clockH *****************
  2820 ;; Defined at:
  2821 ;;		line 165 in file "lcd.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		None
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    2
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_read_busy
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text20
  2850  0017C2                     __ptext20:
  2851                           	opt stack 0
  2852  0017C2                     _lcd_clockH:
  2853                           	opt stack 24
  2854                           
  2855                           ;incstack = 0
  2856  0017C2  8087               	bsf	3975,0,c	;# 
  2857                           
  2858                           ;lcd.c: 168: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2859  0017C4  D000               	nop2		;2 cycle nop
  2860  0017C6  0012               	return		;funcret
  2861  0017C8                     __end_of_lcd_clockH:
  2862                           	opt stack 0
  2863                           tblptru	equ	0xFF8
  2864                           tblptrh	equ	0xFF7
  2865                           tblptrl	equ	0xFF6
  2866                           tablat	equ	0xFF5
  2867                           prodh	equ	0xFF4
  2868                           prodl	equ	0xFF3
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           indf2	equ	0xFDF
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function _lcd_clockE *****************
  2877 ;; Defined at:
  2878 ;;		line 181 in file "lcd.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		None
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    2
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_lcd_init
  2903 ;;		_lcd_write
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text21
  2908  001790                     __ptext21:
  2909                           	opt stack 0
  2910  001790                     _lcd_clockE:
  2911                           	opt stack 25
  2912                           
  2913                           ;incstack = 0
  2914  001790  8087               	bsf	3975,0,c	;# 
  2915                           
  2916                           ;lcd.c: 184: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2917  001792  D000               	nop2		;2 cycle nop
  2918  001794  9087               	bcf	3975,0,c	;# 
  2919                           
  2920                           ;lcd.c: 186: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2921  001796  D000               	nop2		;2 cycle nop
  2922  001798  0012               	return		;funcret
  2923  00179A                     __end_of_lcd_clockE:
  2924                           	opt stack 0
  2925                           tblptru	equ	0xFF8
  2926                           tblptrh	equ	0xFF7
  2927                           tblptrl	equ	0xFF6
  2928                           tablat	equ	0xFF5
  2929                           prodh	equ	0xFF4
  2930                           prodl	equ	0xFF3
  2931                           postinc0	equ	0xFEE
  2932                           wreg	equ	0xFE8
  2933                           indf2	equ	0xFDF
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function ___ltmod *****************
  2939 ;; Defined at:
  2940 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltmod.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  dividend        3   18[COMRAM] unsigned um
  2943 ;;  divisor         3   21[COMRAM] unsigned um
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  counter         1   24[COMRAM] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  3   18[COMRAM] unsigned um
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2955 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2958 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2959 ;;Total ram usage:        7 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    2
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_displ_hex
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text22
  2970  001392                     __ptext22:
  2971                           	opt stack 0
  2972  001392                     ___ltmod:
  2973                           	opt stack 26
  2974                           
  2975                           ;incstack = 0
  2976  001392  5016               	movf	___ltmod@divisor,w,c
  2977  001394  1017               	iorwf	___ltmod@divisor+1,w,c
  2978  001396  1018               	iorwf	___ltmod@divisor+2,w,c
  2979  001398  B4D8               	btfsc	status,2,c
  2980  00139A  D01E               	goto	l1249
  2981  00139C  0E01               	movlw	1
  2982  00139E  6E19               	movwf	___ltmod@counter,c
  2983  0013A0  D005               	goto	l1244
  2984  0013A2  90D8               	bcf	status,0,c
  2985  0013A4  3616               	rlcf	___ltmod@divisor,f,c
  2986  0013A6  3617               	rlcf	___ltmod@divisor+1,f,c
  2987  0013A8  3618               	rlcf	___ltmod@divisor+2,f,c
  2988  0013AA  2A19               	incf	___ltmod@counter,f,c
  2989  0013AC                     l1244:
  2990  0013AC  AE18               	btfss	___ltmod@divisor+2,7,c
  2991  0013AE  D7F9               	goto	l1245
  2992  0013B0                     u800:
  2993  0013B0  5016               	movf	___ltmod@divisor,w,c
  2994  0013B2  5C13               	subwf	___ltmod@dividend,w,c
  2995  0013B4  5017               	movf	___ltmod@divisor+1,w,c
  2996  0013B6  5814               	subwfb	___ltmod@dividend+1,w,c
  2997  0013B8  5018               	movf	___ltmod@divisor+2,w,c
  2998  0013BA  5815               	subwfb	___ltmod@dividend+2,w,c
  2999  0013BC  A0D8               	btfss	status,0,c
  3000  0013BE  D006               	goto	l1248
  3001  0013C0  5016               	movf	___ltmod@divisor,w,c
  3002  0013C2  5E13               	subwf	___ltmod@dividend,f,c
  3003  0013C4  5017               	movf	___ltmod@divisor+1,w,c
  3004  0013C6  5A14               	subwfb	___ltmod@dividend+1,f,c
  3005  0013C8  5018               	movf	___ltmod@divisor+2,w,c
  3006  0013CA  5A15               	subwfb	___ltmod@dividend+2,f,c
  3007  0013CC                     l1248:
  3008  0013CC  90D8               	bcf	status,0,c
  3009  0013CE  3218               	rrcf	___ltmod@divisor+2,f,c
  3010  0013D0  3217               	rrcf	___ltmod@divisor+1,f,c
  3011  0013D2  3216               	rrcf	___ltmod@divisor,f,c
  3012  0013D4  2E19               	decfsz	___ltmod@counter,f,c
  3013  0013D6  D7EC               	goto	u800
  3014  0013D8                     l1249:
  3015  0013D8  C013  F013         	movff	___ltmod@dividend,?___ltmod
  3016  0013DC  C014  F014         	movff	___ltmod@dividend+1,?___ltmod+1
  3017  0013E0  C015  F015         	movff	___ltmod@dividend+2,?___ltmod+2
  3018  0013E4  0012               	return		;funcret
  3019  0013E6                     __end_of___ltmod:
  3020                           	opt stack 0
  3021                           tblptru	equ	0xFF8
  3022                           tblptrh	equ	0xFF7
  3023                           tblptrl	equ	0xFF6
  3024                           tablat	equ	0xFF5
  3025                           prodh	equ	0xFF4
  3026                           prodl	equ	0xFF3
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           indf2	equ	0xFDF
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function ___ltdiv *****************
  3035 ;; Defined at:
  3036 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltdiv.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  dividend        3   18[COMRAM] unsigned um
  3039 ;;  divisor         3   21[COMRAM] unsigned um
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  quotient        3   24[COMRAM] unsigned um
  3042 ;;  counter         1   27[COMRAM] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  3   18[COMRAM] unsigned um
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3052 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;Total ram usage:       10 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    2
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_displ_hex
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text23
  3067  001328                     __ptext23:
  3068                           	opt stack 0
  3069  001328                     ___ltdiv:
  3070                           	opt stack 26
  3071                           
  3072                           ;incstack = 0
  3073  001328  0E00               	movlw	0
  3074  00132A  6E19               	movwf	___ltdiv@quotient,c
  3075  00132C  0E00               	movlw	0
  3076  00132E  6E1A               	movwf	___ltdiv@quotient+1,c
  3077  001330  0E00               	movlw	0
  3078  001332  6E1B               	movwf	___ltdiv@quotient+2,c
  3079  001334  5016               	movf	___ltdiv@divisor,w,c
  3080  001336  1017               	iorwf	___ltdiv@divisor+1,w,c
  3081  001338  1018               	iorwf	___ltdiv@divisor+2,w,c
  3082  00133A  B4D8               	btfsc	status,2,c
  3083  00133C  D023               	goto	l1239
  3084  00133E  0E01               	movlw	1
  3085  001340  6E1C               	movwf	___ltdiv@counter,c
  3086  001342  D005               	goto	l1234
  3087  001344  90D8               	bcf	status,0,c
  3088  001346  3616               	rlcf	___ltdiv@divisor,f,c
  3089  001348  3617               	rlcf	___ltdiv@divisor+1,f,c
  3090  00134A  3618               	rlcf	___ltdiv@divisor+2,f,c
  3091  00134C  2A1C               	incf	___ltdiv@counter,f,c
  3092  00134E                     l1234:
  3093  00134E  AE18               	btfss	___ltdiv@divisor+2,7,c
  3094  001350  D7F9               	goto	l1235
  3095  001352                     u770:
  3096  001352  90D8               	bcf	status,0,c
  3097  001354  3619               	rlcf	___ltdiv@quotient,f,c
  3098  001356  361A               	rlcf	___ltdiv@quotient+1,f,c
  3099  001358  361B               	rlcf	___ltdiv@quotient+2,f,c
  3100  00135A  5016               	movf	___ltdiv@divisor,w,c
  3101  00135C  5C13               	subwf	___ltdiv@dividend,w,c
  3102  00135E  5017               	movf	___ltdiv@divisor+1,w,c
  3103  001360  5814               	subwfb	___ltdiv@dividend+1,w,c
  3104  001362  5018               	movf	___ltdiv@divisor+2,w,c
  3105  001364  5815               	subwfb	___ltdiv@dividend+2,w,c
  3106  001366  A0D8               	btfss	status,0,c
  3107  001368  D007               	goto	l1238
  3108  00136A  5016               	movf	___ltdiv@divisor,w,c
  3109  00136C  5E13               	subwf	___ltdiv@dividend,f,c
  3110  00136E  5017               	movf	___ltdiv@divisor+1,w,c
  3111  001370  5A14               	subwfb	___ltdiv@dividend+1,f,c
  3112  001372  5018               	movf	___ltdiv@divisor+2,w,c
  3113  001374  5A15               	subwfb	___ltdiv@dividend+2,f,c
  3114  001376  8019               	bsf	___ltdiv@quotient,0,c
  3115  001378                     l1238:
  3116  001378  90D8               	bcf	status,0,c
  3117  00137A  3218               	rrcf	___ltdiv@divisor+2,f,c
  3118  00137C  3217               	rrcf	___ltdiv@divisor+1,f,c
  3119  00137E  3216               	rrcf	___ltdiv@divisor,f,c
  3120  001380  2E1C               	decfsz	___ltdiv@counter,f,c
  3121  001382  D7E7               	goto	u770
  3122  001384                     l1239:
  3123  001384  C019  F013         	movff	___ltdiv@quotient,?___ltdiv
  3124  001388  C01A  F014         	movff	___ltdiv@quotient+1,?___ltdiv+1
  3125  00138C  C01B  F015         	movff	___ltdiv@quotient+2,?___ltdiv+2
  3126  001390  0012               	return		;funcret
  3127  001392                     __end_of___ltdiv:
  3128                           	opt stack 0
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           prodh	equ	0xFF4
  3134                           prodl	equ	0xFF3
  3135                           postinc0	equ	0xFEE
  3136                           wreg	equ	0xFE8
  3137                           indf2	equ	0xFDF
  3138                           fsr2h	equ	0xFDA
  3139                           fsr2l	equ	0xFD9
  3140                           status	equ	0xFD8
  3141                           
  3142 ;; *************** function _credit_check *****************
  3143 ;; Defined at:
  3144 ;;		line 71 in file "vend.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      unsigned char 
  3151 ;; Registers used:
  3152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    3
  3165 ;; This function calls:
  3166 ;;		_DATAEE_ReadByte
  3167 ;; This function is called by:
  3168 ;;		_displ_credit
  3169 ;;		_vend_init
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text24
  3174  0016CE                     __ptext24:
  3175                           	opt stack 0
  3176  0016CE                     _credit_check:
  3177                           	opt stack 26
  3178                           
  3179                           ;vend.c: 73: cash = DATAEE_ReadByte(credmem);
  3180                           
  3181                           ;incstack = 0
  3182  0016CE  0E0B               	movlw	low _credmem
  3183  0016D0  6EF6               	movwf	tblptrl,c
  3184  0016D2                     	if	0	;There is only one active tblptr byte
  3185  0016D2                     	endif
  3186  0016D2                     	if	0	;There are less than 3 active tblptr bytes
  3187  0016D2                     	endif
  3188  0016D2  0009               	tblrd		*+
  3189  0016D4  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  3190  0016D8  000A               	tblrd		*-
  3191  0016DA  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3192  0016DE  EC74  F00B         	call	_DATAEE_ReadByte	;wreg free
  3193  0016E2  6E35               	movwf	_cash,c	;volatile
  3194                           
  3195                           ;vend.c: 74: return(cash);
  3196  0016E4  5035               	movf	_cash,w,c	;volatile
  3197  0016E6  0012               	return	
  3198  0016E8                     __end_of_credit_check:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           indf2	equ	0xFDF
  3209                           fsr2h	equ	0xFDA
  3210                           fsr2l	equ	0xFD9
  3211                           status	equ	0xFD8
  3212                           
  3213 ;; *************** function _credit_subtract *****************
  3214 ;; Defined at:
  3215 ;;		line 58 in file "vend.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  credit          1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  credit          1   22[COMRAM] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3233 ;;Total ram usage:        1 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    3
  3236 ;; This function calls:
  3237 ;;		_DATAEE_ReadByte
  3238 ;;		_DATAEE_WriteByte
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text25
  3245  0013E6                     __ptext25:
  3246                           	opt stack 0
  3247  0013E6                     _credit_subtract:
  3248                           	opt stack 27
  3249                           
  3250                           ;incstack = 0
  3251                           ;credit_subtract@credit stored from wreg
  3252  0013E6  6E17               	movwf	credit_subtract@credit,c
  3253                           
  3254                           ;vend.c: 60: cash = DATAEE_ReadByte(credmem);
  3255  0013E8  0E0B               	movlw	low _credmem
  3256  0013EA  6EF6               	movwf	tblptrl,c
  3257  0013EC                     	if	0	;There is only one active tblptr byte
  3258  0013EC                     	endif
  3259  0013EC                     	if	0	;There are less than 3 active tblptr bytes
  3260  0013EC                     	endif
  3261  0013EC  0009               	tblrd		*+
  3262  0013EE  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  3263  0013F2  000A               	tblrd		*-
  3264  0013F4  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3265  0013F8  EC74  F00B         	call	_DATAEE_ReadByte	;wreg free
  3266  0013FC  6E35               	movwf	_cash,c	;volatile
  3267                           
  3268                           ;vend.c: 61: cash = (cash - credit) & 0xFF;
  3269  0013FE  5017               	movf	credit_subtract@credit,w,c
  3270  001400  0800               	sublw	0
  3271  001402  2435               	addwf	_cash,w,c	;volatile
  3272  001404  6E35               	movwf	_cash,c	;volatile
  3273                           
  3274                           ;vend.c: 62: DATAEE_WriteByte(credmem, cash);
  3275  001406  0E0B               	movlw	low _credmem
  3276  001408  6EF6               	movwf	tblptrl,c
  3277  00140A                     	if	0	;There is only one active tblptr byte
  3278  00140A                     	endif
  3279  00140A                     	if	0	;There are less than 3 active tblptr bytes
  3280  00140A                     	endif
  3281  00140A  0009               	tblrd		*+
  3282  00140C  CFF5 F013          	movff	tablat,DATAEE_WriteByte@bAdd
  3283  001410  000A               	tblrd		*-
  3284  001412  CFF5 F014          	movff	tablat,DATAEE_WriteByte@bAdd+1
  3285  001416  C035  F015         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  3286  00141A  ECB2  F00A         	call	_DATAEE_WriteByte	;wreg free
  3287                           
  3288                           ;vend.c: 63: if(cash == 0)
  3289  00141E  5035               	movf	_cash,w,c	;volatile
  3290  001420  A4D8               	btfss	status,2,c
  3291  001422  0012               	return	
  3292                           
  3293                           ;vend.c: 64: {
  3294                           ;vend.c: 65: venflags.iscredit = 0;
  3295  001424  903E               	bcf	_venflags,0,c
  3296                           
  3297                           ;vend.c: 66: venflags.inscoin = 1;
  3298  001426  843E               	bsf	_venflags,2,c
  3299                           
  3300                           ;vend.c: 67: venflags.credisplay = 0;
  3301  001428  983E               	bcf	_venflags,4,c
  3302  00142A  0012               	return	
  3303  00142C                     __end_of_credit_subtract:
  3304                           	opt stack 0
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           prodh	equ	0xFF4
  3310                           prodl	equ	0xFF3
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           indf2	equ	0xFDF
  3314                           fsr2h	equ	0xFDA
  3315                           fsr2l	equ	0xFD9
  3316                           status	equ	0xFD8
  3317                           
  3318 ;; *************** function _credit_add *****************
  3319 ;; Defined at:
  3320 ;;		line 44 in file "vend.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  credit          1    wreg     unsigned char 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  credit          1   22[COMRAM] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3338 ;;Total ram usage:        1 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    3
  3341 ;; This function calls:
  3342 ;;		_DATAEE_ReadByte
  3343 ;;		_DATAEE_WriteByte
  3344 ;; This function is called by:
  3345 ;;		_main
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text26
  3350  00142C                     __ptext26:
  3351                           	opt stack 0
  3352  00142C                     _credit_add:
  3353                           	opt stack 27
  3354                           
  3355                           ;incstack = 0
  3356                           ;credit_add@credit stored from wreg
  3357  00142C  6E17               	movwf	credit_add@credit,c
  3358                           
  3359                           ;vend.c: 46: cash = DATAEE_ReadByte(credmem);
  3360  00142E  0E0B               	movlw	low _credmem
  3361  001430  6EF6               	movwf	tblptrl,c
  3362  001432                     	if	0	;There is only one active tblptr byte
  3363  001432                     	endif
  3364  001432                     	if	0	;There are less than 3 active tblptr bytes
  3365  001432                     	endif
  3366  001432  0009               	tblrd		*+
  3367  001434  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  3368  001438  000A               	tblrd		*-
  3369  00143A  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3370  00143E  EC74  F00B         	call	_DATAEE_ReadByte	;wreg free
  3371  001442  6E35               	movwf	_cash,c	;volatile
  3372                           
  3373                           ;vend.c: 47: cash = cash + credit;
  3374  001444  5035               	movf	_cash,w,c	;volatile
  3375  001446  2417               	addwf	credit_add@credit,w,c
  3376  001448  6E35               	movwf	_cash,c	;volatile
  3377                           
  3378                           ;vend.c: 48: DATAEE_WriteByte(credmem, cash);
  3379  00144A  0E0B               	movlw	low _credmem
  3380  00144C  6EF6               	movwf	tblptrl,c
  3381  00144E                     	if	0	;There is only one active tblptr byte
  3382  00144E                     	endif
  3383  00144E                     	if	0	;There are less than 3 active tblptr bytes
  3384  00144E                     	endif
  3385  00144E  0009               	tblrd		*+
  3386  001450  CFF5 F013          	movff	tablat,DATAEE_WriteByte@bAdd
  3387  001454  000A               	tblrd		*-
  3388  001456  CFF5 F014          	movff	tablat,DATAEE_WriteByte@bAdd+1
  3389  00145A  C035  F015         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  3390  00145E  ECB2  F00A         	call	_DATAEE_WriteByte	;wreg free
  3391                           
  3392                           ;vend.c: 49: if(cash != 0)
  3393  001462  5035               	movf	_cash,w,c	;volatile
  3394  001464  B4D8               	btfsc	status,2,c
  3395  001466  0012               	return	
  3396                           
  3397                           ;vend.c: 50: {
  3398                           ;vend.c: 51: venflags.iscredit = 1;
  3399  001468  803E               	bsf	_venflags,0,c
  3400                           
  3401                           ;vend.c: 52: venflags.inscoin = 0;
  3402  00146A  943E               	bcf	_venflags,2,c
  3403                           
  3404                           ;vend.c: 53: venflags.credisplay = 1;
  3405  00146C  883E               	bsf	_venflags,4,c
  3406  00146E  0012               	return	
  3407  001470                     __end_of_credit_add:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           tblptrh	equ	0xFF7
  3411                           tblptrl	equ	0xFF6
  3412                           tablat	equ	0xFF5
  3413                           prodh	equ	0xFF4
  3414                           prodl	equ	0xFF3
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           indf2	equ	0xFDF
  3418                           fsr2h	equ	0xFDA
  3419                           fsr2l	equ	0xFD9
  3420                           status	equ	0xFD8
  3421                           
  3422 ;; *************** function _DATAEE_WriteByte *****************
  3423 ;; Defined at:
  3424 ;;		line 167 in file "mcc_generated_files/memory.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  bAdd            2   18[COMRAM] unsigned int 
  3427 ;;  bData           1   20[COMRAM] unsigned char 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3439 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;Total ram usage:        4 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    2
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_credit_add
  3450 ;;		_credit_subtract
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text27
  3455  001564                     __ptext27:
  3456                           	opt stack 0
  3457  001564                     _DATAEE_WriteByte:
  3458                           	opt stack 27
  3459                           
  3460                           ;memory.c: 169: uint8_t GIEBitValue = INTCONbits.GIE;
  3461                           
  3462                           ;incstack = 0
  3463  001564  0E00               	movlw	0
  3464  001566  BEF2               	btfsc	intcon,7,c	;volatile
  3465  001568  0E01               	movlw	1
  3466  00156A  6E16               	movwf	DATAEE_WriteByte@GIEBitValue,c
  3467                           
  3468                           ;memory.c: 171: NVMADRH = ((bAdd >> 8) & 0x03);
  3469  00156C  5014               	movf	DATAEE_WriteByte@bAdd+1,w,c
  3470  00156E  0B03               	andlw	3
  3471  001570  6E7F               	movwf	3967,c	;volatile
  3472                           
  3473                           ;memory.c: 172: NVMADRL = (bAdd & 0xFF);
  3474  001572  C013  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  3475                           
  3476                           ;memory.c: 173: NVMDAT = bData;
  3477  001576  C015  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  3478                           
  3479                           ;memory.c: 174: NVMCON1bits.NVMREG = 0;
  3480  00157A  0E3F               	movlw	-193
  3481  00157C  1681               	andwf	3969,f,c	;volsfr
  3482                           
  3483                           ;memory.c: 175: NVMCON1bits.WREN = 1;
  3484  00157E  8481               	bsf	3969,2,c	;volsfr
  3485                           
  3486                           ;memory.c: 176: INTCONbits.GIE = 0;
  3487  001580  9EF2               	bcf	intcon,7,c	;volatile
  3488                           
  3489                           ;memory.c: 177: NVMCON2 = 0x55;
  3490  001582  0E55               	movlw	85
  3491  001584  6E82               	movwf	3970,c	;volsfr
  3492                           
  3493                           ;memory.c: 178: NVMCON2 = 0xAA;
  3494  001586  0EAA               	movlw	170
  3495  001588  6E82               	movwf	3970,c	;volsfr
  3496                           
  3497                           ;memory.c: 179: NVMCON1bits.WR = 1;
  3498  00158A  8281               	bsf	3969,1,c	;volsfr
  3499  00158C                     
  3500                           ;memory.c: 182: {
  3501  00158C  B281               	btfsc	3969,1,c	;volsfr
  3502  00158E  D7FE               	goto	l240
  3503                           
  3504                           ;memory.c: 183: }
  3505                           ;memory.c: 185: NVMCON1bits.WREN = 0;
  3506  001590  9481               	bcf	3969,2,c	;volsfr
  3507                           
  3508                           ;memory.c: 186: INTCONbits.GIE = GIEBitValue;
  3509  001592  B016               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
  3510  001594  D002               	bra	u835
  3511  001596  9EF2               	bcf	intcon,7,c	;volatile
  3512  001598  D001               	bra	u836
  3513  00159A                     u835:
  3514  00159A  8EF2               	bsf	intcon,7,c	;volatile
  3515  00159C                     u836:
  3516  00159C  0012               	return		;funcret
  3517  00159E                     __end_of_DATAEE_WriteByte:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           intcon	equ	0xFF2
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           indf2	equ	0xFDF
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function _DATAEE_ReadByte *****************
  3534 ;; Defined at:
  3535 ;;		line 189 in file "mcc_generated_files/memory.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  bAdd            2   18[COMRAM] unsigned int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      unsigned char 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3553 ;;Total ram usage:        2 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    2
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_credit_add
  3560 ;;		_credit_subtract
  3561 ;;		_credit_check
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text28
  3566  0016E8                     __ptext28:
  3567                           	opt stack 0
  3568  0016E8                     _DATAEE_ReadByte:
  3569                           	opt stack 26
  3570                           
  3571                           ;memory.c: 191: NVMADRH = ((bAdd >> 8) & 0x03);
  3572                           
  3573                           ;incstack = 0
  3574  0016E8  5014               	movf	DATAEE_ReadByte@bAdd+1,w,c
  3575  0016EA  0B03               	andlw	3
  3576  0016EC  6E7F               	movwf	3967,c	;volatile
  3577                           
  3578                           ;memory.c: 192: NVMADRL = (bAdd & 0xFF);
  3579  0016EE  C013  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  3580                           
  3581                           ;memory.c: 193: NVMCON1bits.NVMREG = 0;
  3582  0016F2  0E3F               	movlw	-193
  3583  0016F4  1681               	andwf	3969,f,c	;volsfr
  3584                           
  3585                           ;memory.c: 194: NVMCON1bits.RD = 1;
  3586  0016F6  8081               	bsf	3969,0,c	;volsfr
  3587                           
  3588                           ;memory.c: 195: __nop();
  3589  0016F8  F000               	nop	
  3590                           
  3591                           ;memory.c: 196: __nop();
  3592  0016FA  F000               	nop	
  3593                           
  3594                           ;memory.c: 198: return (NVMDAT);
  3595  0016FC  5080               	movf	3968,w,c	;volatile
  3596  0016FE  0012               	return	
  3597  001700                     __end_of_DATAEE_ReadByte:
  3598                           	opt stack 0
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           intcon	equ	0xFF2
  3606                           postinc0	equ	0xFEE
  3607                           wreg	equ	0xFE8
  3608                           indf2	equ	0xFDF
  3609                           fsr2h	equ	0xFDA
  3610                           fsr2l	equ	0xFD9
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function _SYSTEM_Initialize *****************
  3614 ;; Defined at:
  3615 ;;		line 115 in file "mcc_generated_files/mcc.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3633 ;;Total ram usage:        0 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    4
  3636 ;; This function calls:
  3637 ;;		_CMP1_Initialize
  3638 ;;		_EUSART1_Initialize
  3639 ;;		_EUSART2_Initialize
  3640 ;;		_FVR_Initialize
  3641 ;;		_INTERRUPT_Initialize
  3642 ;;		_OSCILLATOR_Initialize
  3643 ;;		_PIN_MANAGER_Initialize
  3644 ;;		_TMR1_Initialize
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text29
  3651  0016AC                     __ptext29:
  3652                           	opt stack 0
  3653  0016AC                     _SYSTEM_Initialize:
  3654                           	opt stack 26
  3655                           
  3656                           ;mcc.c: 118: INTERRUPT_Initialize();
  3657                           
  3658                           ;incstack = 0
  3659  0016AC  ECCD  F00B         	call	_INTERRUPT_Initialize	;wreg free
  3660                           
  3661                           ;mcc.c: 119: PIN_MANAGER_Initialize();
  3662  0016B0  EC86  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  3663                           
  3664                           ;mcc.c: 120: OSCILLATOR_Initialize();
  3665  0016B4  EC80  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  3666                           
  3667                           ;mcc.c: 121: FVR_Initialize();
  3668  0016B8  ECD1  F00B         	call	_FVR_Initialize	;wreg free
  3669                           
  3670                           ;mcc.c: 122: CMP1_Initialize();
  3671  0016BC  ECAE  F00B         	call	_CMP1_Initialize	;wreg free
  3672                           
  3673                           ;mcc.c: 123: TMR1_Initialize();
  3674  0016C0  ECCF  F00A         	call	_TMR1_Initialize	;wreg free
  3675                           
  3676                           ;mcc.c: 124: EUSART1_Initialize();
  3677  0016C4  ECA3  F00B         	call	_EUSART1_Initialize	;wreg free
  3678                           
  3679                           ;mcc.c: 125: EUSART2_Initialize();
  3680  0016C8  EC8C  F00B         	call	_EUSART2_Initialize	;wreg free
  3681  0016CC  0012               	return		;funcret
  3682  0016CE                     __end_of_SYSTEM_Initialize:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           indf2	equ	0xFDF
  3694                           fsr2h	equ	0xFDA
  3695                           fsr2l	equ	0xFD9
  3696                           status	equ	0xFD8
  3697                           
  3698 ;; *************** function _TMR1_Initialize *****************
  3699 ;; Defined at:
  3700 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;Total ram usage:        2 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    3
  3721 ;; This function calls:
  3722 ;;		_TMR1_StartTimer
  3723 ;; This function is called by:
  3724 ;;		_SYSTEM_Initialize
  3725 ;;		_mdb_poll
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text30
  3730  00159E                     __ptext30:
  3731                           	opt stack 0
  3732  00159E                     _TMR1_Initialize:
  3733                           	opt stack 24
  3734                           
  3735                           ;tmr1.c: 67: T1CON = 0x00;
  3736                           
  3737                           ;incstack = 0
  3738  00159E  0E00               	movlw	0
  3739  0015A0  6ECF               	movwf	4047,c	;volatile
  3740                           
  3741                           ;tmr1.c: 70: T1GCON = 0x00;
  3742  0015A2  0E00               	movlw	0
  3743  0015A4  6ED0               	movwf	4048,c	;volatile
  3744                           
  3745                           ;tmr1.c: 73: T1GATE = 0x00;
  3746  0015A6  0E00               	movlw	0
  3747  0015A8  6ED1               	movwf	4049,c	;volatile
  3748                           
  3749                           ;tmr1.c: 76: T1CLK = 0x05;
  3750  0015AA  0E05               	movlw	5
  3751  0015AC  6ED2               	movwf	4050,c	;volatile
  3752                           
  3753                           ;tmr1.c: 79: TMR1H = 0xF6;
  3754  0015AE  0EF6               	movlw	246
  3755  0015B0  6ECE               	movwf	4046,c	;volatile
  3756                           
  3757                           ;tmr1.c: 82: TMR1L = 0x3C;
  3758  0015B2  0E3C               	movlw	60
  3759  0015B4  6ECD               	movwf	4045,c	;volatile
  3760                           
  3761                           ;tmr1.c: 85: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3762  0015B6  50CD               	movf	4045,w,c	;volatile
  3763  0015B8  CFCE F013          	movff	4046,??_TMR1_Initialize	;volatile
  3764  0015BC  6A14               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  3765  0015BE  C013  F014         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  3766  0015C2  6A13               	clrf	??_TMR1_Initialize,c
  3767  0015C4  1013               	iorwf	??_TMR1_Initialize,w,c
  3768  0015C6  6E3F               	movwf	_timer1ReloadVal,c	;volatile
  3769  0015C8  5014               	movf	??_TMR1_Initialize+1,w,c
  3770  0015CA  6E40               	movwf	_timer1ReloadVal+1,c	;volatile
  3771                           
  3772                           ;tmr1.c: 88: PIR4bits.TMR1IF = 0;
  3773  0015CC  010E               	movlb	14	; () banked
  3774  0015CE  91CE               	bcf	206,0,b	;volatile
  3775                           
  3776                           ; BSR set to: 14
  3777                           ;tmr1.c: 91: TMR1_StartTimer();
  3778  0015D0  ECE7  F00B         	call	_TMR1_StartTimer	;wreg free
  3779  0015D4  0012               	return		;funcret
  3780  0015D6                     __end_of_TMR1_Initialize:
  3781                           	opt stack 0
  3782                           tblptru	equ	0xFF8
  3783                           tblptrh	equ	0xFF7
  3784                           tblptrl	equ	0xFF6
  3785                           tablat	equ	0xFF5
  3786                           prodh	equ	0xFF4
  3787                           prodl	equ	0xFF3
  3788                           intcon	equ	0xFF2
  3789                           postinc0	equ	0xFEE
  3790                           wreg	equ	0xFE8
  3791                           indf2	equ	0xFDF
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8
  3795                           
  3796 ;; *************** function _TMR1_StartTimer *****************
  3797 ;; Defined at:
  3798 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		None
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    2
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_TMR1_Initialize
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text31
  3827  0017CE                     __ptext31:
  3828                           	opt stack 0
  3829  0017CE                     _TMR1_StartTimer:
  3830                           	opt stack 24
  3831                           
  3832                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3833                           
  3834                           ;incstack = 0
  3835  0017CE  80CF               	bsf	4047,0,c	;volatile
  3836  0017D0  0012               	return		;funcret
  3837  0017D2                     __end_of_TMR1_StartTimer:
  3838                           	opt stack 0
  3839                           tblptru	equ	0xFF8
  3840                           tblptrh	equ	0xFF7
  3841                           tblptrl	equ	0xFF6
  3842                           tablat	equ	0xFF5
  3843                           prodh	equ	0xFF4
  3844                           prodl	equ	0xFF3
  3845                           intcon	equ	0xFF2
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           indf2	equ	0xFDF
  3849                           fsr2h	equ	0xFDA
  3850                           fsr2l	equ	0xFD9
  3851                           status	equ	0xFD8
  3852                           
  3853 ;; *************** function _PIN_MANAGER_Initialize *****************
  3854 ;; Defined at:
  3855 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  state           1   18[COMRAM] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;Total ram usage:        1 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    2
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_SYSTEM_Initialize
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text32
  3884  00110C                     __ptext32:
  3885                           	opt stack 0
  3886  00110C                     _PIN_MANAGER_Initialize:
  3887                           	opt stack 27
  3888                           
  3889                           ;pin_manager.c: 57: LATE = 0x00;
  3890                           
  3891                           ;incstack = 0
  3892  00110C  0E00               	movlw	0
  3893  00110E  6E87               	movwf	3975,c	;volatile
  3894                           
  3895                           ;pin_manager.c: 58: LATD = 0x00;
  3896  001110  0E00               	movlw	0
  3897  001112  6E86               	movwf	3974,c	;volatile
  3898                           
  3899                           ;pin_manager.c: 59: LATA = 0x00;
  3900  001114  0E00               	movlw	0
  3901  001116  6E83               	movwf	3971,c	;volatile
  3902                           
  3903                           ;pin_manager.c: 60: LATB = 0x00;
  3904  001118  0E00               	movlw	0
  3905  00111A  6E84               	movwf	3972,c	;volatile
  3906                           
  3907                           ;pin_manager.c: 61: LATC = 0x40;
  3908  00111C  0E40               	movlw	64
  3909  00111E  6E85               	movwf	3973,c	;volatile
  3910                           
  3911                           ;pin_manager.c: 66: TRISE = 0x00;
  3912  001120  0E00               	movlw	0
  3913  001122  6E8C               	movwf	3980,c	;volatile
  3914                           
  3915                           ;pin_manager.c: 67: TRISA = 0x1F;
  3916  001124  0E1F               	movlw	31
  3917  001126  6E88               	movwf	3976,c	;volatile
  3918                           
  3919                           ;pin_manager.c: 68: TRISB = 0xD0;
  3920  001128  0ED0               	movlw	208
  3921  00112A  6E89               	movwf	3977,c	;volatile
  3922                           
  3923                           ;pin_manager.c: 69: TRISC = 0x80;
  3924  00112C  0E80               	movlw	128
  3925  00112E  6E8A               	movwf	3978,c	;volatile
  3926                           
  3927                           ;pin_manager.c: 70: TRISD = 0x00;
  3928  001130  0E00               	movlw	0
  3929  001132  6E8B               	movwf	3979,c	;volatile
  3930                           
  3931                           ;pin_manager.c: 75: ANSELC = 0x00;
  3932  001134  0E00               	movlw	0
  3933  001136  010F               	movlb	15	; () banked
  3934  001138  6F21               	movwf	33,b	;volatile
  3935                           
  3936                           ;pin_manager.c: 76: ANSELB = 0xC0;
  3937  00113A  0EC0               	movlw	192
  3938  00113C  6F19               	movwf	25,b	;volatile
  3939                           
  3940                           ;pin_manager.c: 77: ANSELD = 0x00;
  3941  00113E  0E00               	movlw	0
  3942  001140  6F26               	movwf	38,b	;volatile
  3943                           
  3944                           ;pin_manager.c: 78: ANSELE = 0x00;
  3945  001142  0E00               	movlw	0
  3946  001144  6F2E               	movwf	46,b	;volatile
  3947                           
  3948                           ;pin_manager.c: 79: ANSELA = 0x01;
  3949  001146  0E01               	movlw	1
  3950  001148  6F11               	movwf	17,b	;volatile
  3951                           
  3952                           ;pin_manager.c: 84: WPUD = 0x00;
  3953  00114A  0E00               	movlw	0
  3954  00114C  6F25               	movwf	37,b	;volatile
  3955                           
  3956                           ;pin_manager.c: 85: WPUE = 0x00;
  3957  00114E  0E00               	movlw	0
  3958  001150  6F2D               	movwf	45,b	;volatile
  3959                           
  3960                           ;pin_manager.c: 86: WPUB = 0x00;
  3961  001152  0E00               	movlw	0
  3962  001154  6F18               	movwf	24,b	;volatile
  3963                           
  3964                           ;pin_manager.c: 87: WPUA = 0x00;
  3965  001156  0E00               	movlw	0
  3966  001158  6F10               	movwf	16,b	;volatile
  3967                           
  3968                           ;pin_manager.c: 88: WPUC = 0x00;
  3969  00115A  0E00               	movlw	0
  3970  00115C  6F20               	movwf	32,b	;volatile
  3971                           
  3972                           ;pin_manager.c: 93: ODCONE = 0x00;
  3973  00115E  0E00               	movlw	0
  3974  001160  6F2C               	movwf	44,b	;volatile
  3975                           
  3976                           ;pin_manager.c: 94: ODCONA = 0x00;
  3977  001162  0E00               	movlw	0
  3978  001164  6F0F               	movwf	15,b	;volatile
  3979                           
  3980                           ;pin_manager.c: 95: ODCONB = 0x00;
  3981  001166  0E00               	movlw	0
  3982  001168  6F17               	movwf	23,b	;volatile
  3983                           
  3984                           ;pin_manager.c: 96: ODCONC = 0x00;
  3985  00116A  0E00               	movlw	0
  3986  00116C  6F1F               	movwf	31,b	;volatile
  3987                           
  3988                           ;pin_manager.c: 97: ODCOND = 0x00;
  3989  00116E  0E00               	movlw	0
  3990  001170  6F24               	movwf	36,b	;volatile
  3991                           
  3992                           ; BSR set to: 15
  3993                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
  3994  001172  010E               	movlb	14	; () banked
  3995  001174  89C2               	bsf	194,4,b	;volatile
  3996                           
  3997                           ;pin_manager.c: 106: bool state = (unsigned char)GIE;
  3998  001176  0E00               	movlw	0
  3999  001178  BEF2               	btfsc	intcon,7,c	;volatile
  4000  00117A  0E01               	movlw	1
  4001  00117C  6E13               	movwf	PIN_MANAGER_Initialize@state,c
  4002                           
  4003                           ; BSR set to: 14
  4004                           ;pin_manager.c: 107: GIE = 0;
  4005  00117E  9EF2               	bcf	intcon,7,c	;volatile
  4006                           
  4007                           ;pin_manager.c: 108: PPSLOCK = 0x55;
  4008  001180  0E55               	movlw	85
  4009  001182  6FA0               	movwf	160,b	;volsfr
  4010                           
  4011                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
  4012  001184  0EAA               	movlw	170
  4013  001186  6FA0               	movwf	160,b	;volsfr
  4014                           
  4015                           ; BSR set to: 14
  4016                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x00;
  4017  001188  91A0               	bcf	160,0,b	;volsfr
  4018                           
  4019                           ; BSR set to: 14
  4020                           ;pin_manager.c: 112: RX1PPSbits.RXPPS = 0x17;
  4021  00118A  81B5               	bsf	181,0,b	;volatile
  4022  00118C  83B5               	bsf	181,1,b	;volatile
  4023  00118E  85B5               	bsf	181,2,b	;volatile
  4024  001190  97B5               	bcf	181,3,b	;volatile
  4025  001192  89B5               	bsf	181,4,b	;volatile
  4026                           
  4027                           ;pin_manager.c: 113: RC6PPS = 0x09;
  4028  001194  0E09               	movlw	9
  4029  001196  6FFD               	movwf	253,b	;volatile
  4030                           
  4031                           ;pin_manager.c: 114: RB5PPS = 0x0B;
  4032  001198  0E0B               	movlw	11
  4033  00119A  6FF4               	movwf	244,b	;volatile
  4034                           
  4035                           ; BSR set to: 14
  4036                           ;pin_manager.c: 115: RX2PPSbits.RXPPS = 0x0C;
  4037  00119C  918D               	bcf	141,0,b	;volatile
  4038  00119E  938D               	bcf	141,1,b	;volatile
  4039  0011A0  858D               	bsf	141,2,b	;volatile
  4040  0011A2  878D               	bsf	141,3,b	;volatile
  4041  0011A4  998D               	bcf	141,4,b	;volatile
  4042                           
  4043                           ;pin_manager.c: 117: PPSLOCK = 0x55;
  4044  0011A6  0E55               	movlw	85
  4045  0011A8  6FA0               	movwf	160,b	;volsfr
  4046                           
  4047                           ;pin_manager.c: 118: PPSLOCK = 0xAA;
  4048  0011AA  0EAA               	movlw	170
  4049  0011AC  6FA0               	movwf	160,b	;volsfr
  4050                           
  4051                           ; BSR set to: 14
  4052                           ;pin_manager.c: 119: PPSLOCKbits.PPSLOCKED = 0x01;
  4053  0011AE  81A0               	bsf	160,0,b	;volsfr
  4054                           
  4055                           ; BSR set to: 14
  4056                           ;pin_manager.c: 121: GIE = state;
  4057  0011B0  A013               	btfss	PIN_MANAGER_Initialize@state,0,c
  4058  0011B2  D002               	goto	u260
  4059  0011B4  8EF2               	bsf	intcon,7,c	;volatile
  4060  0011B6  0012               	return	
  4061  0011B8                     u260:
  4062  0011B8  9EF2               	bcf	intcon,7,c	;volatile
  4063  0011BA  0012               	return		;funcret
  4064  0011BC                     __end_of_PIN_MANAGER_Initialize:
  4065                           	opt stack 0
  4066                           tblptru	equ	0xFF8
  4067                           tblptrh	equ	0xFF7
  4068                           tblptrl	equ	0xFF6
  4069                           tablat	equ	0xFF5
  4070                           prodh	equ	0xFF4
  4071                           prodl	equ	0xFF3
  4072                           intcon	equ	0xFF2
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           indf2	equ	0xFDF
  4076                           fsr2h	equ	0xFDA
  4077                           fsr2l	equ	0xFD9
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function _OSCILLATOR_Initialize *****************
  4081 ;; Defined at:
  4082 ;;		line 128 in file "mcc_generated_files/mcc.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    2
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_SYSTEM_Initialize
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text33
  4111  001700                     __ptext33:
  4112                           	opt stack 0
  4113  001700                     _OSCILLATOR_Initialize:
  4114                           	opt stack 27
  4115                           
  4116                           ;mcc.c: 131: OSCCON1 = 0x60;
  4117                           
  4118                           ;incstack = 0
  4119  001700  0E60               	movlw	96
  4120  001702  010E               	movlb	14	; () banked
  4121  001704  6FD8               	movwf	216,b	;volatile
  4122                           
  4123                           ;mcc.c: 133: OSCCON3 = 0x00;
  4124  001706  0E00               	movlw	0
  4125  001708  6FDA               	movwf	218,b	;volatile
  4126                           
  4127                           ;mcc.c: 135: OSCEN = 0x00;
  4128  00170A  0E00               	movlw	0
  4129  00170C  6FDC               	movwf	220,b	;volatile
  4130                           
  4131                           ;mcc.c: 137: OSCFRQ = 0x03;
  4132  00170E  0E03               	movlw	3
  4133  001710  6FDE               	movwf	222,b	;volatile
  4134                           
  4135                           ;mcc.c: 139: OSCTUNE = 0x00;
  4136  001712  0E00               	movlw	0
  4137  001714  6FDD               	movwf	221,b	;volatile
  4138                           
  4139                           ; BSR set to: 14
  4140  001716  0012               	return		;funcret
  4141  001718                     __end_of_OSCILLATOR_Initialize:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           intcon	equ	0xFF2
  4150                           postinc0	equ	0xFEE
  4151                           wreg	equ	0xFE8
  4152                           indf2	equ	0xFDF
  4153                           fsr2h	equ	0xFDA
  4154                           fsr2l	equ	0xFD9
  4155                           status	equ	0xFD8
  4156                           
  4157 ;; *************** function _INTERRUPT_Initialize *****************
  4158 ;; Defined at:
  4159 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		None
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    2
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_SYSTEM_Initialize
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text34
  4188  00179A                     __ptext34:
  4189                           	opt stack 0
  4190  00179A                     _INTERRUPT_Initialize:
  4191                           	opt stack 27
  4192                           
  4193                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
  4194                           
  4195                           ; BSR set to: 14
  4196                           ;incstack = 0
  4197  00179A  8AF2               	bsf	intcon,5,c	;volatile
  4198                           
  4199                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
  4200  00179C  010E               	movlb	14	; () banked
  4201  00179E  89BA               	bsf	186,4,b	;volatile
  4202                           
  4203                           ; BSR set to: 14
  4204  0017A0  0012               	return		;funcret
  4205  0017A2                     __end_of_INTERRUPT_Initialize:
  4206                           	opt stack 0
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           intcon	equ	0xFF2
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           indf2	equ	0xFDF
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _FVR_Initialize *****************
  4222 ;; Defined at:
  4223 ;;		line 57 in file "mcc_generated_files/fvr.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    2
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_SYSTEM_Initialize
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text35
  4252  0017A2                     __ptext35:
  4253                           	opt stack 0
  4254  0017A2                     _FVR_Initialize:
  4255                           	opt stack 27
  4256                           
  4257                           ;fvr.c: 60: FVRCON = 0x8C;
  4258                           
  4259                           ; BSR set to: 14
  4260                           ;incstack = 0
  4261  0017A2  0E8C               	movlw	140
  4262  0017A4  010F               	movlb	15	; () banked
  4263  0017A6  6F31               	movwf	49,b	;volatile
  4264                           
  4265                           ; BSR set to: 15
  4266  0017A8  0012               	return		;funcret
  4267  0017AA                     __end_of_FVR_Initialize:
  4268                           	opt stack 0
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodh	equ	0xFF4
  4274                           prodl	equ	0xFF3
  4275                           intcon	equ	0xFF2
  4276                           postinc0	equ	0xFEE
  4277                           wreg	equ	0xFE8
  4278                           indf2	equ	0xFDF
  4279                           fsr2h	equ	0xFDA
  4280                           fsr2l	equ	0xFD9
  4281                           status	equ	0xFD8
  4282                           
  4283 ;; *************** function _EUSART2_Initialize *****************
  4284 ;; Defined at:
  4285 ;;		line 55 in file "mcc_generated_files/eusart2.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    2
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_SYSTEM_Initialize
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text36
  4314  001718                     __ptext36:
  4315                           	opt stack 0
  4316  001718                     _EUSART2_Initialize:
  4317                           	opt stack 27
  4318                           
  4319                           ;eusart2.c: 60: BAUD2CON = 0x08;
  4320                           
  4321                           ; BSR set to: 15
  4322                           ;incstack = 0
  4323  001718  0E08               	movlw	8
  4324  00171A  010E               	movlb	14	; () banked
  4325  00171C  6F9F               	movwf	159,b	;volatile
  4326                           
  4327                           ;eusart2.c: 63: RC2STA = 0x10;
  4328  00171E  0E10               	movlw	16
  4329  001720  6F9D               	movwf	157,b	;volatile
  4330                           
  4331                           ;eusart2.c: 66: TX2STA = 0x04;
  4332  001722  0E04               	movlw	4
  4333  001724  6F9E               	movwf	158,b	;volatile
  4334                           
  4335                           ;eusart2.c: 69: SP2BRGL = 0xCF;
  4336  001726  0ECF               	movlw	207
  4337  001728  6F9B               	movwf	155,b	;volatile
  4338                           
  4339                           ;eusart2.c: 72: SP2BRGH = 0x00;
  4340  00172A  0E00               	movlw	0
  4341  00172C  6F9C               	movwf	156,b	;volatile
  4342                           
  4343                           ; BSR set to: 14
  4344  00172E  0012               	return		;funcret
  4345  001730                     __end_of_EUSART2_Initialize:
  4346                           	opt stack 0
  4347                           tblptru	equ	0xFF8
  4348                           tblptrh	equ	0xFF7
  4349                           tblptrl	equ	0xFF6
  4350                           tablat	equ	0xFF5
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           intcon	equ	0xFF2
  4354                           postinc0	equ	0xFEE
  4355                           wreg	equ	0xFE8
  4356                           indf2	equ	0xFDF
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function _EUSART1_Initialize *****************
  4362 ;; Defined at:
  4363 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    2
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_SYSTEM_Initialize
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text37
  4392  001746                     __ptext37:
  4393                           	opt stack 0
  4394  001746                     _EUSART1_Initialize:
  4395                           	opt stack 27
  4396                           
  4397                           ;eusart1.c: 60: BAUD1CON = 0x08;
  4398                           
  4399                           ; BSR set to: 14
  4400                           ;incstack = 0
  4401  001746  0E08               	movlw	8
  4402  001748  6E9F               	movwf	3999,c	;volatile
  4403                           
  4404                           ;eusart1.c: 63: RC1STA = 0xD0;
  4405  00174A  0ED0               	movlw	208
  4406  00174C  6E9D               	movwf	3997,c	;volatile
  4407                           
  4408                           ;eusart1.c: 66: TX1STA = 0xEC;
  4409  00174E  0EEC               	movlw	236
  4410  001750  6E9E               	movwf	3998,c	;volatile
  4411                           
  4412                           ;eusart1.c: 69: SP1BRGL = 0xCF;
  4413  001752  0ECF               	movlw	207
  4414  001754  6E9B               	movwf	3995,c	;volatile
  4415                           
  4416                           ;eusart1.c: 72: SP1BRGH = 0x00;
  4417  001756  0E00               	movlw	0
  4418  001758  6E9C               	movwf	3996,c	;volatile
  4419  00175A  0012               	return		;funcret
  4420  00175C                     __end_of_EUSART1_Initialize:
  4421                           	opt stack 0
  4422                           tblptru	equ	0xFF8
  4423                           tblptrh	equ	0xFF7
  4424                           tblptrl	equ	0xFF6
  4425                           tablat	equ	0xFF5
  4426                           prodh	equ	0xFF4
  4427                           prodl	equ	0xFF3
  4428                           intcon	equ	0xFF2
  4429                           postinc0	equ	0xFEE
  4430                           wreg	equ	0xFE8
  4431                           indf2	equ	0xFDF
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _CMP1_Initialize *****************
  4437 ;; Defined at:
  4438 ;;		line 56 in file "mcc_generated_files/cmp1.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    2
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_SYSTEM_Initialize
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text38
  4467  00175C                     __ptext38:
  4468                           	opt stack 0
  4469  00175C                     _CMP1_Initialize:
  4470                           	opt stack 27
  4471                           
  4472                           ;cmp1.c: 61: CM1CON0 = 0x84;
  4473                           
  4474                           ;incstack = 0
  4475  00175C  0E84               	movlw	132
  4476  00175E  010F               	movlb	15	; () banked
  4477  001760  6F39               	movwf	57,b	;volatile
  4478                           
  4479                           ;cmp1.c: 64: CM1CON1 = 0x00;
  4480  001762  0E00               	movlw	0
  4481  001764  6F3A               	movwf	58,b	;volatile
  4482                           
  4483                           ;cmp1.c: 67: CM1NCH = 0x00;
  4484  001766  0E00               	movlw	0
  4485  001768  6F3B               	movwf	59,b	;volatile
  4486                           
  4487                           ;cmp1.c: 70: CM1PCH = 0x06;
  4488  00176A  0E06               	movlw	6
  4489  00176C  6F3C               	movwf	60,b	;volatile
  4490                           
  4491                           ; BSR set to: 15
  4492  00176E  0012               	return		;funcret
  4493  001770                     __end_of_CMP1_Initialize:
  4494                           	opt stack 0
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           prodh	equ	0xFF4
  4500                           prodl	equ	0xFF3
  4501                           intcon	equ	0xFF2
  4502                           postinc0	equ	0xFEE
  4503                           wreg	equ	0xFE8
  4504                           indf2	equ	0xFDF
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  4510 ;; Defined at:
  4511 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4527 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4528 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;Total ram usage:       18 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    1
  4532 ;; This function calls:
  4533 ;;		_PIN_MANAGER_IOC
  4534 ;; This function is called by:
  4535 ;;		Interrupt level 2
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	intcode
  4540  000008                     __pintcode:
  4541                           	opt stack 0
  4542  000008                     _INTERRUPT_InterruptManagerHigh:
  4543                           	opt stack 23
  4544                           
  4545                           ; BSR set to: 15
  4546                           ;incstack = 0
  4547  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4548  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  4549  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  4550  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  4551  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  4552  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  4553  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  4554  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  4555  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  4556  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  4557  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  4558  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  4559  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  4560  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  4561  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  4562  000042  C043  F00F         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  4563  000046  C044  F010         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  4564  00004A  C045  F011         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  4565  00004E  C046  F012         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  4566                           
  4567                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
  4568  000052  010E               	movlb	14	; () banked
  4569  000054  B9C2               	btfsc	194,4,b	;volatile
  4570                           
  4571                           ; BSR set to: 14
  4572  000056  A9CA               	btfss	202,4,b	;volatile
  4573  000058  D002               	goto	i2l184
  4574                           
  4575                           ; BSR set to: 14
  4576                           ;interrupt_manager.c: 68: {
  4577                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
  4578  00005A  ECE4  F00B         	call	_PIN_MANAGER_IOC	;wreg free
  4579  00005E                     i2l184:
  4580                           
  4581                           ;interrupt_manager.c: 71: else
  4582                           ;interrupt_manager.c: 72: {
  4583  00005E  C012  F046         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  4584  000062  C011  F045         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  4585  000066  C010  F044         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  4586  00006A  C00F  F043         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  4587  00006E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  4588  000072  C00D  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  4589  000076  C00C  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  4590  00007A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  4591  00007E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  4592  000082  C009  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  4593  000086  C008  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  4594  00008A  C007  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  4595  00008E  C006  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  4596  000092  C005  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  4597  000096  C004  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  4598  00009A  C003  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  4599  00009E  C002  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  4600  0000A2  C001  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  4601  0000A6  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4602  0000A8  0011               	retfie		f
  4603  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
  4604                           	opt stack 0
  4605                           pclatu	equ	0xFFB
  4606                           pclath	equ	0xFFA
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           postinc0	equ	0xFEE
  4615                           fsr0h	equ	0xFEA
  4616                           fsr0l	equ	0xFE9
  4617                           wreg	equ	0xFE8
  4618                           fsr1h	equ	0xFE2
  4619                           fsr1l	equ	0xFE1
  4620                           indf2	equ	0xFDF
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _PIN_MANAGER_IOC *****************
  4626 ;; Defined at:
  4627 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		None
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_INTERRUPT_InterruptManagerHigh
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text40
  4655  0017C8                     __ptext40:
  4656                           	opt stack 0
  4657  0017C8                     _PIN_MANAGER_IOC:
  4658                           	opt stack 23
  4659                           
  4660                           ;pin_manager.c: 128: PIR0bits.IOCIF = 0;
  4661                           
  4662                           ;incstack = 0
  4663  0017C8  010E               	movlb	14	; () banked
  4664  0017CA  99CA               	bcf	202,4,b	;volatile
  4665                           
  4666                           ; BSR set to: 14
  4667  0017CC  0012               	return		;funcret
  4668  0017CE                     __end_of_PIN_MANAGER_IOC:
  4669                           	opt stack 0
  4670                           pclatu	equ	0xFFB
  4671                           pclath	equ	0xFFA
  4672                           tblptru	equ	0xFF8
  4673                           tblptrh	equ	0xFF7
  4674                           tblptrl	equ	0xFF6
  4675                           tablat	equ	0xFF5
  4676                           prodh	equ	0xFF4
  4677                           prodl	equ	0xFF3
  4678                           intcon	equ	0xFF2
  4679                           postinc0	equ	0xFEE
  4680                           fsr0h	equ	0xFEA
  4681                           fsr0l	equ	0xFE9
  4682                           wreg	equ	0xFE8
  4683                           fsr1h	equ	0xFE2
  4684                           fsr1l	equ	0xFE1
  4685                           indf2	equ	0xFDF
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           pclatu	equ	0xFFB
  4690                           pclath	equ	0xFFA
  4691                           tblptru	equ	0xFF8
  4692                           tblptrh	equ	0xFF7
  4693                           tblptrl	equ	0xFF6
  4694                           tablat	equ	0xFF5
  4695                           prodh	equ	0xFF4
  4696                           prodl	equ	0xFF3
  4697                           intcon	equ	0xFF2
  4698                           postinc0	equ	0xFEE
  4699                           fsr0h	equ	0xFEA
  4700                           fsr0l	equ	0xFE9
  4701                           wreg	equ	0xFE8
  4702                           fsr1h	equ	0xFE2
  4703                           fsr1l	equ	0xFE1
  4704                           indf2	equ	0xFDF
  4705                           fsr2h	equ	0xFDA
  4706                           fsr2l	equ	0xFD9
  4707                           status	equ	0xFD8
  4708                           
  4709                           	psect	rparam
  4710  0000                     pclatu	equ	0xFFB
  4711                           pclath	equ	0xFFA
  4712                           tblptru	equ	0xFF8
  4713                           tblptrh	equ	0xFF7
  4714                           tblptrl	equ	0xFF6
  4715                           tablat	equ	0xFF5
  4716                           prodh	equ	0xFF4
  4717                           prodl	equ	0xFF3
  4718                           intcon	equ	0xFF2
  4719                           postinc0	equ	0xFEE
  4720                           fsr0h	equ	0xFEA
  4721                           fsr0l	equ	0xFE9
  4722                           wreg	equ	0xFE8
  4723                           fsr1h	equ	0xFE2
  4724                           fsr1l	equ	0xFE1
  4725                           indf2	equ	0xFDF
  4726                           fsr2h	equ	0xFDA
  4727                           fsr2l	equ	0xFD9
  4728                           status	equ	0xFD8
  4729                           
  4730                           	psect	temp
  4731  000043                     btemp:
  4732                           	opt stack 0
  4733  000043                     	ds	1
  4734  0000                     int$flags	set	btemp
  4735  0000                     wtemp6	set	btemp+1
  4736                           pclatu	equ	0xFFB
  4737                           pclath	equ	0xFFA
  4738                           tblptru	equ	0xFF8
  4739                           tblptrh	equ	0xFF7
  4740                           tblptrl	equ	0xFF6
  4741                           tablat	equ	0xFF5
  4742                           prodh	equ	0xFF4
  4743                           prodl	equ	0xFF3
  4744                           intcon	equ	0xFF2
  4745                           postinc0	equ	0xFEE
  4746                           fsr0h	equ	0xFEA
  4747                           fsr0l	equ	0xFE9
  4748                           wreg	equ	0xFE8
  4749                           fsr1h	equ	0xFE2
  4750                           fsr1l	equ	0xFE1
  4751                           indf2	equ	0xFDF
  4752                           fsr2h	equ	0xFDA
  4753                           fsr2l	equ	0xFD9
  4754                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        1
    BSS         50
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      66
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 22
		 -> credits(CODE[13]), inscoin(CODE[22]), 


Critical Paths under _main in COMRAM

    _main->_displ_credit
    _vend_init->_mdb_reset
    _mdb_reset->_mdb_poll
    _mdb_noten->_mdb_poll
    _mdb_poll->_TMR1_Initialize
    _mdb_poll->_init_mdbdata
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_DATAEE_WriteByte
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6661
                  _SYSTEM_Initialize
                         _credit_add
                    _credit_subtract
                       _displ_credit
                           _lcd_init
                         _lcd_string
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            1     1      0    2780
                                             26 COMRAM     1     1      0
                       _credit_check
                          _mdb_noten
                           _mdb_poll
                          _mdb_reset
 ---------------------------------------------------------------------------------
 (2) _mdb_reset                                            3     3      0     827
                                             23 COMRAM     3     3      0
                           _mdb_poll
 ---------------------------------------------------------------------------------
 (2) _mdb_noten                                            0     0      0     885
                       _init_mdbdata
                           _mdb_poll
 ---------------------------------------------------------------------------------
 (3) _mdb_poll                                             3     2      1     795
                                             20 COMRAM     3     2      1
                       _EUSART1_Read
                      _EUSART1_Write
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                          _mdb_waitr
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (4) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _init_mdbdata                                         2     2      0      90
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     255
                                             25 COMRAM     1     1      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     180
                                             24 COMRAM     1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0    1809
                                             43 COMRAM     1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     2      2     428
                                             24 COMRAM     4     2      2
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _displ_hex                                           15    12      3    1086
                                             28 COMRAM    15    12      3
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _lcd_writeC                                           2     2      0     135
                                             22 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            2     2      0      75
                                             20 COMRAM     2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (4) _read_busy                                            2     2      0      30
                                             18 COMRAM     2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (5) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___ltmod                                              7     1      6     311
                                             18 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) ___ltdiv                                             10     4      6     314
                                             18 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0     272
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _credit_subtract                                      1     1      0     687
                                             22 COMRAM     1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _credit_add                                           1     1      0     687
                                             22 COMRAM     1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     393
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     272
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _CMP1_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (4) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (5) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManagerHigh                      18    18      0       0
                                              0 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CMP1_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _credit_subtract
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _vend_init
     _credit_check
       _DATAEE_ReadByte
     _mdb_noten
       _init_mdbdata
       _mdb_poll
         _EUSART1_Read
         _EUSART1_Write
         _TMR1_Initialize
           _TMR1_StartTimer
         _init_mdbdata
         _mdb_on
         _mdb_waitr
         _mdb_waitx
     _mdb_poll
       _EUSART1_Read
       _EUSART1_Write
       _TMR1_Initialize
         _TMR1_StartTimer
       _init_mdbdata
       _mdb_on
       _mdb_waitr
       _mdb_waitx
     _mdb_reset
       _mdb_poll
         _EUSART1_Read
         _EUSART1_Write
         _TMR1_Initialize
           _TMR1_StartTimer
         _init_mdbdata
         _mdb_on
         _mdb_waitr
         _mdb_waitx

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      42       1       70.2%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62       6        0.0%
DATA                 0      0      62       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Oct 30 15:04:47 2017

                       lcd_writeC@lcdata 0018                              __CFG_CP$OFF 000000  
                      ??_CMP1_Initialize 0013                            ?_displ_credit 0001  
                 __end_of_FVR_Initialize 17AA                          lcd_write@lcdata 0016  
                            __CFG_LVP$ON 000000                                      LATE 000F87  
                                    l111 177E                                      l240 158C  
                                    l611 1660                                      l605 1216  
                                    l445 14FA                                      l606 11CE  
                                    l622 1734                                      l446 150E  
                                    l447 1520                                      l616 15E2  
                                    l802 129C                                      l811 0FAE  
                                    l803 12A0                                      l812 0F7A  
                                    l815 0FD8                                      l824 1054  
                                    l816 100A                                      l817 0FE0  
                                    l595 10CA                                      l771 155C  
                                    l596 106E                                      l598 10F0  
                                    l599 10D6                                      l797 1672  
                                    _GIE 007F97                                      u260 11B8  
                                    u370 12E0                             __CFG_CPD$OFF 000000  
                                    u700 1014                                      u800 13B0  
                                    u720 101E                                      u670 0FB4  
                                    u735 1028                                      u737 102A  
                                    u770 1352                                      u835 159A  
                                    u836 159C                                      u685 1002  
                                    u687 1004                                      u967 12D4  
                                    u977 12E2                          _timer1ReloadVal 003F  
                                    prod 000FF3                                      wreg 000FE8  
                         ??_credit_check 0015                     lcd_writeC@lcdatasave 0017  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                                   l1234 134E                                     l1235 1344  
                                   l1244 13AC                                     l1245 13A2  
                                   l1238 1378                                     l1239 1384  
                                   l1248 13CC                                     l1249 13D8  
                                   l2153 166A                                     l2139 1784  
                                   l1859 12C0                                     _LATA 000F83  
                                   _LATB 000F84                                     _LATC 000F85  
                                   _LATD 000F86                                     _LATE 000F87  
                                   _WPUA 000F10                                     _WPUB 000F18  
                                   _WPUC 000F20                                     _WPUD 000F25  
                                   _WPUE 000F2D                            _EUSART1_Write 1782  
                          __CFG_FCMEN$ON 000000                                     _cash 0035  
                                   _main 14EE                            ?_EUSART1_Read 0001  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 0043  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 00AA                            __CFG_CSWEN$ON 000000  
                           ___param_bank 000000                            __CFG_SCANE$ON 000000  
                         ??_displ_credit 002C                __size_of_DATAEE_WriteByte 003A  
                        ?_FVR_Initialize 0001           __size_of_OSCILLATOR_Initialize 0018  
          __end_of_OSCILLATOR_Initialize 1718                                    ?_main 0001  
                          __CFG_WDTE$OFF 000000                          _TMR1_StartTimer 17CE  
                                  _T1CLK 000FD2                                    _T1CON 000FCF  
                        __end_of___ltdiv 1392                           __CFG_DEBUG$OFF 000000  
                        __end_of___ltmod 13E6                                    i2l184 005E  
                                  _OSCEN 000EDC                                    _TMR1H 000FCE  
                                  _TMR1L 000FCD                                    _PORTD 000F90  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                          __end_of_cashint 0F09  
                        __end_of_cashinv 0F0B                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                           __CFG_EBTR0$OFF 000000  
                      lcd_write@savelatd 0015                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                         __CFG_EBTR4$OFF 000000                          __end_of_credmem 0F0D  
                         __CFG_EBTR5$OFF 000000                          __end_of_credits 0F51  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                        __end_of_dispclr 0F2B                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                          __end_of_dispoff 0F24  
                          __CFG_WRTD$OFF 000000                                    _bflag 003A  
                        _DATAEE_ReadByte 16E8                           __CFG_EBTRB$OFF 000000  
                __end_of_PIN_MANAGER_IOC 17CE                          __end_of_dsphome 0F29  
                                  _count 0041                          __end_of_inscoin 0F44  
                     __CFG_MCLRE$EXTMCLR 000000                           ?_EUSART1_Write 0001  
                __end_of_TMR1_Initialize 15D6                                    pclath 000FFA  
                                  tablat 000FF5                           ??_EUSART1_Read 0013  
                                  status 000FD8                                    wtemp6 0044  
                        __initialization 14B2               __end_of_EUSART1_Initialize 175C  
                           __end_of_main 152A                                   ??_main 002D  
                          __activetblptr 000001               __end_of_EUSART2_Initialize 1730  
                                 _CM1NCH 000F3B                                   _CM1PCH 000F3C  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                                   _T1GATE 000FD1  
                                 _T1GCON 000FD0                                   _RC1REG 000F99  
                                 _RC2REG 000E99                                   _RC1STA 000F9D  
                                 _RC2STA 000E9D                                   _RB5PPS 000EF4  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _RC6PPS 000EFD  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
               __size_of_credit_subtract 0046                         credit_add@credit 0017  
                         __CFG_WDTCCS$SC 000000                                   _TABLAT 000FF5  
                                 _FVRCON 000F31                            ?_init_mdbdata 0001  
                                 _OSCFRQ 000EDE                                   _NVMDAT 000F80  
                                 _TX1REG 000F9A                                   _TX2REG 000E9A  
                                 _TX1STA 000F9E                                   _TX2STA 000E9E  
                         __CFG_PWRTE$OFF 000000                           __CFG_XINST$OFF 000000  
                       __end_of_dispaddr 0F2A                         __end_of_lcd_init 1328  
                       __end_of_lcd_test 1746                         __end_of_mdb_poll 105C  
                   __end_of_credit_check 16E8                  __end_of_TMR1_StartTimer 17D2  
                         __CFG_STVREN$ON 000000                                ??___ltdiv 0019  
                        mdb_reset@i_1458 0019                                ??___ltmod 0019  
                                 _credit 0036                                   _lcdata 0038  
                                 _dispon 0F2B                                   _mdb_on 17B6  
                                 _dispsl 0F21                                   _dispsr 0F22  
                                 _hexnum 002D                                   _mcount 0033  
                                 clear_0 14CA                                   clear_1 14D6  
                                 _noteen 003C                                   _slvadd 0034  
                                 _stradd 0037                        read_busy@savelatd 0014  
                      read_busy@savelate 0013                  __end_of_DATAEE_ReadByte 1700  
                           __pdataCOMRAM 0042                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                          ??_EUSART1_Write 0013  
                       ?_PIN_MANAGER_IOC 0001            __size_of_INTERRUPT_Initialize 0008  
                         ??_init_mdbdata 0013                     __end_of_displ_credit 16AC  
                       ?_TMR1_Initialize 0001         ??_INTERRUPT_InterruptManagerHigh 0001  
        ?_INTERRUPT_InterruptManagerHigh 0001                        _SYSTEM_Initialize 16AC  
                             __accesstop 0060                  __end_of__initialization 14DC  
                  __end_of_note_features 0F1A                          _CMP1_Initialize 175C  
                     ?_SYSTEM_Initialize 0001                    __end_of_theft_attempt 0F0E  
                          ___rparam_used 000001                           __pcstackCOMRAM 0001  
                    ??_SYSTEM_Initialize 0015                         _DATAEE_WriteByte 1564  
                  __end_of_note_rejected 0F0F                    __end_of_note_security 0F1F  
                   __end_of_EUSART1_Read 1782                       __size_of_displ_hex 00B0  
                     __size_of_lcd_write 0032                __end_of_SYSTEM_Initialize 16CE  
                     __size_of_mdb_reset 0076                       __size_of_mdb_noten 0030  
                     __size_of_mdb_waitr 0006                       __size_of_mdb_waitx 0006  
                             __pbssBANK0 0060                      displ_hex@hexnumsave 0028  
                             __pnvCOMRAM 003F                       __size_of_read_busy 0042  
                      ??_credit_subtract 0017                         ??_FVR_Initialize 0013  
                       ?_TMR1_StartTimer 0001                          __CFG_PPS1WAY$ON 000000  
                                ?_mdb_on 0001                                  _CM1CON0 000F39  
                                _CM1CON1 000F3A                         ?_DATAEE_ReadByte 0013  
                     __size_of_vend_init 003A                               _credit_add 142C  
                             _lcd_clockE 1790                               _lcd_clockH 17C2  
                             _lcd_clockL 17BC                                  _SP1BRGH 000F9C  
                                _SP1BRGL 000F9B                                  _SP2BRGH 000E9C  
                                _SP2BRGL 000E9B                                  _OSCCON1 000ED8  
                                _OSCCON3 000EDA                                  _TBLPTRH 000FF7  
                                _TBLPTRL 000FF6                                  _TBLPTRU 000FF8  
                                _NVMADRH 000F7F                                  _NVMADRL 000F7E  
                             _jammed_err 0F14                                  _OSCTUNE 000EDD  
                                _NVMCON2 000F82                                  _PPSLOCK 000EA0  
                __end_of_CMP1_Initialize 1770                               _lcd_string 11BC  
                             _dispcursor 0F26                               _lcd_writeC 1638  
                              ?_lcd_init 0001                                ?_lcd_test 0001  
                             _dispshleft 0F24                               _dispnormal 0F27  
                              ?_mdb_poll 0015                     DATAEE_WriteByte@bAdd 0013  
                         displ_hex@value 0020                    __size_of_credit_check 001A  
                                __Hparam 0000                                  __Lparam 0000  
             __CFG_RSTOSC$HFINTOSC_64MHZ 000000                        __end_of_displ_hex 110C  
                      __end_of_dispfunc1 0F2E                        __end_of_dispfunc2 0F2D  
                      __end_of_lcd_write 1608                                  ___ltdiv 1328  
                      __end_of_mdb_reset 12B4                        __end_of_mdb_noten 1638  
                                ___ltmod 1392                        __end_of_mdb_waitr 17B6  
                      __end_of_mdb_waitx 17B0                             __psmallconst 0F00  
                        __size_of_mdb_on 0006                                  _dbcount 0030  
                                __pcinit 14B2                                  _cashint 0F07  
                   __end_of_init_mdbdata 168A                                  _cashinv 0F09  
                                __ramtop 0F00                                  _chkbyte 0032  
                             _errorflags 003B                                  __ptext0 14EE  
                                __ptext1 152A                                  __ptext2 123E  
                                __ptext3 1608                                  __ptext4 0F52  
                                __ptext5 17AA                                  __ptext6 17B0  
                                __ptext7 17B6                                  __ptext8 1664  
                                __ptext9 1782                                  _credmem 0F0B  
                                _credits 0F44                                  _dispclr 0F2A  
                                _dispoff 0F23                                  _mdbdata 0060  
                                _lcdfunc 0039                                _T1CONbits 000FCF  
                                _dsphome 0F28                    _OSCILLATOR_Initialize 1700  
                                _inscoin 0F2E                                _CMOUTbits 000F3D  
                      __end_of_read_busy 14B2                       _EUSART1_Initialize 1746  
               ??_PIN_MANAGER_Initialize 0013                    __size_of_displ_credit 0022  
             __size_of_SYSTEM_Initialize 0022                             _credit_check 16CE  
                             ??_lcd_init 001A                               ??_lcd_test 0019  
                   end_of_initialization 14DC                               ??_mdb_poll 0016  
                    ?_EUSART1_Initialize 0001                        __end_of_note_poll 0F1E  
                      __end_of_note_type 0F1D                        __end_of_just_busy 0F17  
                      __end_of_vend_init 1564                         ___ltdiv@dividend 0013  
                      __end_of_rom_error 0F16                       _EUSART2_Initialize 1718  
                      __end_of_vendstore 0F07                               _note_reset 0F20  
                             _sens_error 0F17                               _note_setup 0F1F  
                                postinc0 000FEE                    __size_of_EUSART1_Read 0012  
                             _motr_error 0F18                               _just_reset 0F13  
                   ??_EUSART1_Initialize 0013                               _pricestore 0F03  
                  __CFG_WDTCPS$WDTCPS_31 000000                      ?_EUSART2_Initialize 0001  
                           _displ_credit 168A                               _venderrors 0F01  
                            ?_credit_add 0001                              ?_lcd_clockE 0001  
                            ?_lcd_clockH 0001                              ?_lcd_clockL 0001  
                       ___ltdiv@quotient 0019                              ?_lcd_string 0019  
                            ?_lcd_writeC 0001                      EUSART1_Write@txData 0013  
                       ?_CMP1_Initialize 0001                         __CFG_FEXTOSC$OFF 000000  
               __end_of_DATAEE_WriteByte 159E                     ??_EUSART2_Initialize 0013  
                           _EUSART1_Read 1770                      __end_of_cashbox_err 0F12  
                             displ_hex@i 002B                               mdb_reset@i 001A  
           __end_of_INTERRUPT_Initialize 17A2                            __pidataCOMRAM 17D2  
                         __end_of_dispon 0F2C                           __end_of_mdb_on 17BC  
                         __end_of_dispsl 0F22                           __end_of_dispsr 0F23  
                       displ_credit@cash 002C                   ?_OSCILLATOR_Initialize 0001  
                    start_initialization 14B2          __size_of_PIN_MANAGER_Initialize 00B0  
                        _credit_subtract 13E6                    __end_of_EUSART1_Write 1790  
                    DATAEE_ReadByte@bAdd 0013                 __size_of_PIN_MANAGER_IOC 0006  
                    __size_of_credit_add 0044                         __CFG_LPBOREN$OFF 000000  
                    __size_of_lcd_clockE 000A                      __size_of_lcd_clockH 0006  
                    __size_of_lcd_clockL 0006                 __size_of_TMR1_Initialize 0038  
                  __size_of_init_mdbdata 0026                                 ??_mdb_on 0013  
                    __size_of_lcd_string 0082                      __size_of_lcd_writeC 002C  
                         mdb_poll@mcount 0015                           mdb_poll@slvadd 0016  
                            __pbssCOMRAM 002D                      __end_of_dispshright 0F26  
                            _cashbox_err 0F11                     __end_of_note_removed 0F13  
                  credit_subtract@credit 0017                     __end_of_note_stacker 0F1B  
                   init_mdbdata@initdata 0013                             _init_mdbdata 1664  
                      __size_of_lcd_init 0074                        __size_of_lcd_test 0016  
                      __size_of_mdb_poll 010A                   _PIN_MANAGER_Initialize 110C  
                              __pintcode 0008                                 ?___ltdiv 0013  
                               ?___ltmod 0013                                _displ_hex 105C  
                              _dispfunc1 0F2D                                _dispfunc2 0F2C  
                              _lcd_write 15D6                                _mdb_reset 123E  
                              _mdb_noten 1608                                _mdb_waitr 17B0  
                              _mdb_waitx 17AA                                 _BAUD1CON 000F9F  
                               _BAUD2CON 000E9F                              __smallconst 0F00  
                __end_of_credit_subtract 142C                 __size_of_TMR1_StartTimer 0004  
                         _acept_disabled 0F10                 __size_of_DATAEE_ReadByte 0018  
                              _read_busy 1470                     _INTERRUPT_Initialize 179A  
                       ___ltmod@dividend 0013                                 _LATCbits 000F85  
                               _IPR0bits 000EBA                                 _PIE0bits 000EC2  
                          _note_features 0F19                      __CFG_BORV$VBOR_2P45 000000  
                          _theft_attempt 0F0D                                 _PIR0bits 000ECA  
                        ___ltdiv@divisor 0016                                 _PIR3bits 000ECD  
                               _PIR4bits 000ECE                                 _PIR7bits 000ED1  
                        ___ltdiv@counter 001C                                _note_poll 0F1D  
                              _note_type 0F1C                                _just_busy 0F16  
                              _vend_init 152A                               vend_init@i 001B  
                              _rom_error 0F15                        ??_PIN_MANAGER_IOC 0001  
                              _vendstore 0F05                            _note_rejected 0F0E  
                      ??_TMR1_Initialize 0013                               ?_displ_hex 001D  
                             ?_lcd_write 0001                            _note_security 0F1E  
                             ?_mdb_reset 0001                               ?_mdb_noten 0001  
                            _dispshright 0F25                               ?_mdb_waitr 0001  
                             ?_mdb_waitx 0001                  __size_of_FVR_Initialize 0008  
                           ??_credit_add 0017                             ??_lcd_clockE 0013  
                           ??_lcd_clockH 0013                             ??_lcd_clockL 0013  
                 __end_of_acept_disabled 0F11                    DATAEE_WriteByte@bData 0015  
                              mdb_poll@i 0017                          displ_hex@hexnum 001D  
                           ??_lcd_string 001B                             ??_lcd_writeC 0017  
                             ?_read_busy 0001                    ?_INTERRUPT_Initialize 0001  
                      ?_DATAEE_WriteByte 0013                       ??_DATAEE_WriteByte 0016  
                    lcd_string@lcdstring 0019                                 __Hrparam 0000  
                               __Lrparam 0000                       __end_of_credit_add 1470  
                           __Lsmallconst 0F00                       __CFG_BOREN$SBORDIS 000000  
                     __end_of_lcd_clockE 179A                       __end_of_lcd_clockH 17C8  
                     __end_of_lcd_clockL 17C2                               ?_vend_init 0001  
                ??_OSCILLATOR_Initialize 0013                       __end_of_jammed_err 0F15  
            __size_of_EUSART1_Initialize 0016                         __size_of___ltdiv 006A  
                       __size_of___ltmod 0054                       __end_of_lcd_string 123E  
                     __end_of_dispcursor 0F27                       __end_of_lcd_writeC 1664  
                         _invalid_escrow 0F0F                      __end_of_note_escrow 0F1C  
                     __end_of_dispshleft 0F25                       __end_of_dispnormal 0F28  
                       ?_credit_subtract 0001                                 __ptext10 1770  
                               __ptext11 12B4                                 __ptext20 17C2  
                               __ptext12 1730                                 __ptext21 1790  
                               __ptext13 168A                               _T1GCONbits 000FD0  
                               __ptext30 159E                                 __ptext22 1392  
                               __ptext14 11BC                                 __ptext31 17CE  
                               __ptext23 1328                                 __ptext15 105C  
                               __ptext40 17C8                                 __ptext32 110C  
                               __ptext24 16CE                                 __ptext16 1638  
                               __ptext33 1700                                 __ptext25 13E6  
                               __ptext17 15D6                                 __ptext34 179A  
                               __ptext26 142C                                 __ptext18 1470  
                               __ptext35 17A2                                 __ptext27 1564  
                               __ptext19 17BC                                 __ptext36 1718  
                               __ptext28 16E8                                 __ptext37 1746  
                               __ptext29 16AC                                 __ptext38 175C  
                               _dispaddr 0F29                                 _lcd_init 12B4  
                               _lcd_test 1730                        ??_TMR1_StartTimer 0013  
                               _mdb_poll 0F52                                 _mdbflags 003D  
            DATAEE_WriteByte@GIEBitValue 0016              __size_of_EUSART2_Initialize 0018  
                          __size_of_main 003C                          ___ltmod@divisor 0016  
                      ??_DATAEE_ReadByte 0015                     __CFG_WDTCWS$WDTCWS_7 000000  
               __size_of_CMP1_Initialize 0014                          ___ltmod@counter 0019  
                             _RC1STAbits 000F9D                               _RC2STAbits 000E9D  
                               _venflags 003E                            init_mdbdata@i 0014  
                               int$flags 0043                   __end_of_invalid_escrow 0F10  
                           _note_removed 0F12                             _note_stacker 0F1A  
                            ??_displ_hex 0020              PIN_MANAGER_Initialize@state 0013  
                            ??_lcd_write 0015                              ??_mdb_reset 0018  
                            ??_mdb_noten 0018                              ??_mdb_waitr 0013  
                            ??_mdb_waitx 0013                               _INTCONbits 000FF2  
                            _NVMCON1bits 000F81                               _FVRCONbits 000F31  
                 ??_INTERRUPT_Initialize 0013                              ??_read_busy 0013  
                     __end_of_note_reset 0F21                       __end_of_sens_error 0F18  
                     __end_of_note_setup 0F20                                 intlevel2 0000  
                     __end_of_motr_error 0F19                       __end_of_just_reset 0F14  
                ?_PIN_MANAGER_Initialize 0001                       __end_of_pricestore 0F05  
                      __CFG_CLKOUTEN$OFF 000000                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors 0F03                              _note_escrow 0F1B  
                            ??_vend_init 001B                              _noteen_byte 0042  
                 __size_of_EUSART1_Write 000E   __end_of_INTERRUPT_InterruptManagerHigh 00AA  
__size_of_INTERRUPT_InterruptManagerHigh 00A2           _INTERRUPT_InterruptManagerHigh 0008  
                             _RX1PPSbits 000EB5                           _FVR_Initialize 17A2  
                             _RX2PPSbits 000E8D                        lcd_test@character 0019  
                          ?_credit_check 0001                               _TX1STAbits 000F9E  
         __end_of_PIN_MANAGER_Initialize 11BC                          _PIN_MANAGER_IOC 17C8  
                        _TMR1_Initialize 159E  
