

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Mar 24 13:15:22 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataCOMRAMh,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113                           	dabs	1,0x3,1,_chanlink1
   114                           	dabs	1,0xA,1,_chanlink8
   115                           	dabs	1,0x9,1,_chanlink7
   116                           	dabs	1,0x8,1,_chanlink6
   117                           	dabs	1,0x7,1,_chanlink5
   118                           	dabs	1,0x6,1,_chanlink4
   119                           	dabs	1,0x5,1,_chanlink3
   120                           	dabs	1,0x4,1,_chanlink2
   121  0000                     
   122                           ; Version 1.44
   123                           ; Generated 14/09/2017 GMT
   124                           ; 
   125                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   126                           ; All rights reserved.
   127                           ; 
   128                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   129                           ; 
   130                           ; Redistribution and use in source and binary forms, with or without modification, are
   131                           ; permitted provided that the following conditions are met:
   132                           ; 
   133                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   134                           ;        conditions and the following disclaimer.
   135                           ; 
   136                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   137                           ;        of conditions and the following disclaimer in the documentation and/or other
   138                           ;        materials provided with the distribution.
   139                           ; 
   140                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   141                           ;        software without specific prior written permission.
   142                           ; 
   143                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   144                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   145                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   146                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   147                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   148                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   149                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   150                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   151                           ; 
   152                           ; 
   153                           ; Code-generator required, PIC18F47K40 Definitions
   154                           ; 
   155                           ; SFR Addresses
   156  0000                     
   157                           	psect	idataBANK0
   158  012014                     __pidataBANK0:
   159                           	opt stack 0
   160                           
   161                           ;initializer for _hopercount
   162  012014  03                 	db	3
   163                           
   164                           	psect	idataCOMRAMh
   165  012015                     __pidataCOMRAMh:
   166                           	opt stack 0
   167                           
   168                           ;initializer for _notenum
   169  012015  FF                 	db	255
   170                           
   171                           	psect	mediumconst
   172  00FAAC                     __pmediumconst:
   173                           	opt stack 0
   174  00FAAC  00                 	db	0
   175  00FAAD                     _chanlinkmsg:
   176                           	opt stack 0
   177  00FAAD  50                 	db	80
   178  00FAAE  75                 	db	117
   179  00FAAF  73                 	db	115
   180  00FAB0  68                 	db	104
   181  00FAB1  20                 	db	32
   182  00FAB2  42                 	db	66
   183  00FAB3  75                 	db	117
   184  00FAB4  74                 	db	116
   185  00FAB5  74                 	db	116
   186  00FAB6  6F                 	db	111
   187  00FAB7  6E                 	db	110
   188  00FAB8  20                 	db	32
   189  00FAB9  74                 	db	116
   190  00FABA  6F                 	db	111
   191  00FABB  20                 	db	32
   192  00FABC  4C                 	db	76
   193  00FABD  69                 	db	105
   194  00FABE  6E                 	db	110
   195  00FABF  6B                 	db	107
   196  00FAC0  20                 	db	32
   197  00FAC1  50                 	db	80
   198  00FAC2  75                 	db	117
   199  00FAC3  73                 	db	115
   200  00FAC4  68                 	db	104
   201  00FAC5  20                 	db	32
   202  00FAC6  61                 	db	97
   203  00FAC7  67                 	db	103
   204  00FAC8  61                 	db	97
   205  00FAC9  69                 	db	105
   206  00FACA  6E                 	db	110
   207  00FACB  20                 	db	32
   208  00FACC  74                 	db	116
   209  00FACD  6F                 	db	111
   210  00FACE  20                 	db	32
   211  00FACF  55                 	db	85
   212  00FAD0  6E                 	db	110
   213  00FAD1  6C                 	db	108
   214  00FAD2  69                 	db	105
   215  00FAD3  6E                 	db	110
   216  00FAD4  6B                 	db	107
   217  00FAD5  50                 	db	80
   218  00FAD6  75                 	db	117
   219  00FAD7  73                 	db	115
   220  00FAD8  68                 	db	104
   221  00FAD9  20                 	db	32
   222  00FADA  53                 	db	83
   223  00FADB  65                 	db	101
   224  00FADC  72                 	db	114
   225  00FADD  76                 	db	118
   226  00FADE  69                 	db	105
   227  00FADF  63                 	db	99
   228  00FAE0  65                 	db	101
   229  00FAE1  20                 	db	32
   230  00FAE2  74                 	db	116
   231  00FAE3  6F                 	db	111
   232  00FAE4  20                 	db	32
   233  00FAE5  45                 	db	69
   234  00FAE6  78                 	db	120
   235  00FAE7  69                 	db	105
   236  00FAE8  74                 	db	116
   237  00FAE9  00                 	db	0
   238  00FAEA                     __end_of_chanlinkmsg:
   239                           	opt stack 0
   240  00FAEA                     _motimemsg:
   241                           	opt stack 0
   242  00FAEA  20                 	db	32
   243  00FAEB  50                 	db	80
   244  00FAEC  72                 	db	114
   245  00FAED  65                 	db	101
   246  00FAEE  73                 	db	115
   247  00FAEF  73                 	db	115
   248  00FAF0  20                 	db	32
   249  00FAF1  43                 	db	67
   250  00FAF2  68                 	db	104
   251  00FAF3  61                 	db	97
   252  00FAF4  6E                 	db	110
   253  00FAF5  6E                 	db	110
   254  00FAF6  65                 	db	101
   255  00FAF7  6C                 	db	108
   256  00FAF8  20                 	db	32
   257  00FAF9  56                 	db	86
   258  00FAFA  65                 	db	101
   259  00FAFB  6E                 	db	110
   260  00FAFC  64                 	db	100
   261  00FAFD  20                 	db	32
   262  00FAFE  42                 	db	66
   263  00FAFF  75                 	db	117
   264  00FB00  74                 	db	116
   265  00FB01  74                 	db	116
   266  00FB02  6F                 	db	111
   267  00FB03  6E                 	db	110
   268  00FB04  20                 	db	32
   269  00FB05  6F                 	db	111
   270  00FB06  72                 	db	114
   271  00FB07  20                 	db	32
   272  00FB08  50                 	db	80
   273  00FB09  72                 	db	114
   274  00FB0A  65                 	db	101
   275  00FB0B  73                 	db	115
   276  00FB0C  73                 	db	115
   277  00FB0D  20                 	db	32
   278  00FB0E  20                 	db	32
   279  00FB0F  20                 	db	32
   280  00FB10  20                 	db	32
   281  00FB11  20                 	db	32
   282  00FB12  20                 	db	32
   283  00FB13  20                 	db	32
   284  00FB14  53                 	db	83
   285  00FB15  65                 	db	101
   286  00FB16  72                 	db	114
   287  00FB17  76                 	db	118
   288  00FB18  69                 	db	105
   289  00FB19  63                 	db	99
   290  00FB1A  65                 	db	101
   291  00FB1B  20                 	db	32
   292  00FB1C  74                 	db	116
   293  00FB1D  6F                 	db	111
   294  00FB1E  20                 	db	32
   295  00FB1F  45                 	db	69
   296  00FB20  78                 	db	120
   297  00FB21  69                 	db	105
   298  00FB22  74                 	db	116
   299  00FB23  00                 	db	0
   300  00FB24                     __end_of_motimemsg:
   301                           	opt stack 0
   302  00FB24                     _sensoffms:
   303                           	opt stack 0
   304  00FB24  48                 	db	72
   305  00FB25  6F                 	db	111
   306  00FB26  6C                 	db	108
   307  00FB27  64                 	db	100
   308  00FB28  20                 	db	32
   309  00FB29  63                 	db	99
   310  00FB2A  68                 	db	104
   311  00FB2B  61                 	db	97
   312  00FB2C  6E                 	db	110
   313  00FB2D  6E                 	db	110
   314  00FB2E  65                 	db	101
   315  00FB2F  6C                 	db	108
   316  00FB30  20                 	db	32
   317  00FB31  62                 	db	98
   318  00FB32  75                 	db	117
   319  00FB33  74                 	db	116
   320  00FB34  74                 	db	116
   321  00FB35  6F                 	db	111
   322  00FB36  6E                 	db	110
   323  00FB37  20                 	db	32
   324  00FB38  6F                 	db	111
   325  00FB39  72                 	db	114
   326  00FB3A  20                 	db	32
   327  00FB3B  50                 	db	80
   328  00FB3C  75                 	db	117
   329  00FB3D  73                 	db	115
   330  00FB3E  68                 	db	104
   331  00FB3F  20                 	db	32
   332  00FB40  73                 	db	115
   333  00FB41  65                 	db	101
   334  00FB42  72                 	db	114
   335  00FB43  76                 	db	118
   336  00FB44  69                 	db	105
   337  00FB45  63                 	db	99
   338  00FB46  65                 	db	101
   339  00FB47  20                 	db	32
   340  00FB48  74                 	db	116
   341  00FB49  6F                 	db	111
   342  00FB4A  20                 	db	32
   343  00FB4B  20                 	db	32
   344  00FB4C  65                 	db	101
   345  00FB4D  78                 	db	120
   346  00FB4E  69                 	db	105
   347  00FB4F  74                 	db	116
   348  00FB50  00                 	db	0
   349  00FB51                     __end_of_sensoffms:
   350                           	opt stack 0
   351  00FB51                     _credclr:
   352                           	opt stack 0
   353  00FB51  50                 	db	80
   354  00FB52  75                 	db	117
   355  00FB53  73                 	db	115
   356  00FB54  68                 	db	104
   357  00FB55  20                 	db	32
   358  00FB56  62                 	db	98
   359  00FB57  75                 	db	117
   360  00FB58  74                 	db	116
   361  00FB59  74                 	db	116
   362  00FB5A  6F                 	db	111
   363  00FB5B  6E                 	db	110
   364  00FB5C  20                 	db	32
   365  00FB5D  31                 	db	49
   366  00FB5E  20                 	db	32
   367  00FB5F  74                 	db	116
   368  00FB60  6F                 	db	111
   369  00FB61  20                 	db	32
   370  00FB62  63                 	db	99
   371  00FB63  6C                 	db	108
   372  00FB64  65                 	db	101
   373  00FB65  61                 	db	97
   374  00FB66  72                 	db	114
   375  00FB67  20                 	db	32
   376  00FB68  63                 	db	99
   377  00FB69  72                 	db	114
   378  00FB6A  65                 	db	101
   379  00FB6B  64                 	db	100
   380  00FB6C  69                 	db	105
   381  00FB6D  74                 	db	116
   382  00FB6E  73                 	db	115
   383  00FB6F  20                 	db	32
   384  00FB70  20                 	db	32
   385  00FB71  20                 	db	32
   386  00FB72  61                 	db	97
   387  00FB73  6E                 	db	110
   388  00FB74  64                 	db	100
   389  00FB75  20                 	db	32
   390  00FB76  65                 	db	101
   391  00FB77  78                 	db	120
   392  00FB78  69                 	db	105
   393  00FB79  74                 	db	116
   394  00FB7A  00                 	db	0
   395  00FB7B                     __end_of_credclr:
   396                           	opt stack 0
   397  00FB7B                     _settimemsg:
   398                           	opt stack 0
   399  00FB7B  50                 	db	80
   400  00FB7C  72                 	db	114
   401  00FB7D  65                 	db	101
   402  00FB7E  73                 	db	115
   403  00FB7F  73                 	db	115
   404  00FB80  20                 	db	32
   405  00FB81  31                 	db	49
   406  00FB82  20                 	db	32
   407  00FB83  3D                 	db	61
   408  00FB84  20                 	db	32
   409  00FB85  2B                 	db	43
   410  00FB86  20                 	db	32
   411  00FB87  6F                 	db	111
   412  00FB88  72                 	db	114
   413  00FB89  20                 	db	32
   414  00FB8A  32                 	db	50
   415  00FB8B  20                 	db	32
   416  00FB8C  3D                 	db	61
   417  00FB8D  20                 	db	32
   418  00FB8E  2D                 	db	45
   419  00FB8F  20                 	db	32
   420  00FB90  20                 	db	32
   421  00FB91  50                 	db	80
   422  00FB92  72                 	db	114
   423  00FB93  65                 	db	101
   424  00FB94  73                 	db	115
   425  00FB95  73                 	db	115
   426  00FB96  20                 	db	32
   427  00FB97  38                 	db	56
   428  00FB98  20                 	db	32
   429  00FB99  74                 	db	116
   430  00FB9A  6F                 	db	111
   431  00FB9B  20                 	db	32
   432  00FB9C  45                 	db	69
   433  00FB9D  78                 	db	120
   434  00FB9E  69                 	db	105
   435  00FB9F  74                 	db	116
   436  00FBA0  00                 	db	0
   437  00FBA1                     __end_of_settimemsg:
   438                           	opt stack 0
   439  00FBA1                     _vendtest:
   440                           	opt stack 0
   441  00FBA1  20                 	db	32
   442  00FBA2  50                 	db	80
   443  00FBA3  75                 	db	117
   444  00FBA4  73                 	db	115
   445  00FBA5  68                 	db	104
   446  00FBA6  20                 	db	32
   447  00FBA7  62                 	db	98
   448  00FBA8  75                 	db	117
   449  00FBA9  74                 	db	116
   450  00FBAA  74                 	db	116
   451  00FBAB  6F                 	db	111
   452  00FBAC  6E                 	db	110
   453  00FBAD  20                 	db	32
   454  00FBAE  74                 	db	116
   455  00FBAF  6F                 	db	111
   456  00FBB0  20                 	db	32
   457  00FBB1  20                 	db	32
   458  00FBB2  20                 	db	32
   459  00FBB3  20                 	db	32
   460  00FBB4  20                 	db	32
   461  00FBB5  76                 	db	118
   462  00FBB6  65                 	db	101
   463  00FBB7  6E                 	db	110
   464  00FBB8  64                 	db	100
   465  00FBB9  00                 	db	0
   466  00FBBA                     __end_of_vendtest:
   467                           	opt stack 0
   468  00FBBA                     _priceexit:
   469                           	opt stack 0
   470  00FBBA  50                 	db	80
   471  00FBBB  72                 	db	114
   472  00FBBC  65                 	db	101
   473  00FBBD  73                 	db	115
   474  00FBBE  73                 	db	115
   475  00FBBF  20                 	db	32
   476  00FBC0  73                 	db	115
   477  00FBC1  65                 	db	101
   478  00FBC2  72                 	db	114
   479  00FBC3  76                 	db	118
   480  00FBC4  69                 	db	105
   481  00FBC5  63                 	db	99
   482  00FBC6  65                 	db	101
   483  00FBC7  20                 	db	32
   484  00FBC8  74                 	db	116
   485  00FBC9  6F                 	db	111
   486  00FBCA  20                 	db	32
   487  00FBCB  65                 	db	101
   488  00FBCC  78                 	db	120
   489  00FBCD  69                 	db	105
   490  00FBCE  74                 	db	116
   491  00FBCF  00                 	db	0
   492  00FBD0                     __end_of_priceexit:
   493                           	opt stack 0
   494  00FBD0                     _inithop:
   495                           	opt stack 0
   496  00FBD0  20                 	db	32
   497  00FBD1  20                 	db	32
   498  00FBD2  49                 	db	73
   499  00FBD3  6E                 	db	110
   500  00FBD4  69                 	db	105
   501  00FBD5  74                 	db	116
   502  00FBD6  69                 	db	105
   503  00FBD7  61                 	db	97
   504  00FBD8  6C                 	db	108
   505  00FBD9  69                 	db	105
   506  00FBDA  7A                 	db	122
   507  00FBDB  65                 	db	101
   508  00FBDC  20                 	db	32
   509  00FBDD  48                 	db	72
   510  00FBDE  6F                 	db	111
   511  00FBDF  70                 	db	112
   512  00FBE0  70                 	db	112
   513  00FBE1  65                 	db	101
   514  00FBE2  72                 	db	114
   515  00FBE3  00                 	db	0
   516  00FBE4                     __end_of_inithop:
   517                           	opt stack 0
   518  00FBE4                     _nochange:
   519                           	opt stack 0
   520  00FBE4  4E                 	db	78
   521  00FBE5  6F                 	db	111
   522  00FBE6  20                 	db	32
   523  00FBE7  43                 	db	67
   524  00FBE8  68                 	db	104
   525  00FBE9  61                 	db	97
   526  00FBEA  6E                 	db	110
   527  00FBEB  67                 	db	103
   528  00FBEC  65                 	db	101
   529  00FBED  20                 	db	32
   530  00FBEE  47                 	db	71
   531  00FBEF  69                 	db	105
   532  00FBF0  76                 	db	118
   533  00FBF1  65                 	db	101
   534  00FBF2  6E                 	db	110
   535  00FBF3  00                 	db	0
   536  00FBF4                     __end_of_nochange:
   537                           	opt stack 0
   538  00FBF4                     _senset:
   539                           	opt stack 0
   540  00FBF4  20                 	db	32
   541  00FBF5  20                 	db	32
   542  00FBF6  53                 	db	83
   543  00FBF7  65                 	db	101
   544  00FBF8  74                 	db	116
   545  00FBF9  75                 	db	117
   546  00FBFA  70                 	db	112
   547  00FBFB  20                 	db	32
   548  00FBFC  53                 	db	83
   549  00FBFD  65                 	db	101
   550  00FBFE  6E                 	db	110
   551  00FBFF  73                 	db	115
   552  00FC00  6F                 	db	111
   553  00FC01  72                 	db	114
   554  00FC02  00                 	db	0
   555  00FC03                     __end_of_senset:
   556                           	opt stack 0
   557  00FC03                     _notetest:
   558                           	opt stack 0
   559  00FC03  20                 	db	32
   560  00FC04  20                 	db	32
   561  00FC05  49                 	db	73
   562  00FC06  6E                 	db	110
   563  00FC07  73                 	db	115
   564  00FC08  65                 	db	101
   565  00FC09  72                 	db	114
   566  00FC0A  74                 	db	116
   567  00FC0B  20                 	db	32
   568  00FC0C  4E                 	db	78
   569  00FC0D  6F                 	db	111
   570  00FC0E  74                 	db	116
   571  00FC0F  65                 	db	101
   572  00FC10  00                 	db	0
   573  00FC11                     __end_of_notetest:
   574                           	opt stack 0
   575  00FC11                     _auditmsg:
   576                           	opt stack 0
   577  00FC11  20                 	db	32
   578  00FC12  20                 	db	32
   579  00FC13  41                 	db	65
   580  00FC14  75                 	db	117
   581  00FC15  64                 	db	100
   582  00FC16  69                 	db	105
   583  00FC17  74                 	db	116
   584  00FC18  20                 	db	32
   585  00FC19  4D                 	db	77
   586  00FC1A  6F                 	db	111
   587  00FC1B  64                 	db	100
   588  00FC1C  65                 	db	101
   589  00FC1D  00                 	db	0
   590  00FC1E                     __end_of_auditmsg:
   591                           	opt stack 0
   592  00FC1E                     _pricemsg:
   593                           	opt stack 0
   594  00FC1E  50                 	db	80
   595  00FC1F  72                 	db	114
   596  00FC20  69                 	db	105
   597  00FC21  63                 	db	99
   598  00FC22  65                 	db	101
   599  00FC23  20                 	db	32
   600  00FC24  52                 	db	82
   601  00FC25  00                 	db	0
   602  00FC26                     __end_of_pricemsg:
   603                           	opt stack 0
   604  00FC26                     _exit:
   605                           	opt stack 0
   606  00FC26  45                 	db	69
   607  00FC27  78                 	db	120
   608  00FC28  69                 	db	105
   609  00FC29  74                 	db	116
   610  00FC2A  00                 	db	0
   611  00FC2B                     __end_of_exit:
   612                           	opt stack 0
   613  00FC2B                     _hoperror:
   614                           	opt stack 0
   615  00FC2B  002E               	dw	46
   616  00FC2D                     __end_of_hoperror:
   617                           	opt stack 0
   618  00FC2D                     _chan8time:
   619                           	opt stack 0
   620  00FC2D  002D               	dw	45
   621  00FC2F                     __end_of_chan8time:
   622                           	opt stack 0
   623  00FC2F                     _chan7time:
   624                           	opt stack 0
   625  00FC2F  002C               	dw	44
   626  00FC31                     __end_of_chan7time:
   627                           	opt stack 0
   628  00FC31                     _chan6time:
   629                           	opt stack 0
   630  00FC31  002B               	dw	43
   631  00FC33                     __end_of_chan6time:
   632                           	opt stack 0
   633  00FC33                     _chan5time:
   634                           	opt stack 0
   635  00FC33  002A               	dw	42
   636  00FC35                     __end_of_chan5time:
   637                           	opt stack 0
   638  00FC35                     _chan4time:
   639                           	opt stack 0
   640  00FC35  0029               	dw	41
   641  00FC37                     __end_of_chan4time:
   642                           	opt stack 0
   643  00FC37                     _chan3time:
   644                           	opt stack 0
   645  00FC37  0028               	dw	40
   646  00FC39                     __end_of_chan3time:
   647                           	opt stack 0
   648  00FC39                     _chan2time:
   649                           	opt stack 0
   650  00FC39  0027               	dw	39
   651  00FC3B                     __end_of_chan2time:
   652                           	opt stack 0
   653  00FC3B                     _chan1time:
   654                           	opt stack 0
   655  00FC3B  0026               	dw	38
   656  00FC3D                     __end_of_chan1time:
   657                           	opt stack 0
   658  00FC3D                     _sensorflags:
   659                           	opt stack 0
   660  00FC3D  0025               	dw	37
   661  00FC3F                     __end_of_sensorflags:
   662                           	opt stack 0
   663  00FC3F                     _chan8linkbits:
   664                           	opt stack 0
   665  00FC3F  0024               	dw	36
   666  00FC41                     __end_of_chan8linkbits:
   667                           	opt stack 0
   668  00FC41                     _chan7linkbits:
   669                           	opt stack 0
   670  00FC41  0023               	dw	35
   671  00FC43                     __end_of_chan7linkbits:
   672                           	opt stack 0
   673  00FC43                     _chan6linkbits:
   674                           	opt stack 0
   675  00FC43  0022               	dw	34
   676  00FC45                     __end_of_chan6linkbits:
   677                           	opt stack 0
   678  00FC45                     _chan5linkbits:
   679                           	opt stack 0
   680  00FC45  0021               	dw	33
   681  00FC47                     __end_of_chan5linkbits:
   682                           	opt stack 0
   683  00FC47                     _chan4linkbits:
   684                           	opt stack 0
   685  00FC47  0020               	dw	32
   686  00FC49                     __end_of_chan4linkbits:
   687                           	opt stack 0
   688  00FC49                     _chan3linkbits:
   689                           	opt stack 0
   690  00FC49  001F               	dw	31
   691  00FC4B                     __end_of_chan3linkbits:
   692                           	opt stack 0
   693  00FC4B                     _chan2linkbits:
   694                           	opt stack 0
   695  00FC4B  001E               	dw	30
   696  00FC4D                     __end_of_chan2linkbits:
   697                           	opt stack 0
   698  00FC4D                     _chan1linkbits:
   699                           	opt stack 0
   700  00FC4D  001D               	dw	29
   701  00FC4F                     __end_of_chan1linkbits:
   702                           	opt stack 0
   703  00FC4F                     _hopcoin:
   704                           	opt stack 0
   705  00FC4F  001C               	dw	28
   706  00FC51                     __end_of_hopcoin:
   707                           	opt stack 0
   708  00FC51                     _cashoutv:
   709                           	opt stack 0
   710  00FC51  001A               	dw	26
   711  00FC53                     __end_of_cashoutv:
   712                           	opt stack 0
   713  00FC53                     _sensval:
   714                           	opt stack 0
   715  00FC53  0019               	dw	25
   716  00FC55                     __end_of_sensval:
   717                           	opt stack 0
   718  00FC55                     _notebits:
   719                           	opt stack 0
   720  00FC55  0018               	dw	24
   721  00FC57                     __end_of_notebits:
   722                           	opt stack 0
   723  00FC57                     _venderrors:
   724                           	opt stack 0
   725  00FC57  0017               	dw	23
   726  00FC59                     __end_of_venderrors:
   727                           	opt stack 0
   728  00FC59                     _pricestore:
   729                           	opt stack 0
   730  00FC59  000F               	dw	15
   731  00FC5B                     __end_of_pricestore:
   732                           	opt stack 0
   733  00FC5B                     _vendstore:
   734                           	opt stack 0
   735  00FC5B  0007               	dw	7
   736  00FC5D                     __end_of_vendstore:
   737                           	opt stack 0
   738  00FC5D                     _cashint:
   739                           	opt stack 0
   740  00FC5D  0004               	dw	4
   741  00FC5F                     __end_of_cashint:
   742                           	opt stack 0
   743  00FC5F                     _cashinv:
   744                           	opt stack 0
   745  00FC5F  0002               	dw	2
   746  00FC61                     __end_of_cashinv:
   747                           	opt stack 0
   748  00FC61                     _credmem:
   749                           	opt stack 0
   750  00FC61  0000               	dw	0
   751  00FC63                     __end_of_credmem:
   752                           	opt stack 0
   753  00FC63                     _secondadd:
   754                           	opt stack 0
   755  00FC63  1E46               	dw	7750
   756  00FC65                     __end_of_secondadd:
   757                           	opt stack 0
   758  00FC65                     _second_5:
   759                           	opt stack 0
   760  00FC65  0F23               	dw	3875
   761  00FC67                     __end_of_second_5:
   762                           	opt stack 0
   763  00FC67                     _second1:
   764                           	opt stack 0
   765  00FC67  E1BA               	dw	57786
   766  00FC69                     __end_of_second1:
   767                           	opt stack 0
   768  00FC69                     _cc_poll:
   769                           	opt stack 0
   770  00FC69  FE                 	db	254
   771  00FC6A                     __end_of_cc_poll:
   772                           	opt stack 0
   773  00FC6A                     _cc_adpoll:
   774                           	opt stack 0
   775  00FC6A  FD                 	db	253
   776  00FC6B                     __end_of_cc_adpoll:
   777                           	opt stack 0
   778  00FC6B                     _cc_serial:
   779                           	opt stack 0
   780  00FC6B  F2                 	db	242
   781  00FC6C                     __end_of_cc_serial:
   782                           	opt stack 0
   783  00FC6C                     _cc_newpin:
   784                           	opt stack 0
   785  00FC6C  DB                 	db	219
   786  00FC6D                     __end_of_cc_newpin:
   787                           	opt stack 0
   788  00FC6D                     _cc_pin:
   789                           	opt stack 0
   790  00FC6D  DA                 	db	218
   791  00FC6E                     __end_of_cc_pin:
   792                           	opt stack 0
   793  00FC6E                     _cc_level:
   794                           	opt stack 0
   795  00FC6E  EC                 	db	236
   796  00FC6F                     __end_of_cc_level:
   797                           	opt stack 0
   798  00FC6F                     _cc_stop:
   799                           	opt stack 0
   800  00FC6F  AC                 	db	172
   801  00FC70                     __end_of_cc_stop:
   802                           	opt stack 0
   803  00FC70                     _cc_countrq:
   804                           	opt stack 0
   805  00FC70  A8                 	db	168
   806  00FC71                     __end_of_cc_countrq:
   807                           	opt stack 0
   808  00FC71                     _cc_pay:
   809                           	opt stack 0
   810  00FC71  A7                 	db	167
   811  00FC72                     __end_of_cc_pay:
   812                           	opt stack 0
   813  00FC72                     _cc_status:
   814                           	opt stack 0
   815  00FC72  A6                 	db	166
   816  00FC73                     __end_of_cc_status:
   817                           	opt stack 0
   818  00FC73                     _cc_enable:
   819                           	opt stack 0
   820  00FC73  A4                 	db	164
   821  00FC74                     __end_of_cc_enable:
   822                           	opt stack 0
   823  00FC74                     _cc_test:
   824                           	opt stack 0
   825  00FC74  A3                 	db	163
   826  00FC75                     __end_of_cc_test:
   827                           	opt stack 0
   828  00FC75                     _cc_reset:
   829                           	opt stack 0
   830  00FC75  01                 	db	1
   831  00FC76                     __end_of_cc_reset:
   832                           	opt stack 0
   833  00FC76                     _mastadd:
   834                           	opt stack 0
   835  00FC76  01                 	db	1
   836  00FC77                     __end_of_mastadd:
   837                           	opt stack 0
   838  00FC77                     _hopadd:
   839                           	opt stack 0
   840  00FC77  03                 	db	3
   841  00FC78                     __end_of_hopadd:
   842                           	opt stack 0
   843  00FC78                     _theft_attempt:
   844                           	opt stack 0
   845  00FC78  0C                 	db	12
   846  00FC79                     __end_of_theft_attempt:
   847                           	opt stack 0
   848  00FC79                     _note_rejected:
   849                           	opt stack 0
   850  00FC79  0B                 	db	11
   851  00FC7A                     __end_of_note_rejected:
   852                           	opt stack 0
   853  00FC7A                     _invalid_escrow:
   854                           	opt stack 0
   855  00FC7A  0A                 	db	10
   856  00FC7B                     __end_of_invalid_escrow:
   857                           	opt stack 0
   858  00FC7B                     _acept_disabled:
   859                           	opt stack 0
   860  00FC7B  09                 	db	9
   861  00FC7C                     __end_of_acept_disabled:
   862                           	opt stack 0
   863  00FC7C                     _cashbox_err:
   864                           	opt stack 0
   865  00FC7C  08                 	db	8
   866  00FC7D                     __end_of_cashbox_err:
   867                           	opt stack 0
   868  00FC7D                     _note_removed:
   869                           	opt stack 0
   870  00FC7D  07                 	db	7
   871  00FC7E                     __end_of_note_removed:
   872                           	opt stack 0
   873  00FC7E                     _just_reset:
   874                           	opt stack 0
   875  00FC7E  06                 	db	6
   876  00FC7F                     __end_of_just_reset:
   877                           	opt stack 0
   878  00FC7F                     _jammed_err:
   879                           	opt stack 0
   880  00FC7F  05                 	db	5
   881  00FC80                     __end_of_jammed_err:
   882                           	opt stack 0
   883  00FC80                     _rom_error:
   884                           	opt stack 0
   885  00FC80  04                 	db	4
   886  00FC81                     __end_of_rom_error:
   887                           	opt stack 0
   888  00FC81                     _just_busy:
   889                           	opt stack 0
   890  00FC81  03                 	db	3
   891  00FC82                     __end_of_just_busy:
   892                           	opt stack 0
   893  00FC82                     _sens_error:
   894                           	opt stack 0
   895  00FC82  02                 	db	2
   896  00FC83                     __end_of_sens_error:
   897                           	opt stack 0
   898  00FC83                     _motr_error:
   899                           	opt stack 0
   900  00FC83  01                 	db	1
   901  00FC84                     __end_of_motr_error:
   902                           	opt stack 0
   903  00FC84                     _note_features:
   904                           	opt stack 0
   905  00FC84  33                 	db	51
   906  00FC85                     __end_of_note_features:
   907                           	opt stack 0
   908  00FC85                     _note_stacker:
   909                           	opt stack 0
   910  00FC85  36                 	db	54
   911  00FC86                     __end_of_note_stacker:
   912                           	opt stack 0
   913  00FC86                     _note_escrow:
   914                           	opt stack 0
   915  00FC86  35                 	db	53
   916  00FC87                     __end_of_note_escrow:
   917                           	opt stack 0
   918  00FC87                     _note_type:
   919                           	opt stack 0
   920  00FC87  34                 	db	52
   921  00FC88                     __end_of_note_type:
   922                           	opt stack 0
   923  00FC88                     _note_poll:
   924                           	opt stack 0
   925  00FC88  33                 	db	51
   926  00FC89                     __end_of_note_poll:
   927                           	opt stack 0
   928  00FC89                     _note_security:
   929                           	opt stack 0
   930  00FC89  32                 	db	50
   931  00FC8A                     __end_of_note_security:
   932                           	opt stack 0
   933  00FC8A                     _note_setup:
   934                           	opt stack 0
   935  00FC8A  31                 	db	49
   936  00FC8B                     __end_of_note_setup:
   937                           	opt stack 0
   938  00FC8B                     _note_reset:
   939                           	opt stack 0
   940  00FC8B  30                 	db	48
   941  00FC8C                     __end_of_note_reset:
   942                           	opt stack 0
   943  00FC8C                     _line4:
   944                           	opt stack 0
   945  00FC8C  54                 	db	84
   946  00FC8D                     __end_of_line4:
   947                           	opt stack 0
   948  00FC8D                     _line3:
   949                           	opt stack 0
   950  00FC8D  14                 	db	20
   951  00FC8E                     __end_of_line3:
   952                           	opt stack 0
   953  00FC8E                     _line2:
   954                           	opt stack 0
   955  00FC8E  40                 	db	64
   956  00FC8F                     __end_of_line2:
   957                           	opt stack 0
   958  00FC8F                     _line1:
   959                           	opt stack 0
   960  00FC8F  00                 	db	0
   961  00FC90                     __end_of_line1:
   962                           	opt stack 0
   963  00FC90                     _dispsl:
   964                           	opt stack 0
   965  00FC90  18                 	db	24
   966  00FC91                     __end_of_dispsl:
   967                           	opt stack 0
   968  00FC91                     _dispsr:
   969                           	opt stack 0
   970  00FC91  1B                 	db	27
   971  00FC92                     __end_of_dispsr:
   972                           	opt stack 0
   973  00FC92                     _dispoff:
   974                           	opt stack 0
   975  00FC92  08                 	db	8
   976  00FC93                     __end_of_dispoff:
   977                           	opt stack 0
   978  00FC93                     _dispshleft:
   979                           	opt stack 0
   980  00FC93  07                 	db	7
   981  00FC94                     __end_of_dispshleft:
   982                           	opt stack 0
   983  00FC94                     _dispshright:
   984                           	opt stack 0
   985  00FC94  05                 	db	5
   986  00FC95                     __end_of_dispshright:
   987                           	opt stack 0
   988  00FC95                     _dispcursor:
   989                           	opt stack 0
   990  00FC95  04                 	db	4
   991  00FC96                     __end_of_dispcursor:
   992                           	opt stack 0
   993  00FC96                     _dispnormal:
   994                           	opt stack 0
   995  00FC96  06                 	db	6
   996  00FC97                     __end_of_dispnormal:
   997                           	opt stack 0
   998  00FC97                     _dsphome:
   999                           	opt stack 0
  1000  00FC97  02                 	db	2
  1001  00FC98                     __end_of_dsphome:
  1002                           	opt stack 0
  1003  00FC98                     _dispaddr:
  1004                           	opt stack 0
  1005  00FC98  A8                 	db	168
  1006  00FC99                     __end_of_dispaddr:
  1007                           	opt stack 0
  1008  00FC99                     _dispclr:
  1009                           	opt stack 0
  1010  00FC99  01                 	db	1
  1011  00FC9A                     __end_of_dispclr:
  1012                           	opt stack 0
  1013  00FC9A                     _dispon:
  1014                           	opt stack 0
  1015  00FC9A  0C                 	db	12
  1016  00FC9B                     __end_of_dispon:
  1017                           	opt stack 0
  1018  00FC9B                     _dispfunc3:
  1019                           	opt stack 0
  1020  00FC9B  2C                 	db	44
  1021  00FC9C                     __end_of_dispfunc3:
  1022                           	opt stack 0
  1023  00FC9C                     _dispfunc2:
  1024                           	opt stack 0
  1025  00FC9C  28                 	db	40
  1026  00FC9D                     __end_of_dispfunc2:
  1027                           	opt stack 0
  1028  00FC9D                     _dispfunc1:
  1029                           	opt stack 0
  1030  00FC9D  24                 	db	36
  1031  00FC9E                     __end_of_dispfunc1:
  1032                           	opt stack 0
  1033  00FC9E                     _servmsg:
  1034                           	opt stack 0
  1035  00FC9E  31                 	db	49
  1036  00FC9F  20                 	db	32
  1037  00FCA0  3D                 	db	61
  1038  00FCA1  20                 	db	32
  1039  00FCA2  41                 	db	65
  1040  00FCA3  75                 	db	117
  1041  00FCA4  64                 	db	100
  1042  00FCA5  69                 	db	105
  1043  00FCA6  74                 	db	116
  1044  00FCA7  20                 	db	32
  1045  00FCA8  32                 	db	50
  1046  00FCA9  20                 	db	32
  1047  00FCAA  3D                 	db	61
  1048  00FCAB  20                 	db	32
  1049  00FCAC  53                 	db	83
  1050  00FCAD  65                 	db	101
  1051  00FCAE  6E                 	db	110
  1052  00FCAF  73                 	db	115
  1053  00FCB0  6F                 	db	111
  1054  00FCB1  72                 	db	114
  1055  00FCB2  33                 	db	51
  1056  00FCB3  3D                 	db	61
  1057  00FCB4  48                 	db	72
  1058  00FCB5  6F                 	db	111
  1059  00FCB6  70                 	db	112
  1060  00FCB7  2D                 	db	45
  1061  00FCB8  43                 	db	67
  1062  00FCB9  6F                 	db	111
  1063  00FCBA  69                 	db	105
  1064  00FCBB  6E                 	db	110
  1065  00FCBC  20                 	db	32
  1066  00FCBD  34                 	db	52
  1067  00FCBE  3D                 	db	61
  1068  00FCBF  4E                 	db	78
  1069  00FCC0  6F                 	db	111
  1070  00FCC1  74                 	db	116
  1071  00FCC2  65                 	db	101
  1072  00FCC3  2D                 	db	45
  1073  00FCC4  65                 	db	101
  1074  00FCC5  6E                 	db	110
  1075  00FCC6  35                 	db	53
  1076  00FCC7  3D                 	db	61
  1077  00FCC8  43                 	db	67
  1078  00FCC9  72                 	db	114
  1079  00FCCA  65                 	db	101
  1080  00FCCB  64                 	db	100
  1081  00FCCC  2D                 	db	45
  1082  00FCCD  63                 	db	99
  1083  00FCCE  6C                 	db	108
  1084  00FCCF  72                 	db	114
  1085  00FCD0  20                 	db	32
  1086  00FCD1  36                 	db	54
  1087  00FCD2  3D                 	db	61
  1088  00FCD3  50                 	db	80
  1089  00FCD4  72                 	db	114
  1090  00FCD5  69                 	db	105
  1091  00FCD6  63                 	db	99
  1092  00FCD7  65                 	db	101
  1093  00FCD8  73                 	db	115
  1094  00FCD9  20                 	db	32
  1095  00FCDA  37                 	db	55
  1096  00FCDB  3D                 	db	61
  1097  00FCDC  56                 	db	86
  1098  00FCDD  65                 	db	101
  1099  00FCDE  6E                 	db	110
  1100  00FCDF  64                 	db	100
  1101  00FCE0  20                 	db	32
  1102  00FCE1  73                 	db	115
  1103  00FCE2  65                 	db	101
  1104  00FCE3  74                 	db	116
  1105  00FCE4  75                 	db	117
  1106  00FCE5  70                 	db	112
  1107  00FCE6  20                 	db	32
  1108  00FCE7  38                 	db	56
  1109  00FCE8  3D                 	db	61
  1110  00FCE9  45                 	db	69
  1111  00FCEA  78                 	db	120
  1112  00FCEB  69                 	db	105
  1113  00FCEC  74                 	db	116
  1114  00FCED  00                 	db	0
  1115  00FCEE                     __end_of_servmsg:
  1116                           	opt stack 0
  1117  00FCEE                     _vendsetup:
  1118                           	opt stack 0
  1119  00FCEE  50                 	db	80
  1120  00FCEF  75                 	db	117
  1121  00FCF0  73                 	db	115
  1122  00FCF1  68                 	db	104
  1123  00FCF2  20                 	db	32
  1124  00FCF3  31                 	db	49
  1125  00FCF4  20                 	db	32
  1126  00FCF5  3D                 	db	61
  1127  00FCF6  20                 	db	32
  1128  00FCF7  56                 	db	86
  1129  00FCF8  65                 	db	101
  1130  00FCF9  6E                 	db	110
  1131  00FCFA  64                 	db	100
  1132  00FCFB  20                 	db	32
  1133  00FCFC  54                 	db	84
  1134  00FCFD  69                 	db	105
  1135  00FCFE  6D                 	db	109
  1136  00FCFF  65                 	db	101
  1137  00FD00  2C                 	db	44
  1138  00FD01  20                 	db	32
  1139  00FD02  32                 	db	50
  1140  00FD03  20                 	db	32
  1141  00FD04  3D                 	db	61
  1142  00FD05  20                 	db	32
  1143  00FD06  43                 	db	67
  1144  00FD07  68                 	db	104
  1145  00FD08  61                 	db	97
  1146  00FD09  6E                 	db	110
  1147  00FD0A  20                 	db	32
  1148  00FD0B  4C                 	db	76
  1149  00FD0C  69                 	db	105
  1150  00FD0D  6E                 	db	110
  1151  00FD0E  6B                 	db	107
  1152  00FD0F  2C                 	db	44
  1153  00FD10  20                 	db	32
  1154  00FD11  20                 	db	32
  1155  00FD12  20                 	db	32
  1156  00FD13  20                 	db	32
  1157  00FD14  20                 	db	32
  1158  00FD15  20                 	db	32
  1159  00FD16  33                 	db	51
  1160  00FD17  20                 	db	32
  1161  00FD18  3D                 	db	61
  1162  00FD19  20                 	db	32
  1163  00FD1A  53                 	db	83
  1164  00FD1B  65                 	db	101
  1165  00FD1C  6E                 	db	110
  1166  00FD1D  73                 	db	115
  1167  00FD1E  6F                 	db	111
  1168  00FD1F  72                 	db	114
  1169  00FD20  20                 	db	32
  1170  00FD21  4F                 	db	79
  1171  00FD22  66                 	db	102
  1172  00FD23  66                 	db	102
  1173  00FD24  2C                 	db	44
  1174  00FD25  20                 	db	32
  1175  00FD26  20                 	db	32
  1176  00FD27  20                 	db	32
  1177  00FD28  20                 	db	32
  1178  00FD29  20                 	db	32
  1179  00FD2A  34                 	db	52
  1180  00FD2B  20                 	db	32
  1181  00FD2C  3D                 	db	61
  1182  00FD2D  20                 	db	32
  1183  00FD2E  52                 	db	82
  1184  00FD2F  65                 	db	101
  1185  00FD30  73                 	db	115
  1186  00FD31  65                 	db	101
  1187  00FD32  74                 	db	116
  1188  00FD33  2C                 	db	44
  1189  00FD34  20                 	db	32
  1190  00FD35  38                 	db	56
  1191  00FD36  20                 	db	32
  1192  00FD37  3D                 	db	61
  1193  00FD38  20                 	db	32
  1194  00FD39  65                 	db	101
  1195  00FD3A  78                 	db	120
  1196  00FD3B  69                 	db	105
  1197  00FD3C  74                 	db	116
  1198  00FD3D  00                 	db	0
  1199  00FD3E                     __end_of_vendsetup:
  1200                           	opt stack 0
  1201  00FD3E                     _setnotes:
  1202                           	opt stack 0
  1203  00FD3E  45                 	db	69
  1204  00FD3F  6E                 	db	110
  1205  00FD40  61                 	db	97
  1206  00FD41  62                 	db	98
  1207  00FD42  6C                 	db	108
  1208  00FD43  65                 	db	101
  1209  00FD44  20                 	db	32
  1210  00FD45  2F                 	db	47
  1211  00FD46  20                 	db	32
  1212  00FD47  44                 	db	68
  1213  00FD48  69                 	db	105
  1214  00FD49  73                 	db	115
  1215  00FD4A  61                 	db	97
  1216  00FD4B  62                 	db	98
  1217  00FD4C  6C                 	db	108
  1218  00FD4D  65                 	db	101
  1219  00FD4E  20                 	db	32
  1220  00FD4F  20                 	db	32
  1221  00FD50  20                 	db	32
  1222  00FD51  20                 	db	32
  1223  00FD52  31                 	db	49
  1224  00FD53  20                 	db	32
  1225  00FD54  3D                 	db	61
  1226  00FD55  20                 	db	32
  1227  00FD56  52                 	db	82
  1228  00FD57  31                 	db	49
  1229  00FD58  30                 	db	48
  1230  00FD59  2C                 	db	44
  1231  00FD5A  20                 	db	32
  1232  00FD5B  32                 	db	50
  1233  00FD5C  20                 	db	32
  1234  00FD5D  3D                 	db	61
  1235  00FD5E  20                 	db	32
  1236  00FD5F  52                 	db	82
  1237  00FD60  32                 	db	50
  1238  00FD61  30                 	db	48
  1239  00FD62  20                 	db	32
  1240  00FD63  20                 	db	32
  1241  00FD64  20                 	db	32
  1242  00FD65  20                 	db	32
  1243  00FD66  33                 	db	51
  1244  00FD67  20                 	db	32
  1245  00FD68  3D                 	db	61
  1246  00FD69  20                 	db	32
  1247  00FD6A  52                 	db	82
  1248  00FD6B  35                 	db	53
  1249  00FD6C  30                 	db	48
  1250  00FD6D  2C                 	db	44
  1251  00FD6E  20                 	db	32
  1252  00FD6F  34                 	db	52
  1253  00FD70  20                 	db	32
  1254  00FD71  3D                 	db	61
  1255  00FD72  20                 	db	32
  1256  00FD73  52                 	db	82
  1257  00FD74  31                 	db	49
  1258  00FD75  30                 	db	48
  1259  00FD76  30                 	db	48
  1260  00FD77  20                 	db	32
  1261  00FD78  20                 	db	32
  1262  00FD79  20                 	db	32
  1263  00FD7A  35                 	db	53
  1264  00FD7B  20                 	db	32
  1265  00FD7C  3D                 	db	61
  1266  00FD7D  20                 	db	32
  1267  00FD7E  52                 	db	82
  1268  00FD7F  32                 	db	50
  1269  00FD80  30                 	db	48
  1270  00FD81  30                 	db	48
  1271  00FD82  00                 	db	0
  1272  00FD83                     __end_of_setnotes:
  1273                           	opt stack 0
  1274  00FD83                     _pricesetm2:
  1275                           	opt stack 0
  1276  00FD83  50                 	db	80
  1277  00FD84  72                 	db	114
  1278  00FD85  65                 	db	101
  1279  00FD86  73                 	db	115
  1280  00FD87  73                 	db	115
  1281  00FD88  20                 	db	32
  1282  00FD89  63                 	db	99
  1283  00FD8A  68                 	db	104
  1284  00FD8B  61                 	db	97
  1285  00FD8C  6E                 	db	110
  1286  00FD8D  6E                 	db	110
  1287  00FD8E  65                 	db	101
  1288  00FD8F  6C                 	db	108
  1289  00FD90  20                 	db	32
  1290  00FD91  62                 	db	98
  1291  00FD92  75                 	db	117
  1292  00FD93  74                 	db	116
  1293  00FD94  74                 	db	116
  1294  00FD95  6F                 	db	111
  1295  00FD96  6E                 	db	110
  1296  00FD97  20                 	db	32
  1297  00FD98  20                 	db	32
  1298  00FD99  20                 	db	32
  1299  00FD9A  20                 	db	32
  1300  00FD9B  74                 	db	116
  1301  00FD9C  6F                 	db	111
  1302  00FD9D  20                 	db	32
  1303  00FD9E  73                 	db	115
  1304  00FD9F  65                 	db	101
  1305  00FDA0  74                 	db	116
  1306  00FDA1  20                 	db	32
  1307  00FDA2  70                 	db	112
  1308  00FDA3  72                 	db	114
  1309  00FDA4  69                 	db	105
  1310  00FDA5  63                 	db	99
  1311  00FDA6  65                 	db	101
  1312  00FDA7  20                 	db	32
  1313  00FDA8  20                 	db	32
  1314  00FDA9  20                 	db	32
  1315  00FDAA  20                 	db	32
  1316  00FDAB  20                 	db	32
  1317  00FDAC  20                 	db	32
  1318  00FDAD  53                 	db	83
  1319  00FDAE  65                 	db	101
  1320  00FDAF  72                 	db	114
  1321  00FDB0  76                 	db	118
  1322  00FDB1  69                 	db	105
  1323  00FDB2  63                 	db	99
  1324  00FDB3  65                 	db	101
  1325  00FDB4  20                 	db	32
  1326  00FDB5  3D                 	db	61
  1327  00FDB6  20                 	db	32
  1328  00FDB7  45                 	db	69
  1329  00FDB8  78                 	db	120
  1330  00FDB9  69                 	db	105
  1331  00FDBA  74                 	db	116
  1332  00FDBB  00                 	db	0
  1333  00FDBC                     __end_of_pricesetm2:
  1334                           	opt stack 0
  1335  00FDBC                     _chanlinkm:
  1336                           	opt stack 0
  1337  00FDBC  50                 	db	80
  1338  00FDBD  72                 	db	114
  1339  00FDBE  65                 	db	101
  1340  00FDBF  73                 	db	115
  1341  00FDC0  73                 	db	115
  1342  00FDC1  20                 	db	32
  1343  00FDC2  63                 	db	99
  1344  00FDC3  68                 	db	104
  1345  00FDC4  61                 	db	97
  1346  00FDC5  6E                 	db	110
  1347  00FDC6  6E                 	db	110
  1348  00FDC7  65                 	db	101
  1349  00FDC8  6C                 	db	108
  1350  00FDC9  20                 	db	32
  1351  00FDCA  62                 	db	98
  1352  00FDCB  75                 	db	117
  1353  00FDCC  74                 	db	116
  1354  00FDCD  74                 	db	116
  1355  00FDCE  6F                 	db	111
  1356  00FDCF  6E                 	db	110
  1357  00FDD0  20                 	db	32
  1358  00FDD1  20                 	db	32
  1359  00FDD2  20                 	db	32
  1360  00FDD3  20                 	db	32
  1361  00FDD4  74                 	db	116
  1362  00FDD5  6F                 	db	111
  1363  00FDD6  20                 	db	32
  1364  00FDD7  6C                 	db	108
  1365  00FDD8  69                 	db	105
  1366  00FDD9  6E                 	db	110
  1367  00FDDA  6B                 	db	107
  1368  00FDDB  20                 	db	32
  1369  00FDDC  74                 	db	116
  1370  00FDDD  6F                 	db	111
  1371  00FDDE  20                 	db	32
  1372  00FDDF  20                 	db	32
  1373  00FDE0  20                 	db	32
  1374  00FDE1  20                 	db	32
  1375  00FDE2  20                 	db	32
  1376  00FDE3  20                 	db	32
  1377  00FDE4  53                 	db	83
  1378  00FDE5  65                 	db	101
  1379  00FDE6  72                 	db	114
  1380  00FDE7  76                 	db	118
  1381  00FDE8  69                 	db	105
  1382  00FDE9  63                 	db	99
  1383  00FDEA  65                 	db	101
  1384  00FDEB  20                 	db	32
  1385  00FDEC  3D                 	db	61
  1386  00FDED  20                 	db	32
  1387  00FDEE  45                 	db	69
  1388  00FDEF  78                 	db	120
  1389  00FDF0  69                 	db	105
  1390  00FDF1  74                 	db	116
  1391  00FDF2  00                 	db	0
  1392  00FDF3                     __end_of_chanlinkm:
  1393                           	opt stack 0
  1394  00FDF3                     _hoppcoin:
  1395                           	opt stack 0
  1396  00FDF3  48                 	db	72
  1397  00FDF4  6F                 	db	111
  1398  00FDF5  70                 	db	112
  1399  00FDF6  70                 	db	112
  1400  00FDF7  65                 	db	101
  1401  00FDF8  72                 	db	114
  1402  00FDF9  20                 	db	32
  1403  00FDFA  43                 	db	67
  1404  00FDFB  6F                 	db	111
  1405  00FDFC  69                 	db	105
  1406  00FDFD  6E                 	db	110
  1407  00FDFE  20                 	db	32
  1408  00FDFF  20                 	db	32
  1409  00FE00  20                 	db	32
  1410  00FE01  20                 	db	32
  1411  00FE02  20                 	db	32
  1412  00FE03  20                 	db	32
  1413  00FE04  20                 	db	32
  1414  00FE05  20                 	db	32
  1415  00FE06  20                 	db	32
  1416  00FE07  42                 	db	66
  1417  00FE08  75                 	db	117
  1418  00FE09  74                 	db	116
  1419  00FE0A  74                 	db	116
  1420  00FE0B  6F                 	db	111
  1421  00FE0C  6E                 	db	110
  1422  00FE0D  20                 	db	32
  1423  00FE0E  31                 	db	49
  1424  00FE0F  20                 	db	32
  1425  00FE10  3D                 	db	61
  1426  00FE11  20                 	db	32
  1427  00FE12  2B                 	db	43
  1428  00FE13  20                 	db	32
  1429  00FE14  26                 	db	38
  1430  00FE15  20                 	db	32
  1431  00FE16  32                 	db	50
  1432  00FE17  20                 	db	32
  1433  00FE18  3D                 	db	61
  1434  00FE19  20                 	db	32
  1435  00FE1A  2D                 	db	45
  1436  00FE1B  20                 	db	32
  1437  00FE1C  56                 	db	86
  1438  00FE1D  61                 	db	97
  1439  00FE1E  6C                 	db	108
  1440  00FE1F  75                 	db	117
  1441  00FE20  65                 	db	101
  1442  00FE21  20                 	db	32
  1443  00FE22  3D                 	db	61
  1444  00FE23  20                 	db	32
  1445  00FE24  52                 	db	82
  1446  00FE25  00                 	db	0
  1447  00FE26                     __end_of_hoppcoin:
  1448                           	opt stack 0
  1449  00FE26                     _inscoin:
  1450                           	opt stack 0
  1451  00FE26  49                 	db	73
  1452  00FE27  6E                 	db	110
  1453  00FE28  73                 	db	115
  1454  00FE29  65                 	db	101
  1455  00FE2A  72                 	db	114
  1456  00FE2B  74                 	db	116
  1457  00FE2C  20                 	db	32
  1458  00FE2D  4E                 	db	78
  1459  00FE2E  6F                 	db	111
  1460  00FE2F  74                 	db	116
  1461  00FE30  65                 	db	101
  1462  00FE31  73                 	db	115
  1463  00FE32  20                 	db	32
  1464  00FE33  26                 	db	38
  1465  00FE34  20                 	db	32
  1466  00FE35  50                 	db	80
  1467  00FE36  72                 	db	114
  1468  00FE37  65                 	db	101
  1469  00FE38  73                 	db	115
  1470  00FE39  73                 	db	115
  1471  00FE3A  20                 	db	32
  1472  00FE3B  4C                 	db	76
  1473  00FE3C  69                 	db	105
  1474  00FE3D  67                 	db	103
  1475  00FE3E  68                 	db	104
  1476  00FE3F  74                 	db	116
  1477  00FE40  65                 	db	101
  1478  00FE41  64                 	db	100
  1479  00FE42  20                 	db	32
  1480  00FE43  42                 	db	66
  1481  00FE44  75                 	db	117
  1482  00FE45  74                 	db	116
  1483  00FE46  74                 	db	116
  1484  00FE47  6F                 	db	111
  1485  00FE48  6E                 	db	110
  1486  00FE49  20                 	db	32
  1487  00FE4A  54                 	db	84
  1488  00FE4B  6F                 	db	111
  1489  00FE4C  20                 	db	32
  1490  00FE4D  20                 	db	32
  1491  00FE4E  20                 	db	32
  1492  00FE4F  20                 	db	32
  1493  00FE50  20                 	db	32
  1494  00FE51  20                 	db	32
  1495  00FE52  56                 	db	86
  1496  00FE53  65                 	db	101
  1497  00FE54  6E                 	db	110
  1498  00FE55  64                 	db	100
  1499  00FE56  00                 	db	0
  1500  00FE57                     __end_of_inscoin:
  1501                           	opt stack 0
  1502  00FE57                     _vendtimem:
  1503                           	opt stack 0
  1504  00FE57  50                 	db	80
  1505  00FE58  75                 	db	117
  1506  00FE59  73                 	db	115
  1507  00FE5A  68                 	db	104
  1508  00FE5B  20                 	db	32
  1509  00FE5C  31                 	db	49
  1510  00FE5D  20                 	db	32
  1511  00FE5E  3D                 	db	61
  1512  00FE5F  20                 	db	32
  1513  00FE60  2B                 	db	43
  1514  00FE61  2E                 	db	46
  1515  00FE62  35                 	db	53
  1516  00FE63  20                 	db	32
  1517  00FE64  73                 	db	115
  1518  00FE65  65                 	db	101
  1519  00FE66  63                 	db	99
  1520  00FE67  6F                 	db	111
  1521  00FE68  6E                 	db	110
  1522  00FE69  64                 	db	100
  1523  00FE6A  20                 	db	32
  1524  00FE6B  50                 	db	80
  1525  00FE6C  75                 	db	117
  1526  00FE6D  73                 	db	115
  1527  00FE6E  68                 	db	104
  1528  00FE6F  20                 	db	32
  1529  00FE70  32                 	db	50
  1530  00FE71  20                 	db	32
  1531  00FE72  3D                 	db	61
  1532  00FE73  20                 	db	32
  1533  00FE74  2D                 	db	45
  1534  00FE75  2E                 	db	46
  1535  00FE76  35                 	db	53
  1536  00FE77  20                 	db	32
  1537  00FE78  73                 	db	115
  1538  00FE79  65                 	db	101
  1539  00FE7A  63                 	db	99
  1540  00FE7B  6F                 	db	111
  1541  00FE7C  6E                 	db	110
  1542  00FE7D  64                 	db	100
  1543  00FE7E  20                 	db	32
  1544  00FE7F  00                 	db	0
  1545  00FE80                     __end_of_vendtimem:
  1546                           	opt stack 0
  1547  00FE80                     _setimemsg:
  1548                           	opt stack 0
  1549  00FE80  50                 	db	80
  1550  00FE81  75                 	db	117
  1551  00FE82  73                 	db	115
  1552  00FE83  68                 	db	104
  1553  00FE84  20                 	db	32
  1554  00FE85  63                 	db	99
  1555  00FE86  68                 	db	104
  1556  00FE87  61                 	db	97
  1557  00FE88  6E                 	db	110
  1558  00FE89  6E                 	db	110
  1559  00FE8A  65                 	db	101
  1560  00FE8B  6C                 	db	108
  1561  00FE8C  20                 	db	32
  1562  00FE8D  62                 	db	98
  1563  00FE8E  75                 	db	117
  1564  00FE8F  74                 	db	116
  1565  00FE90  74                 	db	116
  1566  00FE91  6F                 	db	111
  1567  00FE92  6E                 	db	110
  1568  00FE93  20                 	db	32
  1569  00FE94  50                 	db	80
  1570  00FE95  75                 	db	117
  1571  00FE96  73                 	db	115
  1572  00FE97  68                 	db	104
  1573  00FE98  20                 	db	32
  1574  00FE99  73                 	db	115
  1575  00FE9A  65                 	db	101
  1576  00FE9B  72                 	db	114
  1577  00FE9C  76                 	db	118
  1578  00FE9D  69                 	db	105
  1579  00FE9E  63                 	db	99
  1580  00FE9F  65                 	db	101
  1581  00FEA0  20                 	db	32
  1582  00FEA1  74                 	db	116
  1583  00FEA2  6F                 	db	111
  1584  00FEA3  20                 	db	32
  1585  00FEA4  65                 	db	101
  1586  00FEA5  78                 	db	120
  1587  00FEA6  69                 	db	105
  1588  00FEA7  74                 	db	116
  1589  00FEA8  00                 	db	0
  1590  00FEA9                     __end_of_setimemsg:
  1591                           	opt stack 0
  1592  00FEA9                     _initnote:
  1593                           	opt stack 0
  1594  00FEA9  20                 	db	32
  1595  00FEAA  20                 	db	32
  1596  00FEAB  20                 	db	32
  1597  00FEAC  20                 	db	32
  1598  00FEAD  20                 	db	32
  1599  00FEAE  49                 	db	73
  1600  00FEAF  6E                 	db	110
  1601  00FEB0  69                 	db	105
  1602  00FEB1  74                 	db	116
  1603  00FEB2  69                 	db	105
  1604  00FEB3  61                 	db	97
  1605  00FEB4  6C                 	db	108
  1606  00FEB5  69                 	db	105
  1607  00FEB6  7A                 	db	122
  1608  00FEB7  65                 	db	101
  1609  00FEB8  20                 	db	32
  1610  00FEB9  20                 	db	32
  1611  00FEBA  20                 	db	32
  1612  00FEBB  20                 	db	32
  1613  00FEBC  20                 	db	32
  1614  00FEBD  20                 	db	32
  1615  00FEBE  20                 	db	32
  1616  00FEBF  20                 	db	32
  1617  00FEC0  20                 	db	32
  1618  00FEC1  20                 	db	32
  1619  00FEC2  4E                 	db	78
  1620  00FEC3  6F                 	db	111
  1621  00FEC4  74                 	db	116
  1622  00FEC5  65                 	db	101
  1623  00FEC6  20                 	db	32
  1624  00FEC7  52                 	db	82
  1625  00FEC8  65                 	db	101
  1626  00FEC9  61                 	db	97
  1627  00FECA  64                 	db	100
  1628  00FECB  65                 	db	101
  1629  00FECC  72                 	db	114
  1630  00FECD  00                 	db	0
  1631  00FECE                     __end_of_initnote:
  1632                           	opt stack 0
  1633  00FECE                     _chanresetmsg:
  1634                           	opt stack 0
  1635  00FECE  52                 	db	82
  1636  00FECF  65                 	db	101
  1637  00FED0  73                 	db	115
  1638  00FED1  65                 	db	101
  1639  00FED2  74                 	db	116
  1640  00FED3  20                 	db	32
  1641  00FED4  74                 	db	116
  1642  00FED5  6F                 	db	111
  1643  00FED6  20                 	db	32
  1644  00FED7  44                 	db	68
  1645  00FED8  65                 	db	101
  1646  00FED9  66                 	db	102
  1647  00FEDA  61                 	db	97
  1648  00FEDB  75                 	db	117
  1649  00FEDC  6C                 	db	108
  1650  00FEDD  74                 	db	116
  1651  00FEDE  20                 	db	32
  1652  00FEDF  20                 	db	32
  1653  00FEE0  20                 	db	32
  1654  00FEE1  20                 	db	32
  1655  00FEE2  53                 	db	83
  1656  00FEE3  74                 	db	116
  1657  00FEE4  61                 	db	97
  1658  00FEE5  72                 	db	114
  1659  00FEE6  74                 	db	116
  1660  00FEE7  20                 	db	32
  1661  00FEE8  41                 	db	65
  1662  00FEE9  67                 	db	103
  1663  00FEEA  61                 	db	97
  1664  00FEEB  69                 	db	105
  1665  00FEEC  6E                 	db	110
  1666  00FEED  00                 	db	0
  1667  00FEEE                     __end_of_chanresetmsg:
  1668                           	opt stack 0
  1669  00FEEE                     _sensoffmsg:
  1670                           	opt stack 0
  1671  00FEEE  50                 	db	80
  1672  00FEEF  75                 	db	117
  1673  00FEF0  73                 	db	115
  1674  00FEF1  68                 	db	104
  1675  00FEF2  20                 	db	32
  1676  00FEF3  31                 	db	49
  1677  00FEF4  20                 	db	32
  1678  00FEF5  3D                 	db	61
  1679  00FEF6  20                 	db	32
  1680  00FEF7  4F                 	db	79
  1681  00FEF8  6E                 	db	110
  1682  00FEF9  2C                 	db	44
  1683  00FEFA  20                 	db	32
  1684  00FEFB  32                 	db	50
  1685  00FEFC  20                 	db	32
  1686  00FEFD  3D                 	db	61
  1687  00FEFE  20                 	db	32
  1688  00FEFF  4F                 	db	79
  1689  00FF00  66                 	db	102
  1690  00FF01  66                 	db	102
  1691  00FF02  2C                 	db	44
  1692  00FF03  20                 	db	32
  1693  00FF04  38                 	db	56
  1694  00FF05  20                 	db	32
  1695  00FF06  3D                 	db	61
  1696  00FF07  20                 	db	32
  1697  00FF08  45                 	db	69
  1698  00FF09  78                 	db	120
  1699  00FF0A  69                 	db	105
  1700  00FF0B  74                 	db	116
  1701  00FF0C  00                 	db	0
  1702  00FF0D                     __end_of_sensoffmsg:
  1703                           	opt stack 0
  1704  00FF0D                     _noteerr:
  1705                           	opt stack 0
  1706  00FF0D  20                 	db	32
  1707  00FF0E  20                 	db	32
  1708  00FF0F  20                 	db	32
  1709  00FF10  4E                 	db	78
  1710  00FF11  6F                 	db	111
  1711  00FF12  74                 	db	116
  1712  00FF13  65                 	db	101
  1713  00FF14  20                 	db	32
  1714  00FF15  65                 	db	101
  1715  00FF16  72                 	db	114
  1716  00FF17  72                 	db	114
  1717  00FF18  6F                 	db	111
  1718  00FF19  72                 	db	114
  1719  00FF1A  20                 	db	32
  1720  00FF1B  20                 	db	32
  1721  00FF1C  20                 	db	32
  1722  00FF1D  20                 	db	32
  1723  00FF1E  20                 	db	32
  1724  00FF1F  63                 	db	99
  1725  00FF20  6F                 	db	111
  1726  00FF21  64                 	db	100
  1727  00FF22  65                 	db	101
  1728  00FF23  20                 	db	32
  1729  00FF24  3D                 	db	61
  1730  00FF25  20                 	db	32
  1731  00FF26  30                 	db	48
  1732  00FF27  78                 	db	120
  1733  00FF28  00                 	db	0
  1734  00FF29                     __end_of_noteerr:
  1735                           	opt stack 0
  1736  00FF29                     _clrline:
  1737                           	opt stack 0
  1738  00FF29  20                 	db	32
  1739  00FF2A  20                 	db	32
  1740  00FF2B  20                 	db	32
  1741  00FF2C  20                 	db	32
  1742  00FF2D  20                 	db	32
  1743  00FF2E  20                 	db	32
  1744  00FF2F  20                 	db	32
  1745  00FF30  20                 	db	32
  1746  00FF31  20                 	db	32
  1747  00FF32  20                 	db	32
  1748  00FF33  20                 	db	32
  1749  00FF34  20                 	db	32
  1750  00FF35  20                 	db	32
  1751  00FF36  20                 	db	32
  1752  00FF37  20                 	db	32
  1753  00FF38  20                 	db	32
  1754  00FF39  20                 	db	32
  1755  00FF3A  20                 	db	32
  1756  00FF3B  20                 	db	32
  1757  00FF3C  20                 	db	32
  1758  00FF3D  00                 	db	0
  1759  00FF3E                     __end_of_clrline:
  1760                           	opt stack 0
  1761  00FF3E                     _timemsg:
  1762                           	opt stack 0
  1763  00FF3E  54                 	db	84
  1764  00FF3F  69                 	db	105
  1765  00FF40  6D                 	db	109
  1766  00FF41  65                 	db	101
  1767  00FF42  20                 	db	32
  1768  00FF43  69                 	db	105
  1769  00FF44  6E                 	db	110
  1770  00FF45  20                 	db	32
  1771  00FF46  31                 	db	49
  1772  00FF47  2F                 	db	47
  1773  00FF48  32                 	db	50
  1774  00FF49  73                 	db	115
  1775  00FF4A  65                 	db	101
  1776  00FF4B  63                 	db	99
  1777  00FF4C  20                 	db	32
  1778  00FF4D  3D                 	db	61
  1779  00FF4E  20                 	db	32
  1780  00FF4F  00                 	db	0
  1781  00FF50                     __end_of_timemsg:
  1782                           	opt stack 0
  1783  00FF50                     _pricesetmsg:
  1784                           	opt stack 0
  1785  00FF50  20                 	db	32
  1786  00FF51  20                 	db	32
  1787  00FF52  20                 	db	32
  1788  00FF53  50                 	db	80
  1789  00FF54  72                 	db	114
  1790  00FF55  69                 	db	105
  1791  00FF56  63                 	db	99
  1792  00FF57  65                 	db	101
  1793  00FF58  20                 	db	32
  1794  00FF59  73                 	db	115
  1795  00FF5A  65                 	db	101
  1796  00FF5B  74                 	db	116
  1797  00FF5C  20                 	db	32
  1798  00FF5D  6D                 	db	109
  1799  00FF5E  6F                 	db	111
  1800  00FF5F  64                 	db	100
  1801  00FF60  65                 	db	101
  1802  00FF61  00                 	db	0
  1803  00FF62                     __end_of_pricesetmsg:
  1804                           	opt stack 0
  1805  00FF62                     _creditclr:
  1806                           	opt stack 0
  1807  00FF62  43                 	db	67
  1808  00FF63  72                 	db	114
  1809  00FF64  65                 	db	101
  1810  00FF65  64                 	db	100
  1811  00FF66  69                 	db	105
  1812  00FF67  74                 	db	116
  1813  00FF68  73                 	db	115
  1814  00FF69  20                 	db	32
  1815  00FF6A  43                 	db	67
  1816  00FF6B  6C                 	db	108
  1817  00FF6C  65                 	db	101
  1818  00FF6D  61                 	db	97
  1819  00FF6E  72                 	db	114
  1820  00FF6F  65                 	db	101
  1821  00FF70  64                 	db	100
  1822  00FF71  00                 	db	0
  1823  00FF72                     __end_of_creditclr:
  1824                           	opt stack 0
  1825  00FF72                     _dacmsg:
  1826                           	opt stack 0
  1827  00FF72  53                 	db	83
  1828  00FF73  65                 	db	101
  1829  00FF74  6E                 	db	110
  1830  00FF75  73                 	db	115
  1831  00FF76  69                 	db	105
  1832  00FF77  74                 	db	116
  1833  00FF78  69                 	db	105
  1834  00FF79  76                 	db	118
  1835  00FF7A  69                 	db	105
  1836  00FF7B  74                 	db	116
  1837  00FF7C  79                 	db	121
  1838  00FF7D  20                 	db	32
  1839  00FF7E  00                 	db	0
  1840  00FF7F                     __end_of_dacmsg:
  1841                           	opt stack 0
  1842  00FF7F                     _credits:
  1843                           	opt stack 0
  1844  00FF7F  20                 	db	32
  1845  00FF80  20                 	db	32
  1846  00FF81  43                 	db	67
  1847  00FF82  72                 	db	114
  1848  00FF83  65                 	db	101
  1849  00FF84  64                 	db	100
  1850  00FF85  69                 	db	105
  1851  00FF86  74                 	db	116
  1852  00FF87  20                 	db	32
  1853  00FF88  3D                 	db	61
  1854  00FF89  20                 	db	32
  1855  00FF8A  52                 	db	82
  1856  00FF8B  00                 	db	0
  1857  00FF8C                     __end_of_credits:
  1858                           	opt stack 0
  1859  00FF8C                     _chanmsg:
  1860                           	opt stack 0
  1861  00FF8C  20                 	db	32
  1862  00FF8D  20                 	db	32
  1863  00FF8E  20                 	db	32
  1864  00FF8F  43                 	db	67
  1865  00FF90  68                 	db	104
  1866  00FF91  61                 	db	97
  1867  00FF92  6E                 	db	110
  1868  00FF93  6E                 	db	110
  1869  00FF94  65                 	db	101
  1870  00FF95  6C                 	db	108
  1871  00FF96  20                 	db	32
  1872  00FF97  00                 	db	0
  1873  00FF98                     __end_of_chanmsg:
  1874                           	opt stack 0
  1875  00FF98                     _linkmsg:
  1876                           	opt stack 0
  1877  00FF98  6C                 	db	108
  1878  00FF99  69                 	db	105
  1879  00FF9A  6E                 	db	110
  1880  00FF9B  6B                 	db	107
  1881  00FF9C  65                 	db	101
  1882  00FF9D  64                 	db	100
  1883  00FF9E  20                 	db	32
  1884  00FF9F  74                 	db	116
  1885  00FFA0  6F                 	db	111
  1886  00FFA1  20                 	db	32
  1887  00FFA2  3A                 	db	58
  1888  00FFA3  00                 	db	0
  1889  00FFA4                     __end_of_linkmsg:
  1890                           	opt stack 0
  1891  00FFA4                     _sensmsg:
  1892                           	opt stack 0
  1893  00FFA4  53                 	db	83
  1894  00FFA5  65                 	db	101
  1895  00FFA6  6E                 	db	110
  1896  00FFA7  73                 	db	115
  1897  00FFA8  6F                 	db	111
  1898  00FFA9  72                 	db	114
  1899  00FFAA  20                 	db	32
  1900  00FFAB  69                 	db	105
  1901  00FFAC  73                 	db	115
  1902  00FFAD  20                 	db	32
  1903  00FFAE  00                 	db	0
  1904  00FFAF                     __end_of_sensmsg:
  1905                           	opt stack 0
  1906  00FFAF                     _clrmsg:
  1907                           	opt stack 0
  1908  00FFAF  20                 	db	32
  1909  00FFB0  20                 	db	32
  1910  00FFB1  20                 	db	32
  1911  00FFB2  20                 	db	32
  1912  00FFB3  20                 	db	32
  1913  00FFB4  20                 	db	32
  1914  00FFB5  20                 	db	32
  1915  00FFB6  20                 	db	32
  1916  00FFB7  20                 	db	32
  1917  00FFB8  00                 	db	0
  1918  00FFB9                     __end_of_clrmsg:
  1919                           	opt stack 0
  1920  00FFB9                     _disabled:
  1921                           	opt stack 0
  1922  00FFB9  20                 	db	32
  1923  00FFBA  64                 	db	100
  1924  00FFBB  69                 	db	105
  1925  00FFBC  73                 	db	115
  1926  00FFBD  61                 	db	97
  1927  00FFBE  62                 	db	98
  1928  00FFBF  6C                 	db	108
  1929  00FFC0  65                 	db	101
  1930  00FFC1  64                 	db	100
  1931  00FFC2  00                 	db	0
  1932  00FFC3                     __end_of_disabled:
  1933                           	opt stack 0
  1934  00FFC3                     _enabled:
  1935                           	opt stack 0
  1936  00FFC3  20                 	db	32
  1937  00FFC4  65                 	db	101
  1938  00FFC5  6E                 	db	110
  1939  00FFC6  61                 	db	97
  1940  00FFC7  62                 	db	98
  1941  00FFC8  6C                 	db	108
  1942  00FFC9  65                 	db	101
  1943  00FFCA  64                 	db	100
  1944  00FFCB  20                 	db	32
  1945  00FFCC  00                 	db	0
  1946  00FFCD                     __end_of_enabled:
  1947                           	opt stack 0
  1948  00FFCD                     _tenrand:
  1949                           	opt stack 0
  1950  00FFCD  20                 	db	32
  1951  00FFCE  20                 	db	32
  1952  00FFCF  20                 	db	32
  1953  00FFD0  52                 	db	82
  1954  00FFD1  31                 	db	49
  1955  00FFD2  30                 	db	48
  1956  00FFD3  20                 	db	32
  1957  00FFD4  20                 	db	32
  1958  00FFD5  00                 	db	0
  1959  00FFD6                     __end_of_tenrand:
  1960                           	opt stack 0
  1961  00FFD6                     _twohundredrand:
  1962                           	opt stack 0
  1963  00FFD6  20                 	db	32
  1964  00FFD7  20                 	db	32
  1965  00FFD8  52                 	db	82
  1966  00FFD9  32                 	db	50
  1967  00FFDA  30                 	db	48
  1968  00FFDB  30                 	db	48
  1969  00FFDC  20                 	db	32
  1970  00FFDD  00                 	db	0
  1971  00FFDE                     __end_of_twohundredrand:
  1972                           	opt stack 0
  1973  00FFDE                     _hundredrand:
  1974                           	opt stack 0
  1975  00FFDE  20                 	db	32
  1976  00FFDF  20                 	db	32
  1977  00FFE0  52                 	db	82
  1978  00FFE1  31                 	db	49
  1979  00FFE2  30                 	db	48
  1980  00FFE3  30                 	db	48
  1981  00FFE4  20                 	db	32
  1982  00FFE5  00                 	db	0
  1983  00FFE6                     __end_of_hundredrand:
  1984                           	opt stack 0
  1985  00FFE6                     _fiftyrand:
  1986                           	opt stack 0
  1987  00FFE6  20                 	db	32
  1988  00FFE7  20                 	db	32
  1989  00FFE8  52                 	db	82
  1990  00FFE9  35                 	db	53
  1991  00FFEA  30                 	db	48
  1992  00FFEB  20                 	db	32
  1993  00FFEC  20                 	db	32
  1994  00FFED  00                 	db	0
  1995  00FFEE                     __end_of_fiftyrand:
  1996                           	opt stack 0
  1997  00FFEE                     _twentyrand:
  1998                           	opt stack 0
  1999  00FFEE  20                 	db	32
  2000  00FFEF  20                 	db	32
  2001  00FFF0  52                 	db	82
  2002  00FFF1  32                 	db	50
  2003  00FFF2  30                 	db	48
  2004  00FFF3  20                 	db	32
  2005  00FFF4  20                 	db	32
  2006  00FFF5  00                 	db	0
  2007  00FFF6                     __end_of_twentyrand:
  2008                           	opt stack 0
  2009  00FFF6                     _offmsg:
  2010                           	opt stack 0
  2011  00FFF6  4F                 	db	79
  2012  00FFF7  66                 	db	102
  2013  00FFF8  66                 	db	102
  2014  00FFF9  00                 	db	0
  2015  00FFFA                     __end_of_offmsg:
  2016                           	opt stack 0
  2017  00FFFA                     _onmsg:
  2018                           	opt stack 0
  2019  00FFFA  4F                 	db	79
  2020  00FFFB  6E                 	db	110
  2021  00FFFC  20                 	db	32
  2022  00FFFD  00                 	db	0
  2023  00FFFE                     __end_of_onmsg:
  2024                           	opt stack 0
  2025  00FFFE  00                 	db	0	; dummy byte at the end
  2026  0000                     
  2027                           	psect	nvBANK0
  2028  0000B8                     __pnvBANK0:
  2029                           	opt stack 0
  2030  0000B8                     _timer0ReloadVal16bit:
  2031                           	opt stack 0
  2032  0000B8                     	ds	2
  2033  0000BA                     _timer5ReloadVal:
  2034                           	opt stack 0
  2035  0000BA                     	ds	2
  2036  0000BC                     _timer3ReloadVal:
  2037                           	opt stack 0
  2038  0000BC                     	ds	2
  2039  0000BE                     _timer1ReloadVal:
  2040                           	opt stack 0
  2041  0000BE                     	ds	2
  2042  0000                     _RX2PPSbits	set	3725
  2043  0000                     _RB5PPS	set	3828
  2044  0000                     _PPSLOCKbits	set	3744
  2045  0000                     _PPSLOCK	set	3744
  2046  0000                     _PIR4bits	set	3790
  2047  0000                     _PIR7bits	set	3793
  2048  0000                     _IPR0bits	set	3770
  2049  0000                     _PMD5	set	3814
  2050  0000                     _PMD4	set	3813
  2051  0000                     _PMD3	set	3812
  2052  0000                     _PMD2	set	3811
  2053  0000                     _PMD1	set	3810
  2054  0000                     _PMD0	set	3809
  2055  0000                     _OSCTUNE	set	3805
  2056  0000                     _OSCFRQ	set	3806
  2057  0000                     _OSCEN	set	3804
  2058  0000                     _OSCCON3	set	3802
  2059  0000                     _OSCCON1	set	3800
  2060  0000                     _PIR3bits	set	3789
  2061  0000                     _PIR0bits	set	3786
  2062  0000                     _RC6PPS	set	3837
  2063  0000                     _RX1PPSbits	set	3765
  2064  0000                     _PIE0bits	set	3778
  2065  0000                     _CMOUT	set	3901
  2066  0000                     _DAC1CON1	set	3892
  2067  0000                     _DAC1CON0	set	3891
  2068  0000                     _CMOUTbits	set	3901
  2069  0000                     _CM1PCH	set	3900
  2070  0000                     _CM1NCH	set	3899
  2071  0000                     _CM1CON1	set	3898
  2072  0000                     _CM1CON0	set	3897
  2073  0000                     _ODCOND	set	3876
  2074  0000                     _ODCONC	set	3871
  2075  0000                     _ODCONB	set	3863
  2076  0000                     _ODCONA	set	3855
  2077  0000                     _ODCONE	set	3884
  2078  0000                     _WPUC	set	3872
  2079  0000                     _WPUA	set	3856
  2080  0000                     _WPUB	set	3864
  2081  0000                     _WPUE	set	3885
  2082  0000                     _WPUD	set	3877
  2083  0000                     _ANSELA	set	3857
  2084  0000                     _ANSELE	set	3886
  2085  0000                     _ANSELD	set	3878
  2086  0000                     _ANSELB	set	3865
  2087  0000                     _ANSELC	set	3873
  2088  0000                     _PORTBbits	set	3982
  2089  0000                     _BAUD1CONbits	set	3999
  2090  0000                     _LATCbits	set	3973
  2091  0000                     _TX1STAbits	set	3998
  2092  0000                     _PORTA	set	3981
  2093  0000                     _PORTD	set	3984
  2094  0000                     _PR4	set	4022
  2095  0000                     _TMR4	set	4021
  2096  0000                     _T4CONbits	set	4023
  2097  0000                     _T4RSTbits	set	4026
  2098  0000                     _T4HLTbits	set	4024
  2099  0000                     _T4CON	set	4023
  2100  0000                     _T4TMR	set	4021
  2101  0000                     _T4PR	set	4022
  2102  0000                     _T4RST	set	4026
  2103  0000                     _T4HLT	set	4024
  2104  0000                     _T4CLKCON	set	4025
  2105  0000                     _PR2	set	4028
  2106  0000                     _TMR2	set	4027
  2107  0000                     _T2CONbits	set	4029
  2108  0000                     _T2RSTbits	set	4032
  2109  0000                     _T2HLTbits	set	4030
  2110  0000                     _T2CON	set	4029
  2111  0000                     _T2TMR	set	4027
  2112  0000                     _T2PR	set	4028
  2113  0000                     _T2RST	set	4032
  2114  0000                     _T2HLT	set	4030
  2115  0000                     _T2CLKCON	set	4031
  2116  0000                     _T0CON0bits	set	4053
  2117  0000                     _T0CON0	set	4053
  2118  0000                     _TMR0L	set	4051
  2119  0000                     _TMR0H	set	4052
  2120  0000                     _T0CON1	set	4054
  2121  0000                     _T5GCONbits	set	4036
  2122  0000                     _T5CONbits	set	4035
  2123  0000                     _T5CON	set	4035
  2124  0000                     _TMR5L	set	4033
  2125  0000                     _TMR5H	set	4034
  2126  0000                     _T5CLK	set	4038
  2127  0000                     _T5GATE	set	4037
  2128  0000                     _T5GCON	set	4036
  2129  0000                     _T3GCONbits	set	4042
  2130  0000                     _T3CONbits	set	4041
  2131  0000                     _T3CON	set	4041
  2132  0000                     _TMR3L	set	4039
  2133  0000                     _TMR3H	set	4040
  2134  0000                     _T3CLK	set	4044
  2135  0000                     _T3GATE	set	4043
  2136  0000                     _T3GCON	set	4042
  2137  0000                     _T1GCONbits	set	4048
  2138  0000                     _T1CONbits	set	4047
  2139  0000                     _T1CON	set	4047
  2140  0000                     _TMR1L	set	4045
  2141  0000                     _TMR1H	set	4046
  2142  0000                     _T1CLK	set	4050
  2143  0000                     _T1GATE	set	4049
  2144  0000                     _T1GCON	set	4048
  2145  0000                     _NVMDAT	set	3968
  2146  0000                     _NVMADRL	set	3966
  2147  0000                     _NVMADRH	set	3967
  2148  0000                     _NVMCON2	set	3970
  2149  0000                     _TABLAT	set	4085
  2150  0000                     _TBLPTRL	set	4086
  2151  0000                     _TBLPTRH	set	4087
  2152  0000                     _TBLPTRU	set	4088
  2153  0000                     _NVMCON1bits	set	3969
  2154  0000                     _INTCONbits	set	4082
  2155  0000                     _TX1REG	set	3994
  2156  0000                     _RC1REG	set	3993
  2157  0000                     _RC1STAbits	set	3997
  2158  0000                     _SP1BRGH	set	3996
  2159  0000                     _SP1BRGL	set	3995
  2160  0000                     _TX1STA	set	3998
  2161  0000                     _RC1STA	set	3997
  2162  0000                     _BAUD1CON	set	3999
  2163  0000                     _TRISD	set	3979
  2164  0000                     _TRISC	set	3978
  2165  0000                     _TRISB	set	3977
  2166  0000                     _TRISA	set	3976
  2167  0000                     _TRISE	set	3980
  2168  0000                     _LATC	set	3973
  2169  0000                     _LATB	set	3972
  2170  0000                     _LATA	set	3971
  2171  0000                     _LATD	set	3974
  2172  0000                     _LATE	set	3975
  2173  0000                     _LATA6	set	31774
  2174  0000                     _LATA7	set	31775
  2175                           
  2176                           	psect	nvCOMRAMh
  2177  00004C                     __pnvCOMRAMh:
  2178                           	opt stack 0
  2179  00004C                     _count:
  2180                           	opt stack 0
  2181  00004C                     	ds	1
  2182                           
  2183                           ; #config settings
  2184  0000                     
  2185                           	psect	cinit
  2186  011A06                     __pcinit:
  2187                           	opt stack 0
  2188  011A06                     start_initialization:
  2189                           	opt stack 0
  2190  011A06                     __initialization:
  2191                           	opt stack 0
  2192                           
  2193                           ; Initialize objects allocated to BANK0 (1 bytes)
  2194                           ; load TBLPTR registers with __pidataBANK0
  2195  011A06  0E14               	movlw	low __pidataBANK0
  2196  011A08  6EF6               	movwf	tblptrl,c
  2197  011A0A  0E20               	movlw	high __pidataBANK0
  2198  011A0C  6EF7               	movwf	tblptrh,c
  2199  011A0E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2200  011A10  6EF8               	movwf	tblptru,c
  2201  011A12  0009               	tblrd		*+	;fetch initializer
  2202  011A14  CFF5 F0C0          	movff	tablat,__pdataBANK0
  2203                           
  2204                           ; Initialize objects allocated to COMRAMh (1 bytes)
  2205                           ; load TBLPTR registers with __pidataCOMRAMh
  2206  011A18  0E15               	movlw	low __pidataCOMRAMh
  2207  011A1A  6EF6               	movwf	tblptrl,c
  2208  011A1C  0E20               	movlw	high __pidataCOMRAMh
  2209  011A1E  6EF7               	movwf	tblptrh,c
  2210  011A20  0E01               	movlw	low (__pidataCOMRAMh shr (0+16))
  2211  011A22  6EF8               	movwf	tblptru,c
  2212  011A24  0009               	tblrd		*+	;fetch initializer
  2213  011A26  CFF5 F04D          	movff	tablat,__pdataCOMRAMh
  2214                           
  2215                           ; Clear objects allocated to BANK0 (71 bytes)
  2216  011A2A  EE00  F060         	lfsr	0,__pbssBANK0
  2217  011A2E  0E47               	movlw	71
  2218  011A30                     clear_0:
  2219  011A30  6AEE               	clrf	postinc0,c
  2220  011A32  06E8               	decf	wreg,f,c
  2221  011A34  E1FD               	bnz	clear_0
  2222                           
  2223                           ; Clear objects allocated to COMRAMh (30 bytes)
  2224  011A36  EE00  F02E         	lfsr	0,__pbssCOMRAMh
  2225  011A3A  0E1E               	movlw	30
  2226  011A3C                     clear_1:
  2227  011A3C  6AEE               	clrf	postinc0,c
  2228  011A3E  06E8               	decf	wreg,f,c
  2229  011A40  E1FD               	bnz	clear_1
  2230                           
  2231                           ; Clear objects allocated to COMRAMl (1 bytes)
  2232  011A42  6A4E               	clrf	__pbssCOMRAMl& (0+255),c
  2233  011A44                     end_of_initialization:
  2234                           	opt stack 0
  2235  011A44                     __end_of__initialization:
  2236                           	opt stack 0
  2237  011A44  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2238  011A46  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2239  011A48  0100               	movlb	0
  2240  011A4A  EF00  F080         	goto	_main	;jump to C main() function
  2241                           tblptru	equ	0xFF8
  2242                           tblptrh	equ	0xFF7
  2243                           tblptrl	equ	0xFF6
  2244                           tablat	equ	0xFF5
  2245                           postinc0	equ	0xFEE
  2246                           wreg	equ	0xFE8
  2247                           
  2248                           	psect	bssCOMRAMh
  2249  00002E                     __pbssCOMRAMh:
  2250                           	opt stack 0
  2251  00002E                     _venflags:
  2252                           	opt stack 0
  2253  00002E                     	ds	3
  2254  000031                     _dbcount:
  2255                           	opt stack 0
  2256  000031                     	ds	2
  2257  000033                     _outcoins:
  2258                           	opt stack 0
  2259  000033                     	ds	1
  2260  000034                     _venderr:
  2261                           	opt stack 0
  2262  000034                     	ds	1
  2263  000035                     _senschk:
  2264                           	opt stack 0
  2265  000035                     	ds	1
  2266  000036                     _senspos:
  2267                           	opt stack 0
  2268  000036                     	ds	1
  2269  000037                     _sensorval:
  2270                           	opt stack 0
  2271  000037                     	ds	1
  2272  000038                     _vendprice:
  2273                           	opt stack 0
  2274  000038                     	ds	1
  2275  000039                     _buttons:
  2276                           	opt stack 0
  2277  000039                     	ds	1
  2278  00003A                     _cash:
  2279                           	opt stack 0
  2280  00003A                     	ds	1
  2281  00003B                     _credit:
  2282                           	opt stack 0
  2283  00003B                     	ds	1
  2284  00003C                     _noteen_byte:
  2285                           	opt stack 0
  2286  00003C                     	ds	1
  2287  00003D                     _noteen:
  2288                           	opt stack 0
  2289  00003D                     	ds	1
  2290  00003E                     _mdbflags:
  2291                           	opt stack 0
  2292  00003E                     	ds	1
  2293  00003F                     _chkbyte:
  2294                           	opt stack 0
  2295  00003F                     	ds	1
  2296  000040                     _notebyte:
  2297                           	opt stack 0
  2298  000040                     	ds	1
  2299  000041                     _mcount:
  2300                           	opt stack 0
  2301  000041                     	ds	1
  2302  000042                     _dspposition:
  2303                           	opt stack 0
  2304  000042                     	ds	1
  2305  000043                     _ercode:
  2306                           	opt stack 0
  2307  000043                     	ds	1
  2308  000044                     _stradd:
  2309                           	opt stack 0
  2310  000044                     	ds	1
  2311  000045                     _lcdata:
  2312                           	opt stack 0
  2313  000045                     	ds	1
  2314  000046                     _bflag:
  2315                           	opt stack 0
  2316  000046                     	ds	1
  2317  000047                     _pnvcash:
  2318                           	opt stack 0
  2319  000047                     	ds	3
  2320  00004A                     _pvcash:
  2321                           	opt stack 0
  2322  00004A                     	ds	2
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           postinc0	equ	0xFEE
  2328                           wreg	equ	0xFE8
  2329                           
  2330                           	psect	dataCOMRAMh
  2331  00004D                     __pdataCOMRAMh:
  2332                           	opt stack 0
  2333  00004D                     _notenum:
  2334                           	opt stack 0
  2335  00004D                     	ds	1
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           
  2343                           	psect	bssCOMRAMl
  2344  00004E                     __pbssCOMRAMl:
  2345                           	opt stack 0
  2346  00004E                     _cctflags:
  2347                           	opt stack 0
  2348  00004E                     	ds	1
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           postinc0	equ	0xFEE
  2354                           wreg	equ	0xFE8
  2355                           
  2356                           	psect	bssBANK0
  2357  000060                     __pbssBANK0:
  2358                           	opt stack 0
  2359  000060                     _mdbdata:
  2360                           	opt stack 0
  2361  000060                     	ds	32
  2362  000080                     _pricevend:
  2363                           	opt stack 0
  2364  000080                     	ds	8
  2365  000088                     _tvends:
  2366                           	opt stack 0
  2367  000088                     	ds	8
  2368  000090                     _nvcash:
  2369                           	opt stack 0
  2370  000090                     	ds	3
  2371  000093                     _hpserial:
  2372                           	opt stack 0
  2373  000093                     	ds	3
  2374  000096                     _hexnum:
  2375                           	opt stack 0
  2376  000096                     	ds	3
  2377  000099                     _vcashout:
  2378                           	opt stack 0
  2379  000099                     	ds	2
  2380  00009B                     _vcash:
  2381                           	opt stack 0
  2382  00009B                     	ds	2
  2383  00009D                     _change:
  2384                           	opt stack 0
  2385  00009D                     	ds	1
  2386  00009E                     _command:
  2387                           	opt stack 0
  2388  00009E                     	ds	1
  2389  00009F                     _nobytes:
  2390                           	opt stack 0
  2391  00009F                     	ds	1
  2392  0000A0                     _dest:
  2393                           	opt stack 0
  2394  0000A0                     	ds	1
  2395  0000A1                     _mdbtxbyte:
  2396                           	opt stack 0
  2397  0000A1                     	ds	1
  2398  0000A2                     _errorflags:
  2399                           	opt stack 0
  2400  0000A2                     	ds	1
  2401  0000A3                     _slvadd:
  2402                           	opt stack 0
  2403  0000A3                     	ds	1
  2404  0000A4                     _lcdaddress:
  2405                           	opt stack 0
  2406  0000A4                     	ds	1
  2407  0000A5                     _lcdline:
  2408                           	opt stack 0
  2409  0000A5                     	ds	1
  2410  0000A6                     _lcdfunc:
  2411                           	opt stack 0
  2412  0000A6                     	ds	1
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           
  2420                           	psect	dataBANK0
  2421  0000C0                     __pdataBANK0:
  2422                           	opt stack 0
  2423  0000C0                     _hopercount:
  2424                           	opt stack 0
  2425  0000C0                     	ds	1
  2426                           tblptru	equ	0xFF8
  2427                           tblptrh	equ	0xFF7
  2428                           tblptrl	equ	0xFF6
  2429                           tablat	equ	0xFF5
  2430                           postinc0	equ	0xFEE
  2431                           wreg	equ	0xFE8
  2432                           
  2433                           	psect	cstackBANK0
  2434  0000A7                     __pcstackBANK0:
  2435                           	opt stack 0
  2436  0000A7                     Link_chan@chanbit:
  2437                           	opt stack 0
  2438  0000A7                     off_sens@channel:
  2439                           	opt stack 0
  2440  0000A7                     displ_hex@value:
  2441                           	opt stack 0
  2442                           
  2443                           ; 8 bytes @ 0x0
  2444  0000A7                     	ds	1
  2445  0000A8                     Link_chan@channel:
  2446                           	opt stack 0
  2447  0000A8                     off_sens@chanbit:
  2448                           	opt stack 0
  2449                           
  2450                           ; 1 bytes @ 0x1
  2451  0000A8                     	ds	1
  2452  0000A9                     Link_chan@linkflags:
  2453                           	opt stack 0
  2454  0000A9                     off_sens@senseflags:
  2455                           	opt stack 0
  2456                           
  2457                           ; 1 bytes @ 0x2
  2458  0000A9                     	ds	1
  2459  0000AA                     ??_Chan_link:
  2460                           
  2461                           ; 1 bytes @ 0x3
  2462  0000AA                     	ds	5
  2463  0000AF                     displ_hex@hexnumsave:
  2464                           	opt stack 0
  2465                           
  2466                           ; 3 bytes @ 0x8
  2467  0000AF                     	ds	3
  2468  0000B2                     displ_hex@i:
  2469                           	opt stack 0
  2470                           
  2471                           ; 1 bytes @ 0xB
  2472  0000B2                     	ds	1
  2473  0000B3                     set_price@buttons:
  2474                           	opt stack 0
  2475  0000B3                     Vend_timeset@chantime:
  2476                           	opt stack 0
  2477                           
  2478                           ; 1 bytes @ 0xC
  2479  0000B3                     	ds	1
  2480  0000B4                     set_price@channel:
  2481                           	opt stack 0
  2482  0000B4                     Vend_timeset@channel:
  2483                           	opt stack 0
  2484                           
  2485                           ; 1 bytes @ 0xD
  2486  0000B4                     	ds	1
  2487  0000B5                     ??_main:
  2488                           
  2489                           ; 1 bytes @ 0xE
  2490  0000B5                     	ds	2
  2491  0000B7                     main@channel:
  2492                           	opt stack 0
  2493                           
  2494                           ; 1 bytes @ 0x10
  2495  0000B7                     	ds	1
  2496                           tblptru	equ	0xFF8
  2497                           tblptrh	equ	0xFF7
  2498                           tblptrl	equ	0xFF6
  2499                           tablat	equ	0xFF5
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           
  2503                           	psect	cstackCOMRAMh
  2504  00000B                     __pcstackCOMRAMh:
  2505                           	opt stack 0
  2506  00000B                     ??_INTERRUPT_InterruptManagerHigh:
  2507  00000B                     
  2508                           ; 1 bytes @ 0x0
  2509  00000B                     	ds	18
  2510  00001D                     ??_TMR3_Initialize:
  2511  00001D                     ??_TMR5_Initialize:
  2512  00001D                     ??_TMR1_Initialize:
  2513  00001D                     ??_TMR0_Initialize:
  2514  00001D                     ??_butin:
  2515  00001D                     ?___ltdiv:
  2516                           	opt stack 0
  2517  00001D                     ?___ltmod:
  2518                           	opt stack 0
  2519  00001D                     EUSART1_Write@txData:
  2520                           	opt stack 0
  2521  00001D                     DAC1_SetOutput@inputData:
  2522                           	opt stack 0
  2523  00001D                     read_busy@savelate:
  2524                           	opt stack 0
  2525  00001D                     Read_Service@senval:
  2526                           	opt stack 0
  2527  00001D                     get_channel@channel:
  2528                           	opt stack 0
  2529  00001D                     init_mdbdata@initdata:
  2530                           	opt stack 0
  2531  00001D                     DATAEE_WriteByte@bAdd:
  2532                           	opt stack 0
  2533  00001D                     DATAEE_ReadByte@bAdd:
  2534                           	opt stack 0
  2535  00001D                     ___ltdiv@dividend:
  2536                           	opt stack 0
  2537  00001D                     ___ltmod@dividend:
  2538                           	opt stack 0
  2539                           
  2540                           ; 3 bytes @ 0x12
  2541  00001D                     	ds	1
  2542  00001E                     read_busy@savelatd:
  2543                           	opt stack 0
  2544  00001E                     butin@butons:
  2545                           	opt stack 0
  2546  00001E                     get_channel@butons:
  2547                           	opt stack 0
  2548  00001E                     init_mdbdata@i:
  2549                           	opt stack 0
  2550  00001E                     mdb_transmit@txbyte:
  2551                           	opt stack 0
  2552                           
  2553                           ; 1 bytes @ 0x13
  2554  00001E                     	ds	1
  2555  00001F                     ??_mdb_unlock:
  2556  00001F                     ??_butindb:
  2557  00001F                     DATAEE_WriteByte@bData:
  2558                           	opt stack 0
  2559  00001F                     lcd_write@savelatd:
  2560                           	opt stack 0
  2561  00001F                     mdb_comm@mcount:
  2562                           	opt stack 0
  2563  00001F                     Init_vendmem@chanlinkbits:
  2564                           	opt stack 0
  2565  00001F                     Read_NVstore@storeadd:
  2566                           	opt stack 0
  2567                           
  2568                           ; 2 bytes @ 0x14
  2569  00001F                     	ds	1
  2570  000020                     DATAEE_WriteByte@GIEBitValue:
  2571                           	opt stack 0
  2572  000020                     lcd_write@lcdata:
  2573                           	opt stack 0
  2574  000020                     mdb_comm@slvadd:
  2575                           	opt stack 0
  2576  000020                     ___ltdiv@divisor:
  2577                           	opt stack 0
  2578  000020                     ___ltmod@divisor:
  2579                           	opt stack 0
  2580                           
  2581                           ; 3 bytes @ 0x15
  2582  000020                     	ds	1
  2583  000021                     lcd_dispadd@lcdaddress:
  2584                           	opt stack 0
  2585  000021                     credit_subtract@credit:
  2586                           	opt stack 0
  2587  000021                     butindb@butval:
  2588                           	opt stack 0
  2589  000021                     mdb_comm@i:
  2590                           	opt stack 0
  2591  000021                     Init_vendmem@chanlink:
  2592                           	opt stack 0
  2593  000021                     Write_NVstore@storeadd:
  2594                           	opt stack 0
  2595  000021                     Read_NVstore@storemem:
  2596                           	opt stack 0
  2597                           
  2598                           ; 2 bytes @ 0x16
  2599  000021                     	ds	1
  2600  000022                     ??_mdb_reset:
  2601  000022                     lcd_dispadd@lcdatasave:
  2602                           	opt stack 0
  2603  000022                     butindb@butt:
  2604                           	opt stack 0
  2605  000022                     mdb_poll@i:
  2606                           	opt stack 0
  2607                           
  2608                           ; 1 bytes @ 0x17
  2609  000022                     	ds	1
  2610  000023                     lcd_writeC@lcdata:
  2611                           	opt stack 0
  2612  000023                     Init_vendmem@i:
  2613                           	opt stack 0
  2614  000023                     Read_NVstore@storesize:
  2615                           	opt stack 0
  2616  000023                     mdb_reset@i:
  2617                           	opt stack 0
  2618  000023                     ___ltmod@counter:
  2619                           	opt stack 0
  2620  000023                     Write_NVstore@storemem:
  2621                           	opt stack 0
  2622  000023                     ___ltdiv@quotient:
  2623                           	opt stack 0
  2624                           
  2625                           ; 3 bytes @ 0x18
  2626  000023                     	ds	1
  2627  000024                     ??_displ_code:
  2628  000024                     lcd_test@character:
  2629                           	opt stack 0
  2630  000024                     Read_NVstore@i:
  2631                           	opt stack 0
  2632  000024                     mdb_reset@i_3733:
  2633                           	opt stack 0
  2634  000024                     lcd_string@lcdstring:
  2635                           	opt stack 0
  2636                           
  2637                           ; 2 bytes @ 0x19
  2638  000024                     	ds	1
  2639  000025                     ??_lcd_init:
  2640  000025                     ??_mdb_init:
  2641  000025                     Write_NVstore@storesize:
  2642                           	opt stack 0
  2643                           
  2644                           ; 1 bytes @ 0x1A
  2645  000025                     	ds	1
  2646  000026                     displ_code@ercode:
  2647                           	opt stack 0
  2648  000026                     lcd_string@lcdline:
  2649                           	opt stack 0
  2650  000026                     Write_NVstore@i:
  2651                           	opt stack 0
  2652  000026                     ___ltdiv@counter:
  2653                           	opt stack 0
  2654                           
  2655                           ; 1 bytes @ 0x1B
  2656  000026                     	ds	1
  2657  000027                     ??_lcd_string:
  2658  000027                     Update_cashaudit@addcash:
  2659                           	opt stack 0
  2660  000027                     mdb_init@i:
  2661                           	opt stack 0
  2662  000027                     displ_hex@hexnum:
  2663                           	opt stack 0
  2664                           
  2665                           ; 3 bytes @ 0x1C
  2666  000027                     	ds	1
  2667  000028                     credit_add@credit:
  2668                           	opt stack 0
  2669                           
  2670                           ; 1 bytes @ 0x1D
  2671  000028                     	ds	1
  2672  000029                     ??_Clear_cred:
  2673  000029                     ??_Reset_settings:
  2674  000029                     displ_lflags@linkflgs:
  2675                           	opt stack 0
  2676  000029                     displ_sflags@chanel:
  2677                           	opt stack 0
  2678  000029                     displ_nendis@note2disp:
  2679                           	opt stack 0
  2680  000029                     displ_note@notestring:
  2681                           	opt stack 0
  2682                           
  2683                           ; 2 bytes @ 0x1E
  2684  000029                     	ds	1
  2685  00002A                     displ_sens@dmsgpos:
  2686                           	opt stack 0
  2687  00002A                     displ_lflags@chanel:
  2688                           	opt stack 0
  2689  00002A                     displ_sflags@chanbit:
  2690                           	opt stack 0
  2691  00002A                     displ_time@channel:
  2692                           	opt stack 0
  2693  00002A                     displ_nendis@x:
  2694                           	opt stack 0
  2695  00002A                     displ_credit@cash:
  2696                           	opt stack 0
  2697  00002A                     displ_price@vendprice:
  2698                           	opt stack 0
  2699  00002A                     Update_Hopcoin@direction:
  2700                           	opt stack 0
  2701                           
  2702                           ; 1 bytes @ 0x1F
  2703  00002A                     	ds	1
  2704  00002B                     ??_set_price:
  2705  00002B                     displ_sens@smsgpos:
  2706                           	opt stack 0
  2707  00002B                     displ_lflags@lchan:
  2708                           	opt stack 0
  2709  00002B                     displ_sflags@senseflags:
  2710                           	opt stack 0
  2711  00002B                     displ_time@motortime:
  2712                           	opt stack 0
  2713  00002B                     Update_Hopcoin@newval:
  2714                           	opt stack 0
  2715  00002B                     enable_notes@notenum:
  2716                           	opt stack 0
  2717  00002B                     Reset_settings@chanlinkbits:
  2718                           	opt stack 0
  2719                           
  2720                           ; 2 bytes @ 0x20
  2721  00002B                     	ds	1
  2722  00002C                     ??_Vend_timeset:
  2723  00002C                     ??_Link_chan:
  2724  00002C                     Hopper_coin@coinval:
  2725                           	opt stack 0
  2726  00002C                     Sensor_set@dacpos:
  2727                           	opt stack 0
  2728                           
  2729                           ; 1 bytes @ 0x21
  2730  00002C                     	ds	1
  2731  00002D                     
  2732                           ; 1 bytes @ 0x22
  2733  00002D                     	ds	1
  2734  00002E                     tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           
  2741                           ; 1 bytes @ 0x23
  2742                           
  2743                           	psect	cstackCOMRAMl
  2744  000000                     __pcstackCOMRAMl:
  2745                           	opt stack 0
  2746  000000                     tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           
  2753                           ; 1 bytes @ 0x0
  2754 ;;
  2755 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2756 ;;
  2757 ;; *************** function _main *****************
  2758 ;; Defined at:
  2759 ;;		line 57 in file "main.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  channel         1   16[BANK0 ] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;Total ram usage:        3 bytes
  2778 ;; Hardware stack levels required when called:   13
  2779 ;; This function calls:
  2780 ;;		_CMP1_GetOutputStatus
  2781 ;;		_DATAEE_ReadByte
  2782 ;;		_SYSTEM_Initialize
  2783 ;;		_butin
  2784 ;;		_credit_add
  2785 ;;		_credit_subtract
  2786 ;;		_displ_credit
  2787 ;;		_displ_noteer
  2788 ;;		_displ_price
  2789 ;;		_enter_service
  2790 ;;		_get_channel
  2791 ;;		_lcd_init
  2792 ;;		_lcd_string
  2793 ;;		_mdb_init
  2794 ;;		_mdb_poll
  2795 ;;		_price_check
  2796 ;;		_vend_init
  2797 ;; This function is called by:
  2798 ;;		Startup code after reset
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text0
  2803  010000                     __ptext0:
  2804                           	opt stack 0
  2805  010000                     _main:
  2806                           	opt stack 18
  2807                           
  2808                           ;main.c: 60: SYSTEM_Initialize();
  2809                           
  2810                           ;incstack = 0
  2811  010000  ECBE  F08D         	call	_SYSTEM_Initialize	;wreg free
  2812                           
  2813                           ;main.c: 62: lcd_init();
  2814  010004  ECA0  F087         	call	_lcd_init	;wreg free
  2815                           
  2816                           ;main.c: 63: vend_init();
  2817  010008  ECD9  F088         	call	_vend_init	;wreg free
  2818  01000C                     l1003:
  2819  01000C  F000               	nop		;# 
  2820                           
  2821                           ;main.c: 68: DAC1CON1 = 0x00;
  2822  01000E  0E00               	movlw	0
  2823  010010  010F               	movlb	15	; () banked
  2824  010012  6F34               	movwf	52,b	;volatile
  2825                           
  2826                           ; BSR set to: 15
  2827                           ;main.c: 69: if (!CMP1_GetOutputStatus())
  2828  010014  ECD9  F08F         	call	_CMP1_GetOutputStatus	;wreg free
  2829  010018  0900               	iorlw	0
  2830  01001A  B4D8               	btfsc	status,2,c
  2831                           
  2832                           ;main.c: 70: {
  2833                           ;main.c: 71: venflags.service = 1;
  2834  01001C  8E2E               	bsf	_venflags,7,c
  2835                           
  2836                           ;main.c: 73: }
  2837                           ;main.c: 74: DAC1CON1 = sensorval;
  2838  01001E  C037  FF34         	movff	_sensorval,3892	;volatile
  2839                           
  2840                           ;main.c: 76: if(venflags.service == 1)
  2841  010022  BE2E               	btfsc	_venflags,7,c
  2842                           
  2843                           ;main.c: 77: {
  2844                           ;main.c: 78: enter_service();
  2845  010024  EC45  F088         	call	_enter_service	;wreg free
  2846                           
  2847                           ;main.c: 79: }
  2848                           ;main.c: 81: if(venflags.inscoin == 1)
  2849  010028  A42E               	btfss	_venflags,2,c
  2850  01002A  D010               	goto	l1006
  2851                           
  2852                           ;main.c: 82: {
  2853                           ;main.c: 83: lcd_string(inscoin, line1);
  2854  01002C  0E26               	movlw	low _inscoin
  2855  01002E  6E24               	movwf	lcd_string@lcdstring,c
  2856  010030  0EFE               	movlw	high _inscoin
  2857  010032  6E25               	movwf	lcd_string@lcdstring+1,c
  2858  010034  0E8F               	movlw	low _line1
  2859  010036  6EF6               	movwf	tblptrl,c
  2860  010038                     	if	1	;There is more than 1 active tblptr byte
  2861  010038  0EFC               	movlw	high _line1
  2862  01003A  6EF7               	movwf	tblptrh,c
  2863  01003C                     	endif
  2864  01003C                     	if	1	;There are 3 active tblptr bytes
  2865  01003C  0E00               	movlw	low (_line1 shr (0+16))
  2866  01003E  6EF8               	movwf	tblptru,c
  2867  010040                     	endif
  2868  010040  0008               	tblrd		*
  2869  010042  CFF5 F026          	movff	tablat,lcd_string@lcdline
  2870  010046  EC46  F087         	call	_lcd_string	;wreg free
  2871                           
  2872                           ;main.c: 84: venflags.inscoin = 0;
  2873  01004A  942E               	bcf	_venflags,2,c
  2874  01004C                     l1006:
  2875                           
  2876                           ;main.c: 85: }
  2877                           ;main.c: 86: if(venflags.initialrun == 1)
  2878  01004C  AA2E               	btfss	_venflags,5,c
  2879  01004E  D007               	goto	l1007
  2880                           
  2881                           ;main.c: 87: {
  2882                           ;main.c: 88: credit_add(0x00);
  2883  010050  0E00               	movlw	0
  2884  010052  ECE3  F08B         	call	_credit_add
  2885                           
  2886                           ;main.c: 89: credit_subtract(0x00);
  2887  010056  0E00               	movlw	0
  2888  010058  EC3B  F08C         	call	_credit_subtract
  2889                           
  2890                           ;main.c: 90: venflags.initialrun = 0;
  2891  01005C  9A2E               	bcf	_venflags,5,c
  2892  01005E                     l1007:
  2893                           
  2894                           ;main.c: 92: }
  2895                           ;main.c: 93: if(venflags.credisplay == 1)
  2896  01005E  B82E               	btfsc	_venflags,4,c
  2897                           
  2898                           ;main.c: 94: {
  2899                           ;main.c: 95: displ_credit();
  2900  010060  EC2A  F08E         	call	_displ_credit	;wreg free
  2901                           
  2902                           ;main.c: 96: }
  2903                           ;main.c: 98: if(PIR4bits.TMR3IF)
  2904  010064  010E               	movlb	14	; () banked
  2905  010066  A5CE               	btfss	206,2,b	;volatile
  2906  010068  D02B               	goto	l1023
  2907                           
  2908                           ; BSR set to: 14
  2909                           ;main.c: 99: {
  2910                           ;main.c: 100: credit = mdb_poll();
  2911  01006A  EC93  F080         	call	_mdb_poll	;wreg free
  2912  01006E  6E3B               	movwf	_credit,c	;volatile
  2913                           
  2914                           ;main.c: 101: if(credit != 0x00)
  2915  010070  503B               	movf	_credit,w,c	;volatile
  2916  010072  B4D8               	btfsc	status,2,c
  2917  010074  D022               	goto	l1010
  2918                           
  2919                           ;main.c: 102: {
  2920                           ;main.c: 103: if(mdbflags.noteerr == 1)
  2921  010076  B23E               	btfsc	_mdbflags,1,c
  2922  010078  D00D               	goto	l1012
  2923  01007A  D01A               	goto	l1011
  2924  01007C  EC4B  F08B         	call	_mdb_init	;wreg free
  2925  010080  D003               	goto	l1018
  2926  010082                     l1015:
  2927                           
  2928                           ;main.c: 114: if(mdbflags.vending)
  2929  010082  A83E               	btfss	_mdbflags,4,c
  2930                           
  2931                           ;main.c: 118: else
  2932                           ;main.c: 119: {
  2933                           ;main.c: 120: mdb_init();
  2934                           
  2935                           ;main.c: 117: }
  2936                           
  2937                           ;main.c: 115: {
  2938                           ;main.c: 116: credit = 0;
  2939  010084  EC4B  F08B         	call	_mdb_init	;wreg free
  2940  010088                     l1018:
  2941                           
  2942                           ;main.c: 128: credit = 0;
  2943                           
  2944                           ;main.c: 127: case 0x0C : mdbflags.noteerr == 0;
  2945                           
  2946                           ;main.c: 126: break;
  2947                           
  2948                           ;main.c: 125: credit = 0;
  2949  010088  0E00               	movlw	0
  2950  01008A  6E3B               	movwf	_credit,c	;volatile
  2951                           
  2952                           ;main.c: 129: break;
  2953  01008C  D019               	goto	l1023
  2954  01008E  ECA9  F08E         	call	_displ_noteer	;wreg free
  2955                           
  2956                           ;main.c: 131: }
  2957  010092  D016               	goto	l1023
  2958  010094                     l1012:
  2959  010094  503B               	movf	_credit,w,c	;volatile
  2960                           
  2961                           ; Switch size 1, requested type "space"
  2962                           ; Number of cases is 4, Range of values is 6 to 16
  2963                           ; switch strategies available:
  2964                           ; Name         Instructions Cycles
  2965                           ; simple_byte           13     7 (average)
  2966                           ;	Chosen strategy is simple_byte
  2967  010096  0A06               	xorlw	6	; case 6
  2968  010098  B4D8               	btfsc	status,2,c
  2969  01009A  D7F0               	goto	l1013
  2970  01009C  0A0F               	xorlw	15	; case 9
  2971  01009E  B4D8               	btfsc	status,2,c
  2972  0100A0  D7F0               	goto	l1015
  2973  0100A2  0A05               	xorlw	5	; case 12
  2974  0100A4  B4D8               	btfsc	status,2,c
  2975  0100A6  D7F0               	goto	l1018
  2976  0100A8  0A1C               	xorlw	28	; case 16
  2977  0100AA  B4D8               	btfsc	status,2,c
  2978  0100AC  D7ED               	goto	l1018
  2979  0100AE  D7EF               	goto	l1020
  2980  0100B0                     l1011:
  2981                           
  2982                           ;main.c: 133: else
  2983                           ;main.c: 134: {
  2984                           ;main.c: 135: credit_add(credit);
  2985  0100B0  503B               	movf	_credit,w,c	;volatile
  2986  0100B2  ECE3  F08B         	call	_credit_add
  2987                           
  2988                           ;main.c: 136: venflags.iscredit = 1;
  2989  0100B6  802E               	bsf	_venflags,0,c
  2990                           
  2991                           ;main.c: 137: }
  2992                           ;main.c: 138: }
  2993  0100B8  D003               	goto	l1023
  2994  0100BA                     l1010:
  2995                           
  2996                           ;main.c: 139: else
  2997                           ;main.c: 140: {
  2998                           ;main.c: 141: if(mdbflags.noteerr == 1)
  2999  0100BA  B23E               	btfsc	_mdbflags,1,c
  3000                           
  3001                           ;main.c: 142: {
  3002                           ;main.c: 143: displ_noteer();
  3003  0100BC  ECA9  F08E         	call	_displ_noteer	;wreg free
  3004  0100C0                     l1023:
  3005                           
  3006                           ;main.c: 144: }
  3007                           ;main.c: 147: }
  3008                           ;main.c: 148: }
  3009                           ;main.c: 149: if(venflags.iscredit)
  3010  0100C0  A02E               	btfss	_venflags,0,c
  3011  0100C2  D003               	goto	l1024
  3012                           
  3013                           ;main.c: 150: {
  3014                           ;main.c: 151: price_check();
  3015  0100C4  EC08  F090         	call	_price_check	;wreg free
  3016                           
  3017                           ;main.c: 152: }
  3018  0100C8  D7A1               	goto	l1003
  3019  0100CA                     l1024:
  3020                           
  3021                           ;main.c: 153: else
  3022                           ;main.c: 154: {
  3023                           ;main.c: 155: if(butin() != 0)
  3024  0100CA  ECDE  F08C         	call	_butin	;wreg free
  3025  0100CE  0900               	iorlw	0
  3026  0100D0  B4D8               	btfsc	status,2,c
  3027  0100D2  D024               	goto	l1026
  3028                           
  3029                           ;main.c: 156: {
  3030                           ;main.c: 158: buttons = butin();
  3031  0100D4  ECDE  F08C         	call	_butin	;wreg free
  3032  0100D8  6E39               	movwf	_buttons,c	;volatile
  3033                           
  3034                           ;main.c: 159: if(!venflags.pricedisplay)
  3035  0100DA  B430               	btfsc	_venflags+2,2,c
  3036  0100DC  D797               	goto	l1003
  3037                           
  3038                           ;main.c: 160: {
  3039                           ;main.c: 161: uint8_t channel = get_channel(buttons);
  3040  0100DE  5039               	movf	_buttons,w,c	;volatile
  3041  0100E0  EC40  F08F         	call	_get_channel
  3042  0100E4  0100               	movlb	0	; () banked
  3043  0100E6  6FB7               	movwf	main@channel& (0+255),b
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;main.c: 162: vendprice = DATAEE_ReadByte(pricestore + channel);
  3047  0100E8  0E59               	movlw	low _pricestore
  3048  0100EA  6EF6               	movwf	tblptrl,c
  3049  0100EC                     	if	1	;There is more than 1 active tblptr byte
  3050  0100EC  0EFC               	movlw	high _pricestore
  3051  0100EE  6EF7               	movwf	tblptrh,c
  3052  0100F0                     	endif
  3053  0100F0                     	if	1	;There are 3 active tblptr bytes
  3054  0100F0  0E00               	movlw	low (_pricestore shr (0+16))
  3055  0100F2  6EF8               	movwf	tblptru,c
  3056  0100F4                     	endif
  3057  0100F4  0009               	tblrd		*+
  3058  0100F6  CFF5 F0B5          	movff	tablat,??_main
  3059  0100FA  0009               	tblrd		*+
  3060  0100FC  CFF5 F0B6          	movff	tablat,??_main+1
  3061  010100  51B7               	movf	main@channel& (0+255),w,b
  3062  010102  25B5               	addwf	??_main& (0+255),w,b
  3063  010104  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  3064  010106  0E00               	movlw	0
  3065  010108  21B6               	addwfc	(??_main+1)& (0+255),w,b
  3066  01010A  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  3067  01010C  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  3068  010110  6E38               	movwf	_vendprice,c	;volatile
  3069                           
  3070                           ;main.c: 163: displ_price(vendprice);
  3071  010112  5038               	movf	_vendprice,w,c	;volatile
  3072  010114  EC48  F08D         	call	_displ_price
  3073                           
  3074                           ;main.c: 164: venflags.pricedisplay = 1;
  3075  010118  8430               	bsf	_venflags+2,2,c
  3076                           
  3077                           ;main.c: 165: }
  3078                           ;main.c: 166: }
  3079  01011A  D778               	goto	l1003
  3080  01011C                     l1026:
  3081                           
  3082                           ;main.c: 167: else
  3083                           ;main.c: 168: {
  3084                           ;main.c: 169: if(venflags.pricedisplay)
  3085  01011C  A430               	btfss	_venflags+2,2,c
  3086  01011E  D776               	goto	l1003
  3087                           
  3088                           ;main.c: 170: {
  3089                           ;main.c: 171: venflags.pricedisplay = 0;
  3090  010120  9430               	bcf	_venflags+2,2,c
  3091                           
  3092                           ;main.c: 172: venflags.inscoin = 1;
  3093  010122  842E               	bsf	_venflags,2,c
  3094  010124  D773               	goto	l1003
  3095  010126                     __end_of_main:
  3096                           	opt stack 0
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           status	equ	0xFD8
  3104                           
  3105 ;; *************** function _vend_init *****************
  3106 ;; Defined at:
  3107 ;;		line 26 in file "vend.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    8
  3128 ;; This function calls:
  3129 ;;		_DAC1_SetOutput
  3130 ;;		_DATAEE_ReadByte
  3131 ;;		_Init_vendmem
  3132 ;;		_credit_check
  3133 ;;		_lcd_string
  3134 ;;		_mdb_init
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text1
  3141  0111B2                     __ptext1:
  3142                           	opt stack 0
  3143  0111B2                     _vend_init:
  3144                           	opt stack 22
  3145                           
  3146                           ;vend.c: 29: ((uint8_t*) &venderr)[0] = DATAEE_ReadByte(venderrors);
  3147                           
  3148                           ;incstack = 0
  3149  0111B2  0E57               	movlw	low _venderrors
  3150  0111B4  6EF6               	movwf	tblptrl,c
  3151  0111B6                     	if	1	;There is more than 1 active tblptr byte
  3152  0111B6  0EFC               	movlw	high _venderrors
  3153  0111B8  6EF7               	movwf	tblptrh,c
  3154  0111BA                     	endif
  3155  0111BA                     	if	1	;There are 3 active tblptr bytes
  3156  0111BA  0E00               	movlw	low (_venderrors shr (0+16))
  3157  0111BC  6EF8               	movwf	tblptru,c
  3158  0111BE                     	endif
  3159  0111BE  0009               	tblrd		*+
  3160  0111C0  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3161  0111C4  000A               	tblrd		*-
  3162  0111C6  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3163  0111CA  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  3164  0111CE  6E34               	movwf	_venderr,c
  3165                           
  3166                           ;vend.c: 31: Init_vendmem();
  3167  0111D0  ECDE  F08A         	call	_Init_vendmem	;wreg free
  3168                           
  3169                           ;vend.c: 33: sensorval = DATAEE_ReadByte(sensval);
  3170  0111D4  0E53               	movlw	low _sensval
  3171  0111D6  6EF6               	movwf	tblptrl,c
  3172  0111D8                     	if	1	;There is more than 1 active tblptr byte
  3173  0111D8  0EFC               	movlw	high _sensval
  3174  0111DA  6EF7               	movwf	tblptrh,c
  3175  0111DC                     	endif
  3176  0111DC                     	if	1	;There are 3 active tblptr bytes
  3177  0111DC  0E00               	movlw	low (_sensval shr (0+16))
  3178  0111DE  6EF8               	movwf	tblptru,c
  3179  0111E0                     	endif
  3180  0111E0  0009               	tblrd		*+
  3181  0111E2  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3182  0111E6  000A               	tblrd		*-
  3183  0111E8  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3184  0111EC  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  3185  0111F0  6E37               	movwf	_sensorval,c	;volatile
  3186                           
  3187                           ;vend.c: 34: DAC1_SetOutput(sensorval);
  3188  0111F2  5037               	movf	_sensorval,w,c	;volatile
  3189  0111F4  ECED  F08F         	call	_DAC1_SetOutput
  3190                           
  3191                           ;vend.c: 39: lcd_string(initnote, line1);
  3192  0111F8  0EA9               	movlw	low _initnote
  3193  0111FA  6E24               	movwf	lcd_string@lcdstring,c
  3194  0111FC  0EFE               	movlw	high _initnote
  3195  0111FE  6E25               	movwf	lcd_string@lcdstring+1,c
  3196  011200  0E8F               	movlw	low _line1
  3197  011202  6EF6               	movwf	tblptrl,c
  3198  011204                     	if	1	;There is more than 1 active tblptr byte
  3199  011204  0EFC               	movlw	high _line1
  3200  011206  6EF7               	movwf	tblptrh,c
  3201  011208                     	endif
  3202  011208                     	if	1	;There are 3 active tblptr bytes
  3203  011208  0E00               	movlw	low (_line1 shr (0+16))
  3204  01120A  6EF8               	movwf	tblptru,c
  3205  01120C                     	endif
  3206  01120C  0008               	tblrd		*
  3207  01120E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3208  011212  EC46  F087         	call	_lcd_string	;wreg free
  3209                           
  3210                           ;vend.c: 40: mdb_init();
  3211  011216  EC4B  F08B         	call	_mdb_init	;wreg free
  3212                           
  3213                           ;vend.c: 42: venflags.pricedisplay = 0;
  3214  01121A  9430               	bcf	_venflags+2,2,c
  3215                           
  3216                           ;vend.c: 43: venflags.service = 0;
  3217  01121C  9E2E               	bcf	_venflags,7,c
  3218                           
  3219                           ;vend.c: 44: venflags.initialrun = 1;
  3220  01121E  8A2E               	bsf	_venflags,5,c
  3221                           
  3222                           ;vend.c: 45: if(credit_check() == 0)
  3223  011220  EC10  F08F         	call	_credit_check	;wreg free
  3224  011224  0900               	iorlw	0
  3225  011226  A4D8               	btfss	status,2,c
  3226  011228  D005               	goto	l2002
  3227                           
  3228                           ;vend.c: 46: {
  3229                           ;vend.c: 47: venflags.iscredit = 0;
  3230  01122A  902E               	bcf	_venflags,0,c
  3231                           
  3232                           ;vend.c: 48: venflags.inscoin = 1;
  3233  01122C  842E               	bsf	_venflags,2,c
  3234                           
  3235                           ;vend.c: 49: venflags.credisplay = 0;
  3236  01122E  982E               	bcf	_venflags,4,c
  3237                           
  3238                           ;vend.c: 50: mdbflags.noteerr = 0;
  3239  011230  923E               	bcf	_mdbflags,1,c
  3240                           
  3241                           ;vend.c: 51: }
  3242  011232  0012               	return	
  3243  011234                     l2002:
  3244                           
  3245                           ;vend.c: 52: else
  3246                           ;vend.c: 53: {
  3247                           ;vend.c: 54: venflags.iscredit = 1;
  3248  011234  802E               	bsf	_venflags,0,c
  3249                           
  3250                           ;vend.c: 55: venflags.inscoin = 0;
  3251  011236  942E               	bcf	_venflags,2,c
  3252                           
  3253                           ;vend.c: 56: venflags.credisplay = 1;
  3254  011238  882E               	bsf	_venflags,4,c
  3255                           
  3256                           ;vend.c: 57: mdbflags.noteerr = 0;
  3257  01123A  923E               	bcf	_mdbflags,1,c
  3258  01123C  0012               	return	
  3259  01123E                     __end_of_vend_init:
  3260                           	opt stack 0
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           status	equ	0xFD8
  3268                           
  3269 ;; *************** function _mdb_init *****************
  3270 ;; Defined at:
  3271 ;;		line 21 in file "mdb.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  i               1   28[COMRAM] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;Total ram usage:        3 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    6
  3292 ;; This function calls:
  3293 ;;		_DATAEE_ReadByte
  3294 ;;		_eusartmdb_Initialize
  3295 ;;		_mdb_comm
  3296 ;;		_mdb_noten
  3297 ;;		_mdb_reset
  3298 ;;		_mdb_security
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;;		_vend_init
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text2
  3306  011696                     __ptext2:
  3307                           	opt stack 0
  3308  011696                     _mdb_init:
  3309                           	opt stack 23
  3310                           
  3311                           ;mdb.c: 23: _delay((unsigned long)((250)*(12000000/4000.0)));
  3312                           
  3313                           ;incstack = 0
  3314  011696  0E04               	movlw	4
  3315  011698  6E26               	movwf	(??_mdb_init+1)& (0+255),c
  3316  01169A  0ECF               	movlw	207
  3317  01169C  6E25               	movwf	??_mdb_init& (0+255),c
  3318  01169E  0E02               	movlw	2
  3319  0116A0                     u4017:
  3320  0116A0  2EE8               	decfsz	wreg,f,c
  3321  0116A2  D7FE               	bra	u4017
  3322  0116A4  2E25               	decfsz	??_mdb_init& (0+255),f,c
  3323  0116A6  D7FC               	bra	u4017
  3324  0116A8  2E26               	decfsz	(??_mdb_init+1)& (0+255),f,c
  3325  0116AA  D7FA               	bra	u4017
  3326                           
  3327                           ;mdb.c: 24: noteen_byte = DATAEE_ReadByte(notebits);
  3328  0116AC  0E55               	movlw	low _notebits
  3329  0116AE  6EF6               	movwf	tblptrl,c
  3330  0116B0                     	if	1	;There is more than 1 active tblptr byte
  3331  0116B0  0EFC               	movlw	high _notebits
  3332  0116B2  6EF7               	movwf	tblptrh,c
  3333  0116B4                     	endif
  3334  0116B4                     	if	1	;There are 3 active tblptr bytes
  3335  0116B4  0E00               	movlw	low (_notebits shr (0+16))
  3336  0116B6  6EF8               	movwf	tblptru,c
  3337  0116B8                     	endif
  3338  0116B8  0009               	tblrd		*+
  3339  0116BA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3340  0116BE  000A               	tblrd		*-
  3341  0116C0  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3342  0116C4  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  3343  0116C8  6E3C               	movwf	_noteen_byte,c	;volatile
  3344                           
  3345                           ;mdb.c: 25: ((uint8_t*) &noteen)[0] = noteen_byte;
  3346  0116CA  C03C  F03D         	movff	_noteen_byte,_noteen	;volatile
  3347                           
  3348                           ;mdb.c: 26: eusartmdb_Initialize();
  3349  0116CE  EC8E  F08F         	call	_eusartmdb_Initialize	;wreg free
  3350                           
  3351                           ;mdb.c: 27: mdbflags.noteerr = 0;
  3352  0116D2  923E               	bcf	_mdbflags,1,c
  3353                           
  3354                           ;mdb.c: 28: mdbflags.isdata = 0;
  3355  0116D4  903E               	bcf	_mdbflags,0,c
  3356                           
  3357                           ;mdb.c: 29: mdb_reset();
  3358  0116D6  EC64  F089         	call	_mdb_reset	;wreg free
  3359                           
  3360                           ;mdb.c: 30: mdb_noten();
  3361  0116DA  EC68  F08D         	call	_mdb_noten	;wreg free
  3362                           
  3363                           ;mdb.c: 31: mdb_security();
  3364  0116DE  EC21  F08F         	call	_mdb_security	;wreg free
  3365                           
  3366                           ;mdb.c: 32: uint8_t i = mdb_comm(note_poll, 0x00);
  3367  0116E2  0E00               	movlw	0
  3368  0116E4  6E1F               	movwf	mdb_comm@mcount,c
  3369  0116E6  0E88               	movlw	low _note_poll
  3370  0116E8  6EF6               	movwf	tblptrl,c
  3371  0116EA                     	if	1	;There is more than 1 active tblptr byte
  3372  0116EA  0EFC               	movlw	high _note_poll
  3373  0116EC  6EF7               	movwf	tblptrh,c
  3374  0116EE                     	endif
  3375  0116EE                     	if	1	;There are 3 active tblptr bytes
  3376  0116EE  0E00               	movlw	low (_note_poll shr (0+16))
  3377  0116F0  6EF8               	movwf	tblptru,c
  3378  0116F2                     	endif
  3379  0116F2  0008               	tblrd		*
  3380  0116F4  50F5               	movf	tablat,w,c
  3381  0116F6  EC36  F083         	call	_mdb_comm
  3382  0116FA  6E27               	movwf	mdb_init@i,c
  3383  0116FC  0012               	return		;funcret
  3384  0116FE                     __end_of_mdb_init:
  3385                           	opt stack 0
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           postinc0	equ	0xFEE
  3391                           wreg	equ	0xFE8
  3392                           status	equ	0xFD8
  3393                           
  3394 ;; *************** function _mdb_security *****************
  3395 ;; Defined at:
  3396 ;;		line 151 in file "mdb.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    5
  3417 ;; This function calls:
  3418 ;;		_init_mdbdata
  3419 ;;		_mdb_comm
  3420 ;; This function is called by:
  3421 ;;		_mdb_init
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text3
  3426  011E42                     __ptext3:
  3427                           	opt stack 0
  3428  011E42                     _mdb_security:
  3429                           	opt stack 23
  3430                           
  3431                           ;mdb.c: 153: init_mdbdata(0x00);
  3432                           
  3433                           ;incstack = 0
  3434  011E42  0E00               	movlw	0
  3435  011E44  ECEC  F08E         	call	_init_mdbdata
  3436                           
  3437                           ;mdb.c: 154: mdb_comm(note_security, 0x01);
  3438  011E48  0E01               	movlw	1
  3439  011E4A  6E1F               	movwf	mdb_comm@mcount,c
  3440  011E4C  0E89               	movlw	low _note_security
  3441  011E4E  6EF6               	movwf	tblptrl,c
  3442  011E50                     	if	1	;There is more than 1 active tblptr byte
  3443  011E50  0EFC               	movlw	high _note_security
  3444  011E52  6EF7               	movwf	tblptrh,c
  3445  011E54                     	endif
  3446  011E54                     	if	1	;There are 3 active tblptr bytes
  3447  011E54  0E00               	movlw	low (_note_security shr (0+16))
  3448  011E56  6EF8               	movwf	tblptru,c
  3449  011E58                     	endif
  3450  011E58  0008               	tblrd		*
  3451  011E5A  50F5               	movf	tablat,w,c
  3452  011E5C  EC36  F083         	call	_mdb_comm
  3453  011E60  0012               	return		;funcret
  3454  011E62                     __end_of_mdb_security:
  3455                           	opt stack 0
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           postinc0	equ	0xFEE
  3461                           wreg	equ	0xFE8
  3462                           status	equ	0xFD8
  3463                           
  3464 ;; *************** function _mdb_reset *****************
  3465 ;; Defined at:
  3466 ;;		line 36 in file "mdb.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  i               1   24[COMRAM] unsigned char 
  3471 ;;  i               1   25[COMRAM] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      unsigned char 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;Total ram usage:        3 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    5
  3488 ;; This function calls:
  3489 ;;		_mdb_comm
  3490 ;; This function is called by:
  3491 ;;		_mdb_init
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text4
  3496  0112C8                     __ptext4:
  3497                           	opt stack 0
  3498  0112C8                     _mdb_reset:
  3499                           	opt stack 23
  3500                           
  3501                           ;mdb.c: 41: mdbflags.timeout = 1;
  3502                           
  3503                           ;incstack = 0
  3504  0112C8  863E               	bsf	_mdbflags,3,c
  3505                           
  3506                           ;mdb.c: 42: while(mdbflags.timeout)
  3507  0112CA  D00D               	goto	l2690
  3508  0112CC                     
  3509                           ;mdb.c: 43: {
  3510                           ;mdb.c: 44: uint8_t i = mdb_comm(note_reset, 0x00);
  3511  0112CC  0E00               	movlw	0
  3512  0112CE  6E1F               	movwf	mdb_comm@mcount,c
  3513  0112D0  0E8B               	movlw	low _note_reset
  3514  0112D2  6EF6               	movwf	tblptrl,c
  3515  0112D4                     	if	1	;There is more than 1 active tblptr byte
  3516  0112D4  0EFC               	movlw	high _note_reset
  3517  0112D6  6EF7               	movwf	tblptrh,c
  3518  0112D8                     	endif
  3519  0112D8                     	if	1	;There are 3 active tblptr bytes
  3520  0112D8  0E00               	movlw	low (_note_reset shr (0+16))
  3521  0112DA  6EF8               	movwf	tblptru,c
  3522  0112DC                     	endif
  3523  0112DC  0008               	tblrd		*
  3524  0112DE  50F5               	movf	tablat,w,c
  3525  0112E0  EC36  F083         	call	_mdb_comm
  3526  0112E4  6E23               	movwf	mdb_reset@i,c
  3527  0112E6                     l2690:
  3528  0112E6  B63E               	btfsc	_mdbflags,3,c
  3529  0112E8  D7F1               	goto	l2691
  3530  0112EA  F000               	nop		;# 
  3531                           
  3532                           ;mdb.c: 47: uint8_t i = mdb_comm(note_poll, 0x00);
  3533  0112EC  0E00               	movlw	0
  3534  0112EE  6E1F               	movwf	mdb_comm@mcount,c
  3535  0112F0  0E88               	movlw	low _note_poll
  3536  0112F2  6EF6               	movwf	tblptrl,c
  3537  0112F4                     	if	1	;There is more than 1 active tblptr byte
  3538  0112F4  0EFC               	movlw	high _note_poll
  3539  0112F6  6EF7               	movwf	tblptrh,c
  3540  0112F8                     	endif
  3541  0112F8                     	if	1	;There are 3 active tblptr bytes
  3542  0112F8  0E00               	movlw	low (_note_poll shr (0+16))
  3543  0112FA  6EF8               	movwf	tblptru,c
  3544  0112FC                     	endif
  3545  0112FC  0008               	tblrd		*
  3546  0112FE  50F5               	movf	tablat,w,c
  3547  011300  EC36  F083         	call	_mdb_comm
  3548  011304  6E24               	movwf	mdb_reset@i_3733,c
  3549                           
  3550                           ;mdb.c: 48: if(mdbdata[--i] == just_reset)
  3551  011306  0624               	decf	mdb_reset@i_3733,f,c
  3552  011308  5024               	movf	mdb_reset@i_3733,w,c
  3553  01130A  0D01               	mullw	1
  3554  01130C  0E60               	movlw	low _mdbdata
  3555  01130E  24F3               	addwf	prodl,w,c
  3556  011310  6ED9               	movwf	fsr2l,c
  3557  011312  0E00               	movlw	high _mdbdata
  3558  011314  20F4               	addwfc	prodh,w,c
  3559  011316  6EDA               	movwf	fsr2h,c
  3560  011318  50DF               	movf	indf2,w,c
  3561  01131A  6E22               	movwf	??_mdb_reset& (0+255),c
  3562  01131C  0E7E               	movlw	low _just_reset
  3563  01131E  6EF6               	movwf	tblptrl,c
  3564  011320                     	if	1	;There is more than 1 active tblptr byte
  3565  011320  0EFC               	movlw	high _just_reset
  3566  011322  6EF7               	movwf	tblptrh,c
  3567  011324                     	endif
  3568  011324                     	if	1	;There are 3 active tblptr bytes
  3569  011324  0E00               	movlw	low (_just_reset shr (0+16))
  3570  011326  6EF8               	movwf	tblptru,c
  3571  011328                     	endif
  3572  011328  0008               	tblrd		*
  3573  01132A  50F5               	movf	tablat,w,c
  3574  01132C  1822               	xorwf	??_mdb_reset,w,c
  3575  01132E  A4D8               	btfss	status,2,c
  3576  011330  0012               	return	
  3577                           
  3578                           ;mdb.c: 49: {
  3579                           ;mdb.c: 51: i = mdb_comm(note_poll, 0x00);
  3580  011332  0E00               	movlw	0
  3581  011334  6E1F               	movwf	mdb_comm@mcount,c
  3582  011336  0E88               	movlw	low _note_poll
  3583  011338  6EF6               	movwf	tblptrl,c
  3584  01133A                     	if	1	;There is more than 1 active tblptr byte
  3585  01133A  0EFC               	movlw	high _note_poll
  3586  01133C  6EF7               	movwf	tblptrh,c
  3587  01133E                     	endif
  3588  01133E                     	if	1	;There are 3 active tblptr bytes
  3589  01133E  0E00               	movlw	low (_note_poll shr (0+16))
  3590  011340  6EF8               	movwf	tblptru,c
  3591  011342                     	endif
  3592  011342  0008               	tblrd		*
  3593  011344  50F5               	movf	tablat,w,c
  3594  011346  EC36  F083         	call	_mdb_comm
  3595  01134A  6E24               	movwf	mdb_reset@i_3733,c
  3596  01134C  0012               	return	
  3597  01134E                     __end_of_mdb_reset:
  3598                           	opt stack 0
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           indf2	equ	0xFDF
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _mdb_noten *****************
  3613 ;; Defined at:
  3614 ;;		line 135 in file "mdb.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;Total ram usage:        0 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    5
  3635 ;; This function calls:
  3636 ;;		_init_mdbdata
  3637 ;;		_mdb_comm
  3638 ;; This function is called by:
  3639 ;;		_mdb_init
  3640 ;;		_note_disable
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text5
  3645  011AD0                     __ptext5:
  3646                           	opt stack 0
  3647  011AD0                     _mdb_noten:
  3648                           	opt stack 23
  3649                           
  3650                           ;mdb.c: 138: init_mdbdata(0x00);
  3651                           
  3652                           ;incstack = 0
  3653  011AD0  0E00               	movlw	0
  3654  011AD2  ECEC  F08E         	call	_init_mdbdata
  3655                           
  3656                           ;mdb.c: 140: mcount = 3;
  3657  011AD6  0E03               	movlw	3
  3658  011AD8  6E41               	movwf	_mcount,c
  3659                           
  3660                           ;mdb.c: 142: mdbdata[0] = 0x00;
  3661  011ADA  0E00               	movlw	0
  3662  011ADC  0100               	movlb	0	; () banked
  3663  011ADE  6F60               	movwf	_mdbdata& (0+255),b
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;mdb.c: 143: mdbdata[1] = 0x00;
  3667  011AE0  0E00               	movlw	0
  3668  011AE2  6F61               	movwf	(_mdbdata+1)& (0+255),b
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;mdb.c: 145: mdbdata[2] = noteen_byte;
  3672  011AE4  C03C  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;mdb.c: 147: mdbdata[3] = 0x00;
  3676  011AE8  0E00               	movlw	0
  3677  011AEA  6F63               	movwf	(_mdbdata+3)& (0+255),b
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;mdb.c: 148: mcount = mdb_comm(note_type, mcount);
  3681  011AEC  C041  F01F         	movff	_mcount,mdb_comm@mcount
  3682  011AF0  0E87               	movlw	low _note_type
  3683  011AF2  6EF6               	movwf	tblptrl,c
  3684  011AF4                     	if	1	;There is more than 1 active tblptr byte
  3685  011AF4  0EFC               	movlw	high _note_type
  3686  011AF6  6EF7               	movwf	tblptrh,c
  3687  011AF8                     	endif
  3688  011AF8                     	if	1	;There are 3 active tblptr bytes
  3689  011AF8  0E00               	movlw	low (_note_type shr (0+16))
  3690  011AFA  6EF8               	movwf	tblptru,c
  3691  011AFC                     	endif
  3692  011AFC  0008               	tblrd		*
  3693  011AFE  50F5               	movf	tablat,w,c
  3694  011B00  EC36  F083         	call	_mdb_comm
  3695  011B04  6E41               	movwf	_mcount,c
  3696                           
  3697                           ;mdb.c: 149: mdbflags.vending = 0;
  3698  011B06  983E               	bcf	_mdbflags,4,c
  3699  011B08  0012               	return		;funcret
  3700  011B0A                     __end_of_mdb_noten:
  3701                           	opt stack 0
  3702                           tblptru	equ	0xFF8
  3703                           tblptrh	equ	0xFF7
  3704                           tblptrl	equ	0xFF6
  3705                           tablat	equ	0xFF5
  3706                           prodh	equ	0xFF4
  3707                           prodl	equ	0xFF3
  3708                           postinc0	equ	0xFEE
  3709                           wreg	equ	0xFE8
  3710                           indf2	equ	0xFDF
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           
  3715 ;; *************** function _eusartmdb_Initialize *****************
  3716 ;; Defined at:
  3717 ;;		line 55 in file "eusart_mdb.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    2
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_mdb_init
  3742 ;;		_cctalk_init
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text6
  3747  011F1C                     __ptext6:
  3748                           	opt stack 0
  3749  011F1C                     _eusartmdb_Initialize:
  3750                           	opt stack 26
  3751                           
  3752                           ;eusart_mdb.c: 60: BAUD1CON = 0x08;
  3753                           
  3754                           ;incstack = 0
  3755  011F1C  0E08               	movlw	8
  3756  011F1E  6E9F               	movwf	3999,c	;volatile
  3757                           
  3758                           ;eusart_mdb.c: 63: RC1STA = 0xD0;
  3759  011F20  0ED0               	movlw	208
  3760  011F22  6E9D               	movwf	3997,c	;volatile
  3761                           
  3762                           ;eusart_mdb.c: 66: TX1STA = 0xEC;
  3763  011F24  0EEC               	movlw	236
  3764  011F26  6E9E               	movwf	3998,c	;volatile
  3765                           
  3766                           ;eusart_mdb.c: 69: SP1BRGL = 0x38;
  3767  011F28  0E38               	movlw	56
  3768  011F2A  6E9B               	movwf	3995,c	;volatile
  3769                           
  3770                           ;eusart_mdb.c: 72: SP1BRGH = 0x01;
  3771  011F2C  0E01               	movlw	1
  3772  011F2E  6E9C               	movwf	3996,c	;volatile
  3773  011F30  0012               	return		;funcret
  3774  011F32                     __end_of_eusartmdb_Initialize:
  3775                           	opt stack 0
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           postinc0	equ	0xFEE
  3783                           wreg	equ	0xFE8
  3784                           indf2	equ	0xFDF
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function _DAC1_SetOutput *****************
  3790 ;; Defined at:
  3791 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  inputData       1    wreg     unsigned char 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  inputData       1   18[COMRAM] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;Total ram usage:        1 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    2
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_vend_init
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text7
  3820  011FDA                     __ptext7:
  3821                           	opt stack 0
  3822  011FDA                     _DAC1_SetOutput:
  3823                           	opt stack 27
  3824                           
  3825                           ;incstack = 0
  3826                           ;DAC1_SetOutput@inputData stored from wreg
  3827  011FDA  6E1D               	movwf	DAC1_SetOutput@inputData,c
  3828                           
  3829                           ;dac1.c: 67: DAC1CON1 = inputData;
  3830  011FDC  C01D  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  3831  011FE0  0012               	return		;funcret
  3832  011FE2                     __end_of_DAC1_SetOutput:
  3833                           	opt stack 0
  3834                           tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           prodh	equ	0xFF4
  3839                           prodl	equ	0xFF3
  3840                           postinc0	equ	0xFEE
  3841                           wreg	equ	0xFE8
  3842                           indf2	equ	0xFDF
  3843                           fsr2h	equ	0xFDA
  3844                           fsr2l	equ	0xFD9
  3845                           status	equ	0xFD8
  3846                           
  3847 ;; *************** function _price_check *****************
  3848 ;; Defined at:
  3849 ;;		line 10 in file "dispense.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		None
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;Total ram usage:        0 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    2
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text8
  3878  012010                     __ptext8:
  3879                           	opt stack 0
  3880  012010                     _price_check:
  3881                           	opt stack 28
  3882                           
  3883                           ;incstack = 0
  3884  012010  0012               	return		;funcret
  3885  012012                     __end_of_price_check:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodh	equ	0xFF4
  3892                           prodl	equ	0xFF3
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           indf2	equ	0xFDF
  3896                           fsr2h	equ	0xFDA
  3897                           fsr2l	equ	0xFD9
  3898                           status	equ	0xFD8
  3899                           
  3900 ;; *************** function _mdb_poll *****************
  3901 ;; Defined at:
  3902 ;;		line 157 in file "mdb.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  i               1   23[COMRAM] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      unsigned char 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;Total ram usage:        1 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    5
  3923 ;; This function calls:
  3924 ;;		_TMR3_Initialize
  3925 ;;		_mdb_comm
  3926 ;; This function is called by:
  3927 ;;		_main
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text9
  3932  010126                     __ptext9:
  3933                           	opt stack 0
  3934  010126                     _mdb_poll:
  3935                           	opt stack 25
  3936                           
  3937                           ;mdb.c: 161: TMR3_Initialize();
  3938                           
  3939                           ;incstack = 0
  3940  010126  ECF4  F08D         	call	_TMR3_Initialize	;wreg free
  3941                           
  3942                           ;mdb.c: 162: uint8_t i = mdb_comm(note_poll, 0x00);
  3943  01012A  0E00               	movlw	0
  3944  01012C  6E1F               	movwf	mdb_comm@mcount,c
  3945  01012E  0E88               	movlw	low _note_poll
  3946  010130  6EF6               	movwf	tblptrl,c
  3947  010132                     	if	1	;There is more than 1 active tblptr byte
  3948  010132  0EFC               	movlw	high _note_poll
  3949  010134  6EF7               	movwf	tblptrh,c
  3950  010136                     	endif
  3951  010136                     	if	1	;There are 3 active tblptr bytes
  3952  010136  0E00               	movlw	low (_note_poll shr (0+16))
  3953  010138  6EF8               	movwf	tblptru,c
  3954  01013A                     	endif
  3955  01013A  0008               	tblrd		*
  3956  01013C  50F5               	movf	tablat,w,c
  3957  01013E  EC36  F083         	call	_mdb_comm
  3958  010142  6E22               	movwf	mdb_poll@i,c
  3959                           
  3960                           ;mdb.c: 163: notebyte = mdbdata[0];
  3961  010144  C060  F040         	movff	_mdbdata,_notebyte
  3962                           
  3963                           ;mdb.c: 165: if((mdbdata[0] & 0x80) != 0)
  3964  010148  0100               	movlb	0	; () banked
  3965  01014A  AF60               	btfss	_mdbdata& (0+255),7,b
  3966  01014C  D050               	goto	l2747
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;mdb.c: 166: {
  3970                           ;mdb.c: 167: notebyte = mdbdata[0] & 0x7F;
  3971  01014E  5160               	movf	_mdbdata& (0+255),w,b
  3972  010150  0B7F               	andlw	127
  3973  010152  6E40               	movwf	_notebyte,c
  3974                           
  3975                           ;mdb.c: 168: switch(notebyte)
  3976  010154  D019               	goto	l2737
  3977  010156                     
  3978                           ; BSR set to: 0
  3979  010156  0E0A               	movlw	10
  3980  010158  6E3B               	movwf	_credit,c	;volatile
  3981                           
  3982                           ;mdb.c: 171: return credit;
  3983  01015A  503B               	movf	_credit,w,c	;volatile
  3984  01015C  0012               	return	
  3985  01015E  0E14               	movlw	20
  3986  010160  6E3B               	movwf	_credit,c	;volatile
  3987                           
  3988                           ;mdb.c: 173: return credit;
  3989  010162  503B               	movf	_credit,w,c	;volatile
  3990  010164  0012               	return	
  3991  010166  0E32               	movlw	50
  3992  010168  6E3B               	movwf	_credit,c	;volatile
  3993                           
  3994                           ;mdb.c: 175: return credit;
  3995  01016A  503B               	movf	_credit,w,c	;volatile
  3996  01016C  0012               	return	
  3997  01016E  0E64               	movlw	100
  3998  010170  6E3B               	movwf	_credit,c	;volatile
  3999                           
  4000                           ;mdb.c: 177: return credit;
  4001  010172  503B               	movf	_credit,w,c	;volatile
  4002  010174  0012               	return	
  4003  010176  0EC8               	movlw	200
  4004  010178  6E3B               	movwf	_credit,c	;volatile
  4005                           
  4006                           ;mdb.c: 179: return credit;
  4007  01017A  503B               	movf	_credit,w,c	;volatile
  4008  01017C  0012               	return	
  4009  01017E  0E10               	movlw	16
  4010  010180  6E3B               	movwf	_credit,c	;volatile
  4011                           
  4012                           ;mdb.c: 181: mdbflags.noteerr = 1;
  4013  010182  823E               	bsf	_mdbflags,1,c
  4014                           
  4015                           ;mdb.c: 182: return credit;
  4016  010184  503B               	movf	_credit,w,c	;volatile
  4017                           
  4018                           ;mdb.c: 183: }
  4019  010186  0012               	return	
  4020  010188                     l2737:
  4021  010188  5040               	movf	_notebyte,w,c
  4022                           
  4023                           ; Switch size 1, requested type "space"
  4024                           ; Number of cases is 5, Range of values is 0 to 4
  4025                           ; switch strategies available:
  4026                           ; Name         Instructions Cycles
  4027                           ; simple_byte           16     9 (average)
  4028                           ;	Chosen strategy is simple_byte
  4029  01018A  0A00               	xorlw	0	; case 0
  4030  01018C  B4D8               	btfsc	status,2,c
  4031  01018E  D7E3               	goto	l2738
  4032  010190  0A01               	xorlw	1	; case 1
  4033  010192  B4D8               	btfsc	status,2,c
  4034  010194  D7E4               	goto	l2740
  4035  010196  0A03               	xorlw	3	; case 2
  4036  010198  B4D8               	btfsc	status,2,c
  4037  01019A  D7E5               	goto	l2741
  4038  01019C  0A01               	xorlw	1	; case 3
  4039  01019E  B4D8               	btfsc	status,2,c
  4040  0101A0  D7E6               	goto	l2742
  4041  0101A2  0A07               	xorlw	7	; case 4
  4042  0101A4  B4D8               	btfsc	status,2,c
  4043  0101A6  D7E7               	goto	l2743
  4044  0101A8  D7EA               	goto	l2744
  4045  0101AA  0E00               	movlw	0
  4046  0101AC  6E3B               	movwf	_credit,c	;volatile
  4047                           
  4048                           ;mdb.c: 191: return credit;
  4049  0101AE  503B               	movf	_credit,w,c	;volatile
  4050  0101B0  0012               	return	
  4051  0101B2  0E01               	movlw	1
  4052  0101B4  D01A               	goto	L11
  4053  0101B6  0E02               	movlw	2
  4054  0101B8  D018               	goto	L11
  4055  0101BA  0E00               	movlw	0
  4056  0101BC  6E3B               	movwf	_credit,c	;volatile
  4057                           
  4058                           ;mdb.c: 200: mdbflags.noteerr = 0;
  4059  0101BE  923E               	bcf	_mdbflags,1,c
  4060                           
  4061                           ;mdb.c: 201: return credit;
  4062  0101C0  503B               	movf	_credit,w,c	;volatile
  4063  0101C2  0012               	return	
  4064  0101C4  0E04               	movlw	4
  4065  0101C6  D011               	goto	L11
  4066  0101C8  0E05               	movlw	5
  4067  0101CA  D00F               	goto	L11
  4068  0101CC  0E06               	movlw	6
  4069  0101CE  D00D               	goto	L11
  4070  0101D0  0E07               	movlw	7
  4071  0101D2  D00B               	goto	L11
  4072  0101D4  0E08               	movlw	8
  4073  0101D6  D009               	goto	L11
  4074  0101D8  0E09               	movlw	9
  4075  0101DA  D007               	goto	L11
  4076  0101DC  0E0A               	movlw	10
  4077  0101DE  D005               	goto	L11
  4078  0101E0  0E0B               	movlw	11
  4079  0101E2  D003               	goto	L11
  4080  0101E4  0E0C               	movlw	12
  4081  0101E6  D001               	goto	L11
  4082  0101E8  0E00               	movlw	0
  4083  0101EA                     L11:
  4084  0101EA  6E3B               	movwf	_credit,c	;volatile
  4085                           
  4086                           ;mdb.c: 230: }
  4087  0101EC  D02A               	goto	l2750
  4088  0101EE                     l2747:
  4089  0101EE  0100               	movlb	0	; () banked
  4090  0101F0  5160               	movf	_mdbdata& (0+255),w,b
  4091                           
  4092                           ; Switch size 1, requested type "space"
  4093                           ; Number of cases is 13, Range of values is 0 to 12
  4094                           ; switch strategies available:
  4095                           ; Name         Instructions Cycles
  4096                           ; simple_byte           40    21 (average)
  4097                           ;	Chosen strategy is simple_byte
  4098  0101F2  0A00               	xorlw	0	; case 0
  4099  0101F4  B4D8               	btfsc	status,2,c
  4100  0101F6  D7D9               	goto	l2748
  4101  0101F8  0A01               	xorlw	1	; case 1
  4102  0101FA  B4D8               	btfsc	status,2,c
  4103  0101FC  D7DA               	goto	l2749
  4104  0101FE  0A03               	xorlw	3	; case 2
  4105  010200  B4D8               	btfsc	status,2,c
  4106  010202  D7D9               	goto	l2751
  4107  010204  0A01               	xorlw	1	; case 3
  4108  010206  B4D8               	btfsc	status,2,c
  4109  010208  D7D8               	goto	l2752
  4110  01020A  0A07               	xorlw	7	; case 4
  4111  01020C  B4D8               	btfsc	status,2,c
  4112  01020E  D7DA               	goto	l2753
  4113  010210  0A01               	xorlw	1	; case 5
  4114  010212  B4D8               	btfsc	status,2,c
  4115  010214  D7D9               	goto	l2754
  4116  010216  0A03               	xorlw	3	; case 6
  4117  010218  B4D8               	btfsc	status,2,c
  4118  01021A  D7D8               	goto	l2755
  4119  01021C  0A01               	xorlw	1	; case 7
  4120  01021E  B4D8               	btfsc	status,2,c
  4121  010220  D7D7               	goto	l2756
  4122  010222  0A0F               	xorlw	15	; case 8
  4123  010224  B4D8               	btfsc	status,2,c
  4124  010226  D7D6               	goto	l2757
  4125  010228  0A01               	xorlw	1	; case 9
  4126  01022A  B4D8               	btfsc	status,2,c
  4127  01022C  D7D5               	goto	l2758
  4128  01022E  0A03               	xorlw	3	; case 10
  4129  010230  B4D8               	btfsc	status,2,c
  4130  010232  D7D4               	goto	l2759
  4131  010234  0A01               	xorlw	1	; case 11
  4132  010236  B4D8               	btfsc	status,2,c
  4133  010238  D7D3               	goto	l2760
  4134  01023A  0A07               	xorlw	7	; case 12
  4135  01023C  B4D8               	btfsc	status,2,c
  4136  01023E  D7D2               	goto	l2761
  4137  010240  D7D3               	goto	l2762
  4138  010242                     l2750:
  4139                           
  4140                           ;mdb.c: 231: mdbflags.noteerr = 1;
  4141  010242  823E               	bsf	_mdbflags,1,c
  4142                           
  4143                           ;mdb.c: 232: return credit;
  4144  010244  503B               	movf	_credit,w,c	;volatile
  4145  010246  0012               	return	
  4146  010248                     __end_of_mdb_poll:
  4147                           	opt stack 0
  4148                           tblptru	equ	0xFF8
  4149                           tblptrh	equ	0xFF7
  4150                           tblptrl	equ	0xFF6
  4151                           tablat	equ	0xFF5
  4152                           prodh	equ	0xFF4
  4153                           prodl	equ	0xFF3
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           indf2	equ	0xFDF
  4157                           fsr2h	equ	0xFDA
  4158                           fsr2l	equ	0xFD9
  4159                           status	equ	0xFD8
  4160                           
  4161 ;; *************** function _mdb_comm *****************
  4162 ;; Defined at:
  4163 ;;		line 237 in file "mdb.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  slvadd          1    wreg     unsigned char 
  4166 ;;  mcount          1   20[COMRAM] unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  slvadd          1   21[COMRAM] unsigned char 
  4169 ;;  i               1   22[COMRAM] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      unsigned char 
  4172 ;; Registers used:
  4173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4179 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;Total ram usage:        3 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    4
  4186 ;; This function calls:
  4187 ;;		_EUSART1_Read
  4188 ;;		_TMR1_Initialize
  4189 ;;		_init_mdbdata
  4190 ;;		_mdb_on
  4191 ;;		_mdb_transmit
  4192 ;;		_mdb_waitr
  4193 ;; This function is called by:
  4194 ;;		_mdb_init
  4195 ;;		_mdb_reset
  4196 ;;		_mdb_noten
  4197 ;;		_mdb_security
  4198 ;;		_mdb_poll
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text10
  4203  01066C                     __ptext10:
  4204                           	opt stack 0
  4205  01066C                     _mdb_comm:
  4206                           	opt stack 23
  4207                           
  4208                           ;incstack = 0
  4209                           ;mdb_comm@slvadd stored from wreg
  4210  01066C  6E20               	movwf	mdb_comm@slvadd,c
  4211                           
  4212                           ;mdb.c: 240: uint8_t i = 0;
  4213  01066E  0E00               	movlw	0
  4214  010670  6E21               	movwf	mdb_comm@i,c
  4215                           
  4216                           ;mdb.c: 242: TX1STAbits.TX9D = 1;
  4217  010672  809E               	bsf	3998,0,c	;volatile
  4218                           
  4219                           ;mdb.c: 243: mdb_on();
  4220  010674  EC06  F090         	call	_mdb_on	;wreg free
  4221                           
  4222                           ;mdb.c: 247: mdb_transmit(slvadd);
  4223  010678  5020               	movf	mdb_comm@slvadd,w,c
  4224  01067A  ECCB  F08F         	call	_mdb_transmit
  4225                           
  4226                           ;mdb.c: 248: TX1STAbits.TX9D = 0;
  4227  01067E  909E               	bcf	3998,0,c	;volatile
  4228                           
  4229                           ;mdb.c: 252: chkbyte = slvadd;
  4230  010680  C020  F03F         	movff	mdb_comm@slvadd,_chkbyte
  4231                           
  4232                           ;mdb.c: 253: if(mcount != 0)
  4233  010684  501F               	movf	mdb_comm@mcount,w,c
  4234  010686  B4D8               	btfsc	status,2,c
  4235  010688  D01E               	goto	u3140
  4236                           
  4237                           ;mdb.c: 254: {
  4238                           ;mdb.c: 255: i = mcount + 1;
  4239  01068A  281F               	incf	mdb_comm@mcount,w,c
  4240  01068C  6E21               	movwf	mdb_comm@i,c
  4241                           
  4242                           ;mdb.c: 256: while(i != 0)
  4243  01068E  D018               	goto	l2766
  4244  010690                     
  4245                           ;mdb.c: 257: {
  4246                           ;mdb.c: 258: mdb_transmit(mdbdata[mcount]);
  4247  010690  501F               	movf	mdb_comm@mcount,w,c
  4248  010692  0D01               	mullw	1
  4249  010694  0E60               	movlw	low _mdbdata
  4250  010696  24F3               	addwf	prodl,w,c
  4251  010698  6ED9               	movwf	fsr2l,c
  4252  01069A  0E00               	movlw	high _mdbdata
  4253  01069C  20F4               	addwfc	prodh,w,c
  4254  01069E  6EDA               	movwf	fsr2h,c
  4255  0106A0  50DF               	movf	indf2,w,c
  4256  0106A2  ECCB  F08F         	call	_mdb_transmit
  4257                           
  4258                           ;mdb.c: 261: chkbyte = chkbyte + mdbdata[mcount];
  4259  0106A6  501F               	movf	mdb_comm@mcount,w,c
  4260  0106A8  0D01               	mullw	1
  4261  0106AA  0E60               	movlw	low _mdbdata
  4262  0106AC  24F3               	addwf	prodl,w,c
  4263  0106AE  6ED9               	movwf	fsr2l,c
  4264  0106B0  0E00               	movlw	high _mdbdata
  4265  0106B2  20F4               	addwfc	prodh,w,c
  4266  0106B4  6EDA               	movwf	fsr2h,c
  4267  0106B6  50DF               	movf	indf2,w,c
  4268  0106B8  243F               	addwf	_chkbyte,w,c
  4269  0106BA  6E3F               	movwf	_chkbyte,c
  4270                           
  4271                           ;mdb.c: 262: i--;
  4272  0106BC  0621               	decf	mdb_comm@i,f,c
  4273                           
  4274                           ;mdb.c: 263: mcount--;
  4275  0106BE  061F               	decf	mdb_comm@mcount,f,c
  4276  0106C0                     l2766:
  4277  0106C0  5021               	movf	mdb_comm@i,w,c
  4278  0106C2  A4D8               	btfss	status,2,c
  4279  0106C4  D7E5               	goto	l2767
  4280  0106C6                     u3140:
  4281                           
  4282                           ;mdb.c: 264: }
  4283                           ;mdb.c: 265: }
  4284                           ;mdb.c: 266: mdb_transmit(chkbyte);
  4285  0106C6  503F               	movf	_chkbyte,w,c
  4286  0106C8  ECCB  F08F         	call	_mdb_transmit
  4287                           
  4288                           ;mdb.c: 273: init_mdbdata(0xFF);
  4289  0106CC  0EFF               	movlw	255
  4290  0106CE  ECEC  F08E         	call	_init_mdbdata
  4291                           
  4292                           ;mdb.c: 274: TMR1_Initialize();
  4293  0106D2  EC0F  F08E         	call	_TMR1_Initialize	;wreg free
  4294                           
  4295                           ;mdb.c: 275: dbcount = 0;
  4296  0106D6  0E00               	movlw	0
  4297  0106D8  6E32               	movwf	_dbcount+1,c
  4298  0106DA  0E00               	movlw	0
  4299  0106DC  6E31               	movwf	_dbcount,c
  4300                           
  4301                           ;mdb.c: 276: mdbflags.isdata = 0;
  4302  0106DE  903E               	bcf	_mdbflags,0,c
  4303                           
  4304                           ;mdb.c: 277: i = 0;
  4305  0106E0  0E00               	movlw	0
  4306  0106E2  6E21               	movwf	mdb_comm@i,c
  4307                           
  4308                           ;mdb.c: 279: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  4309  0106E4  D01E               	goto	u3170
  4310  0106E6                     
  4311                           ;mdb.c: 280: {
  4312                           ;mdb.c: 282: dbcount++;
  4313  0106E6  4A31               	infsnz	_dbcount,f,c
  4314  0106E8  2A32               	incf	_dbcount+1,f,c
  4315                           
  4316                           ;mdb.c: 283: mdbflags.isdata = 0;
  4317  0106EA  903E               	bcf	_mdbflags,0,c
  4318                           
  4319                           ;mdb.c: 286: while(PIR3bits.RC1IF && !mdbflags.isdata)
  4320  0106EC  D015               	goto	l2771
  4321  0106EE                     
  4322                           ;mdb.c: 287: {
  4323                           ;mdb.c: 290: mdbdata[i] = EUSART1_Read();
  4324  0106EE  5021               	movf	mdb_comm@i,w,c
  4325  0106F0  0D01               	mullw	1
  4326  0106F2  0E60               	movlw	low _mdbdata
  4327  0106F4  24F3               	addwf	prodl,w,c
  4328  0106F6  6ED9               	movwf	fsr2l,c
  4329  0106F8  0E00               	movlw	high _mdbdata
  4330  0106FA  20F4               	addwfc	prodh,w,c
  4331  0106FC  6EDA               	movwf	fsr2h,c
  4332  0106FE  ECB9  F08F         	call	_EUSART1_Read	;wreg free
  4333  010702  6EDF               	movwf	indf2,c
  4334                           
  4335                           ;mdb.c: 291: mdb_waitr();
  4336  010704  ECFD  F08F         	call	_mdb_waitr	;wreg free
  4337                           
  4338                           ;mdb.c: 293: mdbflags.isdata = RC1STAbits.RX9D;
  4339  010708  A09D               	btfss	3997,0,c	;volatile
  4340  01070A  D002               	bra	u3155
  4341  01070C  803E               	bsf	_mdbflags,0,c
  4342  01070E  D001               	bra	u3157
  4343  010710                     u3155:
  4344  010710  903E               	bcf	_mdbflags,0,c
  4345  010712                     u3157:
  4346                           
  4347                           ;mdb.c: 294: TMR1_Initialize();
  4348  010712  EC0F  F08E         	call	_TMR1_Initialize	;wreg free
  4349                           
  4350                           ;mdb.c: 295: i++;
  4351  010716  2A21               	incf	mdb_comm@i,f,c
  4352  010718                     l2771:
  4353  010718  010E               	movlb	14	; () banked
  4354  01071A  ABCD               	btfss	205,5,b	;volatile
  4355  01071C  D002               	goto	u3170
  4356                           
  4357                           ; BSR set to: 14
  4358  01071E  A03E               	btfss	_mdbflags,0,c
  4359  010720  D7E6               	goto	l2772
  4360  010722                     u3170:
  4361                           
  4362                           ; BSR set to: 14
  4363                           
  4364                           ; BSR set to: 14
  4365  010722  010E               	movlb	14	; () banked
  4366  010724  B1CE               	btfsc	206,0,b	;volatile
  4367  010726  D002               	goto	u3190
  4368                           
  4369                           ; BSR set to: 14
  4370  010728  A03E               	btfss	_mdbflags,0,c
  4371  01072A  D7DD               	goto	l2770
  4372  01072C                     u3190:
  4373                           
  4374                           ; BSR set to: 14
  4375                           ;mdb.c: 297: }
  4376                           ;mdb.c: 299: }
  4377                           ;mdb.c: 301: i--;
  4378                           
  4379                           ; BSR set to: 14
  4380                           
  4381                           ; BSR set to: 14
  4382  01072C  0621               	decf	mdb_comm@i,f,c
  4383                           
  4384                           ; BSR set to: 14
  4385                           ;mdb.c: 303: mdbflags.timeout = PIR4bits.TMR1IF;
  4386  01072E  A1CE               	btfss	206,0,b	;volatile
  4387  010730  D002               	bra	u3205
  4388  010732  863E               	bsf	_mdbflags,3,c
  4389  010734  D001               	bra	u3207
  4390  010736                     u3205:
  4391  010736  963E               	bcf	_mdbflags,3,c
  4392  010738                     u3207:
  4393                           
  4394                           ;mdb.c: 305: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  4395  010738  A03E               	btfss	_mdbflags,0,c
  4396  01073A  D011               	goto	l2779
  4397  01073C  5021               	movf	mdb_comm@i,w,c
  4398  01073E  0D01               	mullw	1
  4399  010740  0E60               	movlw	low _mdbdata
  4400  010742  24F3               	addwf	prodl,w,c
  4401  010744  6ED9               	movwf	fsr2l,c
  4402  010746  0E00               	movlw	high _mdbdata
  4403  010748  20F4               	addwfc	prodh,w,c
  4404  01074A  6EDA               	movwf	fsr2h,c
  4405  01074C  50DF               	movf	indf2,w,c
  4406  01074E  B4D8               	btfsc	status,2,c
  4407  010750  D006               	goto	l2779
  4408                           
  4409                           ;mdb.c: 306: {
  4410                           ;mdb.c: 307: TX1STAbits.TX9D = 1;
  4411  010752  809E               	bsf	3998,0,c	;volatile
  4412                           
  4413                           ;mdb.c: 308: mdb_on();
  4414  010754  EC06  F090         	call	_mdb_on	;wreg free
  4415                           
  4416                           ;mdb.c: 309: mdb_transmit(0x00);
  4417  010758  0E00               	movlw	0
  4418  01075A  ECCB  F08F         	call	_mdb_transmit
  4419  01075E                     l2779:
  4420                           
  4421                           ;mdb.c: 311: }
  4422                           ;mdb.c: 313: mdb_on();
  4423  01075E  EC06  F090         	call	_mdb_on	;wreg free
  4424                           
  4425                           ;mdb.c: 315: return(i);
  4426  010762  5021               	movf	mdb_comm@i,w,c
  4427  010764  0012               	return	
  4428  010766                     __end_of_mdb_comm:
  4429                           	opt stack 0
  4430                           tblptru	equ	0xFF8
  4431                           tblptrh	equ	0xFF7
  4432                           tblptrl	equ	0xFF6
  4433                           tablat	equ	0xFF5
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           postinc0	equ	0xFEE
  4437                           wreg	equ	0xFE8
  4438                           indf2	equ	0xFDF
  4439                           fsr2h	equ	0xFDA
  4440                           fsr2l	equ	0xFD9
  4441                           status	equ	0xFD8
  4442                           
  4443 ;; *************** function _mdb_waitr *****************
  4444 ;; Defined at:
  4445 ;;		line 339 in file "mdb.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		None
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;Total ram usage:        0 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    2
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_mdb_comm
  4470 ;;		_cctalk_read
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text11
  4475  011FFA                     __ptext11:
  4476                           	opt stack 0
  4477  011FFA                     _mdb_waitr:
  4478                           	opt stack 24
  4479                           
  4480                           ;mdb.c: 342: {
  4481                           
  4482                           ;mdb.c: 341: while(BAUD1CONbits.RCIDL == 0)
  4483                           
  4484                           ;incstack = 0
  4485  011FFA  BC9F               	btfsc	3999,6,c	;volatile
  4486  011FFC  0012               	return	
  4487  011FFE  D7FD               	goto	_mdb_waitr
  4488  012000                     __end_of_mdb_waitr:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           prodh	equ	0xFF4
  4495                           prodl	equ	0xFF3
  4496                           postinc0	equ	0xFEE
  4497                           wreg	equ	0xFE8
  4498                           indf2	equ	0xFDF
  4499                           fsr2h	equ	0xFDA
  4500                           fsr2l	equ	0xFD9
  4501                           status	equ	0xFD8
  4502                           
  4503 ;; *************** function _mdb_transmit *****************
  4504 ;; Defined at:
  4505 ;;		line 440 in file "mdb.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  txbyte          1    wreg     unsigned char 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  txbyte          1   19[COMRAM] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;Total ram usage:        1 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    3
  4526 ;; This function calls:
  4527 ;;		_EUSART1_Write
  4528 ;;		_mdb_waitx
  4529 ;; This function is called by:
  4530 ;;		_mdb_comm
  4531 ;;		_mdb_test
  4532 ;;		_cctalk_comm
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text12
  4537  011F96                     __ptext12:
  4538                           	opt stack 0
  4539  011F96                     _mdb_transmit:
  4540                           	opt stack 23
  4541                           
  4542                           ;incstack = 0
  4543                           ;mdb_transmit@txbyte stored from wreg
  4544  011F96  6E1E               	movwf	mdb_transmit@txbyte,c
  4545                           
  4546                           ;mdb.c: 442: EUSART1_Write(txbyte);
  4547  011F98  501E               	movf	mdb_transmit@txbyte,w,c
  4548  011F9A  ECD2  F08F         	call	_EUSART1_Write
  4549                           
  4550                           ;mdb.c: 443: mdb_waitx();
  4551  011F9E  EC00  F090         	call	_mdb_waitx	;wreg free
  4552  011FA2  0012               	return		;funcret
  4553  011FA4                     __end_of_mdb_transmit:
  4554                           	opt stack 0
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           prodh	equ	0xFF4
  4560                           prodl	equ	0xFF3
  4561                           postinc0	equ	0xFEE
  4562                           wreg	equ	0xFE8
  4563                           indf2	equ	0xFDF
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function _mdb_waitx *****************
  4569 ;; Defined at:
  4570 ;;		line 331 in file "mdb.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		None
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;Total ram usage:        0 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    2
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_mdb_transmit
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text13
  4599  012000                     __ptext13:
  4600                           	opt stack 0
  4601  012000                     _mdb_waitx:
  4602                           	opt stack 23
  4603                           
  4604                           ;mdb.c: 334: {
  4605                           
  4606                           ;mdb.c: 333: while(TX1STAbits.TRMT == 0)
  4607                           
  4608                           ;incstack = 0
  4609  012000  B29E               	btfsc	3998,1,c	;volatile
  4610  012002  0012               	return	
  4611  012004  D7FD               	goto	_mdb_waitx
  4612  012006                     __end_of_mdb_waitx:
  4613                           	opt stack 0
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           prodh	equ	0xFF4
  4619                           prodl	equ	0xFF3
  4620                           postinc0	equ	0xFEE
  4621                           wreg	equ	0xFE8
  4622                           indf2	equ	0xFDF
  4623                           fsr2h	equ	0xFDA
  4624                           fsr2l	equ	0xFD9
  4625                           status	equ	0xFD8
  4626                           
  4627 ;; *************** function _EUSART1_Write *****************
  4628 ;; Defined at:
  4629 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  txData          1    wreg     unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  txData          1   18[COMRAM] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;Total ram usage:        1 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    2
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_mdb_transmit
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text14
  4658  011FA4                     __ptext14:
  4659                           	opt stack 0
  4660  011FA4                     _EUSART1_Write:
  4661                           	opt stack 23
  4662                           
  4663                           ;incstack = 0
  4664                           ;EUSART1_Write@txData stored from wreg
  4665  011FA4  6E1D               	movwf	EUSART1_Write@txData,c
  4666  011FA6                     
  4667                           ;eusart1.c: 96: {
  4668                           
  4669                           ;eusart1.c: 95: while(0 == PIR3bits.TX1IF)
  4670  011FA6  010E               	movlb	14	; () banked
  4671  011FA8  A9CD               	btfss	205,4,b	;volatile
  4672  011FAA  D7FD               	goto	l8599
  4673                           
  4674                           ; BSR set to: 14
  4675                           ;eusart1.c: 97: }
  4676                           ;eusart1.c: 99: TX1REG = txData;
  4677                           
  4678                           ; BSR set to: 14
  4679  011FAC  C01D  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  4680                           
  4681                           ; BSR set to: 14
  4682  011FB0  0012               	return		;funcret
  4683  011FB2                     __end_of_EUSART1_Write:
  4684                           	opt stack 0
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           postinc0	equ	0xFEE
  4692                           wreg	equ	0xFE8
  4693                           indf2	equ	0xFDF
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698 ;; *************** function _mdb_on *****************
  4699 ;; Defined at:
  4700 ;;		line 318 in file "mdb.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		None
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    2
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_mdb_comm
  4725 ;;		_mdb_test
  4726 ;;		_cctalk_init
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text15
  4731  01200C                     __ptext15:
  4732                           	opt stack 0
  4733  01200C                     _mdb_on:
  4734                           	opt stack 24
  4735                           
  4736                           ;mdb.c: 324: LATCbits.LATC0 = 1;
  4737                           
  4738                           ; BSR set to: 14
  4739                           ;incstack = 0
  4740  01200C  8085               	bsf	3973,0,c	;volatile
  4741  01200E  0012               	return		;funcret
  4742  012010                     __end_of_mdb_on:
  4743                           	opt stack 0
  4744                           tblptru	equ	0xFF8
  4745                           tblptrh	equ	0xFF7
  4746                           tblptrl	equ	0xFF6
  4747                           tablat	equ	0xFF5
  4748                           prodh	equ	0xFF4
  4749                           prodl	equ	0xFF3
  4750                           postinc0	equ	0xFEE
  4751                           wreg	equ	0xFE8
  4752                           indf2	equ	0xFDF
  4753                           fsr2h	equ	0xFDA
  4754                           fsr2l	equ	0xFD9
  4755                           status	equ	0xFD8
  4756                           
  4757 ;; *************** function _init_mdbdata *****************
  4758 ;; Defined at:
  4759 ;;		line 13 in file "mdb.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  initdata        1    wreg     unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  initdata        1   18[COMRAM] unsigned char 
  4764 ;;  i               1   19[COMRAM] unsigned char 
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;Total ram usage:        2 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    2
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_mdb_noten
  4785 ;;		_mdb_security
  4786 ;;		_mdb_comm
  4787 ;;		_cctalk_pinenter
  4788 ;;		_cctalk_comm
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text16
  4793  011DD8                     __ptext16:
  4794                           	opt stack 0
  4795  011DD8                     _init_mdbdata:
  4796                           	opt stack 24
  4797                           
  4798                           ;incstack = 0
  4799                           ;init_mdbdata@initdata stored from wreg
  4800  011DD8  6E1D               	movwf	init_mdbdata@initdata,c
  4801                           
  4802                           ;mdb.c: 15: for(uint8_t i = 0;i < 33; i++)
  4803  011DDA  0E00               	movlw	0
  4804  011DDC  6E1E               	movwf	init_mdbdata@i,c
  4805  011DDE                     l8785:
  4806  011DDE  0E20               	movlw	32
  4807  011DE0  641E               	cpfsgt	init_mdbdata@i,c
  4808  011DE2  D001               	goto	l2682
  4809  011DE4  0012               	return	
  4810  011DE6                     l2682:
  4811                           
  4812                           ;mdb.c: 16: {
  4813                           ;mdb.c: 17: mdbdata[i] = initdata;
  4814  011DE6  501E               	movf	init_mdbdata@i,w,c
  4815  011DE8  0D01               	mullw	1
  4816  011DEA  0E60               	movlw	low _mdbdata
  4817  011DEC  24F3               	addwf	prodl,w,c
  4818  011DEE  6ED9               	movwf	fsr2l,c
  4819  011DF0  0E00               	movlw	high _mdbdata
  4820  011DF2  20F4               	addwfc	prodh,w,c
  4821  011DF4  6EDA               	movwf	fsr2h,c
  4822  011DF6  C01D  FFDF         	movff	init_mdbdata@initdata,indf2
  4823  011DFA  2A1E               	incf	init_mdbdata@i,f,c
  4824  011DFC  D7F0               	goto	l8785
  4825  011DFE                     __end_of_init_mdbdata:
  4826                           	opt stack 0
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           postinc0	equ	0xFEE
  4834                           wreg	equ	0xFE8
  4835                           indf2	equ	0xFDF
  4836                           fsr2h	equ	0xFDA
  4837                           fsr2l	equ	0xFD9
  4838                           status	equ	0xFD8
  4839                           
  4840 ;; *************** function _EUSART1_Read *****************
  4841 ;; Defined at:
  4842 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      unsigned char 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;Total ram usage:        0 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    2
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_mdb_comm
  4867 ;;		_cctalk_read
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text17
  4872  011F72                     __ptext17:
  4873                           	opt stack 0
  4874  011F72                     _EUSART1_Read:
  4875                           	opt stack 24
  4876                           
  4877                           ;eusart1.c: 78: {
  4878                           
  4879                           ;eusart1.c: 77: while(!PIR3bits.RC1IF)
  4880                           
  4881                           ;incstack = 0
  4882  011F72  010E               	movlb	14	; () banked
  4883  011F74  ABCD               	btfss	205,5,b	;volatile
  4884  011F76  D7FD               	goto	_EUSART1_Read
  4885                           
  4886                           ; BSR set to: 14
  4887                           ;eusart1.c: 79: }
  4888                           ;eusart1.c: 82: if(1 == RC1STAbits.OERR)
  4889  011F78  A29D               	btfss	3997,1,c	;volatile
  4890  011F7A  D002               	goto	l91
  4891                           
  4892                           ; BSR set to: 14
  4893                           ;eusart1.c: 83: {
  4894                           ;eusart1.c: 86: RC1STAbits.CREN = 0;
  4895  011F7C  989D               	bcf	3997,4,c	;volatile
  4896                           
  4897                           ;eusart1.c: 87: RC1STAbits.CREN = 1;
  4898  011F7E  889D               	bsf	3997,4,c	;volatile
  4899  011F80                     l91:
  4900                           
  4901                           ; BSR set to: 14
  4902                           ;eusart1.c: 88: }
  4903                           ;eusart1.c: 90: return RC1REG;
  4904                           
  4905                           ; BSR set to: 14
  4906  011F80  5099               	movf	3993,w,c	;volatile
  4907  011F82  0012               	return	
  4908  011F84                     __end_of_EUSART1_Read:
  4909                           	opt stack 0
  4910                           tblptru	equ	0xFF8
  4911                           tblptrh	equ	0xFF7
  4912                           tblptrl	equ	0xFF6
  4913                           tablat	equ	0xFF5
  4914                           prodh	equ	0xFF4
  4915                           prodl	equ	0xFF3
  4916                           postinc0	equ	0xFEE
  4917                           wreg	equ	0xFE8
  4918                           indf2	equ	0xFDF
  4919                           fsr2h	equ	0xFDA
  4920                           fsr2l	equ	0xFD9
  4921                           status	equ	0xFD8
  4922                           
  4923 ;; *************** function _lcd_init *****************
  4924 ;; Defined at:
  4925 ;;		line 11 in file "lcd.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;Total ram usage:        2 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    8
  4946 ;; This function calls:
  4947 ;;		_lcd_clockE
  4948 ;;		_lcd_test
  4949 ;;		_lcd_write
  4950 ;; This function is called by:
  4951 ;;		_main
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text18
  4956  010F40                     __ptext18:
  4957                           	opt stack 0
  4958  010F40                     _lcd_init:
  4959                           	opt stack 22
  4960                           
  4961                           ;lcd.c: 13: LATE = 0x00;
  4962                           
  4963                           ; BSR set to: 14
  4964                           ;incstack = 0
  4965  010F40  0E00               	movlw	0
  4966  010F42  6E87               	movwf	3975,c	;volatile
  4967                           
  4968                           ;lcd.c: 15: LATD = 0x03;
  4969  010F44  0E03               	movlw	3
  4970  010F46  6E86               	movwf	3974,c	;volatile
  4971                           
  4972                           ;lcd.c: 16: for(count = 3; count > 0; count-- )
  4973  010F48  0E03               	movlw	3
  4974  010F4A  6E4C               	movwf	_count,c
  4975  010F4C                     l9615:
  4976  010F4C  504C               	movf	_count,w,c
  4977  010F4E  0A80               	xorlw	128
  4978  010F50  0F7F               	addlw	-129
  4979  010F52  A0D8               	btfss	status,0,c
  4980  010F54  D00B               	goto	u3560
  4981                           
  4982                           ;lcd.c: 17: {
  4983                           ;lcd.c: 18: lcd_clockE();
  4984  010F56  ECE0  F08F         	call	_lcd_clockE	;wreg free
  4985                           
  4986                           ;lcd.c: 19: _delay((unsigned long)((5)*(12000000/4000.0)));
  4987  010F5A  0E14               	movlw	20
  4988  010F5C  6E25               	movwf	??_lcd_init& (0+255),c
  4989  010F5E  0E7A               	movlw	122
  4990  010F60                     u4027:
  4991  010F60  2EE8               	decfsz	wreg,f,c
  4992  010F62  D7FE               	bra	u4027
  4993  010F64  2E25               	decfsz	??_lcd_init& (0+255),f,c
  4994  010F66  D7FC               	bra	u4027
  4995  010F68  064C               	decf	_count,f,c
  4996  010F6A  D7F0               	goto	l9615
  4997  010F6C                     u3560:
  4998                           
  4999                           ;lcd.c: 21: }
  5000                           ;lcd.c: 22: _delay((unsigned long)((50)*(12000000/4000000.0)));
  5001  010F6C  0E32               	movlw	50
  5002  010F6E                     u4037:
  5003  010F6E  2EE8               	decfsz	wreg,f,c
  5004  010F70  D7FE               	bra	u4037
  5005                           
  5006                           ;lcd.c: 23: LATD = 0x02;
  5007  010F72  0E02               	movlw	2
  5008  010F74  6E86               	movwf	3974,c	;volatile
  5009                           
  5010                           ;lcd.c: 24: lcd_clockE();
  5011  010F76  ECE0  F08F         	call	_lcd_clockE	;wreg free
  5012                           
  5013                           ;lcd.c: 27: lcd_write(dispfunc3);
  5014  010F7A  0E9B               	movlw	low _dispfunc3
  5015  010F7C  6EF6               	movwf	tblptrl,c
  5016  010F7E                     	if	1	;There is more than 1 active tblptr byte
  5017  010F7E  0EFC               	movlw	high _dispfunc3
  5018  010F80  6EF7               	movwf	tblptrh,c
  5019  010F82                     	endif
  5020  010F82                     	if	1	;There are 3 active tblptr bytes
  5021  010F82  0E00               	movlw	low (_dispfunc3 shr (0+16))
  5022  010F84  6EF8               	movwf	tblptru,c
  5023  010F86                     	endif
  5024  010F86  0008               	tblrd		*
  5025  010F88  50F5               	movf	tablat,w,c
  5026  010F8A  EC90  F08E         	call	_lcd_write
  5027                           
  5028                           ;lcd.c: 29: lcd_write(dispon);
  5029  010F8E  0E9A               	movlw	low _dispon
  5030  010F90  6EF6               	movwf	tblptrl,c
  5031  010F92                     	if	1	;There is more than 1 active tblptr byte
  5032  010F92  0EFC               	movlw	high _dispon
  5033  010F94  6EF7               	movwf	tblptrh,c
  5034  010F96                     	endif
  5035  010F96                     	if	1	;There are 3 active tblptr bytes
  5036  010F96  0E00               	movlw	low (_dispon shr (0+16))
  5037  010F98  6EF8               	movwf	tblptru,c
  5038  010F9A                     	endif
  5039  010F9A  0008               	tblrd		*
  5040  010F9C  50F5               	movf	tablat,w,c
  5041  010F9E  EC90  F08E         	call	_lcd_write
  5042                           
  5043                           ;lcd.c: 31: lcd_write(dispnormal);
  5044  010FA2  0E96               	movlw	low _dispnormal
  5045  010FA4  6EF6               	movwf	tblptrl,c
  5046  010FA6                     	if	1	;There is more than 1 active tblptr byte
  5047  010FA6  0EFC               	movlw	high _dispnormal
  5048  010FA8  6EF7               	movwf	tblptrh,c
  5049  010FAA                     	endif
  5050  010FAA                     	if	1	;There are 3 active tblptr bytes
  5051  010FAA  0E00               	movlw	low (_dispnormal shr (0+16))
  5052  010FAC  6EF8               	movwf	tblptru,c
  5053  010FAE                     	endif
  5054  010FAE  0008               	tblrd		*
  5055  010FB0  50F5               	movf	tablat,w,c
  5056  010FB2  EC90  F08E         	call	_lcd_write
  5057                           
  5058                           ;lcd.c: 33: lcd_write(dispclr);
  5059  010FB6  0E99               	movlw	low _dispclr
  5060  010FB8  6EF6               	movwf	tblptrl,c
  5061  010FBA                     	if	1	;There is more than 1 active tblptr byte
  5062  010FBA  0EFC               	movlw	high _dispclr
  5063  010FBC  6EF7               	movwf	tblptrh,c
  5064  010FBE                     	endif
  5065  010FBE                     	if	1	;There are 3 active tblptr bytes
  5066  010FBE  0E00               	movlw	low (_dispclr shr (0+16))
  5067  010FC0  6EF8               	movwf	tblptru,c
  5068  010FC2                     	endif
  5069  010FC2  0008               	tblrd		*
  5070  010FC4  50F5               	movf	tablat,w,c
  5071  010FC6  EC90  F08E         	call	_lcd_write
  5072                           
  5073                           ;lcd.c: 35: lcd_test();
  5074  010FCA  EC99  F08F         	call	_lcd_test	;wreg free
  5075                           
  5076                           ;lcd.c: 36: _delay((unsigned long)((250)*(12000000/4000.0)));
  5077  010FCE  0E04               	movlw	4
  5078  010FD0  6E26               	movwf	(??_lcd_init+1)& (0+255),c
  5079  010FD2  0ECF               	movlw	207
  5080  010FD4  6E25               	movwf	??_lcd_init& (0+255),c
  5081  010FD6  0E02               	movlw	2
  5082  010FD8                     u4047:
  5083  010FD8  2EE8               	decfsz	wreg,f,c
  5084  010FDA  D7FE               	bra	u4047
  5085  010FDC  2E25               	decfsz	??_lcd_init& (0+255),f,c
  5086  010FDE  D7FC               	bra	u4047
  5087  010FE0  2E26               	decfsz	(??_lcd_init+1)& (0+255),f,c
  5088  010FE2  D7FA               	bra	u4047
  5089  010FE4  F000               	nop		;# 
  5090  010FE6  0012               	return		;funcret
  5091  010FE8                     __end_of_lcd_init:
  5092                           	opt stack 0
  5093                           tblptru	equ	0xFF8
  5094                           tblptrh	equ	0xFF7
  5095                           tblptrl	equ	0xFF6
  5096                           tablat	equ	0xFF5
  5097                           prodh	equ	0xFF4
  5098                           prodl	equ	0xFF3
  5099                           postinc0	equ	0xFEE
  5100                           wreg	equ	0xFE8
  5101                           indf2	equ	0xFDF
  5102                           fsr2h	equ	0xFDA
  5103                           fsr2l	equ	0xFD9
  5104                           status	equ	0xFD8
  5105                           
  5106 ;; *************** function _lcd_test *****************
  5107 ;; Defined at:
  5108 ;;		line 296 in file "lcd.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  character       1   25[COMRAM] unsigned char 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;Total ram usage:        1 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    7
  5129 ;; This function calls:
  5130 ;;		_lcd_writeC
  5131 ;; This function is called by:
  5132 ;;		_lcd_init
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text19
  5137  011F32                     __ptext19:
  5138                           	opt stack 0
  5139  011F32                     _lcd_test:
  5140                           	opt stack 22
  5141                           
  5142                           ;lcd.c: 298: uint8_t character = 0x30;
  5143                           
  5144                           ;incstack = 0
  5145  011F32  0E30               	movlw	48
  5146  011F34  D004               	goto	L12
  5147  011F36                     
  5148                           ;lcd.c: 300: {
  5149                           ;lcd.c: 301: lcd_writeC(character);
  5150  011F36  5024               	movf	lcd_test@character,w,c
  5151  011F38  EC7F  F08B         	call	_lcd_writeC
  5152                           
  5153                           ;lcd.c: 302: character = character+ 1;
  5154  011F3C  2824               	incf	lcd_test@character,w,c
  5155  011F3E                     L12:
  5156  011F3E  6E24               	movwf	lcd_test@character,c
  5157  011F40  0E7F               	movlw	127
  5158  011F42  6424               	cpfsgt	lcd_test@character,c
  5159  011F44  D7F8               	goto	l1557
  5160  011F46  0012               	return	
  5161  011F48                     __end_of_lcd_test:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           postinc0	equ	0xFEE
  5170                           wreg	equ	0xFE8
  5171                           indf2	equ	0xFDF
  5172                           fsr2h	equ	0xFDA
  5173                           fsr2l	equ	0xFD9
  5174                           status	equ	0xFD8
  5175                           
  5176 ;; *************** function _enter_service *****************
  5177 ;; Defined at:
  5178 ;;		line 198 in file "main.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;		None
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;Total ram usage:        0 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:   12
  5199 ;; This function calls:
  5200 ;;		_Audit
  5201 ;;		_Clear_cred
  5202 ;;		_Hopper_coin
  5203 ;;		_Sensor_set
  5204 ;;		_Vend_setup
  5205 ;;		_butindb
  5206 ;;		_lcd_string
  5207 ;;		_mdb_unlock
  5208 ;;		_price_set
  5209 ;;		_set_notes
  5210 ;; This function is called by:
  5211 ;;		_main
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text20
  5216  01108A                     __ptext20:
  5217                           	opt stack 0
  5218  01108A                     _enter_service:
  5219                           	opt stack 18
  5220                           
  5221                           ;main.c: 200: mdb_unlock();
  5222                           
  5223                           ;incstack = 0
  5224  01108A  EC6D  F085         	call	_mdb_unlock	;wreg free
  5225                           
  5226                           ;main.c: 201: lcd_string(servmsg, line1);
  5227  01108E  0E9E               	movlw	low _servmsg
  5228  011090  6E24               	movwf	lcd_string@lcdstring,c
  5229  011092  0EFC               	movlw	high _servmsg
  5230  011094  6E25               	movwf	lcd_string@lcdstring+1,c
  5231  011096  0E8F               	movlw	low _line1
  5232  011098  6EF6               	movwf	tblptrl,c
  5233  01109A                     	if	1	;There is more than 1 active tblptr byte
  5234  01109A  0EFC               	movlw	high _line1
  5235  01109C  6EF7               	movwf	tblptrh,c
  5236  01109E                     	endif
  5237  01109E                     	if	1	;There are 3 active tblptr bytes
  5238  01109E  0E00               	movlw	low (_line1 shr (0+16))
  5239  0110A0  6EF8               	movwf	tblptru,c
  5240  0110A2                     	endif
  5241  0110A2  0008               	tblrd		*
  5242  0110A4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5243  0110A8  EC46  F087         	call	_lcd_string	;wreg free
  5244                           
  5245                           ;main.c: 204: while(venflags.service)
  5246  0110AC  D036               	goto	l1038
  5247  0110AE                     
  5248                           ;main.c: 205: {
  5249                           ;main.c: 206: buttons = butindb();
  5250  0110AE  EC77  F08E         	call	_butindb	;wreg free
  5251  0110B2  6E39               	movwf	_buttons,c	;volatile
  5252                           
  5253                           ;main.c: 207: switch(buttons)
  5254  0110B4  D019               	goto	l1036
  5255  0110B6  EC09  F090         	call	_Audit	;wreg free
  5256                           
  5257                           ;main.c: 210: break;
  5258  0110BA  D02F               	goto	l1038
  5259  0110BC  EC97  F084         	call	_Sensor_set	;wreg free
  5260                           
  5261                           ;main.c: 212: break;
  5262  0110C0  D02C               	goto	l1038
  5263  0110C2  EC02  F085         	call	_Hopper_coin	;wreg free
  5264                           
  5265                           ;main.c: 214: break;
  5266  0110C6  D029               	goto	l1038
  5267  0110C8  ECB3  F083         	call	_set_notes	;wreg free
  5268                           
  5269                           ;main.c: 216: break;
  5270  0110CC  D026               	goto	l1038
  5271  0110CE  EC10  F08C         	call	_Clear_cred	;wreg free
  5272                           
  5273                           ;main.c: 218: venflags.service = 0;
  5274  0110D2  9E2E               	bcf	_venflags,7,c
  5275  0110D4  00FF               	reset		;# 
  5276  0110D6  ECEA  F089         	call	_price_set	;wreg free
  5277                           
  5278                           ;main.c: 221: break;
  5279  0110DA  D01F               	goto	l1038
  5280  0110DC  ECB0  F081         	call	_Vend_setup	;wreg free
  5281                           
  5282                           ;main.c: 223: break;
  5283  0110E0  D01C               	goto	l1038
  5284  0110E2                     l1045:
  5285  0110E2  9E2E               	bcf	_venflags,7,c
  5286  0110E4  00FF               	reset		;# 
  5287                           
  5288                           ;main.c: 227: }
  5289                           
  5290                           ;main.c: 226: break;
  5291  0110E6  D019               	goto	l1038
  5292  0110E8                     l1036:
  5293  0110E8  5039               	movf	_buttons,w,c	;volatile
  5294                           
  5295                           ; Switch size 1, requested type "space"
  5296                           ; Number of cases is 8, Range of values is 1 to 128
  5297                           ; switch strategies available:
  5298                           ; Name         Instructions Cycles
  5299                           ; simple_byte           25    13 (average)
  5300                           ;	Chosen strategy is simple_byte
  5301  0110EA  0A01               	xorlw	1	; case 1
  5302  0110EC  B4D8               	btfsc	status,2,c
  5303  0110EE  D7E3               	goto	l1037
  5304  0110F0  0A03               	xorlw	3	; case 2
  5305  0110F2  B4D8               	btfsc	status,2,c
  5306  0110F4  D7E3               	goto	l1039
  5307  0110F6  0A06               	xorlw	6	; case 4
  5308  0110F8  B4D8               	btfsc	status,2,c
  5309  0110FA  D7E3               	goto	l1040
  5310  0110FC  0A0C               	xorlw	12	; case 8
  5311  0110FE  B4D8               	btfsc	status,2,c
  5312  011100  D7E3               	goto	l1041
  5313  011102  0A18               	xorlw	24	; case 16
  5314  011104  B4D8               	btfsc	status,2,c
  5315  011106  D7E3               	goto	l1042
  5316  011108  0A30               	xorlw	48	; case 32
  5317  01110A  B4D8               	btfsc	status,2,c
  5318  01110C  D7E4               	goto	l1043
  5319  01110E  0A60               	xorlw	96	; case 64
  5320  011110  B4D8               	btfsc	status,2,c
  5321  011112  D7E4               	goto	l1044
  5322  011114  0AC0               	xorlw	192	; case 128
  5323  011116  B4D8               	btfsc	status,2,c
  5324  011118  D7E4               	goto	l1045
  5325  01111A                     l1038:
  5326  01111A  AE2E               	btfss	_venflags,7,c
  5327  01111C  0012               	return	
  5328  01111E  D7C7               	goto	l1035
  5329  011120                     __end_of_enter_service:
  5330                           	opt stack 0
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           prodh	equ	0xFF4
  5336                           prodl	equ	0xFF3
  5337                           postinc0	equ	0xFEE
  5338                           wreg	equ	0xFE8
  5339                           indf2	equ	0xFDF
  5340                           fsr2h	equ	0xFDA
  5341                           fsr2l	equ	0xFD9
  5342                           status	equ	0xFD8
  5343                           
  5344 ;; *************** function _set_notes *****************
  5345 ;; Defined at:
  5346 ;;		line 57 in file "mdb.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:   10
  5367 ;; This function calls:
  5368 ;;		_butindb
  5369 ;;		_displ_note
  5370 ;;		_enable_notes
  5371 ;;		_lcd_string
  5372 ;; This function is called by:
  5373 ;;		_enter_service
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text21
  5378  010766                     __ptext21:
  5379                           	opt stack 0
  5380  010766                     _set_notes:
  5381                           	opt stack 19
  5382                           
  5383                           ;mdb.c: 59: lcd_string(setnotes, line1);
  5384                           
  5385                           ;incstack = 0
  5386  010766  0E3E               	movlw	low _setnotes
  5387  010768  6E24               	movwf	lcd_string@lcdstring,c
  5388  01076A  0EFD               	movlw	high _setnotes
  5389  01076C  6E25               	movwf	lcd_string@lcdstring+1,c
  5390  01076E  0E8F               	movlw	low _line1
  5391  010770  6EF6               	movwf	tblptrl,c
  5392  010772                     	if	1	;There is more than 1 active tblptr byte
  5393  010772  0EFC               	movlw	high _line1
  5394  010774  6EF7               	movwf	tblptrh,c
  5395  010776                     	endif
  5396  010776                     	if	1	;There are 3 active tblptr bytes
  5397  010776  0E00               	movlw	low (_line1 shr (0+16))
  5398  010778  6EF8               	movwf	tblptru,c
  5399  01077A                     	endif
  5400  01077A  0008               	tblrd		*
  5401  01077C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5402  010780  EC46  F087         	call	_lcd_string	;wreg free
  5403                           
  5404                           ;mdb.c: 60: mdbflags.noteset = 1;
  5405  010784  8A3E               	bsf	_mdbflags,5,c
  5406                           
  5407                           ;mdb.c: 61: mdbflags.endis = 1;
  5408  010786  8C3E               	bsf	_mdbflags,6,c
  5409                           
  5410                           ;mdb.c: 62: while(mdbflags.noteset)
  5411  010788  D064               	goto	l2697
  5412  01078A                     
  5413                           ;mdb.c: 63: {
  5414                           ;mdb.c: 64: buttons = butindb();
  5415  01078A  EC77  F08E         	call	_butindb	;wreg free
  5416  01078E  6E39               	movwf	_buttons,c	;volatile
  5417                           
  5418                           ;mdb.c: 65: notenum = buttons;
  5419  010790  C039  F04D         	movff	_buttons,_notenum	;volatile
  5420                           
  5421                           ;mdb.c: 66: switch(buttons)
  5422  010794  D048               	goto	l2699
  5423  010796  0ECD               	movlw	low _tenrand
  5424  010798  6E29               	movwf	displ_note@notestring,c
  5425  01079A  0EFF               	movlw	high _tenrand
  5426  01079C  6E2A               	movwf	displ_note@notestring+1,c
  5427  01079E  ECA2  F08D         	call	_displ_note	;wreg free
  5428  0107A2  6E42               	movwf	_dspposition,c
  5429                           
  5430                           ;mdb.c: 70: enable_notes(0x01);
  5431  0107A4  0E01               	movlw	1
  5432  0107A6  EC2A  F08A         	call	_enable_notes
  5433                           
  5434                           ;mdb.c: 71: break;
  5435  0107AA  D050               	goto	l2701
  5436  0107AC  0EEE               	movlw	low _twentyrand
  5437  0107AE  6E29               	movwf	displ_note@notestring,c
  5438  0107B0  0EFF               	movlw	high _twentyrand
  5439  0107B2  6E2A               	movwf	displ_note@notestring+1,c
  5440  0107B4  ECA2  F08D         	call	_displ_note	;wreg free
  5441  0107B8  6E42               	movwf	_dspposition,c
  5442                           
  5443                           ;mdb.c: 74: enable_notes(0x02);
  5444  0107BA  0E02               	movlw	2
  5445  0107BC  EC2A  F08A         	call	_enable_notes
  5446                           
  5447                           ;mdb.c: 75: break;
  5448  0107C0  D045               	goto	l2701
  5449  0107C2  0EE6               	movlw	low _fiftyrand
  5450  0107C4  6E29               	movwf	displ_note@notestring,c
  5451  0107C6  0EFF               	movlw	high _fiftyrand
  5452  0107C8  6E2A               	movwf	displ_note@notestring+1,c
  5453  0107CA  ECA2  F08D         	call	_displ_note	;wreg free
  5454  0107CE  6E42               	movwf	_dspposition,c
  5455                           
  5456                           ;mdb.c: 78: enable_notes(0x04);
  5457  0107D0  0E04               	movlw	4
  5458  0107D2  EC2A  F08A         	call	_enable_notes
  5459                           
  5460                           ;mdb.c: 79: break;
  5461  0107D6  D03A               	goto	l2701
  5462  0107D8  0EDE               	movlw	low _hundredrand
  5463  0107DA  6E29               	movwf	displ_note@notestring,c
  5464  0107DC  0EFF               	movlw	high _hundredrand
  5465  0107DE  6E2A               	movwf	displ_note@notestring+1,c
  5466  0107E0  ECA2  F08D         	call	_displ_note	;wreg free
  5467  0107E4  6E42               	movwf	_dspposition,c
  5468                           
  5469                           ;mdb.c: 82: enable_notes(0x08);
  5470  0107E6  0E08               	movlw	8
  5471  0107E8  EC2A  F08A         	call	_enable_notes
  5472                           
  5473                           ;mdb.c: 83: break;
  5474  0107EC  D02F               	goto	l2701
  5475  0107EE  0ED6               	movlw	low _twohundredrand
  5476  0107F0  6E29               	movwf	displ_note@notestring,c
  5477  0107F2  0EFF               	movlw	high _twohundredrand
  5478  0107F4  6E2A               	movwf	displ_note@notestring+1,c
  5479  0107F6  ECA2  F08D         	call	_displ_note	;wreg free
  5480  0107FA  6E42               	movwf	_dspposition,c
  5481                           
  5482                           ;mdb.c: 86: enable_notes(0x10);
  5483  0107FC  0E10               	movlw	16
  5484  0107FE  EC2A  F08A         	call	_enable_notes
  5485                           
  5486                           ;mdb.c: 87: break;
  5487  010802  D024               	goto	l2701
  5488  010804  0E9E               	movlw	low _servmsg
  5489  010806  6E24               	movwf	lcd_string@lcdstring,c
  5490  010808  0EFC               	movlw	high _servmsg
  5491  01080A  6E25               	movwf	lcd_string@lcdstring+1,c
  5492  01080C  0E8F               	movlw	low _line1
  5493  01080E  6EF6               	movwf	tblptrl,c
  5494  010810                     	if	1	;There is more than 1 active tblptr byte
  5495  010810  0EFC               	movlw	high _line1
  5496  010812  6EF7               	movwf	tblptrh,c
  5497  010814                     	endif
  5498  010814                     	if	1	;There are 3 active tblptr bytes
  5499  010814  0E00               	movlw	low (_line1 shr (0+16))
  5500  010816  6EF8               	movwf	tblptru,c
  5501  010818                     	endif
  5502  010818  0008               	tblrd		*
  5503  01081A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5504  01081E  EC46  F087         	call	_lcd_string	;wreg free
  5505                           
  5506                           ;mdb.c: 90: mdbflags.noteset = 0;
  5507  010822  9A3E               	bcf	_mdbflags,5,c
  5508                           
  5509                           ;mdb.c: 92: }
  5510                           
  5511                           ;mdb.c: 91: default : break;
  5512  010824  D013               	goto	l2701
  5513  010826                     l2699:
  5514  010826  5039               	movf	_buttons,w,c	;volatile
  5515                           
  5516                           ; Switch size 1, requested type "space"
  5517                           ; Number of cases is 6, Range of values is 1 to 128
  5518                           ; switch strategies available:
  5519                           ; Name         Instructions Cycles
  5520                           ; simple_byte           19    10 (average)
  5521                           ;	Chosen strategy is simple_byte
  5522  010828  0A01               	xorlw	1	; case 1
  5523  01082A  B4D8               	btfsc	status,2,c
  5524  01082C  D7B4               	goto	l2700
  5525  01082E  0A03               	xorlw	3	; case 2
  5526  010830  B4D8               	btfsc	status,2,c
  5527  010832  D7BC               	goto	l2702
  5528  010834  0A06               	xorlw	6	; case 4
  5529  010836  B4D8               	btfsc	status,2,c
  5530  010838  D7C4               	goto	l2703
  5531  01083A  0A0C               	xorlw	12	; case 8
  5532  01083C  B4D8               	btfsc	status,2,c
  5533  01083E  D7CC               	goto	l2704
  5534  010840  0A18               	xorlw	24	; case 16
  5535  010842  B4D8               	btfsc	status,2,c
  5536  010844  D7D4               	goto	l2705
  5537  010846  0A90               	xorlw	144	; case 128
  5538  010848  B4D8               	btfsc	status,2,c
  5539  01084A  D7DC               	goto	l2706
  5540  01084C                     l2701:
  5541                           
  5542                           ;mdb.c: 93: ((uint8_t*) &noteen)[0] = noteen_byte;
  5543  01084C  C03C  F03D         	movff	_noteen_byte,_noteen	;volatile
  5544  010850  F000               	nop		;# 
  5545  010852                     l2697:
  5546  010852  AA3E               	btfss	_mdbflags,5,c
  5547  010854  0012               	return	
  5548  010856  D799               	goto	l2698
  5549  010858                     __end_of_set_notes:
  5550                           	opt stack 0
  5551                           tblptru	equ	0xFF8
  5552                           tblptrh	equ	0xFF7
  5553                           tblptrl	equ	0xFF6
  5554                           tablat	equ	0xFF5
  5555                           prodh	equ	0xFF4
  5556                           prodl	equ	0xFF3
  5557                           postinc0	equ	0xFEE
  5558                           wreg	equ	0xFE8
  5559                           indf2	equ	0xFDF
  5560                           fsr2h	equ	0xFDA
  5561                           fsr2l	equ	0xFD9
  5562                           status	equ	0xFD8
  5563                           
  5564 ;; *************** function _enable_notes *****************
  5565 ;; Defined at:
  5566 ;;		line 98 in file "mdb.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  notenum         1    wreg     unsigned char 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  notenum         1   32[COMRAM] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;Total ram usage:        1 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    9
  5587 ;; This function calls:
  5588 ;;		_butindb
  5589 ;;		_displ_nendis
  5590 ;;		_lcd_string
  5591 ;;		_save_notes
  5592 ;; This function is called by:
  5593 ;;		_set_notes
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text22
  5598  011454                     __ptext22:
  5599                           	opt stack 0
  5600  011454                     _enable_notes:
  5601                           	opt stack 19
  5602                           
  5603                           ;incstack = 0
  5604                           ;enable_notes@notenum stored from wreg
  5605  011454  6E2B               	movwf	enable_notes@notenum,c
  5606                           
  5607                           ;mdb.c: 100: mdbflags.endis = 1;
  5608  011456  8C3E               	bsf	_mdbflags,6,c
  5609                           
  5610                           ;mdb.c: 101: displ_nendis(notenum);
  5611  011458  502B               	movf	enable_notes@notenum,w,c
  5612  01145A  EC5E  F08E         	call	_displ_nendis
  5613                           
  5614                           ;mdb.c: 102: while(mdbflags.endis)
  5615  01145E  D034               	goto	l2716
  5616  011460                     
  5617                           ;mdb.c: 103: {
  5618                           ;mdb.c: 104: buttons = butindb();
  5619  011460  EC77  F08E         	call	_butindb	;wreg free
  5620  011464  6E39               	movwf	_buttons,c	;volatile
  5621                           
  5622                           ;mdb.c: 105: switch(buttons)
  5623  011466  D026               	goto	l2714
  5624  011468  503C               	movf	_noteen_byte,w,c	;volatile
  5625  01146A  102B               	iorwf	enable_notes@notenum,w,c
  5626  01146C  6E3C               	movwf	_noteen_byte,c	;volatile
  5627                           
  5628                           ;mdb.c: 108: save_notes();
  5629  01146E  ECFF  F08E         	call	_save_notes	;wreg free
  5630                           
  5631                           ;mdb.c: 109: displ_nendis(notenum);
  5632  011472  502B               	movf	enable_notes@notenum,w,c
  5633  011474  EC5E  F08E         	call	_displ_nendis
  5634                           
  5635                           ;mdb.c: 110: break;
  5636  011478  D027               	goto	l2716
  5637  01147A  502B               	movf	enable_notes@notenum,w,c
  5638  01147C  0AFF               	xorlw	255
  5639  01147E  143C               	andwf	_noteen_byte,w,c	;volatile
  5640  011480  6E3C               	movwf	_noteen_byte,c	;volatile
  5641                           
  5642                           ;mdb.c: 112: save_notes();
  5643  011482  ECFF  F08E         	call	_save_notes	;wreg free
  5644                           
  5645                           ;mdb.c: 113: displ_nendis(notenum);
  5646  011486  502B               	movf	enable_notes@notenum,w,c
  5647  011488  EC5E  F08E         	call	_displ_nendis
  5648                           
  5649                           ;mdb.c: 114: break;
  5650  01148C  D01D               	goto	l2716
  5651  01148E                     l2718:
  5652  01148E  9C3E               	bcf	_mdbflags,6,c
  5653                           
  5654                           ;mdb.c: 116: lcd_string(setnotes, line1);
  5655  011490  0E3E               	movlw	low _setnotes
  5656  011492  6E24               	movwf	lcd_string@lcdstring,c
  5657  011494  0EFD               	movlw	high _setnotes
  5658  011496  6E25               	movwf	lcd_string@lcdstring+1,c
  5659  011498  0E8F               	movlw	low _line1
  5660  01149A  6EF6               	movwf	tblptrl,c
  5661  01149C                     	if	1	;There is more than 1 active tblptr byte
  5662  01149C  0EFC               	movlw	high _line1
  5663  01149E  6EF7               	movwf	tblptrh,c
  5664  0114A0                     	endif
  5665  0114A0                     	if	1	;There are 3 active tblptr bytes
  5666  0114A0  0E00               	movlw	low (_line1 shr (0+16))
  5667  0114A2  6EF8               	movwf	tblptru,c
  5668  0114A4                     	endif
  5669  0114A4  0008               	tblrd		*
  5670  0114A6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5671  0114AA  EC46  F087         	call	_lcd_string	;wreg free
  5672                           
  5673                           ;mdb.c: 117: buttons = 0;
  5674  0114AE  0E00               	movlw	0
  5675  0114B0  6E39               	movwf	_buttons,c	;volatile
  5676                           
  5677                           ;mdb.c: 119: }
  5678                           
  5679                           ;mdb.c: 118: default : break;
  5680  0114B2  D00A               	goto	l2716
  5681  0114B4                     l2714:
  5682  0114B4  5039               	movf	_buttons,w,c	;volatile
  5683                           
  5684                           ; Switch size 1, requested type "space"
  5685                           ; Number of cases is 3, Range of values is 1 to 128
  5686                           ; switch strategies available:
  5687                           ; Name         Instructions Cycles
  5688                           ; simple_byte           10     6 (average)
  5689                           ;	Chosen strategy is simple_byte
  5690  0114B6  0A01               	xorlw	1	; case 1
  5691  0114B8  B4D8               	btfsc	status,2,c
  5692  0114BA  D7D6               	goto	l2715
  5693  0114BC  0A03               	xorlw	3	; case 2
  5694  0114BE  B4D8               	btfsc	status,2,c
  5695  0114C0  D7DC               	goto	l2717
  5696  0114C2  0A82               	xorlw	130	; case 128
  5697  0114C4  B4D8               	btfsc	status,2,c
  5698  0114C6  D7E3               	goto	l2718
  5699  0114C8                     l2716:
  5700  0114C8  AC3E               	btfss	_mdbflags,6,c
  5701  0114CA  0012               	return	
  5702  0114CC  D7C9               	goto	l2713
  5703  0114CE                     __end_of_enable_notes:
  5704                           	opt stack 0
  5705                           tblptru	equ	0xFF8
  5706                           tblptrh	equ	0xFF7
  5707                           tblptrl	equ	0xFF6
  5708                           tablat	equ	0xFF5
  5709                           prodh	equ	0xFF4
  5710                           prodl	equ	0xFF3
  5711                           postinc0	equ	0xFEE
  5712                           wreg	equ	0xFE8
  5713                           indf2	equ	0xFDF
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _save_notes *****************
  5719 ;; Defined at:
  5720 ;;		line 129 in file "mdb.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    3
  5741 ;; This function calls:
  5742 ;;		_DATAEE_WriteByte
  5743 ;; This function is called by:
  5744 ;;		_enable_notes
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text23
  5749  011DFE                     __ptext23:
  5750                           	opt stack 0
  5751  011DFE                     _save_notes:
  5752                           	opt stack 24
  5753                           
  5754                           ;mdb.c: 131: DATAEE_WriteByte(notebits, noteen_byte);
  5755                           
  5756                           ;incstack = 0
  5757  011DFE  0E55               	movlw	low _notebits
  5758  011E00  6EF6               	movwf	tblptrl,c
  5759  011E02                     	if	1	;There is more than 1 active tblptr byte
  5760  011E02  0EFC               	movlw	high _notebits
  5761  011E04  6EF7               	movwf	tblptrh,c
  5762  011E06                     	endif
  5763  011E06                     	if	1	;There are 3 active tblptr bytes
  5764  011E06  0E00               	movlw	low (_notebits shr (0+16))
  5765  011E08  6EF8               	movwf	tblptru,c
  5766  011E0A                     	endif
  5767  011E0A  0009               	tblrd		*+
  5768  011E0C  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  5769  011E10  000A               	tblrd		*-
  5770  011E12  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  5771  011E16  C03C  F01F         	movff	_noteen_byte,DATAEE_WriteByte@bData	;volatile
  5772  011E1A  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  5773  011E1E  0012               	return		;funcret
  5774  011E20                     __end_of_save_notes:
  5775                           	opt stack 0
  5776                           tblptru	equ	0xFF8
  5777                           tblptrh	equ	0xFF7
  5778                           tblptrl	equ	0xFF6
  5779                           tablat	equ	0xFF5
  5780                           prodh	equ	0xFF4
  5781                           prodl	equ	0xFF3
  5782                           postinc0	equ	0xFEE
  5783                           wreg	equ	0xFE8
  5784                           indf2	equ	0xFDF
  5785                           fsr2h	equ	0xFDA
  5786                           fsr2l	equ	0xFD9
  5787                           status	equ	0xFD8
  5788                           
  5789 ;; *************** function _displ_nendis *****************
  5790 ;; Defined at:
  5791 ;;		line 114 in file "lcd.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  note2disp       1    wreg     unsigned char 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  note2disp       1   30[COMRAM] unsigned char 
  5796 ;;  x               1   31[COMRAM] unsigned char 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      void 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;Total ram usage:        2 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    8
  5813 ;; This function calls:
  5814 ;;		_lcd_string
  5815 ;; This function is called by:
  5816 ;;		_enable_notes
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text24
  5821  011CBC                     __ptext24:
  5822                           	opt stack 0
  5823  011CBC                     _displ_nendis:
  5824                           	opt stack 19
  5825                           
  5826                           ;incstack = 0
  5827                           ;displ_nendis@note2disp stored from wreg
  5828  011CBC  6E29               	movwf	displ_nendis@note2disp,c
  5829                           
  5830                           ;lcd.c: 116: uint8_t x = note2disp & noteen_byte;
  5831  011CBE  5029               	movf	displ_nendis@note2disp,w,c
  5832  011CC0  143C               	andwf	_noteen_byte,w,c	;volatile
  5833  011CC2  6E2A               	movwf	displ_nendis@x,c
  5834                           
  5835                           ;lcd.c: 117: if(x != 0x00)
  5836  011CC4  502A               	movf	displ_nendis@x,w,c
  5837  011CC6  B4D8               	btfsc	status,2,c
  5838  011CC8  D009               	goto	l1484
  5839                           
  5840                           ;lcd.c: 118: {
  5841                           ;lcd.c: 119: lcd_string(enabled, dspposition);
  5842  011CCA  0EC3               	movlw	low _enabled
  5843  011CCC  6E24               	movwf	lcd_string@lcdstring,c
  5844  011CCE  0EFF               	movlw	high _enabled
  5845  011CD0  6E25               	movwf	lcd_string@lcdstring+1,c
  5846  011CD2  C042  F026         	movff	_dspposition,lcd_string@lcdline
  5847  011CD6  EC46  F087         	call	_lcd_string	;wreg free
  5848                           
  5849                           ;lcd.c: 120: }
  5850  011CDA  0012               	return	
  5851  011CDC                     l1484:
  5852                           
  5853                           ;lcd.c: 121: else
  5854                           ;lcd.c: 122: {
  5855                           ;lcd.c: 123: lcd_string(disabled, dspposition);
  5856  011CDC  0EB9               	movlw	low _disabled
  5857  011CDE  6E24               	movwf	lcd_string@lcdstring,c
  5858  011CE0  0EFF               	movlw	high _disabled
  5859  011CE2  6E25               	movwf	lcd_string@lcdstring+1,c
  5860  011CE4  C042  F026         	movff	_dspposition,lcd_string@lcdline
  5861  011CE8  EC46  F087         	call	_lcd_string	;wreg free
  5862  011CEC  0012               	return	
  5863  011CEE                     __end_of_displ_nendis:
  5864                           	opt stack 0
  5865                           tblptru	equ	0xFF8
  5866                           tblptrh	equ	0xFF7
  5867                           tblptrl	equ	0xFF6
  5868                           tablat	equ	0xFF5
  5869                           prodh	equ	0xFF4
  5870                           prodl	equ	0xFF3
  5871                           postinc0	equ	0xFEE
  5872                           wreg	equ	0xFE8
  5873                           indf2	equ	0xFDF
  5874                           fsr2h	equ	0xFDA
  5875                           fsr2l	equ	0xFD9
  5876                           status	equ	0xFD8
  5877                           
  5878 ;; *************** function _displ_note *****************
  5879 ;; Defined at:
  5880 ;;		line 107 in file "lcd.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  notestring      2   30[COMRAM] PTR unsigned char 
  5883 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  5884 ;;		 -> tenrand(9), 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    wreg      unsigned char 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;Total ram usage:        2 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    8
  5903 ;; This function calls:
  5904 ;;		_lcd_string
  5905 ;;		_lcd_write
  5906 ;; This function is called by:
  5907 ;;		_set_notes
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text25
  5912  011B44                     __ptext25:
  5913                           	opt stack 0
  5914  011B44                     _displ_note:
  5915                           	opt stack 20
  5916                           
  5917                           ;lcd.c: 109: lcd_write(dispclr);
  5918                           
  5919                           ;incstack = 0
  5920  011B44  0E99               	movlw	low _dispclr
  5921  011B46  6EF6               	movwf	tblptrl,c
  5922  011B48                     	if	1	;There is more than 1 active tblptr byte
  5923  011B48  0EFC               	movlw	high _dispclr
  5924  011B4A  6EF7               	movwf	tblptrh,c
  5925  011B4C                     	endif
  5926  011B4C                     	if	1	;There are 3 active tblptr bytes
  5927  011B4C  0E00               	movlw	low (_dispclr shr (0+16))
  5928  011B4E  6EF8               	movwf	tblptru,c
  5929  011B50                     	endif
  5930  011B50  0008               	tblrd		*
  5931  011B52  50F5               	movf	tablat,w,c
  5932  011B54  EC90  F08E         	call	_lcd_write
  5933                           
  5934                           ;lcd.c: 110: lcd_string(notestring, line2);
  5935  011B58  C029  F024         	movff	displ_note@notestring,lcd_string@lcdstring
  5936  011B5C  C02A  F025         	movff	displ_note@notestring+1,lcd_string@lcdstring+1
  5937  011B60  0E8E               	movlw	low _line2
  5938  011B62  6EF6               	movwf	tblptrl,c
  5939  011B64                     	if	1	;There is more than 1 active tblptr byte
  5940  011B64  0EFC               	movlw	high _line2
  5941  011B66  6EF7               	movwf	tblptrh,c
  5942  011B68                     	endif
  5943  011B68                     	if	1	;There are 3 active tblptr bytes
  5944  011B68  0E00               	movlw	low (_line2 shr (0+16))
  5945  011B6A  6EF8               	movwf	tblptru,c
  5946  011B6C                     	endif
  5947  011B6C  0008               	tblrd		*
  5948  011B6E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5949  011B72  EC46  F087         	call	_lcd_string	;wreg free
  5950                           
  5951                           ;lcd.c: 111: return bflag+2;
  5952  011B76  5046               	movf	_bflag,w,c
  5953  011B78  0F02               	addlw	2
  5954  011B7A  0012               	return	
  5955  011B7C                     __end_of_displ_note:
  5956                           	opt stack 0
  5957                           tblptru	equ	0xFF8
  5958                           tblptrh	equ	0xFF7
  5959                           tblptrl	equ	0xFF6
  5960                           tablat	equ	0xFF5
  5961                           prodh	equ	0xFF4
  5962                           prodl	equ	0xFF3
  5963                           postinc0	equ	0xFEE
  5964                           wreg	equ	0xFE8
  5965                           indf2	equ	0xFDF
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function _price_set *****************
  5971 ;; Defined at:
  5972 ;;		line 297 in file "vend.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:   10
  5993 ;; This function calls:
  5994 ;;		_Read_Service
  5995 ;;		_butindb
  5996 ;;		_lcd_string
  5997 ;;		_set_price
  5998 ;; This function is called by:
  5999 ;;		_enter_service
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text26
  6004  0113D4                     __ptext26:
  6005                           	opt stack 0
  6006  0113D4                     _price_set:
  6007                           	opt stack 19
  6008                           
  6009                           ;vend.c: 299: venflags.priceset = 1;
  6010                           
  6011                           ;incstack = 0
  6012  0113D4  802F               	bsf	_venflags+1,0,c
  6013                           
  6014                           ;vend.c: 300: lcd_string(pricesetmsg, line1);
  6015  0113D6  0E50               	movlw	low _pricesetmsg
  6016  0113D8  6E24               	movwf	lcd_string@lcdstring,c
  6017  0113DA  0EFF               	movlw	high _pricesetmsg
  6018  0113DC  6E25               	movwf	lcd_string@lcdstring+1,c
  6019  0113DE  0E8F               	movlw	low _line1
  6020  0113E0  6EF6               	movwf	tblptrl,c
  6021  0113E2                     	if	1	;There is more than 1 active tblptr byte
  6022  0113E2  0EFC               	movlw	high _line1
  6023  0113E4  6EF7               	movwf	tblptrh,c
  6024  0113E6                     	endif
  6025  0113E6                     	if	1	;There are 3 active tblptr bytes
  6026  0113E6  0E00               	movlw	low (_line1 shr (0+16))
  6027  0113E8  6EF8               	movwf	tblptru,c
  6028  0113EA                     	endif
  6029  0113EA  0008               	tblrd		*
  6030  0113EC  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6031  0113F0  EC46  F087         	call	_lcd_string	;wreg free
  6032                           
  6033                           ;vend.c: 301: lcd_string(pricesetm2, line2);
  6034  0113F4  0E83               	movlw	low _pricesetm2
  6035  0113F6  6E24               	movwf	lcd_string@lcdstring,c
  6036  0113F8  0EFD               	movlw	high _pricesetm2
  6037  0113FA  6E25               	movwf	lcd_string@lcdstring+1,c
  6038  0113FC  0E8E               	movlw	low _line2
  6039  0113FE  6EF6               	movwf	tblptrl,c
  6040  011400                     	if	1	;There is more than 1 active tblptr byte
  6041  011400  0EFC               	movlw	high _line2
  6042  011402  6EF7               	movwf	tblptrh,c
  6043  011404                     	endif
  6044  011404                     	if	1	;There are 3 active tblptr bytes
  6045  011404  0E00               	movlw	low (_line2 shr (0+16))
  6046  011406  6EF8               	movwf	tblptru,c
  6047  011408                     	endif
  6048  011408  0008               	tblrd		*
  6049  01140A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6050  01140E  EC46  F087         	call	_lcd_string	;wreg free
  6051                           
  6052                           ;vend.c: 302: while(venflags.priceset)
  6053  011412  D00E               	goto	l2095
  6054  011414                     
  6055                           ;vend.c: 303: {
  6056                           ;vend.c: 304: buttons = butindb();
  6057  011414  EC77  F08E         	call	_butindb	;wreg free
  6058  011418  6E39               	movwf	_buttons,c	;volatile
  6059                           
  6060                           ;vend.c: 305: if(buttons != 0x00)
  6061  01141A  5039               	movf	_buttons,w,c	;volatile
  6062  01141C  B4D8               	btfsc	status,2,c
  6063  01141E  D003               	goto	l2094
  6064                           
  6065                           ;vend.c: 306: {
  6066                           ;vend.c: 307: set_price(buttons);
  6067  011420  5039               	movf	_buttons,w,c	;volatile
  6068  011422  EC24  F081         	call	_set_price
  6069  011426                     l2094:
  6070                           
  6071                           ;vend.c: 308: }
  6072                           ;vend.c: 309: if(Read_Service() == 0x00)
  6073  011426  ECC2  F08F         	call	_Read_Service	;wreg free
  6074  01142A  0900               	iorlw	0
  6075  01142C  B4D8               	btfsc	status,2,c
  6076                           
  6077                           ;vend.c: 310: {
  6078                           ;vend.c: 311: venflags.priceset = 0;
  6079  01142E  902F               	bcf	_venflags+1,0,c
  6080  011430                     l2095:
  6081  011430  B02F               	btfsc	_venflags+1,0,c
  6082  011432  D7F0               	goto	l2093
  6083                           
  6084                           ;vend.c: 312: }
  6085                           ;vend.c: 313: }
  6086                           ;vend.c: 314: lcd_string(servmsg, line1);
  6087  011434  0E9E               	movlw	low _servmsg
  6088  011436  6E24               	movwf	lcd_string@lcdstring,c
  6089  011438  0EFC               	movlw	high _servmsg
  6090  01143A  6E25               	movwf	lcd_string@lcdstring+1,c
  6091  01143C  0E8F               	movlw	low _line1
  6092  01143E  6EF6               	movwf	tblptrl,c
  6093  011440                     	if	1	;There is more than 1 active tblptr byte
  6094  011440  0EFC               	movlw	high _line1
  6095  011442  6EF7               	movwf	tblptrh,c
  6096  011444                     	endif
  6097  011444                     	if	1	;There are 3 active tblptr bytes
  6098  011444  0E00               	movlw	low (_line1 shr (0+16))
  6099  011446  6EF8               	movwf	tblptru,c
  6100  011448                     	endif
  6101  011448  0008               	tblrd		*
  6102  01144A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6103  01144E  EC46  F087         	call	_lcd_string	;wreg free
  6104  011452  0012               	return		;funcret
  6105  011454                     __end_of_price_set:
  6106                           	opt stack 0
  6107                           tblptru	equ	0xFF8
  6108                           tblptrh	equ	0xFF7
  6109                           tblptrl	equ	0xFF6
  6110                           tablat	equ	0xFF5
  6111                           prodh	equ	0xFF4
  6112                           prodl	equ	0xFF3
  6113                           postinc0	equ	0xFEE
  6114                           wreg	equ	0xFE8
  6115                           indf2	equ	0xFDF
  6116                           fsr2h	equ	0xFDA
  6117                           fsr2l	equ	0xFD9
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function _set_price *****************
  6121 ;; Defined at:
  6122 ;;		line 330 in file "vend.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  buttons         1    wreg     unsigned char 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  buttons         1   12[BANK0 ] unsigned char 
  6127 ;;  channel         1   13[BANK0 ] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      void 
  6130 ;; Registers used:
  6131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;Total ram usage:        4 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    9
  6144 ;; This function calls:
  6145 ;;		_DATAEE_ReadByte
  6146 ;;		_DATAEE_WriteByte
  6147 ;;		_butindb
  6148 ;;		_displ_price
  6149 ;;		_get_channel
  6150 ;;		_lcd_string
  6151 ;; This function is called by:
  6152 ;;		_price_set
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text27
  6157  010248                     __ptext27:
  6158                           	opt stack 0
  6159  010248                     _set_price:
  6160                           	opt stack 19
  6161                           
  6162                           ;incstack = 0
  6163                           ;set_price@buttons stored from wreg
  6164  010248  0100               	movlb	0	; () banked
  6165  01024A  6FB3               	movwf	set_price@buttons& (0+255),b
  6166                           
  6167                           ;vend.c: 332: venflags.setprice = 1;
  6168  01024C  822F               	bsf	_venflags+1,1,c
  6169                           
  6170                           ;vend.c: 333: uint8_t channel = get_channel(buttons);
  6171  01024E  0100               	movlb	0	; () banked
  6172  010250  51B3               	movf	set_price@buttons& (0+255),w,b
  6173  010252  EC40  F08F         	call	_get_channel
  6174  010256  0100               	movlb	0	; () banked
  6175  010258  6FB4               	movwf	set_price@channel& (0+255),b
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;vend.c: 335: vendprice = DATAEE_ReadByte(pricestore + channel);
  6179  01025A  0E59               	movlw	low _pricestore
  6180  01025C  6EF6               	movwf	tblptrl,c
  6181  01025E                     	if	1	;There is more than 1 active tblptr byte
  6182  01025E  0EFC               	movlw	high _pricestore
  6183  010260  6EF7               	movwf	tblptrh,c
  6184  010262                     	endif
  6185  010262                     	if	1	;There are 3 active tblptr bytes
  6186  010262  0E00               	movlw	low (_pricestore shr (0+16))
  6187  010264  6EF8               	movwf	tblptru,c
  6188  010266                     	endif
  6189  010266  0009               	tblrd		*+
  6190  010268  CFF5 F02B          	movff	tablat,??_set_price
  6191  01026C  0009               	tblrd		*+
  6192  01026E  CFF5 F02C          	movff	tablat,??_set_price+1
  6193  010272  51B4               	movf	set_price@channel& (0+255),w,b
  6194  010274  242B               	addwf	??_set_price,w,c
  6195  010276  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  6196  010278  0E00               	movlw	0
  6197  01027A  202C               	addwfc	??_set_price+1,w,c
  6198  01027C  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  6199  01027E  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  6200  010282  6E38               	movwf	_vendprice,c	;volatile
  6201                           
  6202                           ;vend.c: 336: displ_price(vendprice);
  6203  010284  5038               	movf	_vendprice,w,c	;volatile
  6204  010286  EC48  F08D         	call	_displ_price
  6205                           
  6206                           ;vend.c: 337: while(venflags.setprice)
  6207  01028A  D067               	goto	l2110
  6208  01028C                     
  6209                           ;vend.c: 338: {
  6210                           ;vend.c: 339: buttons = butindb();
  6211  01028C  EC77  F08E         	call	_butindb	;wreg free
  6212  010290  0100               	movlb	0	; () banked
  6213  010292  6FB3               	movwf	set_price@buttons& (0+255),b
  6214                           
  6215                           ;vend.c: 341: switch(buttons)
  6216  010294  D057               	goto	l2108
  6217  010296                     
  6218                           ; BSR set to: 0
  6219                           
  6220                           ; BSR set to: 0
  6221  010296  2A38               	incf	_vendprice,f,c	;volatile
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;vend.c: 344: DATAEE_WriteByte(pricestore + channel, vendprice);
  6225  010298  0E59               	movlw	low _pricestore
  6226  01029A  6EF6               	movwf	tblptrl,c
  6227  01029C                     	if	1	;There is more than 1 active tblptr byte
  6228  01029C  0EFC               	movlw	high _pricestore
  6229  01029E  6EF7               	movwf	tblptrh,c
  6230  0102A0                     	endif
  6231  0102A0                     	if	1	;There are 3 active tblptr bytes
  6232  0102A0  0E00               	movlw	low (_pricestore shr (0+16))
  6233  0102A2  6EF8               	movwf	tblptru,c
  6234  0102A4                     	endif
  6235  0102A4  0009               	tblrd		*+
  6236  0102A6  CFF5 F02B          	movff	tablat,??_set_price
  6237  0102AA  0009               	tblrd		*+
  6238  0102AC  CFF5 F02C          	movff	tablat,??_set_price+1
  6239  0102B0  51B4               	movf	set_price@channel& (0+255),w,b
  6240  0102B2  242B               	addwf	??_set_price,w,c
  6241  0102B4  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6242  0102B6  0E00               	movlw	0
  6243  0102B8  202C               	addwfc	??_set_price+1,w,c
  6244  0102BA  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6245  0102BC  C038  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  6246  0102C0  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  6247                           
  6248                           ;vend.c: 345: displ_price(vendprice);
  6249  0102C4  5038               	movf	_vendprice,w,c	;volatile
  6250  0102C6  EC48  F08D         	call	_displ_price
  6251                           
  6252                           ;vend.c: 346: break;
  6253  0102CA  D047               	goto	l2110
  6254  0102CC  0638               	decf	_vendprice,f,c	;volatile
  6255                           
  6256                           ;vend.c: 348: DATAEE_WriteByte(pricestore + channel, vendprice);
  6257  0102CE  0E59               	movlw	low _pricestore
  6258  0102D0  6EF6               	movwf	tblptrl,c
  6259  0102D2                     	if	1	;There is more than 1 active tblptr byte
  6260  0102D2  0EFC               	movlw	high _pricestore
  6261  0102D4  6EF7               	movwf	tblptrh,c
  6262  0102D6                     	endif
  6263  0102D6                     	if	1	;There are 3 active tblptr bytes
  6264  0102D6  0E00               	movlw	low (_pricestore shr (0+16))
  6265  0102D8  6EF8               	movwf	tblptru,c
  6266  0102DA                     	endif
  6267  0102DA  0009               	tblrd		*+
  6268  0102DC  CFF5 F02B          	movff	tablat,??_set_price
  6269  0102E0  0009               	tblrd		*+
  6270  0102E2  CFF5 F02C          	movff	tablat,??_set_price+1
  6271  0102E6  0100               	movlb	0	; () banked
  6272  0102E8  51B4               	movf	set_price@channel& (0+255),w,b
  6273  0102EA  242B               	addwf	??_set_price,w,c
  6274  0102EC  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6275  0102EE  0E00               	movlw	0
  6276  0102F0  202C               	addwfc	??_set_price+1,w,c
  6277  0102F2  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6278  0102F4  C038  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  6279  0102F8  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  6280                           
  6281                           ;vend.c: 349: displ_price(vendprice);
  6282  0102FC  5038               	movf	_vendprice,w,c	;volatile
  6283  0102FE  EC48  F08D         	call	_displ_price
  6284                           
  6285                           ;vend.c: 350: break;
  6286  010302  D02B               	goto	l2110
  6287  010304                     l2112:
  6288                           
  6289                           ; BSR set to: 0
  6290  010304  922F               	bcf	_venflags+1,1,c
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;vend.c: 352: lcd_string(pricesetmsg, line1);
  6294  010306  0E50               	movlw	low _pricesetmsg
  6295  010308  6E24               	movwf	lcd_string@lcdstring,c
  6296  01030A  0EFF               	movlw	high _pricesetmsg
  6297  01030C  6E25               	movwf	lcd_string@lcdstring+1,c
  6298  01030E  0E8F               	movlw	low _line1
  6299  010310  6EF6               	movwf	tblptrl,c
  6300  010312                     	if	1	;There is more than 1 active tblptr byte
  6301  010312  0EFC               	movlw	high _line1
  6302  010314  6EF7               	movwf	tblptrh,c
  6303  010316                     	endif
  6304  010316                     	if	1	;There are 3 active tblptr bytes
  6305  010316  0E00               	movlw	low (_line1 shr (0+16))
  6306  010318  6EF8               	movwf	tblptru,c
  6307  01031A                     	endif
  6308  01031A  0008               	tblrd		*
  6309  01031C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6310  010320  EC46  F087         	call	_lcd_string	;wreg free
  6311                           
  6312                           ;vend.c: 353: lcd_string(pricesetm2, line2);
  6313  010324  0E83               	movlw	low _pricesetm2
  6314  010326  6E24               	movwf	lcd_string@lcdstring,c
  6315  010328  0EFD               	movlw	high _pricesetm2
  6316  01032A  6E25               	movwf	lcd_string@lcdstring+1,c
  6317  01032C  0E8E               	movlw	low _line2
  6318  01032E  6EF6               	movwf	tblptrl,c
  6319  010330                     	if	1	;There is more than 1 active tblptr byte
  6320  010330  0EFC               	movlw	high _line2
  6321  010332  6EF7               	movwf	tblptrh,c
  6322  010334                     	endif
  6323  010334                     	if	1	;There are 3 active tblptr bytes
  6324  010334  0E00               	movlw	low (_line2 shr (0+16))
  6325  010336  6EF8               	movwf	tblptru,c
  6326  010338                     	endif
  6327  010338  0008               	tblrd		*
  6328  01033A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6329  01033E  EC46  F087         	call	_lcd_string	;wreg free
  6330                           
  6331                           ;vend.c: 356: }
  6332                           
  6333                           ;vend.c: 355: break;
  6334  010342  D00B               	goto	l2110
  6335  010344                     l2108:
  6336  010344  0100               	movlb	0	; () banked
  6337  010346  51B3               	movf	set_price@buttons& (0+255),w,b
  6338                           
  6339                           ; Switch size 1, requested type "space"
  6340                           ; Number of cases is 3, Range of values is 1 to 128
  6341                           ; switch strategies available:
  6342                           ; Name         Instructions Cycles
  6343                           ; simple_byte           10     6 (average)
  6344                           ;	Chosen strategy is simple_byte
  6345  010348  0A01               	xorlw	1	; case 1
  6346  01034A  B4D8               	btfsc	status,2,c
  6347  01034C  D7A4               	goto	l2109
  6348  01034E  0A03               	xorlw	3	; case 2
  6349  010350  B4D8               	btfsc	status,2,c
  6350  010352  D7BC               	goto	l2111
  6351  010354  0A82               	xorlw	130	; case 128
  6352  010356  B4D8               	btfsc	status,2,c
  6353  010358  D7D5               	goto	l2112
  6354  01035A                     l2110:
  6355                           
  6356                           ; BSR set to: 0
  6357  01035A  A22F               	btfss	_venflags+1,1,c
  6358  01035C  0012               	return	
  6359  01035E  D796               	goto	l2107
  6360  010360                     __end_of_set_price:
  6361                           	opt stack 0
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           postinc0	equ	0xFEE
  6369                           wreg	equ	0xFE8
  6370                           indf2	equ	0xFDF
  6371                           fsr2h	equ	0xFDA
  6372                           fsr2l	equ	0xFD9
  6373                           status	equ	0xFD8
  6374                           
  6375 ;; *************** function _displ_price *****************
  6376 ;; Defined at:
  6377 ;;		line 235 in file "lcd.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  vendprice       1    wreg     unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  vendprice       1   31[COMRAM] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;Total ram usage:        1 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    8
  6398 ;; This function calls:
  6399 ;;		_displ_hex
  6400 ;;		_lcd_dispadd
  6401 ;;		_lcd_write
  6402 ;;		_lcd_writeC
  6403 ;; This function is called by:
  6404 ;;		_main
  6405 ;;		_set_price
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text28
  6410  011A90                     __ptext28:
  6411                           	opt stack 0
  6412  011A90                     _displ_price:
  6413                           	opt stack 19
  6414                           
  6415                           ;incstack = 0
  6416                           ;displ_price@vendprice stored from wreg
  6417  011A90  6E2A               	movwf	displ_price@vendprice,c
  6418                           
  6419                           ;lcd.c: 237: lcd_write(dispclr);
  6420  011A92  0E99               	movlw	low _dispclr
  6421  011A94  6EF6               	movwf	tblptrl,c
  6422  011A96                     	if	1	;There is more than 1 active tblptr byte
  6423  011A96  0EFC               	movlw	high _dispclr
  6424  011A98  6EF7               	movwf	tblptrh,c
  6425  011A9A                     	endif
  6426  011A9A                     	if	1	;There are 3 active tblptr bytes
  6427  011A9A  0E00               	movlw	low (_dispclr shr (0+16))
  6428  011A9C  6EF8               	movwf	tblptru,c
  6429  011A9E                     	endif
  6430  011A9E  0008               	tblrd		*
  6431  011AA0  50F5               	movf	tablat,w,c
  6432  011AA2  EC90  F08E         	call	_lcd_write
  6433                           
  6434                           ;lcd.c: 238: lcd_dispadd(line2 + 4);
  6435  011AA6  0E8E               	movlw	low _line2
  6436  011AA8  6EF6               	movwf	tblptrl,c
  6437  011AAA                     	if	1	;There is more than 1 active tblptr byte
  6438  011AAA  0EFC               	movlw	high _line2
  6439  011AAC  6EF7               	movwf	tblptrh,c
  6440  011AAE                     	endif
  6441  011AAE                     	if	1	;There are 3 active tblptr bytes
  6442  011AAE  0E00               	movlw	low (_line2 shr (0+16))
  6443  011AB0  6EF8               	movwf	tblptru,c
  6444  011AB2                     	endif
  6445  011AB2  0008               	tblrd		*
  6446  011AB4  50F5               	movf	tablat,w,c
  6447  011AB6  0F04               	addlw	4
  6448  011AB8  EC6A  F08F         	call	_lcd_dispadd
  6449                           
  6450                           ;lcd.c: 239: lcd_writeC((uint8_t)'R');
  6451  011ABC  0E52               	movlw	82
  6452  011ABE  EC7F  F08B         	call	_lcd_writeC
  6453                           
  6454                           ;lcd.c: 240: displ_hex(vendprice);
  6455  011AC2  502A               	movf	displ_price@vendprice,w,c
  6456  011AC4  6E27               	movwf	displ_hex@hexnum,c
  6457  011AC6  6A28               	clrf	displ_hex@hexnum+1,c
  6458  011AC8  6A29               	clrf	displ_hex@hexnum+2,c
  6459  011ACA  ECEB  F086         	call	_displ_hex	;wreg free
  6460  011ACE  0012               	return		;funcret
  6461  011AD0                     __end_of_displ_price:
  6462                           	opt stack 0
  6463                           tblptru	equ	0xFF8
  6464                           tblptrh	equ	0xFF7
  6465                           tblptrl	equ	0xFF6
  6466                           tablat	equ	0xFF5
  6467                           prodh	equ	0xFF4
  6468                           prodl	equ	0xFF3
  6469                           postinc0	equ	0xFEE
  6470                           wreg	equ	0xFE8
  6471                           indf2	equ	0xFDF
  6472                           fsr2h	equ	0xFDA
  6473                           fsr2l	equ	0xFD9
  6474                           status	equ	0xFD8
  6475                           
  6476 ;; *************** function _mdb_unlock *****************
  6477 ;; Defined at:
  6478 ;;		line 375 in file "mdb.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;		None
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;Total ram usage:        1 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    3
  6499 ;; This function calls:
  6500 ;;		_CMP1_Initialize
  6501 ;;		_DAC1_Initialize
  6502 ;;		_TMR1_Initialize
  6503 ;;		_TMR3_Initialize
  6504 ;;		_TMR5_Initialize
  6505 ;; This function is called by:
  6506 ;;		_enter_service
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text29
  6511  010ADA                     __ptext29:
  6512                           	opt stack 0
  6513  010ADA                     _mdb_unlock:
  6514                           	opt stack 26
  6515                           
  6516                           ;mdb.c: 377: _delay((unsigned long)((50)*(12000000/4000.0)));
  6517                           
  6518                           ;incstack = 0
  6519  010ADA  0EC3               	movlw	195
  6520  010ADC  6E1F               	movwf	??_mdb_unlock& (0+255),c
  6521  010ADE  0ECD               	movlw	205
  6522  010AE0                     u4057:
  6523  010AE0  2EE8               	decfsz	wreg,f,c
  6524  010AE2  D7FE               	bra	u4057
  6525  010AE4  2E1F               	decfsz	??_mdb_unlock& (0+255),f,c
  6526  010AE6  D7FC               	bra	u4057
  6527  010AE8  F000               	nop	
  6528                           
  6529                           ;mdb.c: 378: LATE = 0x00;
  6530  010AEA  0E00               	movlw	0
  6531  010AEC  6E87               	movwf	3975,c	;volatile
  6532                           
  6533                           ;mdb.c: 379: LATD = 0x00;
  6534  010AEE  0E00               	movlw	0
  6535  010AF0  6E86               	movwf	3974,c	;volatile
  6536                           
  6537                           ;mdb.c: 380: LATA = 0xC0;
  6538  010AF2  0EC0               	movlw	192
  6539  010AF4  6E83               	movwf	3971,c	;volatile
  6540                           
  6541                           ;mdb.c: 381: LATB = 0x00;
  6542  010AF6  0E00               	movlw	0
  6543  010AF8  6E84               	movwf	3972,c	;volatile
  6544                           
  6545                           ;mdb.c: 382: LATC = 0x01;
  6546  010AFA  0E01               	movlw	1
  6547  010AFC  6E85               	movwf	3973,c	;volatile
  6548                           
  6549                           ;mdb.c: 387: TRISE = 0x00;
  6550  010AFE  0E00               	movlw	0
  6551  010B00  6E8C               	movwf	3980,c	;volatile
  6552                           
  6553                           ;mdb.c: 388: TRISA = 0x1F;
  6554  010B02  0E1F               	movlw	31
  6555  010B04  6E88               	movwf	3976,c	;volatile
  6556                           
  6557                           ;mdb.c: 389: TRISB = 0xD0;
  6558  010B06  0ED0               	movlw	208
  6559  010B08  6E89               	movwf	3977,c	;volatile
  6560                           
  6561                           ;mdb.c: 390: TRISC = 0x80;
  6562  010B0A  0E80               	movlw	128
  6563  010B0C  6E8A               	movwf	3978,c	;volatile
  6564                           
  6565                           ;mdb.c: 391: TRISD = 0x00;
  6566  010B0E  0E00               	movlw	0
  6567  010B10  6E8B               	movwf	3979,c	;volatile
  6568                           
  6569                           ;mdb.c: 396: ANSELC = 0x00;
  6570  010B12  0E00               	movlw	0
  6571  010B14  010F               	movlb	15	; () banked
  6572  010B16  6F21               	movwf	33,b	;volatile
  6573                           
  6574                           ; BSR set to: 15
  6575                           ;mdb.c: 397: ANSELB = 0xC0;
  6576  010B18  0EC0               	movlw	192
  6577  010B1A  6F19               	movwf	25,b	;volatile
  6578                           
  6579                           ; BSR set to: 15
  6580                           ;mdb.c: 398: ANSELD = 0x00;
  6581  010B1C  0E00               	movlw	0
  6582  010B1E  6F26               	movwf	38,b	;volatile
  6583                           
  6584                           ; BSR set to: 15
  6585                           ;mdb.c: 399: ANSELE = 0x00;
  6586  010B20  0E00               	movlw	0
  6587  010B22  6F2E               	movwf	46,b	;volatile
  6588                           
  6589                           ; BSR set to: 15
  6590                           ;mdb.c: 400: ANSELA = 0x01;
  6591  010B24  0E01               	movlw	1
  6592  010B26  6F11               	movwf	17,b	;volatile
  6593                           
  6594                           ; BSR set to: 15
  6595                           ;mdb.c: 405: WPUD = 0x00;
  6596  010B28  0E00               	movlw	0
  6597  010B2A  6F25               	movwf	37,b	;volatile
  6598                           
  6599                           ; BSR set to: 15
  6600                           ;mdb.c: 406: WPUE = 0x00;
  6601  010B2C  0E00               	movlw	0
  6602  010B2E  6F2D               	movwf	45,b	;volatile
  6603                           
  6604                           ; BSR set to: 15
  6605                           ;mdb.c: 407: WPUB = 0x00;
  6606  010B30  0E00               	movlw	0
  6607  010B32  6F18               	movwf	24,b	;volatile
  6608                           
  6609                           ; BSR set to: 15
  6610                           ;mdb.c: 408: WPUA = 0x00;
  6611  010B34  0E00               	movlw	0
  6612  010B36  6F10               	movwf	16,b	;volatile
  6613                           
  6614                           ; BSR set to: 15
  6615                           ;mdb.c: 409: WPUC = 0x00;
  6616  010B38  0E00               	movlw	0
  6617  010B3A  6F20               	movwf	32,b	;volatile
  6618                           
  6619                           ; BSR set to: 15
  6620                           ;mdb.c: 414: ODCONE = 0x00;
  6621  010B3C  0E00               	movlw	0
  6622  010B3E  6F2C               	movwf	44,b	;volatile
  6623                           
  6624                           ; BSR set to: 15
  6625                           ;mdb.c: 415: ODCONA = 0x00;
  6626  010B40  0E00               	movlw	0
  6627  010B42  6F0F               	movwf	15,b	;volatile
  6628                           
  6629                           ; BSR set to: 15
  6630                           ;mdb.c: 416: ODCONB = 0x00;
  6631  010B44  0E00               	movlw	0
  6632  010B46  6F17               	movwf	23,b	;volatile
  6633                           
  6634                           ; BSR set to: 15
  6635                           ;mdb.c: 417: ODCONC = 0x00;
  6636  010B48  0E00               	movlw	0
  6637  010B4A  6F1F               	movwf	31,b	;volatile
  6638                           
  6639                           ; BSR set to: 15
  6640                           ;mdb.c: 418: ODCOND = 0x00;
  6641  010B4C  0E00               	movlw	0
  6642  010B4E  6F24               	movwf	36,b	;volatile
  6643                           
  6644                           ; BSR set to: 15
  6645                           ;mdb.c: 419: LATC = 0x01;
  6646  010B50  0E01               	movlw	1
  6647  010B52  6E85               	movwf	3973,c	;volatile
  6648                           
  6649                           ; BSR set to: 15
  6650                           ;mdb.c: 420: TRISC = 0x80;
  6651  010B54  0E80               	movlw	128
  6652  010B56  6E8A               	movwf	3978,c	;volatile
  6653                           
  6654                           ; BSR set to: 15
  6655                           ;mdb.c: 421: ANSELC = 0x00;
  6656  010B58  0E00               	movlw	0
  6657  010B5A  6F21               	movwf	33,b	;volatile
  6658                           
  6659                           ; BSR set to: 15
  6660                           ;mdb.c: 422: WPUC = 0x00;
  6661  010B5C  0E00               	movlw	0
  6662  010B5E  6F20               	movwf	32,b	;volatile
  6663                           
  6664                           ; BSR set to: 15
  6665                           ;mdb.c: 423: ODCONC = 0x00;
  6666  010B60  0E00               	movlw	0
  6667  010B62  6F1F               	movwf	31,b	;volatile
  6668                           
  6669                           ; BSR set to: 15
  6670                           ;mdb.c: 424: PPSLOCK = 0x55;
  6671  010B64  0E55               	movlw	85
  6672  010B66  010E               	movlb	14	; () banked
  6673  010B68  6FA0               	movwf	160,b	;volsfr
  6674                           
  6675                           ; BSR set to: 14
  6676                           ;mdb.c: 425: PPSLOCK = 0xAA;
  6677  010B6A  0EAA               	movlw	170
  6678  010B6C  6FA0               	movwf	160,b	;volsfr
  6679                           
  6680                           ; BSR set to: 14
  6681                           ;mdb.c: 426: PPSLOCKbits.PPSLOCKED = 0x00;
  6682  010B6E  91A0               	bcf	160,0,b	;volsfr
  6683                           
  6684                           ; BSR set to: 14
  6685                           ;mdb.c: 428: RX1PPSbits.RXPPS = 0x0;
  6686  010B70  91B5               	bcf	181,0,b	;volatile
  6687  010B72  93B5               	bcf	181,1,b	;volatile
  6688  010B74  95B5               	bcf	181,2,b	;volatile
  6689  010B76  97B5               	bcf	181,3,b	;volatile
  6690  010B78  99B5               	bcf	181,4,b	;volatile
  6691                           
  6692                           ; BSR set to: 14
  6693                           ;mdb.c: 429: RC6PPS = 0x0;
  6694  010B7A  0E00               	movlw	0
  6695  010B7C  6FFD               	movwf	253,b	;volatile
  6696                           
  6697                           ; BSR set to: 14
  6698                           ;mdb.c: 430: RB5PPS = 0x0;
  6699  010B7E  0E00               	movlw	0
  6700  010B80  6FF4               	movwf	244,b	;volatile
  6701                           
  6702                           ; BSR set to: 14
  6703                           ;mdb.c: 431: RX2PPSbits.RXPPS = 0x0;
  6704  010B82  918D               	bcf	141,0,b	;volatile
  6705  010B84  938D               	bcf	141,1,b	;volatile
  6706  010B86  958D               	bcf	141,2,b	;volatile
  6707  010B88  978D               	bcf	141,3,b	;volatile
  6708  010B8A  998D               	bcf	141,4,b	;volatile
  6709                           
  6710                           ; BSR set to: 14
  6711                           ;mdb.c: 432: CMP1_Initialize();
  6712  010B8C  ECAF  F08F         	call	_CMP1_Initialize	;wreg free
  6713                           
  6714                           ;mdb.c: 433: TMR3_Initialize();
  6715  010B90  ECF4  F08D         	call	_TMR3_Initialize	;wreg free
  6716                           
  6717                           ;mdb.c: 434: DAC1_Initialize();
  6718  010B94  ECE7  F08F         	call	_DAC1_Initialize	;wreg free
  6719                           
  6720                           ;mdb.c: 435: TMR5_Initialize();
  6721  010B98  ECD9  F08D         	call	_TMR5_Initialize	;wreg free
  6722                           
  6723                           ;mdb.c: 436: TMR1_Initialize();
  6724  010B9C  EC0F  F08E         	call	_TMR1_Initialize	;wreg free
  6725  010BA0  0012               	return		;funcret
  6726  010BA2                     __end_of_mdb_unlock:
  6727                           	opt stack 0
  6728                           tblptru	equ	0xFF8
  6729                           tblptrh	equ	0xFF7
  6730                           tblptrl	equ	0xFF6
  6731                           tablat	equ	0xFF5
  6732                           prodh	equ	0xFF4
  6733                           prodl	equ	0xFF3
  6734                           postinc0	equ	0xFEE
  6735                           wreg	equ	0xFE8
  6736                           indf2	equ	0xFDF
  6737                           fsr2h	equ	0xFDA
  6738                           fsr2l	equ	0xFD9
  6739                           status	equ	0xFD8
  6740                           
  6741 ;; *************** function _Vend_setup *****************
  6742 ;; Defined at:
  6743 ;;		line 364 in file "vend.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;		None
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      void 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;Total ram usage:        0 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:   11
  6764 ;; This function calls:
  6765 ;;		_Chan_link
  6766 ;;		_Init_vendmem
  6767 ;;		_Reset_settings
  6768 ;;		_Sens_off
  6769 ;;		_Vend_settime
  6770 ;;		_butindb
  6771 ;;		_lcd_string
  6772 ;; This function is called by:
  6773 ;;		_enter_service
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           	psect	text30
  6778  010360                     __ptext30:
  6779                           	opt stack 0
  6780  010360                     _Vend_setup:
  6781                           	opt stack 18
  6782                           
  6783                           ;vend.c: 366: venflags.vendset = 1;
  6784                           
  6785                           ;incstack = 0
  6786  010360  842F               	bsf	_venflags+1,2,c
  6787                           
  6788                           ;vend.c: 367: lcd_string(vendsetup, line1);
  6789  010362  0EEE               	movlw	low _vendsetup
  6790  010364  6E24               	movwf	lcd_string@lcdstring,c
  6791  010366  0EFC               	movlw	high _vendsetup
  6792  010368  6E25               	movwf	lcd_string@lcdstring+1,c
  6793  01036A  0E8F               	movlw	low _line1
  6794  01036C  6EF6               	movwf	tblptrl,c
  6795  01036E                     	if	1	;There is more than 1 active tblptr byte
  6796  01036E  0EFC               	movlw	high _line1
  6797  010370  6EF7               	movwf	tblptrh,c
  6798  010372                     	endif
  6799  010372                     	if	1	;There are 3 active tblptr bytes
  6800  010372  0E00               	movlw	low (_line1 shr (0+16))
  6801  010374  6EF8               	movwf	tblptru,c
  6802  010376                     	endif
  6803  010376  0008               	tblrd		*
  6804  010378  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6805  01037C  EC46  F087         	call	_lcd_string	;wreg free
  6806                           
  6807                           ;vend.c: 368: while(venflags.vendset)
  6808  010380  D06F               	goto	l2121
  6809  010382                     
  6810                           ;vend.c: 369: {
  6811                           ;vend.c: 370: buttons = butindb();
  6812  010382  EC77  F08E         	call	_butindb	;wreg free
  6813  010386  6E39               	movwf	_buttons,c	;volatile
  6814                           
  6815                           ;vend.c: 371: switch(buttons)
  6816  010388  D05B               	goto	l2119
  6817  01038A  EC90  F08C         	call	_Vend_settime	;wreg free
  6818                           
  6819                           ;vend.c: 374: lcd_string(vendsetup, line1);
  6820  01038E  0EEE               	movlw	low _vendsetup
  6821  010390  6E24               	movwf	lcd_string@lcdstring,c
  6822  010392  0EFC               	movlw	high _vendsetup
  6823  010394  6E25               	movwf	lcd_string@lcdstring+1,c
  6824  010396  0E8F               	movlw	low _line1
  6825  010398  6EF6               	movwf	tblptrl,c
  6826  01039A                     	if	1	;There is more than 1 active tblptr byte
  6827  01039A  0EFC               	movlw	high _line1
  6828  01039C  6EF7               	movwf	tblptrh,c
  6829  01039E                     	endif
  6830  01039E                     	if	1	;There are 3 active tblptr bytes
  6831  01039E  0E00               	movlw	low (_line1 shr (0+16))
  6832  0103A0  6EF8               	movwf	tblptru,c
  6833  0103A2                     	endif
  6834  0103A2  0008               	tblrd		*
  6835  0103A4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6836  0103A8  EC46  F087         	call	_lcd_string	;wreg free
  6837                           
  6838                           ;vend.c: 375: break;
  6839  0103AC  D059               	goto	l2121
  6840  0103AE  ECB2  F08B         	call	_Chan_link	;wreg free
  6841                           
  6842                           ;vend.c: 377: lcd_string(vendsetup, line1);
  6843  0103B2  0EEE               	movlw	low _vendsetup
  6844  0103B4  6E24               	movwf	lcd_string@lcdstring,c
  6845  0103B6  0EFC               	movlw	high _vendsetup
  6846  0103B8  6E25               	movwf	lcd_string@lcdstring+1,c
  6847  0103BA  0E8F               	movlw	low _line1
  6848  0103BC  6EF6               	movwf	tblptrl,c
  6849  0103BE                     	if	1	;There is more than 1 active tblptr byte
  6850  0103BE  0EFC               	movlw	high _line1
  6851  0103C0  6EF7               	movwf	tblptrh,c
  6852  0103C2                     	endif
  6853  0103C2                     	if	1	;There are 3 active tblptr bytes
  6854  0103C2  0E00               	movlw	low (_line1 shr (0+16))
  6855  0103C4  6EF8               	movwf	tblptru,c
  6856  0103C6                     	endif
  6857  0103C6  0008               	tblrd		*
  6858  0103C8  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6859  0103CC  EC46  F087         	call	_lcd_string	;wreg free
  6860                           
  6861                           ;vend.c: 378: break;
  6862  0103D0  D047               	goto	l2121
  6863  0103D2  ECB7  F08C         	call	_Sens_off	;wreg free
  6864                           
  6865                           ;vend.c: 380: lcd_string(vendsetup, line1);
  6866  0103D6  0EEE               	movlw	low _vendsetup
  6867  0103D8  6E24               	movwf	lcd_string@lcdstring,c
  6868  0103DA  0EFC               	movlw	high _vendsetup
  6869  0103DC  6E25               	movwf	lcd_string@lcdstring+1,c
  6870  0103DE  0E8F               	movlw	low _line1
  6871  0103E0  6EF6               	movwf	tblptrl,c
  6872  0103E2                     	if	1	;There is more than 1 active tblptr byte
  6873  0103E2  0EFC               	movlw	high _line1
  6874  0103E4  6EF7               	movwf	tblptrh,c
  6875  0103E6                     	endif
  6876  0103E6                     	if	1	;There are 3 active tblptr bytes
  6877  0103E6  0E00               	movlw	low (_line1 shr (0+16))
  6878  0103E8  6EF8               	movwf	tblptru,c
  6879  0103EA                     	endif
  6880  0103EA  0008               	tblrd		*
  6881  0103EC  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6882  0103F0  EC46  F087         	call	_lcd_string	;wreg free
  6883                           
  6884                           ;vend.c: 381: break;
  6885  0103F4  D035               	goto	l2121
  6886  0103F6  ECF4  F087         	call	_Reset_settings	;wreg free
  6887                           
  6888                           ;vend.c: 383: lcd_string(vendsetup, line1);
  6889  0103FA  0EEE               	movlw	low _vendsetup
  6890  0103FC  6E24               	movwf	lcd_string@lcdstring,c
  6891  0103FE  0EFC               	movlw	high _vendsetup
  6892  010400  6E25               	movwf	lcd_string@lcdstring+1,c
  6893  010402  0E8F               	movlw	low _line1
  6894  010404  6EF6               	movwf	tblptrl,c
  6895  010406                     	if	1	;There is more than 1 active tblptr byte
  6896  010406  0EFC               	movlw	high _line1
  6897  010408  6EF7               	movwf	tblptrh,c
  6898  01040A                     	endif
  6899  01040A                     	if	1	;There are 3 active tblptr bytes
  6900  01040A  0E00               	movlw	low (_line1 shr (0+16))
  6901  01040C  6EF8               	movwf	tblptru,c
  6902  01040E                     	endif
  6903  01040E  0008               	tblrd		*
  6904  010410  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6905  010414  EC46  F087         	call	_lcd_string	;wreg free
  6906                           
  6907                           ;vend.c: 384: break;
  6908  010418  D023               	goto	l2121
  6909  01041A                     l2125:
  6910  01041A  942F               	bcf	_venflags+1,2,c
  6911                           
  6912                           ;vend.c: 387: Init_vendmem();
  6913  01041C  ECDE  F08A         	call	_Init_vendmem	;wreg free
  6914                           
  6915                           ;vend.c: 388: lcd_string(servmsg, line1);
  6916  010420  0E9E               	movlw	low _servmsg
  6917  010422  6E24               	movwf	lcd_string@lcdstring,c
  6918  010424  0EFC               	movlw	high _servmsg
  6919  010426  6E25               	movwf	lcd_string@lcdstring+1,c
  6920  010428  0E8F               	movlw	low _line1
  6921  01042A  6EF6               	movwf	tblptrl,c
  6922  01042C                     	if	1	;There is more than 1 active tblptr byte
  6923  01042C  0EFC               	movlw	high _line1
  6924  01042E  6EF7               	movwf	tblptrh,c
  6925  010430                     	endif
  6926  010430                     	if	1	;There are 3 active tblptr bytes
  6927  010430  0E00               	movlw	low (_line1 shr (0+16))
  6928  010432  6EF8               	movwf	tblptru,c
  6929  010434                     	endif
  6930  010434  0008               	tblrd		*
  6931  010436  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6932  01043A  EC46  F087         	call	_lcd_string	;wreg free
  6933                           
  6934                           ;vend.c: 390: }
  6935                           
  6936                           ;vend.c: 389: break;
  6937  01043E  D010               	goto	l2121
  6938  010440                     l2119:
  6939  010440  5039               	movf	_buttons,w,c	;volatile
  6940                           
  6941                           ; Switch size 1, requested type "space"
  6942                           ; Number of cases is 5, Range of values is 1 to 128
  6943                           ; switch strategies available:
  6944                           ; Name         Instructions Cycles
  6945                           ; simple_byte           16     9 (average)
  6946                           ;	Chosen strategy is simple_byte
  6947  010442  0A01               	xorlw	1	; case 1
  6948  010444  B4D8               	btfsc	status,2,c
  6949  010446  D7A1               	goto	l2120
  6950  010448  0A03               	xorlw	3	; case 2
  6951  01044A  B4D8               	btfsc	status,2,c
  6952  01044C  D7B0               	goto	l2122
  6953  01044E  0A06               	xorlw	6	; case 4
  6954  010450  B4D8               	btfsc	status,2,c
  6955  010452  D7BF               	goto	l2123
  6956  010454  0A0C               	xorlw	12	; case 8
  6957  010456  B4D8               	btfsc	status,2,c
  6958  010458  D7CE               	goto	l2124
  6959  01045A  0A88               	xorlw	136	; case 128
  6960  01045C  B4D8               	btfsc	status,2,c
  6961  01045E  D7DD               	goto	l2125
  6962  010460                     l2121:
  6963  010460  A42F               	btfss	_venflags+1,2,c
  6964  010462  0012               	return	
  6965  010464  D78E               	goto	l2118
  6966  010466                     __end_of_Vend_setup:
  6967                           	opt stack 0
  6968                           tblptru	equ	0xFF8
  6969                           tblptrh	equ	0xFF7
  6970                           tblptrl	equ	0xFF6
  6971                           tablat	equ	0xFF5
  6972                           prodh	equ	0xFF4
  6973                           prodl	equ	0xFF3
  6974                           postinc0	equ	0xFEE
  6975                           wreg	equ	0xFE8
  6976                           indf2	equ	0xFDF
  6977                           fsr2h	equ	0xFDA
  6978                           fsr2l	equ	0xFD9
  6979                           status	equ	0xFD8
  6980                           
  6981 ;; *************** function _Vend_settime *****************
  6982 ;; Defined at:
  6983 ;;		line 394 in file "vend.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;		None
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;Total ram usage:        0 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:   10
  7004 ;; This function calls:
  7005 ;;		_Read_Service
  7006 ;;		_Vend_timeset
  7007 ;;		_butindb
  7008 ;;		_get_channel
  7009 ;;		_lcd_string
  7010 ;; This function is called by:
  7011 ;;		_Vend_setup
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text31
  7016  011920                     __ptext31:
  7017                           	opt stack 0
  7018  011920                     _Vend_settime:
  7019                           	opt stack 18
  7020                           
  7021                           ;vend.c: 397: lcd_string(setimemsg, line1);
  7022                           
  7023                           ;incstack = 0
  7024  011920  0E80               	movlw	low _setimemsg
  7025  011922  6E24               	movwf	lcd_string@lcdstring,c
  7026  011924  0EFE               	movlw	high _setimemsg
  7027  011926  6E25               	movwf	lcd_string@lcdstring+1,c
  7028  011928  0E8F               	movlw	low _line1
  7029  01192A  6EF6               	movwf	tblptrl,c
  7030  01192C                     	if	1	;There is more than 1 active tblptr byte
  7031  01192C  0EFC               	movlw	high _line1
  7032  01192E  6EF7               	movwf	tblptrh,c
  7033  011930                     	endif
  7034  011930                     	if	1	;There are 3 active tblptr bytes
  7035  011930  0E00               	movlw	low (_line1 shr (0+16))
  7036  011932  6EF8               	movwf	tblptru,c
  7037  011934                     	endif
  7038  011934  0008               	tblrd		*
  7039  011936  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7040  01193A  EC46  F087         	call	_lcd_string	;wreg free
  7041                           
  7042                           ;vend.c: 398: buttons = butindb();
  7043  01193E  EC77  F08E         	call	_butindb	;wreg free
  7044  011942  6E39               	movwf	_buttons,c	;volatile
  7045                           
  7046                           ;vend.c: 399: venflags.settime = 1;
  7047  011944  8C2F               	bsf	_venflags+1,6,c
  7048                           
  7049                           ;vend.c: 401: while(venflags.settime)
  7050  011946  D010               	goto	l2133
  7051  011948                     
  7052                           ;vend.c: 402: {
  7053                           ;vend.c: 403: buttons = butindb();
  7054  011948  EC77  F08E         	call	_butindb	;wreg free
  7055  01194C  6E39               	movwf	_buttons,c	;volatile
  7056                           
  7057                           ;vend.c: 404: if(buttons != 0x00)
  7058  01194E  5039               	movf	_buttons,w,c	;volatile
  7059  011950  B4D8               	btfsc	status,2,c
  7060  011952  D005               	goto	l2132
  7061                           
  7062                           ;vend.c: 405: {
  7063                           ;vend.c: 406: Vend_timeset(get_channel(buttons));
  7064  011954  5039               	movf	_buttons,w,c	;volatile
  7065  011956  EC40  F08F         	call	_get_channel
  7066  01195A  ECB6  F082         	call	_Vend_timeset
  7067  01195E                     l2132:
  7068                           
  7069                           ;vend.c: 407: }
  7070                           ;vend.c: 408: if(Read_Service() == 0x00)
  7071  01195E  ECC2  F08F         	call	_Read_Service	;wreg free
  7072  011962  0900               	iorlw	0
  7073  011964  B4D8               	btfsc	status,2,c
  7074                           
  7075                           ;vend.c: 409: {
  7076                           ;vend.c: 410: venflags.settime = 0;
  7077  011966  9C2F               	bcf	_venflags+1,6,c
  7078  011968                     l2133:
  7079  011968  AC2F               	btfss	_venflags+1,6,c
  7080  01196A  0012               	return	
  7081  01196C  D7ED               	goto	l2131
  7082  01196E                     __end_of_Vend_settime:
  7083                           	opt stack 0
  7084                           tblptru	equ	0xFF8
  7085                           tblptrh	equ	0xFF7
  7086                           tblptrl	equ	0xFF6
  7087                           tablat	equ	0xFF5
  7088                           prodh	equ	0xFF4
  7089                           prodl	equ	0xFF3
  7090                           postinc0	equ	0xFEE
  7091                           wreg	equ	0xFE8
  7092                           indf2	equ	0xFDF
  7093                           fsr2h	equ	0xFDA
  7094                           fsr2l	equ	0xFD9
  7095                           status	equ	0xFD8
  7096                           
  7097 ;; *************** function _Vend_timeset *****************
  7098 ;; Defined at:
  7099 ;;		line 417 in file "vend.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  channel         1    wreg     unsigned char 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  channel         1   13[BANK0 ] unsigned char 
  7104 ;;  chantime        1   12[BANK0 ] unsigned char 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        4 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:    9
  7121 ;; This function calls:
  7122 ;;		_DATAEE_ReadByte
  7123 ;;		_DATAEE_WriteByte
  7124 ;;		_butindb
  7125 ;;		_displ_time
  7126 ;;		_lcd_string
  7127 ;; This function is called by:
  7128 ;;		_Vend_settime
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text32
  7133  01056C                     __ptext32:
  7134                           	opt stack 0
  7135  01056C                     _Vend_timeset:
  7136                           	opt stack 18
  7137                           
  7138                           ;incstack = 0
  7139                           ;Vend_timeset@channel stored from wreg
  7140  01056C  0100               	movlb	0	; () banked
  7141  01056E  6FB4               	movwf	Vend_timeset@channel& (0+255),b
  7142                           
  7143                           ;vend.c: 419: venflags.mottime = 1;
  7144  010570  882F               	bsf	_venflags+1,4,c
  7145                           
  7146                           ;vend.c: 420: lcd_string(vendtimem, line1);
  7147  010572  0E57               	movlw	low _vendtimem
  7148  010574  6E24               	movwf	lcd_string@lcdstring,c
  7149  010576  0EFE               	movlw	high _vendtimem
  7150  010578  6E25               	movwf	lcd_string@lcdstring+1,c
  7151  01057A  0E8F               	movlw	low _line1
  7152  01057C  6EF6               	movwf	tblptrl,c
  7153  01057E                     	if	1	;There is more than 1 active tblptr byte
  7154  01057E  0EFC               	movlw	high _line1
  7155  010580  6EF7               	movwf	tblptrh,c
  7156  010582                     	endif
  7157  010582                     	if	1	;There are 3 active tblptr bytes
  7158  010582  0E00               	movlw	low (_line1 shr (0+16))
  7159  010584  6EF8               	movwf	tblptru,c
  7160  010586                     	endif
  7161  010586  0008               	tblrd		*
  7162  010588  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7163  01058C  EC46  F087         	call	_lcd_string	;wreg free
  7164                           
  7165                           ;vend.c: 421: uint8_t chantime = DATAEE_ReadByte(chan1time + channel);
  7166  010590  0E3B               	movlw	low _chan1time
  7167  010592  6EF6               	movwf	tblptrl,c
  7168  010594                     	if	1	;There is more than 1 active tblptr byte
  7169  010594  0EFC               	movlw	high _chan1time
  7170  010596  6EF7               	movwf	tblptrh,c
  7171  010598                     	endif
  7172  010598                     	if	1	;There are 3 active tblptr bytes
  7173  010598  0E00               	movlw	low (_chan1time shr (0+16))
  7174  01059A  6EF8               	movwf	tblptru,c
  7175  01059C                     	endif
  7176  01059C  0009               	tblrd		*+
  7177  01059E  CFF5 F02C          	movff	tablat,??_Vend_timeset
  7178  0105A2  0009               	tblrd		*+
  7179  0105A4  CFF5 F02D          	movff	tablat,??_Vend_timeset+1
  7180  0105A8  0100               	movlb	0	; () banked
  7181  0105AA  51B4               	movf	Vend_timeset@channel& (0+255),w,b
  7182  0105AC  242C               	addwf	??_Vend_timeset,w,c
  7183  0105AE  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  7184  0105B0  0E00               	movlw	0
  7185  0105B2  202D               	addwfc	??_Vend_timeset+1,w,c
  7186  0105B4  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  7187  0105B6  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  7188  0105BA  0100               	movlb	0	; () banked
  7189  0105BC  6FB3               	movwf	Vend_timeset@chantime& (0+255),b
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;vend.c: 422: displ_time(chantime, channel);
  7193  0105BE  C0B4  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7194  0105C2  51B3               	movf	Vend_timeset@chantime& (0+255),w,b
  7195  0105C4  EC90  F088         	call	_displ_time
  7196                           
  7197                           ;vend.c: 423: while(venflags.mottime)
  7198  0105C8  D04E               	goto	l2142
  7199  0105CA                     
  7200                           ;vend.c: 424: {
  7201                           ;vend.c: 425: buttons = butindb();
  7202  0105CA  EC77  F08E         	call	_butindb	;wreg free
  7203  0105CE  6E39               	movwf	_buttons,c	;volatile
  7204                           
  7205                           ;vend.c: 426: switch(buttons)
  7206  0105D0  D040               	goto	l2140
  7207  0105D2  0100               	movlb	0	; () banked
  7208  0105D4  2BB3               	incf	Vend_timeset@chantime& (0+255),f,b
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;vend.c: 429: DATAEE_WriteByte(chan1time + channel, chantime);
  7212  0105D6  0E3B               	movlw	low _chan1time
  7213  0105D8  6EF6               	movwf	tblptrl,c
  7214  0105DA                     	if	1	;There is more than 1 active tblptr byte
  7215  0105DA  0EFC               	movlw	high _chan1time
  7216  0105DC  6EF7               	movwf	tblptrh,c
  7217  0105DE                     	endif
  7218  0105DE                     	if	1	;There are 3 active tblptr bytes
  7219  0105DE  0E00               	movlw	low (_chan1time shr (0+16))
  7220  0105E0  6EF8               	movwf	tblptru,c
  7221  0105E2                     	endif
  7222  0105E2  0009               	tblrd		*+
  7223  0105E4  CFF5 F02C          	movff	tablat,??_Vend_timeset
  7224  0105E8  0009               	tblrd		*+
  7225  0105EA  CFF5 F02D          	movff	tablat,??_Vend_timeset+1
  7226  0105EE  51B4               	movf	Vend_timeset@channel& (0+255),w,b
  7227  0105F0  242C               	addwf	??_Vend_timeset,w,c
  7228  0105F2  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  7229  0105F4  0E00               	movlw	0
  7230  0105F6  202D               	addwfc	??_Vend_timeset+1,w,c
  7231  0105F8  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  7232  0105FA  C0B3  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
  7233  0105FE  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  7234                           
  7235                           ;vend.c: 430: displ_time(chantime, channel);
  7236  010602  C0B4  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7237  010606  0100               	movlb	0	; () banked
  7238  010608  51B3               	movf	Vend_timeset@chantime& (0+255),w,b
  7239  01060A  EC90  F088         	call	_displ_time
  7240                           
  7241                           ;vend.c: 431: break;
  7242  01060E  D02B               	goto	l2142
  7243  010610  0100               	movlb	0	; () banked
  7244  010612  07B3               	decf	Vend_timeset@chantime& (0+255),f,b
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;vend.c: 433: DATAEE_WriteByte(chan1time + channel, chantime);
  7248  010614  0E3B               	movlw	low _chan1time
  7249  010616  6EF6               	movwf	tblptrl,c
  7250  010618                     	if	1	;There is more than 1 active tblptr byte
  7251  010618  0EFC               	movlw	high _chan1time
  7252  01061A  6EF7               	movwf	tblptrh,c
  7253  01061C                     	endif
  7254  01061C                     	if	1	;There are 3 active tblptr bytes
  7255  01061C  0E00               	movlw	low (_chan1time shr (0+16))
  7256  01061E  6EF8               	movwf	tblptru,c
  7257  010620                     	endif
  7258  010620  0009               	tblrd		*+
  7259  010622  CFF5 F02C          	movff	tablat,??_Vend_timeset
  7260  010626  0009               	tblrd		*+
  7261  010628  CFF5 F02D          	movff	tablat,??_Vend_timeset+1
  7262  01062C  51B4               	movf	Vend_timeset@channel& (0+255),w,b
  7263  01062E  242C               	addwf	??_Vend_timeset,w,c
  7264  010630  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  7265  010632  0E00               	movlw	0
  7266  010634  202D               	addwfc	??_Vend_timeset+1,w,c
  7267  010636  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  7268  010638  C0B3  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
  7269  01063C  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  7270                           
  7271                           ;vend.c: 434: displ_time(chantime, channel);
  7272  010640  C0B4  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7273  010644  0100               	movlb	0	; () banked
  7274  010646  51B3               	movf	Vend_timeset@chantime& (0+255),w,b
  7275  010648  EC90  F088         	call	_displ_time
  7276                           
  7277                           ;vend.c: 435: break;
  7278  01064C  D00C               	goto	l2142
  7279  01064E                     l2144:
  7280  01064E  982F               	bcf	_venflags+1,4,c
  7281                           
  7282                           ;vend.c: 437: }
  7283  010650  D00A               	goto	l2142
  7284  010652                     l2140:
  7285  010652  5039               	movf	_buttons,w,c	;volatile
  7286                           
  7287                           ; Switch size 1, requested type "space"
  7288                           ; Number of cases is 3, Range of values is 1 to 128
  7289                           ; switch strategies available:
  7290                           ; Name         Instructions Cycles
  7291                           ; simple_byte           10     6 (average)
  7292                           ;	Chosen strategy is simple_byte
  7293  010654  0A01               	xorlw	1	; case 1
  7294  010656  B4D8               	btfsc	status,2,c
  7295  010658  D7BC               	goto	l2141
  7296  01065A  0A03               	xorlw	3	; case 2
  7297  01065C  B4D8               	btfsc	status,2,c
  7298  01065E  D7D8               	goto	l2143
  7299  010660  0A82               	xorlw	130	; case 128
  7300  010662  B4D8               	btfsc	status,2,c
  7301  010664  D7F4               	goto	l2144
  7302  010666                     l2142:
  7303  010666  A82F               	btfss	_venflags+1,4,c
  7304  010668  0012               	return	
  7305  01066A  D7AF               	goto	l2139
  7306  01066C                     __end_of_Vend_timeset:
  7307                           	opt stack 0
  7308                           tblptru	equ	0xFF8
  7309                           tblptrh	equ	0xFF7
  7310                           tblptrl	equ	0xFF6
  7311                           tablat	equ	0xFF5
  7312                           prodh	equ	0xFF4
  7313                           prodl	equ	0xFF3
  7314                           postinc0	equ	0xFEE
  7315                           wreg	equ	0xFE8
  7316                           indf2	equ	0xFDF
  7317                           fsr2h	equ	0xFDA
  7318                           fsr2l	equ	0xFD9
  7319                           status	equ	0xFD8
  7320                           
  7321 ;; *************** function _displ_time *****************
  7322 ;; Defined at:
  7323 ;;		line 97 in file "lcd.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  motortime       1    wreg     unsigned char 
  7326 ;;  channel         1   31[COMRAM] unsigned char 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  motortime       1   32[COMRAM] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;Total ram usage:        2 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    8
  7345 ;; This function calls:
  7346 ;;		_displ_hex
  7347 ;;		_lcd_string
  7348 ;;		_lcd_writeC
  7349 ;; This function is called by:
  7350 ;;		_Vend_timeset
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text33
  7355  011120                     __ptext33:
  7356                           	opt stack 0
  7357  011120                     _displ_time:
  7358                           	opt stack 18
  7359                           
  7360                           ;incstack = 0
  7361                           ;displ_time@motortime stored from wreg
  7362  011120  6E2B               	movwf	displ_time@motortime,c
  7363                           
  7364                           ;lcd.c: 99: lcd_string(clrline, line3);
  7365  011122  0E29               	movlw	low _clrline
  7366  011124  6E24               	movwf	lcd_string@lcdstring,c
  7367  011126  0EFF               	movlw	high _clrline
  7368  011128  6E25               	movwf	lcd_string@lcdstring+1,c
  7369  01112A  0E8D               	movlw	low _line3
  7370  01112C  6EF6               	movwf	tblptrl,c
  7371  01112E                     	if	1	;There is more than 1 active tblptr byte
  7372  01112E  0EFC               	movlw	high _line3
  7373  011130  6EF7               	movwf	tblptrh,c
  7374  011132                     	endif
  7375  011132                     	if	1	;There are 3 active tblptr bytes
  7376  011132  0E00               	movlw	low (_line3 shr (0+16))
  7377  011134  6EF8               	movwf	tblptru,c
  7378  011136                     	endif
  7379  011136  0008               	tblrd		*
  7380  011138  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7381  01113C  EC46  F087         	call	_lcd_string	;wreg free
  7382                           
  7383                           ;lcd.c: 100: lcd_string(clrline, line4);
  7384  011140  0E29               	movlw	low _clrline
  7385  011142  6E24               	movwf	lcd_string@lcdstring,c
  7386  011144  0EFF               	movlw	high _clrline
  7387  011146  6E25               	movwf	lcd_string@lcdstring+1,c
  7388  011148  0E8C               	movlw	low _line4
  7389  01114A  6EF6               	movwf	tblptrl,c
  7390  01114C                     	if	1	;There is more than 1 active tblptr byte
  7391  01114C  0EFC               	movlw	high _line4
  7392  01114E  6EF7               	movwf	tblptrh,c
  7393  011150                     	endif
  7394  011150                     	if	1	;There are 3 active tblptr bytes
  7395  011150  0E00               	movlw	low (_line4 shr (0+16))
  7396  011152  6EF8               	movwf	tblptru,c
  7397  011154                     	endif
  7398  011154  0008               	tblrd		*
  7399  011156  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7400  01115A  EC46  F087         	call	_lcd_string	;wreg free
  7401                           
  7402                           ;lcd.c: 101: lcd_string(chanmsg, line3);
  7403  01115E  0E8C               	movlw	low _chanmsg
  7404  011160  6E24               	movwf	lcd_string@lcdstring,c
  7405  011162  0EFF               	movlw	high _chanmsg
  7406  011164  6E25               	movwf	lcd_string@lcdstring+1,c
  7407  011166  0E8D               	movlw	low _line3
  7408  011168  6EF6               	movwf	tblptrl,c
  7409  01116A                     	if	1	;There is more than 1 active tblptr byte
  7410  01116A  0EFC               	movlw	high _line3
  7411  01116C  6EF7               	movwf	tblptrh,c
  7412  01116E                     	endif
  7413  01116E                     	if	1	;There are 3 active tblptr bytes
  7414  01116E  0E00               	movlw	low (_line3 shr (0+16))
  7415  011170  6EF8               	movwf	tblptru,c
  7416  011172                     	endif
  7417  011172  0008               	tblrd		*
  7418  011174  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7419  011178  EC46  F087         	call	_lcd_string	;wreg free
  7420                           
  7421                           ;lcd.c: 102: lcd_writeC(channel++ | 0x30);
  7422  01117C  502A               	movf	displ_time@channel,w,c
  7423  01117E  0930               	iorlw	48
  7424  011180  EC7F  F08B         	call	_lcd_writeC
  7425  011184  2A2A               	incf	displ_time@channel,f,c
  7426                           
  7427                           ;lcd.c: 103: lcd_string(timemsg, line4);
  7428  011186  0E3E               	movlw	low _timemsg
  7429  011188  6E24               	movwf	lcd_string@lcdstring,c
  7430  01118A  0EFF               	movlw	high _timemsg
  7431  01118C  6E25               	movwf	lcd_string@lcdstring+1,c
  7432  01118E  0E8C               	movlw	low _line4
  7433  011190  6EF6               	movwf	tblptrl,c
  7434  011192                     	if	1	;There is more than 1 active tblptr byte
  7435  011192  0EFC               	movlw	high _line4
  7436  011194  6EF7               	movwf	tblptrh,c
  7437  011196                     	endif
  7438  011196                     	if	1	;There are 3 active tblptr bytes
  7439  011196  0E00               	movlw	low (_line4 shr (0+16))
  7440  011198  6EF8               	movwf	tblptru,c
  7441  01119A                     	endif
  7442  01119A  0008               	tblrd		*
  7443  01119C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7444  0111A0  EC46  F087         	call	_lcd_string	;wreg free
  7445                           
  7446                           ;lcd.c: 104: displ_hex((uint8_t) motortime);
  7447  0111A4  502B               	movf	displ_time@motortime,w,c
  7448  0111A6  6E27               	movwf	displ_hex@hexnum,c
  7449  0111A8  6A28               	clrf	displ_hex@hexnum+1,c
  7450  0111AA  6A29               	clrf	displ_hex@hexnum+2,c
  7451  0111AC  ECEB  F086         	call	_displ_hex	;wreg free
  7452  0111B0  0012               	return		;funcret
  7453  0111B2                     __end_of_displ_time:
  7454                           	opt stack 0
  7455                           tblptru	equ	0xFF8
  7456                           tblptrh	equ	0xFF7
  7457                           tblptrl	equ	0xFF6
  7458                           tablat	equ	0xFF5
  7459                           prodh	equ	0xFF4
  7460                           prodl	equ	0xFF3
  7461                           postinc0	equ	0xFEE
  7462                           wreg	equ	0xFE8
  7463                           indf2	equ	0xFDF
  7464                           fsr2h	equ	0xFDA
  7465                           fsr2l	equ	0xFD9
  7466                           status	equ	0xFD8
  7467                           
  7468 ;; *************** function _Sens_off *****************
  7469 ;; Defined at:
  7470 ;;		line 496 in file "vend.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;		None
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;		None
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7488 ;;Total ram usage:        0 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:   10
  7491 ;; This function calls:
  7492 ;;		_Read_Service
  7493 ;;		_butindb
  7494 ;;		_get_channel
  7495 ;;		_lcd_string
  7496 ;;		_off_sens
  7497 ;; This function is called by:
  7498 ;;		_Vend_setup
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text34
  7503  01196E                     __ptext34:
  7504                           	opt stack 0
  7505  01196E                     _Sens_off:
  7506                           	opt stack 18
  7507                           
  7508                           ;vend.c: 498: venflags.nosense = 1;
  7509                           
  7510                           ;incstack = 0
  7511  01196E  8A2F               	bsf	_venflags+1,5,c
  7512                           
  7513                           ;vend.c: 499: lcd_string(setimemsg, line1);
  7514  011970  0E80               	movlw	low _setimemsg
  7515  011972  6E24               	movwf	lcd_string@lcdstring,c
  7516  011974  0EFE               	movlw	high _setimemsg
  7517  011976  6E25               	movwf	lcd_string@lcdstring+1,c
  7518  011978  0E8F               	movlw	low _line1
  7519  01197A  6EF6               	movwf	tblptrl,c
  7520  01197C                     	if	1	;There is more than 1 active tblptr byte
  7521  01197C  0EFC               	movlw	high _line1
  7522  01197E  6EF7               	movwf	tblptrh,c
  7523  011980                     	endif
  7524  011980                     	if	1	;There are 3 active tblptr bytes
  7525  011980  0E00               	movlw	low (_line1 shr (0+16))
  7526  011982  6EF8               	movwf	tblptru,c
  7527  011984                     	endif
  7528  011984  0008               	tblrd		*
  7529  011986  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7530  01198A  EC46  F087         	call	_lcd_string	;wreg free
  7531                           
  7532                           ;vend.c: 500: buttons = butindb();
  7533  01198E  EC77  F08E         	call	_butindb	;wreg free
  7534  011992  6E39               	movwf	_buttons,c	;volatile
  7535                           
  7536                           ;vend.c: 501: while(venflags.nosense)
  7537  011994  D010               	goto	l2172
  7538  011996                     
  7539                           ;vend.c: 502: {
  7540                           ;vend.c: 503: buttons = butindb();
  7541  011996  EC77  F08E         	call	_butindb	;wreg free
  7542  01199A  6E39               	movwf	_buttons,c	;volatile
  7543                           
  7544                           ;vend.c: 504: if(buttons != 0x00)
  7545  01199C  5039               	movf	_buttons,w,c	;volatile
  7546  01199E  B4D8               	btfsc	status,2,c
  7547  0119A0  D005               	goto	l2171
  7548                           
  7549                           ;vend.c: 505: {
  7550                           ;vend.c: 506: off_sens(get_channel(buttons));
  7551  0119A2  5039               	movf	_buttons,w,c	;volatile
  7552  0119A4  EC40  F08F         	call	_get_channel
  7553  0119A8  EC2C  F084         	call	_off_sens
  7554  0119AC                     l2171:
  7555                           
  7556                           ;vend.c: 507: }
  7557                           ;vend.c: 508: if(Read_Service() == 0x00)
  7558  0119AC  ECC2  F08F         	call	_Read_Service	;wreg free
  7559  0119B0  0900               	iorlw	0
  7560  0119B2  B4D8               	btfsc	status,2,c
  7561                           
  7562                           ;vend.c: 509: {
  7563                           ;vend.c: 510: venflags.nosense = 0;
  7564  0119B4  9A2F               	bcf	_venflags+1,5,c
  7565  0119B6                     l2172:
  7566  0119B6  AA2F               	btfss	_venflags+1,5,c
  7567  0119B8  0012               	return	
  7568  0119BA  D7ED               	goto	l2170
  7569  0119BC                     __end_of_Sens_off:
  7570                           	opt stack 0
  7571                           tblptru	equ	0xFF8
  7572                           tblptrh	equ	0xFF7
  7573                           tblptrl	equ	0xFF6
  7574                           tablat	equ	0xFF5
  7575                           prodh	equ	0xFF4
  7576                           prodl	equ	0xFF3
  7577                           postinc0	equ	0xFEE
  7578                           wreg	equ	0xFE8
  7579                           indf2	equ	0xFDF
  7580                           fsr2h	equ	0xFDA
  7581                           fsr2l	equ	0xFD9
  7582                           status	equ	0xFD8
  7583                           
  7584 ;; *************** function _off_sens *****************
  7585 ;; Defined at:
  7586 ;;		line 517 in file "vend.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  channel         1    wreg     unsigned char 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;  channel         1    0[BANK0 ] unsigned char 
  7591 ;;  senseflags      1    2[BANK0 ] unsigned char 
  7592 ;;  chanbit         1    1[BANK0 ] unsigned char 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7606 ;;Total ram usage:        3 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:    9
  7609 ;; This function calls:
  7610 ;;		_DATAEE_ReadByte
  7611 ;;		_DATAEE_WriteByte
  7612 ;;		_butindb
  7613 ;;		_displ_sflags
  7614 ;; This function is called by:
  7615 ;;		_Sens_off
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text35
  7620  010858                     __ptext35:
  7621                           	opt stack 0
  7622  010858                     _off_sens:
  7623                           	opt stack 18
  7624                           
  7625                           ;incstack = 0
  7626                           ;off_sens@channel stored from wreg
  7627  010858  0100               	movlb	0	; () banked
  7628  01085A  6FA7               	movwf	off_sens@channel& (0+255),b
  7629                           
  7630                           ;vend.c: 519: uint8_t chanbit = buttons;
  7631  01085C  C039  F0A8         	movff	_buttons,off_sens@chanbit	;volatile
  7632                           
  7633                           ;vend.c: 520: venflags.sensno = 1;
  7634  010860  8E2F               	bsf	_venflags+1,7,c
  7635                           
  7636                           ;vend.c: 521: uint8_t senseflags = DATAEE_ReadByte(sensorflags);
  7637  010862  0E3D               	movlw	low _sensorflags
  7638  010864  6EF6               	movwf	tblptrl,c
  7639  010866                     	if	1	;There is more than 1 active tblptr byte
  7640  010866  0EFC               	movlw	high _sensorflags
  7641  010868  6EF7               	movwf	tblptrh,c
  7642  01086A                     	endif
  7643  01086A                     	if	1	;There are 3 active tblptr bytes
  7644  01086A  0E00               	movlw	low (_sensorflags shr (0+16))
  7645  01086C  6EF8               	movwf	tblptru,c
  7646  01086E                     	endif
  7647  01086E  0009               	tblrd		*+
  7648  010870  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  7649  010874  000A               	tblrd		*-
  7650  010876  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7651  01087A  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  7652  01087E  0100               	movlb	0	; () banked
  7653  010880  6FA9               	movwf	off_sens@senseflags& (0+255),b
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;vend.c: 522: displ_sflags(senseflags, channel, chanbit);
  7657  010882  C0A7  F029         	movff	off_sens@channel,displ_sflags@chanel
  7658  010886  C0A8  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  7659  01088A  51A9               	movf	off_sens@senseflags& (0+255),w,b
  7660  01088C  EC90  F086         	call	_displ_sflags
  7661                           
  7662                           ;vend.c: 524: while(venflags.sensno)
  7663  010890  D04B               	goto	l2181
  7664  010892                     
  7665                           ;vend.c: 525: {
  7666                           ;vend.c: 526: buttons = butindb();
  7667  010892  EC77  F08E         	call	_butindb	;wreg free
  7668  010896  6E39               	movwf	_buttons,c	;volatile
  7669                           
  7670                           ;vend.c: 527: switch(buttons)
  7671  010898  D03D               	goto	l2179
  7672  01089A  0100               	movlb	0	; () banked
  7673  01089C  51A8               	movf	off_sens@chanbit& (0+255),w,b
  7674  01089E  0AFF               	xorlw	255
  7675  0108A0  15A9               	andwf	off_sens@senseflags& (0+255),w,b
  7676  0108A2  6FA9               	movwf	off_sens@senseflags& (0+255),b
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;vend.c: 531: DATAEE_WriteByte(sensorflags, senseflags);
  7680  0108A4  0E3D               	movlw	low _sensorflags
  7681  0108A6  6EF6               	movwf	tblptrl,c
  7682  0108A8                     	if	1	;There is more than 1 active tblptr byte
  7683  0108A8  0EFC               	movlw	high _sensorflags
  7684  0108AA  6EF7               	movwf	tblptrh,c
  7685  0108AC                     	endif
  7686  0108AC                     	if	1	;There are 3 active tblptr bytes
  7687  0108AC  0E00               	movlw	low (_sensorflags shr (0+16))
  7688  0108AE  6EF8               	movwf	tblptru,c
  7689  0108B0                     	endif
  7690  0108B0  0009               	tblrd		*+
  7691  0108B2  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  7692  0108B6  000A               	tblrd		*-
  7693  0108B8  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7694  0108BC  C0A9  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
  7695  0108C0  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  7696                           
  7697                           ;vend.c: 532: displ_sflags(senseflags, channel, chanbit);
  7698  0108C4  C0A7  F029         	movff	off_sens@channel,displ_sflags@chanel
  7699  0108C8  C0A8  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  7700  0108CC  0100               	movlb	0	; () banked
  7701  0108CE  51A9               	movf	off_sens@senseflags& (0+255),w,b
  7702  0108D0  EC90  F086         	call	_displ_sflags
  7703                           
  7704                           ;vend.c: 533: break;
  7705  0108D4  D029               	goto	l2181
  7706  0108D6  0100               	movlb	0	; () banked
  7707  0108D8  51A9               	movf	off_sens@senseflags& (0+255),w,b
  7708  0108DA  11A8               	iorwf	off_sens@chanbit& (0+255),w,b
  7709  0108DC  6FA9               	movwf	off_sens@senseflags& (0+255),b
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;vend.c: 536: DATAEE_WriteByte(sensorflags, senseflags);
  7713  0108DE  0E3D               	movlw	low _sensorflags
  7714  0108E0  6EF6               	movwf	tblptrl,c
  7715  0108E2                     	if	1	;There is more than 1 active tblptr byte
  7716  0108E2  0EFC               	movlw	high _sensorflags
  7717  0108E4  6EF7               	movwf	tblptrh,c
  7718  0108E6                     	endif
  7719  0108E6                     	if	1	;There are 3 active tblptr bytes
  7720  0108E6  0E00               	movlw	low (_sensorflags shr (0+16))
  7721  0108E8  6EF8               	movwf	tblptru,c
  7722  0108EA                     	endif
  7723  0108EA  0009               	tblrd		*+
  7724  0108EC  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  7725  0108F0  000A               	tblrd		*-
  7726  0108F2  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7727  0108F6  C0A9  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
  7728  0108FA  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  7729                           
  7730                           ;vend.c: 537: displ_sflags(senseflags, channel, chanbit);
  7731  0108FE  C0A7  F029         	movff	off_sens@channel,displ_sflags@chanel
  7732  010902  C0A8  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  7733  010906  0100               	movlb	0	; () banked
  7734  010908  51A9               	movf	off_sens@senseflags& (0+255),w,b
  7735  01090A  EC90  F086         	call	_displ_sflags
  7736                           
  7737                           ;vend.c: 538: break;
  7738  01090E  D00C               	goto	l2181
  7739  010910                     l2183:
  7740  010910  9E2F               	bcf	_venflags+1,7,c
  7741                           
  7742                           ;vend.c: 541: }
  7743                           
  7744                           ;vend.c: 540: break;
  7745  010912  D00A               	goto	l2181
  7746  010914                     l2179:
  7747  010914  5039               	movf	_buttons,w,c	;volatile
  7748                           
  7749                           ; Switch size 1, requested type "space"
  7750                           ; Number of cases is 3, Range of values is 1 to 128
  7751                           ; switch strategies available:
  7752                           ; Name         Instructions Cycles
  7753                           ; simple_byte           10     6 (average)
  7754                           ;	Chosen strategy is simple_byte
  7755  010916  0A01               	xorlw	1	; case 1
  7756  010918  B4D8               	btfsc	status,2,c
  7757  01091A  D7BF               	goto	l2180
  7758  01091C  0A03               	xorlw	3	; case 2
  7759  01091E  B4D8               	btfsc	status,2,c
  7760  010920  D7DA               	goto	l2182
  7761  010922  0A82               	xorlw	130	; case 128
  7762  010924  B4D8               	btfsc	status,2,c
  7763  010926  D7F4               	goto	l2183
  7764  010928                     l2181:
  7765  010928  AE2F               	btfss	_venflags+1,7,c
  7766  01092A  0012               	return	
  7767  01092C  D7B2               	goto	l2178
  7768  01092E                     __end_of_off_sens:
  7769                           	opt stack 0
  7770                           tblptru	equ	0xFF8
  7771                           tblptrh	equ	0xFF7
  7772                           tblptrl	equ	0xFF6
  7773                           tablat	equ	0xFF5
  7774                           prodh	equ	0xFF4
  7775                           prodl	equ	0xFF3
  7776                           postinc0	equ	0xFEE
  7777                           wreg	equ	0xFE8
  7778                           indf2	equ	0xFDF
  7779                           fsr2h	equ	0xFDA
  7780                           fsr2l	equ	0xFD9
  7781                           status	equ	0xFD8
  7782                           
  7783 ;; *************** function _displ_sflags *****************
  7784 ;; Defined at:
  7785 ;;		line 78 in file "lcd.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  senseflags      1    wreg     unsigned char 
  7788 ;;  chanel          1   30[COMRAM] unsigned char 
  7789 ;;  chanbit         1   31[COMRAM] unsigned char 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  senseflags      1   32[COMRAM] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  1    wreg      void 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;Total ram usage:        3 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    8
  7808 ;; This function calls:
  7809 ;;		_lcd_string
  7810 ;;		_lcd_writeC
  7811 ;; This function is called by:
  7812 ;;		_off_sens
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           	psect	text36
  7817  010D20                     __ptext36:
  7818                           	opt stack 0
  7819  010D20                     _displ_sflags:
  7820                           	opt stack 18
  7821                           
  7822                           ;incstack = 0
  7823                           ;displ_sflags@senseflags stored from wreg
  7824  010D20  6E2B               	movwf	displ_sflags@senseflags,c
  7825                           
  7826                           ;lcd.c: 81: lcd_string(chanmsg, line1);
  7827  010D22  0E8C               	movlw	low _chanmsg
  7828  010D24  6E24               	movwf	lcd_string@lcdstring,c
  7829  010D26  0EFF               	movlw	high _chanmsg
  7830  010D28  6E25               	movwf	lcd_string@lcdstring+1,c
  7831  010D2A  0E8F               	movlw	low _line1
  7832  010D2C  6EF6               	movwf	tblptrl,c
  7833  010D2E                     	if	1	;There is more than 1 active tblptr byte
  7834  010D2E  0EFC               	movlw	high _line1
  7835  010D30  6EF7               	movwf	tblptrh,c
  7836  010D32                     	endif
  7837  010D32                     	if	1	;There are 3 active tblptr bytes
  7838  010D32  0E00               	movlw	low (_line1 shr (0+16))
  7839  010D34  6EF8               	movwf	tblptru,c
  7840  010D36                     	endif
  7841  010D36  0008               	tblrd		*
  7842  010D38  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7843  010D3C  EC46  F087         	call	_lcd_string	;wreg free
  7844                           
  7845                           ;lcd.c: 82: lcd_writeC(chanel++ | 0x30);
  7846  010D40  5029               	movf	displ_sflags@chanel,w,c
  7847  010D42  0930               	iorlw	48
  7848  010D44  EC7F  F08B         	call	_lcd_writeC
  7849  010D48  2A29               	incf	displ_sflags@chanel,f,c
  7850                           
  7851                           ;lcd.c: 83: lcd_string(sensmsg, line2);
  7852  010D4A  0EA4               	movlw	low _sensmsg
  7853  010D4C  6E24               	movwf	lcd_string@lcdstring,c
  7854  010D4E  0EFF               	movlw	high _sensmsg
  7855  010D50  6E25               	movwf	lcd_string@lcdstring+1,c
  7856  010D52  0E8E               	movlw	low _line2
  7857  010D54  6EF6               	movwf	tblptrl,c
  7858  010D56                     	if	1	;There is more than 1 active tblptr byte
  7859  010D56  0EFC               	movlw	high _line2
  7860  010D58  6EF7               	movwf	tblptrh,c
  7861  010D5A                     	endif
  7862  010D5A                     	if	1	;There are 3 active tblptr bytes
  7863  010D5A  0E00               	movlw	low (_line2 shr (0+16))
  7864  010D5C  6EF8               	movwf	tblptru,c
  7865  010D5E                     	endif
  7866  010D5E  0008               	tblrd		*
  7867  010D60  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7868  010D64  EC46  F087         	call	_lcd_string	;wreg free
  7869                           
  7870                           ;lcd.c: 84: lcd_string(sensoffmsg, line3);
  7871  010D68  0EEE               	movlw	low _sensoffmsg
  7872  010D6A  6E24               	movwf	lcd_string@lcdstring,c
  7873  010D6C  0EFE               	movlw	high _sensoffmsg
  7874  010D6E  6E25               	movwf	lcd_string@lcdstring+1,c
  7875  010D70  0E8D               	movlw	low _line3
  7876  010D72  6EF6               	movwf	tblptrl,c
  7877  010D74                     	if	1	;There is more than 1 active tblptr byte
  7878  010D74  0EFC               	movlw	high _line3
  7879  010D76  6EF7               	movwf	tblptrh,c
  7880  010D78                     	endif
  7881  010D78                     	if	1	;There are 3 active tblptr bytes
  7882  010D78  0E00               	movlw	low (_line3 shr (0+16))
  7883  010D7A  6EF8               	movwf	tblptru,c
  7884  010D7C                     	endif
  7885  010D7C  0008               	tblrd		*
  7886  010D7E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7887  010D82  EC46  F087         	call	_lcd_string	;wreg free
  7888                           
  7889                           ;lcd.c: 86: if(senseflags && chanbit)
  7890  010D86  502B               	movf	displ_sflags@senseflags,w,c
  7891  010D88  B4D8               	btfsc	status,2,c
  7892  010D8A  D014               	goto	l1473
  7893  010D8C  502A               	movf	displ_sflags@chanbit,w,c
  7894  010D8E  B4D8               	btfsc	status,2,c
  7895  010D90  D011               	goto	l1473
  7896                           
  7897                           ;lcd.c: 87: {
  7898                           ;lcd.c: 88: lcd_string(disabled, line2 + 10);
  7899  010D92  0EB9               	movlw	low _disabled
  7900  010D94  6E24               	movwf	lcd_string@lcdstring,c
  7901  010D96  0EFF               	movlw	high _disabled
  7902  010D98  6E25               	movwf	lcd_string@lcdstring+1,c
  7903  010D9A  0E8E               	movlw	low _line2
  7904  010D9C  6EF6               	movwf	tblptrl,c
  7905  010D9E                     	if	1	;There is more than 1 active tblptr byte
  7906  010D9E  0EFC               	movlw	high _line2
  7907  010DA0  6EF7               	movwf	tblptrh,c
  7908  010DA2                     	endif
  7909  010DA2                     	if	1	;There are 3 active tblptr bytes
  7910  010DA2  0E00               	movlw	low (_line2 shr (0+16))
  7911  010DA4  6EF8               	movwf	tblptru,c
  7912  010DA6                     	endif
  7913  010DA6  0008               	tblrd		*
  7914  010DA8  50F5               	movf	tablat,w,c
  7915  010DAA  0F0A               	addlw	10
  7916  010DAC  6E26               	movwf	lcd_string@lcdline,c
  7917  010DAE  EC46  F087         	call	_lcd_string	;wreg free
  7918                           
  7919                           ;lcd.c: 89: }
  7920  010DB2  0012               	return	
  7921  010DB4                     l1473:
  7922                           
  7923                           ;lcd.c: 90: else
  7924                           ;lcd.c: 91: {
  7925                           ;lcd.c: 92: lcd_string(enabled, line2 + 10);
  7926  010DB4  0EC3               	movlw	low _enabled
  7927  010DB6  6E24               	movwf	lcd_string@lcdstring,c
  7928  010DB8  0EFF               	movlw	high _enabled
  7929  010DBA  6E25               	movwf	lcd_string@lcdstring+1,c
  7930  010DBC  0E8E               	movlw	low _line2
  7931  010DBE  6EF6               	movwf	tblptrl,c
  7932  010DC0                     	if	1	;There is more than 1 active tblptr byte
  7933  010DC0  0EFC               	movlw	high _line2
  7934  010DC2  6EF7               	movwf	tblptrh,c
  7935  010DC4                     	endif
  7936  010DC4                     	if	1	;There are 3 active tblptr bytes
  7937  010DC4  0E00               	movlw	low (_line2 shr (0+16))
  7938  010DC6  6EF8               	movwf	tblptru,c
  7939  010DC8                     	endif
  7940  010DC8  0008               	tblrd		*
  7941  010DCA  50F5               	movf	tablat,w,c
  7942  010DCC  0F0A               	addlw	10
  7943  010DCE  6E26               	movwf	lcd_string@lcdline,c
  7944  010DD0  EC46  F087         	call	_lcd_string	;wreg free
  7945  010DD4  0012               	return	
  7946  010DD6                     __end_of_displ_sflags:
  7947                           	opt stack 0
  7948                           tblptru	equ	0xFF8
  7949                           tblptrh	equ	0xFF7
  7950                           tblptrl	equ	0xFF6
  7951                           tablat	equ	0xFF5
  7952                           prodh	equ	0xFF4
  7953                           prodl	equ	0xFF3
  7954                           postinc0	equ	0xFEE
  7955                           wreg	equ	0xFE8
  7956                           indf2	equ	0xFDF
  7957                           fsr2h	equ	0xFDA
  7958                           fsr2l	equ	0xFD9
  7959                           status	equ	0xFD8
  7960                           
  7961 ;; *************** function _Reset_settings *****************
  7962 ;; Defined at:
  7963 ;;		line 545 in file "vend.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  chanlinkbits    2   32[COMRAM] unsigned int 
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  1    wreg      void 
  7970 ;; Registers used:
  7971 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;Total ram usage:        4 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:    8
  7984 ;; This function calls:
  7985 ;;		_DATAEE_WriteByte
  7986 ;;		_lcd_string
  7987 ;; This function is called by:
  7988 ;;		_Vend_setup
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text37
  7993  010FE8                     __ptext37:
  7994                           	opt stack 0
  7995  010FE8                     _Reset_settings:
  7996                           	opt stack 20
  7997                           
  7998                           ;vend.c: 547: lcd_string(chanresetmsg, line1);
  7999                           
  8000                           ;incstack = 0
  8001  010FE8  0ECE               	movlw	low _chanresetmsg
  8002  010FEA  6E24               	movwf	lcd_string@lcdstring,c
  8003  010FEC  0EFE               	movlw	high _chanresetmsg
  8004  010FEE  6E25               	movwf	lcd_string@lcdstring+1,c
  8005  010FF0  0E8F               	movlw	low _line1
  8006  010FF2  6EF6               	movwf	tblptrl,c
  8007  010FF4                     	if	1	;There is more than 1 active tblptr byte
  8008  010FF4  0EFC               	movlw	high _line1
  8009  010FF6  6EF7               	movwf	tblptrh,c
  8010  010FF8                     	endif
  8011  010FF8                     	if	1	;There are 3 active tblptr bytes
  8012  010FF8  0E00               	movlw	low (_line1 shr (0+16))
  8013  010FFA  6EF8               	movwf	tblptru,c
  8014  010FFC                     	endif
  8015  010FFC  0008               	tblrd		*
  8016  010FFE  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8017  011002  EC46  F087         	call	_lcd_string	;wreg free
  8018                           
  8019                           ;vend.c: 548: uint16_t chanlinkbits = chan1linkbits;
  8020  011006  0E4D               	movlw	low _chan1linkbits
  8021  011008  6EF6               	movwf	tblptrl,c
  8022  01100A                     	if	1	;There is more than 1 active tblptr byte
  8023  01100A  0EFC               	movlw	high _chan1linkbits
  8024  01100C  6EF7               	movwf	tblptrh,c
  8025  01100E                     	endif
  8026  01100E                     	if	1	;There are 3 active tblptr bytes
  8027  01100E  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8028  011010  6EF8               	movwf	tblptru,c
  8029  011012                     	endif
  8030  011012  0009               	tblrd		*+
  8031  011014  CFF5 F02B          	movff	tablat,Reset_settings@chanlinkbits
  8032  011018  000A               	tblrd		*-
  8033  01101A  CFF5 F02C          	movff	tablat,Reset_settings@chanlinkbits+1
  8034                           
  8035                           ;vend.c: 549: while(chanlinkbits < chan1time)
  8036  01101E  D00A               	goto	l2188
  8037  011020                     
  8038                           ;vend.c: 550: {
  8039                           ;vend.c: 552: DATAEE_WriteByte(chanlinkbits, 0x00);
  8040  011020  C02B  F01D         	movff	Reset_settings@chanlinkbits,DATAEE_WriteByte@bAdd
  8041  011024  C02C  F01E         	movff	Reset_settings@chanlinkbits+1,DATAEE_WriteByte@bAdd+1
  8042  011028  0E00               	movlw	0
  8043  01102A  6E1F               	movwf	DATAEE_WriteByte@bData,c
  8044  01102C  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  8045                           
  8046                           ;vend.c: 553: chanlinkbits++;
  8047  011030  4A2B               	infsnz	Reset_settings@chanlinkbits,f,c
  8048  011032  2A2C               	incf	Reset_settings@chanlinkbits+1,f,c
  8049  011034                     l2188:
  8050  011034  0E3B               	movlw	low _chan1time
  8051  011036  6EF6               	movwf	tblptrl,c
  8052  011038                     	if	1	;There is more than 1 active tblptr byte
  8053  011038  0EFC               	movlw	high _chan1time
  8054  01103A  6EF7               	movwf	tblptrh,c
  8055  01103C                     	endif
  8056  01103C                     	if	1	;There are 3 active tblptr bytes
  8057  01103C  0E00               	movlw	low (_chan1time shr (0+16))
  8058  01103E  6EF8               	movwf	tblptru,c
  8059  011040                     	endif
  8060  011040  0009               	tblrd		*+
  8061  011042  50F5               	movf	tablat,w,c
  8062  011044  5C2B               	subwf	Reset_settings@chanlinkbits,w,c
  8063  011046  0009               	tblrd		*+
  8064  011048  50F5               	movf	tablat,w,c
  8065  01104A  582C               	subwfb	Reset_settings@chanlinkbits+1,w,c
  8066  01104C  A0D8               	btfss	status,0,c
  8067  01104E  D7E8               	goto	l2189
  8068                           
  8069                           ;vend.c: 554: }
  8070                           ;vend.c: 555: DATAEE_WriteByte(sensorflags, 0x00);
  8071  011050  0E3D               	movlw	low _sensorflags
  8072  011052  6EF6               	movwf	tblptrl,c
  8073  011054                     	if	1	;There is more than 1 active tblptr byte
  8074  011054  0EFC               	movlw	high _sensorflags
  8075  011056  6EF7               	movwf	tblptrh,c
  8076  011058                     	endif
  8077  011058                     	if	1	;There are 3 active tblptr bytes
  8078  011058  0E00               	movlw	low (_sensorflags shr (0+16))
  8079  01105A  6EF8               	movwf	tblptru,c
  8080  01105C                     	endif
  8081  01105C  0009               	tblrd		*+
  8082  01105E  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  8083  011062  000A               	tblrd		*-
  8084  011064  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  8085  011068  0E00               	movlw	0
  8086  01106A  6E1F               	movwf	DATAEE_WriteByte@bData,c
  8087  01106C  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  8088                           
  8089                           ;vend.c: 556: _delay((unsigned long)((2000)*(12000000/4000.0)));
  8090  011070  0E1F               	movlw	31
  8091  011072  6E2A               	movwf	(??_Reset_settings+1)& (0+255),c
  8092  011074  0E71               	movlw	113
  8093  011076  6E29               	movwf	??_Reset_settings& (0+255),c
  8094  011078  0E1E               	movlw	30
  8095  01107A                     u4067:
  8096  01107A  2EE8               	decfsz	wreg,f,c
  8097  01107C  D7FE               	bra	u4067
  8098  01107E  2E29               	decfsz	??_Reset_settings& (0+255),f,c
  8099  011080  D7FC               	bra	u4067
  8100  011082  2E2A               	decfsz	(??_Reset_settings+1)& (0+255),f,c
  8101  011084  D7FA               	bra	u4067
  8102  011086  D000               	nop2	
  8103  011088  0012               	return		;funcret
  8104  01108A                     __end_of_Reset_settings:
  8105                           	opt stack 0
  8106                           tblptru	equ	0xFF8
  8107                           tblptrh	equ	0xFF7
  8108                           tblptrl	equ	0xFF6
  8109                           tablat	equ	0xFF5
  8110                           prodh	equ	0xFF4
  8111                           prodl	equ	0xFF3
  8112                           postinc0	equ	0xFEE
  8113                           wreg	equ	0xFE8
  8114                           indf2	equ	0xFDF
  8115                           fsr2h	equ	0xFDA
  8116                           fsr2l	equ	0xFD9
  8117                           status	equ	0xFD8
  8118                           
  8119 ;; *************** function _Init_vendmem *****************
  8120 ;; Defined at:
  8121 ;;		line 9 in file "vend.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  chanlink        2   22[COMRAM] PTR unsigned char 
  8126 ;;		 -> chanlink1(1), 
  8127 ;;  chanlinkbits    2   20[COMRAM] unsigned int 
  8128 ;;  i               1   24[COMRAM] unsigned char 
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8139 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8141 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8142 ;;Total ram usage:        5 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:    3
  8145 ;; This function calls:
  8146 ;;		_DATAEE_ReadByte
  8147 ;; This function is called by:
  8148 ;;		_vend_init
  8149 ;;		_Vend_setup
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           	psect	text38
  8154  0115BC                     __ptext38:
  8155                           	opt stack 0
  8156  0115BC                     _Init_vendmem:
  8157                           	opt stack 26
  8158                           
  8159                           ;vend.c: 12: ((uint8_t*) &senschk)[0] = DATAEE_ReadByte(sensorflags);
  8160                           
  8161                           ;incstack = 0
  8162  0115BC  0E3D               	movlw	low _sensorflags
  8163  0115BE  6EF6               	movwf	tblptrl,c
  8164  0115C0                     	if	1	;There is more than 1 active tblptr byte
  8165  0115C0  0EFC               	movlw	high _sensorflags
  8166  0115C2  6EF7               	movwf	tblptrh,c
  8167  0115C4                     	endif
  8168  0115C4                     	if	1	;There are 3 active tblptr bytes
  8169  0115C4  0E00               	movlw	low (_sensorflags shr (0+16))
  8170  0115C6  6EF8               	movwf	tblptru,c
  8171  0115C8                     	endif
  8172  0115C8  0009               	tblrd		*+
  8173  0115CA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  8174  0115CE  000A               	tblrd		*-
  8175  0115D0  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  8176  0115D4  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  8177  0115D8  6E35               	movwf	_senschk,c
  8178                           
  8179                           ;vend.c: 14: uint16_t chanlinkbits = chan1linkbits;
  8180  0115DA  0E4D               	movlw	low _chan1linkbits
  8181  0115DC  6EF6               	movwf	tblptrl,c
  8182  0115DE                     	if	1	;There is more than 1 active tblptr byte
  8183  0115DE  0EFC               	movlw	high _chan1linkbits
  8184  0115E0  6EF7               	movwf	tblptrh,c
  8185  0115E2                     	endif
  8186  0115E2                     	if	1	;There are 3 active tblptr bytes
  8187  0115E2  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8188  0115E4  6EF8               	movwf	tblptru,c
  8189  0115E6                     	endif
  8190  0115E6  0009               	tblrd		*+
  8191  0115E8  CFF5 F01F          	movff	tablat,Init_vendmem@chanlinkbits
  8192  0115EC  000A               	tblrd		*-
  8193  0115EE  CFF5 F020          	movff	tablat,Init_vendmem@chanlinkbits+1
  8194                           
  8195                           ;vend.c: 15: uint8_t *chanlink = ((uint8_t*) &chanlink1);
  8196  0115F2  0E03               	movlw	3
  8197  0115F4  6E21               	movwf	Init_vendmem@chanlink,c
  8198  0115F6  0E00               	movlw	0
  8199  0115F8  6E22               	movwf	Init_vendmem@chanlink+1,c
  8200                           
  8201                           ;vend.c: 16: char i = 0;
  8202  0115FA  0E00               	movlw	0
  8203  0115FC  6E23               	movwf	Init_vendmem@i,c
  8204                           
  8205                           ;vend.c: 17: while(i < 8)
  8206  0115FE  D012               	goto	l1996
  8207  011600                     
  8208                           ;vend.c: 18: {
  8209                           ;vend.c: 19: chanlink[i] = DATAEE_ReadByte(chanlinkbits + i);
  8210  011600  5023               	movf	Init_vendmem@i,w,c
  8211  011602  0D01               	mullw	1
  8212  011604  50F3               	movf	prodl,w,c
  8213  011606  2421               	addwf	Init_vendmem@chanlink,w,c
  8214  011608  6ED9               	movwf	fsr2l,c
  8215  01160A  50F4               	movf	prodh,w,c
  8216  01160C  2022               	addwfc	Init_vendmem@chanlink+1,w,c
  8217  01160E  6EDA               	movwf	fsr2h,c
  8218  011610  5023               	movf	Init_vendmem@i,w,c
  8219  011612  241F               	addwf	Init_vendmem@chanlinkbits,w,c
  8220  011614  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  8221  011616  0E00               	movlw	0
  8222  011618  2020               	addwfc	Init_vendmem@chanlinkbits+1,w,c
  8223  01161A  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  8224  01161C  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  8225  011620  6EDF               	movwf	indf2,c
  8226                           
  8227                           ;vend.c: 20: i++;
  8228  011622  2A23               	incf	Init_vendmem@i,f,c
  8229  011624                     l1996:
  8230  011624  0E07               	movlw	7
  8231  011626  6423               	cpfsgt	Init_vendmem@i,c
  8232  011628  D7EB               	goto	l1997
  8233  01162A  0012               	return	
  8234  01162C                     __end_of_Init_vendmem:
  8235                           	opt stack 0
  8236                           tblptru	equ	0xFF8
  8237                           tblptrh	equ	0xFF7
  8238                           tblptrl	equ	0xFF6
  8239                           tablat	equ	0xFF5
  8240                           prodh	equ	0xFF4
  8241                           prodl	equ	0xFF3
  8242                           postinc0	equ	0xFEE
  8243                           wreg	equ	0xFE8
  8244                           indf2	equ	0xFDF
  8245                           fsr2h	equ	0xFDA
  8246                           fsr2l	equ	0xFD9
  8247                           status	equ	0xFD8
  8248                           
  8249 ;; *************** function _Chan_link *****************
  8250 ;; Defined at:
  8251 ;;		line 442 in file "vend.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;Total ram usage:        2 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; Hardware stack levels required when called:   10
  8272 ;; This function calls:
  8273 ;;		_Link_chan
  8274 ;;		_Read_Service
  8275 ;;		_butindb
  8276 ;;		_get_channel
  8277 ;;		_lcd_string
  8278 ;; This function is called by:
  8279 ;;		_Vend_setup
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text39
  8284  011764                     __ptext39:
  8285                           	opt stack 0
  8286  011764                     _Chan_link:
  8287                           	opt stack 18
  8288                           
  8289                           ;vend.c: 444: lcd_string(chanlinkm, line1);
  8290                           
  8291                           ;incstack = 0
  8292  011764  0EBC               	movlw	low _chanlinkm
  8293  011766  6E24               	movwf	lcd_string@lcdstring,c
  8294  011768  0EFD               	movlw	high _chanlinkm
  8295  01176A  6E25               	movwf	lcd_string@lcdstring+1,c
  8296  01176C  0E8F               	movlw	low _line1
  8297  01176E  6EF6               	movwf	tblptrl,c
  8298  011770                     	if	1	;There is more than 1 active tblptr byte
  8299  011770  0EFC               	movlw	high _line1
  8300  011772  6EF7               	movwf	tblptrh,c
  8301  011774                     	endif
  8302  011774                     	if	1	;There are 3 active tblptr bytes
  8303  011774  0E00               	movlw	low (_line1 shr (0+16))
  8304  011776  6EF8               	movwf	tblptru,c
  8305  011778                     	endif
  8306  011778  0008               	tblrd		*
  8307  01177A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8308  01177E  EC46  F087         	call	_lcd_string	;wreg free
  8309                           
  8310                           ;vend.c: 445: venflags.chanlink = 1;
  8311  011782  862F               	bsf	_venflags+1,3,c
  8312                           
  8313                           ;vend.c: 446: while(venflags.chanlink)
  8314  011784  D01D               	goto	l2152
  8315  011786                     
  8316                           ;vend.c: 447: {
  8317                           ;vend.c: 448: buttons = butindb();
  8318  011786  EC77  F08E         	call	_butindb	;wreg free
  8319  01178A  6E39               	movwf	_buttons,c	;volatile
  8320                           
  8321                           ;vend.c: 449: if(buttons != 0x00)
  8322  01178C  5039               	movf	_buttons,w,c	;volatile
  8323  01178E  B4D8               	btfsc	status,2,c
  8324  011790  D012               	goto	l2151
  8325                           
  8326                           ;vend.c: 450: {
  8327                           ;vend.c: 451: Link_chan(get_channel(buttons));
  8328  011792  5039               	movf	_buttons,w,c	;volatile
  8329  011794  EC40  F08F         	call	_get_channel
  8330  011798  EC33  F086         	call	_Link_chan
  8331                           
  8332                           ;vend.c: 452: _delay((unsigned long)((1000)*(12000000/4000.0)));
  8333  01179C  0E10               	movlw	16
  8334  01179E  0100               	movlb	0	; () banked
  8335  0117A0  6FAB               	movwf	(??_Chan_link+1)& (0+255),b
  8336  0117A2  0E39               	movlw	57
  8337  0117A4  6FAA               	movwf	??_Chan_link& (0+255),b
  8338  0117A6  0E0D               	movlw	13
  8339  0117A8                     u4077:
  8340  0117A8  2EE8               	decfsz	wreg,f,c
  8341  0117AA  D7FE               	bra	u4077
  8342  0117AC  2FAA               	decfsz	??_Chan_link& (0+255),f,b
  8343  0117AE  D7FC               	bra	u4077
  8344  0117B0  2FAB               	decfsz	(??_Chan_link+1)& (0+255),f,b
  8345  0117B2  D7FA               	bra	u4077
  8346  0117B4  D000               	nop2	
  8347  0117B6                     l2151:
  8348                           
  8349                           ;vend.c: 453: }
  8350                           ;vend.c: 454: if(Read_Service() == 0x00)
  8351  0117B6  ECC2  F08F         	call	_Read_Service	;wreg free
  8352  0117BA  0900               	iorlw	0
  8353  0117BC  B4D8               	btfsc	status,2,c
  8354                           
  8355                           ;vend.c: 455: {
  8356                           ;vend.c: 456: venflags.chanlink = 0;
  8357  0117BE  962F               	bcf	_venflags+1,3,c
  8358  0117C0                     l2152:
  8359  0117C0  A62F               	btfss	_venflags+1,3,c
  8360  0117C2  0012               	return	
  8361  0117C4  D7E0               	goto	l2150
  8362  0117C6                     __end_of_Chan_link:
  8363                           	opt stack 0
  8364                           tblptru	equ	0xFF8
  8365                           tblptrh	equ	0xFF7
  8366                           tblptrl	equ	0xFF6
  8367                           tablat	equ	0xFF5
  8368                           prodh	equ	0xFF4
  8369                           prodl	equ	0xFF3
  8370                           postinc0	equ	0xFEE
  8371                           wreg	equ	0xFE8
  8372                           indf2	equ	0xFDF
  8373                           fsr2h	equ	0xFDA
  8374                           fsr2l	equ	0xFD9
  8375                           status	equ	0xFD8
  8376                           
  8377 ;; *************** function _get_channel *****************
  8378 ;; Defined at:
  8379 ;;		line 317 in file "vend.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  butons          1    wreg     unsigned char 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;  butons          1   19[COMRAM] unsigned char 
  8384 ;;  channel         1   18[COMRAM] unsigned char 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      unsigned char 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8398 ;;Total ram usage:        2 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    2
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		_main
  8405 ;;		_set_price
  8406 ;;		_Vend_settime
  8407 ;;		_Chan_link
  8408 ;;		_Sens_off
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text40
  8413  011E80                     __ptext40:
  8414                           	opt stack 0
  8415  011E80                     _get_channel:
  8416                           	opt stack 28
  8417                           
  8418                           ;incstack = 0
  8419                           ;get_channel@butons stored from wreg
  8420  011E80  6E1E               	movwf	get_channel@butons,c
  8421                           
  8422                           ;vend.c: 320: uint8_t channel = 0x00;
  8423  011E82  0E00               	movlw	0
  8424  011E84  6E1D               	movwf	get_channel@channel,c
  8425                           
  8426                           ;vend.c: 321: while(butons != 0)
  8427  011E86  D004               	goto	l2100
  8428  011E88                     
  8429                           ;vend.c: 322: {
  8430                           ;vend.c: 323: channel++;
  8431  011E88  2A1D               	incf	get_channel@channel,f,c
  8432                           
  8433                           ;vend.c: 324: butons = butons >> 1;
  8434  011E8A  90D8               	bcf	status,0,c
  8435  011E8C  301E               	rrcf	get_channel@butons,w,c
  8436  011E8E  6E1E               	movwf	get_channel@butons,c
  8437  011E90                     l2100:
  8438  011E90  501E               	movf	get_channel@butons,w,c
  8439  011E92  A4D8               	btfss	status,2,c
  8440  011E94  D7F9               	goto	l2101
  8441                           
  8442                           ;vend.c: 325: }
  8443                           ;vend.c: 326: channel--;
  8444  011E96  061D               	decf	get_channel@channel,f,c
  8445                           
  8446                           ;vend.c: 327: return channel;
  8447  011E98  501D               	movf	get_channel@channel,w,c
  8448  011E9A  0012               	return	
  8449  011E9C                     __end_of_get_channel:
  8450                           	opt stack 0
  8451                           tblptru	equ	0xFF8
  8452                           tblptrh	equ	0xFF7
  8453                           tblptrl	equ	0xFF6
  8454                           tablat	equ	0xFF5
  8455                           prodh	equ	0xFF4
  8456                           prodl	equ	0xFF3
  8457                           postinc0	equ	0xFEE
  8458                           wreg	equ	0xFE8
  8459                           indf2	equ	0xFDF
  8460                           fsr2h	equ	0xFDA
  8461                           fsr2l	equ	0xFD9
  8462                           status	equ	0xFD8
  8463                           
  8464 ;; *************** function _Link_chan *****************
  8465 ;; Defined at:
  8466 ;;		line 463 in file "vend.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;  channel         1    wreg     unsigned char 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  channel         1    1[BANK0 ] unsigned char 
  8471 ;;  linkflags       1    2[BANK0 ] unsigned char 
  8472 ;;  chanbit         1    0[BANK0 ] unsigned char 
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8483 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8485 ;;      Totals:         2       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8486 ;;Total ram usage:        5 bytes
  8487 ;; Hardware stack levels used:    1
  8488 ;; Hardware stack levels required when called:    9
  8489 ;; This function calls:
  8490 ;;		_DATAEE_ReadByte
  8491 ;;		_DATAEE_WriteByte
  8492 ;;		_Read_Service
  8493 ;;		_butindb
  8494 ;;		_displ_lflags
  8495 ;; This function is called by:
  8496 ;;		_Chan_link
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text41
  8501  010C66                     __ptext41:
  8502                           	opt stack 0
  8503  010C66                     _Link_chan:
  8504                           	opt stack 18
  8505                           
  8506                           ;incstack = 0
  8507                           ;Link_chan@channel stored from wreg
  8508  010C66  0100               	movlb	0	; () banked
  8509  010C68  6FA8               	movwf	Link_chan@channel& (0+255),b
  8510                           
  8511                           ;vend.c: 465: venflags.linkchan = 1;
  8512  010C6A  8030               	bsf	_venflags+2,0,c
  8513                           
  8514                           ;vend.c: 466: uint8_t chanbit = buttons;
  8515  010C6C  C039  F0A7         	movff	_buttons,Link_chan@chanbit	;volatile
  8516                           
  8517                           ;vend.c: 467: uint8_t linkflags = DATAEE_ReadByte(chan1linkbits + channel);
  8518  010C70  0E4D               	movlw	low _chan1linkbits
  8519  010C72  6EF6               	movwf	tblptrl,c
  8520  010C74                     	if	1	;There is more than 1 active tblptr byte
  8521  010C74  0EFC               	movlw	high _chan1linkbits
  8522  010C76  6EF7               	movwf	tblptrh,c
  8523  010C78                     	endif
  8524  010C78                     	if	1	;There are 3 active tblptr bytes
  8525  010C78  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8526  010C7A  6EF8               	movwf	tblptru,c
  8527  010C7C                     	endif
  8528  010C7C  0009               	tblrd		*+
  8529  010C7E  CFF5 F02C          	movff	tablat,??_Link_chan
  8530  010C82  0009               	tblrd		*+
  8531  010C84  CFF5 F02D          	movff	tablat,??_Link_chan+1
  8532  010C88  0100               	movlb	0	; () banked
  8533  010C8A  51A8               	movf	Link_chan@channel& (0+255),w,b
  8534  010C8C  242C               	addwf	??_Link_chan,w,c
  8535  010C8E  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  8536  010C90  0E00               	movlw	0
  8537  010C92  202D               	addwfc	??_Link_chan+1,w,c
  8538  010C94  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  8539  010C96  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  8540  010C9A  0100               	movlb	0	; () banked
  8541  010C9C  6FA9               	movwf	Link_chan@linkflags& (0+255),b
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;vend.c: 468: displ_lflags(channel, linkflags);
  8545  010C9E  C0A9  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
  8546  010CA2  51A8               	movf	Link_chan@channel& (0+255),w,b
  8547  010CA4  EC1F  F089         	call	_displ_lflags
  8548                           
  8549                           ;vend.c: 469: while(venflags.linkchan)
  8550  010CA8  D038               	goto	u3100
  8551  010CAA                     
  8552                           ;vend.c: 470: {
  8553                           ;vend.c: 471: buttons = butindb();
  8554  010CAA  EC77  F08E         	call	_butindb	;wreg free
  8555  010CAE  6E39               	movwf	_buttons,c	;volatile
  8556                           
  8557                           ;vend.c: 472: if(buttons != 0x00)
  8558  010CB0  5039               	movf	_buttons,w,c	;volatile
  8559  010CB2  B4D8               	btfsc	status,2,c
  8560  010CB4  D02D               	goto	l2162
  8561                           
  8562                           ;vend.c: 473: {
  8563                           ;vend.c: 474: if(buttons && linkflags)
  8564  010CB6  5039               	movf	_buttons,w,c	;volatile
  8565  010CB8  B4D8               	btfsc	status,2,c
  8566  010CBA  D008               	goto	l2160
  8567  010CBC  0100               	movlb	0	; () banked
  8568  010CBE  51A9               	movf	Link_chan@linkflags& (0+255),w,b
  8569  010CC0  B4D8               	btfsc	status,2,c
  8570  010CC2  D004               	goto	l2160
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;vend.c: 475: {
  8574                           ;vend.c: 477: linkflags = linkflags & ~buttons;
  8575  010CC4  5039               	movf	_buttons,w,c	;volatile
  8576  010CC6  0AFF               	xorlw	255
  8577  010CC8  15A9               	andwf	Link_chan@linkflags& (0+255),w,b
  8578  010CCA  D003               	goto	L13
  8579  010CCC                     l2160:
  8580                           
  8581                           ;vend.c: 479: else
  8582                           ;vend.c: 480: {
  8583                           ;vend.c: 482: linkflags = linkflags | buttons;
  8584                           
  8585                           ; BSR set to: 0
  8586  010CCC  0100               	movlb	0	; () banked
  8587  010CCE  51A9               	movf	Link_chan@linkflags& (0+255),w,b
  8588  010CD0  1039               	iorwf	_buttons,w,c	;volatile
  8589  010CD2                     L13:
  8590  010CD2  6FA9               	movwf	Link_chan@linkflags& (0+255),b
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;vend.c: 483: }
  8594                           ;vend.c: 484: DATAEE_WriteByte(chan1linkbits + channel, linkflags);
  8595                           
  8596                           ; BSR set to: 0
  8597  010CD4  0E4D               	movlw	low _chan1linkbits
  8598  010CD6  6EF6               	movwf	tblptrl,c
  8599  010CD8                     	if	1	;There is more than 1 active tblptr byte
  8600  010CD8  0EFC               	movlw	high _chan1linkbits
  8601  010CDA  6EF7               	movwf	tblptrh,c
  8602  010CDC                     	endif
  8603  010CDC                     	if	1	;There are 3 active tblptr bytes
  8604  010CDC  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8605  010CDE  6EF8               	movwf	tblptru,c
  8606  010CE0                     	endif
  8607  010CE0  0009               	tblrd		*+
  8608  010CE2  CFF5 F02C          	movff	tablat,??_Link_chan
  8609  010CE6  0009               	tblrd		*+
  8610  010CE8  CFF5 F02D          	movff	tablat,??_Link_chan+1
  8611  010CEC  51A8               	movf	Link_chan@channel& (0+255),w,b
  8612  010CEE  242C               	addwf	??_Link_chan,w,c
  8613  010CF0  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  8614  010CF2  0E00               	movlw	0
  8615  010CF4  202D               	addwfc	??_Link_chan+1,w,c
  8616  010CF6  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  8617  010CF8  C0A9  F01F         	movff	Link_chan@linkflags,DATAEE_WriteByte@bData
  8618  010CFC  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  8619                           
  8620                           ;vend.c: 485: displ_lflags(channel, linkflags);
  8621  010D00  C0A9  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
  8622  010D04  0100               	movlb	0	; () banked
  8623  010D06  51A8               	movf	Link_chan@channel& (0+255),w,b
  8624  010D08  EC1F  F089         	call	_displ_lflags
  8625                           
  8626                           ;vend.c: 486: }
  8627                           ;vend.c: 487: while(Read_Service() == 0x00)
  8628  010D0C  D001               	goto	l2162
  8629  010D0E                     l2163:
  8630                           
  8631                           ;vend.c: 488: {
  8632                           ;vend.c: 489: venflags.linkchan = 0;
  8633  010D0E  9030               	bcf	_venflags+2,0,c
  8634  010D10                     l2162:
  8635  010D10  ECC2  F08F         	call	_Read_Service	;wreg free
  8636  010D14  0900               	iorlw	0
  8637  010D16  B4D8               	btfsc	status,2,c
  8638  010D18  D7FA               	goto	l2163
  8639  010D1A                     u3100:
  8640  010D1A  A030               	btfss	_venflags+2,0,c
  8641  010D1C  0012               	return	
  8642  010D1E  D7C5               	goto	l2158
  8643  010D20                     __end_of_Link_chan:
  8644                           	opt stack 0
  8645                           tblptru	equ	0xFF8
  8646                           tblptrh	equ	0xFF7
  8647                           tblptrl	equ	0xFF6
  8648                           tablat	equ	0xFF5
  8649                           prodh	equ	0xFF4
  8650                           prodl	equ	0xFF3
  8651                           postinc0	equ	0xFEE
  8652                           wreg	equ	0xFE8
  8653                           indf2	equ	0xFDF
  8654                           fsr2h	equ	0xFDA
  8655                           fsr2l	equ	0xFD9
  8656                           status	equ	0xFD8
  8657                           
  8658 ;; *************** function _displ_lflags *****************
  8659 ;; Defined at:
  8660 ;;		line 57 in file "lcd.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;  chanel          1    wreg     unsigned char 
  8663 ;;  linkflgs        1   30[COMRAM] unsigned char 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  chanel          1   31[COMRAM] unsigned char 
  8666 ;;  lchan           1   32[COMRAM] unsigned char 
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8676 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8679 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8680 ;;Total ram usage:        3 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    8
  8683 ;; This function calls:
  8684 ;;		_lcd_dispadd
  8685 ;;		_lcd_string
  8686 ;;		_lcd_writeC
  8687 ;; This function is called by:
  8688 ;;		_Link_chan
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           	psect	text42
  8693  01123E                     __ptext42:
  8694                           	opt stack 0
  8695  01123E                     _displ_lflags:
  8696                           	opt stack 18
  8697                           
  8698                           ;incstack = 0
  8699                           ;displ_lflags@chanel stored from wreg
  8700  01123E  6E2A               	movwf	displ_lflags@chanel,c
  8701                           
  8702                           ;lcd.c: 59: lcd_string(chanmsg, line1);
  8703  011240  0E8C               	movlw	low _chanmsg
  8704  011242  6E24               	movwf	lcd_string@lcdstring,c
  8705  011244  0EFF               	movlw	high _chanmsg
  8706  011246  6E25               	movwf	lcd_string@lcdstring+1,c
  8707  011248  0E8F               	movlw	low _line1
  8708  01124A  6EF6               	movwf	tblptrl,c
  8709  01124C                     	if	1	;There is more than 1 active tblptr byte
  8710  01124C  0EFC               	movlw	high _line1
  8711  01124E  6EF7               	movwf	tblptrh,c
  8712  011250                     	endif
  8713  011250                     	if	1	;There are 3 active tblptr bytes
  8714  011250  0E00               	movlw	low (_line1 shr (0+16))
  8715  011252  6EF8               	movwf	tblptru,c
  8716  011254                     	endif
  8717  011254  0008               	tblrd		*
  8718  011256  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8719  01125A  EC46  F087         	call	_lcd_string	;wreg free
  8720                           
  8721                           ;lcd.c: 60: lcd_writeC(chanel++ | 0x30);
  8722  01125E  502A               	movf	displ_lflags@chanel,w,c
  8723  011260  0930               	iorlw	48
  8724  011262  EC7F  F08B         	call	_lcd_writeC
  8725  011266  2A2A               	incf	displ_lflags@chanel,f,c
  8726                           
  8727                           ;lcd.c: 61: uint8_t lchan = 1;
  8728  011268  0E01               	movlw	1
  8729  01126A  6E2B               	movwf	displ_lflags@lchan,c
  8730                           
  8731                           ;lcd.c: 63: lcd_string(linkmsg, line2);
  8732  01126C  0E98               	movlw	low _linkmsg
  8733  01126E  6E24               	movwf	lcd_string@lcdstring,c
  8734  011270  0EFF               	movlw	high _linkmsg
  8735  011272  6E25               	movwf	lcd_string@lcdstring+1,c
  8736  011274  0E8E               	movlw	low _line2
  8737  011276  6EF6               	movwf	tblptrl,c
  8738  011278                     	if	1	;There is more than 1 active tblptr byte
  8739  011278  0EFC               	movlw	high _line2
  8740  01127A  6EF7               	movwf	tblptrh,c
  8741  01127C                     	endif
  8742  01127C                     	if	1	;There are 3 active tblptr bytes
  8743  01127C  0E00               	movlw	low (_line2 shr (0+16))
  8744  01127E  6EF8               	movwf	tblptru,c
  8745  011280                     	endif
  8746  011280  0008               	tblrd		*
  8747  011282  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8748  011286  EC46  F087         	call	_lcd_string	;wreg free
  8749                           
  8750                           ;lcd.c: 64: lcd_dispadd(line3);
  8751  01128A  0E8D               	movlw	low _line3
  8752  01128C  6EF6               	movwf	tblptrl,c
  8753  01128E                     	if	1	;There is more than 1 active tblptr byte
  8754  01128E  0EFC               	movlw	high _line3
  8755  011290  6EF7               	movwf	tblptrh,c
  8756  011292                     	endif
  8757  011292                     	if	1	;There are 3 active tblptr bytes
  8758  011292  0E00               	movlw	low (_line3 shr (0+16))
  8759  011294  6EF8               	movwf	tblptru,c
  8760  011296                     	endif
  8761  011296  0008               	tblrd		*
  8762  011298  50F5               	movf	tablat,w,c
  8763  01129A  EC6A  F08F         	call	_lcd_dispadd
  8764                           
  8765                           ;lcd.c: 65: while(lchan < 0x09)
  8766  01129E  D010               	goto	l1466
  8767  0112A0                     l1467:
  8768                           
  8769                           ;lcd.c: 66: {
  8770                           ;lcd.c: 67: if(linkflgs & 0x01)
  8771  0112A0  A029               	btfss	displ_lflags@linkflgs,0,c
  8772  0112A2  D00A               	goto	l1468
  8773                           
  8774                           ;lcd.c: 68: {
  8775                           ;lcd.c: 69: lcd_writeC(lchan | 0x30);
  8776  0112A4  502B               	movf	displ_lflags@lchan,w,c
  8777  0112A6  0930               	iorlw	48
  8778  0112A8  EC7F  F08B         	call	_lcd_writeC
  8779                           
  8780                           ;lcd.c: 70: lcd_writeC(',');
  8781  0112AC  0E2C               	movlw	44
  8782  0112AE  EC7F  F08B         	call	_lcd_writeC
  8783                           
  8784                           ;lcd.c: 71: lcd_writeC(' ');
  8785  0112B2  0E20               	movlw	32
  8786  0112B4  EC7F  F08B         	call	_lcd_writeC
  8787  0112B8                     l1468:
  8788                           
  8789                           ;lcd.c: 72: }
  8790                           ;lcd.c: 73: lchan++;
  8791  0112B8  2A2B               	incf	displ_lflags@lchan,f,c
  8792                           
  8793                           ;lcd.c: 74: linkflgs = linkflgs >> 1;
  8794  0112BA  90D8               	bcf	status,0,c
  8795  0112BC  3029               	rrcf	displ_lflags@linkflgs,w,c
  8796  0112BE  6E29               	movwf	displ_lflags@linkflgs,c
  8797  0112C0                     l1466:
  8798  0112C0  0E08               	movlw	8
  8799  0112C2  642B               	cpfsgt	displ_lflags@lchan,c
  8800  0112C4  D7ED               	goto	l1467
  8801  0112C6  0012               	return	
  8802  0112C8                     __end_of_displ_lflags:
  8803                           	opt stack 0
  8804                           tblptru	equ	0xFF8
  8805                           tblptrh	equ	0xFF7
  8806                           tblptrl	equ	0xFF6
  8807                           tablat	equ	0xFF5
  8808                           prodh	equ	0xFF4
  8809                           prodl	equ	0xFF3
  8810                           postinc0	equ	0xFEE
  8811                           wreg	equ	0xFE8
  8812                           indf2	equ	0xFDF
  8813                           fsr2h	equ	0xFDA
  8814                           fsr2l	equ	0xFD9
  8815                           status	equ	0xFD8
  8816                           
  8817 ;; *************** function _Read_Service *****************
  8818 ;; Defined at:
  8819 ;;		line 247 in file "vend.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  senval          1   18[COMRAM] unsigned char 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      unsigned char 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8837 ;;Total ram usage:        1 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    2
  8840 ;; This function calls:
  8841 ;;		Nothing
  8842 ;; This function is called by:
  8843 ;;		_price_set
  8844 ;;		_Vend_settime
  8845 ;;		_Chan_link
  8846 ;;		_Link_chan
  8847 ;;		_Sens_off
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text43
  8852  011F84                     __ptext43:
  8853                           	opt stack 0
  8854  011F84                     _Read_Service:
  8855                           	opt stack 26
  8856                           
  8857                           ;vend.c: 249: DAC1CON1 = 0x00;
  8858                           
  8859                           ;incstack = 0
  8860  011F84  0E00               	movlw	0
  8861  011F86  010F               	movlb	15	; () banked
  8862  011F88  6F34               	movwf	52,b	;volatile
  8863                           
  8864                           ; BSR set to: 15
  8865                           ;vend.c: 250: uint8_t senval = CMOUT;
  8866  011F8A  CF3D F01D          	movff	3901,Read_Service@senval	;volatile
  8867                           
  8868                           ; BSR set to: 15
  8869                           ;vend.c: 251: DAC1CON1 = sensorval;
  8870  011F8E  C037  FF34         	movff	_sensorval,3892	;volatile
  8871                           
  8872                           ;vend.c: 252: return senval;
  8873  011F92  501D               	movf	Read_Service@senval,w,c
  8874  011F94  0012               	return	
  8875  011F96                     __end_of_Read_Service:
  8876                           	opt stack 0
  8877                           tblptru	equ	0xFF8
  8878                           tblptrh	equ	0xFF7
  8879                           tblptrl	equ	0xFF6
  8880                           tablat	equ	0xFF5
  8881                           prodh	equ	0xFF4
  8882                           prodl	equ	0xFF3
  8883                           postinc0	equ	0xFEE
  8884                           wreg	equ	0xFE8
  8885                           indf2	equ	0xFDF
  8886                           fsr2h	equ	0xFDA
  8887                           fsr2l	equ	0xFD9
  8888                           status	equ	0xFD8
  8889                           
  8890 ;; *************** function _Sensor_set *****************
  8891 ;; Defined at:
  8892 ;;		line 255 in file "vend.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;		None
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  dacpos          1   33[COMRAM] unsigned char 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;Total ram usage:        1 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; Hardware stack levels required when called:    9
  8913 ;; This function calls:
  8914 ;;		_butindb
  8915 ;;		_displ_sens
  8916 ;;		_lcd_string
  8917 ;; This function is called by:
  8918 ;;		_enter_service
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text44
  8923  01092E                     __ptext44:
  8924                           	opt stack 0
  8925  01092E                     _Sensor_set:
  8926                           	opt stack 20
  8927                           
  8928                           ;vend.c: 257: mdbflags.endis = 1;
  8929                           
  8930                           ; BSR set to: 15
  8931                           ;incstack = 0
  8932  01092E  8C3E               	bsf	_mdbflags,6,c
  8933                           
  8934                           ;vend.c: 259: lcd_string(sensmsg, line1);
  8935  010930  0EA4               	movlw	low _sensmsg
  8936  010932  6E24               	movwf	lcd_string@lcdstring,c
  8937  010934  0EFF               	movlw	high _sensmsg
  8938  010936  6E25               	movwf	lcd_string@lcdstring+1,c
  8939  010938  0E8F               	movlw	low _line1
  8940  01093A  6EF6               	movwf	tblptrl,c
  8941  01093C                     	if	1	;There is more than 1 active tblptr byte
  8942  01093C  0EFC               	movlw	high _line1
  8943  01093E  6EF7               	movwf	tblptrh,c
  8944  010940                     	endif
  8945  010940                     	if	1	;There are 3 active tblptr bytes
  8946  010940  0E00               	movlw	low (_line1 shr (0+16))
  8947  010942  6EF8               	movwf	tblptru,c
  8948  010944                     	endif
  8949  010944  0008               	tblrd		*
  8950  010946  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8951  01094A  EC46  F087         	call	_lcd_string	;wreg free
  8952                           
  8953                           ;vend.c: 261: senspos = bflag + 2;
  8954  01094E  5046               	movf	_bflag,w,c
  8955  010950  0F02               	addlw	2
  8956  010952  6E36               	movwf	_senspos,c	;volatile
  8957                           
  8958                           ;vend.c: 263: lcd_string(dacmsg, line2);
  8959  010954  0E72               	movlw	low _dacmsg
  8960  010956  6E24               	movwf	lcd_string@lcdstring,c
  8961  010958  0EFF               	movlw	high _dacmsg
  8962  01095A  6E25               	movwf	lcd_string@lcdstring+1,c
  8963  01095C  0E8E               	movlw	low _line2
  8964  01095E  6EF6               	movwf	tblptrl,c
  8965  010960                     	if	1	;There is more than 1 active tblptr byte
  8966  010960  0EFC               	movlw	high _line2
  8967  010962  6EF7               	movwf	tblptrh,c
  8968  010964                     	endif
  8969  010964                     	if	1	;There are 3 active tblptr bytes
  8970  010964  0E00               	movlw	low (_line2 shr (0+16))
  8971  010966  6EF8               	movwf	tblptru,c
  8972  010968                     	endif
  8973  010968  0008               	tblrd		*
  8974  01096A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8975  01096E  EC46  F087         	call	_lcd_string	;wreg free
  8976                           
  8977                           ;vend.c: 265: uint8_t dacpos = bflag + 2;
  8978  010972  5046               	movf	_bflag,w,c
  8979  010974  0F02               	addlw	2
  8980  010976  6E2C               	movwf	Sensor_set@dacpos,c
  8981                           
  8982                           ;vend.c: 266: displ_sens(senspos, dacpos);
  8983  010978  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  8984  01097C  5036               	movf	_senspos,w,c	;volatile
  8985  01097E  ECA4  F08A         	call	_displ_sens
  8986                           
  8987                           ;vend.c: 267: while(mdbflags.endis)
  8988  010982  D03D               	goto	l2084
  8989  010984                     
  8990                           ;vend.c: 268: {
  8991                           ;vend.c: 269: buttons = butindb();
  8992  010984  EC77  F08E         	call	_butindb	;wreg free
  8993  010988  6E39               	movwf	_buttons,c	;volatile
  8994                           
  8995                           ;vend.c: 270: switch(buttons)
  8996  01098A  D027               	goto	l2079
  8997  01098C  5037               	movf	_sensorval,w,c	;volatile
  8998  01098E  0B1F               	andlw	31
  8999  010990  010F               	movlb	15	; () banked
  9000  010992  6F34               	movwf	52,b	;volatile
  9001                           
  9002                           ; BSR set to: 15
  9003  010994  2A37               	incf	_sensorval,f,c	;volatile
  9004                           
  9005                           ; BSR set to: 15
  9006                           ;vend.c: 273: displ_sens(senspos, dacpos);
  9007  010996  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9008  01099A  5036               	movf	_senspos,w,c	;volatile
  9009  01099C  ECA4  F08A         	call	_displ_sens
  9010                           
  9011                           ;vend.c: 274: break;
  9012  0109A0  D026               	goto	l2081
  9013  0109A2  5037               	movf	_sensorval,w,c	;volatile
  9014  0109A4  0B1F               	andlw	31
  9015  0109A6  010F               	movlb	15	; () banked
  9016  0109A8  6F34               	movwf	52,b	;volatile
  9017                           
  9018                           ; BSR set to: 15
  9019  0109AA  0637               	decf	_sensorval,f,c	;volatile
  9020                           
  9021                           ; BSR set to: 15
  9022                           ;vend.c: 276: displ_sens(senspos, dacpos);
  9023  0109AC  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9024  0109B0  5036               	movf	_senspos,w,c	;volatile
  9025  0109B2  ECA4  F08A         	call	_displ_sens
  9026                           
  9027                           ;vend.c: 277: break;
  9028  0109B6  D01B               	goto	l2081
  9029  0109B8                     l2083:
  9030  0109B8  9C3E               	bcf	_mdbflags,6,c
  9031                           
  9032                           ;vend.c: 279: lcd_string(servmsg, line1);
  9033  0109BA  0E9E               	movlw	low _servmsg
  9034  0109BC  6E24               	movwf	lcd_string@lcdstring,c
  9035  0109BE  0EFC               	movlw	high _servmsg
  9036  0109C0  6E25               	movwf	lcd_string@lcdstring+1,c
  9037  0109C2  0E8F               	movlw	low _line1
  9038  0109C4  6EF6               	movwf	tblptrl,c
  9039  0109C6                     	if	1	;There is more than 1 active tblptr byte
  9040  0109C6  0EFC               	movlw	high _line1
  9041  0109C8  6EF7               	movwf	tblptrh,c
  9042  0109CA                     	endif
  9043  0109CA                     	if	1	;There are 3 active tblptr bytes
  9044  0109CA  0E00               	movlw	low (_line1 shr (0+16))
  9045  0109CC  6EF8               	movwf	tblptru,c
  9046  0109CE                     	endif
  9047  0109CE  0008               	tblrd		*
  9048  0109D0  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9049  0109D4  EC46  F087         	call	_lcd_string	;wreg free
  9050                           
  9051                           ;vend.c: 281: }
  9052                           
  9053                           ;vend.c: 280: break;
  9054  0109D8  D00A               	goto	l2081
  9055  0109DA                     l2079:
  9056  0109DA  5039               	movf	_buttons,w,c	;volatile
  9057                           
  9058                           ; Switch size 1, requested type "space"
  9059                           ; Number of cases is 3, Range of values is 1 to 128
  9060                           ; switch strategies available:
  9061                           ; Name         Instructions Cycles
  9062                           ; simple_byte           10     6 (average)
  9063                           ;	Chosen strategy is simple_byte
  9064  0109DC  0A01               	xorlw	1	; case 1
  9065  0109DE  B4D8               	btfsc	status,2,c
  9066  0109E0  D7D5               	goto	l2080
  9067  0109E2  0A03               	xorlw	3	; case 2
  9068  0109E4  B4D8               	btfsc	status,2,c
  9069  0109E6  D7DD               	goto	l2082
  9070  0109E8  0A82               	xorlw	130	; case 128
  9071  0109EA  B4D8               	btfsc	status,2,c
  9072  0109EC  D7E5               	goto	l2083
  9073  0109EE                     l2081:
  9074                           
  9075                           ;vend.c: 282: if(PIR4bits.TMR3IF)
  9076  0109EE  010E               	movlb	14	; () banked
  9077  0109F0  A5CE               	btfss	206,2,b	;volatile
  9078  0109F2  D005               	goto	l2084
  9079                           
  9080                           ; BSR set to: 14
  9081                           ;vend.c: 283: {
  9082                           ;vend.c: 284: displ_sens(senspos, dacpos);
  9083  0109F4  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9084  0109F8  5036               	movf	_senspos,w,c	;volatile
  9085  0109FA  ECA4  F08A         	call	_displ_sens
  9086  0109FE                     l2084:
  9087  0109FE  AC3E               	btfss	_mdbflags,6,c
  9088  010A00  0012               	return	
  9089  010A02  D7C0               	goto	l2078
  9090  010A04                     __end_of_Sensor_set:
  9091                           	opt stack 0
  9092                           tblptru	equ	0xFF8
  9093                           tblptrh	equ	0xFF7
  9094                           tblptrl	equ	0xFF6
  9095                           tablat	equ	0xFF5
  9096                           prodh	equ	0xFF4
  9097                           prodl	equ	0xFF3
  9098                           postinc0	equ	0xFEE
  9099                           wreg	equ	0xFE8
  9100                           indf2	equ	0xFDF
  9101                           fsr2h	equ	0xFDA
  9102                           fsr2l	equ	0xFD9
  9103                           status	equ	0xFD8
  9104                           
  9105 ;; *************** function _displ_sens *****************
  9106 ;; Defined at:
  9107 ;;		line 40 in file "lcd.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  smsgpos         1    wreg     unsigned char 
  9110 ;;  dmsgpos         1   31[COMRAM] unsigned char 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  smsgpos         1   32[COMRAM] unsigned char 
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9122 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;Total ram usage:        2 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; Hardware stack levels required when called:    8
  9129 ;; This function calls:
  9130 ;;		_CMP1_GetOutputStatus
  9131 ;;		_DATAEE_WriteByte
  9132 ;;		_displ_hex
  9133 ;;		_lcd_dispadd
  9134 ;;		_lcd_string
  9135 ;; This function is called by:
  9136 ;;		_Sensor_set
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text45
  9141  011548                     __ptext45:
  9142                           	opt stack 0
  9143  011548                     _displ_sens:
  9144                           	opt stack 20
  9145                           
  9146                           ;incstack = 0
  9147                           ;displ_sens@smsgpos stored from wreg
  9148  011548  6E2B               	movwf	displ_sens@smsgpos,c
  9149                           
  9150                           ;lcd.c: 42: if(CMP1_GetOutputStatus())
  9151  01154A  ECD9  F08F         	call	_CMP1_GetOutputStatus	;wreg free
  9152  01154E  0900               	iorlw	0
  9153  011550  B4D8               	btfsc	status,2,c
  9154  011552  D009               	goto	l1461
  9155                           
  9156                           ;lcd.c: 43: {
  9157                           ;lcd.c: 44: lcd_string(offmsg, smsgpos);
  9158  011554  0EF6               	movlw	low _offmsg
  9159  011556  6E24               	movwf	lcd_string@lcdstring,c
  9160  011558  0EFF               	movlw	high _offmsg
  9161  01155A  6E25               	movwf	lcd_string@lcdstring+1,c
  9162  01155C  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
  9163  011560  EC46  F087         	call	_lcd_string	;wreg free
  9164                           
  9165                           ;lcd.c: 45: }
  9166  011564  D008               	goto	l1462
  9167  011566                     l1461:
  9168                           
  9169                           ;lcd.c: 46: else
  9170                           ;lcd.c: 47: {
  9171                           ;lcd.c: 48: lcd_string(onmsg, smsgpos);
  9172  011566  0EFA               	movlw	low _onmsg
  9173  011568  6E24               	movwf	lcd_string@lcdstring,c
  9174  01156A  0EFF               	movlw	high _onmsg
  9175  01156C  6E25               	movwf	lcd_string@lcdstring+1,c
  9176  01156E  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
  9177  011572  EC46  F087         	call	_lcd_string	;wreg free
  9178  011576                     l1462:
  9179                           
  9180                           ;lcd.c: 49: }
  9181                           ;lcd.c: 50: DATAEE_WriteByte(sensval, sensorval);
  9182  011576  0E53               	movlw	low _sensval
  9183  011578  6EF6               	movwf	tblptrl,c
  9184  01157A                     	if	1	;There is more than 1 active tblptr byte
  9185  01157A  0EFC               	movlw	high _sensval
  9186  01157C  6EF7               	movwf	tblptrh,c
  9187  01157E                     	endif
  9188  01157E                     	if	1	;There are 3 active tblptr bytes
  9189  01157E  0E00               	movlw	low (_sensval shr (0+16))
  9190  011580  6EF8               	movwf	tblptru,c
  9191  011582                     	endif
  9192  011582  0009               	tblrd		*+
  9193  011584  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9194  011588  000A               	tblrd		*-
  9195  01158A  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9196  01158E  C037  F01F         	movff	_sensorval,DATAEE_WriteByte@bData	;volatile
  9197  011592  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  9198                           
  9199                           ;lcd.c: 51: lcd_string(clrmsg, dmsgpos);
  9200  011596  0EAF               	movlw	low _clrmsg
  9201  011598  6E24               	movwf	lcd_string@lcdstring,c
  9202  01159A  0EFF               	movlw	high _clrmsg
  9203  01159C  6E25               	movwf	lcd_string@lcdstring+1,c
  9204  01159E  C02A  F026         	movff	displ_sens@dmsgpos,lcd_string@lcdline
  9205  0115A2  EC46  F087         	call	_lcd_string	;wreg free
  9206                           
  9207                           ;lcd.c: 52: lcd_dispadd(dmsgpos);
  9208  0115A6  502A               	movf	displ_sens@dmsgpos,w,c
  9209  0115A8  EC6A  F08F         	call	_lcd_dispadd
  9210                           
  9211                           ;lcd.c: 53: displ_hex((uint8_t) DAC1CON1);
  9212  0115AC  010F               	movlb	15	; () banked
  9213  0115AE  5134               	movf	52,w,b	;volatile
  9214  0115B0  6E27               	movwf	displ_hex@hexnum,c
  9215  0115B2  6A28               	clrf	displ_hex@hexnum+1,c
  9216  0115B4  6A29               	clrf	displ_hex@hexnum+2,c
  9217  0115B6  ECEB  F086         	call	_displ_hex	;wreg free
  9218  0115BA  0012               	return		;funcret
  9219  0115BC                     __end_of_displ_sens:
  9220                           	opt stack 0
  9221                           tblptru	equ	0xFF8
  9222                           tblptrh	equ	0xFF7
  9223                           tblptrl	equ	0xFF6
  9224                           tablat	equ	0xFF5
  9225                           prodh	equ	0xFF4
  9226                           prodl	equ	0xFF3
  9227                           postinc0	equ	0xFEE
  9228                           wreg	equ	0xFE8
  9229                           indf2	equ	0xFDF
  9230                           fsr2h	equ	0xFDA
  9231                           fsr2l	equ	0xFD9
  9232                           status	equ	0xFD8
  9233                           
  9234 ;; *************** function _CMP1_GetOutputStatus *****************
  9235 ;; Defined at:
  9236 ;;		line 74 in file "mcc_generated_files/cmp1.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      unsigned char 
  9243 ;; Registers used:
  9244 ;;		wreg
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;Total ram usage:        0 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    2
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_main
  9261 ;;		_displ_sens
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text46
  9266  011FB2                     __ptext46:
  9267                           	opt stack 0
  9268  011FB2                     _CMP1_GetOutputStatus:
  9269                           	opt stack 25
  9270                           
  9271                           ;cmp1.c: 76: return (CMOUTbits.MC1OUT);
  9272                           
  9273                           ;incstack = 0
  9274  011FB2  010F               	movlb	15	; () banked
  9275  011FB4  A13D               	btfss	61,0,b	;volatile
  9276  011FB6  D002               	goto	u3030
  9277  011FB8  0E01               	movlw	1
  9278  011FBA  0012               	return	
  9279  011FBC                     u3030:
  9280  011FBC  0E00               	movlw	0
  9281  011FBE  0012               	return	
  9282  011FC0                     __end_of_CMP1_GetOutputStatus:
  9283                           	opt stack 0
  9284                           tblptru	equ	0xFF8
  9285                           tblptrh	equ	0xFF7
  9286                           tblptrl	equ	0xFF6
  9287                           tablat	equ	0xFF5
  9288                           prodh	equ	0xFF4
  9289                           prodl	equ	0xFF3
  9290                           postinc0	equ	0xFEE
  9291                           wreg	equ	0xFE8
  9292                           indf2	equ	0xFDF
  9293                           fsr2h	equ	0xFDA
  9294                           fsr2l	equ	0xFD9
  9295                           status	equ	0xFD8
  9296                           
  9297 ;; *************** function _Hopper_coin *****************
  9298 ;; Defined at:
  9299 ;;		line 180 in file "vend.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;		None
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;  coinval         1   33[COMRAM] unsigned char 
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      void 
  9306 ;; Registers used:
  9307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;Total ram usage:        1 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; Hardware stack levels required when called:    9
  9320 ;; This function calls:
  9321 ;;		_DATAEE_ReadByte
  9322 ;;		_Update_Hopcoin
  9323 ;;		_butindb
  9324 ;;		_displ_hex
  9325 ;;		_lcd_dispadd
  9326 ;;		_lcd_string
  9327 ;; This function is called by:
  9328 ;;		_enter_service
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text47
  9333  010A04                     __ptext47:
  9334                           	opt stack 0
  9335  010A04                     _Hopper_coin:
  9336                           	opt stack 20
  9337                           
  9338                           ;vend.c: 182: lcd_string(hoppcoin, line1);
  9339                           
  9340                           ; BSR set to: 15
  9341                           ;incstack = 0
  9342  010A04  0EF3               	movlw	low _hoppcoin
  9343  010A06  6E24               	movwf	lcd_string@lcdstring,c
  9344  010A08  0EFD               	movlw	high _hoppcoin
  9345  010A0A  6E25               	movwf	lcd_string@lcdstring+1,c
  9346  010A0C  0E8F               	movlw	low _line1
  9347  010A0E  6EF6               	movwf	tblptrl,c
  9348  010A10                     	if	1	;There is more than 1 active tblptr byte
  9349  010A10  0EFC               	movlw	high _line1
  9350  010A12  6EF7               	movwf	tblptrh,c
  9351  010A14                     	endif
  9352  010A14                     	if	1	;There are 3 active tblptr bytes
  9353  010A14  0E00               	movlw	low (_line1 shr (0+16))
  9354  010A16  6EF8               	movwf	tblptru,c
  9355  010A18                     	endif
  9356  010A18  0008               	tblrd		*
  9357  010A1A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9358  010A1E  EC46  F087         	call	_lcd_string	;wreg free
  9359                           
  9360                           ;vend.c: 183: mdbflags.endis = 1;
  9361  010A22  8C3E               	bsf	_mdbflags,6,c
  9362                           
  9363                           ;vend.c: 184: senspos = bflag + 2;
  9364  010A24  5046               	movf	_bflag,w,c
  9365  010A26  0F02               	addlw	2
  9366  010A28  6E36               	movwf	_senspos,c	;volatile
  9367                           
  9368                           ;vend.c: 185: uint8_t coinval = DATAEE_ReadByte(hopcoin);
  9369  010A2A  0E4F               	movlw	low _hopcoin
  9370  010A2C  6EF6               	movwf	tblptrl,c
  9371  010A2E                     	if	1	;There is more than 1 active tblptr byte
  9372  010A2E  0EFC               	movlw	high _hopcoin
  9373  010A30  6EF7               	movwf	tblptrh,c
  9374  010A32                     	endif
  9375  010A32                     	if	1	;There are 3 active tblptr bytes
  9376  010A32  0E00               	movlw	low (_hopcoin shr (0+16))
  9377  010A34  6EF8               	movwf	tblptru,c
  9378  010A36                     	endif
  9379  010A36  0009               	tblrd		*+
  9380  010A38  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  9381  010A3C  000A               	tblrd		*-
  9382  010A3E  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  9383  010A42  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  9384  010A46  6E2C               	movwf	Hopper_coin@coinval,c
  9385                           
  9386                           ;vend.c: 186: lcd_dispadd(senspos);
  9387  010A48  5036               	movf	_senspos,w,c	;volatile
  9388  010A4A  EC6A  F08F         	call	_lcd_dispadd
  9389                           
  9390                           ;vend.c: 187: displ_hex((uint24_t)coinval);
  9391  010A4E  502C               	movf	Hopper_coin@coinval,w,c
  9392  010A50  6E27               	movwf	displ_hex@hexnum,c
  9393  010A52  6A28               	clrf	displ_hex@hexnum+1,c
  9394  010A54  6A29               	clrf	displ_hex@hexnum+2,c
  9395  010A56  ECEB  F086         	call	_displ_hex	;wreg free
  9396                           
  9397                           ;vend.c: 188: while(mdbflags.endis)
  9398  010A5A  D03C               	goto	l2048
  9399  010A5C                     
  9400                           ;vend.c: 189: {
  9401                           ;vend.c: 190: buttons = butindb();
  9402  010A5C  EC77  F08E         	call	_butindb	;wreg free
  9403  010A60  6E39               	movwf	_buttons,c	;volatile
  9404                           
  9405                           ;vend.c: 191: switch(buttons)
  9406  010A62  D01F               	goto	l2050
  9407  010A64  0E01               	movlw	1
  9408  010A66  6E2A               	movwf	Update_Hopcoin@direction,c
  9409  010A68  502C               	movf	Hopper_coin@coinval,w,c
  9410  010A6A  ECA7  F089         	call	_Update_Hopcoin
  9411                           
  9412                           ;vend.c: 194: break;
  9413  010A6E  D023               	goto	l2052
  9414  010A70  0E02               	movlw	2
  9415  010A72  6E2A               	movwf	Update_Hopcoin@direction,c
  9416  010A74  502C               	movf	Hopper_coin@coinval,w,c
  9417  010A76  ECA7  F089         	call	_Update_Hopcoin
  9418                           
  9419                           ;vend.c: 196: break;
  9420  010A7A  D01D               	goto	l2052
  9421  010A7C                     l2054:
  9422  010A7C  9C3E               	bcf	_mdbflags,6,c
  9423                           
  9424                           ;vend.c: 198: lcd_string(servmsg, line1);
  9425  010A7E  0E9E               	movlw	low _servmsg
  9426  010A80  6E24               	movwf	lcd_string@lcdstring,c
  9427  010A82  0EFC               	movlw	high _servmsg
  9428  010A84  6E25               	movwf	lcd_string@lcdstring+1,c
  9429  010A86  0E8F               	movlw	low _line1
  9430  010A88  6EF6               	movwf	tblptrl,c
  9431  010A8A                     	if	1	;There is more than 1 active tblptr byte
  9432  010A8A  0EFC               	movlw	high _line1
  9433  010A8C  6EF7               	movwf	tblptrh,c
  9434  010A8E                     	endif
  9435  010A8E                     	if	1	;There are 3 active tblptr bytes
  9436  010A8E  0E00               	movlw	low (_line1 shr (0+16))
  9437  010A90  6EF8               	movwf	tblptru,c
  9438  010A92                     	endif
  9439  010A92  0008               	tblrd		*
  9440  010A94  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9441  010A98  EC46  F087         	call	_lcd_string	;wreg free
  9442                           
  9443                           ;vend.c: 199: buttons = 0x00;
  9444  010A9C  0E00               	movlw	0
  9445  010A9E  6E39               	movwf	_buttons,c	;volatile
  9446                           
  9447                           ;vend.c: 201: }
  9448                           
  9449                           ;vend.c: 200: break;
  9450  010AA0  D00A               	goto	l2052
  9451  010AA2                     l2050:
  9452  010AA2  5039               	movf	_buttons,w,c	;volatile
  9453                           
  9454                           ; Switch size 1, requested type "space"
  9455                           ; Number of cases is 3, Range of values is 1 to 128
  9456                           ; switch strategies available:
  9457                           ; Name         Instructions Cycles
  9458                           ; simple_byte           10     6 (average)
  9459                           ;	Chosen strategy is simple_byte
  9460  010AA4  0A01               	xorlw	1	; case 1
  9461  010AA6  B4D8               	btfsc	status,2,c
  9462  010AA8  D7DD               	goto	l2051
  9463  010AAA  0A03               	xorlw	3	; case 2
  9464  010AAC  B4D8               	btfsc	status,2,c
  9465  010AAE  D7E0               	goto	l2053
  9466  010AB0  0A82               	xorlw	130	; case 128
  9467  010AB2  B4D8               	btfsc	status,2,c
  9468  010AB4  D7E3               	goto	l2054
  9469  010AB6                     l2052:
  9470                           
  9471                           ;vend.c: 202: coinval = DATAEE_ReadByte(hopcoin);
  9472  010AB6  0E4F               	movlw	low _hopcoin
  9473  010AB8  6EF6               	movwf	tblptrl,c
  9474  010ABA                     	if	1	;There is more than 1 active tblptr byte
  9475  010ABA  0EFC               	movlw	high _hopcoin
  9476  010ABC  6EF7               	movwf	tblptrh,c
  9477  010ABE                     	endif
  9478  010ABE                     	if	1	;There are 3 active tblptr bytes
  9479  010ABE  0E00               	movlw	low (_hopcoin shr (0+16))
  9480  010AC0  6EF8               	movwf	tblptru,c
  9481  010AC2                     	endif
  9482  010AC2  0009               	tblrd		*+
  9483  010AC4  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  9484  010AC8  000A               	tblrd		*-
  9485  010ACA  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  9486  010ACE  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
  9487  010AD2  6E2C               	movwf	Hopper_coin@coinval,c
  9488  010AD4                     l2048:
  9489  010AD4  AC3E               	btfss	_mdbflags,6,c
  9490  010AD6  0012               	return	
  9491  010AD8  D7C1               	goto	l2049
  9492  010ADA                     __end_of_Hopper_coin:
  9493                           	opt stack 0
  9494                           tblptru	equ	0xFF8
  9495                           tblptrh	equ	0xFF7
  9496                           tblptrl	equ	0xFF6
  9497                           tablat	equ	0xFF5
  9498                           prodh	equ	0xFF4
  9499                           prodl	equ	0xFF3
  9500                           postinc0	equ	0xFEE
  9501                           wreg	equ	0xFE8
  9502                           indf2	equ	0xFDF
  9503                           fsr2h	equ	0xFDA
  9504                           fsr2l	equ	0xFD9
  9505                           status	equ	0xFD8
  9506                           
  9507 ;; *************** function _butindb *****************
  9508 ;; Defined at:
  9509 ;;		line 131 in file "vend.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;  butt            1   23[COMRAM] unsigned char 
  9514 ;;  butval          1   22[COMRAM] unsigned char 
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      unsigned char 
  9517 ;; Registers used:
  9518 ;;		wreg, status,2, status,0, cstack
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;Total ram usage:        4 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; Hardware stack levels required when called:    3
  9531 ;; This function calls:
  9532 ;;		_butin
  9533 ;; This function is called by:
  9534 ;;		_enter_service
  9535 ;;		_Hopper_coin
  9536 ;;		_Sensor_set
  9537 ;;		_price_set
  9538 ;;		_set_price
  9539 ;;		_Vend_setup
  9540 ;;		_Vend_settime
  9541 ;;		_Vend_timeset
  9542 ;;		_Chan_link
  9543 ;;		_Link_chan
  9544 ;;		_Sens_off
  9545 ;;		_off_sens
  9546 ;;		_set_notes
  9547 ;;		_enable_notes
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text48
  9552  011CEE                     __ptext48:
  9553                           	opt stack 0
  9554  011CEE                     _butindb:
  9555                           	opt stack 24
  9556                           
  9557                           ;vend.c: 133: uint8_t butt = butin();
  9558                           
  9559                           ;incstack = 0
  9560  011CEE  ECDE  F08C         	call	_butin	;wreg free
  9561  011CF2  6E22               	movwf	butindb@butt,c
  9562                           
  9563                           ;vend.c: 134: uint8_t butval = butt;
  9564  011CF4  C022  F021         	movff	butindb@butt,butindb@butval
  9565                           
  9566                           ;vend.c: 135: while(butval != 0x00)
  9567  011CF8  D003               	goto	l2033
  9568  011CFA                     
  9569                           ;vend.c: 136: {
  9570                           ;vend.c: 137: butval = butin();
  9571  011CFA  ECDE  F08C         	call	_butin	;wreg free
  9572  011CFE  6E21               	movwf	butindb@butval,c
  9573  011D00                     l2033:
  9574  011D00  5021               	movf	butindb@butval,w,c
  9575  011D02  A4D8               	btfss	status,2,c
  9576  011D04  D7FA               	goto	l2034
  9577                           
  9578                           ;vend.c: 138: }
  9579                           ;vend.c: 139: _delay((unsigned long)((500)*(12000000/4000.0)));
  9580  011D06  0E08               	movlw	8
  9581  011D08  6E20               	movwf	(??_butindb+1)& (0+255),c
  9582  011D0A  0E9D               	movlw	157
  9583  011D0C  6E1F               	movwf	??_butindb& (0+255),c
  9584  011D0E  0E06               	movlw	6
  9585  011D10                     u4087:
  9586  011D10  2EE8               	decfsz	wreg,f,c
  9587  011D12  D7FE               	bra	u4087
  9588  011D14  2E1F               	decfsz	??_butindb& (0+255),f,c
  9589  011D16  D7FC               	bra	u4087
  9590  011D18  2E20               	decfsz	(??_butindb+1)& (0+255),f,c
  9591  011D1A  D7FA               	bra	u4087
  9592                           
  9593                           ;vend.c: 141: return butt;
  9594  011D1C  5022               	movf	butindb@butt,w,c
  9595  011D1E  0012               	return	
  9596  011D20                     __end_of_butindb:
  9597                           	opt stack 0
  9598                           tblptru	equ	0xFF8
  9599                           tblptrh	equ	0xFF7
  9600                           tblptrl	equ	0xFF6
  9601                           tablat	equ	0xFF5
  9602                           prodh	equ	0xFF4
  9603                           prodl	equ	0xFF3
  9604                           postinc0	equ	0xFEE
  9605                           wreg	equ	0xFE8
  9606                           indf2	equ	0xFDF
  9607                           fsr2h	equ	0xFDA
  9608                           fsr2l	equ	0xFD9
  9609                           status	equ	0xFD8
  9610                           
  9611 ;; *************** function _butin *****************
  9612 ;; Defined at:
  9613 ;;		line 144 in file "vend.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;		None
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  butons          1   19[COMRAM] unsigned char 
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      unsigned char 
  9620 ;; Registers used:
  9621 ;;		wreg, status,2, status,0
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9631 ;;Total ram usage:        2 bytes
  9632 ;; Hardware stack levels used:    1
  9633 ;; Hardware stack levels required when called:    2
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_main
  9638 ;;		_butindb
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text49
  9643  0119BC                     __ptext49:
  9644                           	opt stack 0
  9645  0119BC                     _butin:
  9646                           	opt stack 24
  9647                           
  9648                           ;vend.c: 146: LATA7 = 0;
  9649                           
  9650                           ;incstack = 0
  9651  0119BC  9E83               	bcf	3971,7,c	;volatile
  9652                           
  9653                           ;vend.c: 147: LATA6 = 1;
  9654  0119BE  8C83               	bsf	3971,6,c	;volatile
  9655                           
  9656                           ;vend.c: 148: _delay((unsigned long)((15)*(12000000/4000.0)));
  9657  0119C0  0E3B               	movlw	59
  9658  0119C2  6E1D               	movwf	??_butin& (0+255),c
  9659  0119C4  0E70               	movlw	112
  9660  0119C6                     u4097:
  9661  0119C6  2EE8               	decfsz	wreg,f,c
  9662  0119C8  D7FE               	bra	u4097
  9663  0119CA  2E1D               	decfsz	??_butin& (0+255),f,c
  9664  0119CC  D7FC               	bra	u4097
  9665                           
  9666                           ;vend.c: 150: uint8_t butons = ((PORTA >> 1) & 0x0F) << 4;
  9667  0119CE  CF8D F01D          	movff	3981,??_butin	;volatile
  9668  0119D2  90D8               	bcf	status,0,c
  9669  0119D4  321D               	rrcf	??_butin,f,c
  9670  0119D6  0E0F               	movlw	15
  9671  0119D8  161D               	andwf	??_butin,f,c
  9672  0119DA  381D               	swapf	??_butin,w,c
  9673  0119DC  0BF0               	andlw	240
  9674  0119DE  6E1E               	movwf	butin@butons,c
  9675                           
  9676                           ;vend.c: 151: LATA7 = 1;
  9677  0119E0  8E83               	bsf	3971,7,c	;volatile
  9678                           
  9679                           ;vend.c: 152: LATA6 = 0;
  9680  0119E2  9C83               	bcf	3971,6,c	;volatile
  9681                           
  9682                           ;vend.c: 153: _delay((unsigned long)((15)*(12000000/4000.0)));
  9683  0119E4  0E3B               	movlw	59
  9684  0119E6  6E1D               	movwf	??_butin& (0+255),c
  9685  0119E8  0E70               	movlw	112
  9686  0119EA                     u4107:
  9687  0119EA  2EE8               	decfsz	wreg,f,c
  9688  0119EC  D7FE               	bra	u4107
  9689  0119EE  2E1D               	decfsz	??_butin& (0+255),f,c
  9690  0119F0  D7FC               	bra	u4107
  9691                           
  9692                           ;vend.c: 155: butons = ((PORTA >> 1) & 0x0F) | butons;
  9693  0119F2  90D8               	bcf	status,0,c
  9694  0119F4  308D               	rrcf	3981,w,c	;volatile
  9695  0119F6  0B0F               	andlw	15
  9696  0119F8  101E               	iorwf	butin@butons,w,c
  9697  0119FA  6E1E               	movwf	butin@butons,c
  9698                           
  9699                           ;vend.c: 156: LATA7 = 1;
  9700  0119FC  8E83               	bsf	3971,7,c	;volatile
  9701                           
  9702                           ;vend.c: 157: LATA6 = 1;
  9703  0119FE  8C83               	bsf	3971,6,c	;volatile
  9704                           
  9705                           ;vend.c: 158: return ~butons;
  9706  011A00  501E               	movf	butin@butons,w,c
  9707  011A02  0AFF               	xorlw	255
  9708  011A04  0012               	return	
  9709  011A06                     __end_of_butin:
  9710                           	opt stack 0
  9711                           tblptru	equ	0xFF8
  9712                           tblptrh	equ	0xFF7
  9713                           tblptrl	equ	0xFF6
  9714                           tablat	equ	0xFF5
  9715                           prodh	equ	0xFF4
  9716                           prodl	equ	0xFF3
  9717                           postinc0	equ	0xFEE
  9718                           wreg	equ	0xFE8
  9719                           indf2	equ	0xFDF
  9720                           fsr2h	equ	0xFDA
  9721                           fsr2l	equ	0xFD9
  9722                           status	equ	0xFD8
  9723                           
  9724 ;; *************** function _Update_Hopcoin *****************
  9725 ;; Defined at:
  9726 ;;		line 206 in file "vend.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  newval          1    wreg     unsigned char 
  9729 ;;  direction       1   31[COMRAM] unsigned char 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;  newval          1   32[COMRAM] unsigned char 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9741 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9745 ;;Total ram usage:        2 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    8
  9748 ;; This function calls:
  9749 ;;		_DATAEE_WriteByte
  9750 ;;		_displ_hex
  9751 ;;		_lcd_dispadd
  9752 ;;		_lcd_string
  9753 ;; This function is called by:
  9754 ;;		_Hopper_coin
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           	psect	text50
  9759  01134E                     __ptext50:
  9760                           	opt stack 0
  9761  01134E                     _Update_Hopcoin:
  9762                           	opt stack 20
  9763                           
  9764                           ;incstack = 0
  9765                           ;Update_Hopcoin@newval stored from wreg
  9766  01134E  6E2B               	movwf	Update_Hopcoin@newval,c
  9767                           
  9768                           ;vend.c: 209: switch(newval)
  9769  011350  D014               	goto	l2059
  9770  011352  042A               	decf	Update_Hopcoin@direction,w,c
  9771  011354  A4D8               	btfss	status,2,c
  9772  011356  D005               	goto	u3280
  9773                           
  9774                           ;vend.c: 212: {
  9775                           ;vend.c: 213: newval++;
  9776  011358  2A2B               	incf	Update_Hopcoin@newval,f,c
  9777                           
  9778                           ;vend.c: 214: }
  9779  01135A  D01A               	goto	l2063
  9780  01135C  042A               	decf	Update_Hopcoin@direction,w,c
  9781  01135E  A4D8               	btfss	status,2,c
  9782  011360  D002               	goto	l2065
  9783  011362                     u3280:
  9784                           
  9785                           ;vend.c: 221: {
  9786                           ;vend.c: 222: newval = 0x05;
  9787  011362  0E05               	movlw	5
  9788  011364  D006               	goto	L15
  9789  011366                     l2065:
  9790                           
  9791                           ;vend.c: 224: else
  9792                           ;vend.c: 225: {
  9793                           ;vend.c: 226: newval--;
  9794  011366  062B               	decf	Update_Hopcoin@newval,f,c
  9795                           
  9796                           ;vend.c: 227: }
  9797                           ;vend.c: 228: break;
  9798  011368  D013               	goto	l2063
  9799  01136A  042A               	decf	Update_Hopcoin@direction,w,c
  9800  01136C  A4D8               	btfss	status,2,c
  9801  01136E  D003               	goto	l2070
  9802                           
  9803                           ;vend.c: 230: {
  9804                           ;vend.c: 232: newval = 0x01;
  9805  011370  0E01               	movlw	1
  9806  011372                     L15:
  9807  011372  6E2B               	movwf	Update_Hopcoin@newval,c
  9808                           
  9809                           ;vend.c: 237: }
  9810                           ;vend.c: 238: break;
  9811  011374  D00D               	goto	l2063
  9812  011376                     l2070:
  9813  011376  0E02               	movlw	2
  9814  011378  D7FC               	goto	L15
  9815  01137A                     l2059:
  9816  01137A  502B               	movf	Update_Hopcoin@newval,w,c
  9817                           
  9818                           ; Switch size 1, requested type "space"
  9819                           ; Number of cases is 3, Range of values is 1 to 5
  9820                           ; switch strategies available:
  9821                           ; Name         Instructions Cycles
  9822                           ; simple_byte           10     6 (average)
  9823                           ;	Chosen strategy is simple_byte
  9824  01137C  0A01               	xorlw	1	; case 1
  9825  01137E  B4D8               	btfsc	status,2,c
  9826  011380  D7E8               	goto	l2060
  9827  011382  0A03               	xorlw	3	; case 2
  9828  011384  B4D8               	btfsc	status,2,c
  9829  011386  D7EA               	goto	l2064
  9830  011388  0A07               	xorlw	7	; case 5
  9831  01138A  B4D8               	btfsc	status,2,c
  9832  01138C  D7EE               	goto	l2067
  9833  01138E  D7F3               	goto	l2070
  9834  011390                     l2063:
  9835                           
  9836                           ;vend.c: 241: lcd_string(clrmsg, senspos);
  9837  011390  0EAF               	movlw	low _clrmsg
  9838  011392  6E24               	movwf	lcd_string@lcdstring,c
  9839  011394  0EFF               	movlw	high _clrmsg
  9840  011396  6E25               	movwf	lcd_string@lcdstring+1,c
  9841  011398  C036  F026         	movff	_senspos,lcd_string@lcdline	;volatile
  9842  01139C  EC46  F087         	call	_lcd_string	;wreg free
  9843                           
  9844                           ;vend.c: 242: DATAEE_WriteByte(hopcoin, newval);
  9845  0113A0  0E4F               	movlw	low _hopcoin
  9846  0113A2  6EF6               	movwf	tblptrl,c
  9847  0113A4                     	if	1	;There is more than 1 active tblptr byte
  9848  0113A4  0EFC               	movlw	high _hopcoin
  9849  0113A6  6EF7               	movwf	tblptrh,c
  9850  0113A8                     	endif
  9851  0113A8                     	if	1	;There are 3 active tblptr bytes
  9852  0113A8  0E00               	movlw	low (_hopcoin shr (0+16))
  9853  0113AA  6EF8               	movwf	tblptru,c
  9854  0113AC                     	endif
  9855  0113AC  0009               	tblrd		*+
  9856  0113AE  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9857  0113B2  000A               	tblrd		*-
  9858  0113B4  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9859  0113B8  C02B  F01F         	movff	Update_Hopcoin@newval,DATAEE_WriteByte@bData
  9860  0113BC  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  9861                           
  9862                           ;vend.c: 243: lcd_dispadd(senspos);
  9863  0113C0  5036               	movf	_senspos,w,c	;volatile
  9864  0113C2  EC6A  F08F         	call	_lcd_dispadd
  9865                           
  9866                           ;vend.c: 244: displ_hex((uint24_t)newval);
  9867  0113C6  502B               	movf	Update_Hopcoin@newval,w,c
  9868  0113C8  6E27               	movwf	displ_hex@hexnum,c
  9869  0113CA  6A28               	clrf	displ_hex@hexnum+1,c
  9870  0113CC  6A29               	clrf	displ_hex@hexnum+2,c
  9871  0113CE  ECEB  F086         	call	_displ_hex	;wreg free
  9872  0113D2  0012               	return		;funcret
  9873  0113D4                     __end_of_Update_Hopcoin:
  9874                           	opt stack 0
  9875                           tblptru	equ	0xFF8
  9876                           tblptrh	equ	0xFF7
  9877                           tblptrl	equ	0xFF6
  9878                           tablat	equ	0xFF5
  9879                           prodh	equ	0xFF4
  9880                           prodl	equ	0xFF3
  9881                           postinc0	equ	0xFEE
  9882                           wreg	equ	0xFE8
  9883                           indf2	equ	0xFDF
  9884                           fsr2h	equ	0xFDA
  9885                           fsr2l	equ	0xFD9
  9886                           status	equ	0xFD8
  9887                           
  9888 ;; *************** function _Clear_cred *****************
  9889 ;; Defined at:
  9890 ;;		line 289 in file "vend.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9908 ;;Total ram usage:        2 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    8
  9911 ;; This function calls:
  9912 ;;		_DATAEE_WriteByte
  9913 ;;		_lcd_string
  9914 ;; This function is called by:
  9915 ;;		_enter_service
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           	psect	text51
  9920  011820                     __ptext51:
  9921                           	opt stack 0
  9922  011820                     _Clear_cred:
  9923                           	opt stack 21
  9924                           
  9925                           ;vend.c: 291: DATAEE_WriteByte(credmem, 0x00);
  9926                           
  9927                           ;incstack = 0
  9928  011820  0E61               	movlw	low _credmem
  9929  011822  6EF6               	movwf	tblptrl,c
  9930  011824                     	if	1	;There is more than 1 active tblptr byte
  9931  011824  0EFC               	movlw	high _credmem
  9932  011826  6EF7               	movwf	tblptrh,c
  9933  011828                     	endif
  9934  011828                     	if	1	;There are 3 active tblptr bytes
  9935  011828  0E00               	movlw	low (_credmem shr (0+16))
  9936  01182A  6EF8               	movwf	tblptru,c
  9937  01182C                     	endif
  9938  01182C  0009               	tblrd		*+
  9939  01182E  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9940  011832  000A               	tblrd		*-
  9941  011834  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9942  011838  0E00               	movlw	0
  9943  01183A  6E1F               	movwf	DATAEE_WriteByte@bData,c
  9944  01183C  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
  9945                           
  9946                           ;vend.c: 292: lcd_string(creditclr, line1);
  9947  011840  0E62               	movlw	low _creditclr
  9948  011842  6E24               	movwf	lcd_string@lcdstring,c
  9949  011844  0EFF               	movlw	high _creditclr
  9950  011846  6E25               	movwf	lcd_string@lcdstring+1,c
  9951  011848  0E8F               	movlw	low _line1
  9952  01184A  6EF6               	movwf	tblptrl,c
  9953  01184C                     	if	1	;There is more than 1 active tblptr byte
  9954  01184C  0EFC               	movlw	high _line1
  9955  01184E  6EF7               	movwf	tblptrh,c
  9956  011850                     	endif
  9957  011850                     	if	1	;There are 3 active tblptr bytes
  9958  011850  0E00               	movlw	low (_line1 shr (0+16))
  9959  011852  6EF8               	movwf	tblptru,c
  9960  011854                     	endif
  9961  011854  0008               	tblrd		*
  9962  011856  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9963  01185A  EC46  F087         	call	_lcd_string	;wreg free
  9964                           
  9965                           ;vend.c: 293: _delay((unsigned long)((1000)*(12000000/4000.0)));
  9966  01185E  0E10               	movlw	16
  9967  011860  6E2A               	movwf	(??_Clear_cred+1)& (0+255),c
  9968  011862  0E39               	movlw	57
  9969  011864  6E29               	movwf	??_Clear_cred& (0+255),c
  9970  011866  0E0E               	movlw	14
  9971  011868                     u4117:
  9972  011868  2EE8               	decfsz	wreg,f,c
  9973  01186A  D7FE               	bra	u4117
  9974  01186C  2E29               	decfsz	??_Clear_cred& (0+255),f,c
  9975  01186E  D7FC               	bra	u4117
  9976  011870  2E2A               	decfsz	(??_Clear_cred+1)& (0+255),f,c
  9977  011872  D7FA               	bra	u4117
  9978  011874  0012               	return		;funcret
  9979  011876                     __end_of_Clear_cred:
  9980                           	opt stack 0
  9981                           tblptru	equ	0xFF8
  9982                           tblptrh	equ	0xFF7
  9983                           tblptrl	equ	0xFF6
  9984                           tablat	equ	0xFF5
  9985                           prodh	equ	0xFF4
  9986                           prodl	equ	0xFF3
  9987                           postinc0	equ	0xFEE
  9988                           wreg	equ	0xFE8
  9989                           indf2	equ	0xFDF
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function _Audit *****************
  9995 ;; Defined at:
  9996 ;;		line 166 in file "vend.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		None
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;Total ram usage:        0 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    2
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_enter_service
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text52
 10025  012012                     __ptext52:
 10026                           	opt stack 0
 10027  012012                     _Audit:
 10028                           	opt stack 27
 10029                           
 10030                           ;incstack = 0
 10031  012012  0012               	return		;funcret
 10032  012014                     __end_of_Audit:
 10033                           	opt stack 0
 10034                           tblptru	equ	0xFF8
 10035                           tblptrh	equ	0xFF7
 10036                           tblptrl	equ	0xFF6
 10037                           tablat	equ	0xFF5
 10038                           prodh	equ	0xFF4
 10039                           prodl	equ	0xFF3
 10040                           postinc0	equ	0xFEE
 10041                           wreg	equ	0xFE8
 10042                           indf2	equ	0xFDF
 10043                           fsr2h	equ	0xFDA
 10044                           fsr2l	equ	0xFD9
 10045                           status	equ	0xFD8
 10046                           
 10047 ;; *************** function _displ_noteer *****************
 10048 ;; Defined at:
 10049 ;;		line 182 in file "lcd.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;		None
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;		None
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  1    wreg      void 
 10056 ;; Registers used:
 10057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10067 ;;Total ram usage:        0 bytes
 10068 ;; Hardware stack levels used:    1
 10069 ;; Hardware stack levels required when called:    8
 10070 ;; This function calls:
 10071 ;;		_displ_code
 10072 ;;		_lcd_string
 10073 ;; This function is called by:
 10074 ;;		_main
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text53
 10079  011D52                     __ptext53:
 10080                           	opt stack 0
 10081  011D52                     _displ_noteer:
 10082                           	opt stack 22
 10083                           
 10084                           ;lcd.c: 184: lcd_string(noteerr, line1);
 10085                           
 10086                           ;incstack = 0
 10087  011D52  0E0D               	movlw	low _noteerr
 10088  011D54  6E24               	movwf	lcd_string@lcdstring,c
 10089  011D56  0EFF               	movlw	high _noteerr
 10090  011D58  6E25               	movwf	lcd_string@lcdstring+1,c
 10091  011D5A  0E8F               	movlw	low _line1
 10092  011D5C  6EF6               	movwf	tblptrl,c
 10093  011D5E                     	if	1	;There is more than 1 active tblptr byte
 10094  011D5E  0EFC               	movlw	high _line1
 10095  011D60  6EF7               	movwf	tblptrh,c
 10096  011D62                     	endif
 10097  011D62                     	if	1	;There are 3 active tblptr bytes
 10098  011D62  0E00               	movlw	low (_line1 shr (0+16))
 10099  011D64  6EF8               	movwf	tblptru,c
 10100  011D66                     	endif
 10101  011D66  0008               	tblrd		*
 10102  011D68  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10103  011D6C  EC46  F087         	call	_lcd_string	;wreg free
 10104                           
 10105                           ;lcd.c: 185: ercode = mdbdata[0];
 10106  011D70  C060  F043         	movff	_mdbdata,_ercode
 10107                           
 10108                           ;lcd.c: 186: displ_code(ercode);
 10109  011D74  5043               	movf	_ercode,w,c
 10110  011D76  EC33  F082         	call	_displ_code
 10111                           
 10112                           ;lcd.c: 187: mdbflags.noteerr = 0;
 10113  011D7A  923E               	bcf	_mdbflags,1,c
 10114                           
 10115                           ;lcd.c: 188: venflags.noterr = 0;
 10116  011D7C  9C2E               	bcf	_venflags,6,c
 10117                           
 10118                           ;lcd.c: 189: venflags.credisplay = 0;
 10119  011D7E  982E               	bcf	_venflags,4,c
 10120  011D80  0012               	return		;funcret
 10121  011D82                     __end_of_displ_noteer:
 10122                           	opt stack 0
 10123                           tblptru	equ	0xFF8
 10124                           tblptrh	equ	0xFF7
 10125                           tblptrl	equ	0xFF6
 10126                           tablat	equ	0xFF5
 10127                           prodh	equ	0xFF4
 10128                           prodl	equ	0xFF3
 10129                           postinc0	equ	0xFEE
 10130                           wreg	equ	0xFE8
 10131                           indf2	equ	0xFDF
 10132                           fsr2h	equ	0xFDA
 10133                           fsr2l	equ	0xFD9
 10134                           status	equ	0xFD8
 10135                           
 10136 ;; *************** function _displ_code *****************
 10137 ;; Defined at:
 10138 ;;		line 135 in file "lcd.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;  ercode          1    wreg     unsigned char 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  ercode          1   27[COMRAM] unsigned char 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      void 
 10145 ;; Registers used:
 10146 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10156 ;;Total ram usage:        3 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:    7
 10159 ;; This function calls:
 10160 ;;		_lcd_writeC
 10161 ;; This function is called by:
 10162 ;;		_displ_noteer
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           	psect	text54
 10167  010466                     __ptext54:
 10168                           	opt stack 0
 10169  010466                     _displ_code:
 10170                           	opt stack 22
 10171                           
 10172                           ;incstack = 0
 10173                           ;displ_code@ercode stored from wreg
 10174  010466  6E26               	movwf	displ_code@ercode,c
 10175                           
 10176                           ;lcd.c: 137: if((ercode >> 4) < 0x0A)
 10177  010468  C026  F024         	movff	displ_code@ercode,??_displ_code
 10178  01046C  3A24               	swapf	??_displ_code,f,c
 10179  01046E  0E0F               	movlw	15
 10180  010470  1624               	andwf	??_displ_code,f,c
 10181  010472  0E0A               	movlw	10
 10182  010474  6024               	cpfslt	??_displ_code,c
 10183  010476  D01E               	goto	l1494
 10184                           
 10185                           ;lcd.c: 138: {
 10186                           ;lcd.c: 139: lcd_writeC((ercode >> 4) | 0x30);
 10187  010478  3826               	swapf	displ_code@ercode,w,c
 10188  01047A  0B0F               	andlw	15
 10189  01047C  0930               	iorlw	48
 10190  01047E  EC7F  F08B         	call	_lcd_writeC
 10191                           
 10192                           ;lcd.c: 140: }
 10193  010482  D033               	goto	l1496
 10194  010484  0E41               	movlw	65
 10195  010486  EC7F  F08B         	call	_lcd_writeC
 10196                           
 10197                           ;lcd.c: 146: break;
 10198  01048A  D02F               	goto	l1496
 10199  01048C  0E42               	movlw	66
 10200  01048E  EC7F  F08B         	call	_lcd_writeC
 10201                           
 10202                           ;lcd.c: 148: break;
 10203  010492  D02B               	goto	l1496
 10204  010494  0E43               	movlw	67
 10205  010496  EC7F  F08B         	call	_lcd_writeC
 10206                           
 10207                           ;lcd.c: 150: break;
 10208  01049A  D027               	goto	l1496
 10209  01049C  0E44               	movlw	68
 10210  01049E  EC7F  F08B         	call	_lcd_writeC
 10211                           
 10212                           ;lcd.c: 152: break;
 10213  0104A2  D023               	goto	l1496
 10214  0104A4  0E45               	movlw	69
 10215  0104A6  EC7F  F08B         	call	_lcd_writeC
 10216                           
 10217                           ;lcd.c: 154: break;
 10218  0104AA  D01F               	goto	l1496
 10219  0104AC  0E46               	movlw	70
 10220  0104AE  EC7F  F08B         	call	_lcd_writeC
 10221                           
 10222                           ;lcd.c: 156: }
 10223  0104B2  D01B               	goto	l1496
 10224  0104B4                     l1494:
 10225  0104B4  3826               	swapf	displ_code@ercode,w,c
 10226  0104B6  0B0F               	andlw	15
 10227  0104B8  6E24               	movwf	??_displ_code& (0+255),c
 10228  0104BA  6A25               	clrf	(??_displ_code+1)& (0+255),c
 10229                           
 10230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10231                           ; Switch size 1, requested type "space"
 10232                           ; Number of cases is 1, Range of values is 0 to 0
 10233                           ; switch strategies available:
 10234                           ; Name         Instructions Cycles
 10235                           ; simple_byte            4     3 (average)
 10236                           ;	Chosen strategy is simple_byte
 10237  0104BC  5025               	movf	??_displ_code+1,w,c
 10238  0104BE  0A00               	xorlw	0	; case 0
 10239  0104C0  A4D8               	btfss	status,2,c
 10240  0104C2  D013               	goto	l1496
 10241                           
 10242                           ; Switch size 1, requested type "space"
 10243                           ; Number of cases is 6, Range of values is 10 to 15
 10244                           ; switch strategies available:
 10245                           ; Name         Instructions Cycles
 10246                           ; simple_byte           19    10 (average)
 10247                           ;	Chosen strategy is simple_byte
 10248  0104C4  5024               	movf	??_displ_code,w,c
 10249  0104C6  0A0A               	xorlw	10	; case 10
 10250  0104C8  B4D8               	btfsc	status,2,c
 10251  0104CA  D7DC               	goto	l1495
 10252  0104CC  0A01               	xorlw	1	; case 11
 10253  0104CE  B4D8               	btfsc	status,2,c
 10254  0104D0  D7DD               	goto	l1497
 10255  0104D2  0A07               	xorlw	7	; case 12
 10256  0104D4  B4D8               	btfsc	status,2,c
 10257  0104D6  D7DE               	goto	l1498
 10258  0104D8  0A01               	xorlw	1	; case 13
 10259  0104DA  B4D8               	btfsc	status,2,c
 10260  0104DC  D7DF               	goto	l1499
 10261  0104DE  0A03               	xorlw	3	; case 14
 10262  0104E0  B4D8               	btfsc	status,2,c
 10263  0104E2  D7E0               	goto	l1500
 10264  0104E4  0A01               	xorlw	1	; case 15
 10265  0104E6  B4D8               	btfsc	status,2,c
 10266  0104E8  D7E1               	goto	l1501
 10267  0104EA                     l1496:
 10268                           
 10269                           ;lcd.c: 157: }
 10270                           ;lcd.c: 158: if((ercode & 0x0F) < 0x0A)
 10271  0104EA  C026  F024         	movff	displ_code@ercode,??_displ_code
 10272  0104EE  0E0F               	movlw	15
 10273  0104F0  1624               	andwf	??_displ_code,f,c
 10274  0104F2  0E0A               	movlw	10
 10275  0104F4  6024               	cpfslt	??_displ_code,c
 10276  0104F6  D01E               	goto	l1504
 10277                           
 10278                           ;lcd.c: 159: {
 10279                           ;lcd.c: 160: lcd_writeC((ercode & 0x0F) | 0x30);
 10280  0104F8  5026               	movf	displ_code@ercode,w,c
 10281  0104FA  0B0F               	andlw	15
 10282  0104FC  0930               	iorlw	48
 10283  0104FE  EC7F  F08B         	call	_lcd_writeC
 10284                           
 10285                           ;lcd.c: 161: }
 10286  010502  0012               	return	
 10287  010504  0E41               	movlw	65
 10288  010506  EC7F  F08B         	call	_lcd_writeC
 10289                           
 10290                           ;lcd.c: 167: break;
 10291  01050A  0012               	return	
 10292  01050C  0E42               	movlw	66
 10293  01050E  EC7F  F08B         	call	_lcd_writeC
 10294                           
 10295                           ;lcd.c: 169: break;
 10296  010512  0012               	return	
 10297  010514  0E43               	movlw	67
 10298  010516  EC7F  F08B         	call	_lcd_writeC
 10299                           
 10300                           ;lcd.c: 171: break;
 10301  01051A  0012               	return	
 10302  01051C  0E44               	movlw	68
 10303  01051E  EC7F  F08B         	call	_lcd_writeC
 10304                           
 10305                           ;lcd.c: 173: break;
 10306  010522  0012               	return	
 10307  010524  0E45               	movlw	69
 10308  010526  EC7F  F08B         	call	_lcd_writeC
 10309                           
 10310                           ;lcd.c: 175: break;
 10311  01052A  0012               	return	
 10312  01052C  0E46               	movlw	70
 10313  01052E  EC7F  F08B         	call	_lcd_writeC
 10314                           
 10315                           ;lcd.c: 177: }
 10316  010532  0012               	return	
 10317  010534                     l1504:
 10318  010534  5026               	movf	displ_code@ercode,w,c
 10319  010536  0B0F               	andlw	15
 10320  010538  6E24               	movwf	??_displ_code& (0+255),c
 10321  01053A  6A25               	clrf	(??_displ_code+1)& (0+255),c
 10322                           
 10323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10324                           ; Switch size 1, requested type "space"
 10325                           ; Number of cases is 1, Range of values is 0 to 0
 10326                           ; switch strategies available:
 10327                           ; Name         Instructions Cycles
 10328                           ; simple_byte            4     3 (average)
 10329                           ;	Chosen strategy is simple_byte
 10330  01053C  5025               	movf	??_displ_code+1,w,c
 10331  01053E  0A00               	xorlw	0	; case 0
 10332  010540  A4D8               	btfss	status,2,c
 10333  010542  0012               	return	
 10334                           
 10335                           ; Switch size 1, requested type "space"
 10336                           ; Number of cases is 6, Range of values is 10 to 15
 10337                           ; switch strategies available:
 10338                           ; Name         Instructions Cycles
 10339                           ; simple_byte           19    10 (average)
 10340                           ;	Chosen strategy is simple_byte
 10341  010544  5024               	movf	??_displ_code,w,c
 10342  010546  0A0A               	xorlw	10	; case 10
 10343  010548  B4D8               	btfsc	status,2,c
 10344  01054A  D7DC               	goto	l1505
 10345  01054C  0A01               	xorlw	1	; case 11
 10346  01054E  B4D8               	btfsc	status,2,c
 10347  010550  D7DD               	goto	l1507
 10348  010552  0A07               	xorlw	7	; case 12
 10349  010554  B4D8               	btfsc	status,2,c
 10350  010556  D7DE               	goto	l1508
 10351  010558  0A01               	xorlw	1	; case 13
 10352  01055A  B4D8               	btfsc	status,2,c
 10353  01055C  D7DF               	goto	l1509
 10354  01055E  0A03               	xorlw	3	; case 14
 10355  010560  B4D8               	btfsc	status,2,c
 10356  010562  D7E0               	goto	l1510
 10357  010564  0A01               	xorlw	1	; case 15
 10358  010566  A4D8               	btfss	status,2,c
 10359  010568  0012               	return	
 10360  01056A  D7E0               	goto	l1511
 10361  01056C                     __end_of_displ_code:
 10362                           	opt stack 0
 10363                           tblptru	equ	0xFF8
 10364                           tblptrh	equ	0xFF7
 10365                           tblptrl	equ	0xFF6
 10366                           tablat	equ	0xFF5
 10367                           prodh	equ	0xFF4
 10368                           prodl	equ	0xFF3
 10369                           postinc0	equ	0xFEE
 10370                           wreg	equ	0xFE8
 10371                           indf2	equ	0xFDF
 10372                           fsr2h	equ	0xFDA
 10373                           fsr2l	equ	0xFD9
 10374                           status	equ	0xFD8
 10375                           
 10376 ;; *************** function _displ_credit *****************
 10377 ;; Defined at:
 10378 ;;		line 127 in file "lcd.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;  cash            1   31[COMRAM] unsigned char 
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;Total ram usage:        1 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    8
 10399 ;; This function calls:
 10400 ;;		_credit_check
 10401 ;;		_displ_hex
 10402 ;;		_lcd_string
 10403 ;; This function is called by:
 10404 ;;		_main
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408                           	psect	text55
 10409  011C54                     __ptext55:
 10410                           	opt stack 0
 10411  011C54                     _displ_credit:
 10412                           	opt stack 22
 10413                           
 10414                           ;lcd.c: 129: lcd_string(credits, line1);
 10415                           
 10416                           ;incstack = 0
 10417  011C54  0E7F               	movlw	low _credits
 10418  011C56  6E24               	movwf	lcd_string@lcdstring,c
 10419  011C58  0EFF               	movlw	high _credits
 10420  011C5A  6E25               	movwf	lcd_string@lcdstring+1,c
 10421  011C5C  0E8F               	movlw	low _line1
 10422  011C5E  6EF6               	movwf	tblptrl,c
 10423  011C60                     	if	1	;There is more than 1 active tblptr byte
 10424  011C60  0EFC               	movlw	high _line1
 10425  011C62  6EF7               	movwf	tblptrh,c
 10426  011C64                     	endif
 10427  011C64                     	if	1	;There are 3 active tblptr bytes
 10428  011C64  0E00               	movlw	low (_line1 shr (0+16))
 10429  011C66  6EF8               	movwf	tblptru,c
 10430  011C68                     	endif
 10431  011C68  0008               	tblrd		*
 10432  011C6A  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10433  011C6E  EC46  F087         	call	_lcd_string	;wreg free
 10434                           
 10435                           ;lcd.c: 130: uint8_t cash = credit_check();
 10436  011C72  EC10  F08F         	call	_credit_check	;wreg free
 10437  011C76  6E2A               	movwf	displ_credit@cash,c
 10438                           
 10439                           ;lcd.c: 131: displ_hex((uint8_t) cash);
 10440  011C78  502A               	movf	displ_credit@cash,w,c
 10441  011C7A  6E27               	movwf	displ_hex@hexnum,c
 10442  011C7C  6A28               	clrf	displ_hex@hexnum+1,c
 10443  011C7E  6A29               	clrf	displ_hex@hexnum+2,c
 10444  011C80  ECEB  F086         	call	_displ_hex	;wreg free
 10445                           
 10446                           ;lcd.c: 132: venflags.credisplay = 0;
 10447  011C84  982E               	bcf	_venflags,4,c
 10448  011C86  0012               	return		;funcret
 10449  011C88                     __end_of_displ_credit:
 10450                           	opt stack 0
 10451                           tblptru	equ	0xFF8
 10452                           tblptrh	equ	0xFF7
 10453                           tblptrl	equ	0xFF6
 10454                           tablat	equ	0xFF5
 10455                           prodh	equ	0xFF4
 10456                           prodl	equ	0xFF3
 10457                           postinc0	equ	0xFEE
 10458                           wreg	equ	0xFE8
 10459                           indf2	equ	0xFDF
 10460                           fsr2h	equ	0xFDA
 10461                           fsr2l	equ	0xFD9
 10462                           status	equ	0xFD8
 10463                           
 10464 ;; *************** function _lcd_string *****************
 10465 ;; Defined at:
 10466 ;;		line 217 in file "lcd.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  lcdstring       2   25[COMRAM] PTR unsigned char 
 10469 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
 10470 ;;		 -> tenrand(9), setnotes(69), chanresetmsg(32), chanlinkm(55), 
 10471 ;;		 -> vendtimem(41), setimemsg(41), vendsetup(80), pricesetm2(57), 
 10472 ;;		 -> pricesetmsg(18), creditclr(16), dacmsg(13), hoppcoin(51), 
 10473 ;;		 -> initnote(37), noteerr(28), credits(13), timemsg(18), 
 10474 ;;		 -> clrline(21), enabled(10), disabled(10), sensoffmsg(31), 
 10475 ;;		 -> sensmsg(11), linkmsg(12), chanmsg(12), clrmsg(10), 
 10476 ;;		 -> onmsg(4), offmsg(4), servmsg(80), inscoin(49), 
 10477 ;;  lcdline         1   27[COMRAM] unsigned char 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;		None
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      void 
 10482 ;; Registers used:
 10483 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10489 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10492 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10493 ;;Total ram usage:        5 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:    7
 10496 ;; This function calls:
 10497 ;;		_lcd_dispadd
 10498 ;;		_lcd_write
 10499 ;;		_lcd_writeC
 10500 ;; This function is called by:
 10501 ;;		_main
 10502 ;;		_enter_service
 10503 ;;		_displ_sens
 10504 ;;		_displ_lflags
 10505 ;;		_displ_sflags
 10506 ;;		_displ_time
 10507 ;;		_displ_note
 10508 ;;		_displ_nendis
 10509 ;;		_displ_credit
 10510 ;;		_displ_noteer
 10511 ;;		_vend_init
 10512 ;;		_Hopper_coin
 10513 ;;		_Update_Hopcoin
 10514 ;;		_Sensor_set
 10515 ;;		_Clear_cred
 10516 ;;		_price_set
 10517 ;;		_set_price
 10518 ;;		_Vend_setup
 10519 ;;		_Vend_settime
 10520 ;;		_Vend_timeset
 10521 ;;		_Chan_link
 10522 ;;		_Sens_off
 10523 ;;		_Reset_settings
 10524 ;;		_set_notes
 10525 ;;		_enable_notes
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text56
 10530  010E8C                     __ptext56:
 10531                           	opt stack 0
 10532  010E8C                     _lcd_string:
 10533                           	opt stack 22
 10534                           
 10535                           ;lcd.c: 219: if(lcdline == line1)
 10536                           
 10537                           ;incstack = 0
 10538  010E8C  0E8F               	movlw	low _line1
 10539  010E8E  6EF6               	movwf	tblptrl,c
 10540  010E90                     	if	1	;There is more than 1 active tblptr byte
 10541  010E90  0EFC               	movlw	high _line1
 10542  010E92  6EF7               	movwf	tblptrh,c
 10543  010E94                     	endif
 10544  010E94                     	if	1	;There are 3 active tblptr bytes
 10545  010E94  0E00               	movlw	low (_line1 shr (0+16))
 10546  010E96  6EF8               	movwf	tblptru,c
 10547  010E98                     	endif
 10548  010E98  0008               	tblrd		*
 10549  010E9A  50F5               	movf	tablat,w,c
 10550  010E9C  6226               	cpfseq	lcd_string@lcdline,c
 10551  010E9E  D00B               	goto	l1528
 10552                           
 10553                           ;lcd.c: 220: {
 10554                           ;lcd.c: 221: lcd_write(dispclr);
 10555  010EA0  0E99               	movlw	low _dispclr
 10556  010EA2  6EF6               	movwf	tblptrl,c
 10557  010EA4                     	if	1	;There is more than 1 active tblptr byte
 10558  010EA4  0EFC               	movlw	high _dispclr
 10559  010EA6  6EF7               	movwf	tblptrh,c
 10560  010EA8                     	endif
 10561  010EA8                     	if	1	;There are 3 active tblptr bytes
 10562  010EA8  0E00               	movlw	low (_dispclr shr (0+16))
 10563  010EAA  6EF8               	movwf	tblptru,c
 10564  010EAC                     	endif
 10565  010EAC  0008               	tblrd		*
 10566  010EAE  50F5               	movf	tablat,w,c
 10567  010EB0  EC90  F08E         	call	_lcd_write
 10568                           
 10569                           ;lcd.c: 222: }
 10570  010EB4  D004               	goto	l1529
 10571  010EB6                     l1528:
 10572                           
 10573                           ;lcd.c: 223: else
 10574                           ;lcd.c: 224: {
 10575                           ;lcd.c: 226: lcd_dispadd(lcdline | 0x80);
 10576  010EB6  5026               	movf	lcd_string@lcdline,w,c
 10577  010EB8  0980               	iorlw	128
 10578  010EBA  EC6A  F08F         	call	_lcd_dispadd
 10579  010EBE                     l1529:
 10580                           
 10581                           ;lcd.c: 227: }
 10582                           ;lcd.c: 228: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
 10583  010EBE  0E00               	movlw	0
 10584  010EC0  6E44               	movwf	_stradd,c
 10585  010EC2  D028               	goto	l1530
 10586  010EC4                     
 10587                           ;lcd.c: 229: {
 10588                           ;lcd.c: 230: lcdata = lcdstring[stradd];
 10589  010EC4  5044               	movf	_stradd,w,c
 10590  010EC6  0D01               	mullw	1
 10591  010EC8  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 10592  010ECC  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 10593  010ED0  50F3               	movf	prodl,w,c
 10594  010ED2  2627               	addwf	??_lcd_string,f,c
 10595  010ED4  50F4               	movf	prodh,w,c
 10596  010ED6  2228               	addwfc	??_lcd_string+1,f,c
 10597  010ED8  C027  FFF6         	movff	??_lcd_string,tblptrl
 10598  010EDC  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 10599  010EE0                     	if	0	;tblptru may be non-zero
 10600  010EE0                     	endif
 10601  010EE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10602  010EE0  0E00               	movlw	low (__mediumconst shr (0+16))
 10603  010EE2  6EF8               	movwf	tblptru,c
 10604  010EE4                     	endif
 10605  010EE4  0008               	tblrd		*
 10606  010EE6  CFF5 F045          	movff	tablat,_lcdata
 10607                           
 10608                           ;lcd.c: 231: lcd_writeC(lcdstring[stradd]);
 10609  010EEA  5044               	movf	_stradd,w,c
 10610  010EEC  0D01               	mullw	1
 10611  010EEE  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 10612  010EF2  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 10613  010EF6  50F3               	movf	prodl,w,c
 10614  010EF8  2627               	addwf	??_lcd_string,f,c
 10615  010EFA  50F4               	movf	prodh,w,c
 10616  010EFC  2228               	addwfc	??_lcd_string+1,f,c
 10617  010EFE  C027  FFF6         	movff	??_lcd_string,tblptrl
 10618  010F02  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 10619  010F06                     	if	0	;tblptru may be non-zero
 10620  010F06                     	endif
 10621  010F06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10622  010F06  0E00               	movlw	low (__mediumconst shr (0+16))
 10623  010F08  6EF8               	movwf	tblptru,c
 10624  010F0A                     	endif
 10625  010F0A  0008               	tblrd		*
 10626  010F0C  50F5               	movf	tablat,w,c
 10627  010F0E  EC7F  F08B         	call	_lcd_writeC
 10628  010F12  2A44               	incf	_stradd,f,c
 10629  010F14                     l1530:
 10630  010F14  5044               	movf	_stradd,w,c
 10631  010F16  0D01               	mullw	1
 10632  010F18  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 10633  010F1C  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 10634  010F20  50F3               	movf	prodl,w,c
 10635  010F22  2627               	addwf	??_lcd_string,f,c
 10636  010F24  50F4               	movf	prodh,w,c
 10637  010F26  2228               	addwfc	??_lcd_string+1,f,c
 10638  010F28  C027  FFF6         	movff	??_lcd_string,tblptrl
 10639  010F2C  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 10640  010F30                     	if	0	;tblptru may be non-zero
 10641  010F30                     	endif
 10642  010F30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10643  010F30  0E00               	movlw	low (__mediumconst shr (0+16))
 10644  010F32  6EF8               	movwf	tblptru,c
 10645  010F34                     	endif
 10646  010F34  0008               	tblrd		*
 10647  010F36  50F5               	movf	tablat,w,c
 10648  010F38  0900               	iorlw	0
 10649  010F3A  B4D8               	btfsc	status,2,c
 10650  010F3C  0012               	return	
 10651  010F3E  D7C2               	goto	l1531
 10652  010F40                     __end_of_lcd_string:
 10653                           	opt stack 0
 10654                           tblptru	equ	0xFF8
 10655                           tblptrh	equ	0xFF7
 10656                           tblptrl	equ	0xFF6
 10657                           tablat	equ	0xFF5
 10658                           prodh	equ	0xFF4
 10659                           prodl	equ	0xFF3
 10660                           postinc0	equ	0xFEE
 10661                           wreg	equ	0xFE8
 10662                           indf2	equ	0xFDF
 10663                           fsr2h	equ	0xFDA
 10664                           fsr2l	equ	0xFD9
 10665                           status	equ	0xFD8
 10666                           
 10667 ;; *************** function _displ_hex *****************
 10668 ;; Defined at:
 10669 ;;		line 192 in file "lcd.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;  hexnum          3   28[COMRAM] unsigned um
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;  value           8    0[BANK0 ] unsigned char [8]
 10674 ;;  hexnumsave      3    8[BANK0 ] unsigned um
 10675 ;;  i               1   11[BANK0 ] char 
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      void 
 10678 ;; Registers used:
 10679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10685 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10688 ;;      Totals:         3       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10689 ;;Total ram usage:       15 bytes
 10690 ;; Hardware stack levels used:    1
 10691 ;; Hardware stack levels required when called:    7
 10692 ;; This function calls:
 10693 ;;		___ltdiv
 10694 ;;		___ltmod
 10695 ;;		_lcd_writeC
 10696 ;; This function is called by:
 10697 ;;		_displ_sens
 10698 ;;		_displ_time
 10699 ;;		_displ_credit
 10700 ;;		_displ_price
 10701 ;;		_Hopper_coin
 10702 ;;		_Update_Hopcoin
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           	psect	text57
 10707  010DD6                     __ptext57:
 10708                           	opt stack 0
 10709  010DD6                     _displ_hex:
 10710                           	opt stack 19
 10711                           
 10712                           ;lcd.c: 194: signed char i = 0;
 10713                           
 10714                           ;incstack = 0
 10715  010DD6  0E00               	movlw	0
 10716  010DD8  0100               	movlb	0	; () banked
 10717  010DDA  6FB2               	movwf	displ_hex@i& (0+255),b
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;lcd.c: 195: uint8_t value[8];
 10721                           ;lcd.c: 196: uint24_t hexnumsave = hexnum;
 10722  010DDC  C027  F0AF         	movff	displ_hex@hexnum,displ_hex@hexnumsave
 10723  010DE0  C028  F0B0         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
 10724  010DE4  C029  F0B1         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
 10725                           
 10726                           ;lcd.c: 197: while(hexnum > 0)
 10727  010DE8  D02F               	goto	l1518
 10728  010DEA                     
 10729                           ; BSR set to: 0
 10730                           ;lcd.c: 198: {
 10731                           ;lcd.c: 199: value[i] = hexnum % 10;
 10732                           
 10733                           ; BSR set to: 0
 10734  010DEA  51B2               	movf	displ_hex@i& (0+255),w,b
 10735  010DEC  0D01               	mullw	1
 10736  010DEE  0EA7               	movlw	low displ_hex@value
 10737  010DF0  24F3               	addwf	prodl,w,c
 10738  010DF2  6ED9               	movwf	fsr2l,c
 10739  010DF4  0E00               	movlw	high displ_hex@value
 10740  010DF6  20F4               	addwfc	prodh,w,c
 10741  010DF8  6EDA               	movwf	fsr2h,c
 10742  010DFA  C027  F01D         	movff	displ_hex@hexnum,___ltmod@dividend
 10743  010DFE  C028  F01E         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
 10744  010E02  C029  F01F         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
 10745  010E06  0E0A               	movlw	10
 10746  010E08  6E20               	movwf	___ltmod@divisor,c
 10747  010E0A  0E00               	movlw	0
 10748  010E0C  6E21               	movwf	___ltmod@divisor+1,c
 10749  010E0E  0E00               	movlw	0
 10750  010E10  6E22               	movwf	___ltmod@divisor+2,c
 10751  010E12  EC66  F08C         	call	___ltmod	;wreg free
 10752  010E16  501D               	movf	?___ltmod,w,c
 10753  010E18  6EDF               	movwf	indf2,c
 10754                           
 10755                           ;lcd.c: 200: hexnum /= 10;
 10756  010E1A  C027  F01D         	movff	displ_hex@hexnum,___ltdiv@dividend
 10757  010E1E  C028  F01E         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
 10758  010E22  C029  F01F         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
 10759  010E26  0E0A               	movlw	10
 10760  010E28  6E20               	movwf	___ltdiv@divisor,c
 10761  010E2A  0E00               	movlw	0
 10762  010E2C  6E21               	movwf	___ltdiv@divisor+1,c
 10763  010E2E  0E00               	movlw	0
 10764  010E30  6E22               	movwf	___ltdiv@divisor+2,c
 10765  010E32  EC16  F08B         	call	___ltdiv	;wreg free
 10766  010E36  C01D  F027         	movff	?___ltdiv,displ_hex@hexnum
 10767  010E3A  C01E  F028         	movff	?___ltdiv+1,displ_hex@hexnum+1
 10768  010E3E  C01F  F029         	movff	?___ltdiv+2,displ_hex@hexnum+2
 10769                           
 10770                           ;lcd.c: 201: i = i + 1;
 10771  010E42  0100               	movlb	0	; () banked
 10772  010E44  29B2               	incf	displ_hex@i& (0+255),w,b
 10773  010E46  6FB2               	movwf	displ_hex@i& (0+255),b
 10774  010E48                     l1518:
 10775                           
 10776                           ; BSR set to: 0
 10777                           
 10778                           ; BSR set to: 0
 10779  010E48  5027               	movf	displ_hex@hexnum,w,c
 10780  010E4A  1028               	iorwf	displ_hex@hexnum+1,w,c
 10781  010E4C  1029               	iorwf	displ_hex@hexnum+2,w,c
 10782  010E4E  B4D8               	btfsc	status,2,c
 10783  010E50  D00E               	goto	l1521
 10784  010E52  D7CB               	goto	l1519
 10785  010E54                     
 10786                           ; BSR set to: 0
 10787                           ;lcd.c: 205: {
 10788                           ;lcd.c: 206: i--;
 10789                           
 10790                           ; BSR set to: 0
 10791  010E54  07B2               	decf	displ_hex@i& (0+255),f,b
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;lcd.c: 207: lcd_writeC(value[i] | 0x30);
 10795  010E56  51B2               	movf	displ_hex@i& (0+255),w,b
 10796  010E58  0D01               	mullw	1
 10797  010E5A  0EA7               	movlw	low displ_hex@value
 10798  010E5C  24F3               	addwf	prodl,w,c
 10799  010E5E  6ED9               	movwf	fsr2l,c
 10800  010E60  0E00               	movlw	high displ_hex@value
 10801  010E62  20F4               	addwfc	prodh,w,c
 10802  010E64  6EDA               	movwf	fsr2h,c
 10803  010E66  50DF               	movf	indf2,w,c
 10804  010E68  0930               	iorlw	48
 10805  010E6A  EC7F  F08B         	call	_lcd_writeC
 10806  010E6E                     l1521:
 10807  010E6E  0100               	movlb	0	; () banked
 10808  010E70  51B2               	movf	displ_hex@i& (0+255),w,b
 10809  010E72  0A80               	xorlw	128
 10810  010E74  0F7F               	addlw	-129
 10811  010E76  B0D8               	btfsc	status,0,c
 10812  010E78  D7ED               	goto	l1522
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;lcd.c: 208: }
 10816                           ;lcd.c: 210: if(hexnumsave == 0)
 10817                           
 10818                           ; BSR set to: 0
 10819  010E7A  51AF               	movf	displ_hex@hexnumsave& (0+255),w,b
 10820  010E7C  11B0               	iorwf	(displ_hex@hexnumsave+1)& (0+255),w,b
 10821  010E7E  11B1               	iorwf	(displ_hex@hexnumsave+2)& (0+255),w,b
 10822  010E80  A4D8               	btfss	status,2,c
 10823  010E82  0012               	return	
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;lcd.c: 211: {
 10827                           ;lcd.c: 212: lcd_writeC(0x30);
 10828  010E84  0E30               	movlw	48
 10829  010E86  EC7F  F08B         	call	_lcd_writeC
 10830  010E8A  0012               	return	
 10831  010E8C                     __end_of_displ_hex:
 10832                           	opt stack 0
 10833                           tblptru	equ	0xFF8
 10834                           tblptrh	equ	0xFF7
 10835                           tblptrl	equ	0xFF6
 10836                           tablat	equ	0xFF5
 10837                           prodh	equ	0xFF4
 10838                           prodl	equ	0xFF3
 10839                           postinc0	equ	0xFEE
 10840                           wreg	equ	0xFE8
 10841                           indf2	equ	0xFDF
 10842                           fsr2h	equ	0xFDA
 10843                           fsr2l	equ	0xFD9
 10844                           status	equ	0xFD8
 10845                           
 10846 ;; *************** function _lcd_writeC *****************
 10847 ;; Defined at:
 10848 ;;		line 244 in file "lcd.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;  lcdata          1    wreg     unsigned char 
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;  lcdata          1   24[COMRAM] unsigned char 
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10866 ;;Total ram usage:        1 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:    6
 10869 ;; This function calls:
 10870 ;;		_lcd_dispadd
 10871 ;;		_lcd_write
 10872 ;; This function is called by:
 10873 ;;		_displ_lflags
 10874 ;;		_displ_sflags
 10875 ;;		_displ_time
 10876 ;;		_displ_code
 10877 ;;		_displ_hex
 10878 ;;		_lcd_string
 10879 ;;		_displ_price
 10880 ;;		_lcd_test
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           	psect	text58
 10885  0116FE                     __ptext58:
 10886                           	opt stack 0
 10887  0116FE                     _lcd_writeC:
 10888                           	opt stack 22
 10889                           
 10890                           ;incstack = 0
 10891                           ;lcd_writeC@lcdata stored from wreg
 10892  0116FE  6E23               	movwf	lcd_writeC@lcdata,c
 10893  011700  8487               	bsf	3975,2,c	;# 
 10894                           
 10895                           ;lcd.c: 249: lcd_write(lcdata);
 10896  011702  5023               	movf	lcd_writeC@lcdata,w,c
 10897  011704  EC90  F08E         	call	_lcd_write
 10898                           
 10899                           ;lcd.c: 253: switch(bflag)
 10900  011708  D021               	goto	l1539
 10901  01170A  0E8E               	movlw	low _line2
 10902  01170C  6EF6               	movwf	tblptrl,c
 10903  01170E                     	if	1	;There is more than 1 active tblptr byte
 10904  01170E  0EFC               	movlw	high _line2
 10905  011710  6EF7               	movwf	tblptrh,c
 10906  011712                     	endif
 10907  011712                     	if	1	;There are 3 active tblptr bytes
 10908  011712  0E00               	movlw	low (_line2 shr (0+16))
 10909  011714  6EF8               	movwf	tblptru,c
 10910  011716                     	endif
 10911  011716  0008               	tblrd		*
 10912  011718  50F5               	movf	tablat,w,c
 10913  01171A  EC6A  F08F         	call	_lcd_dispadd
 10914                           
 10915                           ;lcd.c: 256: break;
 10916  01171E  D020               	goto	l1541
 10917  011720  0E8D               	movlw	low _line3
 10918  011722  6EF6               	movwf	tblptrl,c
 10919  011724                     	if	1	;There is more than 1 active tblptr byte
 10920  011724  0EFC               	movlw	high _line3
 10921  011726  6EF7               	movwf	tblptrh,c
 10922  011728                     	endif
 10923  011728                     	if	1	;There are 3 active tblptr bytes
 10924  011728  0E00               	movlw	low (_line3 shr (0+16))
 10925  01172A  6EF8               	movwf	tblptru,c
 10926  01172C                     	endif
 10927  01172C  0008               	tblrd		*
 10928  01172E  50F5               	movf	tablat,w,c
 10929  011730  EC6A  F08F         	call	_lcd_dispadd
 10930                           
 10931                           ;lcd.c: 258: break;
 10932  011734  D015               	goto	l1541
 10933  011736  0E8C               	movlw	low _line4
 10934  011738  6EF6               	movwf	tblptrl,c
 10935  01173A                     	if	1	;There is more than 1 active tblptr byte
 10936  01173A  0EFC               	movlw	high _line4
 10937  01173C  6EF7               	movwf	tblptrh,c
 10938  01173E                     	endif
 10939  01173E                     	if	1	;There are 3 active tblptr bytes
 10940  01173E  0E00               	movlw	low (_line4 shr (0+16))
 10941  011740  6EF8               	movwf	tblptru,c
 10942  011742                     	endif
 10943  011742  0008               	tblrd		*
 10944  011744  50F5               	movf	tablat,w,c
 10945  011746  EC6A  F08F         	call	_lcd_dispadd
 10946                           
 10947                           ;lcd.c: 260: }
 10948  01174A  D00A               	goto	l1541
 10949  01174C                     l1539:
 10950  01174C  5046               	movf	_bflag,w,c
 10951                           
 10952                           ; Switch size 1, requested type "space"
 10953                           ; Number of cases is 3, Range of values is 19 to 83
 10954                           ; switch strategies available:
 10955                           ; Name         Instructions Cycles
 10956                           ; simple_byte           10     6 (average)
 10957                           ;	Chosen strategy is simple_byte
 10958  01174E  0A13               	xorlw	19	; case 19
 10959  011750  B4D8               	btfsc	status,2,c
 10960  011752  D7DB               	goto	l1540
 10961  011754  0A34               	xorlw	52	; case 39
 10962  011756  B4D8               	btfsc	status,2,c
 10963  011758  D7EE               	goto	l1543
 10964  01175A  0A74               	xorlw	116	; case 83
 10965  01175C  B4D8               	btfsc	status,2,c
 10966  01175E  D7E0               	goto	l1542
 10967  011760                     l1541:
 10968  011760  9487               	bcf	3975,2,c	;# 
 10969  011762  0012               	return		;funcret
 10970  011764                     __end_of_lcd_writeC:
 10971                           	opt stack 0
 10972                           tblptru	equ	0xFF8
 10973                           tblptrh	equ	0xFF7
 10974                           tblptrl	equ	0xFF6
 10975                           tablat	equ	0xFF5
 10976                           prodh	equ	0xFF4
 10977                           prodl	equ	0xFF3
 10978                           postinc0	equ	0xFEE
 10979                           wreg	equ	0xFE8
 10980                           indf2	equ	0xFDF
 10981                           fsr2h	equ	0xFDA
 10982                           fsr2l	equ	0xFD9
 10983                           status	equ	0xFD8
 10984                           
 10985 ;; *************** function _lcd_dispadd *****************
 10986 ;; Defined at:
 10987 ;;		line 264 in file "lcd.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  lcdaddress      1    wreg     unsigned char 
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;  lcdaddress      1   22[COMRAM] unsigned char 
 10992 ;;  lcdatasave      1   23[COMRAM] unsigned char 
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  1    wreg      void 
 10995 ;; Registers used:
 10996 ;;		wreg, status,2, status,0, cstack
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/0
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11006 ;;Total ram usage:        2 bytes
 11007 ;; Hardware stack levels used:    1
 11008 ;; Hardware stack levels required when called:    5
 11009 ;; This function calls:
 11010 ;;		_lcd_write
 11011 ;; This function is called by:
 11012 ;;		_displ_sens
 11013 ;;		_displ_lflags
 11014 ;;		_lcd_string
 11015 ;;		_displ_price
 11016 ;;		_lcd_writeC
 11017 ;;		_Hopper_coin
 11018 ;;		_Update_Hopcoin
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           	psect	text59
 11023  011ED4                     __ptext59:
 11024                           	opt stack 0
 11025  011ED4                     _lcd_dispadd:
 11026                           	opt stack 22
 11027                           
 11028                           ;incstack = 0
 11029                           ;lcd_dispadd@lcdaddress stored from wreg
 11030  011ED4  6E21               	movwf	lcd_dispadd@lcdaddress,c
 11031                           
 11032                           ;lcd.c: 266: uint8_t lcdatasave = lcdata;
 11033  011ED6  C045  F022         	movff	_lcdata,lcd_dispadd@lcdatasave
 11034  011EDA  9487               	bcf	3975,2,c	;# 
 11035                           
 11036                           ;lcd.c: 269: lcd_write(lcdaddress | 0x80);
 11037  011EDC  5021               	movf	lcd_dispadd@lcdaddress,w,c
 11038  011EDE  0980               	iorlw	128
 11039  011EE0  EC90  F08E         	call	_lcd_write
 11040  011EE4  8487               	bsf	3975,2,c	;# 
 11041                           
 11042                           ;lcd.c: 271: lcdata = lcdatasave;
 11043  011EE6  C022  F045         	movff	lcd_dispadd@lcdatasave,_lcdata
 11044  011EEA  0012               	return		;funcret
 11045  011EEC                     __end_of_lcd_dispadd:
 11046                           	opt stack 0
 11047                           tblptru	equ	0xFF8
 11048                           tblptrh	equ	0xFF7
 11049                           tblptrl	equ	0xFF6
 11050                           tablat	equ	0xFF5
 11051                           prodh	equ	0xFF4
 11052                           prodl	equ	0xFF3
 11053                           postinc0	equ	0xFEE
 11054                           wreg	equ	0xFE8
 11055                           indf2	equ	0xFDF
 11056                           fsr2h	equ	0xFDA
 11057                           fsr2l	equ	0xFD9
 11058                           status	equ	0xFD8
 11059                           
 11060 ;; *************** function _lcd_write *****************
 11061 ;; Defined at:
 11062 ;;		line 276 in file "lcd.c"
 11063 ;; Parameters:    Size  Location     Type
 11064 ;;  lcdata          1    wreg     unsigned char 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;  lcdata          1   21[COMRAM] unsigned char 
 11067 ;;  savelatd        1   20[COMRAM] unsigned char 
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		wreg, status,2, status,0, cstack
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;Total ram usage:        2 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    4
 11084 ;; This function calls:
 11085 ;;		_lcd_clockE
 11086 ;;		_read_busy
 11087 ;; This function is called by:
 11088 ;;		_lcd_init
 11089 ;;		_displ_note
 11090 ;;		_lcd_string
 11091 ;;		_displ_price
 11092 ;;		_lcd_writeC
 11093 ;;		_lcd_dispadd
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text60
 11098  011D20                     __ptext60:
 11099                           	opt stack 0
 11100  011D20                     _lcd_write:
 11101                           	opt stack 23
 11102                           
 11103                           ;incstack = 0
 11104                           ;lcd_write@lcdata stored from wreg
 11105  011D20  6E20               	movwf	lcd_write@lcdata,c
 11106                           
 11107                           ;lcd.c: 278: uint8_t savelatd = LATD;
 11108  011D22  CF86 F01F          	movff	3974,lcd_write@savelatd	;volatile
 11109                           
 11110                           ;lcd.c: 281: bflag = read_busy();
 11111  011D26  EC27  F08D         	call	_read_busy	;wreg free
 11112  011D2A  D002               	goto	L16
 11113  011D2C                     
 11114                           ;lcd.c: 283: {
 11115                           ;lcd.c: 284: bflag = read_busy();
 11116  011D2C  EC27  F08D         	call	_read_busy	;wreg free
 11117  011D30                     L16:
 11118  011D30  6E46               	movwf	_bflag,c
 11119  011D32  BE46               	btfsc	_bflag,7,c
 11120  011D34  D7FB               	goto	l1551
 11121                           
 11122                           ;lcd.c: 285: }
 11123                           ;lcd.c: 286: LATD = (lcdata >> 4) & 0x0F;
 11124  011D36  3820               	swapf	lcd_write@lcdata,w,c
 11125  011D38  0B0F               	andlw	15
 11126  011D3A  0B0F               	andlw	15
 11127  011D3C  6E86               	movwf	3974,c	;volatile
 11128                           
 11129                           ;lcd.c: 288: lcd_clockE();
 11130  011D3E  ECE0  F08F         	call	_lcd_clockE	;wreg free
 11131                           
 11132                           ;lcd.c: 290: LATD = lcdata & 0x0F;
 11133  011D42  5020               	movf	lcd_write@lcdata,w,c
 11134  011D44  0B0F               	andlw	15
 11135  011D46  6E86               	movwf	3974,c	;volatile
 11136                           
 11137                           ;lcd.c: 291: lcd_clockE();
 11138  011D48  ECE0  F08F         	call	_lcd_clockE	;wreg free
 11139                           
 11140                           ;lcd.c: 292: LATD = savelatd;
 11141  011D4C  C01F  FF86         	movff	lcd_write@savelatd,3974	;volatile
 11142  011D50  0012               	return		;funcret
 11143  011D52                     __end_of_lcd_write:
 11144                           	opt stack 0
 11145                           tblptru	equ	0xFF8
 11146                           tblptrh	equ	0xFF7
 11147                           tblptrl	equ	0xFF6
 11148                           tablat	equ	0xFF5
 11149                           prodh	equ	0xFF4
 11150                           prodl	equ	0xFF3
 11151                           postinc0	equ	0xFEE
 11152                           wreg	equ	0xFE8
 11153                           indf2	equ	0xFDF
 11154                           fsr2h	equ	0xFDA
 11155                           fsr2l	equ	0xFD9
 11156                           status	equ	0xFD8
 11157                           
 11158 ;; *************** function _read_busy *****************
 11159 ;; Defined at:
 11160 ;;		line 307 in file "lcd.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;		None
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  savelatd        1   19[COMRAM] unsigned char 
 11165 ;;  savelate        1   18[COMRAM] unsigned char 
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  1    wreg      char 
 11168 ;; Registers used:
 11169 ;;		wreg, status,2, status,0, cstack
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11179 ;;Total ram usage:        2 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; Hardware stack levels required when called:    3
 11182 ;; This function calls:
 11183 ;;		_lcd_clockH
 11184 ;;		_lcd_clockL
 11185 ;; This function is called by:
 11186 ;;		_lcd_write
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           	psect	text61
 11191  011A4E                     __ptext61:
 11192                           	opt stack 0
 11193  011A4E                     _read_busy:
 11194                           	opt stack 23
 11195                           
 11196                           ;lcd.c: 309: uint8_t savelate = LATE;
 11197                           
 11198                           ;incstack = 0
 11199  011A4E  CF87 F01D          	movff	3975,read_busy@savelate	;volatile
 11200                           
 11201                           ;lcd.c: 310: uint8_t savelatd = LATD;
 11202  011A52  CF86 F01E          	movff	3974,read_busy@savelatd	;volatile
 11203  011A56  9487               	bcf	3975,2,c	;# 
 11204  011A58  8287               	bsf	3975,1,c	;# 
 11205                           
 11206                           ;lcd.c: 313: TRISD = (TRISD | 0x0F);
 11207  011A5A  508B               	movf	3979,w,c	;volatile
 11208  011A5C  090F               	iorlw	15
 11209  011A5E  6E8B               	movwf	3979,c	;volatile
 11210                           
 11211                           ;lcd.c: 314: lcd_clockH();
 11212  011A60  ECF5  F08F         	call	_lcd_clockH	;wreg free
 11213                           
 11214                           ;lcd.c: 315: bflag = (PORTD << 4);
 11215  011A64  3890               	swapf	3984,w,c	;volatile
 11216  011A66  0BF0               	andlw	240
 11217  011A68  6E46               	movwf	_bflag,c
 11218                           
 11219                           ;lcd.c: 316: lcd_clockL();
 11220  011A6A  ECF1  F08F         	call	_lcd_clockL	;wreg free
 11221                           
 11222                           ;lcd.c: 317: lcd_clockH();
 11223  011A6E  ECF5  F08F         	call	_lcd_clockH	;wreg free
 11224                           
 11225                           ;lcd.c: 318: bflag = bflag | (PORTD & 0x0F);
 11226  011A72  5090               	movf	3984,w,c	;volatile
 11227  011A74  0B0F               	andlw	15
 11228  011A76  1046               	iorwf	_bflag,w,c
 11229  011A78  6E46               	movwf	_bflag,c
 11230  011A7A  9087               	bcf	3975,0,c	;# 
 11231                           
 11232                           ;lcd.c: 320: TRISD = (TRISD & 0xF0);
 11233  011A7C  508B               	movf	3979,w,c	;volatile
 11234  011A7E  0BF0               	andlw	240
 11235  011A80  6E8B               	movwf	3979,c	;volatile
 11236  011A82  9287               	bcf	3975,1,c	;# 
 11237                           
 11238                           ;lcd.c: 322: LATD = savelatd;
 11239  011A84  C01E  FF86         	movff	read_busy@savelatd,3974	;volatile
 11240                           
 11241                           ;lcd.c: 323: LATE = savelate;
 11242  011A88  C01D  FF87         	movff	read_busy@savelate,3975	;volatile
 11243                           
 11244                           ;lcd.c: 324: return(bflag);
 11245  011A8C  5046               	movf	_bflag,w,c
 11246  011A8E  0012               	return	
 11247  011A90                     __end_of_read_busy:
 11248                           	opt stack 0
 11249                           tblptru	equ	0xFF8
 11250                           tblptrh	equ	0xFF7
 11251                           tblptrl	equ	0xFF6
 11252                           tablat	equ	0xFF5
 11253                           prodh	equ	0xFF4
 11254                           prodl	equ	0xFF3
 11255                           postinc0	equ	0xFEE
 11256                           wreg	equ	0xFE8
 11257                           indf2	equ	0xFDF
 11258                           fsr2h	equ	0xFDA
 11259                           fsr2l	equ	0xFD9
 11260                           status	equ	0xFD8
 11261                           
 11262 ;; *************** function _lcd_clockL *****************
 11263 ;; Defined at:
 11264 ;;		line 339 in file "lcd.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;		None
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;		None
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		None
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11282 ;;Total ram usage:        0 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:    2
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		_read_busy
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           	psect	text62
 11293  011FE2                     __ptext62:
 11294                           	opt stack 0
 11295  011FE2                     _lcd_clockL:
 11296                           	opt stack 23
 11297                           
 11298                           ;incstack = 0
 11299  011FE2  9087               	bcf	3975,0,c	;# 
 11300                           
 11301                           ;lcd.c: 342: _delay((unsigned long)((1)*(12000000/4000000.0)));
 11302  011FE4  D000               	nop2		;2 cycle nop
 11303  011FE6  F000               	nop	
 11304  011FE8  0012               	return		;funcret
 11305  011FEA                     __end_of_lcd_clockL:
 11306                           	opt stack 0
 11307                           tblptru	equ	0xFF8
 11308                           tblptrh	equ	0xFF7
 11309                           tblptrl	equ	0xFF6
 11310                           tablat	equ	0xFF5
 11311                           prodh	equ	0xFF4
 11312                           prodl	equ	0xFF3
 11313                           postinc0	equ	0xFEE
 11314                           wreg	equ	0xFE8
 11315                           indf2	equ	0xFDF
 11316                           fsr2h	equ	0xFDA
 11317                           fsr2l	equ	0xFD9
 11318                           status	equ	0xFD8
 11319                           
 11320 ;; *************** function _lcd_clockH *****************
 11321 ;; Defined at:
 11322 ;;		line 331 in file "lcd.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;		None
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		None
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11340 ;;Total ram usage:        0 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    2
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_read_busy
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text63
 11351  011FEA                     __ptext63:
 11352                           	opt stack 0
 11353  011FEA                     _lcd_clockH:
 11354                           	opt stack 23
 11355                           
 11356                           ;incstack = 0
 11357  011FEA  8087               	bsf	3975,0,c	;# 
 11358                           
 11359                           ;lcd.c: 334: _delay((unsigned long)((1)*(12000000/4000000.0)));
 11360  011FEC  D000               	nop2		;2 cycle nop
 11361  011FEE  F000               	nop	
 11362  011FF0  0012               	return		;funcret
 11363  011FF2                     __end_of_lcd_clockH:
 11364                           	opt stack 0
 11365                           tblptru	equ	0xFF8
 11366                           tblptrh	equ	0xFF7
 11367                           tblptrl	equ	0xFF6
 11368                           tablat	equ	0xFF5
 11369                           prodh	equ	0xFF4
 11370                           prodl	equ	0xFF3
 11371                           postinc0	equ	0xFEE
 11372                           wreg	equ	0xFE8
 11373                           indf2	equ	0xFDF
 11374                           fsr2h	equ	0xFDA
 11375                           fsr2l	equ	0xFD9
 11376                           status	equ	0xFD8
 11377                           
 11378 ;; *************** function _lcd_clockE *****************
 11379 ;; Defined at:
 11380 ;;		line 347 in file "lcd.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;		None
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;		None
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  1    wreg      void 
 11387 ;; Registers used:
 11388 ;;		None
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;Total ram usage:        0 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:    2
 11401 ;; This function calls:
 11402 ;;		Nothing
 11403 ;; This function is called by:
 11404 ;;		_lcd_init
 11405 ;;		_lcd_write
 11406 ;; This function uses a non-reentrant model
 11407 ;;
 11408                           
 11409                           	psect	text64
 11410  011FC0                     __ptext64:
 11411                           	opt stack 0
 11412  011FC0                     _lcd_clockE:
 11413                           	opt stack 24
 11414                           
 11415                           ;incstack = 0
 11416  011FC0  8087               	bsf	3975,0,c	;# 
 11417                           
 11418                           ;lcd.c: 350: _delay((unsigned long)((1)*(12000000/4000000.0)));
 11419  011FC2  D000               	nop2		;2 cycle nop
 11420  011FC4  F000               	nop	
 11421  011FC6  9087               	bcf	3975,0,c	;# 
 11422                           
 11423                           ;lcd.c: 352: _delay((unsigned long)((1)*(12000000/4000000.0)));
 11424  011FC8  D000               	nop2		;2 cycle nop
 11425  011FCA  F000               	nop	
 11426  011FCC  0012               	return		;funcret
 11427  011FCE                     __end_of_lcd_clockE:
 11428                           	opt stack 0
 11429                           tblptru	equ	0xFF8
 11430                           tblptrh	equ	0xFF7
 11431                           tblptrl	equ	0xFF6
 11432                           tablat	equ	0xFF5
 11433                           prodh	equ	0xFF4
 11434                           prodl	equ	0xFF3
 11435                           postinc0	equ	0xFEE
 11436                           wreg	equ	0xFE8
 11437                           indf2	equ	0xFDF
 11438                           fsr2h	equ	0xFDA
 11439                           fsr2l	equ	0xFD9
 11440                           status	equ	0xFD8
 11441                           
 11442 ;; *************** function ___ltmod *****************
 11443 ;; Defined at:
 11444 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltmod.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;  dividend        3   18[COMRAM] unsigned um
 11447 ;;  divisor         3   21[COMRAM] unsigned um
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;  counter         1   24[COMRAM] unsigned char 
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  3   18[COMRAM] unsigned um
 11452 ;; Registers used:
 11453 ;;		wreg, status,2, status,0
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/0
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11459 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;Total ram usage:        7 bytes
 11464 ;; Hardware stack levels used:    1
 11465 ;; Hardware stack levels required when called:    2
 11466 ;; This function calls:
 11467 ;;		Nothing
 11468 ;; This function is called by:
 11469 ;;		_displ_hex
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           	psect	text65
 11474  0118CC                     __ptext65:
 11475                           	opt stack 0
 11476  0118CC                     ___ltmod:
 11477                           	opt stack 23
 11478                           
 11479                           ;incstack = 0
 11480  0118CC  5020               	movf	___ltmod@divisor,w,c
 11481  0118CE  1021               	iorwf	___ltmod@divisor+1,w,c
 11482  0118D0  1022               	iorwf	___ltmod@divisor+2,w,c
 11483  0118D2  B4D8               	btfsc	status,2,c
 11484  0118D4  D01E               	goto	l4469
 11485  0118D6  0E01               	movlw	1
 11486  0118D8  6E23               	movwf	___ltmod@counter,c
 11487  0118DA  D005               	goto	l4464
 11488  0118DC  90D8               	bcf	status,0,c
 11489  0118DE  3620               	rlcf	___ltmod@divisor,f,c
 11490  0118E0  3621               	rlcf	___ltmod@divisor+1,f,c
 11491  0118E2  3622               	rlcf	___ltmod@divisor+2,f,c
 11492  0118E4  2A23               	incf	___ltmod@counter,f,c
 11493  0118E6                     l4464:
 11494  0118E6  AE22               	btfss	___ltmod@divisor+2,7,c
 11495  0118E8  D7F9               	goto	l4465
 11496  0118EA                     u2820:
 11497  0118EA  5020               	movf	___ltmod@divisor,w,c
 11498  0118EC  5C1D               	subwf	___ltmod@dividend,w,c
 11499  0118EE  5021               	movf	___ltmod@divisor+1,w,c
 11500  0118F0  581E               	subwfb	___ltmod@dividend+1,w,c
 11501  0118F2  5022               	movf	___ltmod@divisor+2,w,c
 11502  0118F4  581F               	subwfb	___ltmod@dividend+2,w,c
 11503  0118F6  A0D8               	btfss	status,0,c
 11504  0118F8  D006               	goto	l4468
 11505  0118FA  5020               	movf	___ltmod@divisor,w,c
 11506  0118FC  5E1D               	subwf	___ltmod@dividend,f,c
 11507  0118FE  5021               	movf	___ltmod@divisor+1,w,c
 11508  011900  5A1E               	subwfb	___ltmod@dividend+1,f,c
 11509  011902  5022               	movf	___ltmod@divisor+2,w,c
 11510  011904  5A1F               	subwfb	___ltmod@dividend+2,f,c
 11511  011906                     l4468:
 11512  011906  90D8               	bcf	status,0,c
 11513  011908  3222               	rrcf	___ltmod@divisor+2,f,c
 11514  01190A  3221               	rrcf	___ltmod@divisor+1,f,c
 11515  01190C  3220               	rrcf	___ltmod@divisor,f,c
 11516  01190E  2E23               	decfsz	___ltmod@counter,f,c
 11517  011910  D7EC               	goto	u2820
 11518  011912                     l4469:
 11519  011912  C01D  F01D         	movff	___ltmod@dividend,?___ltmod
 11520  011916  C01E  F01E         	movff	___ltmod@dividend+1,?___ltmod+1
 11521  01191A  C01F  F01F         	movff	___ltmod@dividend+2,?___ltmod+2
 11522  01191E  0012               	return		;funcret
 11523  011920                     __end_of___ltmod:
 11524                           	opt stack 0
 11525                           tblptru	equ	0xFF8
 11526                           tblptrh	equ	0xFF7
 11527                           tblptrl	equ	0xFF6
 11528                           tablat	equ	0xFF5
 11529                           prodh	equ	0xFF4
 11530                           prodl	equ	0xFF3
 11531                           postinc0	equ	0xFEE
 11532                           wreg	equ	0xFE8
 11533                           indf2	equ	0xFDF
 11534                           fsr2h	equ	0xFDA
 11535                           fsr2l	equ	0xFD9
 11536                           status	equ	0xFD8
 11537                           
 11538 ;; *************** function ___ltdiv *****************
 11539 ;; Defined at:
 11540 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltdiv.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;  dividend        3   18[COMRAM] unsigned um
 11543 ;;  divisor         3   21[COMRAM] unsigned um
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;  quotient        3   24[COMRAM] unsigned um
 11546 ;;  counter         1   27[COMRAM] unsigned char 
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  3   18[COMRAM] unsigned um
 11549 ;; Registers used:
 11550 ;;		wreg, status,2, status,0
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11556 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11557 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;Total ram usage:       10 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; Hardware stack levels required when called:    2
 11563 ;; This function calls:
 11564 ;;		Nothing
 11565 ;; This function is called by:
 11566 ;;		_displ_hex
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570                           	psect	text66
 11571  01162C                     __ptext66:
 11572                           	opt stack 0
 11573  01162C                     ___ltdiv:
 11574                           	opt stack 23
 11575                           
 11576                           ;incstack = 0
 11577  01162C  0E00               	movlw	0
 11578  01162E  6E23               	movwf	___ltdiv@quotient,c
 11579  011630  0E00               	movlw	0
 11580  011632  6E24               	movwf	___ltdiv@quotient+1,c
 11581  011634  0E00               	movlw	0
 11582  011636  6E25               	movwf	___ltdiv@quotient+2,c
 11583  011638  5020               	movf	___ltdiv@divisor,w,c
 11584  01163A  1021               	iorwf	___ltdiv@divisor+1,w,c
 11585  01163C  1022               	iorwf	___ltdiv@divisor+2,w,c
 11586  01163E  B4D8               	btfsc	status,2,c
 11587  011640  D023               	goto	l4459
 11588  011642  0E01               	movlw	1
 11589  011644  6E26               	movwf	___ltdiv@counter,c
 11590  011646  D005               	goto	l4454
 11591  011648  90D8               	bcf	status,0,c
 11592  01164A  3620               	rlcf	___ltdiv@divisor,f,c
 11593  01164C  3621               	rlcf	___ltdiv@divisor+1,f,c
 11594  01164E  3622               	rlcf	___ltdiv@divisor+2,f,c
 11595  011650  2A26               	incf	___ltdiv@counter,f,c
 11596  011652                     l4454:
 11597  011652  AE22               	btfss	___ltdiv@divisor+2,7,c
 11598  011654  D7F9               	goto	l4455
 11599  011656                     u2790:
 11600  011656  90D8               	bcf	status,0,c
 11601  011658  3623               	rlcf	___ltdiv@quotient,f,c
 11602  01165A  3624               	rlcf	___ltdiv@quotient+1,f,c
 11603  01165C  3625               	rlcf	___ltdiv@quotient+2,f,c
 11604  01165E  5020               	movf	___ltdiv@divisor,w,c
 11605  011660  5C1D               	subwf	___ltdiv@dividend,w,c
 11606  011662  5021               	movf	___ltdiv@divisor+1,w,c
 11607  011664  581E               	subwfb	___ltdiv@dividend+1,w,c
 11608  011666  5022               	movf	___ltdiv@divisor+2,w,c
 11609  011668  581F               	subwfb	___ltdiv@dividend+2,w,c
 11610  01166A  A0D8               	btfss	status,0,c
 11611  01166C  D007               	goto	l4458
 11612  01166E  5020               	movf	___ltdiv@divisor,w,c
 11613  011670  5E1D               	subwf	___ltdiv@dividend,f,c
 11614  011672  5021               	movf	___ltdiv@divisor+1,w,c
 11615  011674  5A1E               	subwfb	___ltdiv@dividend+1,f,c
 11616  011676  5022               	movf	___ltdiv@divisor+2,w,c
 11617  011678  5A1F               	subwfb	___ltdiv@dividend+2,f,c
 11618  01167A  8023               	bsf	___ltdiv@quotient,0,c
 11619  01167C                     l4458:
 11620  01167C  90D8               	bcf	status,0,c
 11621  01167E  3222               	rrcf	___ltdiv@divisor+2,f,c
 11622  011680  3221               	rrcf	___ltdiv@divisor+1,f,c
 11623  011682  3220               	rrcf	___ltdiv@divisor,f,c
 11624  011684  2E26               	decfsz	___ltdiv@counter,f,c
 11625  011686  D7E7               	goto	u2790
 11626  011688                     l4459:
 11627  011688  C023  F01D         	movff	___ltdiv@quotient,?___ltdiv
 11628  01168C  C024  F01E         	movff	___ltdiv@quotient+1,?___ltdiv+1
 11629  011690  C025  F01F         	movff	___ltdiv@quotient+2,?___ltdiv+2
 11630  011694  0012               	return		;funcret
 11631  011696                     __end_of___ltdiv:
 11632                           	opt stack 0
 11633                           tblptru	equ	0xFF8
 11634                           tblptrh	equ	0xFF7
 11635                           tblptrl	equ	0xFF6
 11636                           tablat	equ	0xFF5
 11637                           prodh	equ	0xFF4
 11638                           prodl	equ	0xFF3
 11639                           postinc0	equ	0xFEE
 11640                           wreg	equ	0xFE8
 11641                           indf2	equ	0xFDF
 11642                           fsr2h	equ	0xFDA
 11643                           fsr2l	equ	0xFD9
 11644                           status	equ	0xFD8
 11645                           
 11646 ;; *************** function _credit_check *****************
 11647 ;; Defined at:
 11648 ;;		line 125 in file "vend.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;		None
 11651 ;; Auto vars:     Size  Location     Type
 11652 ;;		None
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  1    wreg      unsigned char 
 11655 ;; Registers used:
 11656 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11666 ;;Total ram usage:        0 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; Hardware stack levels required when called:    3
 11669 ;; This function calls:
 11670 ;;		_DATAEE_ReadByte
 11671 ;; This function is called by:
 11672 ;;		_displ_credit
 11673 ;;		_vend_init
 11674 ;; This function uses a non-reentrant model
 11675 ;;
 11676                           
 11677                           	psect	text67
 11678  011E20                     __ptext67:
 11679                           	opt stack 0
 11680  011E20                     _credit_check:
 11681                           	opt stack 26
 11682                           
 11683                           ;vend.c: 127: cash = DATAEE_ReadByte(credmem);
 11684                           
 11685                           ;incstack = 0
 11686  011E20  0E61               	movlw	low _credmem
 11687  011E22  6EF6               	movwf	tblptrl,c
 11688  011E24                     	if	1	;There is more than 1 active tblptr byte
 11689  011E24  0EFC               	movlw	high _credmem
 11690  011E26  6EF7               	movwf	tblptrh,c
 11691  011E28                     	endif
 11692  011E28                     	if	1	;There are 3 active tblptr bytes
 11693  011E28  0E00               	movlw	low (_credmem shr (0+16))
 11694  011E2A  6EF8               	movwf	tblptru,c
 11695  011E2C                     	endif
 11696  011E2C  0009               	tblrd		*+
 11697  011E2E  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 11698  011E32  000A               	tblrd		*-
 11699  011E34  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 11700  011E38  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
 11701  011E3C  6E3A               	movwf	_cash,c	;volatile
 11702                           
 11703                           ;vend.c: 128: return(cash);
 11704  011E3E  503A               	movf	_cash,w,c	;volatile
 11705  011E40  0012               	return	
 11706  011E42                     __end_of_credit_check:
 11707                           	opt stack 0
 11708                           tblptru	equ	0xFF8
 11709                           tblptrh	equ	0xFF7
 11710                           tblptrl	equ	0xFF6
 11711                           tablat	equ	0xFF5
 11712                           prodh	equ	0xFF4
 11713                           prodl	equ	0xFF3
 11714                           postinc0	equ	0xFEE
 11715                           wreg	equ	0xFE8
 11716                           indf2	equ	0xFDF
 11717                           fsr2h	equ	0xFDA
 11718                           fsr2l	equ	0xFD9
 11719                           status	equ	0xFD8
 11720                           
 11721 ;; *************** function _credit_subtract *****************
 11722 ;; Defined at:
 11723 ;;		line 112 in file "vend.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  credit          1    wreg     unsigned char 
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;  credit          1   22[COMRAM] unsigned char 
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  1    wreg      void 
 11730 ;; Registers used:
 11731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11741 ;;Total ram usage:        1 bytes
 11742 ;; Hardware stack levels used:    1
 11743 ;; Hardware stack levels required when called:    3
 11744 ;; This function calls:
 11745 ;;		_DATAEE_ReadByte
 11746 ;;		_DATAEE_WriteByte
 11747 ;; This function is called by:
 11748 ;;		_main
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           	psect	text68
 11753  011876                     __ptext68:
 11754                           	opt stack 0
 11755  011876                     _credit_subtract:
 11756                           	opt stack 27
 11757                           
 11758                           ;incstack = 0
 11759                           ;credit_subtract@credit stored from wreg
 11760  011876  6E21               	movwf	credit_subtract@credit,c
 11761                           
 11762                           ;vend.c: 114: cash = DATAEE_ReadByte(credmem);
 11763  011878  0E61               	movlw	low _credmem
 11764  01187A  6EF6               	movwf	tblptrl,c
 11765  01187C                     	if	1	;There is more than 1 active tblptr byte
 11766  01187C  0EFC               	movlw	high _credmem
 11767  01187E  6EF7               	movwf	tblptrh,c
 11768  011880                     	endif
 11769  011880                     	if	1	;There are 3 active tblptr bytes
 11770  011880  0E00               	movlw	low (_credmem shr (0+16))
 11771  011882  6EF8               	movwf	tblptru,c
 11772  011884                     	endif
 11773  011884  0009               	tblrd		*+
 11774  011886  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 11775  01188A  000A               	tblrd		*-
 11776  01188C  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 11777  011890  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
 11778  011894  6E3A               	movwf	_cash,c	;volatile
 11779                           
 11780                           ;vend.c: 115: cash = (cash - credit) & 0xFF;
 11781  011896  5021               	movf	credit_subtract@credit,w,c
 11782  011898  0800               	sublw	0
 11783  01189A  243A               	addwf	_cash,w,c	;volatile
 11784  01189C  6E3A               	movwf	_cash,c	;volatile
 11785                           
 11786                           ;vend.c: 116: DATAEE_WriteByte(credmem, cash);
 11787  01189E  0E61               	movlw	low _credmem
 11788  0118A0  6EF6               	movwf	tblptrl,c
 11789  0118A2                     	if	1	;There is more than 1 active tblptr byte
 11790  0118A2  0EFC               	movlw	high _credmem
 11791  0118A4  6EF7               	movwf	tblptrh,c
 11792  0118A6                     	endif
 11793  0118A6                     	if	1	;There are 3 active tblptr bytes
 11794  0118A6  0E00               	movlw	low (_credmem shr (0+16))
 11795  0118A8  6EF8               	movwf	tblptru,c
 11796  0118AA                     	endif
 11797  0118AA  0009               	tblrd		*+
 11798  0118AC  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 11799  0118B0  000A               	tblrd		*-
 11800  0118B2  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 11801  0118B6  C03A  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
 11802  0118BA  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
 11803                           
 11804                           ;vend.c: 117: if(cash == 0)
 11805  0118BE  503A               	movf	_cash,w,c	;volatile
 11806  0118C0  A4D8               	btfss	status,2,c
 11807  0118C2  0012               	return	
 11808                           
 11809                           ;vend.c: 118: {
 11810                           ;vend.c: 119: venflags.iscredit = 0;
 11811  0118C4  902E               	bcf	_venflags,0,c
 11812                           
 11813                           ;vend.c: 120: venflags.inscoin = 1;
 11814  0118C6  842E               	bsf	_venflags,2,c
 11815                           
 11816                           ;vend.c: 121: venflags.credisplay = 0;
 11817  0118C8  982E               	bcf	_venflags,4,c
 11818  0118CA  0012               	return	
 11819  0118CC                     __end_of_credit_subtract:
 11820                           	opt stack 0
 11821                           tblptru	equ	0xFF8
 11822                           tblptrh	equ	0xFF7
 11823                           tblptrl	equ	0xFF6
 11824                           tablat	equ	0xFF5
 11825                           prodh	equ	0xFF4
 11826                           prodl	equ	0xFF3
 11827                           postinc0	equ	0xFEE
 11828                           wreg	equ	0xFE8
 11829                           indf2	equ	0xFDF
 11830                           fsr2h	equ	0xFDA
 11831                           fsr2l	equ	0xFD9
 11832                           status	equ	0xFD8
 11833                           
 11834 ;; *************** function _credit_add *****************
 11835 ;; Defined at:
 11836 ;;		line 97 in file "vend.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  credit          1    wreg     unsigned char 
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;  credit          1   29[COMRAM] unsigned char 
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  1    wreg      void 
 11843 ;; Registers used:
 11844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/0
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11854 ;;Total ram usage:        1 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:    5
 11857 ;; This function calls:
 11858 ;;		_DATAEE_ReadByte
 11859 ;;		_DATAEE_WriteByte
 11860 ;;		_Update_cashaudit
 11861 ;; This function is called by:
 11862 ;;		_main
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text69
 11867  0117C6                     __ptext69:
 11868                           	opt stack 0
 11869  0117C6                     _credit_add:
 11870                           	opt stack 25
 11871                           
 11872                           ;incstack = 0
 11873                           ;credit_add@credit stored from wreg
 11874  0117C6  6E28               	movwf	credit_add@credit,c
 11875                           
 11876                           ;vend.c: 99: cash = DATAEE_ReadByte(credmem);
 11877  0117C8  0E61               	movlw	low _credmem
 11878  0117CA  6EF6               	movwf	tblptrl,c
 11879  0117CC                     	if	1	;There is more than 1 active tblptr byte
 11880  0117CC  0EFC               	movlw	high _credmem
 11881  0117CE  6EF7               	movwf	tblptrh,c
 11882  0117D0                     	endif
 11883  0117D0                     	if	1	;There are 3 active tblptr bytes
 11884  0117D0  0E00               	movlw	low (_credmem shr (0+16))
 11885  0117D2  6EF8               	movwf	tblptru,c
 11886  0117D4                     	endif
 11887  0117D4  0009               	tblrd		*+
 11888  0117D6  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 11889  0117DA  000A               	tblrd		*-
 11890  0117DC  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 11891  0117E0  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
 11892  0117E4  6E3A               	movwf	_cash,c	;volatile
 11893                           
 11894                           ;vend.c: 100: cash = cash + credit;
 11895  0117E6  503A               	movf	_cash,w,c	;volatile
 11896  0117E8  2428               	addwf	credit_add@credit,w,c
 11897  0117EA  6E3A               	movwf	_cash,c	;volatile
 11898                           
 11899                           ;vend.c: 101: DATAEE_WriteByte(credmem, cash);
 11900  0117EC  0E61               	movlw	low _credmem
 11901  0117EE  6EF6               	movwf	tblptrl,c
 11902  0117F0                     	if	1	;There is more than 1 active tblptr byte
 11903  0117F0  0EFC               	movlw	high _credmem
 11904  0117F2  6EF7               	movwf	tblptrh,c
 11905  0117F4                     	endif
 11906  0117F4                     	if	1	;There are 3 active tblptr bytes
 11907  0117F4  0E00               	movlw	low (_credmem shr (0+16))
 11908  0117F6  6EF8               	movwf	tblptru,c
 11909  0117F8                     	endif
 11910  0117F8  0009               	tblrd		*+
 11911  0117FA  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 11912  0117FE  000A               	tblrd		*-
 11913  011800  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 11914  011804  C03A  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
 11915  011808  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
 11916                           
 11917                           ;vend.c: 102: if(cash != 0)
 11918  01180C  503A               	movf	_cash,w,c	;volatile
 11919  01180E  B4D8               	btfsc	status,2,c
 11920  011810  D003               	goto	l2022
 11921                           
 11922                           ;vend.c: 103: {
 11923                           ;vend.c: 104: venflags.iscredit = 1;
 11924  011812  802E               	bsf	_venflags,0,c
 11925                           
 11926                           ;vend.c: 105: venflags.inscoin = 0;
 11927  011814  942E               	bcf	_venflags,2,c
 11928                           
 11929                           ;vend.c: 106: venflags.credisplay = 1;
 11930  011816  882E               	bsf	_venflags,4,c
 11931  011818                     l2022:
 11932                           
 11933                           ;vend.c: 108: }
 11934                           ;vend.c: 109: Update_cashaudit(credit);
 11935  011818  5028               	movf	credit_add@credit,w,c
 11936  01181A  ECD1  F085         	call	_Update_cashaudit
 11937  01181E  0012               	return		;funcret
 11938  011820                     __end_of_credit_add:
 11939                           	opt stack 0
 11940                           tblptru	equ	0xFF8
 11941                           tblptrh	equ	0xFF7
 11942                           tblptrl	equ	0xFF6
 11943                           tablat	equ	0xFF5
 11944                           prodh	equ	0xFF4
 11945                           prodl	equ	0xFF3
 11946                           postinc0	equ	0xFEE
 11947                           wreg	equ	0xFE8
 11948                           indf2	equ	0xFDF
 11949                           fsr2h	equ	0xFDA
 11950                           fsr2l	equ	0xFD9
 11951                           status	equ	0xFD8
 11952                           
 11953 ;; *************** function _Update_cashaudit *****************
 11954 ;; Defined at:
 11955 ;;		line 82 in file "vend.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;  addcash         1    wreg     unsigned char 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;  addcash         1   28[COMRAM] unsigned char 
 11960 ;; Return value:  Size  Location     Type
 11961 ;;                  1    wreg      void 
 11962 ;; Registers used:
 11963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11964 ;; Tracked objects:
 11965 ;;		On entry : 0/0
 11966 ;;		On exit  : 0/0
 11967 ;;		Unchanged: 0/0
 11968 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11973 ;;Total ram usage:        1 bytes
 11974 ;; Hardware stack levels used:    1
 11975 ;; Hardware stack levels required when called:    4
 11976 ;; This function calls:
 11977 ;;		_Read_NVstore
 11978 ;;		_Write_NVstore
 11979 ;; This function is called by:
 11980 ;;		_credit_add
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984                           	psect	text70
 11985  010BA2                     __ptext70:
 11986                           	opt stack 0
 11987  010BA2                     _Update_cashaudit:
 11988                           	opt stack 25
 11989                           
 11990                           ;incstack = 0
 11991                           ;Update_cashaudit@addcash stored from wreg
 11992  010BA2  6E27               	movwf	Update_cashaudit@addcash,c
 11993                           
 11994                           ;vend.c: 84: Read_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 11995  010BA4  0E5F               	movlw	low _cashinv
 11996  010BA6  6EF6               	movwf	tblptrl,c
 11997  010BA8                     	if	1	;There is more than 1 active tblptr byte
 11998  010BA8  0EFC               	movlw	high _cashinv
 11999  010BAA  6EF7               	movwf	tblptrh,c
 12000  010BAC                     	endif
 12001  010BAC                     	if	1	;There are 3 active tblptr bytes
 12002  010BAC  0E00               	movlw	low (_cashinv shr (0+16))
 12003  010BAE  6EF8               	movwf	tblptru,c
 12004  010BB0                     	endif
 12005  010BB0  0009               	tblrd		*+
 12006  010BB2  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 12007  010BB6  000A               	tblrd		*-
 12008  010BB8  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 12009  010BBC  0E4A               	movlw	low _pvcash
 12010  010BBE  6E21               	movwf	Read_NVstore@storemem,c
 12011  010BC0  0E00               	movlw	high _pvcash
 12012  010BC2  6E22               	movwf	Read_NVstore@storemem+1,c
 12013  010BC4  0E02               	movlw	2
 12014  010BC6  6E23               	movwf	Read_NVstore@storesize,c
 12015  010BC8  EC44  F08E         	call	_Read_NVstore	;wreg free
 12016                           
 12017                           ;vend.c: 85: Read_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 12018  010BCC  0E5D               	movlw	low _cashint
 12019  010BCE  6EF6               	movwf	tblptrl,c
 12020  010BD0                     	if	1	;There is more than 1 active tblptr byte
 12021  010BD0  0EFC               	movlw	high _cashint
 12022  010BD2  6EF7               	movwf	tblptrh,c
 12023  010BD4                     	endif
 12024  010BD4                     	if	1	;There are 3 active tblptr bytes
 12025  010BD4  0E00               	movlw	low (_cashint shr (0+16))
 12026  010BD6  6EF8               	movwf	tblptru,c
 12027  010BD8                     	endif
 12028  010BD8  0009               	tblrd		*+
 12029  010BDA  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 12030  010BDE  000A               	tblrd		*-
 12031  010BE0  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 12032  010BE4  0E47               	movlw	low _pnvcash
 12033  010BE6  6E21               	movwf	Read_NVstore@storemem,c
 12034  010BE8  0E00               	movlw	high _pnvcash
 12035  010BEA  6E22               	movwf	Read_NVstore@storemem+1,c
 12036  010BEC  0E03               	movlw	3
 12037  010BEE  6E23               	movwf	Read_NVstore@storesize,c
 12038  010BF0  EC44  F08E         	call	_Read_NVstore	;wreg free
 12039                           
 12040                           ;vend.c: 87: pvcash = pvcash + (uint16_t)addcash;
 12041  010BF4  5027               	movf	Update_cashaudit@addcash,w,c
 12042  010BF6  244A               	addwf	_pvcash,w,c	;volatile
 12043  010BF8  6E4A               	movwf	_pvcash,c	;volatile
 12044  010BFA  0E00               	movlw	0
 12045  010BFC  204B               	addwfc	_pvcash+1,w,c	;volatile
 12046  010BFE  6E4B               	movwf	_pvcash+1,c	;volatile
 12047                           
 12048                           ;vend.c: 89: pnvcash = pnvcash + (uint24_t)addcash;
 12049  010C00  5027               	movf	Update_cashaudit@addcash,w,c
 12050  010C02  2447               	addwf	_pnvcash,w,c	;volatile
 12051  010C04  6E47               	movwf	_pnvcash,c	;volatile
 12052  010C06  0E00               	movlw	0
 12053  010C08  2048               	addwfc	_pnvcash+1,w,c	;volatile
 12054  010C0A  6E48               	movwf	_pnvcash+1,c	;volatile
 12055  010C0C  0E00               	movlw	0
 12056  010C0E  2049               	addwfc	_pnvcash+2,w,c	;volatile
 12057  010C10  6E49               	movwf	_pnvcash+2,c	;volatile
 12058                           
 12059                           ;vend.c: 91: Write_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 12060  010C12  0E5F               	movlw	low _cashinv
 12061  010C14  6EF6               	movwf	tblptrl,c
 12062  010C16                     	if	1	;There is more than 1 active tblptr byte
 12063  010C16  0EFC               	movlw	high _cashinv
 12064  010C18  6EF7               	movwf	tblptrh,c
 12065  010C1A                     	endif
 12066  010C1A                     	if	1	;There are 3 active tblptr bytes
 12067  010C1A  0E00               	movlw	low (_cashinv shr (0+16))
 12068  010C1C  6EF8               	movwf	tblptru,c
 12069  010C1E                     	endif
 12070  010C1E  0009               	tblrd		*+
 12071  010C20  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 12072  010C24  000A               	tblrd		*-
 12073  010C26  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 12074  010C2A  0E4A               	movlw	low _pvcash
 12075  010C2C  6E23               	movwf	Write_NVstore@storemem,c
 12076  010C2E  0E00               	movlw	high _pvcash
 12077  010C30  6E24               	movwf	Write_NVstore@storemem+1,c
 12078  010C32  0E02               	movlw	2
 12079  010C34  6E25               	movwf	Write_NVstore@storesize,c
 12080  010C36  ECD8  F08E         	call	_Write_NVstore	;wreg free
 12081                           
 12082                           ;vend.c: 92: Write_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 12083  010C3A  0E5D               	movlw	low _cashint
 12084  010C3C  6EF6               	movwf	tblptrl,c
 12085  010C3E                     	if	1	;There is more than 1 active tblptr byte
 12086  010C3E  0EFC               	movlw	high _cashint
 12087  010C40  6EF7               	movwf	tblptrh,c
 12088  010C42                     	endif
 12089  010C42                     	if	1	;There are 3 active tblptr bytes
 12090  010C42  0E00               	movlw	low (_cashint shr (0+16))
 12091  010C44  6EF8               	movwf	tblptru,c
 12092  010C46                     	endif
 12093  010C46  0009               	tblrd		*+
 12094  010C48  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 12095  010C4C  000A               	tblrd		*-
 12096  010C4E  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 12097  010C52  0E47               	movlw	low _pnvcash
 12098  010C54  6E23               	movwf	Write_NVstore@storemem,c
 12099  010C56  0E00               	movlw	high _pnvcash
 12100  010C58  6E24               	movwf	Write_NVstore@storemem+1,c
 12101  010C5A  0E03               	movlw	3
 12102  010C5C  6E25               	movwf	Write_NVstore@storesize,c
 12103  010C5E  ECD8  F08E         	call	_Write_NVstore	;wreg free
 12104  010C62  F000               	nop		;# 
 12105  010C64  0012               	return		;funcret
 12106  010C66                     __end_of_Update_cashaudit:
 12107                           	opt stack 0
 12108                           tblptru	equ	0xFF8
 12109                           tblptrh	equ	0xFF7
 12110                           tblptrl	equ	0xFF6
 12111                           tablat	equ	0xFF5
 12112                           prodh	equ	0xFF4
 12113                           prodl	equ	0xFF3
 12114                           postinc0	equ	0xFEE
 12115                           wreg	equ	0xFE8
 12116                           indf2	equ	0xFDF
 12117                           fsr2h	equ	0xFDA
 12118                           fsr2l	equ	0xFD9
 12119                           status	equ	0xFD8
 12120                           
 12121 ;; *************** function _Write_NVstore *****************
 12122 ;; Defined at:
 12123 ;;		line 62 in file "vend.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;  storeadd        2   22[COMRAM] unsigned int 
 12126 ;;  storemem        2   24[COMRAM] PTR unsigned char 
 12127 ;;		 -> pnvcash(3), pvcash(2), 
 12128 ;;  storesize       1   26[COMRAM] unsigned char 
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;  i               1   27[COMRAM] unsigned char 
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      void 
 12133 ;; Registers used:
 12134 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12140 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12144 ;;Total ram usage:        6 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    3
 12147 ;; This function calls:
 12148 ;;		_DATAEE_WriteByte
 12149 ;; This function is called by:
 12150 ;;		_Update_cashaudit
 12151 ;;		_Update_coinsout
 12152 ;; This function uses a non-reentrant model
 12153 ;;
 12154                           
 12155                           	psect	text71
 12156  011DB0                     __ptext71:
 12157                           	opt stack 0
 12158  011DB0                     _Write_NVstore:
 12159                           	opt stack 25
 12160                           
 12161                           ;vend.c: 64: uint8_t i = 0;
 12162                           
 12163                           ;incstack = 0
 12164  011DB0  0E00               	movlw	0
 12165  011DB2  6E26               	movwf	Write_NVstore@i,c
 12166                           
 12167                           ;vend.c: 65: while(i < storesize)
 12168  011DB4  D00C               	goto	l2007
 12169  011DB6                     
 12170                           ;vend.c: 66: {
 12171                           ;vend.c: 67: DATAEE_WriteByte(storeadd, storemem + i);
 12172  011DB6  C021  F01D         	movff	Write_NVstore@storeadd,DATAEE_WriteByte@bAdd
 12173  011DBA  C022  F01E         	movff	Write_NVstore@storeadd+1,DATAEE_WriteByte@bAdd+1
 12174  011DBE  5026               	movf	Write_NVstore@i,w,c
 12175  011DC0  0D01               	mullw	1
 12176  011DC2  5023               	movf	Write_NVstore@storemem,w,c
 12177  011DC4  24F3               	addwf	prodl,w,c
 12178  011DC6  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12179  011DC8  EC85  F08D         	call	_DATAEE_WriteByte	;wreg free
 12180                           
 12181                           ;vend.c: 68: i++;
 12182  011DCC  2A26               	incf	Write_NVstore@i,f,c
 12183  011DCE                     l2007:
 12184  011DCE  5025               	movf	Write_NVstore@storesize,w,c
 12185  011DD0  5C26               	subwf	Write_NVstore@i,w,c
 12186  011DD2  B0D8               	btfsc	status,0,c
 12187  011DD4  0012               	return	
 12188  011DD6  D7EF               	goto	l2008
 12189  011DD8                     __end_of_Write_NVstore:
 12190                           	opt stack 0
 12191                           tblptru	equ	0xFF8
 12192                           tblptrh	equ	0xFF7
 12193                           tblptrl	equ	0xFF6
 12194                           tablat	equ	0xFF5
 12195                           prodh	equ	0xFF4
 12196                           prodl	equ	0xFF3
 12197                           postinc0	equ	0xFEE
 12198                           wreg	equ	0xFE8
 12199                           indf2	equ	0xFDF
 12200                           fsr2h	equ	0xFDA
 12201                           fsr2l	equ	0xFD9
 12202                           status	equ	0xFD8
 12203                           
 12204 ;; *************** function _DATAEE_WriteByte *****************
 12205 ;; Defined at:
 12206 ;;		line 169 in file "mcc_generated_files/memory.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;  bAdd            2   18[COMRAM] unsigned int 
 12209 ;;  bData           1   20[COMRAM] unsigned char 
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  1    wreg      void 
 12214 ;; Registers used:
 12215 ;;		wreg, status,2, status,0
 12216 ;; Tracked objects:
 12217 ;;		On entry : 0/0
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12221 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12225 ;;Total ram usage:        4 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    2
 12228 ;; This function calls:
 12229 ;;		Nothing
 12230 ;; This function is called by:
 12231 ;;		_displ_sens
 12232 ;;		_Write_NVstore
 12233 ;;		_credit_add
 12234 ;;		_credit_subtract
 12235 ;;		_Update_Hopcoin
 12236 ;;		_Clear_cred
 12237 ;;		_set_price
 12238 ;;		_Vend_timeset
 12239 ;;		_Link_chan
 12240 ;;		_off_sens
 12241 ;;		_Reset_settings
 12242 ;;		_save_notes
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text72
 12247  011B0A                     __ptext72:
 12248                           	opt stack 0
 12249  011B0A                     _DATAEE_WriteByte:
 12250                           	opt stack 24
 12251                           
 12252                           ;memory.c: 171: uint8_t GIEBitValue = INTCONbits.GIE;
 12253                           
 12254                           ;incstack = 0
 12255  011B0A  0E00               	movlw	0
 12256  011B0C  BEF2               	btfsc	intcon,7,c	;volatile
 12257  011B0E  0E01               	movlw	1
 12258  011B10  6E20               	movwf	DATAEE_WriteByte@GIEBitValue,c
 12259                           
 12260                           ;memory.c: 173: NVMADRH = ((bAdd >> 8) & 0x03);
 12261  011B12  501E               	movf	DATAEE_WriteByte@bAdd+1,w,c
 12262  011B14  0B03               	andlw	3
 12263  011B16  6E7F               	movwf	3967,c	;volatile
 12264                           
 12265                           ;memory.c: 174: NVMADRL = (bAdd & 0xFF);
 12266  011B18  C01D  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
 12267                           
 12268                           ;memory.c: 175: NVMDAT = bData;
 12269  011B1C  C01F  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
 12270                           
 12271                           ;memory.c: 176: NVMCON1bits.NVMREG = 0;
 12272  011B20  0E3F               	movlw	-193
 12273  011B22  1681               	andwf	3969,f,c	;volsfr
 12274                           
 12275                           ;memory.c: 177: NVMCON1bits.WREN = 1;
 12276  011B24  8481               	bsf	3969,2,c	;volsfr
 12277                           
 12278                           ;memory.c: 178: INTCONbits.GIE = 0;
 12279  011B26  9EF2               	bcf	intcon,7,c	;volatile
 12280                           
 12281                           ;memory.c: 179: NVMCON2 = 0x55;
 12282  011B28  0E55               	movlw	85
 12283  011B2A  6E82               	movwf	3970,c	;volsfr
 12284                           
 12285                           ;memory.c: 180: NVMCON2 = 0xAA;
 12286  011B2C  0EAA               	movlw	170
 12287  011B2E  6E82               	movwf	3970,c	;volsfr
 12288                           
 12289                           ;memory.c: 181: NVMCON1bits.WR = 1;
 12290  011B30  8281               	bsf	3969,1,c	;volsfr
 12291  011B32                     
 12292                           ;memory.c: 184: {
 12293  011B32  B281               	btfsc	3969,1,c	;volsfr
 12294  011B34  D7FE               	goto	l245
 12295                           
 12296                           ;memory.c: 185: }
 12297                           ;memory.c: 187: NVMCON1bits.WREN = 0;
 12298  011B36  9481               	bcf	3969,2,c	;volsfr
 12299                           
 12300                           ;memory.c: 188: INTCONbits.GIE = GIEBitValue;
 12301  011B38  B020               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
 12302  011B3A  D002               	bra	u2945
 12303  011B3C  9EF2               	bcf	intcon,7,c	;volatile
 12304  011B3E  D001               	bra	u2946
 12305  011B40                     u2945:
 12306  011B40  8EF2               	bsf	intcon,7,c	;volatile
 12307  011B42                     u2946:
 12308  011B42  0012               	return		;funcret
 12309  011B44                     __end_of_DATAEE_WriteByte:
 12310                           	opt stack 0
 12311                           tblptru	equ	0xFF8
 12312                           tblptrh	equ	0xFF7
 12313                           tblptrl	equ	0xFF6
 12314                           tablat	equ	0xFF5
 12315                           prodh	equ	0xFF4
 12316                           prodl	equ	0xFF3
 12317                           intcon	equ	0xFF2
 12318                           postinc0	equ	0xFEE
 12319                           wreg	equ	0xFE8
 12320                           indf2	equ	0xFDF
 12321                           fsr2h	equ	0xFDA
 12322                           fsr2l	equ	0xFD9
 12323                           status	equ	0xFD8
 12324                           
 12325 ;; *************** function _Read_NVstore *****************
 12326 ;; Defined at:
 12327 ;;		line 72 in file "vend.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;  storeadd        2   20[COMRAM] unsigned int 
 12330 ;;  storemem        2   22[COMRAM] PTR unsigned char 
 12331 ;;		 -> pnvcash(3), pvcash(2), 
 12332 ;;  storesize       1   24[COMRAM] unsigned char 
 12333 ;; Auto vars:     Size  Location     Type
 12334 ;;  i               1   25[COMRAM] unsigned char 
 12335 ;; Return value:  Size  Location     Type
 12336 ;;                  1    wreg      void 
 12337 ;; Registers used:
 12338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12339 ;; Tracked objects:
 12340 ;;		On entry : 0/0
 12341 ;;		On exit  : 0/0
 12342 ;;		Unchanged: 0/0
 12343 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12344 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;Total ram usage:        6 bytes
 12349 ;; Hardware stack levels used:    1
 12350 ;; Hardware stack levels required when called:    3
 12351 ;; This function calls:
 12352 ;;		_DATAEE_ReadByte
 12353 ;; This function is called by:
 12354 ;;		_Update_cashaudit
 12355 ;;		_Update_coinsout
 12356 ;; This function uses a non-reentrant model
 12357 ;;
 12358                           
 12359                           	psect	text73
 12360  011C88                     __ptext73:
 12361                           	opt stack 0
 12362  011C88                     _Read_NVstore:
 12363                           	opt stack 25
 12364                           
 12365                           ;vend.c: 74: uint8_t i = 0;
 12366                           
 12367                           ;incstack = 0
 12368  011C88  0E00               	movlw	0
 12369  011C8A  6E24               	movwf	Read_NVstore@i,c
 12370                           
 12371                           ;vend.c: 75: while(i < storesize)
 12372  011C8C  D012               	goto	l2013
 12373  011C8E                     
 12374                           ;vend.c: 76: {
 12375                           ;vend.c: 77: storemem[i] = DATAEE_ReadByte(storeadd + i);
 12376  011C8E  5024               	movf	Read_NVstore@i,w,c
 12377  011C90  0D01               	mullw	1
 12378  011C92  50F3               	movf	prodl,w,c
 12379  011C94  2421               	addwf	Read_NVstore@storemem,w,c
 12380  011C96  6ED9               	movwf	fsr2l,c
 12381  011C98  50F4               	movf	prodh,w,c
 12382  011C9A  2022               	addwfc	Read_NVstore@storemem+1,w,c
 12383  011C9C  6EDA               	movwf	fsr2h,c
 12384  011C9E  5024               	movf	Read_NVstore@i,w,c
 12385  011CA0  241F               	addwf	Read_NVstore@storeadd,w,c
 12386  011CA2  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 12387  011CA4  0E00               	movlw	0
 12388  011CA6  2020               	addwfc	Read_NVstore@storeadd+1,w,c
 12389  011CA8  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 12390  011CAA  EC76  F08F         	call	_DATAEE_ReadByte	;wreg free
 12391  011CAE  6EDF               	movwf	indf2,c
 12392                           
 12393                           ;vend.c: 78: i++;
 12394  011CB0  2A24               	incf	Read_NVstore@i,f,c
 12395  011CB2                     l2013:
 12396  011CB2  5023               	movf	Read_NVstore@storesize,w,c
 12397  011CB4  5C24               	subwf	Read_NVstore@i,w,c
 12398  011CB6  B0D8               	btfsc	status,0,c
 12399  011CB8  0012               	return	
 12400  011CBA  D7E9               	goto	l2014
 12401  011CBC                     __end_of_Read_NVstore:
 12402                           	opt stack 0
 12403                           tblptru	equ	0xFF8
 12404                           tblptrh	equ	0xFF7
 12405                           tblptrl	equ	0xFF6
 12406                           tablat	equ	0xFF5
 12407                           prodh	equ	0xFF4
 12408                           prodl	equ	0xFF3
 12409                           intcon	equ	0xFF2
 12410                           postinc0	equ	0xFEE
 12411                           wreg	equ	0xFE8
 12412                           indf2	equ	0xFDF
 12413                           fsr2h	equ	0xFDA
 12414                           fsr2l	equ	0xFD9
 12415                           status	equ	0xFD8
 12416                           
 12417 ;; *************** function _DATAEE_ReadByte *****************
 12418 ;; Defined at:
 12419 ;;		line 191 in file "mcc_generated_files/memory.c"
 12420 ;; Parameters:    Size  Location     Type
 12421 ;;  bAdd            2   18[COMRAM] unsigned int 
 12422 ;; Auto vars:     Size  Location     Type
 12423 ;;		None
 12424 ;; Return value:  Size  Location     Type
 12425 ;;                  1    wreg      unsigned char 
 12426 ;; Registers used:
 12427 ;;		wreg, status,2, status,0
 12428 ;; Tracked objects:
 12429 ;;		On entry : 0/0
 12430 ;;		On exit  : 0/0
 12431 ;;		Unchanged: 0/0
 12432 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12437 ;;Total ram usage:        2 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:    2
 12440 ;; This function calls:
 12441 ;;		Nothing
 12442 ;; This function is called by:
 12443 ;;		_main
 12444 ;;		_Init_vendmem
 12445 ;;		_vend_init
 12446 ;;		_Read_NVstore
 12447 ;;		_credit_add
 12448 ;;		_credit_subtract
 12449 ;;		_credit_check
 12450 ;;		_Hopper_coin
 12451 ;;		_set_price
 12452 ;;		_Vend_timeset
 12453 ;;		_Link_chan
 12454 ;;		_off_sens
 12455 ;;		_mdb_init
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           	psect	text74
 12460  011EEC                     __ptext74:
 12461                           	opt stack 0
 12462  011EEC                     _DATAEE_ReadByte:
 12463                           	opt stack 26
 12464                           
 12465                           ;memory.c: 193: NVMADRH = ((bAdd >> 8) & 0x03);
 12466                           
 12467                           ;incstack = 0
 12468  011EEC  501E               	movf	DATAEE_ReadByte@bAdd+1,w,c
 12469  011EEE  0B03               	andlw	3
 12470  011EF0  6E7F               	movwf	3967,c	;volatile
 12471                           
 12472                           ;memory.c: 194: NVMADRL = (bAdd & 0xFF);
 12473  011EF2  C01D  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
 12474                           
 12475                           ;memory.c: 195: NVMCON1bits.NVMREG = 0;
 12476  011EF6  0E3F               	movlw	-193
 12477  011EF8  1681               	andwf	3969,f,c	;volsfr
 12478                           
 12479                           ;memory.c: 196: NVMCON1bits.RD = 1;
 12480  011EFA  8081               	bsf	3969,0,c	;volsfr
 12481                           
 12482                           ;memory.c: 197: __nop();
 12483  011EFC  F000               	nop	
 12484                           
 12485                           ;memory.c: 198: __nop();
 12486  011EFE  F000               	nop	
 12487                           
 12488                           ;memory.c: 200: return (NVMDAT);
 12489  011F00  5080               	movf	3968,w,c	;volatile
 12490  011F02  0012               	return	
 12491  011F04                     __end_of_DATAEE_ReadByte:
 12492                           	opt stack 0
 12493                           tblptru	equ	0xFF8
 12494                           tblptrh	equ	0xFF7
 12495                           tblptrl	equ	0xFF6
 12496                           tablat	equ	0xFF5
 12497                           prodh	equ	0xFF4
 12498                           prodl	equ	0xFF3
 12499                           intcon	equ	0xFF2
 12500                           postinc0	equ	0xFEE
 12501                           wreg	equ	0xFE8
 12502                           indf2	equ	0xFDF
 12503                           fsr2h	equ	0xFDA
 12504                           fsr2l	equ	0xFD9
 12505                           status	equ	0xFD8
 12506                           
 12507 ;; *************** function _SYSTEM_Initialize *****************
 12508 ;; Defined at:
 12509 ;;		line 116 in file "mcc_generated_files/mcc.c"
 12510 ;; Parameters:    Size  Location     Type
 12511 ;;		None
 12512 ;; Auto vars:     Size  Location     Type
 12513 ;;		None
 12514 ;; Return value:  Size  Location     Type
 12515 ;;                  1    wreg      void 
 12516 ;; Registers used:
 12517 ;;		wreg, status,2, status,0, cstack
 12518 ;; Tracked objects:
 12519 ;;		On entry : 0/0
 12520 ;;		On exit  : 0/0
 12521 ;;		Unchanged: 0/0
 12522 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12527 ;;Total ram usage:        0 bytes
 12528 ;; Hardware stack levels used:    1
 12529 ;; Hardware stack levels required when called:    3
 12530 ;; This function calls:
 12531 ;;		_CMP1_Initialize
 12532 ;;		_DAC1_Initialize
 12533 ;;		_EUSART1_Initialize
 12534 ;;		_INTERRUPT_Initialize
 12535 ;;		_OSCILLATOR_Initialize
 12536 ;;		_PIN_MANAGER_Initialize
 12537 ;;		_PMD_Initialize
 12538 ;;		_TMR0_Initialize
 12539 ;;		_TMR1_Initialize
 12540 ;;		_TMR2_Initialize
 12541 ;;		_TMR3_Initialize
 12542 ;;		_TMR4_Initialize
 12543 ;;		_TMR5_Initialize
 12544 ;; This function is called by:
 12545 ;;		_main
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text75
 12550  011B7C                     __ptext75:
 12551                           	opt stack 0
 12552  011B7C                     _SYSTEM_Initialize:
 12553                           	opt stack 27
 12554                           
 12555                           ;mcc.c: 118: INTERRUPT_Initialize();
 12556                           
 12557                           ;incstack = 0
 12558  011B7C  ECF9  F08F         	call	_INTERRUPT_Initialize	;wreg free
 12559                           
 12560                           ;mcc.c: 119: PMD_Initialize();
 12561  011B80  EC5C  F08F         	call	_PMD_Initialize	;wreg free
 12562                           
 12563                           ;mcc.c: 120: PIN_MANAGER_Initialize();
 12564  011B84  EC67  F08A         	call	_PIN_MANAGER_Initialize	;wreg free
 12565                           
 12566                           ;mcc.c: 121: OSCILLATOR_Initialize();
 12567  011B88  EC82  F08F         	call	_OSCILLATOR_Initialize	;wreg free
 12568                           
 12569                           ;mcc.c: 122: CMP1_Initialize();
 12570  011B8C  ECAF  F08F         	call	_CMP1_Initialize	;wreg free
 12571                           
 12572                           ;mcc.c: 123: TMR3_Initialize();
 12573  011B90  ECF4  F08D         	call	_TMR3_Initialize	;wreg free
 12574                           
 12575                           ;mcc.c: 124: TMR4_Initialize();
 12576  011B94  EC4E  F08F         	call	_TMR4_Initialize	;wreg free
 12577                           
 12578                           ;mcc.c: 125: DAC1_Initialize();
 12579  011B98  ECE7  F08F         	call	_DAC1_Initialize	;wreg free
 12580                           
 12581                           ;mcc.c: 126: TMR2_Initialize();
 12582  011B9C  EC31  F08F         	call	_TMR2_Initialize	;wreg free
 12583                           
 12584                           ;mcc.c: 127: TMR5_Initialize();
 12585  011BA0  ECD9  F08D         	call	_TMR5_Initialize	;wreg free
 12586                           
 12587                           ;mcc.c: 128: TMR1_Initialize();
 12588  011BA4  EC0F  F08E         	call	_TMR1_Initialize	;wreg free
 12589                           
 12590                           ;mcc.c: 129: TMR0_Initialize();
 12591  011BA8  ECC1  F08E         	call	_TMR0_Initialize	;wreg free
 12592                           
 12593                           ;mcc.c: 130: EUSART1_Initialize();
 12594  011BAC  ECA4  F08F         	call	_EUSART1_Initialize	;wreg free
 12595  011BB0  0012               	return		;funcret
 12596  011BB2                     __end_of_SYSTEM_Initialize:
 12597                           	opt stack 0
 12598                           tblptru	equ	0xFF8
 12599                           tblptrh	equ	0xFF7
 12600                           tblptrl	equ	0xFF6
 12601                           tablat	equ	0xFF5
 12602                           prodh	equ	0xFF4
 12603                           prodl	equ	0xFF3
 12604                           intcon	equ	0xFF2
 12605                           postinc0	equ	0xFEE
 12606                           wreg	equ	0xFE8
 12607                           indf2	equ	0xFDF
 12608                           fsr2h	equ	0xFDA
 12609                           fsr2l	equ	0xFD9
 12610                           status	equ	0xFD8
 12611                           
 12612 ;; *************** function _TMR5_Initialize *****************
 12613 ;; Defined at:
 12614 ;;		line 62 in file "mcc_generated_files/tmr5.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;		None
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;		None
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  1    wreg      void 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2, status,0
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12632 ;;Total ram usage:        2 bytes
 12633 ;; Hardware stack levels used:    1
 12634 ;; Hardware stack levels required when called:    2
 12635 ;; This function calls:
 12636 ;;		Nothing
 12637 ;; This function is called by:
 12638 ;;		_SYSTEM_Initialize
 12639 ;;		_mdb_unlock
 12640 ;; This function uses a non-reentrant model
 12641 ;;
 12642                           
 12643                           	psect	text76
 12644  011BB2                     __ptext76:
 12645                           	opt stack 0
 12646  011BB2                     _TMR5_Initialize:
 12647                           	opt stack 26
 12648                           
 12649                           ;tmr5.c: 67: T5GCON = 0x00;
 12650                           
 12651                           ;incstack = 0
 12652  011BB2  0E00               	movlw	0
 12653  011BB4  6EC4               	movwf	4036,c	;volatile
 12654                           
 12655                           ;tmr5.c: 70: T5GATE = 0x00;
 12656  011BB6  0E00               	movlw	0
 12657  011BB8  6EC5               	movwf	4037,c	;volatile
 12658                           
 12659                           ;tmr5.c: 73: T5CLK = 0x04;
 12660  011BBA  0E04               	movlw	4
 12661  011BBC  6EC6               	movwf	4038,c	;volatile
 12662                           
 12663                           ;tmr5.c: 76: TMR5H = 0xE1;
 12664  011BBE  0EE1               	movlw	225
 12665  011BC0  6EC2               	movwf	4034,c	;volatile
 12666                           
 12667                           ;tmr5.c: 79: TMR5L = 0xBA;
 12668  011BC2  0EBA               	movlw	186
 12669  011BC4  6EC1               	movwf	4033,c	;volatile
 12670                           
 12671                           ;tmr5.c: 82: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12672  011BC6  50C1               	movf	4033,w,c	;volatile
 12673  011BC8  CFC2 F01D          	movff	4034,??_TMR5_Initialize	;volatile
 12674  011BCC  6A1E               	clrf	(??_TMR5_Initialize+1)& (0+255),c
 12675  011BCE  C01D  F01E         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 12676  011BD2  6A1D               	clrf	??_TMR5_Initialize,c
 12677  011BD4  101D               	iorwf	??_TMR5_Initialize,w,c
 12678  011BD6  0100               	movlb	0	; () banked
 12679  011BD8  6FBA               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 12680  011BDA  501E               	movf	??_TMR5_Initialize+1,w,c
 12681  011BDC  6FBB               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;tmr5.c: 85: PIR4bits.TMR5IF = 0;
 12685  011BDE  010E               	movlb	14	; () banked
 12686  011BE0  99CE               	bcf	206,4,b	;volatile
 12687                           
 12688                           ; BSR set to: 14
 12689                           ;tmr5.c: 88: T5CON = 0x01;
 12690  011BE2  0E01               	movlw	1
 12691  011BE4  6EC3               	movwf	4035,c	;volatile
 12692                           
 12693                           ; BSR set to: 14
 12694  011BE6  0012               	return		;funcret
 12695  011BE8                     __end_of_TMR5_Initialize:
 12696                           	opt stack 0
 12697                           tblptru	equ	0xFF8
 12698                           tblptrh	equ	0xFF7
 12699                           tblptrl	equ	0xFF6
 12700                           tablat	equ	0xFF5
 12701                           prodh	equ	0xFF4
 12702                           prodl	equ	0xFF3
 12703                           intcon	equ	0xFF2
 12704                           postinc0	equ	0xFEE
 12705                           wreg	equ	0xFE8
 12706                           indf2	equ	0xFDF
 12707                           fsr2h	equ	0xFDA
 12708                           fsr2l	equ	0xFD9
 12709                           status	equ	0xFD8
 12710                           
 12711 ;; *************** function _TMR4_Initialize *****************
 12712 ;; Defined at:
 12713 ;;		line 61 in file "mcc_generated_files/tmr4.c"
 12714 ;; Parameters:    Size  Location     Type
 12715 ;;		None
 12716 ;; Auto vars:     Size  Location     Type
 12717 ;;		None
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  1    wreg      void 
 12720 ;; Registers used:
 12721 ;;		wreg, status,2
 12722 ;; Tracked objects:
 12723 ;;		On entry : 0/0
 12724 ;;		On exit  : 0/0
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12731 ;;Total ram usage:        0 bytes
 12732 ;; Hardware stack levels used:    1
 12733 ;; Hardware stack levels required when called:    2
 12734 ;; This function calls:
 12735 ;;		Nothing
 12736 ;; This function is called by:
 12737 ;;		_SYSTEM_Initialize
 12738 ;;		_Reset_hopper
 12739 ;;		_pay_coin
 12740 ;; This function uses a non-reentrant model
 12741 ;;
 12742                           
 12743                           	psect	text77
 12744  011E9C                     __ptext77:
 12745                           	opt stack 0
 12746  011E9C                     _TMR4_Initialize:
 12747                           	opt stack 27
 12748                           
 12749                           ;tmr4.c: 66: T4CLKCON = 0x04;
 12750                           
 12751                           ; BSR set to: 14
 12752                           ;incstack = 0
 12753  011E9C  0E04               	movlw	4
 12754  011E9E  6EB9               	movwf	4025,c	;volatile
 12755                           
 12756                           ;tmr4.c: 69: T4HLT = 0x00;
 12757  011EA0  0E00               	movlw	0
 12758  011EA2  6EB8               	movwf	4024,c	;volatile
 12759                           
 12760                           ;tmr4.c: 72: T4RST = 0x00;
 12761  011EA4  0E00               	movlw	0
 12762  011EA6  6EBA               	movwf	4026,c	;volatile
 12763                           
 12764                           ;tmr4.c: 75: T4PR = 0x4B;
 12765  011EA8  0E4B               	movlw	75
 12766  011EAA  6EB6               	movwf	4022,c	;volatile
 12767                           
 12768                           ;tmr4.c: 78: T4TMR = 0x00;
 12769  011EAC  0E00               	movlw	0
 12770  011EAE  6EB5               	movwf	4021,c	;volatile
 12771                           
 12772                           ;tmr4.c: 81: PIR4bits.TMR4IF = 0;
 12773  011EB0  010E               	movlb	14	; () banked
 12774  011EB2  97CE               	bcf	206,3,b	;volatile
 12775                           
 12776                           ; BSR set to: 14
 12777                           ;tmr4.c: 84: T4CON = 0xFF;
 12778  011EB4  68B7               	setf	4023,c	;volatile
 12779                           
 12780                           ; BSR set to: 14
 12781  011EB6  0012               	return		;funcret
 12782  011EB8                     __end_of_TMR4_Initialize:
 12783                           	opt stack 0
 12784                           tblptru	equ	0xFF8
 12785                           tblptrh	equ	0xFF7
 12786                           tblptrl	equ	0xFF6
 12787                           tablat	equ	0xFF5
 12788                           prodh	equ	0xFF4
 12789                           prodl	equ	0xFF3
 12790                           intcon	equ	0xFF2
 12791                           postinc0	equ	0xFEE
 12792                           wreg	equ	0xFE8
 12793                           indf2	equ	0xFDF
 12794                           fsr2h	equ	0xFDA
 12795                           fsr2l	equ	0xFD9
 12796                           status	equ	0xFD8
 12797                           
 12798 ;; *************** function _TMR3_Initialize *****************
 12799 ;; Defined at:
 12800 ;;		line 62 in file "mcc_generated_files/tmr3.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;		None
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;		None
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  1    wreg      void 
 12807 ;; Registers used:
 12808 ;;		wreg, status,2, status,0
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12818 ;;Total ram usage:        2 bytes
 12819 ;; Hardware stack levels used:    1
 12820 ;; Hardware stack levels required when called:    2
 12821 ;; This function calls:
 12822 ;;		Nothing
 12823 ;; This function is called by:
 12824 ;;		_SYSTEM_Initialize
 12825 ;;		_mdb_poll
 12826 ;;		_mdb_unlock
 12827 ;;		_cctalk_comm
 12828 ;; This function uses a non-reentrant model
 12829 ;;
 12830                           
 12831                           	psect	text78
 12832  011BE8                     __ptext78:
 12833                           	opt stack 0
 12834  011BE8                     _TMR3_Initialize:
 12835                           	opt stack 27
 12836                           
 12837                           ;tmr3.c: 67: T3GCON = 0x00;
 12838                           
 12839                           ; BSR set to: 14
 12840                           ;incstack = 0
 12841  011BE8  0E00               	movlw	0
 12842  011BEA  6ECA               	movwf	4042,c	;volatile
 12843                           
 12844                           ;tmr3.c: 70: T3GATE = 0x00;
 12845  011BEC  0E00               	movlw	0
 12846  011BEE  6ECB               	movwf	4043,c	;volatile
 12847                           
 12848                           ;tmr3.c: 73: T3CLK = 0x05;
 12849  011BF0  0E05               	movlw	5
 12850  011BF2  6ECC               	movwf	4044,c	;volatile
 12851                           
 12852                           ;tmr3.c: 76: TMR3H = 0x9E;
 12853  011BF4  0E9E               	movlw	158
 12854  011BF6  6EC8               	movwf	4040,c	;volatile
 12855                           
 12856                           ;tmr3.c: 79: TMR3L = 0x58;
 12857  011BF8  0E58               	movlw	88
 12858  011BFA  6EC7               	movwf	4039,c	;volatile
 12859                           
 12860                           ;tmr3.c: 82: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 12861  011BFC  50C7               	movf	4039,w,c	;volatile
 12862  011BFE  CFC8 F01D          	movff	4040,??_TMR3_Initialize	;volatile
 12863  011C02  6A1E               	clrf	(??_TMR3_Initialize+1)& (0+255),c
 12864  011C04  C01D  F01E         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 12865  011C08  6A1D               	clrf	??_TMR3_Initialize,c
 12866  011C0A  101D               	iorwf	??_TMR3_Initialize,w,c
 12867  011C0C  0100               	movlb	0	; () banked
 12868  011C0E  6FBC               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 12869  011C10  501E               	movf	??_TMR3_Initialize+1,w,c
 12870  011C12  6FBD               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;tmr3.c: 85: PIR4bits.TMR3IF = 0;
 12874  011C14  010E               	movlb	14	; () banked
 12875  011C16  95CE               	bcf	206,2,b	;volatile
 12876                           
 12877                           ; BSR set to: 14
 12878                           ;tmr3.c: 88: T3CON = 0x01;
 12879  011C18  0E01               	movlw	1
 12880  011C1A  6EC9               	movwf	4041,c	;volatile
 12881                           
 12882                           ; BSR set to: 14
 12883  011C1C  0012               	return		;funcret
 12884  011C1E                     __end_of_TMR3_Initialize:
 12885                           	opt stack 0
 12886                           tblptru	equ	0xFF8
 12887                           tblptrh	equ	0xFF7
 12888                           tblptrl	equ	0xFF6
 12889                           tablat	equ	0xFF5
 12890                           prodh	equ	0xFF4
 12891                           prodl	equ	0xFF3
 12892                           intcon	equ	0xFF2
 12893                           postinc0	equ	0xFEE
 12894                           wreg	equ	0xFE8
 12895                           indf2	equ	0xFDF
 12896                           fsr2h	equ	0xFDA
 12897                           fsr2l	equ	0xFD9
 12898                           status	equ	0xFD8
 12899                           
 12900 ;; *************** function _TMR2_Initialize *****************
 12901 ;; Defined at:
 12902 ;;		line 61 in file "mcc_generated_files/tmr2.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;		None
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;		None
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  1    wreg      void 
 12909 ;; Registers used:
 12910 ;;		wreg, status,2
 12911 ;; Tracked objects:
 12912 ;;		On entry : 0/0
 12913 ;;		On exit  : 0/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12920 ;;Total ram usage:        0 bytes
 12921 ;; Hardware stack levels used:    1
 12922 ;; Hardware stack levels required when called:    2
 12923 ;; This function calls:
 12924 ;;		Nothing
 12925 ;; This function is called by:
 12926 ;;		_SYSTEM_Initialize
 12927 ;;		_pay_coin
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text79
 12932  011E62                     __ptext79:
 12933                           	opt stack 0
 12934  011E62                     _TMR2_Initialize:
 12935                           	opt stack 27
 12936                           
 12937                           ;tmr2.c: 66: T2CLKCON = 0x05;
 12938                           
 12939                           ; BSR set to: 14
 12940                           ;incstack = 0
 12941  011E62  0E05               	movlw	5
 12942  011E64  6EBF               	movwf	4031,c	;volatile
 12943                           
 12944                           ;tmr2.c: 69: T2HLT = 0x20;
 12945  011E66  0E20               	movlw	32
 12946  011E68  6EBE               	movwf	4030,c	;volatile
 12947                           
 12948                           ;tmr2.c: 72: T2RST = 0x00;
 12949  011E6A  0E00               	movlw	0
 12950  011E6C  6EC0               	movwf	4032,c	;volatile
 12951                           
 12952                           ;tmr2.c: 75: T2PR = 0x85;
 12953  011E6E  0E85               	movlw	133
 12954  011E70  6EBC               	movwf	4028,c	;volatile
 12955                           
 12956                           ;tmr2.c: 78: T2TMR = 0x00;
 12957  011E72  0E00               	movlw	0
 12958  011E74  6EBB               	movwf	4027,c	;volatile
 12959                           
 12960                           ;tmr2.c: 81: PIR4bits.TMR2IF = 0;
 12961  011E76  010E               	movlb	14	; () banked
 12962  011E78  93CE               	bcf	206,1,b	;volatile
 12963                           
 12964                           ;tmr2.c: 84: T2CON = 0xF1;
 12965  011E7A  0EF1               	movlw	241
 12966  011E7C  6EBD               	movwf	4029,c	;volatile
 12967                           
 12968                           ; BSR set to: 14
 12969  011E7E  0012               	return		;funcret
 12970  011E80                     __end_of_TMR2_Initialize:
 12971                           	opt stack 0
 12972                           tblptru	equ	0xFF8
 12973                           tblptrh	equ	0xFF7
 12974                           tblptrl	equ	0xFF6
 12975                           tablat	equ	0xFF5
 12976                           prodh	equ	0xFF4
 12977                           prodl	equ	0xFF3
 12978                           intcon	equ	0xFF2
 12979                           postinc0	equ	0xFEE
 12980                           wreg	equ	0xFE8
 12981                           indf2	equ	0xFDF
 12982                           fsr2h	equ	0xFDA
 12983                           fsr2l	equ	0xFD9
 12984                           status	equ	0xFD8
 12985                           
 12986 ;; *************** function _TMR1_Initialize *****************
 12987 ;; Defined at:
 12988 ;;		line 62 in file "mcc_generated_files/tmr1.c"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;		None
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;		None
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      void 
 12995 ;; Registers used:
 12996 ;;		wreg, status,2, status,0
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13006 ;;Total ram usage:        2 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; Hardware stack levels required when called:    2
 13009 ;; This function calls:
 13010 ;;		Nothing
 13011 ;; This function is called by:
 13012 ;;		_SYSTEM_Initialize
 13013 ;;		_mdb_comm
 13014 ;;		_mdb_unlock
 13015 ;; This function uses a non-reentrant model
 13016 ;;
 13017                           
 13018                           	psect	text80
 13019  011C1E                     __ptext80:
 13020                           	opt stack 0
 13021  011C1E                     _TMR1_Initialize:
 13022                           	opt stack 24
 13023                           
 13024                           ;tmr1.c: 67: T1GCON = 0x00;
 13025                           
 13026                           ; BSR set to: 14
 13027                           ;incstack = 0
 13028  011C1E  0E00               	movlw	0
 13029  011C20  6ED0               	movwf	4048,c	;volatile
 13030                           
 13031                           ;tmr1.c: 70: T1GATE = 0x00;
 13032  011C22  0E00               	movlw	0
 13033  011C24  6ED1               	movwf	4049,c	;volatile
 13034                           
 13035                           ;tmr1.c: 73: T1CLK = 0x05;
 13036  011C26  0E05               	movlw	5
 13037  011C28  6ED2               	movwf	4050,c	;volatile
 13038                           
 13039                           ;tmr1.c: 76: TMR1H = 0xF6;
 13040  011C2A  0EF6               	movlw	246
 13041  011C2C  6ECE               	movwf	4046,c	;volatile
 13042                           
 13043                           ;tmr1.c: 79: TMR1L = 0x3C;
 13044  011C2E  0E3C               	movlw	60
 13045  011C30  6ECD               	movwf	4045,c	;volatile
 13046                           
 13047                           ;tmr1.c: 82: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13048  011C32  50CD               	movf	4045,w,c	;volatile
 13049  011C34  CFCE F01D          	movff	4046,??_TMR1_Initialize	;volatile
 13050  011C38  6A1E               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 13051  011C3A  C01D  F01E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13052  011C3E  6A1D               	clrf	??_TMR1_Initialize,c
 13053  011C40  101D               	iorwf	??_TMR1_Initialize,w,c
 13054  011C42  0100               	movlb	0	; () banked
 13055  011C44  6FBE               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 13056  011C46  501E               	movf	??_TMR1_Initialize+1,w,c
 13057  011C48  6FBF               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;tmr1.c: 85: PIR4bits.TMR1IF = 0;
 13061  011C4A  010E               	movlb	14	; () banked
 13062  011C4C  91CE               	bcf	206,0,b	;volatile
 13063                           
 13064                           ; BSR set to: 14
 13065                           ;tmr1.c: 88: T1CON = 0x01;
 13066  011C4E  0E01               	movlw	1
 13067  011C50  6ECF               	movwf	4047,c	;volatile
 13068                           
 13069                           ; BSR set to: 14
 13070  011C52  0012               	return		;funcret
 13071  011C54                     __end_of_TMR1_Initialize:
 13072                           	opt stack 0
 13073                           tblptru	equ	0xFF8
 13074                           tblptrh	equ	0xFF7
 13075                           tblptrl	equ	0xFF6
 13076                           tablat	equ	0xFF5
 13077                           prodh	equ	0xFF4
 13078                           prodl	equ	0xFF3
 13079                           intcon	equ	0xFF2
 13080                           postinc0	equ	0xFEE
 13081                           wreg	equ	0xFE8
 13082                           indf2	equ	0xFDF
 13083                           fsr2h	equ	0xFDA
 13084                           fsr2l	equ	0xFD9
 13085                           status	equ	0xFD8
 13086                           
 13087 ;; *************** function _TMR0_Initialize *****************
 13088 ;; Defined at:
 13089 ;;		line 64 in file "mcc_generated_files/tmr0.c"
 13090 ;; Parameters:    Size  Location     Type
 13091 ;;		None
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;		None
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  1    wreg      void 
 13096 ;; Registers used:
 13097 ;;		wreg, status,2, status,0
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/0
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;Total ram usage:        2 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    2
 13110 ;; This function calls:
 13111 ;;		Nothing
 13112 ;; This function is called by:
 13113 ;;		_SYSTEM_Initialize
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text81
 13118  011D82                     __ptext81:
 13119                           	opt stack 0
 13120  011D82                     _TMR0_Initialize:
 13121                           	opt stack 27
 13122                           
 13123                           ;tmr0.c: 69: T0CON1 = 0x82;
 13124                           
 13125                           ; BSR set to: 14
 13126                           ;incstack = 0
 13127  011D82  0E82               	movlw	130
 13128  011D84  6ED6               	movwf	4054,c	;volatile
 13129                           
 13130                           ;tmr0.c: 72: TMR0H = 0xA5;
 13131  011D86  0EA5               	movlw	165
 13132  011D88  6ED4               	movwf	4052,c	;volatile
 13133                           
 13134                           ;tmr0.c: 75: TMR0L = 0x2E;
 13135  011D8A  0E2E               	movlw	46
 13136  011D8C  6ED3               	movwf	4051,c	;volatile
 13137                           
 13138                           ;tmr0.c: 78: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 13139  011D8E  50D3               	movf	4051,w,c	;volatile
 13140  011D90  CFD4 F01D          	movff	4052,??_TMR0_Initialize	;volatile
 13141  011D94  6A1E               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 13142  011D96  C01D  F01E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13143  011D9A  6A1D               	clrf	??_TMR0_Initialize,c
 13144  011D9C  101D               	iorwf	??_TMR0_Initialize,w,c
 13145  011D9E  0100               	movlb	0	; () banked
 13146  011DA0  6FB8               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 13147  011DA2  501E               	movf	??_TMR0_Initialize+1,w,c
 13148  011DA4  6FB9               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 13149                           
 13150                           ; BSR set to: 0
 13151                           ;tmr0.c: 81: PIR0bits.TMR0IF = 0;
 13152  011DA6  010E               	movlb	14	; () banked
 13153  011DA8  9BCA               	bcf	202,5,b	;volatile
 13154                           
 13155                           ; BSR set to: 14
 13156                           ;tmr0.c: 84: T0CON0 = 0x90;
 13157  011DAA  0E90               	movlw	144
 13158  011DAC  6ED5               	movwf	4053,c	;volatile
 13159                           
 13160                           ; BSR set to: 14
 13161  011DAE  0012               	return		;funcret
 13162  011DB0                     __end_of_TMR0_Initialize:
 13163                           	opt stack 0
 13164                           tblptru	equ	0xFF8
 13165                           tblptrh	equ	0xFF7
 13166                           tblptrl	equ	0xFF6
 13167                           tablat	equ	0xFF5
 13168                           prodh	equ	0xFF4
 13169                           prodl	equ	0xFF3
 13170                           intcon	equ	0xFF2
 13171                           postinc0	equ	0xFEE
 13172                           wreg	equ	0xFE8
 13173                           indf2	equ	0xFDF
 13174                           fsr2h	equ	0xFDA
 13175                           fsr2l	equ	0xFD9
 13176                           status	equ	0xFD8
 13177                           
 13178 ;; *************** function _PMD_Initialize *****************
 13179 ;; Defined at:
 13180 ;;		line 147 in file "mcc_generated_files/mcc.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;		None
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;		None
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      void 
 13187 ;; Registers used:
 13188 ;;		wreg, status,2
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13198 ;;Total ram usage:        0 bytes
 13199 ;; Hardware stack levels used:    1
 13200 ;; Hardware stack levels required when called:    2
 13201 ;; This function calls:
 13202 ;;		Nothing
 13203 ;; This function is called by:
 13204 ;;		_SYSTEM_Initialize
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text82
 13209  011EB8                     __ptext82:
 13210                           	opt stack 0
 13211  011EB8                     _PMD_Initialize:
 13212                           	opt stack 27
 13213                           
 13214                           ;mcc.c: 150: PMD0 = 0x00;
 13215                           
 13216                           ; BSR set to: 14
 13217                           ;incstack = 0
 13218  011EB8  0E00               	movlw	0
 13219  011EBA  010E               	movlb	14	; () banked
 13220  011EBC  6FE1               	movwf	225,b	;volatile
 13221                           
 13222                           ;mcc.c: 152: PMD1 = 0x00;
 13223  011EBE  0E00               	movlw	0
 13224  011EC0  6FE2               	movwf	226,b	;volatile
 13225                           
 13226                           ;mcc.c: 154: PMD2 = 0x00;
 13227  011EC2  0E00               	movlw	0
 13228  011EC4  6FE3               	movwf	227,b	;volatile
 13229                           
 13230                           ;mcc.c: 156: PMD3 = 0x00;
 13231  011EC6  0E00               	movlw	0
 13232  011EC8  6FE4               	movwf	228,b	;volatile
 13233                           
 13234                           ;mcc.c: 158: PMD4 = 0x00;
 13235  011ECA  0E00               	movlw	0
 13236  011ECC  6FE5               	movwf	229,b	;volatile
 13237                           
 13238                           ;mcc.c: 160: PMD5 = 0x00;
 13239  011ECE  0E00               	movlw	0
 13240  011ED0  6FE6               	movwf	230,b	;volatile
 13241                           
 13242                           ; BSR set to: 14
 13243  011ED2  0012               	return		;funcret
 13244  011ED4                     __end_of_PMD_Initialize:
 13245                           	opt stack 0
 13246                           tblptru	equ	0xFF8
 13247                           tblptrh	equ	0xFF7
 13248                           tblptrl	equ	0xFF6
 13249                           tablat	equ	0xFF5
 13250                           prodh	equ	0xFF4
 13251                           prodl	equ	0xFF3
 13252                           intcon	equ	0xFF2
 13253                           postinc0	equ	0xFEE
 13254                           wreg	equ	0xFE8
 13255                           indf2	equ	0xFDF
 13256                           fsr2h	equ	0xFDA
 13257                           fsr2l	equ	0xFD9
 13258                           status	equ	0xFD8
 13259                           
 13260 ;; *************** function _PIN_MANAGER_Initialize *****************
 13261 ;; Defined at:
 13262 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13263 ;; Parameters:    Size  Location     Type
 13264 ;;		None
 13265 ;; Auto vars:     Size  Location     Type
 13266 ;;		None
 13267 ;; Return value:  Size  Location     Type
 13268 ;;                  1    wreg      void 
 13269 ;; Registers used:
 13270 ;;		wreg, status,2
 13271 ;; Tracked objects:
 13272 ;;		On entry : 0/0
 13273 ;;		On exit  : 0/0
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13280 ;;Total ram usage:        0 bytes
 13281 ;; Hardware stack levels used:    1
 13282 ;; Hardware stack levels required when called:    2
 13283 ;; This function calls:
 13284 ;;		Nothing
 13285 ;; This function is called by:
 13286 ;;		_SYSTEM_Initialize
 13287 ;; This function uses a non-reentrant model
 13288 ;;
 13289                           
 13290                           	psect	text83
 13291  0114CE                     __ptext83:
 13292                           	opt stack 0
 13293  0114CE                     _PIN_MANAGER_Initialize:
 13294                           	opt stack 27
 13295                           
 13296                           ;pin_manager.c: 57: LATE = 0x00;
 13297                           
 13298                           ; BSR set to: 14
 13299                           ;incstack = 0
 13300  0114CE  0E00               	movlw	0
 13301  0114D0  6E87               	movwf	3975,c	;volatile
 13302                           
 13303                           ;pin_manager.c: 58: LATD = 0x00;
 13304  0114D2  0E00               	movlw	0
 13305  0114D4  6E86               	movwf	3974,c	;volatile
 13306                           
 13307                           ;pin_manager.c: 59: LATA = 0xC0;
 13308  0114D6  0EC0               	movlw	192
 13309  0114D8  6E83               	movwf	3971,c	;volatile
 13310                           
 13311                           ;pin_manager.c: 60: LATB = 0x00;
 13312  0114DA  0E00               	movlw	0
 13313  0114DC  6E84               	movwf	3972,c	;volatile
 13314                           
 13315                           ;pin_manager.c: 61: LATC = 0x40;
 13316  0114DE  0E40               	movlw	64
 13317  0114E0  6E85               	movwf	3973,c	;volatile
 13318                           
 13319                           ;pin_manager.c: 66: TRISE = 0x00;
 13320  0114E2  0E00               	movlw	0
 13321  0114E4  6E8C               	movwf	3980,c	;volatile
 13322                           
 13323                           ;pin_manager.c: 67: TRISA = 0x1F;
 13324  0114E6  0E1F               	movlw	31
 13325  0114E8  6E88               	movwf	3976,c	;volatile
 13326                           
 13327                           ;pin_manager.c: 68: TRISB = 0xF0;
 13328  0114EA  0EF0               	movlw	240
 13329  0114EC  6E89               	movwf	3977,c	;volatile
 13330                           
 13331                           ;pin_manager.c: 69: TRISC = 0x80;
 13332  0114EE  0E80               	movlw	128
 13333  0114F0  6E8A               	movwf	3978,c	;volatile
 13334                           
 13335                           ;pin_manager.c: 70: TRISD = 0x00;
 13336  0114F2  0E00               	movlw	0
 13337  0114F4  6E8B               	movwf	3979,c	;volatile
 13338                           
 13339                           ;pin_manager.c: 75: ANSELC = 0x00;
 13340  0114F6  0E00               	movlw	0
 13341  0114F8  010F               	movlb	15	; () banked
 13342  0114FA  6F21               	movwf	33,b	;volatile
 13343                           
 13344                           ;pin_manager.c: 76: ANSELB = 0xC0;
 13345  0114FC  0EC0               	movlw	192
 13346  0114FE  6F19               	movwf	25,b	;volatile
 13347                           
 13348                           ;pin_manager.c: 77: ANSELD = 0x00;
 13349  011500  0E00               	movlw	0
 13350  011502  6F26               	movwf	38,b	;volatile
 13351                           
 13352                           ;pin_manager.c: 78: ANSELE = 0x00;
 13353  011504  0E00               	movlw	0
 13354  011506  6F2E               	movwf	46,b	;volatile
 13355                           
 13356                           ;pin_manager.c: 79: ANSELA = 0x01;
 13357  011508  0E01               	movlw	1
 13358  01150A  6F11               	movwf	17,b	;volatile
 13359                           
 13360                           ;pin_manager.c: 84: WPUD = 0x00;
 13361  01150C  0E00               	movlw	0
 13362  01150E  6F25               	movwf	37,b	;volatile
 13363                           
 13364                           ;pin_manager.c: 85: WPUE = 0x00;
 13365  011510  0E00               	movlw	0
 13366  011512  6F2D               	movwf	45,b	;volatile
 13367                           
 13368                           ;pin_manager.c: 86: WPUB = 0x00;
 13369  011514  0E00               	movlw	0
 13370  011516  6F18               	movwf	24,b	;volatile
 13371                           
 13372                           ;pin_manager.c: 87: WPUA = 0x00;
 13373  011518  0E00               	movlw	0
 13374  01151A  6F10               	movwf	16,b	;volatile
 13375                           
 13376                           ;pin_manager.c: 88: WPUC = 0x00;
 13377  01151C  0E00               	movlw	0
 13378  01151E  6F20               	movwf	32,b	;volatile
 13379                           
 13380                           ;pin_manager.c: 93: ODCONE = 0x00;
 13381  011520  0E00               	movlw	0
 13382  011522  6F2C               	movwf	44,b	;volatile
 13383                           
 13384                           ;pin_manager.c: 94: ODCONA = 0x00;
 13385  011524  0E00               	movlw	0
 13386  011526  6F0F               	movwf	15,b	;volatile
 13387                           
 13388                           ;pin_manager.c: 95: ODCONB = 0x00;
 13389  011528  0E00               	movlw	0
 13390  01152A  6F17               	movwf	23,b	;volatile
 13391                           
 13392                           ;pin_manager.c: 96: ODCONC = 0x00;
 13393  01152C  0E00               	movlw	0
 13394  01152E  6F1F               	movwf	31,b	;volatile
 13395                           
 13396                           ;pin_manager.c: 97: ODCOND = 0x00;
 13397  011530  0E00               	movlw	0
 13398  011532  6F24               	movwf	36,b	;volatile
 13399                           
 13400                           ; BSR set to: 15
 13401                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
 13402  011534  010E               	movlb	14	; () banked
 13403  011536  89C2               	bsf	194,4,b	;volatile
 13404                           
 13405                           ; BSR set to: 14
 13406                           ;pin_manager.c: 106: RX1PPSbits.RXPPS = 0x17;
 13407  011538  81B5               	bsf	181,0,b	;volatile
 13408  01153A  83B5               	bsf	181,1,b	;volatile
 13409  01153C  85B5               	bsf	181,2,b	;volatile
 13410  01153E  97B5               	bcf	181,3,b	;volatile
 13411  011540  89B5               	bsf	181,4,b	;volatile
 13412                           
 13413                           ;pin_manager.c: 107: RC6PPS = 0x09;
 13414  011542  0E09               	movlw	9
 13415  011544  6FFD               	movwf	253,b	;volatile
 13416                           
 13417                           ; BSR set to: 14
 13418  011546  0012               	return		;funcret
 13419  011548                     __end_of_PIN_MANAGER_Initialize:
 13420                           	opt stack 0
 13421                           tblptru	equ	0xFF8
 13422                           tblptrh	equ	0xFF7
 13423                           tblptrl	equ	0xFF6
 13424                           tablat	equ	0xFF5
 13425                           prodh	equ	0xFF4
 13426                           prodl	equ	0xFF3
 13427                           intcon	equ	0xFF2
 13428                           postinc0	equ	0xFEE
 13429                           wreg	equ	0xFE8
 13430                           indf2	equ	0xFDF
 13431                           fsr2h	equ	0xFDA
 13432                           fsr2l	equ	0xFD9
 13433                           status	equ	0xFD8
 13434                           
 13435 ;; *************** function _OSCILLATOR_Initialize *****************
 13436 ;; Defined at:
 13437 ;;		line 133 in file "mcc_generated_files/mcc.c"
 13438 ;; Parameters:    Size  Location     Type
 13439 ;;		None
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;		None
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  1    wreg      void 
 13444 ;; Registers used:
 13445 ;;		wreg, status,2
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/0
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13455 ;;Total ram usage:        0 bytes
 13456 ;; Hardware stack levels used:    1
 13457 ;; Hardware stack levels required when called:    2
 13458 ;; This function calls:
 13459 ;;		Nothing
 13460 ;; This function is called by:
 13461 ;;		_SYSTEM_Initialize
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465                           	psect	text84
 13466  011F04                     __ptext84:
 13467                           	opt stack 0
 13468  011F04                     _OSCILLATOR_Initialize:
 13469                           	opt stack 27
 13470                           
 13471                           ;mcc.c: 136: OSCCON1 = 0x60;
 13472                           
 13473                           ; BSR set to: 14
 13474                           ;incstack = 0
 13475  011F04  0E60               	movlw	96
 13476  011F06  010E               	movlb	14	; () banked
 13477  011F08  6FD8               	movwf	216,b	;volatile
 13478                           
 13479                           ;mcc.c: 138: OSCCON3 = 0x00;
 13480  011F0A  0E00               	movlw	0
 13481  011F0C  6FDA               	movwf	218,b	;volatile
 13482                           
 13483                           ;mcc.c: 140: OSCEN = 0x00;
 13484  011F0E  0E00               	movlw	0
 13485  011F10  6FDC               	movwf	220,b	;volatile
 13486                           
 13487                           ;mcc.c: 142: OSCFRQ = 0x04;
 13488  011F12  0E04               	movlw	4
 13489  011F14  6FDE               	movwf	222,b	;volatile
 13490                           
 13491                           ;mcc.c: 144: OSCTUNE = 0x00;
 13492  011F16  0E00               	movlw	0
 13493  011F18  6FDD               	movwf	221,b	;volatile
 13494                           
 13495                           ; BSR set to: 14
 13496  011F1A  0012               	return		;funcret
 13497  011F1C                     __end_of_OSCILLATOR_Initialize:
 13498                           	opt stack 0
 13499                           tblptru	equ	0xFF8
 13500                           tblptrh	equ	0xFF7
 13501                           tblptrl	equ	0xFF6
 13502                           tablat	equ	0xFF5
 13503                           prodh	equ	0xFF4
 13504                           prodl	equ	0xFF3
 13505                           intcon	equ	0xFF2
 13506                           postinc0	equ	0xFEE
 13507                           wreg	equ	0xFE8
 13508                           indf2	equ	0xFDF
 13509                           fsr2h	equ	0xFDA
 13510                           fsr2l	equ	0xFD9
 13511                           status	equ	0xFD8
 13512                           
 13513 ;; *************** function _INTERRUPT_Initialize *****************
 13514 ;; Defined at:
 13515 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;		None
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;		None
 13520 ;; Return value:  Size  Location     Type
 13521 ;;                  1    wreg      void 
 13522 ;; Registers used:
 13523 ;;		None
 13524 ;; Tracked objects:
 13525 ;;		On entry : 0/0
 13526 ;;		On exit  : 0/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13533 ;;Total ram usage:        0 bytes
 13534 ;; Hardware stack levels used:    1
 13535 ;; Hardware stack levels required when called:    2
 13536 ;; This function calls:
 13537 ;;		Nothing
 13538 ;; This function is called by:
 13539 ;;		_SYSTEM_Initialize
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text85
 13544  011FF2                     __ptext85:
 13545                           	opt stack 0
 13546  011FF2                     _INTERRUPT_Initialize:
 13547                           	opt stack 27
 13548                           
 13549                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
 13550                           
 13551                           ; BSR set to: 14
 13552                           ;incstack = 0
 13553  011FF2  8AF2               	bsf	intcon,5,c	;volatile
 13554                           
 13555                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
 13556  011FF4  010E               	movlb	14	; () banked
 13557  011FF6  89BA               	bsf	186,4,b	;volatile
 13558                           
 13559                           ; BSR set to: 14
 13560  011FF8  0012               	return		;funcret
 13561  011FFA                     __end_of_INTERRUPT_Initialize:
 13562                           	opt stack 0
 13563                           tblptru	equ	0xFF8
 13564                           tblptrh	equ	0xFF7
 13565                           tblptrl	equ	0xFF6
 13566                           tablat	equ	0xFF5
 13567                           prodh	equ	0xFF4
 13568                           prodl	equ	0xFF3
 13569                           intcon	equ	0xFF2
 13570                           postinc0	equ	0xFEE
 13571                           wreg	equ	0xFE8
 13572                           indf2	equ	0xFDF
 13573                           fsr2h	equ	0xFDA
 13574                           fsr2l	equ	0xFD9
 13575                           status	equ	0xFD8
 13576                           
 13577 ;; *************** function _EUSART1_Initialize *****************
 13578 ;; Defined at:
 13579 ;;		line 53 in file "mcc_generated_files/eusart1.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;		None
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;		None
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  1    wreg      void 
 13586 ;; Registers used:
 13587 ;;		wreg, status,2
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13597 ;;Total ram usage:        0 bytes
 13598 ;; Hardware stack levels used:    1
 13599 ;; Hardware stack levels required when called:    2
 13600 ;; This function calls:
 13601 ;;		Nothing
 13602 ;; This function is called by:
 13603 ;;		_SYSTEM_Initialize
 13604 ;; This function uses a non-reentrant model
 13605 ;;
 13606                           
 13607                           	psect	text86
 13608  011F48                     __ptext86:
 13609                           	opt stack 0
 13610  011F48                     _EUSART1_Initialize:
 13611                           	opt stack 27
 13612                           
 13613                           ;eusart1.c: 58: BAUD1CON = 0x08;
 13614                           
 13615                           ; BSR set to: 14
 13616                           ;incstack = 0
 13617  011F48  0E08               	movlw	8
 13618  011F4A  6E9F               	movwf	3999,c	;volatile
 13619                           
 13620                           ;eusart1.c: 61: RC1STA = 0xD0;
 13621  011F4C  0ED0               	movlw	208
 13622  011F4E  6E9D               	movwf	3997,c	;volatile
 13623                           
 13624                           ;eusart1.c: 64: TX1STA = 0xEC;
 13625  011F50  0EEC               	movlw	236
 13626  011F52  6E9E               	movwf	3998,c	;volatile
 13627                           
 13628                           ;eusart1.c: 67: SP1BRGL = 0x38;
 13629  011F54  0E38               	movlw	56
 13630  011F56  6E9B               	movwf	3995,c	;volatile
 13631                           
 13632                           ;eusart1.c: 70: SP1BRGH = 0x01;
 13633  011F58  0E01               	movlw	1
 13634  011F5A  6E9C               	movwf	3996,c	;volatile
 13635  011F5C  0012               	return		;funcret
 13636  011F5E                     __end_of_EUSART1_Initialize:
 13637                           	opt stack 0
 13638                           tblptru	equ	0xFF8
 13639                           tblptrh	equ	0xFF7
 13640                           tblptrl	equ	0xFF6
 13641                           tablat	equ	0xFF5
 13642                           prodh	equ	0xFF4
 13643                           prodl	equ	0xFF3
 13644                           intcon	equ	0xFF2
 13645                           postinc0	equ	0xFEE
 13646                           wreg	equ	0xFE8
 13647                           indf2	equ	0xFDF
 13648                           fsr2h	equ	0xFDA
 13649                           fsr2l	equ	0xFD9
 13650                           status	equ	0xFD8
 13651                           
 13652 ;; *************** function _DAC1_Initialize *****************
 13653 ;; Defined at:
 13654 ;;		line 57 in file "mcc_generated_files/dac1.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;		None
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;		None
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  1    wreg      void 
 13661 ;; Registers used:
 13662 ;;		wreg, status,2
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;Total ram usage:        0 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:    2
 13675 ;; This function calls:
 13676 ;;		Nothing
 13677 ;; This function is called by:
 13678 ;;		_SYSTEM_Initialize
 13679 ;;		_mdb_unlock
 13680 ;; This function uses a non-reentrant model
 13681 ;;
 13682                           
 13683                           	psect	text87
 13684  011FCE                     __ptext87:
 13685                           	opt stack 0
 13686  011FCE                     _DAC1_Initialize:
 13687                           	opt stack 26
 13688                           
 13689                           ;dac1.c: 60: DAC1CON0 = 0x80;
 13690                           
 13691                           ;incstack = 0
 13692  011FCE  0E80               	movlw	128
 13693  011FD0  010F               	movlb	15	; () banked
 13694  011FD2  6F33               	movwf	51,b	;volatile
 13695                           
 13696                           ;dac1.c: 62: DAC1CON1 = 0x1C;
 13697  011FD4  0E1C               	movlw	28
 13698  011FD6  6F34               	movwf	52,b	;volatile
 13699                           
 13700                           ; BSR set to: 15
 13701  011FD8  0012               	return		;funcret
 13702  011FDA                     __end_of_DAC1_Initialize:
 13703                           	opt stack 0
 13704                           tblptru	equ	0xFF8
 13705                           tblptrh	equ	0xFF7
 13706                           tblptrl	equ	0xFF6
 13707                           tablat	equ	0xFF5
 13708                           prodh	equ	0xFF4
 13709                           prodl	equ	0xFF3
 13710                           intcon	equ	0xFF2
 13711                           postinc0	equ	0xFEE
 13712                           wreg	equ	0xFE8
 13713                           indf2	equ	0xFDF
 13714                           fsr2h	equ	0xFDA
 13715                           fsr2l	equ	0xFD9
 13716                           status	equ	0xFD8
 13717                           
 13718 ;; *************** function _CMP1_Initialize *****************
 13719 ;; Defined at:
 13720 ;;		line 57 in file "mcc_generated_files/cmp1.c"
 13721 ;; Parameters:    Size  Location     Type
 13722 ;;		None
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;		None
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      void 
 13727 ;; Registers used:
 13728 ;;		wreg, status,2
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13738 ;;Total ram usage:        0 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:    2
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_SYSTEM_Initialize
 13745 ;;		_mdb_unlock
 13746 ;; This function uses a non-reentrant model
 13747 ;;
 13748                           
 13749                           	psect	text88
 13750  011F5E                     __ptext88:
 13751                           	opt stack 0
 13752  011F5E                     _CMP1_Initialize:
 13753                           	opt stack 26
 13754                           
 13755                           ;cmp1.c: 61: CM1CON0 = 0x90;
 13756                           
 13757                           ; BSR set to: 15
 13758                           ;incstack = 0
 13759  011F5E  0E90               	movlw	144
 13760  011F60  010F               	movlb	15	; () banked
 13761  011F62  6F39               	movwf	57,b	;volatile
 13762                           
 13763                           ;cmp1.c: 64: CM1CON1 = 0x00;
 13764  011F64  0E00               	movlw	0
 13765  011F66  6F3A               	movwf	58,b	;volatile
 13766                           
 13767                           ;cmp1.c: 67: CM1NCH = 0x00;
 13768  011F68  0E00               	movlw	0
 13769  011F6A  6F3B               	movwf	59,b	;volatile
 13770                           
 13771                           ;cmp1.c: 70: CM1PCH = 0x05;
 13772  011F6C  0E05               	movlw	5
 13773  011F6E  6F3C               	movwf	60,b	;volatile
 13774                           
 13775                           ; BSR set to: 15
 13776  011F70  0012               	return		;funcret
 13777  011F72                     __end_of_CMP1_Initialize:
 13778                           	opt stack 0
 13779                           tblptru	equ	0xFF8
 13780                           tblptrh	equ	0xFF7
 13781                           tblptrl	equ	0xFF6
 13782                           tablat	equ	0xFF5
 13783                           prodh	equ	0xFF4
 13784                           prodl	equ	0xFF3
 13785                           intcon	equ	0xFF2
 13786                           postinc0	equ	0xFEE
 13787                           wreg	equ	0xFE8
 13788                           indf2	equ	0xFDF
 13789                           fsr2h	equ	0xFDA
 13790                           fsr2l	equ	0xFD9
 13791                           status	equ	0xFD8
 13792                           
 13793 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 13794 ;; Defined at:
 13795 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
 13796 ;; Parameters:    Size  Location     Type
 13797 ;;		None
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;		None
 13800 ;; Return value:  Size  Location     Type
 13801 ;;                  1    wreg      void 
 13802 ;; Registers used:
 13803 ;;		cstack
 13804 ;; Tracked objects:
 13805 ;;		On entry : 0/0
 13806 ;;		On exit  : 0/0
 13807 ;;		Unchanged: 0/0
 13808 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13811 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13812 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13813 ;;Total ram usage:       18 bytes
 13814 ;; Hardware stack levels used:    1
 13815 ;; Hardware stack levels required when called:    1
 13816 ;; This function calls:
 13817 ;;		_PIN_MANAGER_IOC
 13818 ;; This function is called by:
 13819 ;;		Interrupt level 2
 13820 ;; This function uses a non-reentrant model
 13821 ;;
 13822                           
 13823                           	psect	intcode
 13824  000008                     __pintcode:
 13825                           	opt stack 0
 13826  000008                     _INTERRUPT_InterruptManagerHigh:
 13827                           	opt stack 18
 13828                           
 13829                           ; BSR set to: 15
 13830                           ;incstack = 0
 13831  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13832  00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 13833  00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 13834  000012  CFE9 F00D          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 13835  000016  CFEA F00E          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 13836  00001A  CFE1 F00F          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 13837  00001E  CFE2 F010          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 13838  000022  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 13839  000026  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 13840  00002A  CFF3 F013          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 13841  00002E  CFF4 F014          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 13842  000032  CFF6 F015          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 13843  000036  CFF7 F016          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 13844  00003A  CFF8 F017          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 13845  00003E  CFF5 F018          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 13846  000042  C04F  F019         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 13847  000046  C050  F01A         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 13848  00004A  C051  F01B         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 13849  00004E  C052  F01C         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 13850                           
 13851                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 13852  000052  010E               	movlb	14	; () banked
 13853  000054  B9C2               	btfsc	194,4,b	;volatile
 13854                           
 13855                           ; BSR set to: 14
 13856  000056  A9CA               	btfss	202,4,b	;volatile
 13857  000058  D002               	goto	i2l189
 13858                           
 13859                           ; BSR set to: 14
 13860                           ;interrupt_manager.c: 68: {
 13861                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
 13862  00005A  EC03  F090         	call	_PIN_MANAGER_IOC	;wreg free
 13863  00005E                     i2l189:
 13864                           
 13865                           ;interrupt_manager.c: 71: else
 13866                           ;interrupt_manager.c: 72: {
 13867  00005E  C01C  F052         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 13868  000062  C01B  F051         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 13869  000066  C01A  F050         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 13870  00006A  C019  F04F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 13871  00006E  C018  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 13872  000072  C017  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 13873  000076  C016  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 13874  00007A  C015  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 13875  00007E  C014  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 13876  000082  C013  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 13877  000086  C012  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 13878  00008A  C011  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 13879  00008E  C010  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 13880  000092  C00F  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 13881  000096  C00E  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 13882  00009A  C00D  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 13883  00009E  C00C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 13884  0000A2  C00B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 13885  0000A6  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13886  0000A8  0011               	retfie		f
 13887  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
 13888                           	opt stack 0
 13889                           pclatu	equ	0xFFB
 13890                           pclath	equ	0xFFA
 13891                           tblptru	equ	0xFF8
 13892                           tblptrh	equ	0xFF7
 13893                           tblptrl	equ	0xFF6
 13894                           tablat	equ	0xFF5
 13895                           prodh	equ	0xFF4
 13896                           prodl	equ	0xFF3
 13897                           intcon	equ	0xFF2
 13898                           postinc0	equ	0xFEE
 13899                           fsr0h	equ	0xFEA
 13900                           fsr0l	equ	0xFE9
 13901                           wreg	equ	0xFE8
 13902                           fsr1h	equ	0xFE2
 13903                           fsr1l	equ	0xFE1
 13904                           indf2	equ	0xFDF
 13905                           fsr2h	equ	0xFDA
 13906                           fsr2l	equ	0xFD9
 13907                           status	equ	0xFD8
 13908                           
 13909 ;; *************** function _PIN_MANAGER_IOC *****************
 13910 ;; Defined at:
 13911 ;;		line 111 in file "mcc_generated_files/pin_manager.c"
 13912 ;; Parameters:    Size  Location     Type
 13913 ;;		None
 13914 ;; Auto vars:     Size  Location     Type
 13915 ;;		None
 13916 ;; Return value:  Size  Location     Type
 13917 ;;                  1    wreg      void 
 13918 ;; Registers used:
 13919 ;;		None
 13920 ;; Tracked objects:
 13921 ;;		On entry : 0/0
 13922 ;;		On exit  : 0/0
 13923 ;;		Unchanged: 0/0
 13924 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13929 ;;Total ram usage:        0 bytes
 13930 ;; Hardware stack levels used:    1
 13931 ;; This function calls:
 13932 ;;		Nothing
 13933 ;; This function is called by:
 13934 ;;		_INTERRUPT_InterruptManagerHigh
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text90
 13939  012006                     __ptext90:
 13940                           	opt stack 0
 13941  012006                     _PIN_MANAGER_IOC:
 13942                           	opt stack 18
 13943                           
 13944                           ;pin_manager.c: 115: PIR0bits.IOCIF = 0;
 13945                           
 13946                           ;incstack = 0
 13947  012006  010E               	movlb	14	; () banked
 13948  012008  99CA               	bcf	202,4,b	;volatile
 13949                           
 13950                           ; BSR set to: 14
 13951  01200A  0012               	return		;funcret
 13952  01200C                     __end_of_PIN_MANAGER_IOC:
 13953                           	opt stack 0
 13954                           pclatu	equ	0xFFB
 13955                           pclath	equ	0xFFA
 13956                           tblptru	equ	0xFF8
 13957                           tblptrh	equ	0xFF7
 13958                           tblptrl	equ	0xFF6
 13959                           tablat	equ	0xFF5
 13960                           prodh	equ	0xFF4
 13961                           prodl	equ	0xFF3
 13962                           intcon	equ	0xFF2
 13963                           postinc0	equ	0xFEE
 13964                           fsr0h	equ	0xFEA
 13965                           fsr0l	equ	0xFE9
 13966                           wreg	equ	0xFE8
 13967                           fsr1h	equ	0xFE2
 13968                           fsr1l	equ	0xFE1
 13969                           indf2	equ	0xFDF
 13970                           fsr2h	equ	0xFDA
 13971                           fsr2l	equ	0xFD9
 13972                           status	equ	0xFD8
 13973                           pclatu	equ	0xFFB
 13974                           pclath	equ	0xFFA
 13975                           tblptru	equ	0xFF8
 13976                           tblptrh	equ	0xFF7
 13977                           tblptrl	equ	0xFF6
 13978                           tablat	equ	0xFF5
 13979                           prodh	equ	0xFF4
 13980                           prodl	equ	0xFF3
 13981                           intcon	equ	0xFF2
 13982                           postinc0	equ	0xFEE
 13983                           fsr0h	equ	0xFEA
 13984                           fsr0l	equ	0xFE9
 13985                           wreg	equ	0xFE8
 13986                           fsr1h	equ	0xFE2
 13987                           fsr1l	equ	0xFE1
 13988                           indf2	equ	0xFDF
 13989                           fsr2h	equ	0xFDA
 13990                           fsr2l	equ	0xFD9
 13991                           status	equ	0xFD8
 13992                           
 13993                           	psect	rparam
 13994  0000                     pclatu	equ	0xFFB
 13995                           pclath	equ	0xFFA
 13996                           tblptru	equ	0xFF8
 13997                           tblptrh	equ	0xFF7
 13998                           tblptrl	equ	0xFF6
 13999                           tablat	equ	0xFF5
 14000                           prodh	equ	0xFF4
 14001                           prodl	equ	0xFF3
 14002                           intcon	equ	0xFF2
 14003                           postinc0	equ	0xFEE
 14004                           fsr0h	equ	0xFEA
 14005                           fsr0l	equ	0xFE9
 14006                           wreg	equ	0xFE8
 14007                           fsr1h	equ	0xFE2
 14008                           fsr1l	equ	0xFE1
 14009                           indf2	equ	0xFDF
 14010                           fsr2h	equ	0xFDA
 14011                           fsr2l	equ	0xFD9
 14012                           status	equ	0xFD8
 14013                           
 14014                           	psect	temp
 14015  00004F                     btemp:
 14016                           	opt stack 0
 14017  00004F                     	ds	1
 14018  0000                     int$flags	set	btemp
 14019  0000                     wtemp6	set	btemp+1
 14020                           pclatu	equ	0xFFB
 14021                           pclath	equ	0xFFA
 14022                           tblptru	equ	0xFF8
 14023                           tblptrh	equ	0xFF7
 14024                           tblptrl	equ	0xFF6
 14025                           tablat	equ	0xFF5
 14026                           prodh	equ	0xFF4
 14027                           prodl	equ	0xFF3
 14028                           intcon	equ	0xFF2
 14029                           postinc0	equ	0xFEE
 14030                           fsr0h	equ	0xFEA
 14031                           fsr0l	equ	0xFE9
 14032                           wreg	equ	0xFE8
 14033                           fsr1h	equ	0xFE2
 14034                           fsr1l	equ	0xFE1
 14035                           indf2	equ	0xFDF
 14036                           fsr2h	equ	0xFDA
 14037                           fsr2l	equ	0xFD9
 14038                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1361
    Data        2
    BSS         102
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          85     35      67
    COMRAMl           1      0       1
    BANK0           160     17      97
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Read_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Write_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Init_vendmem@chanlink	PTR unsigned char  size(2) Largest target is 1
		 -> chanlink1(BIGRAMl[1]), 

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 80
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), setnotes(CODE[69]), chanresetmsg(CODE[32]), chanlinkm(CODE[55]), 
		 -> vendtimem(CODE[41]), setimemsg(CODE[41]), vendsetup(CODE[80]), pricesetm2(CODE[57]), 
		 -> pricesetmsg(CODE[18]), creditclr(CODE[16]), dacmsg(CODE[13]), hoppcoin(CODE[51]), 
		 -> initnote(CODE[37]), noteerr(CODE[28]), credits(CODE[13]), timemsg(CODE[18]), 
		 -> clrline(CODE[21]), enabled(CODE[10]), disabled(CODE[10]), sensoffmsg(CODE[31]), 
		 -> sensmsg(CODE[11]), linkmsg(CODE[12]), chanmsg(CODE[12]), clrmsg(CODE[10]), 
		 -> onmsg(CODE[4]), offmsg(CODE[4]), servmsg(CODE[80]), inscoin(CODE[49]), 

    displ_note@notestring	PTR unsigned char  size(2) Largest target is 9
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), 


Critical Paths under _main in COMRAMh

    _vend_init->_lcd_string
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_reset->_mdb_comm
    _mdb_noten->_mdb_comm
    _mdb_poll->_mdb_comm
    _mdb_comm->_TMR1_Initialize
    _mdb_comm->_init_mdbdata
    _mdb_comm->_mdb_transmit
    _mdb_transmit->_EUSART1_Write
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _set_notes->_enable_notes
    _enable_notes->_displ_nendis
    _save_notes->_DATAEE_WriteByte
    _displ_nendis->_lcd_string
    _displ_note->_lcd_string
    _price_set->_set_price
    _set_price->_displ_price
    _displ_price->_displ_hex
    _mdb_unlock->_TMR1_Initialize
    _mdb_unlock->_TMR3_Initialize
    _mdb_unlock->_TMR5_Initialize
    _Vend_settime->_Vend_timeset
    _Vend_timeset->_displ_time
    _displ_time->_displ_hex
    _off_sens->_displ_sflags
    _displ_sflags->_lcd_string
    _Reset_settings->_lcd_string
    _Init_vendmem->_DATAEE_ReadByte
    _Chan_link->_Link_chan
    _Link_chan->_displ_lflags
    _displ_lflags->_lcd_string
    _Sensor_set->_displ_sens
    _displ_sens->_displ_hex
    _Hopper_coin->_Update_Hopcoin
    _butindb->_butin
    _Update_Hopcoin->_displ_hex
    _Clear_cred->_lcd_string
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_Update_cashaudit
    _Update_cashaudit->_Write_NVstore
    _Write_NVstore->_DATAEE_WriteByte
    _Read_NVstore->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMh

    None.

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMl

    None.

Critical Paths under _main in BANK0

    _price_set->_set_price
    _displ_price->_displ_hex
    _Vend_settime->_Vend_timeset
    _displ_time->_displ_hex
    _Sens_off->_off_sens
    _Chan_link->_Link_chan
    _displ_sens->_displ_hex
    _Hopper_coin->_displ_hex
    _Update_Hopcoin->_displ_hex
    _displ_credit->_displ_hex

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  342093
                                             14 BANK0      3     3      0
               _CMP1_GetOutputStatus
                    _DATAEE_ReadByte
                  _SYSTEM_Initialize
                              _butin
                         _credit_add
                    _credit_subtract
                       _displ_credit
                       _displ_noteer
                        _displ_price
                      _enter_service
                        _get_channel
                           _lcd_init
                         _lcd_string
                           _mdb_init
                           _mdb_poll
                        _price_check
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   20740
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                       _Init_vendmem
                       _credit_check
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             3     3      0    6424
                                             26 COMRAMh    3     3      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0    1283
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0    1200
                                             23 COMRAMh    3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0    1283
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      31
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _price_check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             1     1      0    1156
                                             23 COMRAMh    1     1      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1    1153
                                             20 COMRAMh    3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      62
                                             19 COMRAMh    1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0     130
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     687
                                             26 COMRAMh    2     2      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     523
                                             25 COMRAMh    1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        0     0      0  259568
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                         _Sensor_set
                         _Vend_setup
                            _butindb
                         _lcd_string
                         _mdb_unlock
                          _price_set
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            0     0      0   42660
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         1     1      0   22621
                                             32 COMRAMh    1     1      0
                            _butindb
                       _displ_nendis
                         _lcd_string
                         _save_notes
 ---------------------------------------------------------------------------------
 (4) _save_notes                                           0     0      0    3007
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         2     2      0    9677
                                             30 COMRAMh    2     2      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           2     0      2   10257
                                             30 COMRAMh    2     0      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _price_set                                            0     0      0   27383
                       _Read_Service
                            _butindb
                         _lcd_string
                          _set_price
 ---------------------------------------------------------------------------------
 (3) _set_price                                            4     4      0   17567
                                             32 COMRAMh    2     2      0
                                             12 BANK0      2     2      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                        _displ_price
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _displ_price                                          1     1      0    3010
                                             31 COMRAMh    1     1      0
                          _displ_hex
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _mdb_unlock                                           1     1      0       0
                                             20 COMRAMh    1     1      0
                    _CMP1_Initialize
                    _DAC1_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _Vend_setup                                           0     0      0  112550
                          _Chan_link
                       _Init_vendmem
                     _Reset_settings
                           _Sens_off
                       _Vend_settime
                            _butindb
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _Vend_settime                                         0     0      0   37095
                       _Read_Service
                       _Vend_timeset
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Vend_timeset                                         4     4      0   27174
                                             33 COMRAMh    2     2      0
                                             12 BANK0      2     2      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                         _displ_time
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_time                                           2     1      1   12533
                                             31 COMRAMh    2     1      1
                          _displ_hex
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Sens_off                                             0     0      0   25749
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
                           _off_sens
 ---------------------------------------------------------------------------------
 (4) _off_sens                                             3     3      0   15828
                                              0 BANK0      3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                       _displ_sflags
 ---------------------------------------------------------------------------------
 (5) _displ_sflags                                         3     1      2   10672
                                             30 COMRAMh    3     1      2
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Reset_settings                                       4     4      0   12687
                                             30 COMRAMh    4     4      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Init_vendmem                                         5     5      0    1669
                                             20 COMRAMh    5     5      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _Chan_link                                            2     2      0   25568
                                              3 BANK0      2     2      0
                          _Link_chan
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _get_channel                                          2     2      0     105
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (4) _Link_chan                                            5     5      0   15647
                                             33 COMRAMh    2     2      0
                                              0 BANK0      3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _Read_Service
                            _butindb
                       _displ_lflags
 ---------------------------------------------------------------------------------
 (5) _displ_lflags                                         3     2      1   10612
                                             30 COMRAMh    3     2      1
                        _lcd_dispadd
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Read_Service                                         1     1      0      34
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           1     1      0   25403
                                             33 COMRAMh    1     1      0
                            _butindb
                         _displ_sens
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_sens                                           2     1      1   15494
                                             31 COMRAMh    2     1      1
               _CMP1_GetOutputStatus
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          1     1      0   29171
                                             33 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                     _Update_Hopcoin
                            _butindb
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              4     4      0     170
                                             20 COMRAMh    4     4      0
                              _butin
 ---------------------------------------------------------------------------------
 (5) _butin                                                2     2      0      68
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (3) _Update_Hopcoin                                       2     1      1   15397
                                             31 COMRAMh    2     1      1
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           2     2      0   12619
                                             30 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Audit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0   10222
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     610
                                             25 COMRAMh    3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0   13310
                                             31 COMRAMh    1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3    9612
                                             25 COMRAMh    5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (5) _displ_hex                                           15    12      3    2162
                                             28 COMRAMh    3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           1     1      0     424
                                             24 COMRAMh    1     1      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     229
                                             22 COMRAMh    2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     164
                                             20 COMRAMh    2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      68
                                             18 COMRAMh    2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___ltmod                                              7     1      6     412
                                             18 COMRAMh    7     1      6
 ---------------------------------------------------------------------------------
 (6) ___ltdiv                                             10     4      6     421
                                             18 COMRAMh   10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0    1502
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _credit_subtract                                      1     1      0    4540
                                             22 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _credit_add                                           1     1      0   11115
                                             29 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                   _Update_cashaudit
 ---------------------------------------------------------------------------------
 (2) _Update_cashaudit                                     1     1      0    6544
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (3) _Write_NVstore                                        6     1      5    3978
                                             22 COMRAMh    6     1      5
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    3007
                                             18 COMRAMh    4     1      3
 ---------------------------------------------------------------------------------
 (3) _Read_NVstore                                         6     1      5    2504
                                             20 COMRAMh    6     1      5
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2    1502
                                             18 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR5_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0       0
                                              0 COMRAMh   18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (13) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _DATAEE_ReadByte
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
   _butin
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _Update_cashaudit
       _Read_NVstore
         _DATAEE_ReadByte
       _Write_NVstore
         _DATAEE_WriteByte
   _credit_subtract
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_price
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _enter_service
     _Audit
     _Clear_cred
       _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Hopper_coin
       _DATAEE_ReadByte
       _Update_Hopcoin
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Sensor_set
       _butindb
         _butin
       _displ_sens
         _CMP1_GetOutputStatus
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Vend_setup
       _Chan_link
         _Link_chan
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _Read_Service
           _butindb
             _butin
           _displ_lflags
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Init_vendmem
         _DATAEE_ReadByte
       _Reset_settings
         _DATAEE_WriteByte
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Sens_off
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _off_sens
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_sflags
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
       _Vend_settime
         _Read_Service
         _Vend_timeset
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_time
             _displ_hex
               ___ltdiv
               ___ltmod
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _butindb
       _butin
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_unlock
       _CMP1_Initialize
       _DAC1_Initialize
       _TMR1_Initialize
       _TMR3_Initialize
       _TMR5_Initialize
     _price_set
       _Read_Service
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _set_price
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _butindb
           _butin
         _displ_price
           _displ_hex
             ___ltdiv
             ___ltmod
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _save_notes
           _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _get_channel
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _price_check
   _vend_init
     _DAC1_SetOutput
     _DATAEE_ReadByte
     _Init_vendmem
       _DATAEE_ReadByte
     _credit_check
       _DATAEE_ReadByte
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            E7D      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      33        0.0%
BANK13             100      0       0      34        0.0%
BITBANK12          100      0       0      31        0.0%
BANK12             100      0       0      32        0.0%
BITBANK11          100      0       0      29        0.0%
BANK11             100      0       0      30        0.0%
BITBANK10          100      0       0      27        0.0%
BANK10             100      0       0      28        0.0%
BITBANK9           100      0       0      24        0.0%
BANK9              100      0       0      25        0.0%
BITBANK8           100      0       0      22        0.0%
BANK8              100      0       0      23        0.0%
BITBANK7           100      0       0      20        0.0%
BANK7              100      0       0      21        0.0%
BITBANK6           100      0       0      18        0.0%
BANK6              100      0       0      19        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       9        0.0%
BITBANK0            A0      0       0       6        0.0%
BANK0               A0     11      61       7       60.6%
BITBANK14           88      0       0      35        0.0%
BANK14              88      0       0      36        0.0%
COMRAMh             55     23      43       2       78.8%
BITCOMRAMh          55      0       0       0        0.0%
BIGRAMl              2      0       0      38        0.0%
BITCOMRAMl           1      0       0       1        0.0%
COMRAMl              1      0       1       3      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      26        0.0%
DATA                 0      0      A5       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Mar 24 13:15:22 2018

                       lcd_writeC@lcdata 0023                             ?_displ_price 0000  
                            __CFG_CP$OFF 000000                        ??_CMP1_Initialize 001D  
                                     l91 1F80                            ?_displ_credit 0000  
                          ?_displ_lflags 0029                            ?_displ_nendis 000B  
                          ?_displ_sflags 0029                          lcd_write@lcdata 0020  
                          ?_displ_noteer 0000                              __CFG_LVP$ON 000000  
                                    LATE 000F87                          _DAC1_Initialize 1FCE  
                                    l245 1B32                                      _PR2 000FBC  
                                    _PR4 000FB6                             __CFG_CPD$OFF 000000  
                        _timer1ReloadVal 00BE                  __size_of_PMD_Initialize 001C  
                     get_channel@channel 001D                          _TMR2_Initialize 1E62  
                                    prod 000FF3                                      wreg 000FE8  
                       ??_Update_Hopcoin 002B                           _DAC1_SetOutput 1FDA  
                         ??_credit_check 001F                              main@channel 00B7  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                          ?_mdb_security 0000                                     l1010 00BA  
                                   l1011 00B0                                     l1003 000C  
                                   l1012 0094                                     l1020 008E  
                                   l1013 007C                                     l1006 004C  
                                   l1023 00C0                                     l1015 0082  
                                   l1007 005E                                     l1040 10C2  
                                   l1024 00CA                                     l1041 10C8  
                                   l1042 10CE                                     l2002 1234  
                                   l1026 011C                                     l1018 0088  
                                   l1043 10D6                                     l1035 10AE  
                                   l2100 1E90                                     l1036 10E8  
                                   l1044 10DC                                     l2013 1CB2  
                                   l2101 1E88                                     l1045 10E2  
                                   l1037 10B6                                     l2014 1C8E  
                                   l2022 1818                                     l2110 035A  
                                   l1038 111A                                     l2007 1DCE  
                                   l2111 02CC                                     l1039 10BC  
                                   l2008 1DB6                                     l2120 038A  
                                   l2112 0304                                     l2033 1D00  
                                   l2121 0460                                     l2034 1CFA  
                                   l2050 0AA2                                     l2122 03AE  
                                   l2051 0A64                                     l2131 1948  
                                   l2123 03D2                                     l2107 028C  
                                   l1500 04A4                                     l2060 1352  
                                   l2052 0AB6                                     l2140 0652  
                                   l2132 195E                                     l2124 03F6  
                                   l2108 0344                                     l1501 04AC  
                                   l2053 0A70                                     l2141 05D2  
                                   l2133 1968                                     l2125 041A  
                                   l2109 0296                                     l1510 0524  
                                   l2070 1376                                     l2054 0A7C  
                                   l2150 1786                                     l2142 0666  
                                   l2118 0382                                     l1511 052C  
                                   l2063 1390                                     l2151 17B6  
                                   l2143 0610                                     l2119 0440  
                                   l1504 0534                                     l2064 135C  
                                   l2048 0AD4                                     l2080 098C  
                                   l2160 0CCC                                     l2152 17C0  
                                   l2144 064E                                     l1521 0E6E  
                                   l1505 0504                                     l2065 1366  
                                   l2049 0A5C                                     l2081 09EE  
                                   l1522 0E54                                     l1530 0F14  
                                   l2082 09A2                                     l2162 0D10  
                                   l2170 1996                                     l1531 0EC4  
                                   l1507 050C                                     l2059 137A  
                                   l2067 136A                                     l2083 09B8  
                                   l2163 0D0E                                     l2171 19AC  
                                   l2139 05CA                          _timer3ReloadVal 00BC  
                                   l1540 170A                                     l1508 0514  
                                   l2084 09FE                                     l2180 089A  
                                   l2172 19B6                                     l1541 1760  
                                   l1509 051C                                     l1461 1566  
                                   l2181 0928                                     l2093 1414  
                                   l1542 1720                                     l1518 0E48  
                                   l1462 1576                                     l2078 0984  
                                   l2158 0CAA                                     l2182 08D6  
                                   l2094 1426                                     l1551 1D2C  
                                   l1543 1736                                     l1519 0DEA  
                                   l2079 09DA                                     l2183 0910  
                                   l2095 1430                                     l1528 0EB6  
                                   l1529 0EBE                                     l1473 0DB4  
                                   l1466 12C0                                     l2178 0892  
                                   l1539 174C                                     l1467 12A0  
                                   l2179 0914                                     l1468 12B8  
                                   l2188 1034                                     l1484 1CDC  
                                   l2700 0796                                     l2189 1020  
                                   l2701 084C                                     l1557 1F36  
                                   l1494 04B4                                     l2702 07AC  
                                   l1495 0484                                     l2703 07C2  
                                   l1496 04EA                                     l2704 07D8  
                                   l1497 048C                                     l2713 1460  
                                   l2705 07EE                                     l1498 0494  
                                   l2714 14B4                                     l2706 0804  
                                   l1499 049C                                     l2715 1468  
                                   l2716 14C8                                     l2740 015E  
                                   l2717 147A                                     l2741 0166  
                                   l2718 148E                                     l2750 0242  
                                   l2742 016E                                     l2751 01B6  
                                   l2743 0176                                     l2760 01E0  
                                   l2752 01BA                                     l2744 017E  
                                   l2761 01E4                                     l2753 01C4  
                                   l2737 0188                                     l2682 1DE6  
                                   l2770 06E6                                     l2762 01E8  
                                   l2754 01C8                                     l2738 0156  
                                   l2690 12E6                                     l2771 0718  
                                   l2747 01EE                                     l2755 01CC  
                                   l2691 12CC                                     l2772 06EE  
                                   l2756 01D0                                     l2748 01AA  
                                   l2757 01D4                                     l2749 01B2  
                                   l4454 1652                                     l2766 06C0  
                                   l2758 01D8                                     l4455 1648  
                                   l2767 0690                                     l2759 01DC  
                                   l4464 18E6                                     l4465 18DC  
                                   l2697 0852                                     l4458 167C  
                                   l2698 078A                                     l4459 1688  
                                   l2699 0826                                     l2779 075E  
                                   l4468 1906                                     l1996 1624  
                                   l4469 1912                                     l1997 1600  
                                   l9615 0F4C                                     l8599 1FA6  
                                   l8785 1DDE                                     u3100 0D1A  
                                   _LATA 000F83                                     u3030 1FBC  
                                   _LATB 000F84                                     _LATC 000F85  
                                   _LATD 000F86                                     _LATE 000F87  
                                   u3140 06C6                                     u3205 0736  
                                   u3207 0738                                     u4017 16A0  
                                   u3170 0722                                     _T2PR 000FBC  
                                   u4107 19EA                                     u4027 0F60  
                                   u3155 0710                                     u4117 1868  
                                   u4037 0F6E                                     u3157 0712  
                                   u3190 072C                                     u4047 0FD8  
                                   u3280 1362                                     u4057 0AE0  
                                   _T4PR 000FB6                                     u4067 107A  
                                   u2820 18EA                                     u4077 17A8  
                                   u4087 1D10                                     u3560 0F6C  
                                   u4097 19C6                                     _PMD0 000EE1  
                                   _PMD1 000EE2                                     u2790 1656  
                                   _PMD2 000EE3                                     _PMD3 000EE4  
                                   _PMD4 000EE5                                     u2945 1B40  
                                   _PMD5 000EE6                                     u2946 1B42  
                                   _TMR2 000FBB                                     _TMR4 000FB5  
          __size_of_eusartmdb_Initialize 0016                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                          _EUSART1_Write 1FA4                            __CFG_FCMEN$ON 000000  
                                   _cash 003A                                     _dest 00A0  
                                   _main 0000                                     _exit FC26  
                          ?_EUSART1_Read 000B                            ?_mdb_transmit 0000  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004F  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 00AA                          _timer5ReloadVal 00BA  
                   __end_of_chanresetmsg FEEE                               _Clear_cred 1820  
                        _TMR3_Initialize 1BE8                   __size_of_enter_service 0096  
                          __CFG_CSWEN$ON 000000                             ___param_bank 000000  
                          __CFG_SCANE$ON 000000                           ??_displ_credit 002A  
              __size_of_DATAEE_WriteByte 003A                           ??_displ_lflags 002A  
                __end_of_TMR0_Initialize 1DB0                           ??_displ_nendis 0029  
                         ??_displ_sflags 002B           __size_of_OSCILLATOR_Initialize 0018  
                         ??_displ_noteer 0029                            ?_Read_NVstore 001F  
          __end_of_OSCILLATOR_Initialize 1F1C                                    ?_main 000B  
                          __CFG_WDTE$OFF 000000                                    _T1CLK 000FD2  
                                  _T1CON 000FCF                                    _T3CLK 000FCC  
                                  _T2CON 000FBD                                    _LATA6 007C1E  
                                  _T3CON 000FC9                                    _LATA7 007C1F  
                                  _CMOUT 000F3D                                    _T5CLK 000FC6  
                                  _T4CON 000FB7                                    _T2HLT 000FBE  
                                  _T5CON 000FC3                          __end_of___ltdiv 1696  
                                  _T4HLT 000FB8                           __CFG_DEBUG$OFF 000000  
                        __end_of___ltmod 1920                                    _T2TMR 000FBB  
                                  _T2RST 000FC0                                    _T4TMR 000FB5  
                                  _T4RST 000FBA                   __end_of_DAC1_SetOutput 1FE2  
                                  i2l189 005E                                    _OSCEN 000EDC  
                 __size_of_Write_NVstore 0028                                    _TMR0H 000FD4  
                                  _TMR1H 000FCE                          __end_of_cc_poll FC6A  
                                  _TMR0L 000FD3                                    _TMR1L 000FCD  
                                  _TMR3H 000FC8                                    _TMR3L 000FC7  
                                  _TMR5H 000FC2                                    _TMR5L 000FC1  
                                  _PORTA 000F8D                          __end_of_cc_test FC75  
                                  _PORTD 000F90                          __end_of_cc_stop FC70  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                          __end_of_chanmsg FF98  
                          ?_Read_Service 000B                          __end_of_cashint FC5F  
                        __end_of_cashinv FC61                       off_sens@senseflags 00A9  
                                  _Audit 2012                            __CFG_WRT0$OFF 000000  
                        _TMR4_Initialize 1E9C                            __CFG_WRT1$OFF 000000  
                         __pidataCOMRAMh 2015                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                          __end_of_enabled FFCD  
                         __CFG_EBTR0$OFF 000000                        lcd_write@savelatd 001F  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                          __end_of_credclr FB7B  
                         __CFG_EBTR4$OFF 000000                          __end_of_credmem FC63  
                         __CFG_EBTR5$OFF 000000                          __end_of_credits FF8C  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                        __end_of_clrline FF3E                          __end_of_dispclr FC9A  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                        __end_of_dispoff FC93                            __CFG_WRTD$OFF 000000  
                          ??_Hopper_coin 002C                                    _bflag 0046  
                        _DATAEE_ReadByte 1EEC                           __CFG_EBTRB$OFF 000000  
                         ??_mdb_security 0022                  __end_of_PIN_MANAGER_IOC 200C  
                        __end_of_butindb 1D20                          __end_of_dsphome FC98  
                                  _line1 FC8F                                    _line2 FC8E  
                                  _line3 FC8D                                    _line4 FC8C  
                                  _count 004C                                    _butin 19BC  
                        __end_of_mastadd FC77                          __end_of_hopcoin FC51  
                        __end_of_inithop FBE4                                    _vcash 009B  
                        __end_of_inscoin FE57                                    _onmsg FFFA  
                     __CFG_MCLRE$EXTMCLR 000000                          __end_of_linkmsg FFA4  
                        __end_of_second1 FC69                           ?_EUSART1_Write 000B  
                __end_of_TMR1_Initialize 1C54                            ?_Init_vendmem 000B  
                                  pclath 000FFA                                    tablat 000FF5  
                        __end_of_noteerr FF29                          __end_of_tenrand FFD6  
                        __end_of_sensmsg FFAF                          __end_of_sensval FC55  
                        __end_of_timemsg FF50                          __end_of_servmsg FCEE  
                         ??_EUSART1_Read 001D                           ??_mdb_transmit 001E  
                                  status 000FD8                                    wtemp6 0050  
                         _Reset_settings 0FE8                          _TMR5_Initialize 1BB2  
           __end_of_CMP1_GetOutputStatus 1FC0                          __initialization 1A06  
                            butin@butons 001E               __end_of_EUSART1_Initialize 1F5E  
                           __end_of_main 0126                  __end_of_DAC1_Initialize 1FDA  
                           __end_of_exit FC2B                       __size_of_Chan_link 0062  
                    displ_time@motortime 002B                  __end_of_TMR2_Initialize 1E80  
                         ??_Read_NVstore 0024                                   ??_main 00B5  
                          __activetblptr 000003                          ?_DAC1_SetOutput 000B  
                   __end_of_enable_notes 14CE                           ??_Read_Service 001D  
                            butindb@butt 0022                         __end_of_Sens_off 19BC  
                                 ?_Audit 0000                            _enter_service 108A  
                                 ?_butin 0000                                   _CM1NCH 000F3B  
                                 _CM1PCH 000F3C                           ??_Init_vendmem 001F  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                                   _T0CON0 000FD5  
                                 _T0CON1 000FD6                                   _T1GATE 000FD1  
                                 _T1GCON 000FD0                                   _T3GATE 000FCB  
                                 _T3GCON 000FCA                                   _T5GATE 000FC5  
                                 _T5GCON 000FC4                                   _RC1REG 000F99  
                                 _RC1STA 000F9D                                   _RB5PPS 000EF4  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _RC6PPS 000EFD  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
               __size_of_credit_subtract 0056                         credit_add@credit 0028  
                __end_of_TMR3_Initialize 1C1E                           __CFG_WDTCCS$SC 000000  
                                 _TABLAT 000FF5                            ?_init_mdbdata 000B  
                       __end_of_cc_level FC6F                                   _OSCFRQ 000EDE  
                                 _NVMDAT 000F80                         __end_of_cc_reset FC76  
                                 _TX1REG 000F9A                                   _TX1STA 000F9E  
                    __end_of_Hopper_coin 0ADA                   __end_of_Reset_settings 108A  
                          _Write_NVstore 1DB0                       __size_of_Link_chan 00BA  
                       __end_of_cashoutv FC53                              ?_Clear_cred 0000  
                         __CFG_PWRTE$OFF 000000                  DAC1_SetOutput@inputData 001D  
                   __size_of_get_channel 001C                           __CFG_XINST$OFF 000000  
                       __end_of_disabled FFC3                     __size_of_lcd_dispadd 0018  
                       __end_of_auditmsg FC1E                         __end_of_dispaddr FC99  
                       __end_of_lcd_init 0FE8                         __end_of_lcd_test 1F48  
                       __end_of_mdb_comm 0766                         __end_of_mdb_init 16FE  
                       __end_of_mdb_poll 0248                     __end_of_credit_check 1E42  
                                 _cc_pay FC71                                   _cc_pin FC6D  
                                 _dacmsg FF72                             ?_price_check 0000  
                         __CFG_STVREN$ON 000000                                   _change 009D  
                      ?_Update_cashaudit 000B                               _Sensor_set 092E  
                          displ_nendis@x 002A                                ??___ltdiv 0023  
                        mdb_reset@i_3733 0024                                ??___ltmod 0023  
                                 _credit 003B                                   _lcdata 0045  
                                 _clrmsg FFAF                                   _dispon FC9A  
                                 _mdb_on 200C                                   _dispsl FC90  
                             _Vend_setup 0360                                   _dispsr FC91  
                                 _ercode 0043                                   _hexnum 0096  
                                 _hopadd FC77                         __end_of_off_sens 092E  
                       ?_TMR0_Initialize 0000                  __end_of_TMR4_Initialize 1EB8  
                                 _mcount 0041                                   _offmsg FFF6  
                                 clear_0 1A30                                   clear_1 1A3C  
                     ??_Update_cashaudit 0027                         __end_of_hoperror FC2D  
                       __end_of_hoppcoin FE26                         __end_of_initnote FECE  
                                 _nvcash 0090                                   _noteen 003D  
                                 _senset FBF4                                   _pvcash 004A  
                                 _slvadd 00A3                         __end_of_nochange FBF4  
                   __size_of_displ_price 0040                                   _stradd 0044  
                                 _tvends 0088                        read_busy@savelatd 001E  
                      read_busy@savelate 001D                  __end_of_DATAEE_ReadByte 1F04  
                       __end_of_second_5 FC67                                ??_butindb 001F  
                         _PMD_Initialize 1EB8                           ?_enter_service 0000  
                       __end_of_notebits FC57                         __end_of_pricemsg FC26  
                       __end_of_notetest FC11                             __mediumconst FAAC  
                       __end_of_setnotes FD83                                   tblptrh 000FF7  
                                 tblptrl 000FF6                         __end_of_vendtest FBBA  
                                 tblptru 000FF8                     Update_Hopcoin@newval 002B  
                        ??_EUSART1_Write 001D                         ?_PIN_MANAGER_IOC 000B  
                      __end_of_Chan_link 17C6            __size_of_INTERRUPT_Initialize 0008  
                         ??_init_mdbdata 001D                     __end_of_displ_credit 1C88  
                       ?_TMR1_Initialize 0000                  __end_of_TMR5_Initialize 1BE8  
                   __end_of_displ_lflags 12C8                        displ_lflags@lchan 002B  
       ??_INTERRUPT_InterruptManagerHigh 000B          ?_INTERRUPT_InterruptManagerHigh 000B  
                      _SYSTEM_Initialize 1B7C                     __end_of_displ_nendis 1CEE  
                    Vend_timeset@channel 00B4                               __accesstop 0060  
                __end_of__initialization 1A44                     __end_of_displ_sflags 0DD6  
                   __end_of_displ_noteer 1D82               Reset_settings@chanlinkbits 002B  
                         ?_Write_NVstore 0021                    __end_of_note_features FC85  
                        _CMP1_Initialize 1F5E                          ?_Reset_settings 0000  
                     ?_SYSTEM_Initialize 000B                    __end_of_theft_attempt FC79  
                           __pbssCOMRAMh 002E                            ___rparam_used 000001  
                           __pbssCOMRAMl 004E                            __end_of_Audit 2014  
                           __pidataBANK0 2014                      ??_SYSTEM_Initialize 001F  
                       ?_DAC1_Initialize 0000                     __end_of_mdb_security 1E62  
                       _DATAEE_WriteByte 1B0A                            __end_of_line1 FC90  
                          __end_of_line2 FC8F                            __end_of_line3 FC8E  
                          __end_of_line4 FC8D                            __end_of_butin 1A06  
                          __end_of_onmsg FFFE                    __end_of_note_rejected FC7A  
                       ?_TMR2_Initialize 0000                    __end_of_note_security FC8A  
                 __end_of_PMD_Initialize 1ED4                     __end_of_EUSART1_Read 1F84  
                   __end_of_mdb_transmit 1FA4                               _cc_countrq FC70  
                      __end_of_Link_chan 0D20                             _chanresetmsg FECE  
                                ??_Audit 001D                      __size_of_Clear_cred 0056  
                   _CMP1_GetOutputStatus 1FB2                           Write_NVstore@i 0026  
                     __size_of_displ_hex 00B6                              _Hopper_coin 0A04  
                     __size_of_lcd_write 0032                                  ??_butin 001D  
              __end_of_SYSTEM_Initialize 1BB2                       __size_of_mdb_reset 0086  
                     __size_of_mdb_noten 003A                       __size_of_mdb_waitr 0006  
                     __size_of_mdb_waitx 0006                               __pbssBANK0 0060  
                    displ_hex@hexnumsave 00AF                         ?_TMR3_Initialize 0000  
                   __end_of_Read_NVstore 1CBC                     displ_price@vendprice 002A  
                          _chan1linkbits FC4D                            _chan2linkbits FC4B  
                     __size_of_read_busy 0042                     __end_of_Read_Service 1F96  
                      ??_credit_subtract 0021                            _chan3linkbits FC49  
                              ?_Sens_off 0000                            _chan4linkbits FC47  
                          _chan5linkbits FC45                              ?_Sensor_set 0000  
           __end_of_eusartmdb_Initialize 1F32                              ?_Vend_setup 0000  
                          _chan6linkbits FC43                    __size_of_enable_notes 007A  
                                ?_mdb_on 0000                                  _CM1CON0 000F39  
                                _CM1CON1 000F3A                     __end_of_Init_vendmem 162C  
                          _chan7linkbits FC41                         ?_TMR4_Initialize 0000  
                        ?_PMD_Initialize 0000                            _chan8linkbits FC3F  
                        ??_enter_service 002E                       __size_of_set_price 0118  
                     __size_of_set_notes 00F2                       __size_of_price_set 0080  
                       ?_DATAEE_ReadByte 001D                       __size_of_vend_init 008C  
                  displ_nendis@note2disp 0029                               _credit_add 17C6  
                      __end_of_cc_adpoll FC6B                               _lcd_clockE 1FC0  
                             _lcd_clockH 1FEA                               _lcd_clockL 1FE2  
                      __end_of_cc_enable FC74                                  _SP1BRGH 000F9C  
                                _SP1BRGL 000F9B                               _lcdaddress 00A4  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                                _TBLPTRH 000FF7                        __end_of_chan1time FC3D  
                                _TBLPTRL 000FF6                                  _TBLPTRU 000FF8  
                      __end_of_chan2time FC3B                    ?_CMP1_GetOutputStatus 000B  
                      __end_of_chan3time FC39                        __end_of_chan4time FC37  
                        off_sens@chanbit 00A8                        __end_of_chan5time FC35  
                      __end_of_chan6time FC33                                  _NVMADRH 000F7F  
                        off_sens@channel 00A7                                  _NVMADRL 000F7E  
                             _jammed_err FC7F                        __end_of_chan7time FC31  
                                _OSCTUNE 000EDD                        __end_of_chan8time FC2F  
                                _NVMCON2 000F82                        __end_of_cc_newpin FC6D  
                      __end_of_cc_serial FC6C                               _displ_code 0466  
                                _PPSLOCK 000EA0                               _displ_note 1B44  
                             _displ_sens 1548                               _displ_time 1120  
                __end_of_CMP1_Initialize 1F72                        __end_of_cc_status FC73  
                             _lcd_string 0E8C                               _dispcursor FC95  
                             _lcd_writeC 16FE                                ?_lcd_init 0000  
                          ?_Vend_timeset 0000                            ?_Vend_settime 0000  
                              ?_lcd_test 0000                                ?_mdb_comm 001F  
                              ?_mdb_init 0000                               _dispshleft FC93  
                             _dispnormal FC96                                ?_mdb_poll 0000  
                        ??_Write_NVstore 0026                               _mdb_unlock 0ADA  
                      __end_of_chanlinkm FDF3                         ?_TMR5_Initialize 0000  
                   DATAEE_WriteByte@bAdd 001D                                ?_off_sens 0000  
                         displ_hex@value 00A7                    __size_of_credit_check 0022  
                           _enable_notes 1454                                  __Hparam 0000  
                                __Lparam 0000                               ??_Sens_off 002C  
             __CFG_RSTOSC$HFINTOSC_64MHZ 000000                        __end_of_creditclr FF72  
                         mdb_comm@mcount 001F                        __end_of_displ_hex 0E8C  
                      __end_of_dispfunc1 FC9E                        __end_of_dispfunc2 FC9D  
                      __end_of_dispfunc3 FC9C                        __end_of_lcd_write 1D52  
                      __end_of_fiftyrand FFEE                           mdb_comm@slvadd 0020  
                                ___ltdiv 162C                        __end_of_mdb_reset 134E  
                      __end_of_mdb_noten 1B0A                                  ___ltmod 18CC  
                      __end_of_mdb_waitr 2000                         ??_DAC1_SetOutput 001D  
                      __end_of_mdb_waitx 2006                                  _cc_poll FC69  
                                _cc_test FC74                                  _cc_stop FC6F  
                        __size_of_mdb_on 0004                                  _dbcount 0031  
                       set_price@channel 00B4                                  __pcinit 1A06  
                                _chanmsg FF8C                                  _cashint FC5D  
                   __end_of_init_mdbdata 1DFE                                  _cashinv FC5F  
                   __size_of_price_check 0002                                  __ramtop 0F00  
                                _chkbyte 003F                               _hopercount 00C0  
                                _enabled FFC3                               _errorflags 00A2  
                                __ptext0 0000                                  __ptext1 11B2  
                                __ptext2 1696                                  __ptext3 1E42  
                                __ptext4 12C8                                  __ptext5 1AD0  
                                __ptext6 1F1C                                  __ptext7 1FDA  
                                __ptext8 2010                                  __ptext9 0126  
                                _credclr FB51                                  _credmem FC61  
                                _credits FF7F                                  _command 009E  
                                _clrline FF29                                  _dispclr FC99  
                                _dispoff FC92                                  _mdbdata 0060  
                                _lcdfunc 00A6                                  _lcdline 00A5  
                              _T1CONbits 000FCF                                  _butindb 1CEE  
                                _dsphome FC97                    _OSCILLATOR_Initialize 1F04  
                              _T2CONbits 000FBD                                  _mastadd FC76  
                                _hopcoin FC4F                         set_price@buttons 00B3  
                                _buttons 0039                                  _inithop FBD0  
                              _T3CONbits 000FC9                                  _inscoin FE26  
                                _linkmsg FF98                                _CMOUTbits 000F3D  
                      __end_of_read_busy 1A90                                  _second1 FC67  
                              _T4CONbits 000FB7                       _EUSART1_Initialize 1F48  
               ??_PIN_MANAGER_Initialize 001D                                _T2HLTbits 000FBE  
                  __size_of_displ_credit 0034                                _T5CONbits 000FC3  
                                _nobytes 009F                                  _senschk 0035  
                                _noteerr FF0D                    __size_of_displ_lflags 008A  
                                _tenrand FFCD                                  _notenum 004D  
                                _sensmsg FFA4                                  _sensval FC53  
                                _senspos 0036                                _T4HLTbits 000FB8  
                  __size_of_displ_nendis 0032                                  _pnvcash 0047  
                                _venderr 0034                                  _timemsg FF3E  
                                _servmsg FC9E                    __size_of_displ_sflags 00B6  
                         ??_Vend_timeset 002C                           ??_Vend_settime 002E  
                  __size_of_displ_noteer 0030               __size_of_SYSTEM_Initialize 0036  
                           _credit_check 1E20                               ??_lcd_init 0025  
                             ??_lcd_test 0024                               ??_mdb_comm 0020  
                             ??_mdb_init 0025                     end_of_initialization 1A44  
                      __end_of_secondadd FC65                               ??_mdb_poll 0022  
                              _T2RSTbits 000FC0                      __size_of_Sensor_set 00D6  
                    ?_EUSART1_Initialize 000B                      __size_of_Vend_setup 0106  
                              _T4RSTbits 000FBA                               ??_off_sens 002C  
                          __pdataCOMRAMh 004D                        __end_of_note_poll FC89  
                      __end_of_motimemsg FB24                        __end_of_set_price 0360  
                      __end_of_set_notes 0858                  __size_of_Update_Hopcoin 0086  
                      __end_of_note_type FC88                        __end_of_price_set 1454  
                             _save_notes 1DFE                        __end_of_just_busy FC82  
                      __end_of_priceexit FBD0                        __end_of_sensoffms FB51  
                      __end_of_setimemsg FEA9                             ??_Clear_cred 0029  
                      __end_of_vend_init 123E                    __size_of_mdb_security 0020  
                       ___ltdiv@dividend 001D                        __end_of_rom_error FC81  
                      __end_of_vendtimem FE80                        __end_of_vendsetup FD3E  
                      __end_of_vendstore FC5D                               _note_reset FC8B  
                             _sens_error FC82                               _note_setup FC8A  
                                postinc0 000FEE                    __size_of_EUSART1_Read 0012  
                             _motr_error FC83                    __size_of_mdb_transmit 000E  
                             _just_reset FC7E                            Read_NVstore@i 0024  
                             _pricesetm2 FD83                               _sensoffmsg FEEE  
                   ??_EUSART1_Initialize 001D                               _pricestore FC59  
                  __CFG_WDTCPS$WDTCPS_31 000000                 Init_vendmem@chanlinkbits 001F  
                           _displ_credit 1C54                             _displ_lflags 123E  
                           _displ_nendis 1CBC                                _PORTBbits 000F8E  
                             _venderrors FC57                         displ_code@ercode 0026  
                           _displ_sflags 0D20                             _displ_noteer 1D52  
                             _settimemsg FB7B                        displ_sens@dmsgpos 002A  
                            ?_credit_add 0000                       displ_lflags@chanel 002A  
                            ?_lcd_clockE 0000                              ?_lcd_clockH 0000  
                            ?_lcd_clockL 0000                   ??_CMP1_GetOutputStatus 001D  
                   Vend_timeset@chantime 00B3                         ___ltdiv@quotient 0023  
                  __size_of_Read_NVstore 0034                       __end_of_Clear_cred 1876  
                            ?_displ_code 000B                __size_of_Update_cashaudit 00C4  
                            ?_displ_note 0029                              ?_displ_sens 002A  
                            ?_displ_time 002A                        displ_sens@smsgpos 002B  
                            ?_lcd_string 0024                              ?_lcd_writeC 0000  
                    EUSART1_Write@txData 001D                         ?_CMP1_Initialize 000B  
                       ??_Reset_settings 0029                         __CFG_FEXTOSC$OFF 000000  
               __end_of_DATAEE_WriteByte 1B44                             _mdb_security 1E42  
                            ?_mdb_unlock 0000                     _eusartmdb_Initialize 1F1C  
                  __size_of_Read_Service 0012                        displ_time@channel 002A  
                          ??_get_channel 001D                        get_channel@butons 001E  
                              _Chan_link 1764                             _EUSART1_Read 1F72  
                    __end_of_cashbox_err FC7D                             _mdb_transmit 1F96  
                          ??_lcd_dispadd 0021                               displ_hex@i 00B2  
                    __end_of_chanlinkmsg FAEA                    __size_of_Init_vendmem 0070  
                   _timer0ReloadVal16bit 00B8                          __pcstackCOMRAMh 000B  
                        __pcstackCOMRAMl 0000                               mdb_reset@i 0023  
           __end_of_INTERRUPT_Initialize 1FFA                            ??_displ_price 002A  
                     mdb_transmit@txbyte 001E                               _twentyrand FFEE  
                         __end_of_cc_pay FC72                           __end_of_cc_pin FC6E  
                         __end_of_dacmsg FF7F                           __end_of_clrmsg FFB9  
                         __end_of_dispon FC9B                           __end_of_mdb_on 2010  
                         __end_of_dispsl FC91                           __end_of_dispsr FC92  
                           _Read_NVstore 1C88                         displ_credit@cash 002A  
                         __end_of_hopadd FC78                   ?_OSCILLATOR_Initialize 0000  
                         __end_of_offmsg FFFA                           __end_of_senset FC03  
                    start_initialization 1A06                             _Read_Service 1F84  
               __size_of_TMR0_Initialize 002E          __size_of_PIN_MANAGER_Initialize 007A  
                           ?_Hopper_coin 0000                                _Link_chan 0C66  
                        _credit_subtract 1876                  Update_cashaudit@addcash 0027  
                  ?_eusartmdb_Initialize 0000                    __end_of_EUSART1_Write 1FB2  
                           _Init_vendmem 15BC                               ?_Chan_link 0000  
                            ?_save_notes 0000                      DATAEE_ReadByte@bAdd 001D  
               __size_of_PIN_MANAGER_IOC 0006                            Init_vendmem@i 0023  
                    __size_of_credit_add 005A                         __CFG_LPBOREN$OFF 000000  
                    __size_of_lcd_clockE 000E                      __size_of_lcd_clockH 0008  
                    __size_of_lcd_clockL 0008                 __size_of_TMR1_Initialize 0036  
                  __size_of_init_mdbdata 0026                      __end_of_get_channel 1E9C  
                       ??_PMD_Initialize 001D                             ??_Sensor_set 002C  
                    __size_of_displ_code 0106                      __end_of_lcd_dispadd 1EEC  
                   __end_of_Vend_timeset 066C                     __end_of_Vend_settime 196E  
                      __size_of_Sens_off 004E                      __size_of_displ_note 0038  
                    __size_of_displ_sens 0074                             ??_Vend_setup 002E  
                    __size_of_displ_time 0092                                 ??_mdb_on 001D  
                            __pdataBANK0 00C0                      __size_of_lcd_string 00B4  
                    __size_of_lcd_writeC 0066                      __size_of_mdb_unlock 00C8  
                 displ_sflags@senseflags 002B                 __size_of_DAC1_Initialize 000C  
                    __end_of_displ_price 1AD0                            __pcstackBANK0 00A7  
               __size_of_TMR2_Initialize 001E                      __end_of_dispshright FC95  
                             ?_Link_chan 0000                            butindb@butval 0021  
                              _cc_adpoll FC6A                              _cashbox_err FC7C  
                            __pnvCOMRAMh 004C                                _cc_enable FC73  
                   __end_of_note_removed FC7E                              _chanlinkmsg FAAD  
                              _chan1time FC3B                    credit_subtract@credit 0021  
                   __end_of_note_stacker FC86                                _chan2time FC39  
                              _chan3time FC37                                _chan4time FC35  
                              _chan5time FC33                                _chan6time FC31  
                              _chan7time FC2F                                _chan8time FC2D  
                              _cc_newpin FC6C                     init_mdbdata@initdata 001D  
                              _cc_serial FC6B                       __end_of_Sensor_set 0A04  
                           _init_mdbdata 1DD8                        __size_of_lcd_init 00A8  
                      __size_of_lcd_test 0016                       __end_of_Vend_setup 0466  
                      __size_of_mdb_comm 00FA                                _cc_status FC72  
                      __size_of_mdb_init 0068                           _Update_Hopcoin 134E  
                      __size_of_mdb_poll 0122                                __pnvBANK0 00B8  
                              _chanlink1 000003                                _chanlink2 000004  
                              _chanlink3 000005                                _chanlink4 000006  
                              _chanlink5 000007                                _chanlink6 000008  
                              _chanlink7 000009                                _chanlink8 00000A  
                              _chanlinkm FDBC                        __size_of_off_sens 00D6  
                 _PIN_MANAGER_Initialize 14CE                 __size_of_TMR3_Initialize 0036  
                              __pintcode 0008                            __pmediumconst FAAC  
                       Link_chan@chanbit 00A7                         Link_chan@channel 00A8  
                               ?___ltdiv 001D                                 ?___ltmod 001D  
                       __CFG_PPS1WAY$OFF 000000                                _creditclr FF62  
                               _DAC1CON0 000F33                                 _DAC1CON1 000F34  
                              _displ_hex 0DD6                                _dispfunc1 FC9D  
                              _dispfunc2 FC9C                                _dispfunc3 FC9B  
                              _lcd_write 1D20                       Hopper_coin@coinval 002C  
                              _fiftyrand FFE6                                _mdb_reset 12C8  
                              _mdb_noten 1AD0                                _mdb_waitr 1FFA  
                              _mdb_waitx 2000                                 _BAUD1CON 000F9F  
                __end_of_credit_subtract 18CC                                 ?_butindb 0000  
                  __end_of_enter_service 1120                      __size_of_save_notes 0022  
                         __size_of_Audit 0002                                _mdbtxbyte 00A1  
               __size_of_TMR4_Initialize 001C                         _Update_cashaudit 0BA2  
                         _acept_disabled FC7B                   ??_eusartmdb_Initialize 001D  
                         __size_of_butin 004A                                 _T2CLKCON 000FBF  
               __size_of_DATAEE_ReadByte 0018                                _read_busy 1A4E  
                               _T4CLKCON 000FB9                     _INTERRUPT_Initialize 1FF2  
                 __end_of_Update_Hopcoin 13D4                         ___ltmod@dividend 001D  
                  lcd_dispadd@lcdaddress 0021                        ??_TMR0_Initialize 001D  
                  __end_of_Write_NVstore 1DD8                              _get_channel 1E80  
                               _LATCbits 000F85                              ??_Chan_link 00AA  
                              _secondadd FC63                    lcd_dispadd@lcdatasave 0022  
                               _IPR0bits 000EBA                                 _PIE0bits 000EC2  
                          _note_features FC84                              _lcd_dispadd 1ED4  
                    __CFG_BORV$VBOR_2P45 000000                            _theft_attempt FC78  
                     __end_of_cc_countrq FC71                                 _PIR0bits 000ECA  
                        ___ltdiv@divisor 0020                                 _PIR3bits 000ECD  
                               _PIR4bits 000ECE                                 _PIR7bits 000ED1  
                        ___ltdiv@counter 0026                                _note_poll FC88  
                              _motimemsg FAEA                                _set_price 0248  
                              _set_notes 0766                 __size_of_TMR5_Initialize 0036  
                              _note_type FC87                                _price_set 13D4  
                              _just_busy FC81                                _priceexit FBBA  
                              _sensoffms FB24                            ??_price_check 001D  
                              _pricevend 0080                                _setimemsg FE80  
                              _vend_init 11B2                                _sensorval 0037  
                              _rom_error FC80                        ??_PIN_MANAGER_IOC 000B  
                            _displ_price 1A90                                _vendprice 0038  
                              _vendtimem FE57                                _vendsetup FCEE  
                              _vendstore FC5B                            _note_rejected FC79  
                      ??_TMR1_Initialize 001D                               ?_displ_hex 0027  
                     Link_chan@linkflags 00A9                               ?_lcd_write 0000  
                          _note_security FC89                      __end_of_hundredrand FFE6  
                             ?_mdb_reset 0000                               ?_mdb_noten 0000  
                            _dispshright FC94                               ?_mdb_waitr 0000  
                             ?_mdb_waitx 000B                             ??_credit_add 0028  
                           ??_lcd_clockE 001D                             ??_lcd_clockH 001D  
                           ??_lcd_clockL 001D                   Write_NVstore@storesize 0025  
                              mdb_comm@i 0021                   __end_of_acept_disabled FC7C  
                              mdb_init@i 0027                    DATAEE_WriteByte@bData 001F  
                           ??_displ_code 0024                                mdb_poll@i 0022  
                        displ_hex@hexnum 0027                             ??_displ_note 002B  
                           ??_displ_sens 002B                             ??_displ_time 002B  
                            ??_Link_chan 002C                             ??_lcd_string 0027  
                           ??_lcd_writeC 0023                               ?_read_busy 0000  
                  ?_INTERRUPT_Initialize 0000                        ??_DAC1_Initialize 001D  
                           ??_mdb_unlock 001F                        ?_DATAEE_WriteByte 001D  
                        ?_Update_Hopcoin 002A                     __size_of_Hopper_coin 00D6  
                      ??_TMR2_Initialize 001D                       ??_DATAEE_WriteByte 0020  
                    lcd_string@lcdstring 0024                    __size_of_Vend_timeset 0100  
                  __size_of_Vend_settime 004E                                 __Hrparam 0000  
                       Sensor_set@dacpos 002C                                 _Sens_off 196E  
                               __Lrparam 0000                       __end_of_credit_add 1820  
                             ?_set_price 0000                       __CFG_BOREN$SBORDIS 000000  
                             ?_set_notes 0000                       __end_of_lcd_clockE 1FCE  
                             ?_price_set 0000                       __end_of_lcd_clockH 1FF2  
                     __end_of_lcd_clockL 1FEA                               ?_vend_init 0000  
                ??_OSCILLATOR_Initialize 001D                       Read_Service@senval 001D  
                     __end_of_jammed_err FC80                       __end_of_displ_code 056C  
                     __end_of_displ_note 1B7C                       __end_of_displ_sens 15BC  
                     __end_of_displ_time 11B2              __size_of_EUSART1_Initialize 0016  
                       __size_of___ltdiv 006A                         __size_of___ltmod 0054  
                     __end_of_lcd_string 0F40                       __end_of_dispcursor FC96  
                     __end_of_lcd_writeC 1764                           _invalid_escrow FC7A  
                    __end_of_note_escrow FC87                       __end_of_dispshleft FC94  
                     __end_of_dispnormal FC97                        ??_TMR3_Initialize 001D  
                     __end_of_mdb_unlock 0BA2                                 _cc_level FC6E  
                Update_Hopcoin@direction 002A                      __end_of_price_check 2012  
                               _cc_reset FC75                         ?_credit_subtract 0000  
                            _dspposition 0042                               _T0CON0bits 000FD5  
                       __size_of_butindb 0032                                 _cctflags 004E  
                               _cashoutv FC51                  __size_of_DAC1_SetOutput 0008  
          __size_of_CMP1_GetOutputStatus 000E                                 __ptext10 066C  
                               __ptext11 1FFA                                 __ptext20 108A  
                               __ptext12 1F96                      __end_of_pricesetmsg FF62  
                               __ptext21 0766                                 __ptext13 2000  
                             _T1GCONbits 000FD0                                 __ptext30 0360  
                               __ptext22 1454                                 __ptext14 1FA4  
                               __ptext31 1920                                 __ptext23 1DFE  
                               __ptext15 200C                                 __ptext40 1E80  
                               __ptext32 056C                                 __ptext24 1CBC  
                               __ptext16 1DD8                                 __ptext41 0C66  
                               __ptext33 1120                                 __ptext25 1B44  
                               __ptext17 1F72                                 __ptext50 134E  
                               __ptext42 123E                                 __ptext34 196E  
                               __ptext26 13D4                                 __ptext18 0F40  
                               __ptext51 1820                                 __ptext43 1F84  
                               __ptext35 0858                                 __ptext27 0248  
                               __ptext19 1F32                                 __ptext60 1D20  
                               __ptext52 2012                                 __ptext44 092E  
                               __ptext36 0D20                                 __ptext28 1A90  
                               __ptext61 1A4E                                 __ptext53 1D52  
                               __ptext45 1548                                 __ptext37 0FE8  
                               __ptext29 0ADA                                 __ptext70 0BA2  
                               __ptext62 1FE2                                 __ptext54 0466  
                               __ptext46 1FB2                                 __ptext38 15BC  
                               __ptext71 1DB0                                 __ptext63 1FEA  
                               __ptext55 1C54                                 __ptext47 0A04  
                               __ptext39 1764                                 __ptext80 1C1E  
                               __ptext72 1B0A                                 __ptext64 1FC0  
                               __ptext56 0E8C                                 __ptext48 1CEE  
                               __ptext81 1D82                                 __ptext73 1C88  
                               __ptext65 18CC                                 __ptext57 0DD6  
                               __ptext49 19BC                                 __ptext90 2006  
                               __ptext82 1EB8                                 __ptext74 1EEC  
                               __ptext66 162C                                 __ptext58 16FE  
                               __ptext83 14CE                                 __ptext75 1B7C  
                               __ptext67 1E20                                 __ptext59 1ED4  
                               __ptext84 1F04                                 __ptext76 1BB2  
                               __ptext68 1876                                 __ptext85 1FF2  
                               __ptext77 1E9C                                 __ptext69 17C6  
                               __ptext86 1F48                                 __ptext78 1BE8  
                               __ptext87 1FCE                                 __ptext79 1E62  
                               __ptext88 1F5E                                 _disabled FFB9  
                    __end_of_sensorflags FC3F                                 _auditmsg FC11  
                               _dispaddr FC98                                 _lcd_init 0F40  
                               _lcd_test 1F32                                 _mdb_comm 066C  
                               _mdb_init 1696                             _Vend_timeset 056C  
                           _Vend_settime 1920                                 _mdb_poll 0126  
                               _mdbflags 003E                               _T3GCONbits 000FCA  
            DATAEE_WriteByte@GIEBitValue 0020                    __end_of_chan1linkbits FC4F  
                      ??_TMR4_Initialize 001D                                 _off_sens 0858  
                          __size_of_main 0126                               _T5GCONbits 000FC4  
                               _hoperror FC2B                             ??_save_notes 0021  
                               _hoppcoin FDF3                                 _initnote FEA9  
                  __end_of_chan2linkbits FC4D                                 _hpserial 0093  
                               _nochange FBE4                          ___ltmod@divisor 0020  
                      ??_DATAEE_ReadByte 001F                     __CFG_WDTCWS$WDTCWS_7 000000  
                  __end_of_chan3linkbits FC4B                 __size_of_CMP1_Initialize 0014  
                               _second_5 FC65                          ___ltmod@counter 0023  
                  __end_of_chan4linkbits FC49                               _RC1STAbits 000F9D  
                               _vcashout 0099                                 _notebits FC55  
                               _notebyte 0040                                 _pricemsg FC1E  
                  __end_of_chan5linkbits FC47                                 _notetest FC03  
                               _venflags 002E                                 _setnotes FD3E  
                          init_mdbdata@i 001E                                 _vendtest FBA1  
                            _hundredrand FFDE                    __end_of_chan6linkbits FC45  
                               int$flags 004F                   __end_of_invalid_escrow FC7B  
                               _outcoins 0033                    __end_of_chan7linkbits FC43  
                           _note_removed FC7D                    Write_NVstore@storeadd 0021  
                  Read_NVstore@storesize 0023                    Write_NVstore@storemem 0023  
                           _note_stacker FC85                    __end_of_chan8linkbits FC41  
                            ??_displ_hex 002A                              ??_lcd_write 001F  
                      ??_TMR5_Initialize 001D                              ??_mdb_reset 0022  
                            ??_mdb_noten 0022                              ??_mdb_waitr 001D  
                            ??_mdb_waitx 001D                               _INTCONbits 000FF2  
                            _NVMCON1bits 000F81                       __end_of_save_notes 1E20  
                 ??_INTERRUPT_Initialize 001D                              ??_read_busy 001D  
                     __end_of_note_reset FC8C                           _twohundredrand FFD6  
                     __end_of_sens_error FC83                       __end_of_note_setup FC8B  
                               intlevel2 0000                       __end_of_motr_error FC84  
                     __end_of_just_reset FC7F                       __end_of_pricesetm2 FDBC  
                     __end_of_sensoffmsg FF0D                  ?_PIN_MANAGER_Initialize 000B  
                     __end_of_pricestore FC5B                        __CFG_CLKOUTEN$OFF 000000  
                          ?_enable_notes 0000                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors FC59                       __end_of_settimemsg FBA1  
                __size_of_Reset_settings 00A2                      displ_sflags@chanbit 002A  
                            _note_escrow FC86                              ??_set_price 002B  
                            ??_set_notes 002C                              ??_price_set 002D  
               __end_of_Update_cashaudit 0C66                     Read_NVstore@storeadd 001F  
                            ??_vend_init 0029                     Read_NVstore@storemem 0021  
                            _noteen_byte 003C                              _price_check 2010  
                      lcd_string@lcdline 0026                   __size_of_EUSART1_Write 000E  
                   displ_note@notestring 0029   __end_of_INTERRUPT_InterruptManagerHigh 00AA  
__size_of_INTERRUPT_InterruptManagerHigh 00A2           _INTERRUPT_InterruptManagerHigh 0008  
                             _RX1PPSbits 000EB5                              _pricesetmsg FF50  
                             _RX2PPSbits 000E8D                              _sensorflags FC3D  
                      lcd_test@character 0024                          _TMR0_Initialize 1D82  
                     displ_sflags@chanel 0029                     Init_vendmem@chanlink 0021  
                 __end_of_twohundredrand FFDE                            ?_credit_check 0000  
                             _TX1STAbits 000F9E           __end_of_PIN_MANAGER_Initialize 1548  
                    enable_notes@notenum 002B                             ?_get_channel 0000  
                     __end_of_twentyrand FFF6                          _PIN_MANAGER_IOC 2006  
                         ??_enable_notes 002B                             ?_lcd_dispadd 0000  
                        _TMR1_Initialize 1C1E                     displ_lflags@linkflgs 0029  
