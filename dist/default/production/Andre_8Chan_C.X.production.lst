

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Dec 23 12:39:54 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89  0000                     
    90                           ; Version 1.44
    91                           ; Generated 14/09/2017 GMT
    92                           ; 
    93                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC18F47K40 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     
   125                           	psect	idataCOMRAM
   126  01127E                     __pidataCOMRAM:
   127                           	opt stack 0
   128                           
   129                           ;initializer for _notenum
   130  01127E  FF                 	db	255
   131                           
   132                           	psect	mediumconst
   133  00FDC8                     __pmediumconst:
   134                           	opt stack 0
   135  00FDC8  00                 	db	0
   136  00FDC9                     _credclr:
   137                           	opt stack 0
   138  00FDC9  50                 	db	80
   139  00FDCA  75                 	db	117
   140  00FDCB  73                 	db	115
   141  00FDCC  68                 	db	104
   142  00FDCD  20                 	db	32
   143  00FDCE  62                 	db	98
   144  00FDCF  75                 	db	117
   145  00FDD0  74                 	db	116
   146  00FDD1  74                 	db	116
   147  00FDD2  6F                 	db	111
   148  00FDD3  6E                 	db	110
   149  00FDD4  20                 	db	32
   150  00FDD5  31                 	db	49
   151  00FDD6  20                 	db	32
   152  00FDD7  74                 	db	116
   153  00FDD8  6F                 	db	111
   154  00FDD9  20                 	db	32
   155  00FDDA  63                 	db	99
   156  00FDDB  6C                 	db	108
   157  00FDDC  65                 	db	101
   158  00FDDD  61                 	db	97
   159  00FDDE  72                 	db	114
   160  00FDDF  20                 	db	32
   161  00FDE0  63                 	db	99
   162  00FDE1  72                 	db	114
   163  00FDE2  65                 	db	101
   164  00FDE3  64                 	db	100
   165  00FDE4  69                 	db	105
   166  00FDE5  74                 	db	116
   167  00FDE6  73                 	db	115
   168  00FDE7  20                 	db	32
   169  00FDE8  20                 	db	32
   170  00FDE9  20                 	db	32
   171  00FDEA  61                 	db	97
   172  00FDEB  6E                 	db	110
   173  00FDEC  64                 	db	100
   174  00FDED  20                 	db	32
   175  00FDEE  65                 	db	101
   176  00FDEF  78                 	db	120
   177  00FDF0  69                 	db	105
   178  00FDF1  74                 	db	116
   179  00FDF2  00                 	db	0
   180  00FDF3                     __end_of_credclr:
   181                           	opt stack 0
   182  00FDF3                     _hopcoin:
   183                           	opt stack 0
   184  00FDF3  48                 	db	72
   185  00FDF4  6F                 	db	111
   186  00FDF5  70                 	db	112
   187  00FDF6  70                 	db	112
   188  00FDF7  65                 	db	101
   189  00FDF8  72                 	db	114
   190  00FDF9  20                 	db	32
   191  00FDFA  43                 	db	67
   192  00FDFB  6F                 	db	111
   193  00FDFC  69                 	db	105
   194  00FDFD  6E                 	db	110
   195  00FDFE  20                 	db	32
   196  00FDFF  20                 	db	32
   197  00FE00  20                 	db	32
   198  00FE01  20                 	db	32
   199  00FE02  20                 	db	32
   200  00FE03  20                 	db	32
   201  00FE04  20                 	db	32
   202  00FE05  20                 	db	32
   203  00FE06  20                 	db	32
   204  00FE07  56                 	db	86
   205  00FE08  61                 	db	97
   206  00FE09  6C                 	db	108
   207  00FE0A  75                 	db	117
   208  00FE0B  65                 	db	101
   209  00FE0C  00                 	db	0
   210  00FE0D                     __end_of_hopcoin:
   211                           	opt stack 0
   212  00FE0D                     _vendtest:
   213                           	opt stack 0
   214  00FE0D  20                 	db	32
   215  00FE0E  50                 	db	80
   216  00FE0F  75                 	db	117
   217  00FE10  73                 	db	115
   218  00FE11  68                 	db	104
   219  00FE12  20                 	db	32
   220  00FE13  62                 	db	98
   221  00FE14  75                 	db	117
   222  00FE15  74                 	db	116
   223  00FE16  74                 	db	116
   224  00FE17  6F                 	db	111
   225  00FE18  6E                 	db	110
   226  00FE19  20                 	db	32
   227  00FE1A  74                 	db	116
   228  00FE1B  6F                 	db	111
   229  00FE1C  20                 	db	32
   230  00FE1D  20                 	db	32
   231  00FE1E  20                 	db	32
   232  00FE1F  20                 	db	32
   233  00FE20  20                 	db	32
   234  00FE21  76                 	db	118
   235  00FE22  65                 	db	101
   236  00FE23  6E                 	db	110
   237  00FE24  64                 	db	100
   238  00FE25  00                 	db	0
   239  00FE26                     __end_of_vendtest:
   240                           	opt stack 0
   241  00FE26                     _nochange:
   242                           	opt stack 0
   243  00FE26  4E                 	db	78
   244  00FE27  6F                 	db	111
   245  00FE28  20                 	db	32
   246  00FE29  43                 	db	67
   247  00FE2A  68                 	db	104
   248  00FE2B  61                 	db	97
   249  00FE2C  6E                 	db	110
   250  00FE2D  67                 	db	103
   251  00FE2E  65                 	db	101
   252  00FE2F  20                 	db	32
   253  00FE30  47                 	db	71
   254  00FE31  69                 	db	105
   255  00FE32  76                 	db	118
   256  00FE33  65                 	db	101
   257  00FE34  6E                 	db	110
   258  00FE35  00                 	db	0
   259  00FE36                     __end_of_nochange:
   260                           	opt stack 0
   261  00FE36                     _senset:
   262                           	opt stack 0
   263  00FE36  20                 	db	32
   264  00FE37  20                 	db	32
   265  00FE38  53                 	db	83
   266  00FE39  65                 	db	101
   267  00FE3A  74                 	db	116
   268  00FE3B  75                 	db	117
   269  00FE3C  70                 	db	112
   270  00FE3D  20                 	db	32
   271  00FE3E  53                 	db	83
   272  00FE3F  65                 	db	101
   273  00FE40  6E                 	db	110
   274  00FE41  73                 	db	115
   275  00FE42  6F                 	db	111
   276  00FE43  72                 	db	114
   277  00FE44  00                 	db	0
   278  00FE45                     __end_of_senset:
   279                           	opt stack 0
   280  00FE45                     _service:
   281                           	opt stack 0
   282  00FE45  20                 	db	32
   283  00FE46  20                 	db	32
   284  00FE47  53                 	db	83
   285  00FE48  65                 	db	101
   286  00FE49  72                 	db	114
   287  00FE4A  76                 	db	118
   288  00FE4B  69                 	db	105
   289  00FE4C  63                 	db	99
   290  00FE4D  65                 	db	101
   291  00FE4E  20                 	db	32
   292  00FE4F  4D                 	db	77
   293  00FE50  6F                 	db	111
   294  00FE51  64                 	db	100
   295  00FE52  65                 	db	101
   296  00FE53  00                 	db	0
   297  00FE54                     __end_of_service:
   298                           	opt stack 0
   299  00FE54                     _notetest:
   300                           	opt stack 0
   301  00FE54  20                 	db	32
   302  00FE55  20                 	db	32
   303  00FE56  49                 	db	73
   304  00FE57  6E                 	db	110
   305  00FE58  73                 	db	115
   306  00FE59  65                 	db	101
   307  00FE5A  72                 	db	114
   308  00FE5B  74                 	db	116
   309  00FE5C  20                 	db	32
   310  00FE5D  4E                 	db	78
   311  00FE5E  6F                 	db	111
   312  00FE5F  74                 	db	116
   313  00FE60  65                 	db	101
   314  00FE61  00                 	db	0
   315  00FE62                     __end_of_notetest:
   316                           	opt stack 0
   317  00FE62                     _audit:
   318                           	opt stack 0
   319  00FE62  20                 	db	32
   320  00FE63  20                 	db	32
   321  00FE64  41                 	db	65
   322  00FE65  75                 	db	117
   323  00FE66  64                 	db	100
   324  00FE67  69                 	db	105
   325  00FE68  74                 	db	116
   326  00FE69  20                 	db	32
   327  00FE6A  4D                 	db	77
   328  00FE6B  6F                 	db	111
   329  00FE6C  64                 	db	100
   330  00FE6D  65                 	db	101
   331  00FE6E  00                 	db	0
   332  00FE6F                     __end_of_audit:
   333                           	opt stack 0
   334  00FE6F                     _exit:
   335                           	opt stack 0
   336  00FE6F  45                 	db	69
   337  00FE70  78                 	db	120
   338  00FE71  69                 	db	105
   339  00FE72  74                 	db	116
   340  00FE73  00                 	db	0
   341  00FE74                     __end_of_exit:
   342                           	opt stack 0
   343  00FE74                     _notebits:
   344                           	opt stack 0
   345  00FE74  0018               	dw	24
   346  00FE76                     __end_of_notebits:
   347                           	opt stack 0
   348  00FE76                     _venderrors:
   349                           	opt stack 0
   350  00FE76  0017               	dw	23
   351  00FE78                     __end_of_venderrors:
   352                           	opt stack 0
   353  00FE78                     _pricestore:
   354                           	opt stack 0
   355  00FE78  000F               	dw	15
   356  00FE7A                     __end_of_pricestore:
   357                           	opt stack 0
   358  00FE7A                     _vendstore:
   359                           	opt stack 0
   360  00FE7A  0007               	dw	7
   361  00FE7C                     __end_of_vendstore:
   362                           	opt stack 0
   363  00FE7C                     _cashint:
   364                           	opt stack 0
   365  00FE7C  0004               	dw	4
   366  00FE7E                     __end_of_cashint:
   367                           	opt stack 0
   368  00FE7E                     _cashinv:
   369                           	opt stack 0
   370  00FE7E  0002               	dw	2
   371  00FE80                     __end_of_cashinv:
   372                           	opt stack 0
   373  00FE80                     _credmem:
   374                           	opt stack 0
   375  00FE80  0000               	dw	0
   376  00FE82                     __end_of_credmem:
   377                           	opt stack 0
   378  00FE82                     _cc_poll:
   379                           	opt stack 0
   380  00FE82  FE                 	db	254
   381  00FE83                     __end_of_cc_poll:
   382                           	opt stack 0
   383  00FE83                     _cc_adpoll:
   384                           	opt stack 0
   385  00FE83  FD                 	db	253
   386  00FE84                     __end_of_cc_adpoll:
   387                           	opt stack 0
   388  00FE84                     _cc_serial:
   389                           	opt stack 0
   390  00FE84  F2                 	db	242
   391  00FE85                     __end_of_cc_serial:
   392                           	opt stack 0
   393  00FE85                     _cc_newpin:
   394                           	opt stack 0
   395  00FE85  DB                 	db	219
   396  00FE86                     __end_of_cc_newpin:
   397                           	opt stack 0
   398  00FE86                     _cc_pin:
   399                           	opt stack 0
   400  00FE86  DA                 	db	218
   401  00FE87                     __end_of_cc_pin:
   402                           	opt stack 0
   403  00FE87                     _cc_level:
   404                           	opt stack 0
   405  00FE87  EC                 	db	236
   406  00FE88                     __end_of_cc_level:
   407                           	opt stack 0
   408  00FE88                     _cc_stop:
   409                           	opt stack 0
   410  00FE88  AC                 	db	172
   411  00FE89                     __end_of_cc_stop:
   412                           	opt stack 0
   413  00FE89                     _cc_countrq:
   414                           	opt stack 0
   415  00FE89  A8                 	db	168
   416  00FE8A                     __end_of_cc_countrq:
   417                           	opt stack 0
   418  00FE8A                     _cc_pay:
   419                           	opt stack 0
   420  00FE8A  A7                 	db	167
   421  00FE8B                     __end_of_cc_pay:
   422                           	opt stack 0
   423  00FE8B                     _cc_status:
   424                           	opt stack 0
   425  00FE8B  A6                 	db	166
   426  00FE8C                     __end_of_cc_status:
   427                           	opt stack 0
   428  00FE8C                     _cc_enable:
   429                           	opt stack 0
   430  00FE8C  A4                 	db	164
   431  00FE8D                     __end_of_cc_enable:
   432                           	opt stack 0
   433  00FE8D                     _cc_test:
   434                           	opt stack 0
   435  00FE8D  A3                 	db	163
   436  00FE8E                     __end_of_cc_test:
   437                           	opt stack 0
   438  00FE8E                     _cc_reset:
   439                           	opt stack 0
   440  00FE8E  01                 	db	1
   441  00FE8F                     __end_of_cc_reset:
   442                           	opt stack 0
   443  00FE8F                     _mastadd:
   444                           	opt stack 0
   445  00FE8F  01                 	db	1
   446  00FE90                     __end_of_mastadd:
   447                           	opt stack 0
   448  00FE90                     _hopadd:
   449                           	opt stack 0
   450  00FE90  03                 	db	3
   451  00FE91                     __end_of_hopadd:
   452                           	opt stack 0
   453  00FE91                     _theft_attempt:
   454                           	opt stack 0
   455  00FE91  0C                 	db	12
   456  00FE92                     __end_of_theft_attempt:
   457                           	opt stack 0
   458  00FE92                     _note_rejected:
   459                           	opt stack 0
   460  00FE92  0B                 	db	11
   461  00FE93                     __end_of_note_rejected:
   462                           	opt stack 0
   463  00FE93                     _invalid_escrow:
   464                           	opt stack 0
   465  00FE93  0A                 	db	10
   466  00FE94                     __end_of_invalid_escrow:
   467                           	opt stack 0
   468  00FE94                     _acept_disabled:
   469                           	opt stack 0
   470  00FE94  09                 	db	9
   471  00FE95                     __end_of_acept_disabled:
   472                           	opt stack 0
   473  00FE95                     _cashbox_err:
   474                           	opt stack 0
   475  00FE95  08                 	db	8
   476  00FE96                     __end_of_cashbox_err:
   477                           	opt stack 0
   478  00FE96                     _note_removed:
   479                           	opt stack 0
   480  00FE96  07                 	db	7
   481  00FE97                     __end_of_note_removed:
   482                           	opt stack 0
   483  00FE97                     _just_reset:
   484                           	opt stack 0
   485  00FE97  06                 	db	6
   486  00FE98                     __end_of_just_reset:
   487                           	opt stack 0
   488  00FE98                     _jammed_err:
   489                           	opt stack 0
   490  00FE98  05                 	db	5
   491  00FE99                     __end_of_jammed_err:
   492                           	opt stack 0
   493  00FE99                     _rom_error:
   494                           	opt stack 0
   495  00FE99  04                 	db	4
   496  00FE9A                     __end_of_rom_error:
   497                           	opt stack 0
   498  00FE9A                     _just_busy:
   499                           	opt stack 0
   500  00FE9A  03                 	db	3
   501  00FE9B                     __end_of_just_busy:
   502                           	opt stack 0
   503  00FE9B                     _sens_error:
   504                           	opt stack 0
   505  00FE9B  02                 	db	2
   506  00FE9C                     __end_of_sens_error:
   507                           	opt stack 0
   508  00FE9C                     _motr_error:
   509                           	opt stack 0
   510  00FE9C  01                 	db	1
   511  00FE9D                     __end_of_motr_error:
   512                           	opt stack 0
   513  00FE9D                     _note_features:
   514                           	opt stack 0
   515  00FE9D  33                 	db	51
   516  00FE9E                     __end_of_note_features:
   517                           	opt stack 0
   518  00FE9E                     _note_stacker:
   519                           	opt stack 0
   520  00FE9E  36                 	db	54
   521  00FE9F                     __end_of_note_stacker:
   522                           	opt stack 0
   523  00FE9F                     _note_escrow:
   524                           	opt stack 0
   525  00FE9F  35                 	db	53
   526  00FEA0                     __end_of_note_escrow:
   527                           	opt stack 0
   528  00FEA0                     _note_type:
   529                           	opt stack 0
   530  00FEA0  34                 	db	52
   531  00FEA1                     __end_of_note_type:
   532                           	opt stack 0
   533  00FEA1                     _note_poll:
   534                           	opt stack 0
   535  00FEA1  33                 	db	51
   536  00FEA2                     __end_of_note_poll:
   537                           	opt stack 0
   538  00FEA2                     _note_security:
   539                           	opt stack 0
   540  00FEA2  32                 	db	50
   541  00FEA3                     __end_of_note_security:
   542                           	opt stack 0
   543  00FEA3                     _note_setup:
   544                           	opt stack 0
   545  00FEA3  31                 	db	49
   546  00FEA4                     __end_of_note_setup:
   547                           	opt stack 0
   548  00FEA4                     _note_reset:
   549                           	opt stack 0
   550  00FEA4  30                 	db	48
   551  00FEA5                     __end_of_note_reset:
   552                           	opt stack 0
   553  00FEA5                     _line4:
   554                           	opt stack 0
   555  00FEA5  D4                 	db	212
   556  00FEA6                     __end_of_line4:
   557                           	opt stack 0
   558  00FEA6                     _line3:
   559                           	opt stack 0
   560  00FEA6  94                 	db	148
   561  00FEA7                     __end_of_line3:
   562                           	opt stack 0
   563  00FEA7                     _line2:
   564                           	opt stack 0
   565  00FEA7  C0                 	db	192
   566  00FEA8                     __end_of_line2:
   567                           	opt stack 0
   568  00FEA8                     _line1:
   569                           	opt stack 0
   570  00FEA8  80                 	db	128
   571  00FEA9                     __end_of_line1:
   572                           	opt stack 0
   573  00FEA9                     _dispsl:
   574                           	opt stack 0
   575  00FEA9  18                 	db	24
   576  00FEAA                     __end_of_dispsl:
   577                           	opt stack 0
   578  00FEAA                     _dispsr:
   579                           	opt stack 0
   580  00FEAA  1B                 	db	27
   581  00FEAB                     __end_of_dispsr:
   582                           	opt stack 0
   583  00FEAB                     _dispoff:
   584                           	opt stack 0
   585  00FEAB  08                 	db	8
   586  00FEAC                     __end_of_dispoff:
   587                           	opt stack 0
   588  00FEAC                     _dispshleft:
   589                           	opt stack 0
   590  00FEAC  07                 	db	7
   591  00FEAD                     __end_of_dispshleft:
   592                           	opt stack 0
   593  00FEAD                     _dispshright:
   594                           	opt stack 0
   595  00FEAD  05                 	db	5
   596  00FEAE                     __end_of_dispshright:
   597                           	opt stack 0
   598  00FEAE                     _dispcursor:
   599                           	opt stack 0
   600  00FEAE  04                 	db	4
   601  00FEAF                     __end_of_dispcursor:
   602                           	opt stack 0
   603  00FEAF                     _dispnormal:
   604                           	opt stack 0
   605  00FEAF  06                 	db	6
   606  00FEB0                     __end_of_dispnormal:
   607                           	opt stack 0
   608  00FEB0                     _dsphome:
   609                           	opt stack 0
   610  00FEB0  02                 	db	2
   611  00FEB1                     __end_of_dsphome:
   612                           	opt stack 0
   613  00FEB1                     _dispaddr:
   614                           	opt stack 0
   615  00FEB1  A8                 	db	168
   616  00FEB2                     __end_of_dispaddr:
   617                           	opt stack 0
   618  00FEB2                     _dispclr:
   619                           	opt stack 0
   620  00FEB2  01                 	db	1
   621  00FEB3                     __end_of_dispclr:
   622                           	opt stack 0
   623  00FEB3                     _dispon:
   624                           	opt stack 0
   625  00FEB3  0C                 	db	12
   626  00FEB4                     __end_of_dispon:
   627                           	opt stack 0
   628  00FEB4                     _dispfunc3:
   629                           	opt stack 0
   630  00FEB4  2C                 	db	44
   631  00FEB5                     __end_of_dispfunc3:
   632                           	opt stack 0
   633  00FEB5                     _dispfunc2:
   634                           	opt stack 0
   635  00FEB5  28                 	db	40
   636  00FEB6                     __end_of_dispfunc2:
   637                           	opt stack 0
   638  00FEB6                     _dispfunc1:
   639                           	opt stack 0
   640  00FEB6  24                 	db	36
   641  00FEB7                     __end_of_dispfunc1:
   642                           	opt stack 0
   643  00FEB7                     _servmsg:
   644                           	opt stack 0
   645  00FEB7  53                 	db	83
   646  00FEB8  65                 	db	101
   647  00FEB9  72                 	db	114
   648  00FEBA  76                 	db	118
   649  00FEBB  69                 	db	105
   650  00FEBC  63                 	db	99
   651  00FEBD  65                 	db	101
   652  00FEBE  20                 	db	32
   653  00FEBF  4D                 	db	77
   654  00FEC0  6F                 	db	111
   655  00FEC1  64                 	db	100
   656  00FEC2  65                 	db	101
   657  00FEC3  3A                 	db	58
   658  00FEC4  20                 	db	32
   659  00FEC5  70                 	db	112
   660  00FEC6  72                 	db	114
   661  00FEC7  65                 	db	101
   662  00FEC8  73                 	db	115
   663  00FEC9  73                 	db	115
   664  00FECA  20                 	db	32
   665  00FECB  31                 	db	49
   666  00FECC  20                 	db	32
   667  00FECD  3D                 	db	61
   668  00FECE  20                 	db	32
   669  00FECF  41                 	db	65
   670  00FED0  75                 	db	117
   671  00FED1  64                 	db	100
   672  00FED2  69                 	db	105
   673  00FED3  74                 	db	116
   674  00FED4  20                 	db	32
   675  00FED5  32                 	db	50
   676  00FED6  20                 	db	32
   677  00FED7  3D                 	db	61
   678  00FED8  20                 	db	32
   679  00FED9  53                 	db	83
   680  00FEDA  65                 	db	101
   681  00FEDB  6E                 	db	110
   682  00FEDC  73                 	db	115
   683  00FEDD  6F                 	db	111
   684  00FEDE  72                 	db	114
   685  00FEDF  33                 	db	51
   686  00FEE0  3D                 	db	61
   687  00FEE1  4E                 	db	78
   688  00FEE2  6F                 	db	111
   689  00FEE3  74                 	db	116
   690  00FEE4  65                 	db	101
   691  00FEE5  20                 	db	32
   692  00FEE6  65                 	db	101
   693  00FEE7  6E                 	db	110
   694  00FEE8  20                 	db	32
   695  00FEE9  34                 	db	52
   696  00FEEA  3D                 	db	61
   697  00FEEB  43                 	db	67
   698  00FEEC  72                 	db	114
   699  00FEED  65                 	db	101
   700  00FEEE  64                 	db	100
   701  00FEEF  69                 	db	105
   702  00FEF0  74                 	db	116
   703  00FEF1  20                 	db	32
   704  00FEF2  20                 	db	32
   705  00FEF3  35                 	db	53
   706  00FEF4  3D                 	db	61
   707  00FEF5  56                 	db	86
   708  00FEF6  65                 	db	101
   709  00FEF7  6E                 	db	110
   710  00FEF8  64                 	db	100
   711  00FEF9  20                 	db	32
   712  00FEFA  36                 	db	54
   713  00FEFB  3D                 	db	61
   714  00FEFC  4E                 	db	78
   715  00FEFD  6F                 	db	111
   716  00FEFE  74                 	db	116
   717  00FEFF  65                 	db	101
   718  00FF00  20                 	db	32
   719  00FF01  37                 	db	55
   720  00FF02  3D                 	db	61
   721  00FF03  45                 	db	69
   722  00FF04  78                 	db	120
   723  00FF05  69                 	db	105
   724  00FF06  74                 	db	116
   725  00FF07  00                 	db	0
   726  00FF08                     __end_of_servmsg:
   727                           	opt stack 0
   728  00FF08                     _setnotes:
   729                           	opt stack 0
   730  00FF08  45                 	db	69
   731  00FF09  6E                 	db	110
   732  00FF0A  61                 	db	97
   733  00FF0B  62                 	db	98
   734  00FF0C  6C                 	db	108
   735  00FF0D  65                 	db	101
   736  00FF0E  20                 	db	32
   737  00FF0F  2F                 	db	47
   738  00FF10  20                 	db	32
   739  00FF11  44                 	db	68
   740  00FF12  69                 	db	105
   741  00FF13  73                 	db	115
   742  00FF14  61                 	db	97
   743  00FF15  62                 	db	98
   744  00FF16  6C                 	db	108
   745  00FF17  65                 	db	101
   746  00FF18  20                 	db	32
   747  00FF19  20                 	db	32
   748  00FF1A  20                 	db	32
   749  00FF1B  20                 	db	32
   750  00FF1C  31                 	db	49
   751  00FF1D  20                 	db	32
   752  00FF1E  3D                 	db	61
   753  00FF1F  20                 	db	32
   754  00FF20  52                 	db	82
   755  00FF21  31                 	db	49
   756  00FF22  30                 	db	48
   757  00FF23  2C                 	db	44
   758  00FF24  20                 	db	32
   759  00FF25  32                 	db	50
   760  00FF26  20                 	db	32
   761  00FF27  3D                 	db	61
   762  00FF28  20                 	db	32
   763  00FF29  52                 	db	82
   764  00FF2A  32                 	db	50
   765  00FF2B  30                 	db	48
   766  00FF2C  20                 	db	32
   767  00FF2D  20                 	db	32
   768  00FF2E  20                 	db	32
   769  00FF2F  20                 	db	32
   770  00FF30  33                 	db	51
   771  00FF31  20                 	db	32
   772  00FF32  3D                 	db	61
   773  00FF33  20                 	db	32
   774  00FF34  52                 	db	82
   775  00FF35  35                 	db	53
   776  00FF36  30                 	db	48
   777  00FF37  2C                 	db	44
   778  00FF38  20                 	db	32
   779  00FF39  34                 	db	52
   780  00FF3A  20                 	db	32
   781  00FF3B  3D                 	db	61
   782  00FF3C  20                 	db	32
   783  00FF3D  52                 	db	82
   784  00FF3E  31                 	db	49
   785  00FF3F  30                 	db	48
   786  00FF40  30                 	db	48
   787  00FF41  20                 	db	32
   788  00FF42  20                 	db	32
   789  00FF43  20                 	db	32
   790  00FF44  35                 	db	53
   791  00FF45  20                 	db	32
   792  00FF46  3D                 	db	61
   793  00FF47  20                 	db	32
   794  00FF48  52                 	db	82
   795  00FF49  32                 	db	50
   796  00FF4A  30                 	db	48
   797  00FF4B  30                 	db	48
   798  00FF4C  00                 	db	0
   799  00FF4D                     __end_of_setnotes:
   800                           	opt stack 0
   801  00FF4D                     _initnote:
   802                           	opt stack 0
   803  00FF4D  20                 	db	32
   804  00FF4E  20                 	db	32
   805  00FF4F  20                 	db	32
   806  00FF50  20                 	db	32
   807  00FF51  20                 	db	32
   808  00FF52  49                 	db	73
   809  00FF53  6E                 	db	110
   810  00FF54  69                 	db	105
   811  00FF55  74                 	db	116
   812  00FF56  69                 	db	105
   813  00FF57  61                 	db	97
   814  00FF58  6C                 	db	108
   815  00FF59  69                 	db	105
   816  00FF5A  7A                 	db	122
   817  00FF5B  65                 	db	101
   818  00FF5C  20                 	db	32
   819  00FF5D  20                 	db	32
   820  00FF5E  20                 	db	32
   821  00FF5F  20                 	db	32
   822  00FF60  20                 	db	32
   823  00FF61  20                 	db	32
   824  00FF62  20                 	db	32
   825  00FF63  20                 	db	32
   826  00FF64  20                 	db	32
   827  00FF65  20                 	db	32
   828  00FF66  4E                 	db	78
   829  00FF67  6F                 	db	111
   830  00FF68  74                 	db	116
   831  00FF69  65                 	db	101
   832  00FF6A  20                 	db	32
   833  00FF6B  52                 	db	82
   834  00FF6C  65                 	db	101
   835  00FF6D  61                 	db	97
   836  00FF6E  64                 	db	100
   837  00FF6F  65                 	db	101
   838  00FF70  72                 	db	114
   839  00FF71  00                 	db	0
   840  00FF72                     __end_of_initnote:
   841                           	opt stack 0
   842  00FF72                     _noteerr:
   843                           	opt stack 0
   844  00FF72  20                 	db	32
   845  00FF73  20                 	db	32
   846  00FF74  20                 	db	32
   847  00FF75  4E                 	db	78
   848  00FF76  6F                 	db	111
   849  00FF77  74                 	db	116
   850  00FF78  65                 	db	101
   851  00FF79  20                 	db	32
   852  00FF7A  65                 	db	101
   853  00FF7B  72                 	db	114
   854  00FF7C  72                 	db	114
   855  00FF7D  6F                 	db	111
   856  00FF7E  72                 	db	114
   857  00FF7F  20                 	db	32
   858  00FF80  20                 	db	32
   859  00FF81  20                 	db	32
   860  00FF82  20                 	db	32
   861  00FF83  20                 	db	32
   862  00FF84  63                 	db	99
   863  00FF85  6F                 	db	111
   864  00FF86  64                 	db	100
   865  00FF87  65                 	db	101
   866  00FF88  20                 	db	32
   867  00FF89  3D                 	db	61
   868  00FF8A  20                 	db	32
   869  00FF8B  30                 	db	48
   870  00FF8C  78                 	db	120
   871  00FF8D  00                 	db	0
   872  00FF8E                     __end_of_noteerr:
   873                           	opt stack 0
   874  00FF8E                     _inscoin:
   875                           	opt stack 0
   876  00FF8E  49                 	db	73
   877  00FF8F  6E                 	db	110
   878  00FF90  73                 	db	115
   879  00FF91  65                 	db	101
   880  00FF92  72                 	db	114
   881  00FF93  74                 	db	116
   882  00FF94  20                 	db	32
   883  00FF95  43                 	db	67
   884  00FF96  6F                 	db	111
   885  00FF97  69                 	db	105
   886  00FF98  6E                 	db	110
   887  00FF99  73                 	db	115
   888  00FF9A  20                 	db	32
   889  00FF9B  6F                 	db	111
   890  00FF9C  72                 	db	114
   891  00FF9D  20                 	db	32
   892  00FF9E  4E                 	db	78
   893  00FF9F  6F                 	db	111
   894  00FFA0  74                 	db	116
   895  00FFA1  65                 	db	101
   896  00FFA2  73                 	db	115
   897  00FFA3  00                 	db	0
   898  00FFA4                     __end_of_inscoin:
   899                           	opt stack 0
   900  00FFA4                     _inithop:
   901                           	opt stack 0
   902  00FFA4  20                 	db	32
   903  00FFA5  20                 	db	32
   904  00FFA6  49                 	db	73
   905  00FFA7  6E                 	db	110
   906  00FFA8  69                 	db	105
   907  00FFA9  74                 	db	116
   908  00FFAA  69                 	db	105
   909  00FFAB  61                 	db	97
   910  00FFAC  6C                 	db	108
   911  00FFAD  69                 	db	105
   912  00FFAE  7A                 	db	122
   913  00FFAF  65                 	db	101
   914  00FFB0  20                 	db	32
   915  00FFB1  48                 	db	72
   916  00FFB2  6F                 	db	111
   917  00FFB3  70                 	db	112
   918  00FFB4  70                 	db	112
   919  00FFB5  65                 	db	101
   920  00FFB6  72                 	db	114
   921  00FFB7  00                 	db	0
   922  00FFB8                     __end_of_inithop:
   923                           	opt stack 0
   924  00FFB8                     _credits:
   925                           	opt stack 0
   926  00FFB8  20                 	db	32
   927  00FFB9  20                 	db	32
   928  00FFBA  43                 	db	67
   929  00FFBB  72                 	db	114
   930  00FFBC  65                 	db	101
   931  00FFBD  64                 	db	100
   932  00FFBE  69                 	db	105
   933  00FFBF  74                 	db	116
   934  00FFC0  20                 	db	32
   935  00FFC1  3D                 	db	61
   936  00FFC2  20                 	db	32
   937  00FFC3  52                 	db	82
   938  00FFC4  00                 	db	0
   939  00FFC5                     __end_of_credits:
   940                           	opt stack 0
   941  00FFC5                     _disabled:
   942                           	opt stack 0
   943  00FFC5  64                 	db	100
   944  00FFC6  69                 	db	105
   945  00FFC7  73                 	db	115
   946  00FFC8  61                 	db	97
   947  00FFC9  62                 	db	98
   948  00FFCA  6C                 	db	108
   949  00FFCB  65                 	db	101
   950  00FFCC  64                 	db	100
   951  00FFCD  00                 	db	0
   952  00FFCE                     __end_of_disabled:
   953                           	opt stack 0
   954  00FFCE                     _enabled:
   955                           	opt stack 0
   956  00FFCE  65                 	db	101
   957  00FFCF  6E                 	db	110
   958  00FFD0  61                 	db	97
   959  00FFD1  62                 	db	98
   960  00FFD2  6C                 	db	108
   961  00FFD3  65                 	db	101
   962  00FFD4  64                 	db	100
   963  00FFD5  20                 	db	32
   964  00FFD6  00                 	db	0
   965  00FFD7                     __end_of_enabled:
   966                           	opt stack 0
   967  00FFD7                     _twohundredrand:
   968                           	opt stack 0
   969  00FFD7  34                 	db	52
   970  00FFD8  20                 	db	32
   971  00FFD9  52                 	db	82
   972  00FFDA  32                 	db	50
   973  00FFDB  30                 	db	48
   974  00FFDC  30                 	db	48
   975  00FFDD  20                 	db	32
   976  00FFDE  00                 	db	0
   977  00FFDF                     __end_of_twohundredrand:
   978                           	opt stack 0
   979  00FFDF                     _hundredrand:
   980                           	opt stack 0
   981  00FFDF  33                 	db	51
   982  00FFE0  20                 	db	32
   983  00FFE1  52                 	db	82
   984  00FFE2  31                 	db	49
   985  00FFE3  30                 	db	48
   986  00FFE4  30                 	db	48
   987  00FFE5  20                 	db	32
   988  00FFE6  00                 	db	0
   989  00FFE7                     __end_of_hundredrand:
   990                           	opt stack 0
   991  00FFE7                     _fiftyrand:
   992                           	opt stack 0
   993  00FFE7  32                 	db	50
   994  00FFE8  20                 	db	32
   995  00FFE9  52                 	db	82
   996  00FFEA  35                 	db	53
   997  00FFEB  30                 	db	48
   998  00FFEC  20                 	db	32
   999  00FFED  20                 	db	32
  1000  00FFEE  00                 	db	0
  1001  00FFEF                     __end_of_fiftyrand:
  1002                           	opt stack 0
  1003  00FFEF                     _twentyrand:
  1004                           	opt stack 0
  1005  00FFEF  31                 	db	49
  1006  00FFF0  20                 	db	32
  1007  00FFF1  52                 	db	82
  1008  00FFF2  32                 	db	50
  1009  00FFF3  30                 	db	48
  1010  00FFF4  20                 	db	32
  1011  00FFF5  20                 	db	32
  1012  00FFF6  00                 	db	0
  1013  00FFF7                     __end_of_twentyrand:
  1014                           	opt stack 0
  1015  00FFF7                     _tenrand:
  1016                           	opt stack 0
  1017  00FFF7  30                 	db	48
  1018  00FFF8  20                 	db	32
  1019  00FFF9  52                 	db	82
  1020  00FFFA  31                 	db	49
  1021  00FFFB  30                 	db	48
  1022  00FFFC  20                 	db	32
  1023  00FFFD  20                 	db	32
  1024  00FFFE  00                 	db	0
  1025  00FFFF                     __end_of_tenrand:
  1026                           	opt stack 0
  1027  00FFFF  00                 	db	0	; dummy byte at the end
  1028  0000                     
  1029                           	psect	nvCOMRAM
  1030  000043                     __pnvCOMRAM:
  1031                           	opt stack 0
  1032  000043                     _timer5ReloadVal:
  1033                           	opt stack 0
  1034  000043                     	ds	2
  1035  000045                     _timer3ReloadVal:
  1036                           	opt stack 0
  1037  000045                     	ds	2
  1038  000047                     _timer1ReloadVal:
  1039                           	opt stack 0
  1040  000047                     	ds	2
  1041  000049                     _count:
  1042                           	opt stack 0
  1043  000049                     	ds	1
  1044  0000                     _PIR4bits	set	3790
  1045  0000                     _TX2REG	set	3738
  1046  0000                     _RC2REG	set	3737
  1047  0000                     _RC2STAbits	set	3741
  1048  0000                     _SP2BRGH	set	3740
  1049  0000                     _SP2BRGL	set	3739
  1050  0000                     _TX2STA	set	3742
  1051  0000                     _RC2STA	set	3741
  1052  0000                     _BAUD2CON	set	3743
  1053  0000                     _PIR7bits	set	3793
  1054  0000                     _IPR0bits	set	3770
  1055  0000                     _OSCTUNE	set	3805
  1056  0000                     _OSCFRQ	set	3806
  1057  0000                     _OSCEN	set	3804
  1058  0000                     _OSCCON3	set	3802
  1059  0000                     _OSCCON1	set	3800
  1060  0000                     _PIR3bits	set	3789
  1061  0000                     _PIR0bits	set	3786
  1062  0000                     _RX2PPSbits	set	3725
  1063  0000                     _RB5PPS	set	3828
  1064  0000                     _RC6PPS	set	3837
  1065  0000                     _RX1PPSbits	set	3765
  1066  0000                     _PPSLOCKbits	set	3744
  1067  0000                     _PPSLOCK	set	3744
  1068  0000                     _PIE0bits	set	3778
  1069  0000                     _DAC1CON1	set	3892
  1070  0000                     _DAC1CON0	set	3891
  1071  0000                     _CMOUTbits	set	3901
  1072  0000                     _CM1PCH	set	3900
  1073  0000                     _CM1NCH	set	3899
  1074  0000                     _CM1CON1	set	3898
  1075  0000                     _CM1CON0	set	3897
  1076  0000                     _ODCOND	set	3876
  1077  0000                     _ODCONC	set	3871
  1078  0000                     _ODCONB	set	3863
  1079  0000                     _ODCONA	set	3855
  1080  0000                     _ODCONE	set	3884
  1081  0000                     _WPUC	set	3872
  1082  0000                     _WPUA	set	3856
  1083  0000                     _WPUB	set	3864
  1084  0000                     _WPUE	set	3885
  1085  0000                     _WPUD	set	3877
  1086  0000                     _ANSELA	set	3857
  1087  0000                     _ANSELE	set	3886
  1088  0000                     _ANSELD	set	3878
  1089  0000                     _ANSELB	set	3865
  1090  0000                     _ANSELC	set	3873
  1091  0000                     _BAUD1CONbits	set	3999
  1092  0000                     _LATCbits	set	3973
  1093  0000                     _TX1STAbits	set	3998
  1094  0000                     _PORTA	set	3981
  1095  0000                     _PORTD	set	3984
  1096  0000                     _T5GCONbits	set	4036
  1097  0000                     _T5CONbits	set	4035
  1098  0000                     _T5CON	set	4035
  1099  0000                     _TMR5L	set	4033
  1100  0000                     _TMR5H	set	4034
  1101  0000                     _T5CLK	set	4038
  1102  0000                     _T5GATE	set	4037
  1103  0000                     _T5GCON	set	4036
  1104  0000                     _T3GCONbits	set	4042
  1105  0000                     _T3CONbits	set	4041
  1106  0000                     _T3CON	set	4041
  1107  0000                     _TMR3L	set	4039
  1108  0000                     _TMR3H	set	4040
  1109  0000                     _T3CLK	set	4044
  1110  0000                     _T3GATE	set	4043
  1111  0000                     _T3GCON	set	4042
  1112  0000                     _T1GCONbits	set	4048
  1113  0000                     _T1CONbits	set	4047
  1114  0000                     _T1CON	set	4047
  1115  0000                     _TMR1L	set	4045
  1116  0000                     _TMR1H	set	4046
  1117  0000                     _T1CLK	set	4050
  1118  0000                     _T1GATE	set	4049
  1119  0000                     _T1GCON	set	4048
  1120  0000                     _NVMDAT	set	3968
  1121  0000                     _NVMADRL	set	3966
  1122  0000                     _NVMADRH	set	3967
  1123  0000                     _NVMCON2	set	3970
  1124  0000                     _TABLAT	set	4085
  1125  0000                     _TBLPTRL	set	4086
  1126  0000                     _TBLPTRH	set	4087
  1127  0000                     _TBLPTRU	set	4088
  1128  0000                     _NVMCON1bits	set	3969
  1129  0000                     _INTCONbits	set	4082
  1130  0000                     _TX1REG	set	3994
  1131  0000                     _RC1REG	set	3993
  1132  0000                     _RC1STAbits	set	3997
  1133  0000                     _SP1BRGH	set	3996
  1134  0000                     _SP1BRGL	set	3995
  1135  0000                     _TX1STA	set	3998
  1136  0000                     _RC1STA	set	3997
  1137  0000                     _BAUD1CON	set	3999
  1138  0000                     _TRISD	set	3979
  1139  0000                     _TRISC	set	3978
  1140  0000                     _TRISB	set	3977
  1141  0000                     _TRISA	set	3976
  1142  0000                     _TRISE	set	3980
  1143  0000                     _LATC	set	3973
  1144  0000                     _LATB	set	3972
  1145  0000                     _LATA	set	3971
  1146  0000                     _LATD	set	3974
  1147  0000                     _LATE	set	3975
  1148  0000                     _LATA6	set	31774
  1149  0000                     _LATA7	set	31775
  1150  0000                     _GIE	set	32663
  1151                           
  1152                           ; #config settings
  1153  0000                     
  1154                           	psect	cinit
  1155  010E76                     __pcinit:
  1156                           	opt stack 0
  1157  010E76                     start_initialization:
  1158                           	opt stack 0
  1159  010E76                     __initialization:
  1160                           	opt stack 0
  1161                           
  1162                           ; Initialize objects allocated to COMRAM (1 bytes)
  1163                           ; load TBLPTR registers with __pidataCOMRAM
  1164  010E76  0E7E               	movlw	low __pidataCOMRAM
  1165  010E78  6EF6               	movwf	tblptrl,c
  1166  010E7A  0E12               	movlw	high __pidataCOMRAM
  1167  010E7C  6EF7               	movwf	tblptrh,c
  1168  010E7E  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1169  010E80  6EF8               	movwf	tblptru,c
  1170  010E82  0009               	tblrd		*+	;fetch initializer
  1171  010E84  CFF5 F04A          	movff	tablat,__pdataCOMRAM
  1172                           
  1173                           ; Clear objects allocated to BANK0 (32 bytes)
  1174  010E88  EE00  F060         	lfsr	0,__pbssBANK0
  1175  010E8C  0E20               	movlw	32
  1176  010E8E                     clear_0:
  1177  010E8E  6AEE               	clrf	postinc0,c
  1178  010E90  06E8               	decf	wreg,f,c
  1179  010E92  E1FD               	bnz	clear_0
  1180                           
  1181                           ; Clear objects allocated to COMRAM (32 bytes)
  1182  010E94  EE00  F023         	lfsr	0,__pbssCOMRAM
  1183  010E98  0E20               	movlw	32
  1184  010E9A                     clear_1:
  1185  010E9A  6AEE               	clrf	postinc0,c
  1186  010E9C  06E8               	decf	wreg,f,c
  1187  010E9E  E1FD               	bnz	clear_1
  1188  010EA0                     end_of_initialization:
  1189                           	opt stack 0
  1190  010EA0                     __end_of__initialization:
  1191                           	opt stack 0
  1192  010EA0  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1193  010EA2  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1194  010EA4  0100               	movlb	0
  1195  010EA6  EF9B  F083         	goto	_main	;jump to C main() function
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           
  1203                           	psect	bssCOMRAM
  1204  000023                     __pbssCOMRAM:
  1205                           	opt stack 0
  1206  000023                     _hpserial:
  1207                           	opt stack 0
  1208  000023                     	ds	3
  1209  000026                     _hexnum:
  1210                           	opt stack 0
  1211  000026                     	ds	3
  1212  000029                     _dbcount:
  1213                           	opt stack 0
  1214  000029                     	ds	2
  1215  00002B                     _venflags:
  1216                           	opt stack 0
  1217  00002B                     	ds	1
  1218  00002C                     _buttons:
  1219                           	opt stack 0
  1220  00002C                     	ds	1
  1221  00002D                     _cash:
  1222                           	opt stack 0
  1223  00002D                     	ds	1
  1224  00002E                     _credit:
  1225                           	opt stack 0
  1226  00002E                     	ds	1
  1227  00002F                     _cctflags:
  1228                           	opt stack 0
  1229  00002F                     	ds	1
  1230  000030                     _command:
  1231                           	opt stack 0
  1232  000030                     	ds	1
  1233  000031                     _nobytes:
  1234                           	opt stack 0
  1235  000031                     	ds	1
  1236  000032                     _dest:
  1237                           	opt stack 0
  1238  000032                     	ds	1
  1239  000033                     _mdbtxbyte:
  1240                           	opt stack 0
  1241  000033                     	ds	1
  1242  000034                     _errorflags:
  1243                           	opt stack 0
  1244  000034                     	ds	1
  1245  000035                     _noteen_byte:
  1246                           	opt stack 0
  1247  000035                     	ds	1
  1248  000036                     _noteen:
  1249                           	opt stack 0
  1250  000036                     	ds	1
  1251  000037                     _mdbflags:
  1252                           	opt stack 0
  1253  000037                     	ds	1
  1254  000038                     _chkbyte:
  1255                           	opt stack 0
  1256  000038                     	ds	1
  1257  000039                     _notebyte:
  1258                           	opt stack 0
  1259  000039                     	ds	1
  1260  00003A                     _mcount:
  1261                           	opt stack 0
  1262  00003A                     	ds	1
  1263  00003B                     _slvadd:
  1264                           	opt stack 0
  1265  00003B                     	ds	1
  1266  00003C                     _lcdaddress:
  1267                           	opt stack 0
  1268  00003C                     	ds	1
  1269  00003D                     _ercode:
  1270                           	opt stack 0
  1271  00003D                     	ds	1
  1272  00003E                     _stradd:
  1273                           	opt stack 0
  1274  00003E                     	ds	1
  1275  00003F                     _lcdline:
  1276                           	opt stack 0
  1277  00003F                     	ds	1
  1278  000040                     _lcdata:
  1279                           	opt stack 0
  1280  000040                     	ds	1
  1281  000041                     _lcdfunc:
  1282                           	opt stack 0
  1283  000041                     	ds	1
  1284  000042                     _bflag:
  1285                           	opt stack 0
  1286  000042                     	ds	1
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           
  1294                           	psect	dataCOMRAM
  1295  00004A                     __pdataCOMRAM:
  1296                           	opt stack 0
  1297  00004A                     _notenum:
  1298                           	opt stack 0
  1299  00004A                     	ds	1
  1300                           tblptru	equ	0xFF8
  1301                           tblptrh	equ	0xFF7
  1302                           tblptrl	equ	0xFF6
  1303                           tablat	equ	0xFF5
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           
  1307                           	psect	bssBANK0
  1308  000060                     __pbssBANK0:
  1309                           	opt stack 0
  1310  000060                     _mdbdata:
  1311                           	opt stack 0
  1312  000060                     	ds	32
  1313                           tblptru	equ	0xFF8
  1314                           tblptrh	equ	0xFF7
  1315                           tblptrl	equ	0xFF6
  1316                           tablat	equ	0xFF5
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           
  1320                           	psect	cstackBANK0
  1321  000080                     __pcstackBANK0:
  1322                           	opt stack 0
  1323  000080                     displ_hex@value:
  1324                           	opt stack 0
  1325                           
  1326                           ; 8 bytes @ 0x0
  1327  000080                     	ds	8
  1328  000088                     displ_hex@hexnumsave:
  1329                           	opt stack 0
  1330                           
  1331                           ; 3 bytes @ 0x8
  1332  000088                     	ds	3
  1333  00008B                     displ_hex@i:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0xB
  1337  00008B                     	ds	1
  1338                           tblptru	equ	0xFF8
  1339                           tblptrh	equ	0xFF7
  1340                           tblptrl	equ	0xFF6
  1341                           tablat	equ	0xFF5
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           
  1345                           	psect	cstackCOMRAM
  1346  000001                     __pcstackCOMRAM:
  1347                           	opt stack 0
  1348  000001                     ??_INTERRUPT_InterruptManagerHigh:
  1349  000001                     
  1350                           ; 1 bytes @ 0x0
  1351  000001                     	ds	18
  1352  000013                     ??_TMR3_Initialize:
  1353  000013                     ??_TMR5_Initialize:
  1354  000013                     ??_TMR1_Initialize:
  1355  000013                     ??_butin:
  1356  000013                     ?___ltdiv:
  1357                           	opt stack 0
  1358  000013                     ?___ltmod:
  1359                           	opt stack 0
  1360  000013                     PIN_MANAGER_Initialize@state:
  1361                           	opt stack 0
  1362  000013                     EUSART1_Write@txData:
  1363                           	opt stack 0
  1364  000013                     DAC1_SetOutput@inputData:
  1365                           	opt stack 0
  1366  000013                     read_busy@savelate:
  1367                           	opt stack 0
  1368  000013                     init_mdbdata@initdata:
  1369                           	opt stack 0
  1370  000013                     cctalk_read@data:
  1371                           	opt stack 0
  1372  000013                     DATAEE_WriteByte@bAdd:
  1373                           	opt stack 0
  1374  000013                     DATAEE_ReadByte@bAdd:
  1375                           	opt stack 0
  1376  000013                     ___ltdiv@dividend:
  1377                           	opt stack 0
  1378  000013                     ___ltmod@dividend:
  1379                           	opt stack 0
  1380                           
  1381                           ; 3 bytes @ 0x12
  1382  000013                     	ds	1
  1383  000014                     read_busy@savelatd:
  1384                           	opt stack 0
  1385  000014                     butindb@butt:
  1386                           	opt stack 0
  1387  000014                     init_mdbdata@i:
  1388                           	opt stack 0
  1389  000014                     mdb_transmit@txbyte:
  1390                           	opt stack 0
  1391                           
  1392                           ; 1 bytes @ 0x13
  1393  000014                     	ds	1
  1394  000015                     DATAEE_WriteByte@bData:
  1395                           	opt stack 0
  1396  000015                     lcd_write@savelatd:
  1397                           	opt stack 0
  1398  000015                     butindb@butval:
  1399                           	opt stack 0
  1400  000015                     mdb_comm@mcount:
  1401                           	opt stack 0
  1402  000015                     cctalk_comm@nobytes:
  1403                           	opt stack 0
  1404                           
  1405                           ; 1 bytes @ 0x14
  1406  000015                     	ds	1
  1407  000016                     DATAEE_WriteByte@GIEBitValue:
  1408                           	opt stack 0
  1409  000016                     lcd_write@lcdata:
  1410                           	opt stack 0
  1411  000016                     mdb_comm@slvadd:
  1412                           	opt stack 0
  1413  000016                     cctalk_comm@command:
  1414                           	opt stack 0
  1415  000016                     ___ltdiv@divisor:
  1416                           	opt stack 0
  1417  000016                     ___ltmod@divisor:
  1418                           	opt stack 0
  1419                           
  1420                           ; 3 bytes @ 0x15
  1421  000016                     	ds	1
  1422  000017                     ??_cctalk_comm:
  1423  000017                     lcd_dispadd@lcdaddress:
  1424                           	opt stack 0
  1425  000017                     credit_add@credit:
  1426                           	opt stack 0
  1427  000017                     credit_subtract@credit:
  1428                           	opt stack 0
  1429  000017                     mdb_comm@i:
  1430                           	opt stack 0
  1431                           
  1432                           ; 1 bytes @ 0x16
  1433  000017                     	ds	1
  1434  000018                     ??_mdb_reset:
  1435  000018                     lcd_dispadd@lcdatasave:
  1436                           	opt stack 0
  1437  000018                     mdb_poll@i:
  1438                           	opt stack 0
  1439  000018                     cctalk_comm@i:
  1440                           	opt stack 0
  1441                           
  1442                           ; 1 bytes @ 0x17
  1443  000018                     	ds	1
  1444  000019                     lcd_writeC@lcdata:
  1445                           	opt stack 0
  1446  000019                     mdb_reset@i:
  1447                           	opt stack 0
  1448  000019                     cctalk_comm@dest:
  1449                           	opt stack 0
  1450  000019                     ___ltmod@counter:
  1451                           	opt stack 0
  1452  000019                     ___ltdiv@quotient:
  1453                           	opt stack 0
  1454                           
  1455                           ; 3 bytes @ 0x18
  1456  000019                     	ds	1
  1457  00001A                     ??_displ_code:
  1458  00001A                     lcd_test@character:
  1459                           	opt stack 0
  1460  00001A                     mdb_reset@i_2280:
  1461                           	opt stack 0
  1462  00001A                     cctalk_adpoll@i:
  1463                           	opt stack 0
  1464  00001A                     cctalk_pinenter@i:
  1465                           	opt stack 0
  1466  00001A                     cctalk_poll@i:
  1467                           	opt stack 0
  1468  00001A                     lcd_string@lcdstring:
  1469                           	opt stack 0
  1470                           
  1471                           ; 2 bytes @ 0x19
  1472  00001A                     	ds	1
  1473  00001B                     ??_lcd_init:
  1474  00001B                     ??_cctalk_init:
  1475  00001B                     mdb_init@i:
  1476                           	opt stack 0
  1477                           
  1478                           ; 1 bytes @ 0x1A
  1479  00001B                     	ds	1
  1480  00001C                     displ_code@ercode:
  1481                           	opt stack 0
  1482  00001C                     lcd_string@lcdline:
  1483                           	opt stack 0
  1484  00001C                     ___ltdiv@counter:
  1485                           	opt stack 0
  1486                           
  1487                           ; 1 bytes @ 0x1B
  1488  00001C                     	ds	1
  1489  00001D                     ??_lcd_string:
  1490  00001D                     displ_hex@hexnum:
  1491                           	opt stack 0
  1492                           
  1493                           ; 3 bytes @ 0x1C
  1494  00001D                     	ds	2
  1495  00001F                     displ_nendis@notenum:
  1496                           	opt stack 0
  1497  00001F                     displ_note@lcdstring:
  1498                           	opt stack 0
  1499                           
  1500                           ; 2 bytes @ 0x1E
  1501  00001F                     	ds	1
  1502  000020                     displ_credit@cash:
  1503                           	opt stack 0
  1504  000020                     enable_notes@notenum:
  1505                           	opt stack 0
  1506                           
  1507                           ; 1 bytes @ 0x1F
  1508  000020                     	ds	1
  1509  000021                     ??_displ_note:
  1510                           
  1511                           ; 1 bytes @ 0x20
  1512  000021                     	ds	2
  1513  000023                     tblptru	equ	0xFF8
  1514                           tblptrh	equ	0xFF7
  1515                           tblptrl	equ	0xFF6
  1516                           tablat	equ	0xFF5
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           
  1520                           ; 1 bytes @ 0x22
  1521 ;;
  1522 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1523 ;;
  1524 ;; *************** function _main *****************
  1525 ;; Defined at:
  1526 ;;		line 56 in file "main.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels required when called:   12
  1546 ;; This function calls:
  1547 ;;		_CMP1_GetOutputStatus
  1548 ;;		_SYSTEM_Initialize
  1549 ;;		_credit_add
  1550 ;;		_credit_subtract
  1551 ;;		_displ_credit
  1552 ;;		_displ_noteer
  1553 ;;		_enter_service
  1554 ;;		_lcd_init
  1555 ;;		_lcd_string
  1556 ;;		_mdb_init
  1557 ;;		_mdb_poll
  1558 ;;		_vend_init
  1559 ;; This function is called by:
  1560 ;;		Startup code after reset
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text0
  1565  010736                     __ptext0:
  1566                           	opt stack 0
  1567  010736                     _main:
  1568                           	opt stack 19
  1569                           
  1570                           ;main.c: 59: SYSTEM_Initialize();
  1571                           
  1572                           ;incstack = 0
  1573  010736  EC1F  F088         	call	_SYSTEM_Initialize	;wreg free
  1574                           
  1575                           ;main.c: 61: lcd_init();
  1576  01073A  ECF1  F083         	call	_lcd_init	;wreg free
  1577                           
  1578                           ;main.c: 62: vend_init();
  1579  01073E  EC0B  F085         	call	_vend_init	;wreg free
  1580  010742                     l707:
  1581  010742  F000               	nop		;# 
  1582                           
  1583                           ;main.c: 68: if (!CMP1_GetOutputStatus())
  1584  010744  EC0D  F089         	call	_CMP1_GetOutputStatus	;wreg free
  1585  010748  0900               	iorlw	0
  1586  01074A  B4D8               	btfsc	status,2,c
  1587                           
  1588                           ;main.c: 69: {
  1589                           ;main.c: 70: venflags.service = 1;
  1590  01074C  8E2B               	bsf	_venflags,7,c
  1591                           
  1592                           ;main.c: 72: }
  1593                           ;main.c: 74: if(venflags.service == 1)
  1594  01074E  BE2B               	btfsc	_venflags,7,c
  1595                           
  1596                           ;main.c: 75: {
  1597                           ;main.c: 76: enter_service();
  1598  010750  EC45  F084         	call	_enter_service	;wreg free
  1599                           
  1600                           ;main.c: 77: }
  1601                           ;main.c: 79: if(venflags.inscoin == 1)
  1602  010754  A42B               	btfss	_venflags,2,c
  1603  010756  D010               	goto	l710
  1604                           
  1605                           ;main.c: 80: {
  1606                           ;main.c: 81: lcd_string(inscoin, line1);
  1607  010758  0E8E               	movlw	low _inscoin
  1608  01075A  6E1A               	movwf	lcd_string@lcdstring,c
  1609  01075C  0EFF               	movlw	high _inscoin
  1610  01075E  6E1B               	movwf	lcd_string@lcdstring+1,c
  1611  010760  0EA8               	movlw	low _line1
  1612  010762  6EF6               	movwf	tblptrl,c
  1613  010764                     	if	1	;There is more than 1 active tblptr byte
  1614  010764  0EFE               	movlw	high _line1
  1615  010766  6EF7               	movwf	tblptrh,c
  1616  010768                     	endif
  1617  010768                     	if	1	;There are 3 active tblptr bytes
  1618  010768  0E00               	movlw	low (_line1 shr (0+16))
  1619  01076A  6EF8               	movwf	tblptru,c
  1620  01076C                     	endif
  1621  01076C  0008               	tblrd		*
  1622  01076E  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  1623  010772  EC0F  F082         	call	_lcd_string	;wreg free
  1624                           
  1625                           ;main.c: 82: venflags.inscoin = 0;
  1626  010776  942B               	bcf	_venflags,2,c
  1627  010778                     l710:
  1628                           
  1629                           ;main.c: 83: }
  1630                           ;main.c: 84: if(venflags.initialrun == 1)
  1631  010778  AA2B               	btfss	_venflags,5,c
  1632  01077A  D007               	goto	l711
  1633                           
  1634                           ;main.c: 85: {
  1635                           ;main.c: 86: credit_add(0x00);
  1636  01077C  0E00               	movlw	0
  1637  01077E  EC27  F086         	call	_credit_add
  1638                           
  1639                           ;main.c: 87: credit_subtract(0x00);
  1640  010782  0E00               	movlw	0
  1641  010784  ECA8  F085         	call	_credit_subtract
  1642                           
  1643                           ;main.c: 88: venflags.initialrun = 0;
  1644  010788  9A2B               	bcf	_venflags,5,c
  1645  01078A                     l711:
  1646                           
  1647                           ;main.c: 90: }
  1648                           ;main.c: 91: if(venflags.credisplay == 1)
  1649  01078A  B82B               	btfsc	_venflags,4,c
  1650                           
  1651                           ;main.c: 92: {
  1652                           ;main.c: 93: displ_credit();
  1653  01078C  EC6F  F087         	call	_displ_credit	;wreg free
  1654                           
  1655                           ;main.c: 94: }
  1656                           ;main.c: 96: if(PIR4bits.TMR3IF)
  1657  010790  010E               	movlb	14	; () banked
  1658  010792  A5CE               	btfss	206,2,b	;volatile
  1659  010794  D7D6               	goto	l707
  1660                           
  1661                           ; BSR set to: 14
  1662                           ;main.c: 97: {
  1663                           ;main.c: 98: credit = mdb_poll();
  1664  010796  EC00  F080         	call	_mdb_poll	;wreg free
  1665  01079A  6E2E               	movwf	_credit,c	;volatile
  1666                           
  1667                           ;main.c: 99: if(credit != 0x00)
  1668  01079C  502E               	movf	_credit,w,c	;volatile
  1669  01079E  B4D8               	btfsc	status,2,c
  1670  0107A0  D01B               	goto	l714
  1671                           
  1672                           ;main.c: 100: {
  1673                           ;main.c: 101: if(mdbflags.noteerr == 1)
  1674  0107A2  B237               	btfsc	_mdbflags,1,c
  1675  0107A4  D00D               	goto	l716
  1676  0107A6  D014               	goto	l715
  1677  0107A8  EC7A  F086         	call	_mdb_init	;wreg free
  1678  0107AC  D003               	goto	l5276
  1679  0107AE                     l719:
  1680                           
  1681                           ;main.c: 111: if(mdbflags.vending)
  1682  0107AE  A837               	btfss	_mdbflags,4,c
  1683                           
  1684                           ;main.c: 115: else
  1685                           ;main.c: 116: {
  1686                           ;main.c: 117: mdb_init();
  1687                           
  1688                           ;main.c: 114: }
  1689                           
  1690                           ;main.c: 112: {
  1691                           ;main.c: 113: credit = 0;
  1692  0107B0  EC7A  F086         	call	_mdb_init	;wreg free
  1693  0107B4                     l5276:
  1694                           
  1695                           ;main.c: 118: credit = 0;
  1696  0107B4  0E00               	movlw	0
  1697  0107B6  6E2E               	movwf	_credit,c	;volatile
  1698                           
  1699                           ;main.c: 119: }
  1700                           ;main.c: 120: break;
  1701  0107B8  D7C4               	goto	l707
  1702  0107BA  ECF0  F087         	call	_displ_noteer	;wreg free
  1703                           
  1704                           ;main.c: 122: }
  1705  0107BE  D7C1               	goto	l707
  1706  0107C0                     l716:
  1707  0107C0  502E               	movf	_credit,w,c	;volatile
  1708                           
  1709                           ; Switch size 1, requested type "space"
  1710                           ; Number of cases is 2, Range of values is 6 to 9
  1711                           ; switch strategies available:
  1712                           ; Name         Instructions Cycles
  1713                           ; simple_byte            7     4 (average)
  1714                           ;	Chosen strategy is simple_byte
  1715  0107C2  0A06               	xorlw	6	; case 6
  1716  0107C4  B4D8               	btfsc	status,2,c
  1717  0107C6  D7F0               	goto	l717
  1718  0107C8  0A0F               	xorlw	15	; case 9
  1719  0107CA  B4D8               	btfsc	status,2,c
  1720  0107CC  D7F0               	goto	l719
  1721  0107CE  D7F5               	goto	l722
  1722  0107D0                     l715:
  1723                           
  1724                           ;main.c: 124: else
  1725                           ;main.c: 125: {
  1726                           ;main.c: 126: credit_add(credit);
  1727  0107D0  502E               	movf	_credit,w,c	;volatile
  1728  0107D2  EC27  F086         	call	_credit_add
  1729                           
  1730                           ;main.c: 127: }
  1731                           ;main.c: 128: }
  1732  0107D6  D7B5               	goto	l707
  1733  0107D8                     l714:
  1734                           
  1735                           ;main.c: 129: else
  1736                           ;main.c: 130: {
  1737                           ;main.c: 131: if(mdbflags.noteerr == 1)
  1738  0107D8  A237               	btfss	_mdbflags,1,c
  1739  0107DA  D7B3               	goto	l707
  1740                           
  1741                           ;main.c: 132: {
  1742                           ;main.c: 133: displ_noteer();
  1743  0107DC  ECF0  F087         	call	_displ_noteer	;wreg free
  1744  0107E0  D7B0               	goto	l707
  1745  0107E2                     __end_of_main:
  1746                           	opt stack 0
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _vend_init *****************
  1756 ;; Defined at:
  1757 ;;		line 13 in file "vend.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    8
  1778 ;; This function calls:
  1779 ;;		_DAC1_SetOutput
  1780 ;;		_cctalk_init
  1781 ;;		_credit_check
  1782 ;;		_lcd_string
  1783 ;;		_mdb_init
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text1
  1790  010A16                     __ptext1:
  1791                           	opt stack 0
  1792  010A16                     _vend_init:
  1793                           	opt stack 22
  1794                           
  1795                           ;vend.c: 15: lcd_string(inithop, line1);
  1796                           
  1797                           ;incstack = 0
  1798  010A16  0EA4               	movlw	low _inithop
  1799  010A18  6E1A               	movwf	lcd_string@lcdstring,c
  1800  010A1A  0EFF               	movlw	high _inithop
  1801  010A1C  6E1B               	movwf	lcd_string@lcdstring+1,c
  1802  010A1E  0EA8               	movlw	low _line1
  1803  010A20  6EF6               	movwf	tblptrl,c
  1804  010A22                     	if	1	;There is more than 1 active tblptr byte
  1805  010A22  0EFE               	movlw	high _line1
  1806  010A24  6EF7               	movwf	tblptrh,c
  1807  010A26                     	endif
  1808  010A26                     	if	1	;There are 3 active tblptr bytes
  1809  010A26  0E00               	movlw	low (_line1 shr (0+16))
  1810  010A28  6EF8               	movwf	tblptru,c
  1811  010A2A                     	endif
  1812  010A2A  0008               	tblrd		*
  1813  010A2C  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  1814  010A30  EC0F  F082         	call	_lcd_string	;wreg free
  1815                           
  1816                           ;vend.c: 16: cctalk_init();
  1817  010A34  ECA1  F086         	call	_cctalk_init	;wreg free
  1818                           
  1819                           ;vend.c: 18: lcd_string(initnote, line1);
  1820  010A38  0E4D               	movlw	low _initnote
  1821  010A3A  6E1A               	movwf	lcd_string@lcdstring,c
  1822  010A3C  0EFF               	movlw	high _initnote
  1823  010A3E  6E1B               	movwf	lcd_string@lcdstring+1,c
  1824  010A40  0EA8               	movlw	low _line1
  1825  010A42  6EF6               	movwf	tblptrl,c
  1826  010A44                     	if	1	;There is more than 1 active tblptr byte
  1827  010A44  0EFE               	movlw	high _line1
  1828  010A46  6EF7               	movwf	tblptrh,c
  1829  010A48                     	endif
  1830  010A48                     	if	1	;There are 3 active tblptr bytes
  1831  010A48  0E00               	movlw	low (_line1 shr (0+16))
  1832  010A4A  6EF8               	movwf	tblptru,c
  1833  010A4C                     	endif
  1834  010A4C  0008               	tblrd		*
  1835  010A4E  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  1836  010A52  EC0F  F082         	call	_lcd_string	;wreg free
  1837                           
  1838                           ;vend.c: 19: mdb_init();
  1839  010A56  EC7A  F086         	call	_mdb_init	;wreg free
  1840                           
  1841                           ;vend.c: 21: venflags.service = 0;
  1842  010A5A  9E2B               	bcf	_venflags,7,c
  1843                           
  1844                           ;vend.c: 22: venflags.initialrun = 1;
  1845  010A5C  8A2B               	bsf	_venflags,5,c
  1846                           
  1847                           ;vend.c: 23: if(credit_check() == 0)
  1848  010A5E  EC47  F088         	call	_credit_check	;wreg free
  1849  010A62  0900               	iorlw	0
  1850  010A64  A4D8               	btfss	status,2,c
  1851  010A66  D004               	goto	l1349
  1852                           
  1853                           ;vend.c: 24: {
  1854                           ;vend.c: 25: venflags.iscredit = 0;
  1855  010A68  902B               	bcf	_venflags,0,c
  1856                           
  1857                           ;vend.c: 26: venflags.inscoin = 1;
  1858  010A6A  842B               	bsf	_venflags,2,c
  1859                           
  1860                           ;vend.c: 27: venflags.credisplay = 0;
  1861  010A6C  982B               	bcf	_venflags,4,c
  1862  010A6E  D003               	goto	L1
  1863  010A70                     l1349:
  1864                           
  1865                           ;vend.c: 30: else
  1866                           ;vend.c: 31: {
  1867                           ;vend.c: 32: venflags.iscredit = 1;
  1868  010A70  802B               	bsf	_venflags,0,c
  1869                           
  1870                           ;vend.c: 33: venflags.inscoin = 0;
  1871  010A72  942B               	bcf	_venflags,2,c
  1872                           
  1873                           ;vend.c: 34: venflags.credisplay = 1;
  1874  010A74  882B               	bsf	_venflags,4,c
  1875  010A76                     L1:
  1876                           
  1877                           ;vend.c: 35: mdbflags.noteerr = 0;
  1878  010A76  9237               	bcf	_mdbflags,1,c
  1879                           
  1880                           ;vend.c: 36: }
  1881                           ;vend.c: 38: DAC1_SetOutput(0x00);
  1882  010A78  0E00               	movlw	0
  1883  010A7A  EC1A  F089         	call	_DAC1_SetOutput
  1884  010A7E  0012               	return		;funcret
  1885  010A80                     __end_of_vend_init:
  1886                           	opt stack 0
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _mdb_init *****************
  1896 ;; Defined at:
  1897 ;;		line 21 in file "mdb.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  i               1   26[COMRAM] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1915 ;;Total ram usage:        1 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    6
  1918 ;; This function calls:
  1919 ;;		_DATAEE_ReadByte
  1920 ;;		_eusartmdb_Initialize
  1921 ;;		_mdb_comm
  1922 ;;		_mdb_noten
  1923 ;;		_mdb_reset
  1924 ;;		_mdb_security
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;;		_vend_init
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text2
  1932  010CF4                     __ptext2:
  1933                           	opt stack 0
  1934  010CF4                     _mdb_init:
  1935                           	opt stack 23
  1936                           
  1937                           ;mdb.c: 23: noteen_byte = DATAEE_ReadByte(notebits);
  1938                           
  1939                           ;incstack = 0
  1940  010CF4  0E74               	movlw	low _notebits
  1941  010CF6  6EF6               	movwf	tblptrl,c
  1942  010CF8                     	if	1	;There is more than 1 active tblptr byte
  1943  010CF8  0EFE               	movlw	high _notebits
  1944  010CFA  6EF7               	movwf	tblptrh,c
  1945  010CFC                     	endif
  1946  010CFC                     	if	1	;There are 3 active tblptr bytes
  1947  010CFC  0E00               	movlw	low (_notebits shr (0+16))
  1948  010CFE  6EF8               	movwf	tblptru,c
  1949  010D00                     	endif
  1950  010D00  0009               	tblrd		*+
  1951  010D02  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  1952  010D06  000A               	tblrd		*-
  1953  010D08  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  1954  010D0C  EC95  F088         	call	_DATAEE_ReadByte	;wreg free
  1955  010D10  6E35               	movwf	_noteen_byte,c	;volatile
  1956                           
  1957                           ;mdb.c: 24: eusartmdb_Initialize();
  1958  010D12  ECB9  F088         	call	_eusartmdb_Initialize	;wreg free
  1959                           
  1960                           ;mdb.c: 25: mdbflags.noteerr = 0;
  1961  010D16  9237               	bcf	_mdbflags,1,c
  1962                           
  1963                           ;mdb.c: 26: mdbflags.isdata = 0;
  1964  010D18  9037               	bcf	_mdbflags,0,c
  1965                           
  1966                           ;mdb.c: 27: mdb_reset();
  1967  010D1A  EC8C  F084         	call	_mdb_reset	;wreg free
  1968                           
  1969                           ;mdb.c: 28: mdb_noten();
  1970  010D1E  ECE4  F086         	call	_mdb_noten	;wreg free
  1971                           
  1972                           ;mdb.c: 29: mdb_security();
  1973  010D22  EC58  F088         	call	_mdb_security	;wreg free
  1974                           
  1975                           ;mdb.c: 30: uint8_t i = mdb_comm(note_poll, 0x00);
  1976  010D26  0E00               	movlw	0
  1977  010D28  6E15               	movwf	mdb_comm@mcount,c
  1978  010D2A  0EA1               	movlw	low _note_poll
  1979  010D2C  6EF6               	movwf	tblptrl,c
  1980  010D2E                     	if	1	;There is more than 1 active tblptr byte
  1981  010D2E  0EFE               	movlw	high _note_poll
  1982  010D30  6EF7               	movwf	tblptrh,c
  1983  010D32                     	endif
  1984  010D32                     	if	1	;There are 3 active tblptr bytes
  1985  010D32  0E00               	movlw	low (_note_poll shr (0+16))
  1986  010D34  6EF8               	movwf	tblptru,c
  1987  010D36                     	endif
  1988  010D36  0008               	tblrd		*
  1989  010D38  50F5               	movf	tablat,w,c
  1990  010D3A  EC92  F081         	call	_mdb_comm
  1991  010D3E  6E1B               	movwf	mdb_init@i,c
  1992  010D40  0012               	return		;funcret
  1993  010D42                     __end_of_mdb_init:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           postinc0	equ	0xFEE
  2000                           wreg	equ	0xFE8
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _mdb_security *****************
  2004 ;; Defined at:
  2005 ;;		line 134 in file "mdb.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    5
  2026 ;; This function calls:
  2027 ;;		_init_mdbdata
  2028 ;;		_mdb_comm
  2029 ;; This function is called by:
  2030 ;;		_mdb_init
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text3
  2035  0110B0                     __ptext3:
  2036                           	opt stack 0
  2037  0110B0                     _mdb_security:
  2038                           	opt stack 23
  2039                           
  2040                           ;mdb.c: 136: init_mdbdata(0x00);
  2041                           
  2042                           ;incstack = 0
  2043  0110B0  0E00               	movlw	0
  2044  0110B2  EC34  F088         	call	_init_mdbdata
  2045                           
  2046                           ;mdb.c: 137: mdb_comm(note_security, 0x01);
  2047  0110B6  0E01               	movlw	1
  2048  0110B8  6E15               	movwf	mdb_comm@mcount,c
  2049  0110BA  0EA2               	movlw	low _note_security
  2050  0110BC  6EF6               	movwf	tblptrl,c
  2051  0110BE                     	if	1	;There is more than 1 active tblptr byte
  2052  0110BE  0EFE               	movlw	high _note_security
  2053  0110C0  6EF7               	movwf	tblptrh,c
  2054  0110C2                     	endif
  2055  0110C2                     	if	1	;There are 3 active tblptr bytes
  2056  0110C2  0E00               	movlw	low (_note_security shr (0+16))
  2057  0110C4  6EF8               	movwf	tblptru,c
  2058  0110C6                     	endif
  2059  0110C6  0008               	tblrd		*
  2060  0110C8  50F5               	movf	tablat,w,c
  2061  0110CA  EC92  F081         	call	_mdb_comm
  2062  0110CE  0012               	return		;funcret
  2063  0110D0                     __end_of_mdb_security:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           postinc0	equ	0xFEE
  2070                           wreg	equ	0xFE8
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _mdb_reset *****************
  2074 ;; Defined at:
  2075 ;;		line 34 in file "mdb.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  i               1   24[COMRAM] unsigned char 
  2080 ;;  i               1   25[COMRAM] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      unsigned char 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;Total ram usage:        3 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    5
  2097 ;; This function calls:
  2098 ;;		_mdb_comm
  2099 ;; This function is called by:
  2100 ;;		_mdb_init
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text4
  2105  010918                     __ptext4:
  2106                           	opt stack 0
  2107  010918                     _mdb_reset:
  2108                           	opt stack 23
  2109                           
  2110                           ;mdb.c: 39: mdbflags.timeout = 1;
  2111                           
  2112                           ;incstack = 0
  2113  010918  8637               	bsf	_mdbflags,3,c
  2114                           
  2115                           ;mdb.c: 40: while(mdbflags.timeout)
  2116  01091A  D00D               	goto	l1693
  2117  01091C                     
  2118                           ;mdb.c: 41: {
  2119                           ;mdb.c: 42: uint8_t i = mdb_comm(note_reset, 0x00);
  2120  01091C  0E00               	movlw	0
  2121  01091E  6E15               	movwf	mdb_comm@mcount,c
  2122  010920  0EA4               	movlw	low _note_reset
  2123  010922  6EF6               	movwf	tblptrl,c
  2124  010924                     	if	1	;There is more than 1 active tblptr byte
  2125  010924  0EFE               	movlw	high _note_reset
  2126  010926  6EF7               	movwf	tblptrh,c
  2127  010928                     	endif
  2128  010928                     	if	1	;There are 3 active tblptr bytes
  2129  010928  0E00               	movlw	low (_note_reset shr (0+16))
  2130  01092A  6EF8               	movwf	tblptru,c
  2131  01092C                     	endif
  2132  01092C  0008               	tblrd		*
  2133  01092E  50F5               	movf	tablat,w,c
  2134  010930  EC92  F081         	call	_mdb_comm
  2135  010934  6E19               	movwf	mdb_reset@i,c
  2136  010936                     l1693:
  2137  010936  B637               	btfsc	_mdbflags,3,c
  2138  010938  D7F1               	goto	l1694
  2139  01093A  F000               	nop		;# 
  2140                           
  2141                           ;mdb.c: 45: uint8_t i = mdb_comm(note_poll, 0x00);
  2142  01093C  0E00               	movlw	0
  2143  01093E  6E15               	movwf	mdb_comm@mcount,c
  2144  010940  0EA1               	movlw	low _note_poll
  2145  010942  6EF6               	movwf	tblptrl,c
  2146  010944                     	if	1	;There is more than 1 active tblptr byte
  2147  010944  0EFE               	movlw	high _note_poll
  2148  010946  6EF7               	movwf	tblptrh,c
  2149  010948                     	endif
  2150  010948                     	if	1	;There are 3 active tblptr bytes
  2151  010948  0E00               	movlw	low (_note_poll shr (0+16))
  2152  01094A  6EF8               	movwf	tblptru,c
  2153  01094C                     	endif
  2154  01094C  0008               	tblrd		*
  2155  01094E  50F5               	movf	tablat,w,c
  2156  010950  EC92  F081         	call	_mdb_comm
  2157  010954  6E1A               	movwf	mdb_reset@i_2280,c
  2158                           
  2159                           ;mdb.c: 46: if(mdbdata[--i] == just_reset)
  2160  010956  061A               	decf	mdb_reset@i_2280,f,c
  2161  010958  501A               	movf	mdb_reset@i_2280,w,c
  2162  01095A  0D01               	mullw	1
  2163  01095C  0E60               	movlw	low _mdbdata
  2164  01095E  24F3               	addwf	prodl,w,c
  2165  010960  6ED9               	movwf	fsr2l,c
  2166  010962  0E00               	movlw	high _mdbdata
  2167  010964  20F4               	addwfc	prodh,w,c
  2168  010966  6EDA               	movwf	fsr2h,c
  2169  010968  50DF               	movf	indf2,w,c
  2170  01096A  6E18               	movwf	??_mdb_reset& (0+255),c
  2171  01096C  0E97               	movlw	low _just_reset
  2172  01096E  6EF6               	movwf	tblptrl,c
  2173  010970                     	if	1	;There is more than 1 active tblptr byte
  2174  010970  0EFE               	movlw	high _just_reset
  2175  010972  6EF7               	movwf	tblptrh,c
  2176  010974                     	endif
  2177  010974                     	if	1	;There are 3 active tblptr bytes
  2178  010974  0E00               	movlw	low (_just_reset shr (0+16))
  2179  010976  6EF8               	movwf	tblptru,c
  2180  010978                     	endif
  2181  010978  0008               	tblrd		*
  2182  01097A  50F5               	movf	tablat,w,c
  2183  01097C  1818               	xorwf	??_mdb_reset,w,c
  2184  01097E  A4D8               	btfss	status,2,c
  2185  010980  0012               	return	
  2186                           
  2187                           ;mdb.c: 47: {
  2188                           ;mdb.c: 50: i = mdb_comm(note_poll, 0x00);
  2189  010982  0E00               	movlw	0
  2190  010984  6E15               	movwf	mdb_comm@mcount,c
  2191  010986  0EA1               	movlw	low _note_poll
  2192  010988  6EF6               	movwf	tblptrl,c
  2193  01098A                     	if	1	;There is more than 1 active tblptr byte
  2194  01098A  0EFE               	movlw	high _note_poll
  2195  01098C  6EF7               	movwf	tblptrh,c
  2196  01098E                     	endif
  2197  01098E                     	if	1	;There are 3 active tblptr bytes
  2198  01098E  0E00               	movlw	low (_note_poll shr (0+16))
  2199  010990  6EF8               	movwf	tblptru,c
  2200  010992                     	endif
  2201  010992  0008               	tblrd		*
  2202  010994  50F5               	movf	tablat,w,c
  2203  010996  EC92  F081         	call	_mdb_comm
  2204  01099A  6E1A               	movwf	mdb_reset@i_2280,c
  2205  01099C  0012               	return	
  2206  01099E                     __end_of_mdb_reset:
  2207                           	opt stack 0
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           prodh	equ	0xFF4
  2213                           prodl	equ	0xFF3
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           indf2	equ	0xFDF
  2217                           fsr2h	equ	0xFDA
  2218                           fsr2l	equ	0xFD9
  2219                           status	equ	0xFD8
  2220                           
  2221 ;; *************** function _mdb_noten *****************
  2222 ;; Defined at:
  2223 ;;		line 118 in file "mdb.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2241 ;;Total ram usage:        0 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    5
  2244 ;; This function calls:
  2245 ;;		_init_mdbdata
  2246 ;;		_mdb_comm
  2247 ;; This function is called by:
  2248 ;;		_mdb_init
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text5
  2253  010DC8                     __ptext5:
  2254                           	opt stack 0
  2255  010DC8                     _mdb_noten:
  2256                           	opt stack 23
  2257                           
  2258                           ;mdb.c: 121: init_mdbdata(0x00);
  2259                           
  2260                           ;incstack = 0
  2261  010DC8  0E00               	movlw	0
  2262  010DCA  EC34  F088         	call	_init_mdbdata
  2263                           
  2264                           ;mdb.c: 123: mcount = 3;
  2265  010DCE  0E03               	movlw	3
  2266  010DD0  6E3A               	movwf	_mcount,c
  2267                           
  2268                           ;mdb.c: 125: mdbdata[0] = 0x00;
  2269  010DD2  0E00               	movlw	0
  2270  010DD4  0100               	movlb	0	; () banked
  2271  010DD6  6F60               	movwf	_mdbdata& (0+255),b
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;mdb.c: 126: mdbdata[1] = 0x00;
  2275  010DD8  0E00               	movlw	0
  2276  010DDA  6F61               	movwf	(_mdbdata+1)& (0+255),b
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;mdb.c: 128: mdbdata[2] = noteen_byte;
  2280  010DDC  C035  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;mdb.c: 130: mdbdata[3] = 0x00;
  2284  010DE0  0E00               	movlw	0
  2285  010DE2  6F63               	movwf	(_mdbdata+3)& (0+255),b
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;mdb.c: 131: mcount = mdb_comm(note_type, mcount);
  2289  010DE4  C03A  F015         	movff	_mcount,mdb_comm@mcount
  2290  010DE8  0EA0               	movlw	low _note_type
  2291  010DEA  6EF6               	movwf	tblptrl,c
  2292  010DEC                     	if	1	;There is more than 1 active tblptr byte
  2293  010DEC  0EFE               	movlw	high _note_type
  2294  010DEE  6EF7               	movwf	tblptrh,c
  2295  010DF0                     	endif
  2296  010DF0                     	if	1	;There are 3 active tblptr bytes
  2297  010DF0  0E00               	movlw	low (_note_type shr (0+16))
  2298  010DF2  6EF8               	movwf	tblptru,c
  2299  010DF4                     	endif
  2300  010DF4  0008               	tblrd		*
  2301  010DF6  50F5               	movf	tablat,w,c
  2302  010DF8  EC92  F081         	call	_mdb_comm
  2303  010DFC  6E3A               	movwf	_mcount,c
  2304                           
  2305                           ;mdb.c: 132: mdbflags.vending = 0;
  2306  010DFE  9837               	bcf	_mdbflags,4,c
  2307  010E00  0012               	return		;funcret
  2308  010E02                     __end_of_mdb_noten:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           prodh	equ	0xFF4
  2315                           prodl	equ	0xFF3
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           indf2	equ	0xFDF
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function _cctalk_init *****************
  2324 ;; Defined at:
  2325 ;;		line 9 in file "cctalk.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2343 ;;Total ram usage:        1 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    6
  2346 ;; This function calls:
  2347 ;;		_cctalk_adpoll
  2348 ;;		_cctalk_on
  2349 ;;		_cctalk_pinenter
  2350 ;;		_cctalk_poll
  2351 ;;		_eusartmdb_Initialize
  2352 ;;		_mdb_on
  2353 ;; This function is called by:
  2354 ;;		_vend_init
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text6
  2359  010D42                     __ptext6:
  2360                           	opt stack 0
  2361  010D42                     _cctalk_init:
  2362                           	opt stack 23
  2363                           
  2364                           ;cctalk.c: 11: cctalk_on();
  2365                           
  2366                           ;incstack = 0
  2367  010D42  EC2A  F089         	call	_cctalk_on	;wreg free
  2368                           
  2369                           ;cctalk.c: 12: cctflags.timeout = 1;
  2370  010D46  862F               	bsf	_cctflags,3,c
  2371                           
  2372                           ;cctalk.c: 13: cctalk_adpoll();
  2373  010D48  EC68  F088         	call	_cctalk_adpoll	;wreg free
  2374                           
  2375                           ;cctalk.c: 14: cctalk_pinenter();
  2376  010D4C  EC55  F087         	call	_cctalk_pinenter	;wreg free
  2377                           
  2378                           ;cctalk.c: 15: count = 0;
  2379  010D50  0E00               	movlw	0
  2380  010D52  6E49               	movwf	_count,c
  2381                           
  2382                           ;cctalk.c: 16: while(cctflags.timeout && count < 0x03)
  2383  010D54  D00B               	goto	l2077
  2384  010D56                     
  2385                           ;cctalk.c: 17: {
  2386                           ;cctalk.c: 18: _delay((unsigned long)((50)*(12000000/4000.0)));
  2387  010D56  0EC3               	movlw	195
  2388  010D58  6E1B               	movwf	??_cctalk_init& (0+255),c
  2389  010D5A  0ECD               	movlw	205
  2390  010D5C                     u2027:
  2391  010D5C  2EE8               	decfsz	wreg,f,c
  2392  010D5E  D7FE               	bra	u2027
  2393  010D60  2E1B               	decfsz	??_cctalk_init& (0+255),f,c
  2394  010D62  D7FC               	bra	u2027
  2395  010D64  F000               	nop	
  2396                           
  2397                           ;cctalk.c: 19: cctalk_poll();
  2398  010D66  EC08  F088         	call	_cctalk_poll	;wreg free
  2399                           
  2400                           ;cctalk.c: 20: count++;
  2401  010D6A  2A49               	incf	_count,f,c
  2402  010D6C                     l2077:
  2403  010D6C  A62F               	btfss	_cctflags,3,c
  2404  010D6E  D005               	goto	u1450
  2405  010D70  5049               	movf	_count,w,c
  2406  010D72  0A80               	xorlw	128
  2407  010D74  0F7D               	addlw	-131
  2408  010D76  A0D8               	btfss	status,0,c
  2409  010D78  D7EE               	goto	l2078
  2410  010D7A                     u1450:
  2411  010D7A  F000               	nop		;# 
  2412                           
  2413                           ;cctalk.c: 23: eusartmdb_Initialize();
  2414  010D7C  ECB9  F088         	call	_eusartmdb_Initialize	;wreg free
  2415                           
  2416                           ;cctalk.c: 24: mdb_on();
  2417  010D80  EC33  F089         	call	_mdb_on	;wreg free
  2418  010D84  0012               	return		;funcret
  2419  010D86                     __end_of_cctalk_init:
  2420                           	opt stack 0
  2421                           tblptru	equ	0xFF8
  2422                           tblptrh	equ	0xFF7
  2423                           tblptrl	equ	0xFF6
  2424                           tablat	equ	0xFF5
  2425                           prodh	equ	0xFF4
  2426                           prodl	equ	0xFF3
  2427                           postinc0	equ	0xFEE
  2428                           wreg	equ	0xFE8
  2429                           indf2	equ	0xFDF
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function _eusartmdb_Initialize *****************
  2435 ;; Defined at:
  2436 ;;		line 55 in file "eusart_mdb.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    2
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_mdb_init
  2461 ;;		_cctalk_init
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text7
  2466  011172                     __ptext7:
  2467                           	opt stack 0
  2468  011172                     _eusartmdb_Initialize:
  2469                           	opt stack 26
  2470                           
  2471                           ;eusart_mdb.c: 60: BAUD1CON = 0x08;
  2472                           
  2473                           ;incstack = 0
  2474  011172  0E08               	movlw	8
  2475  011174  6E9F               	movwf	3999,c	;volatile
  2476                           
  2477                           ;eusart_mdb.c: 63: RC1STA = 0xD0;
  2478  011176  0ED0               	movlw	208
  2479  011178  6E9D               	movwf	3997,c	;volatile
  2480                           
  2481                           ;eusart_mdb.c: 66: TX1STA = 0xEC;
  2482  01117A  0EEC               	movlw	236
  2483  01117C  6E9E               	movwf	3998,c	;volatile
  2484                           
  2485                           ;eusart_mdb.c: 69: SP1BRGL = 0x38;
  2486  01117E  0E38               	movlw	56
  2487  011180  6E9B               	movwf	3995,c	;volatile
  2488                           
  2489                           ;eusart_mdb.c: 72: SP1BRGH = 0x01;
  2490  011182  0E01               	movlw	1
  2491  011184  6E9C               	movwf	3996,c	;volatile
  2492  011186  0012               	return		;funcret
  2493  011188                     __end_of_eusartmdb_Initialize:
  2494                           	opt stack 0
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           prodh	equ	0xFF4
  2500                           prodl	equ	0xFF3
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           indf2	equ	0xFDF
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8
  2507                           
  2508 ;; *************** function _cctalk_poll *****************
  2509 ;; Defined at:
  2510 ;;		line 38 in file "cctalk.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  i               1   25[COMRAM] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    5
  2531 ;; This function calls:
  2532 ;;		_cctalk_comm
  2533 ;; This function is called by:
  2534 ;;		_cctalk_init
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text8
  2539  011010                     __ptext8:
  2540                           	opt stack 0
  2541  011010                     _cctalk_poll:
  2542                           	opt stack 23
  2543                           
  2544                           ;cctalk.c: 40: uint8_t i = cctalk_comm(hopadd, 0x00, cc_poll);
  2545                           
  2546                           ;incstack = 0
  2547  011010  0E00               	movlw	0
  2548  011012  6E15               	movwf	cctalk_comm@nobytes,c
  2549  011014  0E82               	movlw	low _cc_poll
  2550  011016  6EF6               	movwf	tblptrl,c
  2551  011018                     	if	1	;There is more than 1 active tblptr byte
  2552  011018  0EFE               	movlw	high _cc_poll
  2553  01101A  6EF7               	movwf	tblptrh,c
  2554  01101C                     	endif
  2555  01101C                     	if	1	;There are 3 active tblptr bytes
  2556  01101C  0E00               	movlw	low (_cc_poll shr (0+16))
  2557  01101E  6EF8               	movwf	tblptru,c
  2558  011020                     	endif
  2559  011020  0008               	tblrd		*
  2560  011022  CFF5 F016          	movff	tablat,cctalk_comm@command
  2561  011026  0E90               	movlw	low _hopadd
  2562  011028  6EF6               	movwf	tblptrl,c
  2563  01102A                     	if	1	;There is more than 1 active tblptr byte
  2564  01102A  0EFE               	movlw	high _hopadd
  2565  01102C  6EF7               	movwf	tblptrh,c
  2566  01102E                     	endif
  2567  01102E                     	if	1	;There are 3 active tblptr bytes
  2568  01102E  0E00               	movlw	low (_hopadd shr (0+16))
  2569  011030  6EF8               	movwf	tblptru,c
  2570  011032                     	endif
  2571  011032  0008               	tblrd		*
  2572  011034  50F5               	movf	tablat,w,c
  2573  011036  EC14  F081         	call	_cctalk_comm
  2574  01103A  6E1A               	movwf	cctalk_poll@i,c
  2575  01103C  0012               	return		;funcret
  2576  01103E                     __end_of_cctalk_poll:
  2577                           	opt stack 0
  2578                           tblptru	equ	0xFF8
  2579                           tblptrh	equ	0xFF7
  2580                           tblptrl	equ	0xFF6
  2581                           tablat	equ	0xFF5
  2582                           prodh	equ	0xFF4
  2583                           prodl	equ	0xFF3
  2584                           postinc0	equ	0xFEE
  2585                           wreg	equ	0xFE8
  2586                           indf2	equ	0xFDF
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _cctalk_pinenter *****************
  2592 ;; Defined at:
  2593 ;;		line 32 in file "cctalk.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  i               1   25[COMRAM] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    5
  2614 ;; This function calls:
  2615 ;;		_cctalk_comm
  2616 ;;		_init_mdbdata
  2617 ;; This function is called by:
  2618 ;;		_cctalk_init
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text9
  2623  010EAA                     __ptext9:
  2624                           	opt stack 0
  2625  010EAA                     _cctalk_pinenter:
  2626                           	opt stack 23
  2627                           
  2628                           ;cctalk.c: 34: init_mdbdata(0x00);
  2629                           
  2630                           ;incstack = 0
  2631  010EAA  0E00               	movlw	0
  2632  010EAC  EC34  F088         	call	_init_mdbdata
  2633                           
  2634                           ;cctalk.c: 35: uint8_t i = cctalk_comm(hopadd, 0x04, cc_pin);
  2635  010EB0  0E04               	movlw	4
  2636  010EB2  6E15               	movwf	cctalk_comm@nobytes,c
  2637  010EB4  0E86               	movlw	low _cc_pin
  2638  010EB6  6EF6               	movwf	tblptrl,c
  2639  010EB8                     	if	1	;There is more than 1 active tblptr byte
  2640  010EB8  0EFE               	movlw	high _cc_pin
  2641  010EBA  6EF7               	movwf	tblptrh,c
  2642  010EBC                     	endif
  2643  010EBC                     	if	1	;There are 3 active tblptr bytes
  2644  010EBC  0E00               	movlw	low (_cc_pin shr (0+16))
  2645  010EBE  6EF8               	movwf	tblptru,c
  2646  010EC0                     	endif
  2647  010EC0  0008               	tblrd		*
  2648  010EC2  CFF5 F016          	movff	tablat,cctalk_comm@command
  2649  010EC6  0E90               	movlw	low _hopadd
  2650  010EC8  6EF6               	movwf	tblptrl,c
  2651  010ECA                     	if	1	;There is more than 1 active tblptr byte
  2652  010ECA  0EFE               	movlw	high _hopadd
  2653  010ECC  6EF7               	movwf	tblptrh,c
  2654  010ECE                     	endif
  2655  010ECE                     	if	1	;There are 3 active tblptr bytes
  2656  010ECE  0E00               	movlw	low (_hopadd shr (0+16))
  2657  010ED0  6EF8               	movwf	tblptru,c
  2658  010ED2                     	endif
  2659  010ED2  0008               	tblrd		*
  2660  010ED4  50F5               	movf	tablat,w,c
  2661  010ED6  EC14  F081         	call	_cctalk_comm
  2662  010EDA  6E1A               	movwf	cctalk_pinenter@i,c
  2663  010EDC  0012               	return		;funcret
  2664  010EDE                     __end_of_cctalk_pinenter:
  2665                           	opt stack 0
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           prodh	equ	0xFF4
  2671                           prodl	equ	0xFF3
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           indf2	equ	0xFDF
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           status	equ	0xFD8
  2678                           
  2679 ;; *************** function _cctalk_on *****************
  2680 ;; Defined at:
  2681 ;;		line 132 in file "cctalk.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		None
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    2
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_cctalk_init
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text10
  2710  011254                     __ptext10:
  2711                           	opt stack 0
  2712  011254                     _cctalk_on:
  2713                           	opt stack 26
  2714                           
  2715                           ;cctalk.c: 138: LATCbits.LATC0 = 0;
  2716                           
  2717                           ;incstack = 0
  2718  011254  9085               	bcf	3973,0,c	;volatile
  2719                           
  2720                           ;cctalk.c: 139: LATCbits.LATC1 = 1;
  2721  011256  8285               	bsf	3973,1,c	;volatile
  2722  011258  0012               	return		;funcret
  2723  01125A                     __end_of_cctalk_on:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           indf2	equ	0xFDF
  2734                           fsr2h	equ	0xFDA
  2735                           fsr2l	equ	0xFD9
  2736                           status	equ	0xFD8
  2737                           
  2738 ;; *************** function _cctalk_adpoll *****************
  2739 ;; Defined at:
  2740 ;;		line 27 in file "cctalk.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  i               1   25[COMRAM] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;Total ram usage:        1 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    5
  2761 ;; This function calls:
  2762 ;;		_cctalk_comm
  2763 ;; This function is called by:
  2764 ;;		_cctalk_init
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text11
  2769  0110D0                     __ptext11:
  2770                           	opt stack 0
  2771  0110D0                     _cctalk_adpoll:
  2772                           	opt stack 23
  2773                           
  2774                           ;cctalk.c: 29: uint8_t i = cctalk_comm(0x00, 0x00, cc_adpoll);
  2775                           
  2776                           ;incstack = 0
  2777  0110D0  0E00               	movlw	0
  2778  0110D2  6E15               	movwf	cctalk_comm@nobytes,c
  2779  0110D4  0E83               	movlw	low _cc_adpoll
  2780  0110D6  6EF6               	movwf	tblptrl,c
  2781  0110D8                     	if	1	;There is more than 1 active tblptr byte
  2782  0110D8  0EFE               	movlw	high _cc_adpoll
  2783  0110DA  6EF7               	movwf	tblptrh,c
  2784  0110DC                     	endif
  2785  0110DC                     	if	1	;There are 3 active tblptr bytes
  2786  0110DC  0E00               	movlw	low (_cc_adpoll shr (0+16))
  2787  0110DE  6EF8               	movwf	tblptru,c
  2788  0110E0                     	endif
  2789  0110E0  0008               	tblrd		*
  2790  0110E2  CFF5 F016          	movff	tablat,cctalk_comm@command
  2791  0110E6  0E00               	movlw	0
  2792  0110E8  EC14  F081         	call	_cctalk_comm
  2793  0110EC  6E1A               	movwf	cctalk_adpoll@i,c
  2794  0110EE  0012               	return		;funcret
  2795  0110F0                     __end_of_cctalk_adpoll:
  2796                           	opt stack 0
  2797                           tblptru	equ	0xFF8
  2798                           tblptrh	equ	0xFF7
  2799                           tblptrl	equ	0xFF6
  2800                           tablat	equ	0xFF5
  2801                           prodh	equ	0xFF4
  2802                           prodl	equ	0xFF3
  2803                           postinc0	equ	0xFEE
  2804                           wreg	equ	0xFE8
  2805                           indf2	equ	0xFDF
  2806                           fsr2h	equ	0xFDA
  2807                           fsr2l	equ	0xFD9
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function _cctalk_comm *****************
  2811 ;; Defined at:
  2812 ;;		line 56 in file "cctalk.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  dest            1    wreg     unsigned char 
  2815 ;;  nobytes         1   20[COMRAM] unsigned char 
  2816 ;;  command         1   21[COMRAM] unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  dest            1   24[COMRAM] unsigned char 
  2819 ;;  i               1   23[COMRAM] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      unsigned char 
  2822 ;; Registers used:
  2823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2832 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;Total ram usage:        5 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    4
  2836 ;; This function calls:
  2837 ;;		_TMR3_Initialize
  2838 ;;		_cctalk_read
  2839 ;;		_init_mdbdata
  2840 ;;		_mdb_transmit
  2841 ;; This function is called by:
  2842 ;;		_cctalk_adpoll
  2843 ;;		_cctalk_pinenter
  2844 ;;		_cctalk_poll
  2845 ;;		_cctalk_serial
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text12
  2850  010228                     __ptext12:
  2851                           	opt stack 0
  2852  010228                     _cctalk_comm:
  2853                           	opt stack 23
  2854                           
  2855                           ;incstack = 0
  2856                           ;cctalk_comm@dest stored from wreg
  2857  010228  6E19               	movwf	cctalk_comm@dest,c
  2858                           
  2859                           ;cctalk.c: 59: uint8_t i = 0;
  2860  01022A  0E00               	movlw	0
  2861  01022C  6E18               	movwf	cctalk_comm@i,c
  2862                           
  2863                           ;cctalk.c: 63: i = RC1REG;
  2864  01022E  CF99 F018          	movff	3993,cctalk_comm@i	;volatile
  2865                           
  2866                           ;cctalk.c: 65: i = 0;
  2867  010232  0E00               	movlw	0
  2868  010234  6E18               	movwf	cctalk_comm@i,c
  2869                           
  2870                           ;cctalk.c: 68: chkbyte = dest + nobytes + command + mastadd;
  2871  010236  0E8F               	movlw	low _mastadd
  2872  010238  6EF6               	movwf	tblptrl,c
  2873  01023A                     	if	1	;There is more than 1 active tblptr byte
  2874  01023A  0EFE               	movlw	high _mastadd
  2875  01023C  6EF7               	movwf	tblptrh,c
  2876  01023E                     	endif
  2877  01023E                     	if	1	;There are 3 active tblptr bytes
  2878  01023E  0E00               	movlw	low (_mastadd shr (0+16))
  2879  010240  6EF8               	movwf	tblptru,c
  2880  010242                     	endif
  2881  010242  0008               	tblrd		*
  2882  010244  CFF5 F017          	movff	tablat,??_cctalk_comm
  2883  010248  5019               	movf	cctalk_comm@dest,w,c
  2884  01024A  2415               	addwf	cctalk_comm@nobytes,w,c
  2885  01024C  2416               	addwf	cctalk_comm@command,w,c
  2886  01024E  2417               	addwf	??_cctalk_comm,w,c
  2887  010250  6E38               	movwf	_chkbyte,c
  2888                           
  2889                           ;cctalk.c: 69: mdb_transmit(dest);
  2890  010252  5019               	movf	cctalk_comm@dest,w,c
  2891  010254  ECF8  F088         	call	_mdb_transmit
  2892                           
  2893                           ;cctalk.c: 71: mdb_transmit(nobytes);
  2894  010258  5015               	movf	cctalk_comm@nobytes,w,c
  2895  01025A  ECF8  F088         	call	_mdb_transmit
  2896                           
  2897                           ;cctalk.c: 73: mdb_transmit(mastadd);
  2898  01025E  0E8F               	movlw	low _mastadd
  2899  010260  6EF6               	movwf	tblptrl,c
  2900  010262                     	if	1	;There is more than 1 active tblptr byte
  2901  010262  0EFE               	movlw	high _mastadd
  2902  010264  6EF7               	movwf	tblptrh,c
  2903  010266                     	endif
  2904  010266                     	if	1	;There are 3 active tblptr bytes
  2905  010266  0E00               	movlw	low (_mastadd shr (0+16))
  2906  010268  6EF8               	movwf	tblptru,c
  2907  01026A                     	endif
  2908  01026A  0008               	tblrd		*
  2909  01026C  50F5               	movf	tablat,w,c
  2910  01026E  ECF8  F088         	call	_mdb_transmit
  2911                           
  2912                           ;cctalk.c: 75: mdb_transmit(command);
  2913  010272  5016               	movf	cctalk_comm@command,w,c
  2914  010274  ECF8  F088         	call	_mdb_transmit
  2915                           
  2916                           ;cctalk.c: 77: while(nobytes != 0)
  2917  010278  D017               	goto	l2098
  2918  01027A                     
  2919                           ;cctalk.c: 78: {
  2920                           ;cctalk.c: 79: chkbyte = mdbdata[nobytes] + chkbyte;
  2921  01027A  5015               	movf	cctalk_comm@nobytes,w,c
  2922  01027C  0D01               	mullw	1
  2923  01027E  0E60               	movlw	low _mdbdata
  2924  010280  24F3               	addwf	prodl,w,c
  2925  010282  6ED9               	movwf	fsr2l,c
  2926  010284  0E00               	movlw	high _mdbdata
  2927  010286  20F4               	addwfc	prodh,w,c
  2928  010288  6EDA               	movwf	fsr2h,c
  2929  01028A  50DF               	movf	indf2,w,c
  2930  01028C  2438               	addwf	_chkbyte,w,c
  2931  01028E  6E38               	movwf	_chkbyte,c
  2932                           
  2933                           ;cctalk.c: 80: mdb_transmit(mdbdata[nobytes]);
  2934  010290  5015               	movf	cctalk_comm@nobytes,w,c
  2935  010292  0D01               	mullw	1
  2936  010294  0E60               	movlw	low _mdbdata
  2937  010296  24F3               	addwf	prodl,w,c
  2938  010298  6ED9               	movwf	fsr2l,c
  2939  01029A  0E00               	movlw	high _mdbdata
  2940  01029C  20F4               	addwfc	prodh,w,c
  2941  01029E  6EDA               	movwf	fsr2h,c
  2942  0102A0  50DF               	movf	indf2,w,c
  2943  0102A2  ECF8  F088         	call	_mdb_transmit
  2944                           
  2945                           ;cctalk.c: 82: nobytes--;
  2946  0102A6  0615               	decf	cctalk_comm@nobytes,f,c
  2947  0102A8                     l2098:
  2948  0102A8  5015               	movf	cctalk_comm@nobytes,w,c
  2949  0102AA  A4D8               	btfss	status,2,c
  2950  0102AC  D7E6               	goto	l2099
  2951                           
  2952                           ;cctalk.c: 83: }
  2953                           ;cctalk.c: 84: chkbyte = 0 - chkbyte;
  2954  0102AE  6C38               	negf	_chkbyte,c
  2955                           
  2956                           ;cctalk.c: 85: mdb_transmit(chkbyte);
  2957  0102B0  5038               	movf	_chkbyte,w,c
  2958  0102B2  ECF8  F088         	call	_mdb_transmit
  2959                           
  2960                           ;cctalk.c: 89: cctflags.timeout = 0;
  2961  0102B6  962F               	bcf	_cctflags,3,c
  2962                           
  2963                           ;cctalk.c: 90: cctflags.hoperr = 0;
  2964  0102B8  922F               	bcf	_cctflags,1,c
  2965                           
  2966                           ;cctalk.c: 93: init_mdbdata(0xFF);
  2967  0102BA  0EFF               	movlw	255
  2968  0102BC  EC34  F088         	call	_init_mdbdata
  2969                           
  2970                           ;cctalk.c: 94: RC1STAbits.SPEN = 0;
  2971  0102C0  9E9D               	bcf	3997,7,c	;volatile
  2972                           
  2973                           ;cctalk.c: 95: RC1STAbits.SPEN = 1;
  2974  0102C2  8E9D               	bsf	3997,7,c	;volatile
  2975                           
  2976                           ;cctalk.c: 96: chkbyte = RC1REG;
  2977  0102C4  CF99 F038          	movff	3993,_chkbyte	;volatile
  2978                           
  2979                           ;cctalk.c: 98: TMR3_Initialize();
  2980  0102C8  ECA3  F087         	call	_TMR3_Initialize	;wreg free
  2981                           
  2982                           ;cctalk.c: 99: while(!cctflags.timeout)
  2983  0102CC  D016               	goto	u1217
  2984  0102CE                     
  2985                           ;cctalk.c: 100: {
  2986                           ;cctalk.c: 102: dest = cctalk_read();
  2987  0102CE  EC78  F088         	call	_cctalk_read	;wreg free
  2988  0102D2  6E19               	movwf	cctalk_comm@dest,c
  2989                           
  2990                           ;cctalk.c: 104: if(cctflags.isdata)
  2991  0102D4  A02F               	btfss	_cctflags,0,c
  2992  0102D6  D00B               	goto	l2103
  2993                           
  2994                           ;cctalk.c: 105: {
  2995                           ;cctalk.c: 106: mdbdata[i++] = dest;
  2996  0102D8  5018               	movf	cctalk_comm@i,w,c
  2997  0102DA  0D01               	mullw	1
  2998  0102DC  0E60               	movlw	low _mdbdata
  2999  0102DE  24F3               	addwf	prodl,w,c
  3000  0102E0  6ED9               	movwf	fsr2l,c
  3001  0102E2  0E00               	movlw	high _mdbdata
  3002  0102E4  20F4               	addwfc	prodh,w,c
  3003  0102E6  6EDA               	movwf	fsr2h,c
  3004  0102E8  C019  FFDF         	movff	cctalk_comm@dest,indf2
  3005  0102EC  2A18               	incf	cctalk_comm@i,f,c
  3006  0102EE                     l2103:
  3007                           
  3008                           ;cctalk.c: 108: }
  3009                           ;cctalk.c: 109: cctflags.timeout = PIR4bits.TMR3IF;
  3010  0102EE  010E               	movlb	14	; () banked
  3011  0102F0  A5CE               	btfss	206,2,b	;volatile
  3012  0102F2  D002               	bra	u1215
  3013  0102F4  862F               	bsf	_cctflags,3,c
  3014  0102F6  D001               	bra	u1217
  3015  0102F8                     u1215:
  3016  0102F8  962F               	bcf	_cctflags,3,c
  3017  0102FA                     u1217:
  3018  0102FA  A62F               	btfss	_cctflags,3,c
  3019  0102FC  D7E8               	goto	l2102
  3020                           
  3021                           ;cctalk.c: 110: }
  3022                           ;cctalk.c: 111: if(mdbdata[0] == mastadd && mdbdata[3] == 0x00)
  3023  0102FE  0E8F               	movlw	low _mastadd
  3024  010300  6EF6               	movwf	tblptrl,c
  3025  010302                     	if	1	;There is more than 1 active tblptr byte
  3026  010302  0EFE               	movlw	high _mastadd
  3027  010304  6EF7               	movwf	tblptrh,c
  3028  010306                     	endif
  3029  010306                     	if	1	;There are 3 active tblptr bytes
  3030  010306  0E00               	movlw	low (_mastadd shr (0+16))
  3031  010308  6EF8               	movwf	tblptru,c
  3032  01030A                     	endif
  3033  01030A  0008               	tblrd		*
  3034  01030C  50F5               	movf	tablat,w,c
  3035  01030E  0100               	movlb	0	; () banked
  3036  010310  6360               	cpfseq	_mdbdata& (0+255),b
  3037  010312  D005               	goto	l2105
  3038                           
  3039                           ; BSR set to: 0
  3040  010314  5163               	movf	(_mdbdata+3)& (0+255),w,b
  3041  010316  A4D8               	btfss	status,2,c
  3042  010318  D002               	goto	l2105
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;cctalk.c: 112: {
  3046                           ;cctalk.c: 113: return i;
  3047  01031A  5018               	movf	cctalk_comm@i,w,c
  3048                           
  3049                           ; BSR set to: 0
  3050  01031C  0012               	return	
  3051  01031E                     l2105:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;cctalk.c: 114: }
  3055                           ;cctalk.c: 115: cctflags.timeout = 1;
  3056  01031E  862F               	bsf	_cctflags,3,c
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;cctalk.c: 116: return 0x00;
  3060  010320  0E00               	movlw	0
  3061  010322  0012               	return	
  3062  010324                     __end_of_cctalk_comm:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           indf2	equ	0xFDF
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function _cctalk_read *****************
  3078 ;; Defined at:
  3079 ;;		line 119 in file "cctalk.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  data            1   18[COMRAM] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      unsigned char 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3096 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3097 ;;Total ram usage:        1 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    3
  3100 ;; This function calls:
  3101 ;;		_EUSART1_Read
  3102 ;;		_mdb_waitr
  3103 ;; This function is called by:
  3104 ;;		_cctalk_comm
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text13
  3109  0110F0                     __ptext13:
  3110                           	opt stack 0
  3111  0110F0                     _cctalk_read:
  3112                           	opt stack 23
  3113                           
  3114                           ;cctalk.c: 121: uint8_t data = 0;
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;incstack = 0
  3118  0110F0  0E00               	movlw	0
  3119  0110F2  6E13               	movwf	cctalk_read@data,c
  3120                           
  3121                           ;cctalk.c: 122: cctflags.isdata = 0;
  3122  0110F4  902F               	bcf	_cctflags,0,c
  3123                           
  3124                           ;cctalk.c: 123: while(PIR3bits.RC1IF)
  3125  0110F6  D006               	goto	l2109
  3126  0110F8                     
  3127                           ;cctalk.c: 124: {
  3128                           ;cctalk.c: 125: data = EUSART1_Read();
  3129  0110F8  ECEF  F088         	call	_EUSART1_Read	;wreg free
  3130  0110FC  6E13               	movwf	cctalk_read@data,c
  3131                           
  3132                           ;cctalk.c: 126: mdb_waitr();
  3133  0110FE  EC2D  F089         	call	_mdb_waitr	;wreg free
  3134                           
  3135                           ;cctalk.c: 127: cctflags.isdata = 1;
  3136  011102  802F               	bsf	_cctflags,0,c
  3137  011104                     l2109:
  3138  011104  010E               	movlb	14	; () banked
  3139  011106  BBCD               	btfsc	205,5,b	;volatile
  3140  011108  D7F7               	goto	l2110
  3141                           
  3142                           ; BSR set to: 14
  3143                           ;cctalk.c: 128: }
  3144                           ;cctalk.c: 129: return data;
  3145                           
  3146                           ; BSR set to: 14
  3147  01110A  5013               	movf	cctalk_read@data,w,c
  3148  01110C  0012               	return	
  3149  01110E                     __end_of_cctalk_read:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           prodh	equ	0xFF4
  3156                           prodl	equ	0xFF3
  3157                           postinc0	equ	0xFEE
  3158                           wreg	equ	0xFE8
  3159                           indf2	equ	0xFDF
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function _DAC1_SetOutput *****************
  3165 ;; Defined at:
  3166 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  inputData       1    wreg     unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  inputData       1   18[COMRAM] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;Total ram usage:        1 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    2
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_vend_init
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text14
  3195  011234                     __ptext14:
  3196                           	opt stack 0
  3197  011234                     _DAC1_SetOutput:
  3198                           	opt stack 27
  3199                           
  3200                           ; BSR set to: 14
  3201                           ;incstack = 0
  3202                           ;DAC1_SetOutput@inputData stored from wreg
  3203  011234  6E13               	movwf	DAC1_SetOutput@inputData,c
  3204                           
  3205                           ;dac1.c: 67: DAC1CON1 = inputData;
  3206  011236  C013  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  3207  01123A  0012               	return		;funcret
  3208  01123C                     __end_of_DAC1_SetOutput:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           indf2	equ	0xFDF
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function _mdb_poll *****************
  3224 ;; Defined at:
  3225 ;;		line 140 in file "mdb.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  i               1   23[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      unsigned char 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3243 ;;Total ram usage:        1 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    5
  3246 ;; This function calls:
  3247 ;;		_TMR3_Initialize
  3248 ;;		_mdb_comm
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text15
  3255  010000                     __ptext15:
  3256                           	opt stack 0
  3257  010000                     _mdb_poll:
  3258                           	opt stack 25
  3259                           
  3260                           ;mdb.c: 144: TMR3_Initialize();
  3261                           
  3262                           ;incstack = 0
  3263  010000  ECA3  F087         	call	_TMR3_Initialize	;wreg free
  3264                           
  3265                           ;mdb.c: 145: uint8_t i = mdb_comm(note_poll, 0x00);
  3266  010004  0E00               	movlw	0
  3267  010006  6E15               	movwf	mdb_comm@mcount,c
  3268  010008  0EA1               	movlw	low _note_poll
  3269  01000A  6EF6               	movwf	tblptrl,c
  3270  01000C                     	if	1	;There is more than 1 active tblptr byte
  3271  01000C  0EFE               	movlw	high _note_poll
  3272  01000E  6EF7               	movwf	tblptrh,c
  3273  010010                     	endif
  3274  010010                     	if	1	;There are 3 active tblptr bytes
  3275  010010  0E00               	movlw	low (_note_poll shr (0+16))
  3276  010012  6EF8               	movwf	tblptru,c
  3277  010014                     	endif
  3278  010014  0008               	tblrd		*
  3279  010016  50F5               	movf	tablat,w,c
  3280  010018  EC92  F081         	call	_mdb_comm
  3281  01001C  6E18               	movwf	mdb_poll@i,c
  3282                           
  3283                           ;mdb.c: 146: notebyte = mdbdata[0];
  3284  01001E  C060  F039         	movff	_mdbdata,_notebyte
  3285                           
  3286                           ;mdb.c: 148: if((mdbdata[0] & 0x80) != 0)
  3287  010022  0100               	movlb	0	; () banked
  3288  010024  AF60               	btfss	_mdbdata& (0+255),7,b
  3289  010026  D050               	goto	l1750
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;mdb.c: 149: {
  3293                           ;mdb.c: 150: notebyte = mdbdata[0] & 0x7F;
  3294  010028  5160               	movf	_mdbdata& (0+255),w,b
  3295  01002A  0B7F               	andlw	127
  3296  01002C  6E39               	movwf	_notebyte,c
  3297                           
  3298                           ;mdb.c: 151: switch(notebyte)
  3299  01002E  D019               	goto	l1740
  3300  010030                     
  3301                           ; BSR set to: 0
  3302  010030  0E0A               	movlw	10
  3303  010032  6E2E               	movwf	_credit,c	;volatile
  3304                           
  3305                           ;mdb.c: 154: return credit;
  3306  010034  502E               	movf	_credit,w,c	;volatile
  3307  010036  0012               	return	
  3308  010038  0E14               	movlw	20
  3309  01003A  6E2E               	movwf	_credit,c	;volatile
  3310                           
  3311                           ;mdb.c: 156: return credit;
  3312  01003C  502E               	movf	_credit,w,c	;volatile
  3313  01003E  0012               	return	
  3314  010040  0E32               	movlw	50
  3315  010042  6E2E               	movwf	_credit,c	;volatile
  3316                           
  3317                           ;mdb.c: 158: return credit;
  3318  010044  502E               	movf	_credit,w,c	;volatile
  3319  010046  0012               	return	
  3320  010048  0E64               	movlw	100
  3321  01004A  6E2E               	movwf	_credit,c	;volatile
  3322                           
  3323                           ;mdb.c: 160: return credit;
  3324  01004C  502E               	movf	_credit,w,c	;volatile
  3325  01004E  0012               	return	
  3326  010050  0EC8               	movlw	200
  3327  010052  6E2E               	movwf	_credit,c	;volatile
  3328                           
  3329                           ;mdb.c: 162: return credit;
  3330  010054  502E               	movf	_credit,w,c	;volatile
  3331  010056  0012               	return	
  3332  010058  0E10               	movlw	16
  3333  01005A  6E2E               	movwf	_credit,c	;volatile
  3334                           
  3335                           ;mdb.c: 164: mdbflags.noteerr = 1;
  3336  01005C  8237               	bsf	_mdbflags,1,c
  3337                           
  3338                           ;mdb.c: 165: return credit;
  3339  01005E  502E               	movf	_credit,w,c	;volatile
  3340                           
  3341                           ;mdb.c: 166: }
  3342  010060  0012               	return	
  3343  010062                     l1740:
  3344  010062  5039               	movf	_notebyte,w,c
  3345                           
  3346                           ; Switch size 1, requested type "space"
  3347                           ; Number of cases is 5, Range of values is 0 to 4
  3348                           ; switch strategies available:
  3349                           ; Name         Instructions Cycles
  3350                           ; simple_byte           16     9 (average)
  3351                           ;	Chosen strategy is simple_byte
  3352  010064  0A00               	xorlw	0	; case 0
  3353  010066  B4D8               	btfsc	status,2,c
  3354  010068  D7E3               	goto	l1741
  3355  01006A  0A01               	xorlw	1	; case 1
  3356  01006C  B4D8               	btfsc	status,2,c
  3357  01006E  D7E4               	goto	l1743
  3358  010070  0A03               	xorlw	3	; case 2
  3359  010072  B4D8               	btfsc	status,2,c
  3360  010074  D7E5               	goto	l1744
  3361  010076  0A01               	xorlw	1	; case 3
  3362  010078  B4D8               	btfsc	status,2,c
  3363  01007A  D7E6               	goto	l1745
  3364  01007C  0A07               	xorlw	7	; case 4
  3365  01007E  B4D8               	btfsc	status,2,c
  3366  010080  D7E7               	goto	l1746
  3367  010082  D7EA               	goto	l1747
  3368  010084  0E00               	movlw	0
  3369  010086  6E2E               	movwf	_credit,c	;volatile
  3370                           
  3371                           ;mdb.c: 174: return credit;
  3372  010088  502E               	movf	_credit,w,c	;volatile
  3373  01008A  0012               	return	
  3374  01008C  0E01               	movlw	1
  3375  01008E  D01A               	goto	L12
  3376  010090  0E02               	movlw	2
  3377  010092  D018               	goto	L12
  3378  010094  0E00               	movlw	0
  3379  010096  6E2E               	movwf	_credit,c	;volatile
  3380                           
  3381                           ;mdb.c: 183: mdbflags.noteerr = 0;
  3382  010098  9237               	bcf	_mdbflags,1,c
  3383                           
  3384                           ;mdb.c: 184: return credit;
  3385  01009A  502E               	movf	_credit,w,c	;volatile
  3386  01009C  0012               	return	
  3387  01009E  0E04               	movlw	4
  3388  0100A0  D011               	goto	L12
  3389  0100A2  0E05               	movlw	5
  3390  0100A4  D00F               	goto	L12
  3391  0100A6  0E06               	movlw	6
  3392  0100A8  D00D               	goto	L12
  3393  0100AA  0E07               	movlw	7
  3394  0100AC  D00B               	goto	L12
  3395  0100AE  0E08               	movlw	8
  3396  0100B0  D009               	goto	L12
  3397  0100B2  0E09               	movlw	9
  3398  0100B4  D007               	goto	L12
  3399  0100B6  0E0A               	movlw	10
  3400  0100B8  D005               	goto	L12
  3401  0100BA  0E0B               	movlw	11
  3402  0100BC  D003               	goto	L12
  3403  0100BE  0E0C               	movlw	12
  3404  0100C0  D001               	goto	L12
  3405  0100C2  0E00               	movlw	0
  3406  0100C4                     L12:
  3407  0100C4  6E2E               	movwf	_credit,c	;volatile
  3408                           
  3409                           ;mdb.c: 213: }
  3410  0100C6  D02A               	goto	l1753
  3411  0100C8                     l1750:
  3412  0100C8  0100               	movlb	0	; () banked
  3413  0100CA  5160               	movf	_mdbdata& (0+255),w,b
  3414                           
  3415                           ; Switch size 1, requested type "space"
  3416                           ; Number of cases is 13, Range of values is 0 to 12
  3417                           ; switch strategies available:
  3418                           ; Name         Instructions Cycles
  3419                           ; simple_byte           40    21 (average)
  3420                           ;	Chosen strategy is simple_byte
  3421  0100CC  0A00               	xorlw	0	; case 0
  3422  0100CE  B4D8               	btfsc	status,2,c
  3423  0100D0  D7D9               	goto	l1751
  3424  0100D2  0A01               	xorlw	1	; case 1
  3425  0100D4  B4D8               	btfsc	status,2,c
  3426  0100D6  D7DA               	goto	l1752
  3427  0100D8  0A03               	xorlw	3	; case 2
  3428  0100DA  B4D8               	btfsc	status,2,c
  3429  0100DC  D7D9               	goto	l1754
  3430  0100DE  0A01               	xorlw	1	; case 3
  3431  0100E0  B4D8               	btfsc	status,2,c
  3432  0100E2  D7D8               	goto	l1755
  3433  0100E4  0A07               	xorlw	7	; case 4
  3434  0100E6  B4D8               	btfsc	status,2,c
  3435  0100E8  D7DA               	goto	l1756
  3436  0100EA  0A01               	xorlw	1	; case 5
  3437  0100EC  B4D8               	btfsc	status,2,c
  3438  0100EE  D7D9               	goto	l1757
  3439  0100F0  0A03               	xorlw	3	; case 6
  3440  0100F2  B4D8               	btfsc	status,2,c
  3441  0100F4  D7D8               	goto	l1758
  3442  0100F6  0A01               	xorlw	1	; case 7
  3443  0100F8  B4D8               	btfsc	status,2,c
  3444  0100FA  D7D7               	goto	l1759
  3445  0100FC  0A0F               	xorlw	15	; case 8
  3446  0100FE  B4D8               	btfsc	status,2,c
  3447  010100  D7D6               	goto	l1760
  3448  010102  0A01               	xorlw	1	; case 9
  3449  010104  B4D8               	btfsc	status,2,c
  3450  010106  D7D5               	goto	l1761
  3451  010108  0A03               	xorlw	3	; case 10
  3452  01010A  B4D8               	btfsc	status,2,c
  3453  01010C  D7D4               	goto	l1762
  3454  01010E  0A01               	xorlw	1	; case 11
  3455  010110  B4D8               	btfsc	status,2,c
  3456  010112  D7D3               	goto	l1763
  3457  010114  0A07               	xorlw	7	; case 12
  3458  010116  B4D8               	btfsc	status,2,c
  3459  010118  D7D2               	goto	l1764
  3460  01011A  D7D3               	goto	l1765
  3461  01011C                     l1753:
  3462                           
  3463                           ;mdb.c: 214: mdbflags.noteerr = 1;
  3464  01011C  8237               	bsf	_mdbflags,1,c
  3465                           
  3466                           ;mdb.c: 215: return credit;
  3467  01011E  502E               	movf	_credit,w,c	;volatile
  3468  010120  0012               	return	
  3469  010122                     __end_of_mdb_poll:
  3470                           	opt stack 0
  3471                           tblptru	equ	0xFF8
  3472                           tblptrh	equ	0xFF7
  3473                           tblptrl	equ	0xFF6
  3474                           tablat	equ	0xFF5
  3475                           prodh	equ	0xFF4
  3476                           prodl	equ	0xFF3
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           indf2	equ	0xFDF
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _mdb_comm *****************
  3485 ;; Defined at:
  3486 ;;		line 220 in file "mdb.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  slvadd          1    wreg     unsigned char 
  3489 ;;  mcount          1   20[COMRAM] unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  slvadd          1   21[COMRAM] unsigned char 
  3492 ;;  i               1   22[COMRAM] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      unsigned char 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3502 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3506 ;;Total ram usage:        3 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    4
  3509 ;; This function calls:
  3510 ;;		_EUSART1_Read
  3511 ;;		_TMR1_Initialize
  3512 ;;		_init_mdbdata
  3513 ;;		_mdb_on
  3514 ;;		_mdb_transmit
  3515 ;;		_mdb_waitr
  3516 ;; This function is called by:
  3517 ;;		_mdb_init
  3518 ;;		_mdb_reset
  3519 ;;		_mdb_noten
  3520 ;;		_mdb_security
  3521 ;;		_mdb_poll
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text16
  3526  010324                     __ptext16:
  3527                           	opt stack 0
  3528  010324                     _mdb_comm:
  3529                           	opt stack 23
  3530                           
  3531                           ;incstack = 0
  3532                           ;mdb_comm@slvadd stored from wreg
  3533  010324  6E16               	movwf	mdb_comm@slvadd,c
  3534                           
  3535                           ;mdb.c: 223: uint8_t i = 0;
  3536  010326  0E00               	movlw	0
  3537  010328  6E17               	movwf	mdb_comm@i,c
  3538                           
  3539                           ;mdb.c: 225: TX1STAbits.TX9D = 1;
  3540  01032A  809E               	bsf	3998,0,c	;volatile
  3541                           
  3542                           ;mdb.c: 226: mdb_on();
  3543  01032C  EC33  F089         	call	_mdb_on	;wreg free
  3544                           
  3545                           ;mdb.c: 230: mdb_transmit(slvadd);
  3546  010330  5016               	movf	mdb_comm@slvadd,w,c
  3547  010332  ECF8  F088         	call	_mdb_transmit
  3548                           
  3549                           ;mdb.c: 231: TX1STAbits.TX9D = 0;
  3550  010336  909E               	bcf	3998,0,c	;volatile
  3551                           
  3552                           ;mdb.c: 235: chkbyte = slvadd;
  3553  010338  C016  F038         	movff	mdb_comm@slvadd,_chkbyte
  3554                           
  3555                           ;mdb.c: 236: if(mcount != 0)
  3556  01033C  5015               	movf	mdb_comm@mcount,w,c
  3557  01033E  B4D8               	btfsc	status,2,c
  3558  010340  D01E               	goto	u1100
  3559                           
  3560                           ;mdb.c: 237: {
  3561                           ;mdb.c: 238: i = mcount + 1;
  3562  010342  2815               	incf	mdb_comm@mcount,w,c
  3563  010344  6E17               	movwf	mdb_comm@i,c
  3564                           
  3565                           ;mdb.c: 239: while(i != 0)
  3566  010346  D018               	goto	l1769
  3567  010348                     
  3568                           ;mdb.c: 240: {
  3569                           ;mdb.c: 241: mdb_transmit(mdbdata[mcount]);
  3570  010348  5015               	movf	mdb_comm@mcount,w,c
  3571  01034A  0D01               	mullw	1
  3572  01034C  0E60               	movlw	low _mdbdata
  3573  01034E  24F3               	addwf	prodl,w,c
  3574  010350  6ED9               	movwf	fsr2l,c
  3575  010352  0E00               	movlw	high _mdbdata
  3576  010354  20F4               	addwfc	prodh,w,c
  3577  010356  6EDA               	movwf	fsr2h,c
  3578  010358  50DF               	movf	indf2,w,c
  3579  01035A  ECF8  F088         	call	_mdb_transmit
  3580                           
  3581                           ;mdb.c: 244: chkbyte = chkbyte + mdbdata[mcount];
  3582  01035E  5015               	movf	mdb_comm@mcount,w,c
  3583  010360  0D01               	mullw	1
  3584  010362  0E60               	movlw	low _mdbdata
  3585  010364  24F3               	addwf	prodl,w,c
  3586  010366  6ED9               	movwf	fsr2l,c
  3587  010368  0E00               	movlw	high _mdbdata
  3588  01036A  20F4               	addwfc	prodh,w,c
  3589  01036C  6EDA               	movwf	fsr2h,c
  3590  01036E  50DF               	movf	indf2,w,c
  3591  010370  2438               	addwf	_chkbyte,w,c
  3592  010372  6E38               	movwf	_chkbyte,c
  3593                           
  3594                           ;mdb.c: 245: i--;
  3595  010374  0617               	decf	mdb_comm@i,f,c
  3596                           
  3597                           ;mdb.c: 246: mcount--;
  3598  010376  0615               	decf	mdb_comm@mcount,f,c
  3599  010378                     l1769:
  3600  010378  5017               	movf	mdb_comm@i,w,c
  3601  01037A  A4D8               	btfss	status,2,c
  3602  01037C  D7E5               	goto	l1770
  3603  01037E                     u1100:
  3604                           
  3605                           ;mdb.c: 247: }
  3606                           ;mdb.c: 248: }
  3607                           ;mdb.c: 249: mdb_transmit(chkbyte);
  3608  01037E  5038               	movf	_chkbyte,w,c
  3609  010380  ECF8  F088         	call	_mdb_transmit
  3610                           
  3611                           ;mdb.c: 256: init_mdbdata(0xFF);
  3612  010384  0EFF               	movlw	255
  3613  010386  EC34  F088         	call	_init_mdbdata
  3614                           
  3615                           ;mdb.c: 257: TMR1_Initialize();
  3616  01038A  ECBD  F087         	call	_TMR1_Initialize	;wreg free
  3617                           
  3618                           ;mdb.c: 258: dbcount = 0;
  3619  01038E  0E00               	movlw	0
  3620  010390  6E2A               	movwf	_dbcount+1,c
  3621  010392  0E00               	movlw	0
  3622  010394  6E29               	movwf	_dbcount,c
  3623                           
  3624                           ;mdb.c: 259: mdbflags.isdata = 0;
  3625  010396  9037               	bcf	_mdbflags,0,c
  3626                           
  3627                           ;mdb.c: 260: i = 0;
  3628  010398  0E00               	movlw	0
  3629  01039A  6E17               	movwf	mdb_comm@i,c
  3630                           
  3631                           ;mdb.c: 262: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  3632  01039C  D01E               	goto	u1130
  3633  01039E                     
  3634                           ;mdb.c: 263: {
  3635                           ;mdb.c: 265: dbcount++;
  3636  01039E  4A29               	infsnz	_dbcount,f,c
  3637  0103A0  2A2A               	incf	_dbcount+1,f,c
  3638                           
  3639                           ;mdb.c: 266: mdbflags.isdata = 0;
  3640  0103A2  9037               	bcf	_mdbflags,0,c
  3641                           
  3642                           ;mdb.c: 269: while(PIR3bits.RC1IF && !mdbflags.isdata)
  3643  0103A4  D015               	goto	l1774
  3644  0103A6                     
  3645                           ;mdb.c: 270: {
  3646                           ;mdb.c: 273: mdbdata[i] = EUSART1_Read();
  3647  0103A6  5017               	movf	mdb_comm@i,w,c
  3648  0103A8  0D01               	mullw	1
  3649  0103AA  0E60               	movlw	low _mdbdata
  3650  0103AC  24F3               	addwf	prodl,w,c
  3651  0103AE  6ED9               	movwf	fsr2l,c
  3652  0103B0  0E00               	movlw	high _mdbdata
  3653  0103B2  20F4               	addwfc	prodh,w,c
  3654  0103B4  6EDA               	movwf	fsr2h,c
  3655  0103B6  ECEF  F088         	call	_EUSART1_Read	;wreg free
  3656  0103BA  6EDF               	movwf	indf2,c
  3657                           
  3658                           ;mdb.c: 274: mdb_waitr();
  3659  0103BC  EC2D  F089         	call	_mdb_waitr	;wreg free
  3660                           
  3661                           ;mdb.c: 276: mdbflags.isdata = RC1STAbits.RX9D;
  3662  0103C0  A09D               	btfss	3997,0,c	;volatile
  3663  0103C2  D002               	bra	u1115
  3664  0103C4  8037               	bsf	_mdbflags,0,c
  3665  0103C6  D001               	bra	u1117
  3666  0103C8                     u1115:
  3667  0103C8  9037               	bcf	_mdbflags,0,c
  3668  0103CA                     u1117:
  3669                           
  3670                           ;mdb.c: 277: TMR1_Initialize();
  3671  0103CA  ECBD  F087         	call	_TMR1_Initialize	;wreg free
  3672                           
  3673                           ;mdb.c: 278: i++;
  3674  0103CE  2A17               	incf	mdb_comm@i,f,c
  3675  0103D0                     l1774:
  3676  0103D0  010E               	movlb	14	; () banked
  3677  0103D2  ABCD               	btfss	205,5,b	;volatile
  3678  0103D4  D002               	goto	u1130
  3679                           
  3680                           ; BSR set to: 14
  3681  0103D6  A037               	btfss	_mdbflags,0,c
  3682  0103D8  D7E6               	goto	l1775
  3683  0103DA                     u1130:
  3684                           
  3685                           ; BSR set to: 14
  3686                           
  3687                           ; BSR set to: 14
  3688  0103DA  010E               	movlb	14	; () banked
  3689  0103DC  B1CE               	btfsc	206,0,b	;volatile
  3690  0103DE  D002               	goto	u1150
  3691                           
  3692                           ; BSR set to: 14
  3693  0103E0  A037               	btfss	_mdbflags,0,c
  3694  0103E2  D7DD               	goto	l1773
  3695  0103E4                     u1150:
  3696                           
  3697                           ; BSR set to: 14
  3698                           ;mdb.c: 280: }
  3699                           ;mdb.c: 282: }
  3700                           ;mdb.c: 284: i--;
  3701                           
  3702                           ; BSR set to: 14
  3703                           
  3704                           ; BSR set to: 14
  3705  0103E4  0617               	decf	mdb_comm@i,f,c
  3706                           
  3707                           ; BSR set to: 14
  3708                           ;mdb.c: 286: mdbflags.timeout = PIR4bits.TMR1IF;
  3709  0103E6  A1CE               	btfss	206,0,b	;volatile
  3710  0103E8  D002               	bra	u1165
  3711  0103EA  8637               	bsf	_mdbflags,3,c
  3712  0103EC  D001               	bra	u1167
  3713  0103EE                     u1165:
  3714  0103EE  9637               	bcf	_mdbflags,3,c
  3715  0103F0                     u1167:
  3716                           
  3717                           ;mdb.c: 288: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  3718  0103F0  A037               	btfss	_mdbflags,0,c
  3719  0103F2  D011               	goto	l1782
  3720  0103F4  5017               	movf	mdb_comm@i,w,c
  3721  0103F6  0D01               	mullw	1
  3722  0103F8  0E60               	movlw	low _mdbdata
  3723  0103FA  24F3               	addwf	prodl,w,c
  3724  0103FC  6ED9               	movwf	fsr2l,c
  3725  0103FE  0E00               	movlw	high _mdbdata
  3726  010400  20F4               	addwfc	prodh,w,c
  3727  010402  6EDA               	movwf	fsr2h,c
  3728  010404  50DF               	movf	indf2,w,c
  3729  010406  B4D8               	btfsc	status,2,c
  3730  010408  D006               	goto	l1782
  3731                           
  3732                           ;mdb.c: 289: {
  3733                           ;mdb.c: 290: TX1STAbits.TX9D = 1;
  3734  01040A  809E               	bsf	3998,0,c	;volatile
  3735                           
  3736                           ;mdb.c: 291: mdb_on();
  3737  01040C  EC33  F089         	call	_mdb_on	;wreg free
  3738                           
  3739                           ;mdb.c: 292: mdb_transmit(0x00);
  3740  010410  0E00               	movlw	0
  3741  010412  ECF8  F088         	call	_mdb_transmit
  3742  010416                     l1782:
  3743                           
  3744                           ;mdb.c: 294: }
  3745                           ;mdb.c: 296: mdb_on();
  3746  010416  EC33  F089         	call	_mdb_on	;wreg free
  3747                           
  3748                           ;mdb.c: 298: return(i);
  3749  01041A  5017               	movf	mdb_comm@i,w,c
  3750  01041C  0012               	return	
  3751  01041E                     __end_of_mdb_comm:
  3752                           	opt stack 0
  3753                           tblptru	equ	0xFF8
  3754                           tblptrh	equ	0xFF7
  3755                           tblptrl	equ	0xFF6
  3756                           tablat	equ	0xFF5
  3757                           prodh	equ	0xFF4
  3758                           prodl	equ	0xFF3
  3759                           postinc0	equ	0xFEE
  3760                           wreg	equ	0xFE8
  3761                           indf2	equ	0xFDF
  3762                           fsr2h	equ	0xFDA
  3763                           fsr2l	equ	0xFD9
  3764                           status	equ	0xFD8
  3765                           
  3766 ;; *************** function _mdb_waitr *****************
  3767 ;; Defined at:
  3768 ;;		line 322 in file "mdb.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		None
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;Total ram usage:        0 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    2
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_mdb_comm
  3793 ;;		_cctalk_read
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text17
  3798  01125A                     __ptext17:
  3799                           	opt stack 0
  3800  01125A                     _mdb_waitr:
  3801                           	opt stack 24
  3802                           
  3803                           ;mdb.c: 325: {
  3804                           
  3805                           ;mdb.c: 324: while(BAUD1CONbits.RCIDL == 0)
  3806                           
  3807                           ;incstack = 0
  3808  01125A  BC9F               	btfsc	3999,6,c	;volatile
  3809  01125C  0012               	return	
  3810  01125E  D7FD               	goto	_mdb_waitr
  3811  011260                     __end_of_mdb_waitr:
  3812                           	opt stack 0
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           prodh	equ	0xFF4
  3818                           prodl	equ	0xFF3
  3819                           postinc0	equ	0xFEE
  3820                           wreg	equ	0xFE8
  3821                           indf2	equ	0xFDF
  3822                           fsr2h	equ	0xFDA
  3823                           fsr2l	equ	0xFD9
  3824                           status	equ	0xFD8
  3825                           
  3826 ;; *************** function _mdb_transmit *****************
  3827 ;; Defined at:
  3828 ;;		line 365 in file "mdb.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  txbyte          1    wreg     unsigned char 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  txbyte          1   19[COMRAM] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;Total ram usage:        1 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    3
  3849 ;; This function calls:
  3850 ;;		_EUSART1_Write
  3851 ;;		_mdb_waitx
  3852 ;; This function is called by:
  3853 ;;		_mdb_comm
  3854 ;;		_cctalk_comm
  3855 ;;		_mdb_test
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text18
  3860  0111F0                     __ptext18:
  3861                           	opt stack 0
  3862  0111F0                     _mdb_transmit:
  3863                           	opt stack 23
  3864                           
  3865                           ;incstack = 0
  3866                           ;mdb_transmit@txbyte stored from wreg
  3867  0111F0  6E14               	movwf	mdb_transmit@txbyte,c
  3868                           
  3869                           ;mdb.c: 367: EUSART1_Write(txbyte);
  3870  0111F2  5014               	movf	mdb_transmit@txbyte,w,c
  3871  0111F4  ECFF  F088         	call	_EUSART1_Write
  3872                           
  3873                           ;mdb.c: 368: mdb_waitx();
  3874  0111F8  EC30  F089         	call	_mdb_waitx	;wreg free
  3875  0111FC  0012               	return		;funcret
  3876  0111FE                     __end_of_mdb_transmit:
  3877                           	opt stack 0
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           prodh	equ	0xFF4
  3883                           prodl	equ	0xFF3
  3884                           postinc0	equ	0xFEE
  3885                           wreg	equ	0xFE8
  3886                           indf2	equ	0xFDF
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function _mdb_waitx *****************
  3892 ;; Defined at:
  3893 ;;		line 314 in file "mdb.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		None
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    2
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_mdb_transmit
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text19
  3922  011260                     __ptext19:
  3923                           	opt stack 0
  3924  011260                     _mdb_waitx:
  3925                           	opt stack 23
  3926                           
  3927                           ;mdb.c: 317: {
  3928                           
  3929                           ;mdb.c: 316: while(TX1STAbits.TRMT == 0)
  3930                           
  3931                           ;incstack = 0
  3932  011260  B29E               	btfsc	3998,1,c	;volatile
  3933  011262  0012               	return	
  3934  011264  D7FD               	goto	_mdb_waitx
  3935  011266                     __end_of_mdb_waitx:
  3936                           	opt stack 0
  3937                           tblptru	equ	0xFF8
  3938                           tblptrh	equ	0xFF7
  3939                           tblptrl	equ	0xFF6
  3940                           tablat	equ	0xFF5
  3941                           prodh	equ	0xFF4
  3942                           prodl	equ	0xFF3
  3943                           postinc0	equ	0xFEE
  3944                           wreg	equ	0xFE8
  3945                           indf2	equ	0xFDF
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _EUSART1_Write *****************
  3951 ;; Defined at:
  3952 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  txData          1    wreg     unsigned char 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  txData          1   18[COMRAM] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;Total ram usage:        1 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    2
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_mdb_transmit
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text20
  3981  0111FE                     __ptext20:
  3982                           	opt stack 0
  3983  0111FE                     _EUSART1_Write:
  3984                           	opt stack 23
  3985                           
  3986                           ;incstack = 0
  3987                           ;EUSART1_Write@txData stored from wreg
  3988  0111FE  6E13               	movwf	EUSART1_Write@txData,c
  3989  011200                     
  3990                           ;eusart1.c: 96: {
  3991                           
  3992                           ;eusart1.c: 95: while(0 == PIR3bits.TX1IF)
  3993  011200  010E               	movlb	14	; () banked
  3994  011202  A9CD               	btfss	205,4,b	;volatile
  3995  011204  D7FD               	goto	l4038
  3996                           
  3997                           ; BSR set to: 14
  3998                           ;eusart1.c: 97: }
  3999                           ;eusart1.c: 99: TX1REG = txData;
  4000                           
  4001                           ; BSR set to: 14
  4002  011206  C013  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  4003                           
  4004                           ; BSR set to: 14
  4005  01120A  0012               	return		;funcret
  4006  01120C                     __end_of_EUSART1_Write:
  4007                           	opt stack 0
  4008                           tblptru	equ	0xFF8
  4009                           tblptrh	equ	0xFF7
  4010                           tblptrl	equ	0xFF6
  4011                           tablat	equ	0xFF5
  4012                           prodh	equ	0xFF4
  4013                           prodl	equ	0xFF3
  4014                           postinc0	equ	0xFEE
  4015                           wreg	equ	0xFE8
  4016                           indf2	equ	0xFDF
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _mdb_on *****************
  4022 ;; Defined at:
  4023 ;;		line 301 in file "mdb.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		None
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    2
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_mdb_comm
  4048 ;;		_cctalk_init
  4049 ;;		_mdb_test
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text21
  4054  011266                     __ptext21:
  4055                           	opt stack 0
  4056  011266                     _mdb_on:
  4057                           	opt stack 24
  4058                           
  4059                           ;mdb.c: 307: LATCbits.LATC0 = 1;
  4060                           
  4061                           ; BSR set to: 14
  4062                           ;incstack = 0
  4063  011266  8085               	bsf	3973,0,c	;volatile
  4064                           
  4065                           ;mdb.c: 308: LATCbits.LATC1 = 0;
  4066  011268  9285               	bcf	3973,1,c	;volatile
  4067  01126A  0012               	return		;funcret
  4068  01126C                     __end_of_mdb_on:
  4069                           	opt stack 0
  4070                           tblptru	equ	0xFF8
  4071                           tblptrh	equ	0xFF7
  4072                           tblptrl	equ	0xFF6
  4073                           tablat	equ	0xFF5
  4074                           prodh	equ	0xFF4
  4075                           prodl	equ	0xFF3
  4076                           postinc0	equ	0xFEE
  4077                           wreg	equ	0xFE8
  4078                           indf2	equ	0xFDF
  4079                           fsr2h	equ	0xFDA
  4080                           fsr2l	equ	0xFD9
  4081                           status	equ	0xFD8
  4082                           
  4083 ;; *************** function _init_mdbdata *****************
  4084 ;; Defined at:
  4085 ;;		line 13 in file "mdb.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  initdata        1    wreg     unsigned char 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  initdata        1   18[COMRAM] unsigned char 
  4090 ;;  i               1   19[COMRAM] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4104 ;;Total ram usage:        2 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    2
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_mdb_noten
  4111 ;;		_mdb_security
  4112 ;;		_mdb_comm
  4113 ;;		_cctalk_pinenter
  4114 ;;		_cctalk_comm
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text22
  4119  011068                     __ptext22:
  4120                           	opt stack 0
  4121  011068                     _init_mdbdata:
  4122                           	opt stack 24
  4123                           
  4124                           ;incstack = 0
  4125                           ;init_mdbdata@initdata stored from wreg
  4126  011068  6E13               	movwf	init_mdbdata@initdata,c
  4127                           
  4128                           ;mdb.c: 15: for(uint8_t i = 0;i < 33; i++)
  4129  01106A  0E00               	movlw	0
  4130  01106C  6E14               	movwf	init_mdbdata@i,c
  4131  01106E                     l4092:
  4132  01106E  0E20               	movlw	32
  4133  011070  6414               	cpfsgt	init_mdbdata@i,c
  4134  011072  D001               	goto	l1685
  4135  011074  0012               	return	
  4136  011076                     l1685:
  4137                           
  4138                           ;mdb.c: 16: {
  4139                           ;mdb.c: 17: mdbdata[i] = initdata;
  4140  011076  5014               	movf	init_mdbdata@i,w,c
  4141  011078  0D01               	mullw	1
  4142  01107A  0E60               	movlw	low _mdbdata
  4143  01107C  24F3               	addwf	prodl,w,c
  4144  01107E  6ED9               	movwf	fsr2l,c
  4145  011080  0E00               	movlw	high _mdbdata
  4146  011082  20F4               	addwfc	prodh,w,c
  4147  011084  6EDA               	movwf	fsr2h,c
  4148  011086  C013  FFDF         	movff	init_mdbdata@initdata,indf2
  4149  01108A  2A14               	incf	init_mdbdata@i,f,c
  4150  01108C  D7F0               	goto	l4092
  4151  01108E                     __end_of_init_mdbdata:
  4152                           	opt stack 0
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           prodh	equ	0xFF4
  4158                           prodl	equ	0xFF3
  4159                           postinc0	equ	0xFEE
  4160                           wreg	equ	0xFE8
  4161                           indf2	equ	0xFDF
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8
  4165                           
  4166 ;; *************** function _EUSART1_Read *****************
  4167 ;; Defined at:
  4168 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      unsigned char 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    2
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_mdb_comm
  4193 ;;		_cctalk_read
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text23
  4198  0111DE                     __ptext23:
  4199                           	opt stack 0
  4200  0111DE                     _EUSART1_Read:
  4201                           	opt stack 24
  4202                           
  4203                           ;eusart1.c: 78: {
  4204                           
  4205                           ;eusart1.c: 77: while(!PIR3bits.RC1IF)
  4206                           
  4207                           ;incstack = 0
  4208  0111DE  010E               	movlb	14	; () banked
  4209  0111E0  ABCD               	btfss	205,5,b	;volatile
  4210  0111E2  D7FD               	goto	_EUSART1_Read
  4211                           
  4212                           ; BSR set to: 14
  4213                           ;eusart1.c: 79: }
  4214                           ;eusart1.c: 82: if(1 == RC1STAbits.OERR)
  4215  0111E4  A29D               	btfss	3997,1,c	;volatile
  4216  0111E6  D002               	goto	l101
  4217                           
  4218                           ; BSR set to: 14
  4219                           ;eusart1.c: 83: {
  4220                           ;eusart1.c: 86: RC1STAbits.CREN = 0;
  4221  0111E8  989D               	bcf	3997,4,c	;volatile
  4222                           
  4223                           ;eusart1.c: 87: RC1STAbits.CREN = 1;
  4224  0111EA  889D               	bsf	3997,4,c	;volatile
  4225  0111EC                     l101:
  4226                           
  4227                           ; BSR set to: 14
  4228                           ;eusart1.c: 88: }
  4229                           ;eusart1.c: 90: return RC1REG;
  4230                           
  4231                           ; BSR set to: 14
  4232  0111EC  5099               	movf	3993,w,c	;volatile
  4233  0111EE  0012               	return	
  4234  0111F0                     __end_of_EUSART1_Read:
  4235                           	opt stack 0
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           prodh	equ	0xFF4
  4241                           prodl	equ	0xFF3
  4242                           postinc0	equ	0xFEE
  4243                           wreg	equ	0xFE8
  4244                           indf2	equ	0xFDF
  4245                           fsr2h	equ	0xFDA
  4246                           fsr2l	equ	0xFD9
  4247                           status	equ	0xFD8
  4248                           
  4249 ;; *************** function _lcd_init *****************
  4250 ;; Defined at:
  4251 ;;		line 10 in file "lcd.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4269 ;;Total ram usage:        2 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    8
  4272 ;; This function calls:
  4273 ;;		_lcd_clockE
  4274 ;;		_lcd_test
  4275 ;;		_lcd_write
  4276 ;; This function is called by:
  4277 ;;		_main
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text24
  4282  0107E2                     __ptext24:
  4283                           	opt stack 0
  4284  0107E2                     _lcd_init:
  4285                           	opt stack 22
  4286                           
  4287                           ;lcd.c: 12: LATE = 0x00;
  4288                           
  4289                           ; BSR set to: 14
  4290                           ;incstack = 0
  4291  0107E2  0E00               	movlw	0
  4292  0107E4  6E87               	movwf	3975,c	;volatile
  4293                           
  4294                           ;lcd.c: 14: LATD = 0x03;
  4295  0107E6  0E03               	movlw	3
  4296  0107E8  6E86               	movwf	3974,c	;volatile
  4297                           
  4298                           ;lcd.c: 15: for(count = 3; count > 0; count-- )
  4299  0107EA  0E03               	movlw	3
  4300  0107EC  6E49               	movwf	_count,c
  4301  0107EE                     l5142:
  4302  0107EE  5049               	movf	_count,w,c
  4303  0107F0  0A80               	xorlw	128
  4304  0107F2  0F7F               	addlw	-129
  4305  0107F4  A0D8               	btfss	status,0,c
  4306  0107F6  D00B               	goto	u1890
  4307                           
  4308                           ;lcd.c: 16: {
  4309                           ;lcd.c: 17: lcd_clockE();
  4310  0107F8  EC06  F089         	call	_lcd_clockE	;wreg free
  4311                           
  4312                           ;lcd.c: 18: _delay((unsigned long)((5)*(12000000/4000.0)));
  4313  0107FC  0E14               	movlw	20
  4314  0107FE  6E1B               	movwf	??_lcd_init& (0+255),c
  4315  010800  0E7A               	movlw	122
  4316  010802                     u2037:
  4317  010802  2EE8               	decfsz	wreg,f,c
  4318  010804  D7FE               	bra	u2037
  4319  010806  2E1B               	decfsz	??_lcd_init& (0+255),f,c
  4320  010808  D7FC               	bra	u2037
  4321  01080A  0649               	decf	_count,f,c
  4322  01080C  D7F0               	goto	l5142
  4323  01080E                     u1890:
  4324                           
  4325                           ;lcd.c: 20: }
  4326                           ;lcd.c: 21: _delay((unsigned long)((50)*(12000000/4000000.0)));
  4327  01080E  0E32               	movlw	50
  4328  010810                     u2047:
  4329  010810  2EE8               	decfsz	wreg,f,c
  4330  010812  D7FE               	bra	u2047
  4331                           
  4332                           ;lcd.c: 22: LATD = 0x02;
  4333  010814  0E02               	movlw	2
  4334  010816  6E86               	movwf	3974,c	;volatile
  4335                           
  4336                           ;lcd.c: 23: lcd_clockE();
  4337  010818  EC06  F089         	call	_lcd_clockE	;wreg free
  4338                           
  4339                           ;lcd.c: 26: lcd_write(dispfunc3);
  4340  01081C  0EB4               	movlw	low _dispfunc3
  4341  01081E  6EF6               	movwf	tblptrl,c
  4342  010820                     	if	1	;There is more than 1 active tblptr byte
  4343  010820  0EFE               	movlw	high _dispfunc3
  4344  010822  6EF7               	movwf	tblptrh,c
  4345  010824                     	endif
  4346  010824                     	if	1	;There are 3 active tblptr bytes
  4347  010824  0E00               	movlw	low (_dispfunc3 shr (0+16))
  4348  010826  6EF8               	movwf	tblptru,c
  4349  010828                     	endif
  4350  010828  0008               	tblrd		*
  4351  01082A  50F5               	movf	tablat,w,c
  4352  01082C  ECD7  F087         	call	_lcd_write
  4353                           
  4354                           ;lcd.c: 28: lcd_write(dispon);
  4355  010830  0EB3               	movlw	low _dispon
  4356  010832  6EF6               	movwf	tblptrl,c
  4357  010834                     	if	1	;There is more than 1 active tblptr byte
  4358  010834  0EFE               	movlw	high _dispon
  4359  010836  6EF7               	movwf	tblptrh,c
  4360  010838                     	endif
  4361  010838                     	if	1	;There are 3 active tblptr bytes
  4362  010838  0E00               	movlw	low (_dispon shr (0+16))
  4363  01083A  6EF8               	movwf	tblptru,c
  4364  01083C                     	endif
  4365  01083C  0008               	tblrd		*
  4366  01083E  50F5               	movf	tablat,w,c
  4367  010840  ECD7  F087         	call	_lcd_write
  4368                           
  4369                           ;lcd.c: 30: lcd_write(dispnormal);
  4370  010844  0EAF               	movlw	low _dispnormal
  4371  010846  6EF6               	movwf	tblptrl,c
  4372  010848                     	if	1	;There is more than 1 active tblptr byte
  4373  010848  0EFE               	movlw	high _dispnormal
  4374  01084A  6EF7               	movwf	tblptrh,c
  4375  01084C                     	endif
  4376  01084C                     	if	1	;There are 3 active tblptr bytes
  4377  01084C  0E00               	movlw	low (_dispnormal shr (0+16))
  4378  01084E  6EF8               	movwf	tblptru,c
  4379  010850                     	endif
  4380  010850  0008               	tblrd		*
  4381  010852  50F5               	movf	tablat,w,c
  4382  010854  ECD7  F087         	call	_lcd_write
  4383                           
  4384                           ;lcd.c: 32: lcd_write(dispclr);
  4385  010858  0EB2               	movlw	low _dispclr
  4386  01085A  6EF6               	movwf	tblptrl,c
  4387  01085C                     	if	1	;There is more than 1 active tblptr byte
  4388  01085C  0EFE               	movlw	high _dispclr
  4389  01085E  6EF7               	movwf	tblptrh,c
  4390  010860                     	endif
  4391  010860                     	if	1	;There are 3 active tblptr bytes
  4392  010860  0E00               	movlw	low (_dispclr shr (0+16))
  4393  010862  6EF8               	movwf	tblptru,c
  4394  010864                     	endif
  4395  010864  0008               	tblrd		*
  4396  010866  50F5               	movf	tablat,w,c
  4397  010868  ECD7  F087         	call	_lcd_write
  4398                           
  4399                           ;lcd.c: 34: lcd_test();
  4400  01086C  ECC4  F088         	call	_lcd_test	;wreg free
  4401                           
  4402                           ;lcd.c: 35: _delay((unsigned long)((250)*(12000000/4000.0)));
  4403  010870  0E04               	movlw	4
  4404  010872  6E1C               	movwf	(??_lcd_init+1)& (0+255),c
  4405  010874  0ECF               	movlw	207
  4406  010876  6E1B               	movwf	??_lcd_init& (0+255),c
  4407  010878  0E02               	movlw	2
  4408  01087A                     u2057:
  4409  01087A  2EE8               	decfsz	wreg,f,c
  4410  01087C  D7FE               	bra	u2057
  4411  01087E  2E1B               	decfsz	??_lcd_init& (0+255),f,c
  4412  010880  D7FC               	bra	u2057
  4413  010882  2E1C               	decfsz	(??_lcd_init+1)& (0+255),f,c
  4414  010884  D7FA               	bra	u2057
  4415  010886  F000               	nop		;# 
  4416  010888  0012               	return		;funcret
  4417  01088A                     __end_of_lcd_init:
  4418                           	opt stack 0
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           postinc0	equ	0xFEE
  4426                           wreg	equ	0xFE8
  4427                           indf2	equ	0xFDF
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _lcd_test *****************
  4433 ;; Defined at:
  4434 ;;		line 223 in file "lcd.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  character       1   25[COMRAM] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4451 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4452 ;;Total ram usage:        1 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    7
  4455 ;; This function calls:
  4456 ;;		_lcd_writeC
  4457 ;; This function is called by:
  4458 ;;		_lcd_init
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text25
  4463  011188                     __ptext25:
  4464                           	opt stack 0
  4465  011188                     _lcd_test:
  4466                           	opt stack 22
  4467                           
  4468                           ;lcd.c: 225: uint8_t character = 0x30;
  4469                           
  4470                           ;incstack = 0
  4471  011188  0E30               	movlw	48
  4472  01118A  D004               	goto	L13
  4473  01118C                     
  4474                           ;lcd.c: 227: {
  4475                           ;lcd.c: 228: lcd_writeC(character);
  4476  01118C  501A               	movf	lcd_test@character,w,c
  4477  01118E  EC75  F085         	call	_lcd_writeC
  4478                           
  4479                           ;lcd.c: 229: character = character+ 1;
  4480  011192  281A               	incf	lcd_test@character,w,c
  4481  011194                     L13:
  4482  011194  6E1A               	movwf	lcd_test@character,c
  4483  011196  0E7F               	movlw	127
  4484  011198  641A               	cpfsgt	lcd_test@character,c
  4485  01119A  D7F8               	goto	l1082
  4486  01119C  0012               	return	
  4487  01119E                     __end_of_lcd_test:
  4488                           	opt stack 0
  4489                           tblptru	equ	0xFF8
  4490                           tblptrh	equ	0xFF7
  4491                           tblptrl	equ	0xFF6
  4492                           tablat	equ	0xFF5
  4493                           prodh	equ	0xFF4
  4494                           prodl	equ	0xFF3
  4495                           postinc0	equ	0xFEE
  4496                           wreg	equ	0xFE8
  4497                           indf2	equ	0xFDF
  4498                           fsr2h	equ	0xFDA
  4499                           fsr2l	equ	0xFD9
  4500                           status	equ	0xFD8
  4501                           
  4502 ;; *************** function _enter_service *****************
  4503 ;; Defined at:
  4504 ;;		line 157 in file "main.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:   11
  4525 ;; This function calls:
  4526 ;;		_Audit
  4527 ;;		_Clear_cred
  4528 ;;		_Hopper_coin
  4529 ;;		_Note_test
  4530 ;;		_Sensor_set
  4531 ;;		_Vend_test
  4532 ;;		_butindb
  4533 ;;		_lcd_string
  4534 ;;		_set_notes
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text26
  4541  01088A                     __ptext26:
  4542                           	opt stack 0
  4543  01088A                     _enter_service:
  4544                           	opt stack 19
  4545                           
  4546                           ;main.c: 159: lcd_string(servmsg, line1);
  4547                           
  4548                           ;incstack = 0
  4549  01088A  0EB7               	movlw	low _servmsg
  4550  01088C  6E1A               	movwf	lcd_string@lcdstring,c
  4551  01088E  0EFE               	movlw	high _servmsg
  4552  010890  6E1B               	movwf	lcd_string@lcdstring+1,c
  4553  010892  0EA8               	movlw	low _line1
  4554  010894  6EF6               	movwf	tblptrl,c
  4555  010896                     	if	1	;There is more than 1 active tblptr byte
  4556  010896  0EFE               	movlw	high _line1
  4557  010898  6EF7               	movwf	tblptrh,c
  4558  01089A                     	endif
  4559  01089A                     	if	1	;There are 3 active tblptr bytes
  4560  01089A  0E00               	movlw	low (_line1 shr (0+16))
  4561  01089C  6EF8               	movwf	tblptru,c
  4562  01089E                     	endif
  4563  01089E  0008               	tblrd		*
  4564  0108A0  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  4565  0108A4  EC0F  F082         	call	_lcd_string	;wreg free
  4566                           
  4567                           ;main.c: 161: while(venflags.service)
  4568  0108A8  D034               	goto	l734
  4569  0108AA                     
  4570                           ;main.c: 162: {
  4571                           ;main.c: 163: buttons = butindb();
  4572  0108AA  EC87  F088         	call	_butindb	;wreg free
  4573  0108AE  6E2C               	movwf	_buttons,c	;volatile
  4574                           
  4575                           ;main.c: 164: switch(buttons)
  4576  0108B0  D017               	goto	l732
  4577  0108B2  EC3E  F089         	call	_Audit	;wreg free
  4578                           
  4579                           ;main.c: 167: break;
  4580  0108B6  D02D               	goto	l734
  4581  0108B8  EC3C  F089         	call	_Hopper_coin	;wreg free
  4582                           
  4583                           ;main.c: 169: break;
  4584  0108BC  D02A               	goto	l734
  4585  0108BE  EC3A  F089         	call	_Sensor_set	;wreg free
  4586                           
  4587                           ;main.c: 171: break;
  4588  0108C2  D027               	goto	l734
  4589  0108C4  EC83  F082         	call	_set_notes	;wreg free
  4590                           
  4591                           ;main.c: 173: break;
  4592  0108C8  D024               	goto	l734
  4593  0108CA  EC3D  F089         	call	_Clear_cred	;wreg free
  4594                           
  4595                           ;main.c: 175: break;
  4596  0108CE  D021               	goto	l734
  4597  0108D0  EC39  F089         	call	_Vend_test	;wreg free
  4598                           
  4599                           ;main.c: 177: break;
  4600  0108D4  D01E               	goto	l734
  4601  0108D6  EC3B  F089         	call	_Note_test	;wreg free
  4602                           
  4603                           ;main.c: 179: break;
  4604  0108DA  D01B               	goto	l734
  4605  0108DC                     l741:
  4606  0108DC  9E2B               	bcf	_venflags,7,c
  4607                           
  4608                           ;main.c: 182: }
  4609                           
  4610                           ;main.c: 181: break;
  4611  0108DE  D019               	goto	l734
  4612  0108E0                     l732:
  4613  0108E0  502C               	movf	_buttons,w,c	;volatile
  4614                           
  4615                           ; Switch size 1, requested type "space"
  4616                           ; Number of cases is 8, Range of values is 1 to 128
  4617                           ; switch strategies available:
  4618                           ; Name         Instructions Cycles
  4619                           ; simple_byte           25    13 (average)
  4620                           ;	Chosen strategy is simple_byte
  4621  0108E2  0A01               	xorlw	1	; case 1
  4622  0108E4  B4D8               	btfsc	status,2,c
  4623  0108E6  D7E5               	goto	l733
  4624  0108E8  0A03               	xorlw	3	; case 2
  4625  0108EA  B4D8               	btfsc	status,2,c
  4626  0108EC  D7E5               	goto	l735
  4627  0108EE  0A06               	xorlw	6	; case 4
  4628  0108F0  B4D8               	btfsc	status,2,c
  4629  0108F2  D7E5               	goto	l736
  4630  0108F4  0A0C               	xorlw	12	; case 8
  4631  0108F6  B4D8               	btfsc	status,2,c
  4632  0108F8  D7E5               	goto	l737
  4633  0108FA  0A18               	xorlw	24	; case 16
  4634  0108FC  B4D8               	btfsc	status,2,c
  4635  0108FE  D7E5               	goto	l738
  4636  010900  0A30               	xorlw	48	; case 32
  4637  010902  B4D8               	btfsc	status,2,c
  4638  010904  D7E5               	goto	l739
  4639  010906  0A60               	xorlw	96	; case 64
  4640  010908  B4D8               	btfsc	status,2,c
  4641  01090A  D7E5               	goto	l740
  4642  01090C  0AC0               	xorlw	192	; case 128
  4643  01090E  B4D8               	btfsc	status,2,c
  4644  010910  D7E5               	goto	l741
  4645  010912                     l734:
  4646  010912  AE2B               	btfss	_venflags,7,c
  4647  010914  0012               	return	
  4648  010916  D7C9               	goto	l731
  4649  010918                     __end_of_enter_service:
  4650                           	opt stack 0
  4651                           tblptru	equ	0xFF8
  4652                           tblptrh	equ	0xFF7
  4653                           tblptrl	equ	0xFF6
  4654                           tablat	equ	0xFF5
  4655                           prodh	equ	0xFF4
  4656                           prodl	equ	0xFF3
  4657                           postinc0	equ	0xFEE
  4658                           wreg	equ	0xFE8
  4659                           indf2	equ	0xFDF
  4660                           fsr2h	equ	0xFDA
  4661                           fsr2l	equ	0xFD9
  4662                           status	equ	0xFD8
  4663                           
  4664 ;; *************** function _set_notes *****************
  4665 ;; Defined at:
  4666 ;;		line 56 in file "mdb.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4684 ;;Total ram usage:        0 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:   10
  4687 ;; This function calls:
  4688 ;;		_butindb
  4689 ;;		_displ_note
  4690 ;;		_enable_notes
  4691 ;;		_lcd_string
  4692 ;; This function is called by:
  4693 ;;		_enter_service
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text27
  4698  010506                     __ptext27:
  4699                           	opt stack 0
  4700  010506                     _set_notes:
  4701                           	opt stack 19
  4702                           
  4703                           ;mdb.c: 58: lcd_string(setnotes, line1);
  4704                           
  4705                           ;incstack = 0
  4706  010506  0E08               	movlw	low _setnotes
  4707  010508  6E1A               	movwf	lcd_string@lcdstring,c
  4708  01050A  0EFF               	movlw	high _setnotes
  4709  01050C  6E1B               	movwf	lcd_string@lcdstring+1,c
  4710  01050E  0EA8               	movlw	low _line1
  4711  010510  6EF6               	movwf	tblptrl,c
  4712  010512                     	if	1	;There is more than 1 active tblptr byte
  4713  010512  0EFE               	movlw	high _line1
  4714  010514  6EF7               	movwf	tblptrh,c
  4715  010516                     	endif
  4716  010516                     	if	1	;There are 3 active tblptr bytes
  4717  010516  0E00               	movlw	low (_line1 shr (0+16))
  4718  010518  6EF8               	movwf	tblptru,c
  4719  01051A                     	endif
  4720  01051A  0008               	tblrd		*
  4721  01051C  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  4722  010520  EC0F  F082         	call	_lcd_string	;wreg free
  4723                           
  4724                           ;mdb.c: 59: noteen.noteset = 1;
  4725  010524  8A36               	bsf	_noteen,5,c
  4726                           
  4727                           ;mdb.c: 60: noteen.endis = 1;
  4728  010526  8C36               	bsf	_noteen,6,c
  4729                           
  4730                           ;mdb.c: 61: while(noteen.noteset)
  4731  010528  D050               	goto	l1710
  4732  01052A                     
  4733                           ;mdb.c: 62: {
  4734                           ;mdb.c: 63: buttons = butindb();
  4735  01052A  EC87  F088         	call	_butindb	;wreg free
  4736  01052E  6E2C               	movwf	_buttons,c	;volatile
  4737                           
  4738                           ;mdb.c: 64: switch(buttons)
  4739  010530  D039               	goto	l1702
  4740  010532  0EF7               	movlw	low _tenrand
  4741  010534  6E1F               	movwf	displ_note@lcdstring,c
  4742  010536  0EFF               	movlw	high _tenrand
  4743  010538  6E20               	movwf	displ_note@lcdstring+1,c
  4744  01053A  ECCF  F084         	call	_displ_note	;wreg free
  4745  01053E  ECD3  F085         	call	_enable_notes
  4746  010542                     l1704:
  4747  010542  0EEF               	movlw	low _twentyrand
  4748  010544  6E1F               	movwf	displ_note@lcdstring,c
  4749  010546  0EFF               	movlw	high _twentyrand
  4750  010548  6E20               	movwf	displ_note@lcdstring+1,c
  4751  01054A  ECCF  F084         	call	_displ_note	;wreg free
  4752  01054E  ECD3  F085         	call	_enable_notes
  4753  010552                     l1705:
  4754  010552  0EE7               	movlw	low _fiftyrand
  4755  010554  6E1F               	movwf	displ_note@lcdstring,c
  4756  010556  0EFF               	movlw	high _fiftyrand
  4757  010558  6E20               	movwf	displ_note@lcdstring+1,c
  4758  01055A  ECCF  F084         	call	_displ_note	;wreg free
  4759  01055E  ECD3  F085         	call	_enable_notes
  4760  010562                     l1706:
  4761  010562  0EDF               	movlw	low _hundredrand
  4762  010564  6E1F               	movwf	displ_note@lcdstring,c
  4763  010566  0EFF               	movlw	high _hundredrand
  4764  010568  6E20               	movwf	displ_note@lcdstring+1,c
  4765  01056A  ECCF  F084         	call	_displ_note	;wreg free
  4766  01056E  ECD3  F085         	call	_enable_notes
  4767  010572                     l1707:
  4768  010572  0ED7               	movlw	low _twohundredrand
  4769  010574  6E1F               	movwf	displ_note@lcdstring,c
  4770  010576  0EFF               	movlw	high _twohundredrand
  4771  010578  6E20               	movwf	displ_note@lcdstring+1,c
  4772  01057A  ECCF  F084         	call	_displ_note	;wreg free
  4773  01057E  ECD3  F085         	call	_enable_notes
  4774  010582                     l1708:
  4775  010582  0EB7               	movlw	low _servmsg
  4776  010584  6E1A               	movwf	lcd_string@lcdstring,c
  4777  010586  0EFE               	movlw	high _servmsg
  4778  010588  6E1B               	movwf	lcd_string@lcdstring+1,c
  4779  01058A  0EA8               	movlw	low _line1
  4780  01058C  6EF6               	movwf	tblptrl,c
  4781  01058E                     	if	1	;There is more than 1 active tblptr byte
  4782  01058E  0EFE               	movlw	high _line1
  4783  010590  6EF7               	movwf	tblptrh,c
  4784  010592                     	endif
  4785  010592                     	if	1	;There are 3 active tblptr bytes
  4786  010592  0E00               	movlw	low (_line1 shr (0+16))
  4787  010594  6EF8               	movwf	tblptru,c
  4788  010596                     	endif
  4789  010596  0008               	tblrd		*
  4790  010598  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  4791  01059C  EC0F  F082         	call	_lcd_string	;wreg free
  4792                           
  4793                           ;mdb.c: 79: noteen.noteset = 0;
  4794  0105A0  9A36               	bcf	_noteen,5,c
  4795                           
  4796                           ;mdb.c: 81: }
  4797                           
  4798                           ;mdb.c: 80: default : break;
  4799  0105A2  D013               	goto	l1710
  4800  0105A4                     l1702:
  4801  0105A4  502C               	movf	_buttons,w,c	;volatile
  4802                           
  4803                           ; Switch size 1, requested type "space"
  4804                           ; Number of cases is 6, Range of values is 1 to 128
  4805                           ; switch strategies available:
  4806                           ; Name         Instructions Cycles
  4807                           ; simple_byte           19    10 (average)
  4808                           ;	Chosen strategy is simple_byte
  4809  0105A6  0A01               	xorlw	1	; case 1
  4810  0105A8  B4D8               	btfsc	status,2,c
  4811  0105AA  D7C3               	goto	l1703
  4812  0105AC  0A03               	xorlw	3	; case 2
  4813  0105AE  B4D8               	btfsc	status,2,c
  4814  0105B0  D7C8               	goto	l1704
  4815  0105B2  0A06               	xorlw	6	; case 4
  4816  0105B4  B4D8               	btfsc	status,2,c
  4817  0105B6  D7CD               	goto	l1705
  4818  0105B8  0A0C               	xorlw	12	; case 8
  4819  0105BA  B4D8               	btfsc	status,2,c
  4820  0105BC  D7D2               	goto	l1706
  4821  0105BE  0A18               	xorlw	24	; case 16
  4822  0105C0  B4D8               	btfsc	status,2,c
  4823  0105C2  D7D7               	goto	l1707
  4824  0105C4  0A90               	xorlw	144	; case 128
  4825  0105C6  B4D8               	btfsc	status,2,c
  4826  0105C8  D7DC               	goto	l1708
  4827  0105CA                     l1710:
  4828  0105CA  AA36               	btfss	_noteen,5,c
  4829  0105CC  0012               	return	
  4830  0105CE  D7AD               	goto	l1701
  4831  0105D0                     __end_of_set_notes:
  4832                           	opt stack 0
  4833                           tblptru	equ	0xFF8
  4834                           tblptrh	equ	0xFF7
  4835                           tblptrl	equ	0xFF6
  4836                           tablat	equ	0xFF5
  4837                           prodh	equ	0xFF4
  4838                           prodl	equ	0xFF3
  4839                           postinc0	equ	0xFEE
  4840                           wreg	equ	0xFE8
  4841                           indf2	equ	0xFDF
  4842                           fsr2h	equ	0xFDA
  4843                           fsr2l	equ	0xFD9
  4844                           status	equ	0xFD8
  4845                           
  4846 ;; *************** function _enable_notes *****************
  4847 ;; Defined at:
  4848 ;;		line 85 in file "mdb.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  notenum         1    wreg     unsigned char 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  notenum         1   31[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4866 ;;Total ram usage:        1 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    9
  4869 ;; This function calls:
  4870 ;;		_butindb
  4871 ;;		_displ_nendis
  4872 ;; This function is called by:
  4873 ;;		_set_notes
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text28
  4878  010BA6                     __ptext28:
  4879                           	opt stack 0
  4880  010BA6                     _enable_notes:
  4881                           	opt stack 19
  4882                           
  4883                           ;incstack = 0
  4884                           ;enable_notes@notenum stored from wreg
  4885  010BA6  6E20               	movwf	enable_notes@notenum,c
  4886                           
  4887                           ;mdb.c: 87: noteen.endis = 1;
  4888  010BA8  8C36               	bsf	_noteen,6,c
  4889                           
  4890                           ;mdb.c: 88: displ_nendis(notenum);
  4891  010BAA  5020               	movf	enable_notes@notenum,w,c
  4892  010BAC  EC51  F086         	call	_displ_nendis
  4893                           
  4894                           ;mdb.c: 89: while(noteen.endis)
  4895  010BB0  D021               	goto	l1719
  4896  010BB2                     
  4897                           ;mdb.c: 90: {
  4898                           ;mdb.c: 91: buttons = butindb();
  4899  010BB2  EC87  F088         	call	_butindb	;wreg free
  4900  010BB6  6E2C               	movwf	_buttons,c	;volatile
  4901                           
  4902                           ;mdb.c: 92: switch(buttons)
  4903  010BB8  D013               	goto	l1717
  4904  010BBA  5035               	movf	_noteen_byte,w,c	;volatile
  4905  010BBC  1020               	iorwf	enable_notes@notenum,w,c
  4906  010BBE  6E35               	movwf	_noteen_byte,c	;volatile
  4907                           
  4908                           ;mdb.c: 95: displ_nendis(notenum);
  4909  010BC0  5020               	movf	enable_notes@notenum,w,c
  4910  010BC2  EC51  F086         	call	_displ_nendis
  4911                           
  4912                           ;mdb.c: 96: break;
  4913  010BC6  D016               	goto	l1719
  4914  010BC8  5020               	movf	enable_notes@notenum,w,c
  4915  010BCA  0AFF               	xorlw	255
  4916  010BCC  1435               	andwf	_noteen_byte,w,c	;volatile
  4917  010BCE  6E35               	movwf	_noteen_byte,c	;volatile
  4918                           
  4919                           ;mdb.c: 98: displ_nendis(notenum);
  4920  010BD0  5020               	movf	enable_notes@notenum,w,c
  4921  010BD2  EC51  F086         	call	_displ_nendis
  4922                           
  4923                           ;mdb.c: 99: break;
  4924  010BD6  D00E               	goto	l1719
  4925  010BD8                     l1721:
  4926  010BD8  9C36               	bcf	_noteen,6,c
  4927                           
  4928                           ;mdb.c: 101: buttons = 0;
  4929  010BDA  0E00               	movlw	0
  4930  010BDC  6E2C               	movwf	_buttons,c	;volatile
  4931                           
  4932                           ;mdb.c: 103: }
  4933                           
  4934                           ;mdb.c: 102: default : break;
  4935  010BDE  D00A               	goto	l1719
  4936  010BE0                     l1717:
  4937  010BE0  502C               	movf	_buttons,w,c	;volatile
  4938                           
  4939                           ; Switch size 1, requested type "space"
  4940                           ; Number of cases is 3, Range of values is 1 to 4
  4941                           ; switch strategies available:
  4942                           ; Name         Instructions Cycles
  4943                           ; simple_byte           10     6 (average)
  4944                           ;	Chosen strategy is simple_byte
  4945  010BE2  0A01               	xorlw	1	; case 1
  4946  010BE4  B4D8               	btfsc	status,2,c
  4947  010BE6  D7E9               	goto	l1718
  4948  010BE8  0A03               	xorlw	3	; case 2
  4949  010BEA  B4D8               	btfsc	status,2,c
  4950  010BEC  D7ED               	goto	l1720
  4951  010BEE  0A06               	xorlw	6	; case 4
  4952  010BF0  B4D8               	btfsc	status,2,c
  4953  010BF2  D7F2               	goto	l1721
  4954  010BF4                     l1719:
  4955  010BF4  AC36               	btfss	_noteen,6,c
  4956  010BF6  0012               	return	
  4957  010BF8  D7DC               	goto	l1716
  4958  010BFA                     __end_of_enable_notes:
  4959                           	opt stack 0
  4960                           tblptru	equ	0xFF8
  4961                           tblptrh	equ	0xFF7
  4962                           tblptrl	equ	0xFF6
  4963                           tablat	equ	0xFF5
  4964                           prodh	equ	0xFF4
  4965                           prodl	equ	0xFF3
  4966                           postinc0	equ	0xFEE
  4967                           wreg	equ	0xFE8
  4968                           indf2	equ	0xFDF
  4969                           fsr2h	equ	0xFDA
  4970                           fsr2l	equ	0xFD9
  4971                           status	equ	0xFD8
  4972                           
  4973 ;; *************** function _displ_nendis *****************
  4974 ;; Defined at:
  4975 ;;		line 52 in file "lcd.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  notenum         1    wreg     unsigned char 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  notenum         1   30[COMRAM] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4993 ;;Total ram usage:        1 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:    8
  4996 ;; This function calls:
  4997 ;;		_lcd_string
  4998 ;; This function is called by:
  4999 ;;		_enable_notes
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text29
  5004  010CA2                     __ptext29:
  5005                           	opt stack 0
  5006  010CA2                     _displ_nendis:
  5007                           	opt stack 19
  5008                           
  5009                           ;incstack = 0
  5010                           ;displ_nendis@notenum stored from wreg
  5011  010CA2  6E1F               	movwf	displ_nendis@notenum,c
  5012                           
  5013                           ;lcd.c: 54: if(notenum && noteen_byte)
  5014  010CA4  501F               	movf	displ_nendis@notenum,w,c
  5015  010CA6  B4D8               	btfsc	status,2,c
  5016  010CA8  D014               	goto	l1012
  5017  010CAA  5035               	movf	_noteen_byte,w,c	;volatile
  5018  010CAC  B4D8               	btfsc	status,2,c
  5019  010CAE  D011               	goto	l1012
  5020                           
  5021                           ;lcd.c: 55: {
  5022                           ;lcd.c: 56: lcd_string(enabled, line2 + 0x06);
  5023  010CB0  0ECE               	movlw	low _enabled
  5024  010CB2  6E1A               	movwf	lcd_string@lcdstring,c
  5025  010CB4  0EFF               	movlw	high _enabled
  5026  010CB6  6E1B               	movwf	lcd_string@lcdstring+1,c
  5027  010CB8  0EA7               	movlw	low _line2
  5028  010CBA  6EF6               	movwf	tblptrl,c
  5029  010CBC                     	if	1	;There is more than 1 active tblptr byte
  5030  010CBC  0EFE               	movlw	high _line2
  5031  010CBE  6EF7               	movwf	tblptrh,c
  5032  010CC0                     	endif
  5033  010CC0                     	if	1	;There are 3 active tblptr bytes
  5034  010CC0  0E00               	movlw	low (_line2 shr (0+16))
  5035  010CC2  6EF8               	movwf	tblptru,c
  5036  010CC4                     	endif
  5037  010CC4  0008               	tblrd		*
  5038  010CC6  50F5               	movf	tablat,w,c
  5039  010CC8  0F06               	addlw	6
  5040  010CCA  6E1C               	movwf	lcd_string@lcdline,c
  5041  010CCC  EC0F  F082         	call	_lcd_string	;wreg free
  5042                           
  5043                           ;lcd.c: 57: }
  5044  010CD0  0012               	return	
  5045  010CD2                     l1012:
  5046                           
  5047                           ;lcd.c: 58: else
  5048                           ;lcd.c: 59: {
  5049                           ;lcd.c: 60: lcd_string(disabled, line2 + 0x06);
  5050  010CD2  0EC5               	movlw	low _disabled
  5051  010CD4  6E1A               	movwf	lcd_string@lcdstring,c
  5052  010CD6  0EFF               	movlw	high _disabled
  5053  010CD8  6E1B               	movwf	lcd_string@lcdstring+1,c
  5054  010CDA  0EA7               	movlw	low _line2
  5055  010CDC  6EF6               	movwf	tblptrl,c
  5056  010CDE                     	if	1	;There is more than 1 active tblptr byte
  5057  010CDE  0EFE               	movlw	high _line2
  5058  010CE0  6EF7               	movwf	tblptrh,c
  5059  010CE2                     	endif
  5060  010CE2                     	if	1	;There are 3 active tblptr bytes
  5061  010CE2  0E00               	movlw	low (_line2 shr (0+16))
  5062  010CE4  6EF8               	movwf	tblptru,c
  5063  010CE6                     	endif
  5064  010CE6  0008               	tblrd		*
  5065  010CE8  50F5               	movf	tablat,w,c
  5066  010CEA  0F06               	addlw	6
  5067  010CEC  6E1C               	movwf	lcd_string@lcdline,c
  5068  010CEE  EC0F  F082         	call	_lcd_string	;wreg free
  5069  010CF2  0012               	return	
  5070  010CF4                     __end_of_displ_nendis:
  5071                           	opt stack 0
  5072                           tblptru	equ	0xFF8
  5073                           tblptrh	equ	0xFF7
  5074                           tblptrl	equ	0xFF6
  5075                           tablat	equ	0xFF5
  5076                           prodh	equ	0xFF4
  5077                           prodl	equ	0xFF3
  5078                           postinc0	equ	0xFEE
  5079                           wreg	equ	0xFE8
  5080                           indf2	equ	0xFDF
  5081                           fsr2h	equ	0xFDA
  5082                           fsr2l	equ	0xFD9
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _butindb *****************
  5086 ;; Defined at:
  5087 ;;		line 75 in file "vend.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  butval          1   20[COMRAM] unsigned char 
  5092 ;;  butt            1   19[COMRAM] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      unsigned char 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5106 ;;Total ram usage:        2 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    3
  5109 ;; This function calls:
  5110 ;;		_butin
  5111 ;; This function is called by:
  5112 ;;		_enter_service
  5113 ;;		_set_notes
  5114 ;;		_enable_notes
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text30
  5119  01110E                     __ptext30:
  5120                           	opt stack 0
  5121  01110E                     _butindb:
  5122                           	opt stack 24
  5123                           
  5124                           ;vend.c: 77: uint8_t butt = butin();
  5125                           
  5126                           ;incstack = 0
  5127  01110E  EC01  F087         	call	_butin	;wreg free
  5128  011112  6E14               	movwf	butindb@butt,c
  5129                           
  5130                           ;vend.c: 78: uint8_t butval = buttons;
  5131  011114  C02C  F015         	movff	_buttons,butindb@butval	;volatile
  5132                           
  5133                           ;vend.c: 79: while(butval != 0x00)
  5134  011118  D003               	goto	l1365
  5135  01111A                     
  5136                           ;vend.c: 80: {
  5137                           ;vend.c: 81: butval = butin();
  5138  01111A  EC01  F087         	call	_butin	;wreg free
  5139  01111E  6E15               	movwf	butindb@butval,c
  5140  011120                     l1365:
  5141  011120  5015               	movf	butindb@butval,w,c
  5142  011122  A4D8               	btfss	status,2,c
  5143  011124  D7FA               	goto	l1366
  5144                           
  5145                           ;vend.c: 82: }
  5146                           ;vend.c: 84: return butt;
  5147  011126  5014               	movf	butindb@butt,w,c
  5148  011128  0012               	return	
  5149  01112A                     __end_of_butindb:
  5150                           	opt stack 0
  5151                           tblptru	equ	0xFF8
  5152                           tblptrh	equ	0xFF7
  5153                           tblptrl	equ	0xFF6
  5154                           tablat	equ	0xFF5
  5155                           prodh	equ	0xFF4
  5156                           prodl	equ	0xFF3
  5157                           postinc0	equ	0xFEE
  5158                           wreg	equ	0xFE8
  5159                           indf2	equ	0xFDF
  5160                           fsr2h	equ	0xFDA
  5161                           fsr2l	equ	0xFD9
  5162                           status	equ	0xFD8
  5163                           
  5164 ;; *************** function _butin *****************
  5165 ;; Defined at:
  5166 ;;		line 87 in file "vend.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      unsigned char 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;Total ram usage:        1 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    2
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_butindb
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text31
  5195  010E02                     __ptext31:
  5196                           	opt stack 0
  5197  010E02                     _butin:
  5198                           	opt stack 24
  5199                           
  5200                           ;vend.c: 89: LATA7 = 0;
  5201                           
  5202                           ;incstack = 0
  5203  010E02  9E83               	bcf	3971,7,c	;volatile
  5204                           
  5205                           ;vend.c: 90: LATA6 = 1;
  5206  010E04  8C83               	bsf	3971,6,c	;volatile
  5207                           
  5208                           ;vend.c: 91: _delay((unsigned long)((15)*(12000000/4000000.0)));
  5209  010E06  0E0F               	movlw	15
  5210  010E08                     u2067:
  5211  010E08  2EE8               	decfsz	wreg,f,c
  5212  010E0A  D7FE               	bra	u2067
  5213                           
  5214                           ;vend.c: 93: buttons = ((PORTA >> 1) & 0x0F) << 4;
  5215  010E0C  CF8D F013          	movff	3981,??_butin	;volatile
  5216  010E10  90D8               	bcf	status,0,c
  5217  010E12  3213               	rrcf	??_butin,f,c
  5218  010E14  0E0F               	movlw	15
  5219  010E16  1613               	andwf	??_butin,f,c
  5220  010E18  3813               	swapf	??_butin,w,c
  5221  010E1A  0BF0               	andlw	240
  5222  010E1C  6E2C               	movwf	_buttons,c	;volatile
  5223                           
  5224                           ;vend.c: 94: LATA7 = 1;
  5225  010E1E  8E83               	bsf	3971,7,c	;volatile
  5226                           
  5227                           ;vend.c: 95: LATA6 = 0;
  5228  010E20  9C83               	bcf	3971,6,c	;volatile
  5229                           
  5230                           ;vend.c: 96: _delay((unsigned long)((15)*(12000000/4000000.0)));
  5231  010E22  0E0F               	movlw	15
  5232  010E24                     u2077:
  5233  010E24  2EE8               	decfsz	wreg,f,c
  5234  010E26  D7FE               	bra	u2077
  5235                           
  5236                           ;vend.c: 98: buttons = ((PORTA >> 1) & 0x0F) | buttons;
  5237  010E28  90D8               	bcf	status,0,c
  5238  010E2A  308D               	rrcf	3981,w,c	;volatile
  5239  010E2C  0B0F               	andlw	15
  5240  010E2E  102C               	iorwf	_buttons,w,c	;volatile
  5241  010E30  6E2C               	movwf	_buttons,c	;volatile
  5242                           
  5243                           ;vend.c: 99: LATA7 = 1;
  5244  010E32  8E83               	bsf	3971,7,c	;volatile
  5245                           
  5246                           ;vend.c: 100: LATA6 = 1;
  5247  010E34  8C83               	bsf	3971,6,c	;volatile
  5248                           
  5249                           ;vend.c: 101: return ~buttons;
  5250  010E36  502C               	movf	_buttons,w,c	;volatile
  5251  010E38  0AFF               	xorlw	255
  5252  010E3A  0012               	return	
  5253  010E3C                     __end_of_butin:
  5254                           	opt stack 0
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           postinc0	equ	0xFEE
  5262                           wreg	equ	0xFE8
  5263                           indf2	equ	0xFDF
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function _displ_note *****************
  5269 ;; Defined at:
  5270 ;;		line 40 in file "lcd.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  lcdstring       2   30[COMRAM] PTR unsigned char 
  5273 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  5274 ;;		 -> tenrand(8), 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      unsigned char 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5290 ;;Total ram usage:        4 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    8
  5293 ;; This function calls:
  5294 ;;		_lcd_string
  5295 ;;		_lcd_write
  5296 ;; This function is called by:
  5297 ;;		_set_notes
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text32
  5302  01099E                     __ptext32:
  5303                           	opt stack 0
  5304  01099E                     _displ_note:
  5305                           	opt stack 20
  5306                           
  5307                           ;lcd.c: 44: notenum = 0x01 << (lcdstring[0] & 0x07);
  5308                           
  5309                           ;incstack = 0
  5310  01099E  C01F  FFF6         	movff	displ_note@lcdstring,tblptrl
  5311  0109A2  C020  FFF7         	movff	displ_note@lcdstring+1,tblptrh
  5312  0109A6                     	if	0	;tblptru may be non-zero
  5313  0109A6                     	endif
  5314  0109A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5315  0109A6  0E00               	movlw	low (__mediumconst shr (0+16))
  5316  0109A8  6EF8               	movwf	tblptru,c
  5317  0109AA                     	endif
  5318  0109AA  0008               	tblrd		*
  5319  0109AC  CFF5 F021          	movff	tablat,??_displ_note
  5320  0109B0  0E07               	movlw	7
  5321  0109B2  1621               	andwf	??_displ_note,f,c
  5322  0109B4  0E01               	movlw	1
  5323  0109B6  6E22               	movwf	(??_displ_note+1)& (0+255),c
  5324  0109B8  2A21               	incf	??_displ_note,f,c
  5325  0109BA  D002               	goto	u1734
  5326  0109BC                     u1735:
  5327  0109BC  90D8               	bcf	status,0,c
  5328  0109BE  3622               	rlcf	??_displ_note+1,f,c
  5329  0109C0                     u1734:
  5330  0109C0  2E21               	decfsz	??_displ_note,f,c
  5331  0109C2  D7FC               	goto	u1735
  5332  0109C4  5022               	movf	??_displ_note+1,w,c
  5333  0109C6  6E4A               	movwf	_notenum,c
  5334                           
  5335                           ;lcd.c: 46: lcdstring ++;
  5336  0109C8  4A1F               	infsnz	displ_note@lcdstring,f,c
  5337  0109CA  2A20               	incf	displ_note@lcdstring+1,f,c
  5338                           
  5339                           ;lcd.c: 47: lcd_write(dispclr);
  5340  0109CC  0EB2               	movlw	low _dispclr
  5341  0109CE  6EF6               	movwf	tblptrl,c
  5342  0109D0                     	if	1	;There is more than 1 active tblptr byte
  5343  0109D0  0EFE               	movlw	high _dispclr
  5344  0109D2  6EF7               	movwf	tblptrh,c
  5345  0109D4                     	endif
  5346  0109D4                     	if	1	;There are 3 active tblptr bytes
  5347  0109D4  0E00               	movlw	low (_dispclr shr (0+16))
  5348  0109D6  6EF8               	movwf	tblptru,c
  5349  0109D8                     	endif
  5350  0109D8  0008               	tblrd		*
  5351  0109DA  50F5               	movf	tablat,w,c
  5352  0109DC  ECD7  F087         	call	_lcd_write
  5353                           
  5354                           ;lcd.c: 48: lcd_string(*lcdstring, line2);
  5355  0109E0  C01F  FFF6         	movff	displ_note@lcdstring,tblptrl
  5356  0109E4  C020  FFF7         	movff	displ_note@lcdstring+1,tblptrh
  5357  0109E8                     	if	0	;tblptru may be non-zero
  5358  0109E8                     	endif
  5359  0109E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5360  0109E8  0E00               	movlw	low (__mediumconst shr (0+16))
  5361  0109EA  6EF8               	movwf	tblptru,c
  5362  0109EC                     	endif
  5363  0109EC  0008               	tblrd		*
  5364  0109EE  50F5               	movf	tablat,w,c
  5365  0109F0  6E21               	movwf	??_displ_note& (0+255),c
  5366  0109F2  6A22               	clrf	(??_displ_note+1)& (0+255),c
  5367  0109F4  C021  F01A         	movff	??_displ_note,lcd_string@lcdstring
  5368  0109F8  C022  F01B         	movff	??_displ_note+1,lcd_string@lcdstring+1
  5369  0109FC  0EA7               	movlw	low _line2
  5370  0109FE  6EF6               	movwf	tblptrl,c
  5371  010A00                     	if	1	;There is more than 1 active tblptr byte
  5372  010A00  0EFE               	movlw	high _line2
  5373  010A02  6EF7               	movwf	tblptrh,c
  5374  010A04                     	endif
  5375  010A04                     	if	1	;There are 3 active tblptr bytes
  5376  010A04  0E00               	movlw	low (_line2 shr (0+16))
  5377  010A06  6EF8               	movwf	tblptru,c
  5378  010A08                     	endif
  5379  010A08  0008               	tblrd		*
  5380  010A0A  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  5381  010A0E  EC0F  F082         	call	_lcd_string	;wreg free
  5382                           
  5383                           ;lcd.c: 49: return notenum;
  5384  010A12  504A               	movf	_notenum,w,c
  5385  010A14  0012               	return	
  5386  010A16                     __end_of_displ_note:
  5387                           	opt stack 0
  5388                           tblptru	equ	0xFF8
  5389                           tblptrh	equ	0xFF7
  5390                           tblptrl	equ	0xFF6
  5391                           tablat	equ	0xFF5
  5392                           prodh	equ	0xFF4
  5393                           prodl	equ	0xFF3
  5394                           postinc0	equ	0xFEE
  5395                           wreg	equ	0xFE8
  5396                           indf2	equ	0xFDF
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _Vend_test *****************
  5402 ;; Defined at:
  5403 ;;		line 129 in file "vend.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		None
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    2
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_enter_service
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text33
  5432  011272                     __ptext33:
  5433                           	opt stack 0
  5434  011272                     _Vend_test:
  5435                           	opt stack 27
  5436                           
  5437                           ;incstack = 0
  5438  011272  0012               	return		;funcret
  5439  011274                     __end_of_Vend_test:
  5440                           	opt stack 0
  5441                           tblptru	equ	0xFF8
  5442                           tblptrh	equ	0xFF7
  5443                           tblptrl	equ	0xFF6
  5444                           tablat	equ	0xFF5
  5445                           prodh	equ	0xFF4
  5446                           prodl	equ	0xFF3
  5447                           postinc0	equ	0xFEE
  5448                           wreg	equ	0xFE8
  5449                           indf2	equ	0xFDF
  5450                           fsr2h	equ	0xFDA
  5451                           fsr2l	equ	0xFD9
  5452                           status	equ	0xFD8
  5453                           
  5454 ;; *************** function _Sensor_set *****************
  5455 ;; Defined at:
  5456 ;;		line 119 in file "vend.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;		None
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;		None
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		None
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5474 ;;Total ram usage:        0 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    2
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_enter_service
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text34
  5485  011274                     __ptext34:
  5486                           	opt stack 0
  5487  011274                     _Sensor_set:
  5488                           	opt stack 27
  5489                           
  5490                           ;incstack = 0
  5491  011274  0012               	return		;funcret
  5492  011276                     __end_of_Sensor_set:
  5493                           	opt stack 0
  5494                           tblptru	equ	0xFF8
  5495                           tblptrh	equ	0xFF7
  5496                           tblptrl	equ	0xFF6
  5497                           tablat	equ	0xFF5
  5498                           prodh	equ	0xFF4
  5499                           prodl	equ	0xFF3
  5500                           postinc0	equ	0xFEE
  5501                           wreg	equ	0xFE8
  5502                           indf2	equ	0xFDF
  5503                           fsr2h	equ	0xFDA
  5504                           fsr2l	equ	0xFD9
  5505                           status	equ	0xFD8
  5506                           
  5507 ;; *************** function _Note_test *****************
  5508 ;; Defined at:
  5509 ;;		line 134 in file "vend.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;		None
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;		None
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      void 
  5516 ;; Registers used:
  5517 ;;		None
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;Total ram usage:        0 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    2
  5530 ;; This function calls:
  5531 ;;		Nothing
  5532 ;; This function is called by:
  5533 ;;		_enter_service
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text35
  5538  011276                     __ptext35:
  5539                           	opt stack 0
  5540  011276                     _Note_test:
  5541                           	opt stack 27
  5542                           
  5543                           ;incstack = 0
  5544  011276  0012               	return		;funcret
  5545  011278                     __end_of_Note_test:
  5546                           	opt stack 0
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           postinc0	equ	0xFEE
  5554                           wreg	equ	0xFE8
  5555                           indf2	equ	0xFDF
  5556                           fsr2h	equ	0xFDA
  5557                           fsr2l	equ	0xFD9
  5558                           status	equ	0xFD8
  5559                           
  5560 ;; *************** function _Hopper_coin *****************
  5561 ;; Defined at:
  5562 ;;		line 114 in file "vend.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		None
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5580 ;;Total ram usage:        0 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    2
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_enter_service
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text36
  5591  011278                     __ptext36:
  5592                           	opt stack 0
  5593  011278                     _Hopper_coin:
  5594                           	opt stack 27
  5595                           
  5596                           ;incstack = 0
  5597  011278  0012               	return		;funcret
  5598  01127A                     __end_of_Hopper_coin:
  5599                           	opt stack 0
  5600                           tblptru	equ	0xFF8
  5601                           tblptrh	equ	0xFF7
  5602                           tblptrl	equ	0xFF6
  5603                           tablat	equ	0xFF5
  5604                           prodh	equ	0xFF4
  5605                           prodl	equ	0xFF3
  5606                           postinc0	equ	0xFEE
  5607                           wreg	equ	0xFE8
  5608                           indf2	equ	0xFDF
  5609                           fsr2h	equ	0xFDA
  5610                           fsr2l	equ	0xFD9
  5611                           status	equ	0xFD8
  5612                           
  5613 ;; *************** function _Clear_cred *****************
  5614 ;; Defined at:
  5615 ;;		line 124 in file "vend.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		None
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;Total ram usage:        0 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    2
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_enter_service
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text37
  5644  01127A                     __ptext37:
  5645                           	opt stack 0
  5646  01127A                     _Clear_cred:
  5647                           	opt stack 27
  5648                           
  5649                           ;incstack = 0
  5650  01127A  0012               	return		;funcret
  5651  01127C                     __end_of_Clear_cred:
  5652                           	opt stack 0
  5653                           tblptru	equ	0xFF8
  5654                           tblptrh	equ	0xFF7
  5655                           tblptrl	equ	0xFF6
  5656                           tablat	equ	0xFF5
  5657                           prodh	equ	0xFF4
  5658                           prodl	equ	0xFF3
  5659                           postinc0	equ	0xFEE
  5660                           wreg	equ	0xFE8
  5661                           indf2	equ	0xFDF
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function _Audit *****************
  5667 ;; Defined at:
  5668 ;;		line 109 in file "vend.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		None
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    2
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_enter_service
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text38
  5697  01127C                     __ptext38:
  5698                           	opt stack 0
  5699  01127C                     _Audit:
  5700                           	opt stack 27
  5701                           
  5702                           ;incstack = 0
  5703  01127C  0012               	return		;funcret
  5704  01127E                     __end_of_Audit:
  5705                           	opt stack 0
  5706                           tblptru	equ	0xFF8
  5707                           tblptrh	equ	0xFF7
  5708                           tblptrl	equ	0xFF6
  5709                           tablat	equ	0xFF5
  5710                           prodh	equ	0xFF4
  5711                           prodl	equ	0xFF3
  5712                           postinc0	equ	0xFEE
  5713                           wreg	equ	0xFE8
  5714                           indf2	equ	0xFDF
  5715                           fsr2h	equ	0xFDA
  5716                           fsr2l	equ	0xFD9
  5717                           status	equ	0xFD8
  5718                           
  5719 ;; *************** function _displ_noteer *****************
  5720 ;; Defined at:
  5721 ;;		line 119 in file "lcd.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;Total ram usage:        0 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    8
  5742 ;; This function calls:
  5743 ;;		_displ_code
  5744 ;;		_lcd_string
  5745 ;; This function is called by:
  5746 ;;		_main
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text39
  5751  010FE0                     __ptext39:
  5752                           	opt stack 0
  5753  010FE0                     _displ_noteer:
  5754                           	opt stack 22
  5755                           
  5756                           ;lcd.c: 121: lcd_string(noteerr, line1);
  5757                           
  5758                           ;incstack = 0
  5759  010FE0  0E72               	movlw	low _noteerr
  5760  010FE2  6E1A               	movwf	lcd_string@lcdstring,c
  5761  010FE4  0EFF               	movlw	high _noteerr
  5762  010FE6  6E1B               	movwf	lcd_string@lcdstring+1,c
  5763  010FE8  0EA8               	movlw	low _line1
  5764  010FEA  6EF6               	movwf	tblptrl,c
  5765  010FEC                     	if	1	;There is more than 1 active tblptr byte
  5766  010FEC  0EFE               	movlw	high _line1
  5767  010FEE  6EF7               	movwf	tblptrh,c
  5768  010FF0                     	endif
  5769  010FF0                     	if	1	;There are 3 active tblptr bytes
  5770  010FF0  0E00               	movlw	low (_line1 shr (0+16))
  5771  010FF2  6EF8               	movwf	tblptru,c
  5772  010FF4                     	endif
  5773  010FF4  0008               	tblrd		*
  5774  010FF6  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  5775  010FFA  EC0F  F082         	call	_lcd_string	;wreg free
  5776                           
  5777                           ;lcd.c: 122: ercode = mdbdata[0];
  5778  010FFE  C060  F03D         	movff	_mdbdata,_ercode
  5779                           
  5780                           ;lcd.c: 123: displ_code(ercode);
  5781  011002  503D               	movf	_ercode,w,c
  5782  011004  EC91  F080         	call	_displ_code
  5783                           
  5784                           ;lcd.c: 124: mdbflags.noteerr = 0;
  5785  011008  9237               	bcf	_mdbflags,1,c
  5786                           
  5787                           ;lcd.c: 125: venflags.noterr = 0;
  5788  01100A  9C2B               	bcf	_venflags,6,c
  5789                           
  5790                           ;lcd.c: 126: venflags.credisplay = 0;
  5791  01100C  982B               	bcf	_venflags,4,c
  5792  01100E  0012               	return		;funcret
  5793  011010                     __end_of_displ_noteer:
  5794                           	opt stack 0
  5795                           tblptru	equ	0xFF8
  5796                           tblptrh	equ	0xFF7
  5797                           tblptrl	equ	0xFF6
  5798                           tablat	equ	0xFF5
  5799                           prodh	equ	0xFF4
  5800                           prodl	equ	0xFF3
  5801                           postinc0	equ	0xFEE
  5802                           wreg	equ	0xFE8
  5803                           indf2	equ	0xFDF
  5804                           fsr2h	equ	0xFDA
  5805                           fsr2l	equ	0xFD9
  5806                           status	equ	0xFD8
  5807                           
  5808 ;; *************** function _displ_code *****************
  5809 ;; Defined at:
  5810 ;;		line 72 in file "lcd.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  ercode          1    wreg     unsigned char 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;  ercode          1   27[COMRAM] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      void 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;Total ram usage:        3 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    7
  5831 ;; This function calls:
  5832 ;;		_lcd_writeC
  5833 ;; This function is called by:
  5834 ;;		_displ_noteer
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text40
  5839  010122                     __ptext40:
  5840                           	opt stack 0
  5841  010122                     _displ_code:
  5842                           	opt stack 22
  5843                           
  5844                           ;incstack = 0
  5845                           ;displ_code@ercode stored from wreg
  5846  010122  6E1C               	movwf	displ_code@ercode,c
  5847                           
  5848                           ;lcd.c: 74: if((ercode >> 4) < 0x0A)
  5849  010124  C01C  F01A         	movff	displ_code@ercode,??_displ_code
  5850  010128  3A1A               	swapf	??_displ_code,f,c
  5851  01012A  0E0F               	movlw	15
  5852  01012C  161A               	andwf	??_displ_code,f,c
  5853  01012E  0E0A               	movlw	10
  5854  010130  601A               	cpfslt	??_displ_code,c
  5855  010132  D01E               	goto	l1022
  5856                           
  5857                           ;lcd.c: 75: {
  5858                           ;lcd.c: 76: lcd_writeC((ercode >> 4) | 0x30);
  5859  010134  381C               	swapf	displ_code@ercode,w,c
  5860  010136  0B0F               	andlw	15
  5861  010138  0930               	iorlw	48
  5862  01013A  EC75  F085         	call	_lcd_writeC
  5863                           
  5864                           ;lcd.c: 77: }
  5865  01013E  D033               	goto	l1024
  5866  010140  0E41               	movlw	65
  5867  010142  EC75  F085         	call	_lcd_writeC
  5868                           
  5869                           ;lcd.c: 83: break;
  5870  010146  D02F               	goto	l1024
  5871  010148  0E42               	movlw	66
  5872  01014A  EC75  F085         	call	_lcd_writeC
  5873                           
  5874                           ;lcd.c: 85: break;
  5875  01014E  D02B               	goto	l1024
  5876  010150  0E43               	movlw	67
  5877  010152  EC75  F085         	call	_lcd_writeC
  5878                           
  5879                           ;lcd.c: 87: break;
  5880  010156  D027               	goto	l1024
  5881  010158  0E44               	movlw	68
  5882  01015A  EC75  F085         	call	_lcd_writeC
  5883                           
  5884                           ;lcd.c: 89: break;
  5885  01015E  D023               	goto	l1024
  5886  010160  0E45               	movlw	69
  5887  010162  EC75  F085         	call	_lcd_writeC
  5888                           
  5889                           ;lcd.c: 91: break;
  5890  010166  D01F               	goto	l1024
  5891  010168  0E46               	movlw	70
  5892  01016A  EC75  F085         	call	_lcd_writeC
  5893                           
  5894                           ;lcd.c: 93: }
  5895  01016E  D01B               	goto	l1024
  5896  010170                     l1022:
  5897  010170  381C               	swapf	displ_code@ercode,w,c
  5898  010172  0B0F               	andlw	15
  5899  010174  6E1A               	movwf	??_displ_code& (0+255),c
  5900  010176  6A1B               	clrf	(??_displ_code+1)& (0+255),c
  5901                           
  5902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5903                           ; Switch size 1, requested type "space"
  5904                           ; Number of cases is 1, Range of values is 0 to 0
  5905                           ; switch strategies available:
  5906                           ; Name         Instructions Cycles
  5907                           ; simple_byte            4     3 (average)
  5908                           ;	Chosen strategy is simple_byte
  5909  010178  501B               	movf	??_displ_code+1,w,c
  5910  01017A  0A00               	xorlw	0	; case 0
  5911  01017C  A4D8               	btfss	status,2,c
  5912  01017E  D013               	goto	l1024
  5913                           
  5914                           ; Switch size 1, requested type "space"
  5915                           ; Number of cases is 6, Range of values is 10 to 15
  5916                           ; switch strategies available:
  5917                           ; Name         Instructions Cycles
  5918                           ; simple_byte           19    10 (average)
  5919                           ;	Chosen strategy is simple_byte
  5920  010180  501A               	movf	??_displ_code,w,c
  5921  010182  0A0A               	xorlw	10	; case 10
  5922  010184  B4D8               	btfsc	status,2,c
  5923  010186  D7DC               	goto	l1023
  5924  010188  0A01               	xorlw	1	; case 11
  5925  01018A  B4D8               	btfsc	status,2,c
  5926  01018C  D7DD               	goto	l1025
  5927  01018E  0A07               	xorlw	7	; case 12
  5928  010190  B4D8               	btfsc	status,2,c
  5929  010192  D7DE               	goto	l1026
  5930  010194  0A01               	xorlw	1	; case 13
  5931  010196  B4D8               	btfsc	status,2,c
  5932  010198  D7DF               	goto	l1027
  5933  01019A  0A03               	xorlw	3	; case 14
  5934  01019C  B4D8               	btfsc	status,2,c
  5935  01019E  D7E0               	goto	l1028
  5936  0101A0  0A01               	xorlw	1	; case 15
  5937  0101A2  B4D8               	btfsc	status,2,c
  5938  0101A4  D7E1               	goto	l1029
  5939  0101A6                     l1024:
  5940                           
  5941                           ;lcd.c: 94: }
  5942                           ;lcd.c: 95: if((ercode & 0x0F) < 0x0A)
  5943  0101A6  C01C  F01A         	movff	displ_code@ercode,??_displ_code
  5944  0101AA  0E0F               	movlw	15
  5945  0101AC  161A               	andwf	??_displ_code,f,c
  5946  0101AE  0E0A               	movlw	10
  5947  0101B0  601A               	cpfslt	??_displ_code,c
  5948  0101B2  D01E               	goto	l1032
  5949                           
  5950                           ;lcd.c: 96: {
  5951                           ;lcd.c: 97: lcd_writeC((ercode & 0x0F) | 0x30);
  5952  0101B4  501C               	movf	displ_code@ercode,w,c
  5953  0101B6  0B0F               	andlw	15
  5954  0101B8  0930               	iorlw	48
  5955  0101BA  EC75  F085         	call	_lcd_writeC
  5956                           
  5957                           ;lcd.c: 98: }
  5958  0101BE  0012               	return	
  5959  0101C0  0E41               	movlw	65
  5960  0101C2  EC75  F085         	call	_lcd_writeC
  5961                           
  5962                           ;lcd.c: 104: break;
  5963  0101C6  0012               	return	
  5964  0101C8  0E42               	movlw	66
  5965  0101CA  EC75  F085         	call	_lcd_writeC
  5966                           
  5967                           ;lcd.c: 106: break;
  5968  0101CE  0012               	return	
  5969  0101D0  0E43               	movlw	67
  5970  0101D2  EC75  F085         	call	_lcd_writeC
  5971                           
  5972                           ;lcd.c: 108: break;
  5973  0101D6  0012               	return	
  5974  0101D8  0E44               	movlw	68
  5975  0101DA  EC75  F085         	call	_lcd_writeC
  5976                           
  5977                           ;lcd.c: 110: break;
  5978  0101DE  0012               	return	
  5979  0101E0  0E45               	movlw	69
  5980  0101E2  EC75  F085         	call	_lcd_writeC
  5981                           
  5982                           ;lcd.c: 112: break;
  5983  0101E6  0012               	return	
  5984  0101E8  0E46               	movlw	70
  5985  0101EA  EC75  F085         	call	_lcd_writeC
  5986                           
  5987                           ;lcd.c: 114: }
  5988  0101EE  0012               	return	
  5989  0101F0                     l1032:
  5990  0101F0  501C               	movf	displ_code@ercode,w,c
  5991  0101F2  0B0F               	andlw	15
  5992  0101F4  6E1A               	movwf	??_displ_code& (0+255),c
  5993  0101F6  6A1B               	clrf	(??_displ_code+1)& (0+255),c
  5994                           
  5995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5996                           ; Switch size 1, requested type "space"
  5997                           ; Number of cases is 1, Range of values is 0 to 0
  5998                           ; switch strategies available:
  5999                           ; Name         Instructions Cycles
  6000                           ; simple_byte            4     3 (average)
  6001                           ;	Chosen strategy is simple_byte
  6002  0101F8  501B               	movf	??_displ_code+1,w,c
  6003  0101FA  0A00               	xorlw	0	; case 0
  6004  0101FC  A4D8               	btfss	status,2,c
  6005  0101FE  0012               	return	
  6006                           
  6007                           ; Switch size 1, requested type "space"
  6008                           ; Number of cases is 6, Range of values is 10 to 15
  6009                           ; switch strategies available:
  6010                           ; Name         Instructions Cycles
  6011                           ; simple_byte           19    10 (average)
  6012                           ;	Chosen strategy is simple_byte
  6013  010200  501A               	movf	??_displ_code,w,c
  6014  010202  0A0A               	xorlw	10	; case 10
  6015  010204  B4D8               	btfsc	status,2,c
  6016  010206  D7DC               	goto	l1033
  6017  010208  0A01               	xorlw	1	; case 11
  6018  01020A  B4D8               	btfsc	status,2,c
  6019  01020C  D7DD               	goto	l1035
  6020  01020E  0A07               	xorlw	7	; case 12
  6021  010210  B4D8               	btfsc	status,2,c
  6022  010212  D7DE               	goto	l1036
  6023  010214  0A01               	xorlw	1	; case 13
  6024  010216  B4D8               	btfsc	status,2,c
  6025  010218  D7DF               	goto	l1037
  6026  01021A  0A03               	xorlw	3	; case 14
  6027  01021C  B4D8               	btfsc	status,2,c
  6028  01021E  D7E0               	goto	l1038
  6029  010220  0A01               	xorlw	1	; case 15
  6030  010222  A4D8               	btfss	status,2,c
  6031  010224  0012               	return	
  6032  010226  D7E0               	goto	l1039
  6033  010228                     __end_of_displ_code:
  6034                           	opt stack 0
  6035                           tblptru	equ	0xFF8
  6036                           tblptrh	equ	0xFF7
  6037                           tblptrl	equ	0xFF6
  6038                           tablat	equ	0xFF5
  6039                           prodh	equ	0xFF4
  6040                           prodl	equ	0xFF3
  6041                           postinc0	equ	0xFEE
  6042                           wreg	equ	0xFE8
  6043                           indf2	equ	0xFDF
  6044                           fsr2h	equ	0xFDA
  6045                           fsr2l	equ	0xFD9
  6046                           status	equ	0xFD8
  6047                           
  6048 ;; *************** function _displ_credit *****************
  6049 ;; Defined at:
  6050 ;;		line 64 in file "lcd.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  cash            1   31[COMRAM] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6068 ;;Total ram usage:        1 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    8
  6071 ;; This function calls:
  6072 ;;		_credit_check
  6073 ;;		_displ_hex
  6074 ;;		_lcd_string
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text41
  6081  010EDE                     __ptext41:
  6082                           	opt stack 0
  6083  010EDE                     _displ_credit:
  6084                           	opt stack 22
  6085                           
  6086                           ;lcd.c: 66: lcd_string(credits, line1);
  6087                           
  6088                           ;incstack = 0
  6089  010EDE  0EB8               	movlw	low _credits
  6090  010EE0  6E1A               	movwf	lcd_string@lcdstring,c
  6091  010EE2  0EFF               	movlw	high _credits
  6092  010EE4  6E1B               	movwf	lcd_string@lcdstring+1,c
  6093  010EE6  0EA8               	movlw	low _line1
  6094  010EE8  6EF6               	movwf	tblptrl,c
  6095  010EEA                     	if	1	;There is more than 1 active tblptr byte
  6096  010EEA  0EFE               	movlw	high _line1
  6097  010EEC  6EF7               	movwf	tblptrh,c
  6098  010EEE                     	endif
  6099  010EEE                     	if	1	;There are 3 active tblptr bytes
  6100  010EEE  0E00               	movlw	low (_line1 shr (0+16))
  6101  010EF0  6EF8               	movwf	tblptru,c
  6102  010EF2                     	endif
  6103  010EF2  0008               	tblrd		*
  6104  010EF4  CFF5 F01C          	movff	tablat,lcd_string@lcdline
  6105  010EF8  EC0F  F082         	call	_lcd_string	;wreg free
  6106                           
  6107                           ;lcd.c: 67: uint8_t cash = credit_check();
  6108  010EFC  EC47  F088         	call	_credit_check	;wreg free
  6109  010F00  6E20               	movwf	displ_credit@cash,c
  6110                           
  6111                           ;lcd.c: 68: displ_hex((uint8_t) cash);
  6112  010F02  5020               	movf	displ_credit@cash,w,c
  6113  010F04  6E1D               	movwf	displ_hex@hexnum,c
  6114  010F06  6A1E               	clrf	displ_hex@hexnum+1,c
  6115  010F08  6A1F               	clrf	displ_hex@hexnum+2,c
  6116  010F0A  ECE8  F082         	call	_displ_hex	;wreg free
  6117                           
  6118                           ;lcd.c: 69: venflags.credisplay = 0;
  6119  010F0E  982B               	bcf	_venflags,4,c
  6120  010F10  0012               	return		;funcret
  6121  010F12                     __end_of_displ_credit:
  6122                           	opt stack 0
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           postinc0	equ	0xFEE
  6130                           wreg	equ	0xFE8
  6131                           indf2	equ	0xFDF
  6132                           fsr2h	equ	0xFDA
  6133                           fsr2l	equ	0xFD9
  6134                           status	equ	0xFD8
  6135                           
  6136 ;; *************** function _lcd_string *****************
  6137 ;; Defined at:
  6138 ;;		line 154 in file "lcd.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  lcdstring       2   25[COMRAM] PTR unsigned char 
  6141 ;;		 -> setnotes(69), initnote(37), inithop(20), noteerr(28), 
  6142 ;;		 -> credits(13), disabled(9), enabled(9), RAM(3719), 
  6143 ;;		 -> servmsg(81), inscoin(22), 
  6144 ;;  lcdline         1   27[COMRAM] unsigned char 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6156 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6159 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6160 ;;Total ram usage:        5 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    7
  6163 ;; This function calls:
  6164 ;;		_lcd_dispadd
  6165 ;;		_lcd_write
  6166 ;;		_lcd_writeC
  6167 ;; This function is called by:
  6168 ;;		_main
  6169 ;;		_enter_service
  6170 ;;		_displ_note
  6171 ;;		_displ_nendis
  6172 ;;		_displ_credit
  6173 ;;		_displ_noteer
  6174 ;;		_vend_init
  6175 ;;		_set_notes
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text42
  6180  01041E                     __ptext42:
  6181                           	opt stack 0
  6182  01041E                     _lcd_string:
  6183                           	opt stack 22
  6184                           
  6185                           ;lcd.c: 156: if(lcdline == line1)
  6186                           
  6187                           ;incstack = 0
  6188  01041E  0EA8               	movlw	low _line1
  6189  010420  6EF6               	movwf	tblptrl,c
  6190  010422                     	if	1	;There is more than 1 active tblptr byte
  6191  010422  0EFE               	movlw	high _line1
  6192  010424  6EF7               	movwf	tblptrh,c
  6193  010426                     	endif
  6194  010426                     	if	1	;There are 3 active tblptr bytes
  6195  010426  0E00               	movlw	low (_line1 shr (0+16))
  6196  010428  6EF8               	movwf	tblptru,c
  6197  01042A                     	endif
  6198  01042A  0008               	tblrd		*
  6199  01042C  50F5               	movf	tablat,w,c
  6200  01042E  621C               	cpfseq	lcd_string@lcdline,c
  6201  010430  D00B               	goto	l1056
  6202                           
  6203                           ;lcd.c: 157: {
  6204                           ;lcd.c: 158: lcd_write(dispclr);
  6205  010432  0EB2               	movlw	low _dispclr
  6206  010434  6EF6               	movwf	tblptrl,c
  6207  010436                     	if	1	;There is more than 1 active tblptr byte
  6208  010436  0EFE               	movlw	high _dispclr
  6209  010438  6EF7               	movwf	tblptrh,c
  6210  01043A                     	endif
  6211  01043A                     	if	1	;There are 3 active tblptr bytes
  6212  01043A  0E00               	movlw	low (_dispclr shr (0+16))
  6213  01043C  6EF8               	movwf	tblptru,c
  6214  01043E                     	endif
  6215  01043E  0008               	tblrd		*
  6216  010440  50F5               	movf	tablat,w,c
  6217  010442  ECD7  F087         	call	_lcd_write
  6218                           
  6219                           ;lcd.c: 159: }
  6220  010446  D003               	goto	l1057
  6221  010448                     l1056:
  6222                           
  6223                           ;lcd.c: 160: else
  6224                           ;lcd.c: 161: {
  6225                           ;lcd.c: 162: lcd_dispadd(lcdline);
  6226  010448  501C               	movf	lcd_string@lcdline,w,c
  6227  01044A  ECCF  F088         	call	_lcd_dispadd
  6228  01044E                     l1057:
  6229                           
  6230                           ;lcd.c: 163: }
  6231                           ;lcd.c: 164: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
  6232  01044E  0E00               	movlw	0
  6233  010450  6E3E               	movwf	_stradd,c
  6234  010452  D03A               	goto	l1058
  6235  010454                     
  6236                           ;lcd.c: 165: {
  6237                           ;lcd.c: 166: lcdata = lcdstring[stradd];
  6238  010454  503E               	movf	_stradd,w,c
  6239  010456  0D01               	mullw	1
  6240  010458  C01A  F01D         	movff	lcd_string@lcdstring,??_lcd_string
  6241  01045C  C01B  F01E         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  6242  010460  50F3               	movf	prodl,w,c
  6243  010462  261D               	addwf	??_lcd_string,f,c
  6244  010464  50F4               	movf	prodh,w,c
  6245  010466  221E               	addwfc	??_lcd_string+1,f,c
  6246  010468  C01D  FFF6         	movff	??_lcd_string,tblptrl
  6247  01046C  C01E  FFF7         	movff	??_lcd_string+1,tblptrh
  6248  010470  0E00               	movlw	low (__mediumconst shr (0+16))
  6249  010472  6EF8               	movwf	tblptru,c
  6250  010474  0E0E               	movlw	(high __ramtop+-1)
  6251  010476  64F7               	cpfsgt	tblptrh,c
  6252  010478  D003               	bra	u1677
  6253  01047A  0008               	tblrd		*
  6254  01047C  50F5               	movf	tablat,w,c
  6255  01047E  D005               	bra	u1670
  6256  010480                     u1677:
  6257  010480  CFF6 FFE9          	movff	tblptrl,fsr0l
  6258  010484  CFF7 FFEA          	movff	tblptrh,fsr0h
  6259  010488  50EF               	movf	indf0,w,c
  6260  01048A                     u1670:
  6261  01048A  6E40               	movwf	_lcdata,c
  6262                           
  6263                           ;lcd.c: 167: lcd_writeC(lcdstring[stradd]);
  6264  01048C  503E               	movf	_stradd,w,c
  6265  01048E  0D01               	mullw	1
  6266  010490  C01A  F01D         	movff	lcd_string@lcdstring,??_lcd_string
  6267  010494  C01B  F01E         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  6268  010498  50F3               	movf	prodl,w,c
  6269  01049A  261D               	addwf	??_lcd_string,f,c
  6270  01049C  50F4               	movf	prodh,w,c
  6271  01049E  221E               	addwfc	??_lcd_string+1,f,c
  6272  0104A0  C01D  FFF6         	movff	??_lcd_string,tblptrl
  6273  0104A4  C01E  FFF7         	movff	??_lcd_string+1,tblptrh
  6274  0104A8  0E00               	movlw	low (__mediumconst shr (0+16))
  6275  0104AA  6EF8               	movwf	tblptru,c
  6276  0104AC  0E0E               	movlw	(high __ramtop+-1)
  6277  0104AE  64F7               	cpfsgt	tblptrh,c
  6278  0104B0  D003               	bra	u1687
  6279  0104B2  0008               	tblrd		*
  6280  0104B4  50F5               	movf	tablat,w,c
  6281  0104B6  D005               	bra	u1680
  6282  0104B8                     u1687:
  6283  0104B8  CFF6 FFE9          	movff	tblptrl,fsr0l
  6284  0104BC  CFF7 FFEA          	movff	tblptrh,fsr0h
  6285  0104C0  50EF               	movf	indf0,w,c
  6286  0104C2                     u1680:
  6287  0104C2  EC75  F085         	call	_lcd_writeC
  6288  0104C6  2A3E               	incf	_stradd,f,c
  6289  0104C8                     l1058:
  6290  0104C8  503E               	movf	_stradd,w,c
  6291  0104CA  0D01               	mullw	1
  6292  0104CC  C01A  F01D         	movff	lcd_string@lcdstring,??_lcd_string
  6293  0104D0  C01B  F01E         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  6294  0104D4  50F3               	movf	prodl,w,c
  6295  0104D6  261D               	addwf	??_lcd_string,f,c
  6296  0104D8  50F4               	movf	prodh,w,c
  6297  0104DA  221E               	addwfc	??_lcd_string+1,f,c
  6298  0104DC  C01D  FFF6         	movff	??_lcd_string,tblptrl
  6299  0104E0  C01E  FFF7         	movff	??_lcd_string+1,tblptrh
  6300  0104E4  0E00               	movlw	low (__mediumconst shr (0+16))
  6301  0104E6  6EF8               	movwf	tblptru,c
  6302  0104E8  0E0E               	movlw	(high __ramtop+-1)
  6303  0104EA  64F7               	cpfsgt	tblptrh,c
  6304  0104EC  D003               	bra	u1697
  6305  0104EE  0008               	tblrd		*
  6306  0104F0  50F5               	movf	tablat,w,c
  6307  0104F2  D005               	bra	u1690
  6308  0104F4                     u1697:
  6309  0104F4  CFF6 FFE9          	movff	tblptrl,fsr0l
  6310  0104F8  CFF7 FFEA          	movff	tblptrh,fsr0h
  6311  0104FC  50EF               	movf	indf0,w,c
  6312  0104FE                     u1690:
  6313  0104FE  0900               	iorlw	0
  6314  010500  B4D8               	btfsc	status,2,c
  6315  010502  0012               	return	
  6316  010504  D7A7               	goto	l1059
  6317  010506                     __end_of_lcd_string:
  6318                           	opt stack 0
  6319                           tblptru	equ	0xFF8
  6320                           tblptrh	equ	0xFF7
  6321                           tblptrl	equ	0xFF6
  6322                           tablat	equ	0xFF5
  6323                           prodh	equ	0xFF4
  6324                           prodl	equ	0xFF3
  6325                           indf0	equ	0xFEF
  6326                           postinc0	equ	0xFEE
  6327                           fsr0h	equ	0xFEA
  6328                           fsr0l	equ	0xFE9
  6329                           wreg	equ	0xFE8
  6330                           indf2	equ	0xFDF
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _displ_hex *****************
  6336 ;; Defined at:
  6337 ;;		line 129 in file "lcd.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  hexnum          3   28[COMRAM] unsigned um
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  value           8    0[BANK0 ] unsigned char [8]
  6342 ;;  hexnumsave      3    8[BANK0 ] unsigned um
  6343 ;;  i               1   11[BANK0 ] char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      void 
  6346 ;; Registers used:
  6347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6353 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6357 ;;Total ram usage:       15 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    7
  6360 ;; This function calls:
  6361 ;;		___ltdiv
  6362 ;;		___ltmod
  6363 ;;		_lcd_writeC
  6364 ;; This function is called by:
  6365 ;;		_displ_credit
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text43
  6370  0105D0                     __ptext43:
  6371                           	opt stack 0
  6372  0105D0                     _displ_hex:
  6373                           	opt stack 22
  6374                           
  6375                           ;lcd.c: 131: signed char i = 0;
  6376                           
  6377                           ;incstack = 0
  6378  0105D0  0E00               	movlw	0
  6379  0105D2  0100               	movlb	0	; () banked
  6380  0105D4  6F8B               	movwf	displ_hex@i& (0+255),b
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;lcd.c: 132: uint8_t value[8];
  6384                           ;lcd.c: 133: uint24_t hexnumsave = hexnum;
  6385  0105D6  C01D  F088         	movff	displ_hex@hexnum,displ_hex@hexnumsave
  6386  0105DA  C01E  F089         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
  6387  0105DE  C01F  F08A         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
  6388                           
  6389                           ;lcd.c: 134: while(hexnum > 0)
  6390  0105E2  D02F               	goto	l1046
  6391  0105E4                     
  6392                           ; BSR set to: 0
  6393                           ;lcd.c: 135: {
  6394                           ;lcd.c: 136: value[i] = hexnum % 10;
  6395                           
  6396                           ; BSR set to: 0
  6397  0105E4  518B               	movf	displ_hex@i& (0+255),w,b
  6398  0105E6  0D01               	mullw	1
  6399  0105E8  0E80               	movlw	low displ_hex@value
  6400  0105EA  24F3               	addwf	prodl,w,c
  6401  0105EC  6ED9               	movwf	fsr2l,c
  6402  0105EE  0E00               	movlw	high displ_hex@value
  6403  0105F0  20F4               	addwfc	prodh,w,c
  6404  0105F2  6EDA               	movwf	fsr2h,c
  6405  0105F4  C01D  F013         	movff	displ_hex@hexnum,___ltmod@dividend
  6406  0105F8  C01E  F014         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
  6407  0105FC  C01F  F015         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
  6408  010600  0E0A               	movlw	10
  6409  010602  6E16               	movwf	___ltmod@divisor,c
  6410  010604  0E00               	movlw	0
  6411  010606  6E17               	movwf	___ltmod@divisor+1,c
  6412  010608  0E00               	movlw	0
  6413  01060A  6E18               	movwf	___ltmod@divisor+2,c
  6414  01060C  ECFD  F085         	call	___ltmod	;wreg free
  6415  010610  5013               	movf	?___ltmod,w,c
  6416  010612  6EDF               	movwf	indf2,c
  6417                           
  6418                           ;lcd.c: 137: hexnum /= 10;
  6419  010614  C01D  F013         	movff	displ_hex@hexnum,___ltdiv@dividend
  6420  010618  C01E  F014         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
  6421  01061C  C01F  F015         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
  6422  010620  0E0A               	movlw	10
  6423  010622  6E16               	movwf	___ltdiv@divisor,c
  6424  010624  0E00               	movlw	0
  6425  010626  6E17               	movwf	___ltdiv@divisor+1,c
  6426  010628  0E00               	movlw	0
  6427  01062A  6E18               	movwf	___ltdiv@divisor+2,c
  6428  01062C  EC40  F085         	call	___ltdiv	;wreg free
  6429  010630  C013  F01D         	movff	?___ltdiv,displ_hex@hexnum
  6430  010634  C014  F01E         	movff	?___ltdiv+1,displ_hex@hexnum+1
  6431  010638  C015  F01F         	movff	?___ltdiv+2,displ_hex@hexnum+2
  6432                           
  6433                           ;lcd.c: 138: i = i + 1;
  6434  01063C  0100               	movlb	0	; () banked
  6435  01063E  298B               	incf	displ_hex@i& (0+255),w,b
  6436  010640  6F8B               	movwf	displ_hex@i& (0+255),b
  6437  010642                     l1046:
  6438                           
  6439                           ; BSR set to: 0
  6440                           
  6441                           ; BSR set to: 0
  6442  010642  501D               	movf	displ_hex@hexnum,w,c
  6443  010644  101E               	iorwf	displ_hex@hexnum+1,w,c
  6444  010646  101F               	iorwf	displ_hex@hexnum+2,w,c
  6445  010648  B4D8               	btfsc	status,2,c
  6446  01064A  D00E               	goto	l1049
  6447  01064C  D7CB               	goto	l1047
  6448  01064E                     
  6449                           ; BSR set to: 0
  6450                           ;lcd.c: 142: {
  6451                           ;lcd.c: 143: i--;
  6452                           
  6453                           ; BSR set to: 0
  6454  01064E  078B               	decf	displ_hex@i& (0+255),f,b
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;lcd.c: 144: lcd_writeC(value[i] | 0x30);
  6458  010650  518B               	movf	displ_hex@i& (0+255),w,b
  6459  010652  0D01               	mullw	1
  6460  010654  0E80               	movlw	low displ_hex@value
  6461  010656  24F3               	addwf	prodl,w,c
  6462  010658  6ED9               	movwf	fsr2l,c
  6463  01065A  0E00               	movlw	high displ_hex@value
  6464  01065C  20F4               	addwfc	prodh,w,c
  6465  01065E  6EDA               	movwf	fsr2h,c
  6466  010660  50DF               	movf	indf2,w,c
  6467  010662  0930               	iorlw	48
  6468  010664  EC75  F085         	call	_lcd_writeC
  6469  010668                     l1049:
  6470  010668  0100               	movlb	0	; () banked
  6471  01066A  518B               	movf	displ_hex@i& (0+255),w,b
  6472  01066C  0A80               	xorlw	128
  6473  01066E  0F7F               	addlw	-129
  6474  010670  B0D8               	btfsc	status,0,c
  6475  010672  D7ED               	goto	l1050
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;lcd.c: 145: }
  6479                           ;lcd.c: 147: if(hexnumsave == 0)
  6480                           
  6481                           ; BSR set to: 0
  6482  010674  5188               	movf	displ_hex@hexnumsave& (0+255),w,b
  6483  010676  1189               	iorwf	(displ_hex@hexnumsave+1)& (0+255),w,b
  6484  010678  118A               	iorwf	(displ_hex@hexnumsave+2)& (0+255),w,b
  6485  01067A  A4D8               	btfss	status,2,c
  6486  01067C  0012               	return	
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;lcd.c: 148: {
  6490                           ;lcd.c: 149: lcd_writeC(0x30);
  6491  01067E  0E30               	movlw	48
  6492  010680  EC75  F085         	call	_lcd_writeC
  6493  010684  0012               	return	
  6494  010686                     __end_of_displ_hex:
  6495                           	opt stack 0
  6496                           tblptru	equ	0xFF8
  6497                           tblptrh	equ	0xFF7
  6498                           tblptrl	equ	0xFF6
  6499                           tablat	equ	0xFF5
  6500                           prodh	equ	0xFF4
  6501                           prodl	equ	0xFF3
  6502                           indf0	equ	0xFEF
  6503                           postinc0	equ	0xFEE
  6504                           fsr0h	equ	0xFEA
  6505                           fsr0l	equ	0xFE9
  6506                           wreg	equ	0xFE8
  6507                           indf2	equ	0xFDF
  6508                           fsr2h	equ	0xFDA
  6509                           fsr2l	equ	0xFD9
  6510                           status	equ	0xFD8
  6511                           
  6512 ;; *************** function _lcd_writeC *****************
  6513 ;; Defined at:
  6514 ;;		line 171 in file "lcd.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  lcdata          1    wreg     unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  lcdata          1   24[COMRAM] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;Total ram usage:        1 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    6
  6535 ;; This function calls:
  6536 ;;		_lcd_dispadd
  6537 ;;		_lcd_write
  6538 ;; This function is called by:
  6539 ;;		_displ_code
  6540 ;;		_displ_hex
  6541 ;;		_lcd_string
  6542 ;;		_lcd_test
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text44
  6547  010AEA                     __ptext44:
  6548                           	opt stack 0
  6549  010AEA                     _lcd_writeC:
  6550                           	opt stack 22
  6551                           
  6552                           ;incstack = 0
  6553                           ;lcd_writeC@lcdata stored from wreg
  6554  010AEA  6E19               	movwf	lcd_writeC@lcdata,c
  6555  010AEC  8487               	bsf	3975,2,c	;# 
  6556                           
  6557                           ;lcd.c: 176: lcd_write(lcdata);
  6558  010AEE  5019               	movf	lcd_writeC@lcdata,w,c
  6559  010AF0  ECD7  F087         	call	_lcd_write
  6560                           
  6561                           ;lcd.c: 180: switch(bflag)
  6562  010AF4  D021               	goto	l1064
  6563  010AF6  0EA7               	movlw	low _line2
  6564  010AF8  6EF6               	movwf	tblptrl,c
  6565  010AFA                     	if	1	;There is more than 1 active tblptr byte
  6566  010AFA  0EFE               	movlw	high _line2
  6567  010AFC  6EF7               	movwf	tblptrh,c
  6568  010AFE                     	endif
  6569  010AFE                     	if	1	;There are 3 active tblptr bytes
  6570  010AFE  0E00               	movlw	low (_line2 shr (0+16))
  6571  010B00  6EF8               	movwf	tblptru,c
  6572  010B02                     	endif
  6573  010B02  0008               	tblrd		*
  6574  010B04  50F5               	movf	tablat,w,c
  6575  010B06  ECCF  F088         	call	_lcd_dispadd
  6576                           
  6577                           ;lcd.c: 183: break;
  6578  010B0A  D020               	goto	l1066
  6579  010B0C  0EA6               	movlw	low _line3
  6580  010B0E  6EF6               	movwf	tblptrl,c
  6581  010B10                     	if	1	;There is more than 1 active tblptr byte
  6582  010B10  0EFE               	movlw	high _line3
  6583  010B12  6EF7               	movwf	tblptrh,c
  6584  010B14                     	endif
  6585  010B14                     	if	1	;There are 3 active tblptr bytes
  6586  010B14  0E00               	movlw	low (_line3 shr (0+16))
  6587  010B16  6EF8               	movwf	tblptru,c
  6588  010B18                     	endif
  6589  010B18  0008               	tblrd		*
  6590  010B1A  50F5               	movf	tablat,w,c
  6591  010B1C  ECCF  F088         	call	_lcd_dispadd
  6592                           
  6593                           ;lcd.c: 185: break;
  6594  010B20  D015               	goto	l1066
  6595  010B22  0EA5               	movlw	low _line4
  6596  010B24  6EF6               	movwf	tblptrl,c
  6597  010B26                     	if	1	;There is more than 1 active tblptr byte
  6598  010B26  0EFE               	movlw	high _line4
  6599  010B28  6EF7               	movwf	tblptrh,c
  6600  010B2A                     	endif
  6601  010B2A                     	if	1	;There are 3 active tblptr bytes
  6602  010B2A  0E00               	movlw	low (_line4 shr (0+16))
  6603  010B2C  6EF8               	movwf	tblptru,c
  6604  010B2E                     	endif
  6605  010B2E  0008               	tblrd		*
  6606  010B30  50F5               	movf	tablat,w,c
  6607  010B32  ECCF  F088         	call	_lcd_dispadd
  6608                           
  6609                           ;lcd.c: 187: }
  6610  010B36  D00A               	goto	l1066
  6611  010B38                     l1064:
  6612  010B38  5042               	movf	_bflag,w,c
  6613                           
  6614                           ; Switch size 1, requested type "space"
  6615                           ; Number of cases is 3, Range of values is 19 to 83
  6616                           ; switch strategies available:
  6617                           ; Name         Instructions Cycles
  6618                           ; simple_byte           10     6 (average)
  6619                           ;	Chosen strategy is simple_byte
  6620  010B3A  0A13               	xorlw	19	; case 19
  6621  010B3C  B4D8               	btfsc	status,2,c
  6622  010B3E  D7DB               	goto	l1065
  6623  010B40  0A34               	xorlw	52	; case 39
  6624  010B42  B4D8               	btfsc	status,2,c
  6625  010B44  D7EE               	goto	l1068
  6626  010B46  0A74               	xorlw	116	; case 83
  6627  010B48  B4D8               	btfsc	status,2,c
  6628  010B4A  D7E0               	goto	l1067
  6629  010B4C                     l1066:
  6630  010B4C  9487               	bcf	3975,2,c	;# 
  6631  010B4E  0012               	return		;funcret
  6632  010B50                     __end_of_lcd_writeC:
  6633                           	opt stack 0
  6634                           tblptru	equ	0xFF8
  6635                           tblptrh	equ	0xFF7
  6636                           tblptrl	equ	0xFF6
  6637                           tablat	equ	0xFF5
  6638                           prodh	equ	0xFF4
  6639                           prodl	equ	0xFF3
  6640                           indf0	equ	0xFEF
  6641                           postinc0	equ	0xFEE
  6642                           fsr0h	equ	0xFEA
  6643                           fsr0l	equ	0xFE9
  6644                           wreg	equ	0xFE8
  6645                           indf2	equ	0xFDF
  6646                           fsr2h	equ	0xFDA
  6647                           fsr2l	equ	0xFD9
  6648                           status	equ	0xFD8
  6649                           
  6650 ;; *************** function _lcd_dispadd *****************
  6651 ;; Defined at:
  6652 ;;		line 191 in file "lcd.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  lcdaddress      1    wreg     unsigned char 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  lcdaddress      1   22[COMRAM] unsigned char 
  6657 ;;  lcdatasave      1   23[COMRAM] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6671 ;;Total ram usage:        2 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    5
  6674 ;; This function calls:
  6675 ;;		_lcd_write
  6676 ;; This function is called by:
  6677 ;;		_lcd_string
  6678 ;;		_lcd_writeC
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text45
  6683  01119E                     __ptext45:
  6684                           	opt stack 0
  6685  01119E                     _lcd_dispadd:
  6686                           	opt stack 22
  6687                           
  6688                           ;incstack = 0
  6689                           ;lcd_dispadd@lcdaddress stored from wreg
  6690  01119E  6E17               	movwf	lcd_dispadd@lcdaddress,c
  6691                           
  6692                           ;lcd.c: 193: uint8_t lcdatasave = lcdata;
  6693  0111A0  C040  F018         	movff	_lcdata,lcd_dispadd@lcdatasave
  6694  0111A4  9487               	bcf	3975,2,c	;# 
  6695                           
  6696                           ;lcd.c: 196: lcd_write(lcdaddress);
  6697  0111A6  5017               	movf	lcd_dispadd@lcdaddress,w,c
  6698  0111A8  ECD7  F087         	call	_lcd_write
  6699  0111AC  8487               	bsf	3975,2,c	;# 
  6700                           
  6701                           ;lcd.c: 198: lcdata = lcdatasave;
  6702  0111AE  C018  F040         	movff	lcd_dispadd@lcdatasave,_lcdata
  6703  0111B2  0012               	return		;funcret
  6704  0111B4                     __end_of_lcd_dispadd:
  6705                           	opt stack 0
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           prodh	equ	0xFF4
  6711                           prodl	equ	0xFF3
  6712                           indf0	equ	0xFEF
  6713                           postinc0	equ	0xFEE
  6714                           fsr0h	equ	0xFEA
  6715                           fsr0l	equ	0xFE9
  6716                           wreg	equ	0xFE8
  6717                           indf2	equ	0xFDF
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function _lcd_write *****************
  6723 ;; Defined at:
  6724 ;;		line 203 in file "lcd.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  lcdata          1    wreg     unsigned char 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  lcdata          1   21[COMRAM] unsigned char 
  6729 ;;  savelatd        1   20[COMRAM] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6743 ;;Total ram usage:        2 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    4
  6746 ;; This function calls:
  6747 ;;		_lcd_clockE
  6748 ;;		_read_busy
  6749 ;; This function is called by:
  6750 ;;		_lcd_init
  6751 ;;		_displ_note
  6752 ;;		_lcd_string
  6753 ;;		_lcd_writeC
  6754 ;;		_lcd_dispadd
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text46
  6759  010FAE                     __ptext46:
  6760                           	opt stack 0
  6761  010FAE                     _lcd_write:
  6762                           	opt stack 23
  6763                           
  6764                           ;incstack = 0
  6765                           ;lcd_write@lcdata stored from wreg
  6766  010FAE  6E16               	movwf	lcd_write@lcdata,c
  6767                           
  6768                           ;lcd.c: 205: uint8_t savelatd = LATD;
  6769  010FB0  CF86 F015          	movff	3974,lcd_write@savelatd	;volatile
  6770                           
  6771                           ;lcd.c: 208: bflag = read_busy();
  6772  010FB4  ECC3  F086         	call	_read_busy	;wreg free
  6773  010FB8  D002               	goto	L14
  6774  010FBA                     
  6775                           ;lcd.c: 210: {
  6776                           ;lcd.c: 211: bflag = read_busy();
  6777  010FBA  ECC3  F086         	call	_read_busy	;wreg free
  6778  010FBE                     L14:
  6779  010FBE  6E42               	movwf	_bflag,c
  6780  010FC0  BE42               	btfsc	_bflag,7,c
  6781  010FC2  D7FB               	goto	l1076
  6782                           
  6783                           ;lcd.c: 212: }
  6784                           ;lcd.c: 213: LATD = (lcdata >> 4) & 0x0F;
  6785  010FC4  3816               	swapf	lcd_write@lcdata,w,c
  6786  010FC6  0B0F               	andlw	15
  6787  010FC8  0B0F               	andlw	15
  6788  010FCA  6E86               	movwf	3974,c	;volatile
  6789                           
  6790                           ;lcd.c: 215: lcd_clockE();
  6791  010FCC  EC06  F089         	call	_lcd_clockE	;wreg free
  6792                           
  6793                           ;lcd.c: 217: LATD = lcdata & 0x0F;
  6794  010FD0  5016               	movf	lcd_write@lcdata,w,c
  6795  010FD2  0B0F               	andlw	15
  6796  010FD4  6E86               	movwf	3974,c	;volatile
  6797                           
  6798                           ;lcd.c: 218: lcd_clockE();
  6799  010FD6  EC06  F089         	call	_lcd_clockE	;wreg free
  6800                           
  6801                           ;lcd.c: 219: LATD = savelatd;
  6802  010FDA  C015  FF86         	movff	lcd_write@savelatd,3974	;volatile
  6803  010FDE  0012               	return		;funcret
  6804  010FE0                     __end_of_lcd_write:
  6805                           	opt stack 0
  6806                           tblptru	equ	0xFF8
  6807                           tblptrh	equ	0xFF7
  6808                           tblptrl	equ	0xFF6
  6809                           tablat	equ	0xFF5
  6810                           prodh	equ	0xFF4
  6811                           prodl	equ	0xFF3
  6812                           indf0	equ	0xFEF
  6813                           postinc0	equ	0xFEE
  6814                           fsr0h	equ	0xFEA
  6815                           fsr0l	equ	0xFE9
  6816                           wreg	equ	0xFE8
  6817                           indf2	equ	0xFDF
  6818                           fsr2h	equ	0xFDA
  6819                           fsr2l	equ	0xFD9
  6820                           status	equ	0xFD8
  6821                           
  6822 ;; *************** function _read_busy *****************
  6823 ;; Defined at:
  6824 ;;		line 234 in file "lcd.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;		None
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;  savelatd        1   19[COMRAM] unsigned char 
  6829 ;;  savelate        1   18[COMRAM] unsigned char 
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  1    wreg      char 
  6832 ;; Registers used:
  6833 ;;		wreg, status,2, status,0, cstack
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6843 ;;Total ram usage:        2 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    3
  6846 ;; This function calls:
  6847 ;;		_lcd_clockH
  6848 ;;		_lcd_clockL
  6849 ;; This function is called by:
  6850 ;;		_lcd_write
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text47
  6855  010D86                     __ptext47:
  6856                           	opt stack 0
  6857  010D86                     _read_busy:
  6858                           	opt stack 23
  6859                           
  6860                           ;lcd.c: 236: uint8_t savelate = LATE;
  6861                           
  6862                           ;incstack = 0
  6863  010D86  CF87 F013          	movff	3975,read_busy@savelate	;volatile
  6864                           
  6865                           ;lcd.c: 237: uint8_t savelatd = LATD;
  6866  010D8A  CF86 F014          	movff	3974,read_busy@savelatd	;volatile
  6867  010D8E  9487               	bcf	3975,2,c	;# 
  6868  010D90  8287               	bsf	3975,1,c	;# 
  6869                           
  6870                           ;lcd.c: 240: TRISD = (TRISD | 0x0F);
  6871  010D92  508B               	movf	3979,w,c	;volatile
  6872  010D94  090F               	iorlw	15
  6873  010D96  6E8B               	movwf	3979,c	;volatile
  6874                           
  6875                           ;lcd.c: 241: lcd_clockH();
  6876  010D98  EC22  F089         	call	_lcd_clockH	;wreg free
  6877                           
  6878                           ;lcd.c: 242: bflag = (PORTD << 4);
  6879  010D9C  3890               	swapf	3984,w,c	;volatile
  6880  010D9E  0BF0               	andlw	240
  6881  010DA0  6E42               	movwf	_bflag,c
  6882                           
  6883                           ;lcd.c: 243: lcd_clockL();
  6884  010DA2  EC1E  F089         	call	_lcd_clockL	;wreg free
  6885                           
  6886                           ;lcd.c: 244: lcd_clockH();
  6887  010DA6  EC22  F089         	call	_lcd_clockH	;wreg free
  6888                           
  6889                           ;lcd.c: 245: bflag = bflag | (PORTD & 0x0F);
  6890  010DAA  5090               	movf	3984,w,c	;volatile
  6891  010DAC  0B0F               	andlw	15
  6892  010DAE  1042               	iorwf	_bflag,w,c
  6893  010DB0  6E42               	movwf	_bflag,c
  6894  010DB2  9087               	bcf	3975,0,c	;# 
  6895                           
  6896                           ;lcd.c: 247: TRISD = (TRISD & 0xF0);
  6897  010DB4  508B               	movf	3979,w,c	;volatile
  6898  010DB6  0BF0               	andlw	240
  6899  010DB8  6E8B               	movwf	3979,c	;volatile
  6900  010DBA  9287               	bcf	3975,1,c	;# 
  6901                           
  6902                           ;lcd.c: 249: LATD = savelatd;
  6903  010DBC  C014  FF86         	movff	read_busy@savelatd,3974	;volatile
  6904                           
  6905                           ;lcd.c: 250: LATE = savelate;
  6906  010DC0  C013  FF87         	movff	read_busy@savelate,3975	;volatile
  6907                           
  6908                           ;lcd.c: 251: return(bflag);
  6909  010DC4  5042               	movf	_bflag,w,c
  6910  010DC6  0012               	return	
  6911  010DC8                     __end_of_read_busy:
  6912                           	opt stack 0
  6913                           tblptru	equ	0xFF8
  6914                           tblptrh	equ	0xFF7
  6915                           tblptrl	equ	0xFF6
  6916                           tablat	equ	0xFF5
  6917                           prodh	equ	0xFF4
  6918                           prodl	equ	0xFF3
  6919                           indf0	equ	0xFEF
  6920                           postinc0	equ	0xFEE
  6921                           fsr0h	equ	0xFEA
  6922                           fsr0l	equ	0xFE9
  6923                           wreg	equ	0xFE8
  6924                           indf2	equ	0xFDF
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function _lcd_clockL *****************
  6930 ;; Defined at:
  6931 ;;		line 266 in file "lcd.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;		None
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		None
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6949 ;;Total ram usage:        0 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:    2
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_read_busy
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text48
  6960  01123C                     __ptext48:
  6961                           	opt stack 0
  6962  01123C                     _lcd_clockL:
  6963                           	opt stack 23
  6964                           
  6965                           ;incstack = 0
  6966  01123C  9087               	bcf	3975,0,c	;# 
  6967                           
  6968                           ;lcd.c: 269: _delay((unsigned long)((1)*(12000000/4000000.0)));
  6969  01123E  D000               	nop2		;2 cycle nop
  6970  011240  F000               	nop	
  6971  011242  0012               	return		;funcret
  6972  011244                     __end_of_lcd_clockL:
  6973                           	opt stack 0
  6974                           tblptru	equ	0xFF8
  6975                           tblptrh	equ	0xFF7
  6976                           tblptrl	equ	0xFF6
  6977                           tablat	equ	0xFF5
  6978                           prodh	equ	0xFF4
  6979                           prodl	equ	0xFF3
  6980                           indf0	equ	0xFEF
  6981                           postinc0	equ	0xFEE
  6982                           fsr0h	equ	0xFEA
  6983                           fsr0l	equ	0xFE9
  6984                           wreg	equ	0xFE8
  6985                           indf2	equ	0xFDF
  6986                           fsr2h	equ	0xFDA
  6987                           fsr2l	equ	0xFD9
  6988                           status	equ	0xFD8
  6989                           
  6990 ;; *************** function _lcd_clockH *****************
  6991 ;; Defined at:
  6992 ;;		line 258 in file "lcd.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;		None
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;		None
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		None
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7010 ;;Total ram usage:        0 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    2
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_read_busy
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text49
  7021  011244                     __ptext49:
  7022                           	opt stack 0
  7023  011244                     _lcd_clockH:
  7024                           	opt stack 23
  7025                           
  7026                           ;incstack = 0
  7027  011244  8087               	bsf	3975,0,c	;# 
  7028                           
  7029                           ;lcd.c: 261: _delay((unsigned long)((1)*(12000000/4000000.0)));
  7030  011246  D000               	nop2		;2 cycle nop
  7031  011248  F000               	nop	
  7032  01124A  0012               	return		;funcret
  7033  01124C                     __end_of_lcd_clockH:
  7034                           	opt stack 0
  7035                           tblptru	equ	0xFF8
  7036                           tblptrh	equ	0xFF7
  7037                           tblptrl	equ	0xFF6
  7038                           tablat	equ	0xFF5
  7039                           prodh	equ	0xFF4
  7040                           prodl	equ	0xFF3
  7041                           indf0	equ	0xFEF
  7042                           postinc0	equ	0xFEE
  7043                           fsr0h	equ	0xFEA
  7044                           fsr0l	equ	0xFE9
  7045                           wreg	equ	0xFE8
  7046                           indf2	equ	0xFDF
  7047                           fsr2h	equ	0xFDA
  7048                           fsr2l	equ	0xFD9
  7049                           status	equ	0xFD8
  7050                           
  7051 ;; *************** function _lcd_clockE *****************
  7052 ;; Defined at:
  7053 ;;		line 274 in file "lcd.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;		None
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;		None
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      void 
  7060 ;; Registers used:
  7061 ;;		None
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7071 ;;Total ram usage:        0 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:    2
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_lcd_init
  7078 ;;		_lcd_write
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           	psect	text50
  7083  01120C                     __ptext50:
  7084                           	opt stack 0
  7085  01120C                     _lcd_clockE:
  7086                           	opt stack 24
  7087                           
  7088                           ;incstack = 0
  7089  01120C  8087               	bsf	3975,0,c	;# 
  7090                           
  7091                           ;lcd.c: 277: _delay((unsigned long)((1)*(12000000/4000000.0)));
  7092  01120E  D000               	nop2		;2 cycle nop
  7093  011210  F000               	nop	
  7094  011212  9087               	bcf	3975,0,c	;# 
  7095                           
  7096                           ;lcd.c: 279: _delay((unsigned long)((1)*(12000000/4000000.0)));
  7097  011214  D000               	nop2		;2 cycle nop
  7098  011216  F000               	nop	
  7099  011218  0012               	return		;funcret
  7100  01121A                     __end_of_lcd_clockE:
  7101                           	opt stack 0
  7102                           tblptru	equ	0xFF8
  7103                           tblptrh	equ	0xFF7
  7104                           tblptrl	equ	0xFF6
  7105                           tablat	equ	0xFF5
  7106                           prodh	equ	0xFF4
  7107                           prodl	equ	0xFF3
  7108                           indf0	equ	0xFEF
  7109                           postinc0	equ	0xFEE
  7110                           fsr0h	equ	0xFEA
  7111                           fsr0l	equ	0xFE9
  7112                           wreg	equ	0xFE8
  7113                           indf2	equ	0xFDF
  7114                           fsr2h	equ	0xFDA
  7115                           fsr2l	equ	0xFD9
  7116                           status	equ	0xFD8
  7117                           
  7118 ;; *************** function ___ltmod *****************
  7119 ;; Defined at:
  7120 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltmod.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  dividend        3   18[COMRAM] unsigned um
  7123 ;;  divisor         3   21[COMRAM] unsigned um
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  counter         1   24[COMRAM] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  3   18[COMRAM] unsigned um
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7135 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7138 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7139 ;;Total ram usage:        7 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    2
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_displ_hex
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text51
  7150  010BFA                     __ptext51:
  7151                           	opt stack 0
  7152  010BFA                     ___ltmod:
  7153                           	opt stack 26
  7154                           
  7155                           ;incstack = 0
  7156  010BFA  5016               	movf	___ltmod@divisor,w,c
  7157  010BFC  1017               	iorwf	___ltmod@divisor+1,w,c
  7158  010BFE  1018               	iorwf	___ltmod@divisor+2,w,c
  7159  010C00  B4D8               	btfsc	status,2,c
  7160  010C02  D01E               	goto	l2522
  7161  010C04  0E01               	movlw	1
  7162  010C06  6E19               	movwf	___ltmod@counter,c
  7163  010C08  D005               	goto	l2517
  7164  010C0A  90D8               	bcf	status,0,c
  7165  010C0C  3616               	rlcf	___ltmod@divisor,f,c
  7166  010C0E  3617               	rlcf	___ltmod@divisor+1,f,c
  7167  010C10  3618               	rlcf	___ltmod@divisor+2,f,c
  7168  010C12  2A19               	incf	___ltmod@counter,f,c
  7169  010C14                     l2517:
  7170  010C14  AE18               	btfss	___ltmod@divisor+2,7,c
  7171  010C16  D7F9               	goto	l2518
  7172  010C18                     u1790:
  7173  010C18  5016               	movf	___ltmod@divisor,w,c
  7174  010C1A  5C13               	subwf	___ltmod@dividend,w,c
  7175  010C1C  5017               	movf	___ltmod@divisor+1,w,c
  7176  010C1E  5814               	subwfb	___ltmod@dividend+1,w,c
  7177  010C20  5018               	movf	___ltmod@divisor+2,w,c
  7178  010C22  5815               	subwfb	___ltmod@dividend+2,w,c
  7179  010C24  A0D8               	btfss	status,0,c
  7180  010C26  D006               	goto	l2521
  7181  010C28  5016               	movf	___ltmod@divisor,w,c
  7182  010C2A  5E13               	subwf	___ltmod@dividend,f,c
  7183  010C2C  5017               	movf	___ltmod@divisor+1,w,c
  7184  010C2E  5A14               	subwfb	___ltmod@dividend+1,f,c
  7185  010C30  5018               	movf	___ltmod@divisor+2,w,c
  7186  010C32  5A15               	subwfb	___ltmod@dividend+2,f,c
  7187  010C34                     l2521:
  7188  010C34  90D8               	bcf	status,0,c
  7189  010C36  3218               	rrcf	___ltmod@divisor+2,f,c
  7190  010C38  3217               	rrcf	___ltmod@divisor+1,f,c
  7191  010C3A  3216               	rrcf	___ltmod@divisor,f,c
  7192  010C3C  2E19               	decfsz	___ltmod@counter,f,c
  7193  010C3E  D7EC               	goto	u1790
  7194  010C40                     l2522:
  7195  010C40  C013  F013         	movff	___ltmod@dividend,?___ltmod
  7196  010C44  C014  F014         	movff	___ltmod@dividend+1,?___ltmod+1
  7197  010C48  C015  F015         	movff	___ltmod@dividend+2,?___ltmod+2
  7198  010C4C  0012               	return		;funcret
  7199  010C4E                     __end_of___ltmod:
  7200                           	opt stack 0
  7201                           tblptru	equ	0xFF8
  7202                           tblptrh	equ	0xFF7
  7203                           tblptrl	equ	0xFF6
  7204                           tablat	equ	0xFF5
  7205                           prodh	equ	0xFF4
  7206                           prodl	equ	0xFF3
  7207                           indf0	equ	0xFEF
  7208                           postinc0	equ	0xFEE
  7209                           fsr0h	equ	0xFEA
  7210                           fsr0l	equ	0xFE9
  7211                           wreg	equ	0xFE8
  7212                           indf2	equ	0xFDF
  7213                           fsr2h	equ	0xFDA
  7214                           fsr2l	equ	0xFD9
  7215                           status	equ	0xFD8
  7216                           
  7217 ;; *************** function ___ltdiv *****************
  7218 ;; Defined at:
  7219 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltdiv.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  dividend        3   18[COMRAM] unsigned um
  7222 ;;  divisor         3   21[COMRAM] unsigned um
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  quotient        3   24[COMRAM] unsigned um
  7225 ;;  counter         1   27[COMRAM] unsigned char 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  3   18[COMRAM] unsigned um
  7228 ;; Registers used:
  7229 ;;		wreg, status,2, status,0
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7235 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7239 ;;Total ram usage:       10 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:    2
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_displ_hex
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text52
  7250  010A80                     __ptext52:
  7251                           	opt stack 0
  7252  010A80                     ___ltdiv:
  7253                           	opt stack 26
  7254                           
  7255                           ;incstack = 0
  7256  010A80  0E00               	movlw	0
  7257  010A82  6E19               	movwf	___ltdiv@quotient,c
  7258  010A84  0E00               	movlw	0
  7259  010A86  6E1A               	movwf	___ltdiv@quotient+1,c
  7260  010A88  0E00               	movlw	0
  7261  010A8A  6E1B               	movwf	___ltdiv@quotient+2,c
  7262  010A8C  5016               	movf	___ltdiv@divisor,w,c
  7263  010A8E  1017               	iorwf	___ltdiv@divisor+1,w,c
  7264  010A90  1018               	iorwf	___ltdiv@divisor+2,w,c
  7265  010A92  B4D8               	btfsc	status,2,c
  7266  010A94  D023               	goto	l2512
  7267  010A96  0E01               	movlw	1
  7268  010A98  6E1C               	movwf	___ltdiv@counter,c
  7269  010A9A  D005               	goto	l2507
  7270  010A9C  90D8               	bcf	status,0,c
  7271  010A9E  3616               	rlcf	___ltdiv@divisor,f,c
  7272  010AA0  3617               	rlcf	___ltdiv@divisor+1,f,c
  7273  010AA2  3618               	rlcf	___ltdiv@divisor+2,f,c
  7274  010AA4  2A1C               	incf	___ltdiv@counter,f,c
  7275  010AA6                     l2507:
  7276  010AA6  AE18               	btfss	___ltdiv@divisor+2,7,c
  7277  010AA8  D7F9               	goto	l2508
  7278  010AAA                     u1760:
  7279  010AAA  90D8               	bcf	status,0,c
  7280  010AAC  3619               	rlcf	___ltdiv@quotient,f,c
  7281  010AAE  361A               	rlcf	___ltdiv@quotient+1,f,c
  7282  010AB0  361B               	rlcf	___ltdiv@quotient+2,f,c
  7283  010AB2  5016               	movf	___ltdiv@divisor,w,c
  7284  010AB4  5C13               	subwf	___ltdiv@dividend,w,c
  7285  010AB6  5017               	movf	___ltdiv@divisor+1,w,c
  7286  010AB8  5814               	subwfb	___ltdiv@dividend+1,w,c
  7287  010ABA  5018               	movf	___ltdiv@divisor+2,w,c
  7288  010ABC  5815               	subwfb	___ltdiv@dividend+2,w,c
  7289  010ABE  A0D8               	btfss	status,0,c
  7290  010AC0  D007               	goto	l2511
  7291  010AC2  5016               	movf	___ltdiv@divisor,w,c
  7292  010AC4  5E13               	subwf	___ltdiv@dividend,f,c
  7293  010AC6  5017               	movf	___ltdiv@divisor+1,w,c
  7294  010AC8  5A14               	subwfb	___ltdiv@dividend+1,f,c
  7295  010ACA  5018               	movf	___ltdiv@divisor+2,w,c
  7296  010ACC  5A15               	subwfb	___ltdiv@dividend+2,f,c
  7297  010ACE  8019               	bsf	___ltdiv@quotient,0,c
  7298  010AD0                     l2511:
  7299  010AD0  90D8               	bcf	status,0,c
  7300  010AD2  3218               	rrcf	___ltdiv@divisor+2,f,c
  7301  010AD4  3217               	rrcf	___ltdiv@divisor+1,f,c
  7302  010AD6  3216               	rrcf	___ltdiv@divisor,f,c
  7303  010AD8  2E1C               	decfsz	___ltdiv@counter,f,c
  7304  010ADA  D7E7               	goto	u1760
  7305  010ADC                     l2512:
  7306  010ADC  C019  F013         	movff	___ltdiv@quotient,?___ltdiv
  7307  010AE0  C01A  F014         	movff	___ltdiv@quotient+1,?___ltdiv+1
  7308  010AE4  C01B  F015         	movff	___ltdiv@quotient+2,?___ltdiv+2
  7309  010AE8  0012               	return		;funcret
  7310  010AEA                     __end_of___ltdiv:
  7311                           	opt stack 0
  7312                           tblptru	equ	0xFF8
  7313                           tblptrh	equ	0xFF7
  7314                           tblptrl	equ	0xFF6
  7315                           tablat	equ	0xFF5
  7316                           prodh	equ	0xFF4
  7317                           prodl	equ	0xFF3
  7318                           indf0	equ	0xFEF
  7319                           postinc0	equ	0xFEE
  7320                           fsr0h	equ	0xFEA
  7321                           fsr0l	equ	0xFE9
  7322                           wreg	equ	0xFE8
  7323                           indf2	equ	0xFDF
  7324                           fsr2h	equ	0xFDA
  7325                           fsr2l	equ	0xFD9
  7326                           status	equ	0xFD8
  7327                           
  7328 ;; *************** function _credit_check *****************
  7329 ;; Defined at:
  7330 ;;		line 69 in file "vend.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;		None
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;		None
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      unsigned char 
  7337 ;; Registers used:
  7338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;Total ram usage:        0 bytes
  7349 ;; Hardware stack levels used:    1
  7350 ;; Hardware stack levels required when called:    3
  7351 ;; This function calls:
  7352 ;;		_DATAEE_ReadByte
  7353 ;; This function is called by:
  7354 ;;		_displ_credit
  7355 ;;		_vend_init
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text53
  7360  01108E                     __ptext53:
  7361                           	opt stack 0
  7362  01108E                     _credit_check:
  7363                           	opt stack 26
  7364                           
  7365                           ;vend.c: 71: cash = DATAEE_ReadByte(credmem);
  7366                           
  7367                           ;incstack = 0
  7368  01108E  0E80               	movlw	low _credmem
  7369  011090  6EF6               	movwf	tblptrl,c
  7370  011092                     	if	1	;There is more than 1 active tblptr byte
  7371  011092  0EFE               	movlw	high _credmem
  7372  011094  6EF7               	movwf	tblptrh,c
  7373  011096                     	endif
  7374  011096                     	if	1	;There are 3 active tblptr bytes
  7375  011096  0E00               	movlw	low (_credmem shr (0+16))
  7376  011098  6EF8               	movwf	tblptru,c
  7377  01109A                     	endif
  7378  01109A  0009               	tblrd		*+
  7379  01109C  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  7380  0110A0  000A               	tblrd		*-
  7381  0110A2  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7382  0110A6  EC95  F088         	call	_DATAEE_ReadByte	;wreg free
  7383  0110AA  6E2D               	movwf	_cash,c	;volatile
  7384                           
  7385                           ;vend.c: 72: return(cash);
  7386  0110AC  502D               	movf	_cash,w,c	;volatile
  7387  0110AE  0012               	return	
  7388  0110B0                     __end_of_credit_check:
  7389                           	opt stack 0
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           prodh	equ	0xFF4
  7395                           prodl	equ	0xFF3
  7396                           indf0	equ	0xFEF
  7397                           postinc0	equ	0xFEE
  7398                           fsr0h	equ	0xFEA
  7399                           fsr0l	equ	0xFE9
  7400                           wreg	equ	0xFE8
  7401                           indf2	equ	0xFDF
  7402                           fsr2h	equ	0xFDA
  7403                           fsr2l	equ	0xFD9
  7404                           status	equ	0xFD8
  7405                           
  7406 ;; *************** function _credit_subtract *****************
  7407 ;; Defined at:
  7408 ;;		line 56 in file "vend.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  credit          1    wreg     unsigned char 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  credit          1   22[COMRAM] unsigned char 
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  1    wreg      void 
  7415 ;; Registers used:
  7416 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7425 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;Total ram usage:        1 bytes
  7427 ;; Hardware stack levels used:    1
  7428 ;; Hardware stack levels required when called:    3
  7429 ;; This function calls:
  7430 ;;		_DATAEE_ReadByte
  7431 ;;		_DATAEE_WriteByte
  7432 ;; This function is called by:
  7433 ;;		_main
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text54
  7438  010B50                     __ptext54:
  7439                           	opt stack 0
  7440  010B50                     _credit_subtract:
  7441                           	opt stack 27
  7442                           
  7443                           ;incstack = 0
  7444                           ;credit_subtract@credit stored from wreg
  7445  010B50  6E17               	movwf	credit_subtract@credit,c
  7446                           
  7447                           ;vend.c: 58: cash = DATAEE_ReadByte(credmem);
  7448  010B52  0E80               	movlw	low _credmem
  7449  010B54  6EF6               	movwf	tblptrl,c
  7450  010B56                     	if	1	;There is more than 1 active tblptr byte
  7451  010B56  0EFE               	movlw	high _credmem
  7452  010B58  6EF7               	movwf	tblptrh,c
  7453  010B5A                     	endif
  7454  010B5A                     	if	1	;There are 3 active tblptr bytes
  7455  010B5A  0E00               	movlw	low (_credmem shr (0+16))
  7456  010B5C  6EF8               	movwf	tblptru,c
  7457  010B5E                     	endif
  7458  010B5E  0009               	tblrd		*+
  7459  010B60  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  7460  010B64  000A               	tblrd		*-
  7461  010B66  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7462  010B6A  EC95  F088         	call	_DATAEE_ReadByte	;wreg free
  7463  010B6E  6E2D               	movwf	_cash,c	;volatile
  7464                           
  7465                           ;vend.c: 59: cash = (cash - credit) & 0xFF;
  7466  010B70  5017               	movf	credit_subtract@credit,w,c
  7467  010B72  0800               	sublw	0
  7468  010B74  242D               	addwf	_cash,w,c	;volatile
  7469  010B76  6E2D               	movwf	_cash,c	;volatile
  7470                           
  7471                           ;vend.c: 60: DATAEE_WriteByte(credmem, cash);
  7472  010B78  0E80               	movlw	low _credmem
  7473  010B7A  6EF6               	movwf	tblptrl,c
  7474  010B7C                     	if	1	;There is more than 1 active tblptr byte
  7475  010B7C  0EFE               	movlw	high _credmem
  7476  010B7E  6EF7               	movwf	tblptrh,c
  7477  010B80                     	endif
  7478  010B80                     	if	1	;There are 3 active tblptr bytes
  7479  010B80  0E00               	movlw	low (_credmem shr (0+16))
  7480  010B82  6EF8               	movwf	tblptru,c
  7481  010B84                     	endif
  7482  010B84  0009               	tblrd		*+
  7483  010B86  CFF5 F013          	movff	tablat,DATAEE_WriteByte@bAdd
  7484  010B8A  000A               	tblrd		*-
  7485  010B8C  CFF5 F014          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7486  010B90  C02D  F015         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  7487  010B94  EC1E  F087         	call	_DATAEE_WriteByte	;wreg free
  7488                           
  7489                           ;vend.c: 61: if(cash == 0)
  7490  010B98  502D               	movf	_cash,w,c	;volatile
  7491  010B9A  A4D8               	btfss	status,2,c
  7492  010B9C  0012               	return	
  7493                           
  7494                           ;vend.c: 62: {
  7495                           ;vend.c: 63: venflags.iscredit = 0;
  7496  010B9E  902B               	bcf	_venflags,0,c
  7497                           
  7498                           ;vend.c: 64: venflags.inscoin = 1;
  7499  010BA0  842B               	bsf	_venflags,2,c
  7500                           
  7501                           ;vend.c: 65: venflags.credisplay = 0;
  7502  010BA2  982B               	bcf	_venflags,4,c
  7503  010BA4  0012               	return	
  7504  010BA6                     __end_of_credit_subtract:
  7505                           	opt stack 0
  7506                           tblptru	equ	0xFF8
  7507                           tblptrh	equ	0xFF7
  7508                           tblptrl	equ	0xFF6
  7509                           tablat	equ	0xFF5
  7510                           prodh	equ	0xFF4
  7511                           prodl	equ	0xFF3
  7512                           indf0	equ	0xFEF
  7513                           postinc0	equ	0xFEE
  7514                           fsr0h	equ	0xFEA
  7515                           fsr0l	equ	0xFE9
  7516                           wreg	equ	0xFE8
  7517                           indf2	equ	0xFDF
  7518                           fsr2h	equ	0xFDA
  7519                           fsr2l	equ	0xFD9
  7520                           status	equ	0xFD8
  7521                           
  7522 ;; *************** function _credit_add *****************
  7523 ;; Defined at:
  7524 ;;		line 42 in file "vend.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  credit          1    wreg     unsigned char 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  credit          1   22[COMRAM] unsigned char 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1    wreg      void 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;Total ram usage:        1 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    3
  7545 ;; This function calls:
  7546 ;;		_DATAEE_ReadByte
  7547 ;;		_DATAEE_WriteByte
  7548 ;; This function is called by:
  7549 ;;		_main
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text55
  7554  010C4E                     __ptext55:
  7555                           	opt stack 0
  7556  010C4E                     _credit_add:
  7557                           	opt stack 27
  7558                           
  7559                           ;incstack = 0
  7560                           ;credit_add@credit stored from wreg
  7561  010C4E  6E17               	movwf	credit_add@credit,c
  7562                           
  7563                           ;vend.c: 44: cash = DATAEE_ReadByte(credmem);
  7564  010C50  0E80               	movlw	low _credmem
  7565  010C52  6EF6               	movwf	tblptrl,c
  7566  010C54                     	if	1	;There is more than 1 active tblptr byte
  7567  010C54  0EFE               	movlw	high _credmem
  7568  010C56  6EF7               	movwf	tblptrh,c
  7569  010C58                     	endif
  7570  010C58                     	if	1	;There are 3 active tblptr bytes
  7571  010C58  0E00               	movlw	low (_credmem shr (0+16))
  7572  010C5A  6EF8               	movwf	tblptru,c
  7573  010C5C                     	endif
  7574  010C5C  0009               	tblrd		*+
  7575  010C5E  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  7576  010C62  000A               	tblrd		*-
  7577  010C64  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  7578  010C68  EC95  F088         	call	_DATAEE_ReadByte	;wreg free
  7579  010C6C  6E2D               	movwf	_cash,c	;volatile
  7580                           
  7581                           ;vend.c: 45: cash = cash + credit;
  7582  010C6E  502D               	movf	_cash,w,c	;volatile
  7583  010C70  2417               	addwf	credit_add@credit,w,c
  7584  010C72  6E2D               	movwf	_cash,c	;volatile
  7585                           
  7586                           ;vend.c: 46: DATAEE_WriteByte(credmem, cash);
  7587  010C74  0E80               	movlw	low _credmem
  7588  010C76  6EF6               	movwf	tblptrl,c
  7589  010C78                     	if	1	;There is more than 1 active tblptr byte
  7590  010C78  0EFE               	movlw	high _credmem
  7591  010C7A  6EF7               	movwf	tblptrh,c
  7592  010C7C                     	endif
  7593  010C7C                     	if	1	;There are 3 active tblptr bytes
  7594  010C7C  0E00               	movlw	low (_credmem shr (0+16))
  7595  010C7E  6EF8               	movwf	tblptru,c
  7596  010C80                     	endif
  7597  010C80  0009               	tblrd		*+
  7598  010C82  CFF5 F013          	movff	tablat,DATAEE_WriteByte@bAdd
  7599  010C86  000A               	tblrd		*-
  7600  010C88  CFF5 F014          	movff	tablat,DATAEE_WriteByte@bAdd+1
  7601  010C8C  C02D  F015         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  7602  010C90  EC1E  F087         	call	_DATAEE_WriteByte	;wreg free
  7603                           
  7604                           ;vend.c: 47: if(cash != 0)
  7605  010C94  502D               	movf	_cash,w,c	;volatile
  7606  010C96  B4D8               	btfsc	status,2,c
  7607  010C98  0012               	return	
  7608                           
  7609                           ;vend.c: 48: {
  7610                           ;vend.c: 49: venflags.iscredit = 1;
  7611  010C9A  802B               	bsf	_venflags,0,c
  7612                           
  7613                           ;vend.c: 50: venflags.inscoin = 0;
  7614  010C9C  942B               	bcf	_venflags,2,c
  7615                           
  7616                           ;vend.c: 51: venflags.credisplay = 1;
  7617  010C9E  882B               	bsf	_venflags,4,c
  7618  010CA0  0012               	return	
  7619  010CA2                     __end_of_credit_add:
  7620                           	opt stack 0
  7621                           tblptru	equ	0xFF8
  7622                           tblptrh	equ	0xFF7
  7623                           tblptrl	equ	0xFF6
  7624                           tablat	equ	0xFF5
  7625                           prodh	equ	0xFF4
  7626                           prodl	equ	0xFF3
  7627                           indf0	equ	0xFEF
  7628                           postinc0	equ	0xFEE
  7629                           fsr0h	equ	0xFEA
  7630                           fsr0l	equ	0xFE9
  7631                           wreg	equ	0xFE8
  7632                           indf2	equ	0xFDF
  7633                           fsr2h	equ	0xFDA
  7634                           fsr2l	equ	0xFD9
  7635                           status	equ	0xFD8
  7636                           
  7637 ;; *************** function _DATAEE_WriteByte *****************
  7638 ;; Defined at:
  7639 ;;		line 169 in file "mcc_generated_files/memory.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  bAdd            2   18[COMRAM] unsigned int 
  7642 ;;  bData           1   20[COMRAM] unsigned char 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2, status,0
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7654 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7658 ;;Total ram usage:        4 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:    2
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		_credit_add
  7665 ;;		_credit_subtract
  7666 ;;		_save_notes
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text56
  7671  010E3C                     __ptext56:
  7672                           	opt stack 0
  7673  010E3C                     _DATAEE_WriteByte:
  7674                           	opt stack 27
  7675                           
  7676                           ;memory.c: 171: uint8_t GIEBitValue = INTCONbits.GIE;
  7677                           
  7678                           ;incstack = 0
  7679  010E3C  0E00               	movlw	0
  7680  010E3E  BEF2               	btfsc	intcon,7,c	;volatile
  7681  010E40  0E01               	movlw	1
  7682  010E42  6E16               	movwf	DATAEE_WriteByte@GIEBitValue,c
  7683                           
  7684                           ;memory.c: 173: NVMADRH = ((bAdd >> 8) & 0x03);
  7685  010E44  5014               	movf	DATAEE_WriteByte@bAdd+1,w,c
  7686  010E46  0B03               	andlw	3
  7687  010E48  6E7F               	movwf	3967,c	;volatile
  7688                           
  7689                           ;memory.c: 174: NVMADRL = (bAdd & 0xFF);
  7690  010E4A  C013  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  7691                           
  7692                           ;memory.c: 175: NVMDAT = bData;
  7693  010E4E  C015  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  7694                           
  7695                           ;memory.c: 176: NVMCON1bits.NVMREG = 0;
  7696  010E52  0E3F               	movlw	-193
  7697  010E54  1681               	andwf	3969,f,c	;volsfr
  7698                           
  7699                           ;memory.c: 177: NVMCON1bits.WREN = 1;
  7700  010E56  8481               	bsf	3969,2,c	;volsfr
  7701                           
  7702                           ;memory.c: 178: INTCONbits.GIE = 0;
  7703  010E58  9EF2               	bcf	intcon,7,c	;volatile
  7704                           
  7705                           ;memory.c: 179: NVMCON2 = 0x55;
  7706  010E5A  0E55               	movlw	85
  7707  010E5C  6E82               	movwf	3970,c	;volsfr
  7708                           
  7709                           ;memory.c: 180: NVMCON2 = 0xAA;
  7710  010E5E  0EAA               	movlw	170
  7711  010E60  6E82               	movwf	3970,c	;volsfr
  7712                           
  7713                           ;memory.c: 181: NVMCON1bits.WR = 1;
  7714  010E62  8281               	bsf	3969,1,c	;volsfr
  7715  010E64                     
  7716                           ;memory.c: 184: {
  7717  010E64  B281               	btfsc	3969,1,c	;volsfr
  7718  010E66  D7FE               	goto	l234
  7719                           
  7720                           ;memory.c: 185: }
  7721                           ;memory.c: 187: NVMCON1bits.WREN = 0;
  7722  010E68  9481               	bcf	3969,2,c	;volsfr
  7723                           
  7724                           ;memory.c: 188: INTCONbits.GIE = GIEBitValue;
  7725  010E6A  B016               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
  7726  010E6C  D002               	bra	u1365
  7727  010E6E  9EF2               	bcf	intcon,7,c	;volatile
  7728  010E70  D001               	bra	u1366
  7729  010E72                     u1365:
  7730  010E72  8EF2               	bsf	intcon,7,c	;volatile
  7731  010E74                     u1366:
  7732  010E74  0012               	return		;funcret
  7733  010E76                     __end_of_DATAEE_WriteByte:
  7734                           	opt stack 0
  7735                           tblptru	equ	0xFF8
  7736                           tblptrh	equ	0xFF7
  7737                           tblptrl	equ	0xFF6
  7738                           tablat	equ	0xFF5
  7739                           prodh	equ	0xFF4
  7740                           prodl	equ	0xFF3
  7741                           intcon	equ	0xFF2
  7742                           indf0	equ	0xFEF
  7743                           postinc0	equ	0xFEE
  7744                           fsr0h	equ	0xFEA
  7745                           fsr0l	equ	0xFE9
  7746                           wreg	equ	0xFE8
  7747                           indf2	equ	0xFDF
  7748                           fsr2h	equ	0xFDA
  7749                           fsr2l	equ	0xFD9
  7750                           status	equ	0xFD8
  7751                           
  7752 ;; *************** function _DATAEE_ReadByte *****************
  7753 ;; Defined at:
  7754 ;;		line 191 in file "mcc_generated_files/memory.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;  bAdd            2   18[COMRAM] unsigned int 
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      unsigned char 
  7761 ;; Registers used:
  7762 ;;		wreg, status,2, status,0
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7772 ;;Total ram usage:        2 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    2
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_credit_add
  7779 ;;		_credit_subtract
  7780 ;;		_credit_check
  7781 ;;		_mdb_init
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text57
  7786  01112A                     __ptext57:
  7787                           	opt stack 0
  7788  01112A                     _DATAEE_ReadByte:
  7789                           	opt stack 26
  7790                           
  7791                           ;memory.c: 193: NVMADRH = ((bAdd >> 8) & 0x03);
  7792                           
  7793                           ;incstack = 0
  7794  01112A  5014               	movf	DATAEE_ReadByte@bAdd+1,w,c
  7795  01112C  0B03               	andlw	3
  7796  01112E  6E7F               	movwf	3967,c	;volatile
  7797                           
  7798                           ;memory.c: 194: NVMADRL = (bAdd & 0xFF);
  7799  011130  C013  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  7800                           
  7801                           ;memory.c: 195: NVMCON1bits.NVMREG = 0;
  7802  011134  0E3F               	movlw	-193
  7803  011136  1681               	andwf	3969,f,c	;volsfr
  7804                           
  7805                           ;memory.c: 196: NVMCON1bits.RD = 1;
  7806  011138  8081               	bsf	3969,0,c	;volsfr
  7807                           
  7808                           ;memory.c: 197: __nop();
  7809  01113A  F000               	nop	
  7810                           
  7811                           ;memory.c: 198: __nop();
  7812  01113C  F000               	nop	
  7813                           
  7814                           ;memory.c: 200: return (NVMDAT);
  7815  01113E  5080               	movf	3968,w,c	;volatile
  7816  011140  0012               	return	
  7817  011142                     __end_of_DATAEE_ReadByte:
  7818                           	opt stack 0
  7819                           tblptru	equ	0xFF8
  7820                           tblptrh	equ	0xFF7
  7821                           tblptrl	equ	0xFF6
  7822                           tablat	equ	0xFF5
  7823                           prodh	equ	0xFF4
  7824                           prodl	equ	0xFF3
  7825                           intcon	equ	0xFF2
  7826                           indf0	equ	0xFEF
  7827                           postinc0	equ	0xFEE
  7828                           fsr0h	equ	0xFEA
  7829                           fsr0l	equ	0xFE9
  7830                           wreg	equ	0xFE8
  7831                           indf2	equ	0xFDF
  7832                           fsr2h	equ	0xFDA
  7833                           fsr2l	equ	0xFD9
  7834                           status	equ	0xFD8
  7835                           
  7836 ;; *************** function _SYSTEM_Initialize *****************
  7837 ;; Defined at:
  7838 ;;		line 116 in file "mcc_generated_files/mcc.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;Total ram usage:        0 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    3
  7859 ;; This function calls:
  7860 ;;		_CMP1_Initialize
  7861 ;;		_DAC1_Initialize
  7862 ;;		_EUSART1_Initialize
  7863 ;;		_EUSART2_Initialize
  7864 ;;		_INTERRUPT_Initialize
  7865 ;;		_OSCILLATOR_Initialize
  7866 ;;		_PIN_MANAGER_Initialize
  7867 ;;		_TMR1_Initialize
  7868 ;;		_TMR3_Initialize
  7869 ;;		_TMR5_Initialize
  7870 ;; This function is called by:
  7871 ;;		_main
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           	psect	text58
  7876  01103E                     __ptext58:
  7877                           	opt stack 0
  7878  01103E                     _SYSTEM_Initialize:
  7879                           	opt stack 27
  7880                           
  7881                           ;mcc.c: 118: INTERRUPT_Initialize();
  7882                           
  7883                           ;incstack = 0
  7884  01103E  EC26  F089         	call	_INTERRUPT_Initialize	;wreg free
  7885                           
  7886                           ;mcc.c: 119: PIN_MANAGER_Initialize();
  7887  011042  EC43  F083         	call	_PIN_MANAGER_Initialize	;wreg free
  7888                           
  7889                           ;mcc.c: 120: OSCILLATOR_Initialize();
  7890  011046  ECA1  F088         	call	_OSCILLATOR_Initialize	;wreg free
  7891                           
  7892                           ;mcc.c: 121: CMP1_Initialize();
  7893  01104A  ECE5  F088         	call	_CMP1_Initialize	;wreg free
  7894                           
  7895                           ;mcc.c: 122: TMR3_Initialize();
  7896  01104E  ECA3  F087         	call	_TMR3_Initialize	;wreg free
  7897                           
  7898                           ;mcc.c: 123: DAC1_Initialize();
  7899  011052  EC14  F089         	call	_DAC1_Initialize	;wreg free
  7900                           
  7901                           ;mcc.c: 124: TMR5_Initialize();
  7902  011056  EC89  F087         	call	_TMR5_Initialize	;wreg free
  7903                           
  7904                           ;mcc.c: 125: TMR1_Initialize();
  7905  01105A  ECBD  F087         	call	_TMR1_Initialize	;wreg free
  7906                           
  7907                           ;mcc.c: 126: EUSART1_Initialize();
  7908  01105E  ECDA  F088         	call	_EUSART1_Initialize	;wreg free
  7909                           
  7910                           ;mcc.c: 127: EUSART2_Initialize();
  7911  011062  ECAD  F088         	call	_EUSART2_Initialize	;wreg free
  7912  011066  0012               	return		;funcret
  7913  011068                     __end_of_SYSTEM_Initialize:
  7914                           	opt stack 0
  7915                           tblptru	equ	0xFF8
  7916                           tblptrh	equ	0xFF7
  7917                           tblptrl	equ	0xFF6
  7918                           tablat	equ	0xFF5
  7919                           prodh	equ	0xFF4
  7920                           prodl	equ	0xFF3
  7921                           intcon	equ	0xFF2
  7922                           indf0	equ	0xFEF
  7923                           postinc0	equ	0xFEE
  7924                           fsr0h	equ	0xFEA
  7925                           fsr0l	equ	0xFE9
  7926                           wreg	equ	0xFE8
  7927                           indf2	equ	0xFDF
  7928                           fsr2h	equ	0xFDA
  7929                           fsr2l	equ	0xFD9
  7930                           status	equ	0xFD8
  7931                           
  7932 ;; *************** function _TMR5_Initialize *****************
  7933 ;; Defined at:
  7934 ;;		line 62 in file "mcc_generated_files/tmr5.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      void 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7951 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7952 ;;Total ram usage:        2 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:    2
  7955 ;; This function calls:
  7956 ;;		Nothing
  7957 ;; This function is called by:
  7958 ;;		_SYSTEM_Initialize
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text59
  7963  010F12                     __ptext59:
  7964                           	opt stack 0
  7965  010F12                     _TMR5_Initialize:
  7966                           	opt stack 27
  7967                           
  7968                           ;tmr5.c: 67: T5GCON = 0x00;
  7969                           
  7970                           ;incstack = 0
  7971  010F12  0E00               	movlw	0
  7972  010F14  6EC4               	movwf	4036,c	;volatile
  7973                           
  7974                           ;tmr5.c: 70: T5GATE = 0x00;
  7975  010F16  0E00               	movlw	0
  7976  010F18  6EC5               	movwf	4037,c	;volatile
  7977                           
  7978                           ;tmr5.c: 73: T5CLK = 0x04;
  7979  010F1A  0E04               	movlw	4
  7980  010F1C  6EC6               	movwf	4038,c	;volatile
  7981                           
  7982                           ;tmr5.c: 76: TMR5H = 0xE1;
  7983  010F1E  0EE1               	movlw	225
  7984  010F20  6EC2               	movwf	4034,c	;volatile
  7985                           
  7986                           ;tmr5.c: 79: TMR5L = 0xBA;
  7987  010F22  0EBA               	movlw	186
  7988  010F24  6EC1               	movwf	4033,c	;volatile
  7989                           
  7990                           ;tmr5.c: 82: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  7991  010F26  50C1               	movf	4033,w,c	;volatile
  7992  010F28  CFC2 F013          	movff	4034,??_TMR5_Initialize	;volatile
  7993  010F2C  6A14               	clrf	(??_TMR5_Initialize+1)& (0+255),c
  7994  010F2E  C013  F014         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  7995  010F32  6A13               	clrf	??_TMR5_Initialize,c
  7996  010F34  1013               	iorwf	??_TMR5_Initialize,w,c
  7997  010F36  6E43               	movwf	_timer5ReloadVal,c	;volatile
  7998  010F38  5014               	movf	??_TMR5_Initialize+1,w,c
  7999  010F3A  6E44               	movwf	_timer5ReloadVal+1,c	;volatile
  8000                           
  8001                           ;tmr5.c: 85: PIR4bits.TMR5IF = 0;
  8002  010F3C  010E               	movlb	14	; () banked
  8003  010F3E  99CE               	bcf	206,4,b	;volatile
  8004                           
  8005                           ; BSR set to: 14
  8006                           ;tmr5.c: 88: T5CON = 0x01;
  8007  010F40  0E01               	movlw	1
  8008  010F42  6EC3               	movwf	4035,c	;volatile
  8009                           
  8010                           ; BSR set to: 14
  8011  010F44  0012               	return		;funcret
  8012  010F46                     __end_of_TMR5_Initialize:
  8013                           	opt stack 0
  8014                           tblptru	equ	0xFF8
  8015                           tblptrh	equ	0xFF7
  8016                           tblptrl	equ	0xFF6
  8017                           tablat	equ	0xFF5
  8018                           prodh	equ	0xFF4
  8019                           prodl	equ	0xFF3
  8020                           intcon	equ	0xFF2
  8021                           indf0	equ	0xFEF
  8022                           postinc0	equ	0xFEE
  8023                           fsr0h	equ	0xFEA
  8024                           fsr0l	equ	0xFE9
  8025                           wreg	equ	0xFE8
  8026                           indf2	equ	0xFDF
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8
  8030                           
  8031 ;; *************** function _TMR3_Initialize *****************
  8032 ;; Defined at:
  8033 ;;		line 62 in file "mcc_generated_files/tmr3.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;Total ram usage:        2 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    2
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_SYSTEM_Initialize
  8058 ;;		_mdb_poll
  8059 ;;		_cctalk_comm
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text60
  8064  010F46                     __ptext60:
  8065                           	opt stack 0
  8066  010F46                     _TMR3_Initialize:
  8067                           	opt stack 24
  8068                           
  8069                           ;tmr3.c: 67: T3GCON = 0x00;
  8070                           
  8071                           ; BSR set to: 14
  8072                           ;incstack = 0
  8073  010F46  0E00               	movlw	0
  8074  010F48  6ECA               	movwf	4042,c	;volatile
  8075                           
  8076                           ;tmr3.c: 70: T3GATE = 0x00;
  8077  010F4A  0E00               	movlw	0
  8078  010F4C  6ECB               	movwf	4043,c	;volatile
  8079                           
  8080                           ;tmr3.c: 73: T3CLK = 0x05;
  8081  010F4E  0E05               	movlw	5
  8082  010F50  6ECC               	movwf	4044,c	;volatile
  8083                           
  8084                           ;tmr3.c: 76: TMR3H = 0x9E;
  8085  010F52  0E9E               	movlw	158
  8086  010F54  6EC8               	movwf	4040,c	;volatile
  8087                           
  8088                           ;tmr3.c: 79: TMR3L = 0x58;
  8089  010F56  0E58               	movlw	88
  8090  010F58  6EC7               	movwf	4039,c	;volatile
  8091                           
  8092                           ;tmr3.c: 82: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  8093  010F5A  50C7               	movf	4039,w,c	;volatile
  8094  010F5C  CFC8 F013          	movff	4040,??_TMR3_Initialize	;volatile
  8095  010F60  6A14               	clrf	(??_TMR3_Initialize+1)& (0+255),c
  8096  010F62  C013  F014         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  8097  010F66  6A13               	clrf	??_TMR3_Initialize,c
  8098  010F68  1013               	iorwf	??_TMR3_Initialize,w,c
  8099  010F6A  6E45               	movwf	_timer3ReloadVal,c	;volatile
  8100  010F6C  5014               	movf	??_TMR3_Initialize+1,w,c
  8101  010F6E  6E46               	movwf	_timer3ReloadVal+1,c	;volatile
  8102                           
  8103                           ;tmr3.c: 85: PIR4bits.TMR3IF = 0;
  8104  010F70  010E               	movlb	14	; () banked
  8105  010F72  95CE               	bcf	206,2,b	;volatile
  8106                           
  8107                           ; BSR set to: 14
  8108                           ;tmr3.c: 88: T3CON = 0x01;
  8109  010F74  0E01               	movlw	1
  8110  010F76  6EC9               	movwf	4041,c	;volatile
  8111                           
  8112                           ; BSR set to: 14
  8113  010F78  0012               	return		;funcret
  8114  010F7A                     __end_of_TMR3_Initialize:
  8115                           	opt stack 0
  8116                           tblptru	equ	0xFF8
  8117                           tblptrh	equ	0xFF7
  8118                           tblptrl	equ	0xFF6
  8119                           tablat	equ	0xFF5
  8120                           prodh	equ	0xFF4
  8121                           prodl	equ	0xFF3
  8122                           intcon	equ	0xFF2
  8123                           indf0	equ	0xFEF
  8124                           postinc0	equ	0xFEE
  8125                           fsr0h	equ	0xFEA
  8126                           fsr0l	equ	0xFE9
  8127                           wreg	equ	0xFE8
  8128                           indf2	equ	0xFDF
  8129                           fsr2h	equ	0xFDA
  8130                           fsr2l	equ	0xFD9
  8131                           status	equ	0xFD8
  8132                           
  8133 ;; *************** function _TMR1_Initialize *****************
  8134 ;; Defined at:
  8135 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8153 ;;Total ram usage:        2 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    2
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_SYSTEM_Initialize
  8160 ;;		_mdb_comm
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text61
  8165  010F7A                     __ptext61:
  8166                           	opt stack 0
  8167  010F7A                     _TMR1_Initialize:
  8168                           	opt stack 24
  8169                           
  8170                           ;tmr1.c: 67: T1GCON = 0x00;
  8171                           
  8172                           ; BSR set to: 14
  8173                           ;incstack = 0
  8174  010F7A  0E00               	movlw	0
  8175  010F7C  6ED0               	movwf	4048,c	;volatile
  8176                           
  8177                           ;tmr1.c: 70: T1GATE = 0x00;
  8178  010F7E  0E00               	movlw	0
  8179  010F80  6ED1               	movwf	4049,c	;volatile
  8180                           
  8181                           ;tmr1.c: 73: T1CLK = 0x05;
  8182  010F82  0E05               	movlw	5
  8183  010F84  6ED2               	movwf	4050,c	;volatile
  8184                           
  8185                           ;tmr1.c: 76: TMR1H = 0xF6;
  8186  010F86  0EF6               	movlw	246
  8187  010F88  6ECE               	movwf	4046,c	;volatile
  8188                           
  8189                           ;tmr1.c: 79: TMR1L = 0x3C;
  8190  010F8A  0E3C               	movlw	60
  8191  010F8C  6ECD               	movwf	4045,c	;volatile
  8192                           
  8193                           ;tmr1.c: 82: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8194  010F8E  50CD               	movf	4045,w,c	;volatile
  8195  010F90  CFCE F013          	movff	4046,??_TMR1_Initialize	;volatile
  8196  010F94  6A14               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  8197  010F96  C013  F014         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  8198  010F9A  6A13               	clrf	??_TMR1_Initialize,c
  8199  010F9C  1013               	iorwf	??_TMR1_Initialize,w,c
  8200  010F9E  6E47               	movwf	_timer1ReloadVal,c	;volatile
  8201  010FA0  5014               	movf	??_TMR1_Initialize+1,w,c
  8202  010FA2  6E48               	movwf	_timer1ReloadVal+1,c	;volatile
  8203                           
  8204                           ;tmr1.c: 85: PIR4bits.TMR1IF = 0;
  8205  010FA4  010E               	movlb	14	; () banked
  8206  010FA6  91CE               	bcf	206,0,b	;volatile
  8207                           
  8208                           ; BSR set to: 14
  8209                           ;tmr1.c: 88: T1CON = 0x01;
  8210  010FA8  0E01               	movlw	1
  8211  010FAA  6ECF               	movwf	4047,c	;volatile
  8212                           
  8213                           ; BSR set to: 14
  8214  010FAC  0012               	return		;funcret
  8215  010FAE                     __end_of_TMR1_Initialize:
  8216                           	opt stack 0
  8217                           tblptru	equ	0xFF8
  8218                           tblptrh	equ	0xFF7
  8219                           tblptrl	equ	0xFF6
  8220                           tablat	equ	0xFF5
  8221                           prodh	equ	0xFF4
  8222                           prodl	equ	0xFF3
  8223                           intcon	equ	0xFF2
  8224                           indf0	equ	0xFEF
  8225                           postinc0	equ	0xFEE
  8226                           fsr0h	equ	0xFEA
  8227                           fsr0l	equ	0xFE9
  8228                           wreg	equ	0xFE8
  8229                           indf2	equ	0xFDF
  8230                           fsr2h	equ	0xFDA
  8231                           fsr2l	equ	0xFD9
  8232                           status	equ	0xFD8
  8233                           
  8234 ;; *************** function _PIN_MANAGER_Initialize *****************
  8235 ;; Defined at:
  8236 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;		None
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  state           1   18[COMRAM] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8254 ;;Total ram usage:        1 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    2
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_SYSTEM_Initialize
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text62
  8265  010686                     __ptext62:
  8266                           	opt stack 0
  8267  010686                     _PIN_MANAGER_Initialize:
  8268                           	opt stack 27
  8269                           
  8270                           ;pin_manager.c: 57: LATE = 0x00;
  8271                           
  8272                           ; BSR set to: 14
  8273                           ;incstack = 0
  8274  010686  0E00               	movlw	0
  8275  010688  6E87               	movwf	3975,c	;volatile
  8276                           
  8277                           ;pin_manager.c: 58: LATD = 0x00;
  8278  01068A  0E00               	movlw	0
  8279  01068C  6E86               	movwf	3974,c	;volatile
  8280                           
  8281                           ;pin_manager.c: 59: LATA = 0xC0;
  8282  01068E  0EC0               	movlw	192
  8283  010690  6E83               	movwf	3971,c	;volatile
  8284                           
  8285                           ;pin_manager.c: 60: LATB = 0x00;
  8286  010692  0E00               	movlw	0
  8287  010694  6E84               	movwf	3972,c	;volatile
  8288                           
  8289                           ;pin_manager.c: 61: LATC = 0x40;
  8290  010696  0E40               	movlw	64
  8291  010698  6E85               	movwf	3973,c	;volatile
  8292                           
  8293                           ;pin_manager.c: 66: TRISE = 0x00;
  8294  01069A  0E00               	movlw	0
  8295  01069C  6E8C               	movwf	3980,c	;volatile
  8296                           
  8297                           ;pin_manager.c: 67: TRISA = 0x1F;
  8298  01069E  0E1F               	movlw	31
  8299  0106A0  6E88               	movwf	3976,c	;volatile
  8300                           
  8301                           ;pin_manager.c: 68: TRISB = 0xD0;
  8302  0106A2  0ED0               	movlw	208
  8303  0106A4  6E89               	movwf	3977,c	;volatile
  8304                           
  8305                           ;pin_manager.c: 69: TRISC = 0x80;
  8306  0106A6  0E80               	movlw	128
  8307  0106A8  6E8A               	movwf	3978,c	;volatile
  8308                           
  8309                           ;pin_manager.c: 70: TRISD = 0x00;
  8310  0106AA  0E00               	movlw	0
  8311  0106AC  6E8B               	movwf	3979,c	;volatile
  8312                           
  8313                           ;pin_manager.c: 75: ANSELC = 0x00;
  8314  0106AE  0E00               	movlw	0
  8315  0106B0  010F               	movlb	15	; () banked
  8316  0106B2  6F21               	movwf	33,b	;volatile
  8317                           
  8318                           ;pin_manager.c: 76: ANSELB = 0xC0;
  8319  0106B4  0EC0               	movlw	192
  8320  0106B6  6F19               	movwf	25,b	;volatile
  8321                           
  8322                           ;pin_manager.c: 77: ANSELD = 0x00;
  8323  0106B8  0E00               	movlw	0
  8324  0106BA  6F26               	movwf	38,b	;volatile
  8325                           
  8326                           ;pin_manager.c: 78: ANSELE = 0x00;
  8327  0106BC  0E00               	movlw	0
  8328  0106BE  6F2E               	movwf	46,b	;volatile
  8329                           
  8330                           ;pin_manager.c: 79: ANSELA = 0x01;
  8331  0106C0  0E01               	movlw	1
  8332  0106C2  6F11               	movwf	17,b	;volatile
  8333                           
  8334                           ;pin_manager.c: 84: WPUD = 0x00;
  8335  0106C4  0E00               	movlw	0
  8336  0106C6  6F25               	movwf	37,b	;volatile
  8337                           
  8338                           ;pin_manager.c: 85: WPUE = 0x00;
  8339  0106C8  0E00               	movlw	0
  8340  0106CA  6F2D               	movwf	45,b	;volatile
  8341                           
  8342                           ;pin_manager.c: 86: WPUB = 0x00;
  8343  0106CC  0E00               	movlw	0
  8344  0106CE  6F18               	movwf	24,b	;volatile
  8345                           
  8346                           ;pin_manager.c: 87: WPUA = 0x00;
  8347  0106D0  0E00               	movlw	0
  8348  0106D2  6F10               	movwf	16,b	;volatile
  8349                           
  8350                           ;pin_manager.c: 88: WPUC = 0x00;
  8351  0106D4  0E00               	movlw	0
  8352  0106D6  6F20               	movwf	32,b	;volatile
  8353                           
  8354                           ;pin_manager.c: 93: ODCONE = 0x00;
  8355  0106D8  0E00               	movlw	0
  8356  0106DA  6F2C               	movwf	44,b	;volatile
  8357                           
  8358                           ;pin_manager.c: 94: ODCONA = 0x00;
  8359  0106DC  0E00               	movlw	0
  8360  0106DE  6F0F               	movwf	15,b	;volatile
  8361                           
  8362                           ;pin_manager.c: 95: ODCONB = 0x00;
  8363  0106E0  0E00               	movlw	0
  8364  0106E2  6F17               	movwf	23,b	;volatile
  8365                           
  8366                           ;pin_manager.c: 96: ODCONC = 0x00;
  8367  0106E4  0E00               	movlw	0
  8368  0106E6  6F1F               	movwf	31,b	;volatile
  8369                           
  8370                           ;pin_manager.c: 97: ODCOND = 0x00;
  8371  0106E8  0E00               	movlw	0
  8372  0106EA  6F24               	movwf	36,b	;volatile
  8373                           
  8374                           ; BSR set to: 15
  8375                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
  8376  0106EC  010E               	movlb	14	; () banked
  8377  0106EE  89C2               	bsf	194,4,b	;volatile
  8378                           
  8379                           ;pin_manager.c: 106: bool state = (unsigned char)GIE;
  8380  0106F0  0E00               	movlw	0
  8381  0106F2  BEF2               	btfsc	intcon,7,c	;volatile
  8382  0106F4  0E01               	movlw	1
  8383  0106F6  6E13               	movwf	PIN_MANAGER_Initialize@state,c
  8384                           
  8385                           ; BSR set to: 14
  8386                           ;pin_manager.c: 107: GIE = 0;
  8387  0106F8  9EF2               	bcf	intcon,7,c	;volatile
  8388                           
  8389                           ;pin_manager.c: 108: PPSLOCK = 0x55;
  8390  0106FA  0E55               	movlw	85
  8391  0106FC  6FA0               	movwf	160,b	;volsfr
  8392                           
  8393                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
  8394  0106FE  0EAA               	movlw	170
  8395  010700  6FA0               	movwf	160,b	;volsfr
  8396                           
  8397                           ; BSR set to: 14
  8398                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x00;
  8399  010702  91A0               	bcf	160,0,b	;volsfr
  8400                           
  8401                           ; BSR set to: 14
  8402                           ;pin_manager.c: 112: RX1PPSbits.RXPPS = 0x17;
  8403  010704  81B5               	bsf	181,0,b	;volatile
  8404  010706  83B5               	bsf	181,1,b	;volatile
  8405  010708  85B5               	bsf	181,2,b	;volatile
  8406  01070A  97B5               	bcf	181,3,b	;volatile
  8407  01070C  89B5               	bsf	181,4,b	;volatile
  8408                           
  8409                           ;pin_manager.c: 113: RC6PPS = 0x09;
  8410  01070E  0E09               	movlw	9
  8411  010710  6FFD               	movwf	253,b	;volatile
  8412                           
  8413                           ;pin_manager.c: 114: RB5PPS = 0x0B;
  8414  010712  0E0B               	movlw	11
  8415  010714  6FF4               	movwf	244,b	;volatile
  8416                           
  8417                           ; BSR set to: 14
  8418                           ;pin_manager.c: 115: RX2PPSbits.RXPPS = 0x0C;
  8419  010716  918D               	bcf	141,0,b	;volatile
  8420  010718  938D               	bcf	141,1,b	;volatile
  8421  01071A  858D               	bsf	141,2,b	;volatile
  8422  01071C  878D               	bsf	141,3,b	;volatile
  8423  01071E  998D               	bcf	141,4,b	;volatile
  8424                           
  8425                           ;pin_manager.c: 117: PPSLOCK = 0x55;
  8426  010720  0E55               	movlw	85
  8427  010722  6FA0               	movwf	160,b	;volsfr
  8428                           
  8429                           ;pin_manager.c: 118: PPSLOCK = 0xAA;
  8430  010724  0EAA               	movlw	170
  8431  010726  6FA0               	movwf	160,b	;volsfr
  8432                           
  8433                           ; BSR set to: 14
  8434                           ;pin_manager.c: 119: PPSLOCKbits.PPSLOCKED = 0x01;
  8435  010728  81A0               	bsf	160,0,b	;volsfr
  8436                           
  8437                           ; BSR set to: 14
  8438                           ;pin_manager.c: 121: GIE = state;
  8439  01072A  A013               	btfss	PIN_MANAGER_Initialize@state,0,c
  8440  01072C  D002               	goto	u440
  8441  01072E  8EF2               	bsf	intcon,7,c	;volatile
  8442  010730  0012               	return	
  8443  010732                     u440:
  8444  010732  9EF2               	bcf	intcon,7,c	;volatile
  8445  010734  0012               	return		;funcret
  8446  010736                     __end_of_PIN_MANAGER_Initialize:
  8447                           	opt stack 0
  8448                           tblptru	equ	0xFF8
  8449                           tblptrh	equ	0xFF7
  8450                           tblptrl	equ	0xFF6
  8451                           tablat	equ	0xFF5
  8452                           prodh	equ	0xFF4
  8453                           prodl	equ	0xFF3
  8454                           intcon	equ	0xFF2
  8455                           indf0	equ	0xFEF
  8456                           postinc0	equ	0xFEE
  8457                           fsr0h	equ	0xFEA
  8458                           fsr0l	equ	0xFE9
  8459                           wreg	equ	0xFE8
  8460                           indf2	equ	0xFDF
  8461                           fsr2h	equ	0xFDA
  8462                           fsr2l	equ	0xFD9
  8463                           status	equ	0xFD8
  8464                           
  8465 ;; *************** function _OSCILLATOR_Initialize *****************
  8466 ;; Defined at:
  8467 ;;		line 130 in file "mcc_generated_files/mcc.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;		None
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;		None
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8485 ;;Total ram usage:        0 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:    2
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_SYSTEM_Initialize
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text63
  8496  011142                     __ptext63:
  8497                           	opt stack 0
  8498  011142                     _OSCILLATOR_Initialize:
  8499                           	opt stack 27
  8500                           
  8501                           ;mcc.c: 133: OSCCON1 = 0x60;
  8502                           
  8503                           ;incstack = 0
  8504  011142  0E60               	movlw	96
  8505  011144  010E               	movlb	14	; () banked
  8506  011146  6FD8               	movwf	216,b	;volatile
  8507                           
  8508                           ;mcc.c: 135: OSCCON3 = 0x00;
  8509  011148  0E00               	movlw	0
  8510  01114A  6FDA               	movwf	218,b	;volatile
  8511                           
  8512                           ;mcc.c: 137: OSCEN = 0x00;
  8513  01114C  0E00               	movlw	0
  8514  01114E  6FDC               	movwf	220,b	;volatile
  8515                           
  8516                           ;mcc.c: 139: OSCFRQ = 0x04;
  8517  011150  0E04               	movlw	4
  8518  011152  6FDE               	movwf	222,b	;volatile
  8519                           
  8520                           ;mcc.c: 141: OSCTUNE = 0x00;
  8521  011154  0E00               	movlw	0
  8522  011156  6FDD               	movwf	221,b	;volatile
  8523                           
  8524                           ; BSR set to: 14
  8525  011158  0012               	return		;funcret
  8526  01115A                     __end_of_OSCILLATOR_Initialize:
  8527                           	opt stack 0
  8528                           tblptru	equ	0xFF8
  8529                           tblptrh	equ	0xFF7
  8530                           tblptrl	equ	0xFF6
  8531                           tablat	equ	0xFF5
  8532                           prodh	equ	0xFF4
  8533                           prodl	equ	0xFF3
  8534                           intcon	equ	0xFF2
  8535                           indf0	equ	0xFEF
  8536                           postinc0	equ	0xFEE
  8537                           fsr0h	equ	0xFEA
  8538                           fsr0l	equ	0xFE9
  8539                           wreg	equ	0xFE8
  8540                           indf2	equ	0xFDF
  8541                           fsr2h	equ	0xFDA
  8542                           fsr2l	equ	0xFD9
  8543                           status	equ	0xFD8
  8544                           
  8545 ;; *************** function _INTERRUPT_Initialize *****************
  8546 ;; Defined at:
  8547 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      void 
  8554 ;; Registers used:
  8555 ;;		None
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;Total ram usage:        0 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    2
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_SYSTEM_Initialize
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text64
  8576  01124C                     __ptext64:
  8577                           	opt stack 0
  8578  01124C                     _INTERRUPT_Initialize:
  8579                           	opt stack 27
  8580                           
  8581                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
  8582                           
  8583                           ; BSR set to: 14
  8584                           ;incstack = 0
  8585  01124C  8AF2               	bsf	intcon,5,c	;volatile
  8586                           
  8587                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
  8588  01124E  010E               	movlb	14	; () banked
  8589  011250  89BA               	bsf	186,4,b	;volatile
  8590                           
  8591                           ; BSR set to: 14
  8592  011252  0012               	return		;funcret
  8593  011254                     __end_of_INTERRUPT_Initialize:
  8594                           	opt stack 0
  8595                           tblptru	equ	0xFF8
  8596                           tblptrh	equ	0xFF7
  8597                           tblptrl	equ	0xFF6
  8598                           tablat	equ	0xFF5
  8599                           prodh	equ	0xFF4
  8600                           prodl	equ	0xFF3
  8601                           intcon	equ	0xFF2
  8602                           indf0	equ	0xFEF
  8603                           postinc0	equ	0xFEE
  8604                           fsr0h	equ	0xFEA
  8605                           fsr0l	equ	0xFE9
  8606                           wreg	equ	0xFE8
  8607                           indf2	equ	0xFDF
  8608                           fsr2h	equ	0xFDA
  8609                           fsr2l	equ	0xFD9
  8610                           status	equ	0xFD8
  8611                           
  8612 ;; *************** function _EUSART2_Initialize *****************
  8613 ;; Defined at:
  8614 ;;		line 53 in file "mcc_generated_files/eusart2.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      void 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8632 ;;Total ram usage:        0 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    2
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_SYSTEM_Initialize
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text65
  8643  01115A                     __ptext65:
  8644                           	opt stack 0
  8645  01115A                     _EUSART2_Initialize:
  8646                           	opt stack 27
  8647                           
  8648                           ;eusart2.c: 58: BAUD2CON = 0x08;
  8649                           
  8650                           ; BSR set to: 14
  8651                           ;incstack = 0
  8652  01115A  0E08               	movlw	8
  8653  01115C  010E               	movlb	14	; () banked
  8654  01115E  6F9F               	movwf	159,b	;volatile
  8655                           
  8656                           ;eusart2.c: 61: RC2STA = 0x10;
  8657  011160  0E10               	movlw	16
  8658  011162  6F9D               	movwf	157,b	;volatile
  8659                           
  8660                           ;eusart2.c: 64: TX2STA = 0x04;
  8661  011164  0E04               	movlw	4
  8662  011166  6F9E               	movwf	158,b	;volatile
  8663                           
  8664                           ;eusart2.c: 67: SP2BRGL = 0x38;
  8665  011168  0E38               	movlw	56
  8666  01116A  6F9B               	movwf	155,b	;volatile
  8667                           
  8668                           ;eusart2.c: 70: SP2BRGH = 0x01;
  8669  01116C  0E01               	movlw	1
  8670  01116E  6F9C               	movwf	156,b	;volatile
  8671                           
  8672                           ; BSR set to: 14
  8673  011170  0012               	return		;funcret
  8674  011172                     __end_of_EUSART2_Initialize:
  8675                           	opt stack 0
  8676                           tblptru	equ	0xFF8
  8677                           tblptrh	equ	0xFF7
  8678                           tblptrl	equ	0xFF6
  8679                           tablat	equ	0xFF5
  8680                           prodh	equ	0xFF4
  8681                           prodl	equ	0xFF3
  8682                           intcon	equ	0xFF2
  8683                           indf0	equ	0xFEF
  8684                           postinc0	equ	0xFEE
  8685                           fsr0h	equ	0xFEA
  8686                           fsr0l	equ	0xFE9
  8687                           wreg	equ	0xFE8
  8688                           indf2	equ	0xFDF
  8689                           fsr2h	equ	0xFDA
  8690                           fsr2l	equ	0xFD9
  8691                           status	equ	0xFD8
  8692                           
  8693 ;; *************** function _EUSART1_Initialize *****************
  8694 ;; Defined at:
  8695 ;;		line 53 in file "mcc_generated_files/eusart1.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;		None
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;		None
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  1    wreg      void 
  8702 ;; Registers used:
  8703 ;;		wreg, status,2
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8713 ;;Total ram usage:        0 bytes
  8714 ;; Hardware stack levels used:    1
  8715 ;; Hardware stack levels required when called:    2
  8716 ;; This function calls:
  8717 ;;		Nothing
  8718 ;; This function is called by:
  8719 ;;		_SYSTEM_Initialize
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text66
  8724  0111B4                     __ptext66:
  8725                           	opt stack 0
  8726  0111B4                     _EUSART1_Initialize:
  8727                           	opt stack 27
  8728                           
  8729                           ;eusart1.c: 58: BAUD1CON = 0x08;
  8730                           
  8731                           ; BSR set to: 14
  8732                           ;incstack = 0
  8733  0111B4  0E08               	movlw	8
  8734  0111B6  6E9F               	movwf	3999,c	;volatile
  8735                           
  8736                           ;eusart1.c: 61: RC1STA = 0x90;
  8737  0111B8  0E90               	movlw	144
  8738  0111BA  6E9D               	movwf	3997,c	;volatile
  8739                           
  8740                           ;eusart1.c: 64: TX1STA = 0xAC;
  8741  0111BC  0EAC               	movlw	172
  8742  0111BE  6E9E               	movwf	3998,c	;volatile
  8743                           
  8744                           ;eusart1.c: 67: SP1BRGL = 0x38;
  8745  0111C0  0E38               	movlw	56
  8746  0111C2  6E9B               	movwf	3995,c	;volatile
  8747                           
  8748                           ;eusart1.c: 70: SP1BRGH = 0x01;
  8749  0111C4  0E01               	movlw	1
  8750  0111C6  6E9C               	movwf	3996,c	;volatile
  8751  0111C8  0012               	return		;funcret
  8752  0111CA                     __end_of_EUSART1_Initialize:
  8753                           	opt stack 0
  8754                           tblptru	equ	0xFF8
  8755                           tblptrh	equ	0xFF7
  8756                           tblptrl	equ	0xFF6
  8757                           tablat	equ	0xFF5
  8758                           prodh	equ	0xFF4
  8759                           prodl	equ	0xFF3
  8760                           intcon	equ	0xFF2
  8761                           indf0	equ	0xFEF
  8762                           postinc0	equ	0xFEE
  8763                           fsr0h	equ	0xFEA
  8764                           fsr0l	equ	0xFE9
  8765                           wreg	equ	0xFE8
  8766                           indf2	equ	0xFDF
  8767                           fsr2h	equ	0xFDA
  8768                           fsr2l	equ	0xFD9
  8769                           status	equ	0xFD8
  8770                           
  8771 ;; *************** function _DAC1_Initialize *****************
  8772 ;; Defined at:
  8773 ;;		line 57 in file "mcc_generated_files/dac1.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;		None
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1    wreg      void 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8791 ;;Total ram usage:        0 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    2
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_SYSTEM_Initialize
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           	psect	text67
  8802  011228                     __ptext67:
  8803                           	opt stack 0
  8804  011228                     _DAC1_Initialize:
  8805                           	opt stack 27
  8806                           
  8807                           ;dac1.c: 60: DAC1CON0 = 0x80;
  8808                           
  8809                           ;incstack = 0
  8810  011228  0E80               	movlw	128
  8811  01122A  010F               	movlb	15	; () banked
  8812  01122C  6F33               	movwf	51,b	;volatile
  8813                           
  8814                           ;dac1.c: 62: DAC1CON1 = 0x1C;
  8815  01122E  0E1C               	movlw	28
  8816  011230  6F34               	movwf	52,b	;volatile
  8817                           
  8818                           ; BSR set to: 15
  8819  011232  0012               	return		;funcret
  8820  011234                     __end_of_DAC1_Initialize:
  8821                           	opt stack 0
  8822                           tblptru	equ	0xFF8
  8823                           tblptrh	equ	0xFF7
  8824                           tblptrl	equ	0xFF6
  8825                           tablat	equ	0xFF5
  8826                           prodh	equ	0xFF4
  8827                           prodl	equ	0xFF3
  8828                           intcon	equ	0xFF2
  8829                           indf0	equ	0xFEF
  8830                           postinc0	equ	0xFEE
  8831                           fsr0h	equ	0xFEA
  8832                           fsr0l	equ	0xFE9
  8833                           wreg	equ	0xFE8
  8834                           indf2	equ	0xFDF
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8
  8838                           
  8839 ;; *************** function _CMP1_Initialize *****************
  8840 ;; Defined at:
  8841 ;;		line 56 in file "mcc_generated_files/cmp1.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;		None
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      void 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8859 ;;Total ram usage:        0 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:    2
  8862 ;; This function calls:
  8863 ;;		Nothing
  8864 ;; This function is called by:
  8865 ;;		_SYSTEM_Initialize
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text68
  8870  0111CA                     __ptext68:
  8871                           	opt stack 0
  8872  0111CA                     _CMP1_Initialize:
  8873                           	opt stack 27
  8874                           
  8875                           ;cmp1.c: 61: CM1CON0 = 0x94;
  8876                           
  8877                           ; BSR set to: 15
  8878                           ;incstack = 0
  8879  0111CA  0E94               	movlw	148
  8880  0111CC  010F               	movlb	15	; () banked
  8881  0111CE  6F39               	movwf	57,b	;volatile
  8882                           
  8883                           ;cmp1.c: 64: CM1CON1 = 0x00;
  8884  0111D0  0E00               	movlw	0
  8885  0111D2  6F3A               	movwf	58,b	;volatile
  8886                           
  8887                           ;cmp1.c: 67: CM1NCH = 0x00;
  8888  0111D4  0E00               	movlw	0
  8889  0111D6  6F3B               	movwf	59,b	;volatile
  8890                           
  8891                           ;cmp1.c: 70: CM1PCH = 0x05;
  8892  0111D8  0E05               	movlw	5
  8893  0111DA  6F3C               	movwf	60,b	;volatile
  8894                           
  8895                           ; BSR set to: 15
  8896  0111DC  0012               	return		;funcret
  8897  0111DE                     __end_of_CMP1_Initialize:
  8898                           	opt stack 0
  8899                           tblptru	equ	0xFF8
  8900                           tblptrh	equ	0xFF7
  8901                           tblptrl	equ	0xFF6
  8902                           tablat	equ	0xFF5
  8903                           prodh	equ	0xFF4
  8904                           prodl	equ	0xFF3
  8905                           intcon	equ	0xFF2
  8906                           indf0	equ	0xFEF
  8907                           postinc0	equ	0xFEE
  8908                           fsr0h	equ	0xFEA
  8909                           fsr0l	equ	0xFE9
  8910                           wreg	equ	0xFE8
  8911                           indf2	equ	0xFDF
  8912                           fsr2h	equ	0xFDA
  8913                           fsr2l	equ	0xFD9
  8914                           status	equ	0xFD8
  8915                           
  8916 ;; *************** function _CMP1_GetOutputStatus *****************
  8917 ;; Defined at:
  8918 ;;		line 74 in file "mcc_generated_files/cmp1.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;		None
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;		None
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  1    wreg      unsigned char 
  8925 ;; Registers used:
  8926 ;;		wreg
  8927 ;; Tracked objects:
  8928 ;;		On entry : 0/0
  8929 ;;		On exit  : 0/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8936 ;;Total ram usage:        0 bytes
  8937 ;; Hardware stack levels used:    1
  8938 ;; Hardware stack levels required when called:    2
  8939 ;; This function calls:
  8940 ;;		Nothing
  8941 ;; This function is called by:
  8942 ;;		_main
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text69
  8947  01121A                     __ptext69:
  8948                           	opt stack 0
  8949  01121A                     _CMP1_GetOutputStatus:
  8950                           	opt stack 28
  8951                           
  8952                           ;cmp1.c: 76: return (CMOUTbits.MC1OUT);
  8953                           
  8954                           ; BSR set to: 15
  8955                           ;incstack = 0
  8956  01121A  010F               	movlb	15	; () banked
  8957  01121C  A13D               	btfss	61,0,b	;volatile
  8958  01121E  D002               	goto	u570
  8959  011220  0E01               	movlw	1
  8960  011222  0012               	return	
  8961  011224                     u570:
  8962  011224  0E00               	movlw	0
  8963  011226  0012               	return	
  8964  011228                     __end_of_CMP1_GetOutputStatus:
  8965                           	opt stack 0
  8966                           tblptru	equ	0xFF8
  8967                           tblptrh	equ	0xFF7
  8968                           tblptrl	equ	0xFF6
  8969                           tablat	equ	0xFF5
  8970                           prodh	equ	0xFF4
  8971                           prodl	equ	0xFF3
  8972                           intcon	equ	0xFF2
  8973                           indf0	equ	0xFEF
  8974                           postinc0	equ	0xFEE
  8975                           fsr0h	equ	0xFEA
  8976                           fsr0l	equ	0xFE9
  8977                           wreg	equ	0xFE8
  8978                           indf2	equ	0xFDF
  8979                           fsr2h	equ	0xFDA
  8980                           fsr2l	equ	0xFD9
  8981                           status	equ	0xFD8
  8982                           
  8983 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  8984 ;; Defined at:
  8985 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;		None
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9001 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9002 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9003 ;;Total ram usage:       18 bytes
  9004 ;; Hardware stack levels used:    1
  9005 ;; Hardware stack levels required when called:    1
  9006 ;; This function calls:
  9007 ;;		_PIN_MANAGER_IOC
  9008 ;; This function is called by:
  9009 ;;		Interrupt level 2
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	intcode
  9014  000008                     __pintcode:
  9015                           	opt stack 0
  9016  000008                     _INTERRUPT_InterruptManagerHigh:
  9017                           	opt stack 19
  9018                           
  9019                           ; BSR set to: 15
  9020                           ;incstack = 0
  9021  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9022  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  9023  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  9024  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  9025  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  9026  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  9027  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  9028  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  9029  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  9030  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  9031  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  9032  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  9033  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  9034  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  9035  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  9036  000042  C04B  F00F         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  9037  000046  C04C  F010         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  9038  00004A  C04D  F011         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  9039  00004E  C04E  F012         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  9040                           
  9041                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
  9042  000052  010E               	movlb	14	; () banked
  9043  000054  B9C2               	btfsc	194,4,b	;volatile
  9044                           
  9045                           ; BSR set to: 14
  9046  000056  A9CA               	btfss	202,4,b	;volatile
  9047  000058  D002               	goto	i2l178
  9048                           
  9049                           ; BSR set to: 14
  9050                           ;interrupt_manager.c: 68: {
  9051                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
  9052  00005A  EC36  F089         	call	_PIN_MANAGER_IOC	;wreg free
  9053  00005E                     i2l178:
  9054                           
  9055                           ;interrupt_manager.c: 71: else
  9056                           ;interrupt_manager.c: 72: {
  9057  00005E  C012  F04E         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  9058  000062  C011  F04D         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  9059  000066  C010  F04C         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  9060  00006A  C00F  F04B         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  9061  00006E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  9062  000072  C00D  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  9063  000076  C00C  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  9064  00007A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  9065  00007E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  9066  000082  C009  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  9067  000086  C008  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  9068  00008A  C007  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  9069  00008E  C006  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  9070  000092  C005  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  9071  000096  C004  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  9072  00009A  C003  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  9073  00009E  C002  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  9074  0000A2  C001  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  9075  0000A6  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9076  0000A8  0011               	retfie		f
  9077  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
  9078                           	opt stack 0
  9079                           pclatu	equ	0xFFB
  9080                           pclath	equ	0xFFA
  9081                           tblptru	equ	0xFF8
  9082                           tblptrh	equ	0xFF7
  9083                           tblptrl	equ	0xFF6
  9084                           tablat	equ	0xFF5
  9085                           prodh	equ	0xFF4
  9086                           prodl	equ	0xFF3
  9087                           intcon	equ	0xFF2
  9088                           indf0	equ	0xFEF
  9089                           postinc0	equ	0xFEE
  9090                           fsr0h	equ	0xFEA
  9091                           fsr0l	equ	0xFE9
  9092                           wreg	equ	0xFE8
  9093                           fsr1h	equ	0xFE2
  9094                           fsr1l	equ	0xFE1
  9095                           indf2	equ	0xFDF
  9096                           fsr2h	equ	0xFDA
  9097                           fsr2l	equ	0xFD9
  9098                           status	equ	0xFD8
  9099                           
  9100 ;; *************** function _PIN_MANAGER_IOC *****************
  9101 ;; Defined at:
  9102 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;		None
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;		None
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      void 
  9109 ;; Registers used:
  9110 ;;		None
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;Total ram usage:        0 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; This function calls:
  9123 ;;		Nothing
  9124 ;; This function is called by:
  9125 ;;		_INTERRUPT_InterruptManagerHigh
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text71
  9130  01126C                     __ptext71:
  9131                           	opt stack 0
  9132  01126C                     _PIN_MANAGER_IOC:
  9133                           	opt stack 19
  9134                           
  9135                           ;pin_manager.c: 128: PIR0bits.IOCIF = 0;
  9136                           
  9137                           ;incstack = 0
  9138  01126C  010E               	movlb	14	; () banked
  9139  01126E  99CA               	bcf	202,4,b	;volatile
  9140                           
  9141                           ; BSR set to: 14
  9142  011270  0012               	return		;funcret
  9143  011272                     __end_of_PIN_MANAGER_IOC:
  9144                           	opt stack 0
  9145                           pclatu	equ	0xFFB
  9146                           pclath	equ	0xFFA
  9147                           tblptru	equ	0xFF8
  9148                           tblptrh	equ	0xFF7
  9149                           tblptrl	equ	0xFF6
  9150                           tablat	equ	0xFF5
  9151                           prodh	equ	0xFF4
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           indf0	equ	0xFEF
  9155                           postinc0	equ	0xFEE
  9156                           fsr0h	equ	0xFEA
  9157                           fsr0l	equ	0xFE9
  9158                           wreg	equ	0xFE8
  9159                           fsr1h	equ	0xFE2
  9160                           fsr1l	equ	0xFE1
  9161                           indf2	equ	0xFDF
  9162                           fsr2h	equ	0xFDA
  9163                           fsr2l	equ	0xFD9
  9164                           status	equ	0xFD8
  9165                           pclatu	equ	0xFFB
  9166                           pclath	equ	0xFFA
  9167                           tblptru	equ	0xFF8
  9168                           tblptrh	equ	0xFF7
  9169                           tblptrl	equ	0xFF6
  9170                           tablat	equ	0xFF5
  9171                           prodh	equ	0xFF4
  9172                           prodl	equ	0xFF3
  9173                           intcon	equ	0xFF2
  9174                           indf0	equ	0xFEF
  9175                           postinc0	equ	0xFEE
  9176                           fsr0h	equ	0xFEA
  9177                           fsr0l	equ	0xFE9
  9178                           wreg	equ	0xFE8
  9179                           fsr1h	equ	0xFE2
  9180                           fsr1l	equ	0xFE1
  9181                           indf2	equ	0xFDF
  9182                           fsr2h	equ	0xFDA
  9183                           fsr2l	equ	0xFD9
  9184                           status	equ	0xFD8
  9185                           
  9186                           	psect	rparam
  9187  0000                     pclatu	equ	0xFFB
  9188                           pclath	equ	0xFFA
  9189                           tblptru	equ	0xFF8
  9190                           tblptrh	equ	0xFF7
  9191                           tblptrl	equ	0xFF6
  9192                           tablat	equ	0xFF5
  9193                           prodh	equ	0xFF4
  9194                           prodl	equ	0xFF3
  9195                           intcon	equ	0xFF2
  9196                           indf0	equ	0xFEF
  9197                           postinc0	equ	0xFEE
  9198                           fsr0h	equ	0xFEA
  9199                           fsr0l	equ	0xFE9
  9200                           wreg	equ	0xFE8
  9201                           fsr1h	equ	0xFE2
  9202                           fsr1l	equ	0xFE1
  9203                           indf2	equ	0xFDF
  9204                           fsr2h	equ	0xFDA
  9205                           fsr2l	equ	0xFD9
  9206                           status	equ	0xFD8
  9207                           
  9208                           	psect	temp
  9209  00004B                     btemp:
  9210                           	opt stack 0
  9211  00004B                     	ds	1
  9212  0000                     int$flags	set	btemp
  9213  0000                     wtemp6	set	btemp+1
  9214                           pclatu	equ	0xFFB
  9215                           pclath	equ	0xFFA
  9216                           tblptru	equ	0xFF8
  9217                           tblptrh	equ	0xFF7
  9218                           tblptrl	equ	0xFF6
  9219                           tablat	equ	0xFF5
  9220                           prodh	equ	0xFF4
  9221                           prodl	equ	0xFF3
  9222                           intcon	equ	0xFF2
  9223                           indf0	equ	0xFEF
  9224                           postinc0	equ	0xFEE
  9225                           fsr0h	equ	0xFEA
  9226                           fsr0l	equ	0xFE9
  9227                           wreg	equ	0xFE8
  9228                           fsr1h	equ	0xFE2
  9229                           fsr1l	equ	0xFE1
  9230                           indf2	equ	0xFDF
  9231                           fsr2h	equ	0xFDA
  9232                           fsr2l	equ	0xFD9
  9233                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    566
    Data        1
    BSS         64
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      74
    BANK0           160     12      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 3719
		 -> setnotes(CODE[69]), initnote(CODE[37]), inithop(CODE[20]), noteerr(CODE[28]), 
		 -> credits(CODE[13]), disabled(CODE[9]), enabled(CODE[9]), RAM(DATA[3719]), 
		 -> servmsg(CODE[81]), inscoin(CODE[22]), 

    displ_note@lcdstring	PTR unsigned char  size(2) Largest target is 8
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[8]), 


Critical Paths under _main in COMRAM

    _vend_init->_lcd_string
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_reset->_mdb_comm
    _mdb_noten->_mdb_comm
    _cctalk_init->_cctalk_adpoll
    _cctalk_init->_cctalk_pinenter
    _cctalk_init->_cctalk_poll
    _cctalk_poll->_cctalk_comm
    _cctalk_pinenter->_cctalk_comm
    _cctalk_adpoll->_cctalk_comm
    _cctalk_comm->_TMR3_Initialize
    _cctalk_comm->_init_mdbdata
    _cctalk_comm->_mdb_transmit
    _mdb_poll->_mdb_comm
    _mdb_comm->_TMR1_Initialize
    _mdb_comm->_init_mdbdata
    _mdb_comm->_mdb_transmit
    _mdb_transmit->_EUSART1_Write
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _set_notes->_displ_note
    _enable_notes->_displ_nendis
    _displ_nendis->_lcd_string
    _butindb->_butin
    _displ_note->_lcd_string
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_DATAEE_WriteByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _displ_credit->_displ_hex

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42529
               _CMP1_GetOutputStatus
                  _SYSTEM_Initialize
                         _credit_add
                    _credit_subtract
                       _displ_credit
                       _displ_noteer
                      _enter_service
                           _lcd_init
                         _lcd_string
                           _mdb_init
                           _mdb_poll
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   10648
                     _DAC1_SetOutput
                        _cctalk_init
                       _credit_check
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             1     1      0    4132
                                             26 COMRAM     1     1      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0     924
                                             23 COMRAM     3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (2) _cctalk_init                                          1     1      0    3201
                                             26 COMRAM     1     1      0
                      _cctalk_adpoll
                          _cctalk_on
                    _cctalk_pinenter
                        _cctalk_poll
               _eusartmdb_Initialize
                             _mdb_on
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cctalk_poll                                          1     1      0    1037
                                             25 COMRAM     1     1      0
                        _cctalk_comm
 ---------------------------------------------------------------------------------
 (3) _cctalk_pinenter                                      1     1      0    1127
                                             25 COMRAM     1     1      0
                        _cctalk_comm
                       _init_mdbdata
 ---------------------------------------------------------------------------------
 (3) _cctalk_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cctalk_adpoll                                        1     1      0    1037
                                             25 COMRAM     1     1      0
                        _cctalk_comm
 ---------------------------------------------------------------------------------
 (4) _cctalk_comm                                          5     3      2    1036
                                             20 COMRAM     5     3      2
                    _TMR3_Initialize
                        _cctalk_read
                       _init_mdbdata
                       _mdb_transmit
 ---------------------------------------------------------------------------------
 (5) _cctalk_read                                          1     1      0      24
                                             18 COMRAM     1     1      0
                       _EUSART1_Read
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             1     1      0     894
                                             23 COMRAM     1     1      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1     893
                                             20 COMRAM     3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      44
                                             19 COMRAM     1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0      90
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     687
                                             26 COMRAM     2     2      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     523
                                             25 COMRAM     1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        0     0      0   12763
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                          _Note_test
                         _Sensor_set
                          _Vend_test
                            _butindb
                         _lcd_string
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            0     0      0    9781
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         1     1      0    3168
                                             31 COMRAM     1     1      0
                            _butindb
                       _displ_nendis
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         1     1      0    2983
                                             30 COMRAM     1     1      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              2     2      0      30
                                             19 COMRAM     2     2      0
                              _butin
 ---------------------------------------------------------------------------------
 (5) _butin                                                1     1      0       0
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           4     2      2    3631
                                             30 COMRAM     4     2      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _Vend_test                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Note_test                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Audit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0    3562
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     610
                                             25 COMRAM     3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0    5046
                                             31 COMRAM     1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3    2952
                                             25 COMRAM     5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _displ_hex                                           15    12      3    1712
                                             28 COMRAM     3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           1     1      0     424
                                             24 COMRAM     1     1      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     229
                                             22 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     164
                                             20 COMRAM     2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      68
                                             18 COMRAM     2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___ltmod                                              7     1      6     412
                                             18 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) ___ltdiv                                             10     4      6     421
                                             18 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0     348
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _credit_subtract                                      1     1      0     915
                                             22 COMRAM     1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _credit_add                                           1     1      0     915
                                             22 COMRAM     1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     545
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     348
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR3_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManagerHigh                     18    18      0       0
                                              0 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _TMR3_Initialize
     _TMR5_Initialize
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _credit_subtract
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _enter_service
     _Audit
     _Clear_cred
     _Hopper_coin
     _Note_test
     _Sensor_set
     _Vend_test
     _butindb
       _butin
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _vend_init
     _DAC1_SetOutput
     _cctalk_init
       _cctalk_adpoll
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
       _cctalk_on
       _cctalk_pinenter
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
         _init_mdbdata
       _cctalk_poll
         _cctalk_comm
           _TMR3_Initialize
           _cctalk_read
             _EUSART1_Read
             _mdb_waitr
           _init_mdbdata
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
       _eusartmdb_Initialize
       _mdb_on
     _credit_check
       _DATAEE_ReadByte
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      2C       5       27.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      4A       1       78.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      76       6        0.0%
DATA                 0      0      76       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Dec 23 12:39:54 2017

                       lcd_writeC@lcdata 0019                              __CFG_CP$OFF 000000  
                      ??_CMP1_Initialize 0013                            ?_displ_credit 0001  
                          ?_displ_nendis 0001                          lcd_write@lcdata 0016  
                          ?_displ_noteer 0001                              __CFG_LVP$ON 000000  
                                    LATE 000F87                          _DAC1_Initialize 1228  
               __size_of_cctalk_pinenter 0034                                      l101 11EC  
                                    l234 0E64                                      l710 0778  
                                    l711 078A                                      l722 07BA  
                                    l714 07D8                                      l731 08AA  
                                    l715 07D0                                      l707 0742  
                                    l732 08E0                                      l740 08D6  
                                    l716 07C0                                      l741 08DC  
                                    l733 08B2                                      l717 07A8  
                                    l734 0912                                      l735 08B8  
                                    l719 07AE                                      l736 08BE  
                                    l737 08C4                                      l738 08CA  
                                    l739 08D0                                      _GIE 007F97  
                                    u440 0732                             __CFG_CPD$OFF 000000  
                                    u570 1224                          _timer1ReloadVal 0047  
                                    prod 000FF3                                      wreg 000FE8  
                         _DAC1_SetOutput 1234                           ??_credit_check 0015  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                          ?_mdb_security 0001                                     l1012 0CD2  
                                   l1022 0170                                     l1023 0140  
                                   l1032 01F0                                     l1024 01A6  
                                   l1033 01C0                                     l1025 0148  
                                   l1050 064E                                     l1026 0150  
                                   l1035 01C8                                     l1027 0158  
                                   l1036 01D0                                     l1028 0160  
                                   l1037 01D8                                     l1029 0168  
                                   l1046 0642                                     l1038 01E0  
                                   l2110 10F8                                     l2102 02CE  
                                   l1047 05E4                                     l1039 01E8  
                                   l2103 02EE                                     l1064 0B38  
                                   l1056 0448                                     l1065 0AF6  
                                   l1049 0668                                     l1057 044E  
                                   l2105 031E                                     l1066 0B4C  
                                   l1058 04C8                                     l1082 118C  
                                   l1067 0B0C                                     l1059 0454  
                                   l1076 0FBA                                     l1068 0B22  
                                   l2109 1104                          _timer3ReloadVal 0045  
                                   l1365 1120                                     l1701 052A  
                                   l2077 0D6C                                     l1349 0A70  
                                   l1366 111A                                     l1710 05CA  
                                   l1702 05A4                                     l2078 0D56  
                                   l2511 0AD0                                     l1703 0532  
                                   l2512 0ADC                                     l1720 0BC8  
                                   l1704 0542                                     l2521 0C34  
                                   l1721 0BD8                                     l1705 0552  
                                   l2522 0C40                                     l1706 0562  
                                   l2098 02A8                                     l2507 0AA6  
                                   l1707 0572                                     l2099 027A  
                                   l2508 0A9C                                     l1716 0BB2  
                                   l1708 0582                                     l1740 0062  
                                   l2517 0C14                                     l1717 0BE0  
                                   l1741 0030                                     l2518 0C0A  
                                   l1718 0BBA                                     l4038 1200  
                                   l1750 00C8                                     l1719 0BF4  
                                   l1751 0084                                     l1743 0038  
                                   l1760 00AE                                     l1752 008C  
                                   l1744 0040                                     l1761 00B2  
                                   l1753 011C                                     l1745 0048  
                                   l1770 0348                                     l1762 00B6  
                                   l1754 0090                                     l1746 0050  
                                   l1763 00BA                                     l1755 0094  
                                   l1747 0058                                     l4092 106E  
                                   l1764 00BE                                     l1756 009E  
                                   l1685 1076                                     l1773 039E  
                                   l1765 00C2                                     l1757 00A2  
                                   l1693 0936                                     l5142 07EE  
                                   l1782 0416                                     l1774 03D0  
                                   l1758 00A6                                     l1694 091C  
                                   l1775 03A6                                     l1759 00AA  
                                   l1769 0378                                     l5276 07B4  
                                   u1100 037E                                     u1130 03DA  
                                   u1115 03C8                                     u1117 03CA  
                                   u1150 03E4                                     u1215 02F8  
                                   u1217 02FA                                     u2027 0D5C  
                                   u2037 0802                                     u1165 03EE  
                                   _LATA 000F83                                     _LATB 000F84  
                                   u2047 0810                                     u1167 03F0  
                                   _LATC 000F85                                     _LATD 000F86  
                                   u2057 087A                                     _LATE 000F87  
                                   u1450 0D7A                                     u2067 0E08  
                                   u1365 0E72                                     u2077 0E24  
                                   u1366 0E74                                     u1670 048A  
                                   u1734 09C0                                     u1735 09BC  
                                   u1760 0AAA                                     u1680 04C2  
                                   u1690 04FE                                     u1677 0480  
                                   u1790 0C18                                     u1687 04B8  
                                   u1697 04F4                                     u1890 080E  
          __size_of_eusartmdb_Initialize 0016                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                          _EUSART1_Write 11FE                            __CFG_FCMEN$ON 000000  
                                   _cash 002D                                     _dest 0032  
                                   _main 0736                                     _exit FE6F  
                          ?_EUSART1_Read 0001                            ?_mdb_transmit 0001  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   indf0 000FEF                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 004B                                     prodh 000FF4  
                                   prodl 000FF3                                     start 00AA  
                        _timer5ReloadVal 0043                               _Clear_cred 127A  
                        _TMR3_Initialize 0F46                   __size_of_enter_service 008E  
                          __CFG_CSWEN$ON 000000                             ___param_bank 000000  
                          __CFG_SCANE$ON 000000                           ??_displ_credit 0020  
              __size_of_DATAEE_WriteByte 003A                           ??_displ_nendis 001F  
         __size_of_OSCILLATOR_Initialize 0018                           ??_displ_noteer 001F  
          __end_of_OSCILLATOR_Initialize 115A                                    ?_main 0001  
                          __CFG_WDTE$OFF 000000                                    _T1CLK 000FD2  
                                  _T1CON 000FCF                                    _T3CLK 000FCC  
                                  _LATA6 007C1E                                    _T3CON 000FC9  
                                  _LATA7 007C1F                                    _T5CLK 000FC6  
                                  _T5CON 000FC3                          __end_of___ltdiv 0AEA  
                         __CFG_DEBUG$OFF 000000                          __end_of___ltmod 0C4E  
                 __end_of_DAC1_SetOutput 123C                                    i2l178 005E  
                                  _OSCEN 000EDC                                    _TMR1H 000FCE  
                        __end_of_cc_poll FE83                                    _TMR1L 000FCD  
                                  _TMR3H 000FC8                                    _TMR3L 000FC7  
                                  _TMR5H 000FC2                                    _TMR5L 000FC1  
                                  _PORTA 000F8D                          __end_of_cc_test FE8E  
                                  _PORTD 000F90                          __end_of_cc_stop FE89  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                          __end_of_cashint FE7E  
                        __end_of_cashinv FE80                                    _Audit 127C  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                          __CFG_WRT4$OFF 000000                            __CFG_WRT5$OFF 000000  
                          __CFG_WRT6$OFF 000000                            __CFG_WRT7$OFF 000000  
                        __end_of_enabled FFD7                           __CFG_EBTR0$OFF 000000  
                      lcd_write@savelatd 0015                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                        __end_of_credclr FDF3                           __CFG_EBTR4$OFF 000000  
                        __end_of_credmem FE82                           __CFG_EBTR5$OFF 000000  
                        __end_of_credits FFC5                           __CFG_EBTR6$OFF 000000  
                         __CFG_EBTR7$OFF 000000                          __end_of_dispclr FEB3  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                        __end_of_dispoff FEAC                            __CFG_WRTD$OFF 000000  
                          ??_Hopper_coin 0013                                    _bflag 0042  
                        _DATAEE_ReadByte 112A                           __CFG_EBTRB$OFF 000000  
                         ??_mdb_security 0018                  __end_of_PIN_MANAGER_IOC 1272  
                                  _audit FE62                          __end_of_butindb 112A  
                        __end_of_dsphome FEB1                                    _line1 FEA8  
                                  _line2 FEA7                                    _line3 FEA6  
                                  _line4 FEA5                                    _count 0049  
                                  _butin 0E02                          __end_of_mastadd FE90  
                        __end_of_hopcoin FE0D                          __end_of_inithop FFB8  
                        __end_of_inscoin FFA4                       __CFG_MCLRE$EXTMCLR 000000  
                         ?_EUSART1_Write 0001                  __end_of_TMR1_Initialize 0FAE  
                                  pclath 000FFA                                    tablat 000FF5  
                        __end_of_noteerr FF8E                          __end_of_tenrand FFFF  
                        __end_of_service FE54                          __end_of_servmsg FF08  
                         ??_EUSART1_Read 0013                           ??_mdb_transmit 0014  
                                  status 000FD8                                    wtemp6 004C  
                  __end_of_cctalk_adpoll 10F0                     __size_of_cctalk_comm 00FC  
                   __size_of_cctalk_init 0044                     __size_of_cctalk_read 001E  
                   __size_of_cctalk_poll 002E                          _TMR5_Initialize 0F12  
           __end_of_CMP1_GetOutputStatus 1228                          __initialization 0E76  
             __end_of_EUSART1_Initialize 11CA                             __end_of_main 07E2  
                __end_of_DAC1_Initialize 1234                             __end_of_exit FE74  
                                 ??_main 0023                            __activetblptr 000003  
                        ?_DAC1_SetOutput 0001                     __end_of_enable_notes 0BFA  
                            butindb@butt 0014                                   ?_Audit 0001  
                          _enter_service 088A               __end_of_EUSART2_Initialize 1172  
                      ??_cctalk_pinenter 001A                                   ?_butin 0001  
                                 _CM1NCH 000F3B                                   _CM1PCH 000F3C  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                                   _T1GATE 000FD1  
                                 _T1GCON 000FD0                                   _T3GATE 000FCB  
                                 _T3GCON 000FCA                                   _T5GATE 000FC5  
                                 _T5GCON 000FC4                                   _RC1REG 000F99  
                                 _RC2REG 000E99                                   _RC1STA 000F9D  
                                 _RC2STA 000E9D                                   _RB5PPS 000EF4  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _RC6PPS 000EFD  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
               __size_of_credit_subtract 0056                         credit_add@credit 0017  
                __end_of_TMR3_Initialize 0F7A                           __CFG_WDTCCS$SC 000000  
                                 _TABLAT 000FF5                            ?_init_mdbdata 0001  
                       __end_of_cc_level FE88                                   _OSCFRQ 000EDE  
                                 _NVMDAT 000F80                         __end_of_cc_reset FE8F  
                                 _TX1REG 000F9A                                   _TX2REG 000E9A  
                                 _TX1STA 000F9E                                   _TX2STA 000E9E  
                    __end_of_Hopper_coin 127A                              ?_Clear_cred 0001  
                         __CFG_PWRTE$OFF 000000                  DAC1_SetOutput@inputData 0013  
                         __CFG_XINST$OFF 000000                         __end_of_disabled FFCE  
                   __size_of_lcd_dispadd 0016                         __end_of_dispaddr FEB2  
                       __end_of_lcd_init 088A                         __end_of_lcd_test 119E  
                       __end_of_mdb_comm 041E                         __end_of_mdb_init 0D42  
                       __end_of_mdb_poll 0122                     __end_of_credit_check 10B0  
                                 _cc_pay FE8A                                   _cc_pin FE86  
                         __CFG_STVREN$ON 000000                               _Sensor_set 1274  
                        mdb_reset@i_2280 001A                                ??___ltdiv 0019  
                              ??___ltmod 0019                                   _credit 002E  
                                 _lcdata 0040                                   _dispon FEB3  
                                 _mdb_on 1266                                   _dispsl FEA9  
                                 _dispsr FEAA                                   _ercode 003D  
                                 _hexnum 0026                                   _hopadd FE90  
                                 _mcount 003A                                   clear_0 0E8E  
                                 clear_1 0E9A                         __end_of_initnote FF72  
                                 _noteen 0036                                   _senset FE36  
                     __size_of_Note_test 0002                                   _slvadd 003B  
                       __end_of_nochange FE36                                   _stradd 003E  
                      read_busy@savelatd 0014                        read_busy@savelate 0013  
                __end_of_DATAEE_ReadByte 1142                       __size_of_Vend_test 0002  
                              ??_butindb 0014                             __pdataCOMRAM 004A  
                         ?_enter_service 0001                         __end_of_notebits FE76  
                       __end_of_notetest FE62                             __mediumconst FDC8  
                       __end_of_setnotes FF4D                                   tblptrh 000FF7  
                                 tblptrl 000FF6                         __end_of_vendtest FE26  
                                 tblptru 000FF8                          ??_EUSART1_Write 0013  
                       ?_PIN_MANAGER_IOC 0001            __size_of_INTERRUPT_Initialize 0008  
                         ??_init_mdbdata 0013                     __end_of_displ_credit 0F12  
                       ?_TMR1_Initialize 0001                  __end_of_TMR5_Initialize 0F46  
       ??_INTERRUPT_InterruptManagerHigh 0001          ?_INTERRUPT_InterruptManagerHigh 0001  
                      _SYSTEM_Initialize 103E                     __end_of_displ_nendis 0CF4  
                             __accesstop 0060                  __end_of__initialization 0EA0  
                   __end_of_displ_noteer 1010                    __end_of_note_features FE9E  
                        _CMP1_Initialize 11CA                       ?_SYSTEM_Initialize 0001  
                  __end_of_theft_attempt FE92                            ___rparam_used 000001  
                          __end_of_Audit 127E                           __pcstackCOMRAM 0001  
                    ??_SYSTEM_Initialize 0015                         ?_DAC1_Initialize 0001  
                   __end_of_mdb_security 10D0                            __end_of_audit FE6F  
                       _DATAEE_WriteByte 0E3C                            __end_of_line1 FEA9  
                          __end_of_line2 FEA8                            __end_of_line3 FEA7  
                          __end_of_line4 FEA6                            __end_of_butin 0E3C  
                  __end_of_note_rejected FE93                       __size_of_cctalk_on 0006  
                  __end_of_note_security FEA3                     __end_of_EUSART1_Read 11F0  
                   __end_of_mdb_transmit 11FE                               _cc_countrq FE89  
                                ??_Audit 0013                      __size_of_Clear_cred 0002  
                   _CMP1_GetOutputStatus 121A                       __size_of_displ_hex 00B6  
                            _Hopper_coin 1278                       __size_of_lcd_write 0032  
                                ??_butin 0013                __end_of_SYSTEM_Initialize 1068  
                     __size_of_mdb_reset 0086                       __size_of_mdb_noten 003A  
                     __size_of_mdb_waitr 0006                       __size_of_mdb_waitx 0006  
                             __pbssBANK0 0060                      displ_hex@hexnumsave 0088  
                       ?_TMR3_Initialize 0001                        __end_of_Note_test 1278  
                             __pnvCOMRAM 0043                        __end_of_Vend_test 1274  
                     __size_of_read_busy 0042                        ??_credit_subtract 0017  
                        __CFG_PPS1WAY$ON 000000                              ?_Sensor_set 0001  
           __end_of_eusartmdb_Initialize 1188                      displ_nendis@notenum 001F  
                  __size_of_enable_notes 0054                                  ?_mdb_on 0001  
                                _CM1CON0 000F39                                  _CM1CON1 000F3A  
                        ??_enter_service 0023                       __size_of_set_notes 00CA  
                       ?_DATAEE_ReadByte 0013                       __size_of_vend_init 006A  
                             _credit_add 0C4E                        __end_of_cc_adpoll FE84  
                             _lcd_clockE 120C                               _lcd_clockH 1244  
                             _lcd_clockL 123C                        __end_of_cc_enable FE8D  
                                _SP1BRGH 000F9C                                  _SP1BRGL 000F9B  
                                _SP2BRGH 000E9C                                  _SP2BRGL 000E9B  
                             _lcdaddress 003C                                  _OSCCON1 000ED8  
                                _OSCCON3 000EDA                                  _TBLPTRH 000FF7  
                                _TBLPTRL 000FF6                                  _TBLPTRU 000FF8  
                  ?_CMP1_GetOutputStatus 0001                                  _NVMADRH 000F7F  
                                _NVMADRL 000F7E                               _jammed_err FE98  
                                _OSCTUNE 000EDD                                  _NVMCON2 000F82  
                      __end_of_cc_newpin FE86                        __end_of_cc_serial FE85  
                             _displ_code 0122                                  _PPSLOCK 000EA0  
                             _displ_note 099E                  __end_of_CMP1_Initialize 11DE  
                      __end_of_cc_status FE8C                               _lcd_string 041E  
                             _dispcursor FEAE                               _lcd_writeC 0AEA  
                              ?_lcd_init 0001                                ?_lcd_test 0001  
                              ?_mdb_comm 0015                                ?_mdb_init 0001  
                             _dispshleft FEAC                               _dispnormal FEAF  
                              ?_mdb_poll 0001                         ?_TMR5_Initialize 0001  
                      __end_of_cctalk_on 125A                     DATAEE_WriteByte@bAdd 0013  
                         displ_hex@value 0080                    __size_of_credit_check 0022  
                           _enable_notes 0BA6                                  __Hparam 0000  
                                __Lparam 0000               __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                         mdb_comm@mcount 0015                        __end_of_displ_hex 0686  
                      __end_of_dispfunc1 FEB7                        __end_of_dispfunc2 FEB6  
                      __end_of_dispfunc3 FEB5                        __end_of_lcd_write 0FE0  
                      __end_of_fiftyrand FFEF                           mdb_comm@slvadd 0016  
                                ___ltdiv 0A80                        __end_of_mdb_reset 099E  
                      __end_of_mdb_noten 0E02                                  ___ltmod 0BFA  
                      __end_of_mdb_waitr 1260                         ??_DAC1_SetOutput 0013  
                      __end_of_mdb_waitx 1266                                  _cc_poll FE82  
                                _cc_test FE8D                                  _cc_stop FE88  
                        __size_of_mdb_on 0006                                  _dbcount 0029  
                                __pcinit 0E76                                  _cashint FE7C  
                   __end_of_init_mdbdata 108E                                  _cashinv FE7E  
                        _cctalk_pinenter 0EAA                                  __ramtop 0F00  
                                _chkbyte 0038                                  _enabled FFCE  
                             _errorflags 0034                                  __ptext0 0736  
                                __ptext1 0A16                                  __ptext2 0CF4  
                                __ptext3 10B0                                  __ptext4 0918  
                                __ptext5 0DC8                                  __ptext6 0D42  
                                __ptext7 1172                                  __ptext8 1010  
                                __ptext9 0EAA                                  _credclr FDC9  
                                _credmem FE80                                  _credits FFB8  
                                _command 0030                                  _dispclr FEB2  
                                _dispoff FEAB                                  _mdbdata 0060  
                                _lcdfunc 0041                                  _lcdline 003F  
                              _T1CONbits 000FCF                                  _butindb 110E  
                                _dsphome FEB0                    _OSCILLATOR_Initialize 1142  
                                _mastadd FE8F                                  _hopcoin FDF3  
                                _buttons 002C                                  _inithop FFA4  
                              _T3CONbits 000FC9                                  _inscoin FF8E  
                              _CMOUTbits 000F3D                        __end_of_read_busy 0DC8  
                     _EUSART1_Initialize 11B4                 ??_PIN_MANAGER_Initialize 0013  
                  __size_of_displ_credit 0034                                _T5CONbits 000FC3  
                                _nobytes 0031                                  _noteerr FF72  
                                _tenrand FFF7                                  _notenum 004A  
                                _service FE45                    __size_of_displ_nendis 0052  
                                _servmsg FEB7                    __size_of_displ_noteer 0030  
             __size_of_SYSTEM_Initialize 002A                             _credit_check 108E  
                             ??_lcd_init 001B                               ??_lcd_test 001A  
                             ??_mdb_comm 0016                               ??_mdb_init 001B  
                   end_of_initialization 0EA0                               ??_mdb_poll 0018  
                    __size_of_Sensor_set 0002                      ?_EUSART1_Initialize 0001  
                          ??_cctalk_comm 0017                            ??_cctalk_init 001B  
                          ??_cctalk_read 0013                            ??_cctalk_poll 001A  
                      __end_of_note_poll FEA2                        __end_of_set_notes 05D0  
                      __end_of_note_type FEA1                        __end_of_just_busy FE9B  
                           ??_Clear_cred 0013                        __end_of_vend_init 0A80  
                  __size_of_mdb_security 0020                         ___ltdiv@dividend 0013  
                      __end_of_rom_error FE9A                       _EUSART2_Initialize 115A  
                      __end_of_vendstore FE7C                               _note_reset FEA4  
                             _sens_error FE9B                               _note_setup FEA3  
                                postinc0 000FEE                    __size_of_EUSART1_Read 0012  
                             _motr_error FE9C                    __size_of_mdb_transmit 000E  
                             _just_reset FE97                     ??_EUSART1_Initialize 0013  
                             _pricestore FE78                    __CFG_WDTCPS$WDTCPS_31 000000  
                    ?_EUSART2_Initialize 0001                             _displ_credit 0EDE  
                           _displ_nendis 0CA2                               _venderrors FE76  
                       displ_code@ercode 001C                             _displ_noteer 0FE0  
                            ?_credit_add 0001                              ?_lcd_clockE 0001  
                            ?_lcd_clockH 0001                              ?_lcd_clockL 0001  
                 ??_CMP1_GetOutputStatus 0013                   __size_of_cctalk_adpoll 0020  
                       ___ltdiv@quotient 0019                       __end_of_Clear_cred 127C  
                            ?_displ_code 0001                              ?_displ_note 001F  
                            ?_lcd_string 001A                              ?_lcd_writeC 0001  
                    EUSART1_Write@txData 0013                         ?_CMP1_Initialize 0001  
                       __CFG_FEXTOSC$OFF 000000                 __end_of_DATAEE_WriteByte 0E76  
                           _mdb_security 10B0                     ??_EUSART2_Initialize 0013  
                   _eusartmdb_Initialize 1172                             _EUSART1_Read 11DE  
                    __end_of_cashbox_err FE96                             _mdb_transmit 11F0  
                          ??_lcd_dispadd 0017                               displ_hex@i 008B  
                    __end_of_cctalk_comm 0324                      __end_of_cctalk_init 0D86  
                    __end_of_cctalk_read 110E                  __end_of_cctalk_pinenter 0EDE  
                    __end_of_cctalk_poll 103E                               mdb_reset@i 0019  
           __end_of_INTERRUPT_Initialize 1254                       mdb_transmit@txbyte 0014  
                             _twentyrand FFEF                           __end_of_cc_pay FE8B  
                         __end_of_cc_pin FE87                            __pidataCOMRAM 127E  
                         __end_of_dispon FEB4                           __end_of_mdb_on 126C  
                         __end_of_dispsl FEAA                           __end_of_dispsr FEAB  
                       displ_credit@cash 0020                           __end_of_hopadd FE91  
                 ?_OSCILLATOR_Initialize 0001                           __end_of_senset FE45  
                    start_initialization 0E76          __size_of_PIN_MANAGER_Initialize 00B0  
                           ?_Hopper_coin 0001                          _credit_subtract 0B50  
                  ?_eusartmdb_Initialize 0001                    __end_of_EUSART1_Write 120C  
                    DATAEE_ReadByte@bAdd 0013                 __size_of_PIN_MANAGER_IOC 0006  
                          _cctalk_adpoll 10D0                      __size_of_credit_add 0054  
                       __CFG_LPBOREN$OFF 000000                      __size_of_lcd_clockE 000E  
                    __size_of_lcd_clockH 0008                      __size_of_lcd_clockL 0008  
                              _Note_test 1276                 __size_of_TMR1_Initialize 0034  
                  __size_of_init_mdbdata 0026                                _Vend_test 1272  
                           ??_Sensor_set 0013                      __size_of_displ_code 0106  
                    __end_of_lcd_dispadd 11B4                      __size_of_displ_note 0078  
                               ??_mdb_on 0013                      __size_of_lcd_string 00E8  
                    __size_of_lcd_writeC 0066                 __size_of_DAC1_Initialize 000C  
                            __pbssCOMRAM 0023                            __pcstackBANK0 0080  
                    __end_of_dispshright FEAE                            butindb@butval 0015  
                              _cc_adpoll FE83                              _cashbox_err FE95  
                              _cc_enable FE8C                     __end_of_note_removed FE97  
                  credit_subtract@credit 0017                     __end_of_note_stacker FE9F  
                              _cc_newpin FE85                     init_mdbdata@initdata 0013  
                              _cc_serial FE84                       __end_of_Sensor_set 1276  
                            _cctalk_comm 0228                              _cctalk_init 0D42  
                            _cctalk_read 10F0                             _init_mdbdata 1068  
                      __size_of_lcd_init 00A8                              _cctalk_poll 1010  
                      __size_of_lcd_test 0016                        __size_of_mdb_comm 00FA  
                              _cc_status FE8B                        __size_of_mdb_init 004E  
                      __size_of_mdb_poll 0122                           ?_cctalk_adpoll 0001  
                              _cctalk_on 1254                   _PIN_MANAGER_Initialize 0686  
                             ?_Note_test 0001                         ?_cctalk_pinenter 0001  
               __size_of_TMR3_Initialize 0034                                __pintcode 0008  
                          __pmediumconst FDC8                               ?_Vend_test 0001  
                               ?___ltdiv 0013                                 ?___ltmod 0013  
                               _DAC1CON0 000F33                                 _DAC1CON1 000F34  
                              _displ_hex 05D0                                _dispfunc1 FEB6  
                              _dispfunc2 FEB5                                _dispfunc3 FEB4  
                              _lcd_write 0FAE                                _fiftyrand FFE7  
                              _mdb_reset 0918                                _mdb_noten 0DC8  
                              _mdb_waitr 125A                                _mdb_waitx 1260  
                               _BAUD1CON 000F9F                                 _BAUD2CON 000E9F  
                __end_of_credit_subtract 0BA6                                 ?_butindb 0001  
                  __end_of_enter_service 0918                           __size_of_Audit 0002  
                              _mdbtxbyte 0033                           _acept_disabled FE94  
                 ??_eusartmdb_Initialize 0013                           __size_of_butin 003A  
               __size_of_DATAEE_ReadByte 0018                                _read_busy 0D86  
                   _INTERRUPT_Initialize 124C                         ___ltmod@dividend 0013  
                  lcd_dispadd@lcdaddress 0017                                 _LATCbits 000F85  
                  lcd_dispadd@lcdatasave 0018                                 _IPR0bits 000EBA  
                               _PIE0bits 000EC2                            _note_features FE9D  
                            _lcd_dispadd 119E                      __CFG_BORV$VBOR_2P45 000000  
                          _theft_attempt FE91                               ?_cctalk_on 0001  
                     __end_of_cc_countrq FE8A                                 _PIR0bits 000ECA  
                        ___ltdiv@divisor 0016                             cctalk_comm@i 0018  
                               _PIR3bits 000ECD                                 _PIR4bits 000ECE  
                               _PIR7bits 000ED1                          ___ltdiv@counter 001C  
                              _note_poll FEA1                                _set_notes 0506  
               __size_of_TMR5_Initialize 0034                                _note_type FEA0  
                              _just_busy FE9A                             cctalk_poll@i 001A  
                              _vend_init 0A16                                _rom_error FE99  
                      ??_PIN_MANAGER_IOC 0001                                _vendstore FE7A  
                          _note_rejected FE92                        ??_TMR1_Initialize 0013  
                             ?_displ_hex 001D                               ?_lcd_write 0001  
                          _note_security FEA2                      __end_of_hundredrand FFE7  
                             ?_mdb_reset 0001                               ?_mdb_noten 0001  
                            _dispshright FEAD                               ?_mdb_waitr 0001  
                             ?_mdb_waitx 0001                             ??_credit_add 0017  
                           ??_lcd_clockE 0013                             ??_lcd_clockH 0013  
                           ??_lcd_clockL 0013                                mdb_comm@i 0017  
                 __end_of_acept_disabled FE95                                mdb_init@i 001B  
                  DATAEE_WriteByte@bData 0015                             ??_displ_code 001A  
                              mdb_poll@i 0018                          displ_hex@hexnum 001D  
                           ??_displ_note 0021                             ??_lcd_string 001D  
                           ??_lcd_writeC 0019                               ?_read_busy 0001  
                  ?_INTERRUPT_Initialize 0001                        ??_DAC1_Initialize 0013  
                      ?_DATAEE_WriteByte 0013                     __size_of_Hopper_coin 0002  
                        ??_cctalk_adpoll 001A                       ??_DATAEE_WriteByte 0016  
                    lcd_string@lcdstring 001A                                 __Hrparam 0000  
                            ??_Note_test 0013                                 __Lrparam 0000  
                     __end_of_credit_add 0CA2                       __CFG_BOREN$SBORDIS 000000  
                             ?_set_notes 0001                       __end_of_lcd_clockE 121A  
                     __end_of_lcd_clockH 124C                       __end_of_lcd_clockL 1244  
                            ??_Vend_test 0013                               ?_vend_init 0001  
                ??_OSCILLATOR_Initialize 0013                       __end_of_jammed_err FE99  
                     __end_of_displ_code 0228                       __end_of_displ_note 0A16  
            __size_of_EUSART1_Initialize 0016                         __size_of___ltdiv 006A  
                       __size_of___ltmod 0054                       __end_of_lcd_string 0506  
                     __end_of_dispcursor FEAF                       __end_of_lcd_writeC 0B50  
                         _invalid_escrow FE93                      __end_of_note_escrow FEA0  
                     __end_of_dispshleft FEAD                       __end_of_dispnormal FEB0  
                      ??_TMR3_Initialize 0013                                 _cc_level FE87  
                       cctalk_pinenter@i 001A                                 _cc_reset FE8E  
                       ?_credit_subtract 0001                         __size_of_butindb 001C  
                               _cctflags 002F                  __size_of_DAC1_SetOutput 0008  
          __size_of_CMP1_GetOutputStatus 000E                                 __ptext10 1254  
                               __ptext11 10D0                                 __ptext20 11FE  
                               __ptext12 0228                                 __ptext21 1266  
                               __ptext13 10F0                               _T1GCONbits 000FD0  
                               __ptext30 110E                                 __ptext22 1068  
                               __ptext14 1234                                 __ptext31 0E02  
                               __ptext23 11DE                                 __ptext15 0000  
                               __ptext40 0122                                 __ptext32 099E  
                               __ptext24 07E2                                 __ptext16 0324  
                               __ptext41 0EDE                                 __ptext33 1272  
                               __ptext25 1188                                 __ptext17 125A  
                               __ptext50 120C                                 __ptext42 041E  
                               __ptext34 1274                                 __ptext26 088A  
                               __ptext18 11F0                                 __ptext51 0BFA  
                               __ptext43 05D0                                 __ptext35 1276  
                               __ptext27 0506                                 __ptext19 1260  
                               __ptext60 0F46                                 __ptext52 0A80  
                               __ptext44 0AEA                                 __ptext36 1278  
                               __ptext28 0BA6                                 __ptext61 0F7A  
                               __ptext53 108E                                 __ptext45 119E  
                               __ptext37 127A                                 __ptext29 0CA2  
                               __ptext62 0686                                 __ptext54 0B50  
                               __ptext46 0FAE                                 __ptext38 127C  
                               __ptext71 126C                                 __ptext63 1142  
                               __ptext55 0C4E                                 __ptext47 0D86  
                               __ptext39 0FE0                                 __ptext64 124C  
                               __ptext56 0E3C                                 __ptext48 123C  
                               __ptext65 115A                                 __ptext57 112A  
                               __ptext49 1244                                 __ptext66 11B4  
                               __ptext58 103E                                 __ptext67 1228  
                               __ptext59 0F12                                 __ptext68 11CA  
                               __ptext69 121A                                 _disabled FFC5  
                               _dispaddr FEB1                                 _lcd_init 07E2  
                               _lcd_test 1188                                 _mdb_comm 0324  
                               _mdb_init 0CF4                                 _mdb_poll 0000  
                               _mdbflags 0037                               _T3GCONbits 000FCA  
            DATAEE_WriteByte@GIEBitValue 0016              __size_of_EUSART2_Initialize 0018  
                          __size_of_main 00AC                               _T5GCONbits 000FC4  
                               _initnote FF4D                                 _hpserial 0023  
                               _nochange FE26                          ___ltmod@divisor 0016  
                        cctalk_comm@dest 0019                        ??_DATAEE_ReadByte 0015  
                   __CFG_WDTCWS$WDTCWS_7 000000                 __size_of_CMP1_Initialize 0014  
                        ___ltmod@counter 0019                              ??_cctalk_on 0013  
                             _RC1STAbits 000F9D                                 _notebits FE74  
                             _RC2STAbits 000E9D                                 _notebyte 0039  
                               _notetest FE54                                 _venflags 002B  
                               _setnotes FF08                            init_mdbdata@i 0014  
                               _vendtest FE0D                              _hundredrand FFDF  
                               int$flags 004B                   __end_of_invalid_escrow FE94  
                     cctalk_comm@command 0016                             _note_removed FE96  
                           _note_stacker FE9E                          cctalk_read@data 0013  
                            ??_displ_hex 0020              PIN_MANAGER_Initialize@state 0013  
                            ??_lcd_write 0015                        ??_TMR5_Initialize 0013  
                     cctalk_comm@nobytes 0015                              ??_mdb_reset 0018  
                            ??_mdb_noten 0018                              ??_mdb_waitr 0013  
                            ??_mdb_waitx 0013                               _INTCONbits 000FF2  
                            _NVMCON1bits 000F81                   ??_INTERRUPT_Initialize 0013  
                            ??_read_busy 0013                       __end_of_note_reset FEA5  
                         _twohundredrand FFD7                       __end_of_sens_error FE9C  
                     __end_of_note_setup FEA4                                 intlevel2 0000  
                     __end_of_motr_error FE9D                             ?_cctalk_comm 0015  
                     __end_of_just_reset FE98                             ?_cctalk_init 0001  
                           ?_cctalk_read 0001                             ?_cctalk_poll 0001  
                ?_PIN_MANAGER_Initialize 0001                       __end_of_pricestore FE7A  
                         cctalk_adpoll@i 001A                        __CFG_CLKOUTEN$OFF 000000  
                          ?_enable_notes 0001                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors FE78                      displ_note@lcdstring 001F  
                            _note_escrow FE9F                              ??_set_notes 0023  
                            ??_vend_init 001F                              _noteen_byte 0035  
                      lcd_string@lcdline 001C                   __size_of_EUSART1_Write 000E  
 __end_of_INTERRUPT_InterruptManagerHigh 00AA  __size_of_INTERRUPT_InterruptManagerHigh 00A2  
         _INTERRUPT_InterruptManagerHigh 0008                               _RX1PPSbits 000EB5  
                             _RX2PPSbits 000E8D                        lcd_test@character 001A  
                 __end_of_twohundredrand FFDF                            ?_credit_check 0001  
                             _TX1STAbits 000F9E           __end_of_PIN_MANAGER_Initialize 0736  
                    enable_notes@notenum 0020                       __end_of_twentyrand FFF7  
                        _PIN_MANAGER_IOC 126C                           ??_enable_notes 0020  
                           ?_lcd_dispadd 0001                          _TMR1_Initialize 0F7A  
