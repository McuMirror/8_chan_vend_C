

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Oct 30 14:25:58 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 1.44
    59                           ; Generated 14/09/2017 GMT
    60                           ; 
    61                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F47K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  00179C                     __pidataCOMRAM:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _noteen_byte
    98  00179C  1F                 	db	31
    99                           
   100                           	psect	smallconst
   101  000F00                     __psmallconst:
   102                           	opt stack 0
   103  000F00  00                 	db	0
   104  000F01                     _venderrors:
   105                           	opt stack 0
   106  000F01  0017               	dw	23
   107  000F03                     __end_of_venderrors:
   108                           	opt stack 0
   109  000F03                     _pricestore:
   110                           	opt stack 0
   111  000F03  000F               	dw	15
   112  000F05                     __end_of_pricestore:
   113                           	opt stack 0
   114  000F05                     _vendstore:
   115                           	opt stack 0
   116  000F05  0007               	dw	7
   117  000F07                     __end_of_vendstore:
   118                           	opt stack 0
   119  000F07                     _cashint:
   120                           	opt stack 0
   121  000F07  0004               	dw	4
   122  000F09                     __end_of_cashint:
   123                           	opt stack 0
   124  000F09                     _cashinv:
   125                           	opt stack 0
   126  000F09  0002               	dw	2
   127  000F0B                     __end_of_cashinv:
   128                           	opt stack 0
   129  000F0B                     _credmem:
   130                           	opt stack 0
   131  000F0B  0000               	dw	0
   132  000F0D                     __end_of_credmem:
   133                           	opt stack 0
   134  000F0D                     _theft_attempt:
   135                           	opt stack 0
   136  000F0D  0C                 	db	12
   137  000F0E                     __end_of_theft_attempt:
   138                           	opt stack 0
   139  000F0E                     _note_rejected:
   140                           	opt stack 0
   141  000F0E  0B                 	db	11
   142  000F0F                     __end_of_note_rejected:
   143                           	opt stack 0
   144  000F0F                     _invalid_escrow:
   145                           	opt stack 0
   146  000F0F  0A                 	db	10
   147  000F10                     __end_of_invalid_escrow:
   148                           	opt stack 0
   149  000F10                     _acept_disabled:
   150                           	opt stack 0
   151  000F10  09                 	db	9
   152  000F11                     __end_of_acept_disabled:
   153                           	opt stack 0
   154  000F11                     _cashbox_err:
   155                           	opt stack 0
   156  000F11  08                 	db	8
   157  000F12                     __end_of_cashbox_err:
   158                           	opt stack 0
   159  000F12                     _note_removed:
   160                           	opt stack 0
   161  000F12  07                 	db	7
   162  000F13                     __end_of_note_removed:
   163                           	opt stack 0
   164  000F13                     _just_reset:
   165                           	opt stack 0
   166  000F13  06                 	db	6
   167  000F14                     __end_of_just_reset:
   168                           	opt stack 0
   169  000F14                     _jammed_err:
   170                           	opt stack 0
   171  000F14  05                 	db	5
   172  000F15                     __end_of_jammed_err:
   173                           	opt stack 0
   174  000F15                     _rom_error:
   175                           	opt stack 0
   176  000F15  04                 	db	4
   177  000F16                     __end_of_rom_error:
   178                           	opt stack 0
   179  000F16                     _just_busy:
   180                           	opt stack 0
   181  000F16  03                 	db	3
   182  000F17                     __end_of_just_busy:
   183                           	opt stack 0
   184  000F17                     _sens_error:
   185                           	opt stack 0
   186  000F17  02                 	db	2
   187  000F18                     __end_of_sens_error:
   188                           	opt stack 0
   189  000F18                     _motr_error:
   190                           	opt stack 0
   191  000F18  01                 	db	1
   192  000F19                     __end_of_motr_error:
   193                           	opt stack 0
   194  000F19                     _note_features:
   195                           	opt stack 0
   196  000F19  33                 	db	51
   197  000F1A                     __end_of_note_features:
   198                           	opt stack 0
   199  000F1A                     _note_stacker:
   200                           	opt stack 0
   201  000F1A  36                 	db	54
   202  000F1B                     __end_of_note_stacker:
   203                           	opt stack 0
   204  000F1B                     _note_escrow:
   205                           	opt stack 0
   206  000F1B  35                 	db	53
   207  000F1C                     __end_of_note_escrow:
   208                           	opt stack 0
   209  000F1C                     _note_type:
   210                           	opt stack 0
   211  000F1C  34                 	db	52
   212  000F1D                     __end_of_note_type:
   213                           	opt stack 0
   214  000F1D                     _note_poll:
   215                           	opt stack 0
   216  000F1D  33                 	db	51
   217  000F1E                     __end_of_note_poll:
   218                           	opt stack 0
   219  000F1E                     _note_security:
   220                           	opt stack 0
   221  000F1E  32                 	db	50
   222  000F1F                     __end_of_note_security:
   223                           	opt stack 0
   224  000F1F                     _note_setup:
   225                           	opt stack 0
   226  000F1F  31                 	db	49
   227  000F20                     __end_of_note_setup:
   228                           	opt stack 0
   229  000F20                     _note_reset:
   230                           	opt stack 0
   231  000F20  30                 	db	48
   232  000F21                     __end_of_note_reset:
   233                           	opt stack 0
   234  000F21                     _dispsl:
   235                           	opt stack 0
   236  000F21  18                 	db	24
   237  000F22                     __end_of_dispsl:
   238                           	opt stack 0
   239  000F22                     _dispsr:
   240                           	opt stack 0
   241  000F22  1B                 	db	27
   242  000F23                     __end_of_dispsr:
   243                           	opt stack 0
   244  000F23                     _dispoff:
   245                           	opt stack 0
   246  000F23  08                 	db	8
   247  000F24                     __end_of_dispoff:
   248                           	opt stack 0
   249  000F24                     _dispshleft:
   250                           	opt stack 0
   251  000F24  07                 	db	7
   252  000F25                     __end_of_dispshleft:
   253                           	opt stack 0
   254  000F25                     _dispshright:
   255                           	opt stack 0
   256  000F25  05                 	db	5
   257  000F26                     __end_of_dispshright:
   258                           	opt stack 0
   259  000F26                     _dispcursor:
   260                           	opt stack 0
   261  000F26  04                 	db	4
   262  000F27                     __end_of_dispcursor:
   263                           	opt stack 0
   264  000F27                     _dispnormal:
   265                           	opt stack 0
   266  000F27  06                 	db	6
   267  000F28                     __end_of_dispnormal:
   268                           	opt stack 0
   269  000F28                     _dsphome:
   270                           	opt stack 0
   271  000F28  02                 	db	2
   272  000F29                     __end_of_dsphome:
   273                           	opt stack 0
   274  000F29                     _dispaddr:
   275                           	opt stack 0
   276  000F29  A8                 	db	168
   277  000F2A                     __end_of_dispaddr:
   278                           	opt stack 0
   279  000F2A                     _dispclr:
   280                           	opt stack 0
   281  000F2A  01                 	db	1
   282  000F2B                     __end_of_dispclr:
   283                           	opt stack 0
   284  000F2B                     _dispon:
   285                           	opt stack 0
   286  000F2B  0C                 	db	12
   287  000F2C                     __end_of_dispon:
   288                           	opt stack 0
   289  000F2C                     _dispfunc2:
   290                           	opt stack 0
   291  000F2C  28                 	db	40
   292  000F2D                     __end_of_dispfunc2:
   293                           	opt stack 0
   294  000F2D                     _dispfunc1:
   295                           	opt stack 0
   296  000F2D  24                 	db	36
   297  000F2E                     __end_of_dispfunc1:
   298                           	opt stack 0
   299  000F2E                     _inscoin:
   300                           	opt stack 0
   301  000F2E  49                 	db	73
   302  000F2F  6E                 	db	110
   303  000F30  73                 	db	115
   304  000F31  65                 	db	101
   305  000F32  72                 	db	114
   306  000F33  74                 	db	116
   307  000F34  20                 	db	32
   308  000F35  43                 	db	67
   309  000F36  6F                 	db	111
   310  000F37  69                 	db	105
   311  000F38  6E                 	db	110
   312  000F39  73                 	db	115
   313  000F3A  20                 	db	32
   314  000F3B  6F                 	db	111
   315  000F3C  72                 	db	114
   316  000F3D  20                 	db	32
   317  000F3E  4E                 	db	78
   318  000F3F  6F                 	db	111
   319  000F40  74                 	db	116
   320  000F41  65                 	db	101
   321  000F42  73                 	db	115
   322  000F43  00                 	db	0
   323  000F44                     __end_of_inscoin:
   324                           	opt stack 0
   325  000F44                     _credits:
   326                           	opt stack 0
   327  000F44  20                 	db	32
   328  000F45  20                 	db	32
   329  000F46  43                 	db	67
   330  000F47  72                 	db	114
   331  000F48  65                 	db	101
   332  000F49  64                 	db	100
   333  000F4A  69                 	db	105
   334  000F4B  74                 	db	116
   335  000F4C  20                 	db	32
   336  000F4D  3D                 	db	61
   337  000F4E  20                 	db	32
   338  000F4F  52                 	db	82
   339  000F50  00                 	db	0
   340  000F51                     __end_of_credits:
   341                           	opt stack 0
   342  000F51  00                 	db	0	; dummy byte at the end
   343  0000                     
   344                           	psect	nvCOMRAM
   345  00003F                     __pnvCOMRAM:
   346                           	opt stack 0
   347  00003F                     _timer1ReloadVal:
   348                           	opt stack 0
   349  00003F                     	ds	2
   350  000041                     _count:
   351                           	opt stack 0
   352  000041                     	ds	1
   353  0000                     _PIR4bits	set	3790
   354  0000                     _TX2REG	set	3738
   355  0000                     _RC2REG	set	3737
   356  0000                     _RC2STAbits	set	3741
   357  0000                     _SP2BRGH	set	3740
   358  0000                     _SP2BRGL	set	3739
   359  0000                     _TX2STA	set	3742
   360  0000                     _RC2STA	set	3741
   361  0000                     _BAUD2CON	set	3743
   362  0000                     _PIR7bits	set	3793
   363  0000                     _IPR0bits	set	3770
   364  0000                     _OSCTUNE	set	3805
   365  0000                     _OSCFRQ	set	3806
   366  0000                     _OSCEN	set	3804
   367  0000                     _OSCCON3	set	3802
   368  0000                     _OSCCON1	set	3800
   369  0000                     _PIR3bits	set	3789
   370  0000                     _PIR0bits	set	3786
   371  0000                     _RX2PPSbits	set	3725
   372  0000                     _RB5PPS	set	3828
   373  0000                     _RC6PPS	set	3837
   374  0000                     _RX1PPSbits	set	3765
   375  0000                     _PPSLOCKbits	set	3744
   376  0000                     _PPSLOCK	set	3744
   377  0000                     _PIE0bits	set	3778
   378  0000                     _CMOUTbits	set	3901
   379  0000                     _CM1PCH	set	3900
   380  0000                     _CM1NCH	set	3899
   381  0000                     _CM1CON1	set	3898
   382  0000                     _CM1CON0	set	3897
   383  0000                     _FVRCONbits	set	3889
   384  0000                     _FVRCON	set	3889
   385  0000                     _ODCOND	set	3876
   386  0000                     _ODCONC	set	3871
   387  0000                     _ODCONB	set	3863
   388  0000                     _ODCONA	set	3855
   389  0000                     _ODCONE	set	3884
   390  0000                     _WPUC	set	3872
   391  0000                     _WPUA	set	3856
   392  0000                     _WPUB	set	3864
   393  0000                     _WPUE	set	3885
   394  0000                     _WPUD	set	3877
   395  0000                     _ANSELA	set	3857
   396  0000                     _ANSELE	set	3886
   397  0000                     _ANSELD	set	3878
   398  0000                     _ANSELB	set	3865
   399  0000                     _ANSELC	set	3873
   400  0000                     _BAUD1CONbits	set	3999
   401  0000                     _LATCbits	set	3973
   402  0000                     _TX1STAbits	set	3998
   403  0000                     _PORTD	set	3984
   404  0000                     _T1GCONbits	set	4048
   405  0000                     _T1CONbits	set	4047
   406  0000                     _TMR1L	set	4045
   407  0000                     _TMR1H	set	4046
   408  0000                     _T1CLK	set	4050
   409  0000                     _T1GATE	set	4049
   410  0000                     _T1GCON	set	4048
   411  0000                     _T1CON	set	4047
   412  0000                     _NVMDAT	set	3968
   413  0000                     _NVMADRL	set	3966
   414  0000                     _NVMADRH	set	3967
   415  0000                     _NVMCON2	set	3970
   416  0000                     _TABLAT	set	4085
   417  0000                     _TBLPTRL	set	4086
   418  0000                     _TBLPTRH	set	4087
   419  0000                     _TBLPTRU	set	4088
   420  0000                     _NVMCON1bits	set	3969
   421  0000                     _INTCONbits	set	4082
   422  0000                     _TX1REG	set	3994
   423  0000                     _RC1REG	set	3993
   424  0000                     _RC1STAbits	set	3997
   425  0000                     _SP1BRGH	set	3996
   426  0000                     _SP1BRGL	set	3995
   427  0000                     _TX1STA	set	3998
   428  0000                     _RC1STA	set	3997
   429  0000                     _BAUD1CON	set	3999
   430  0000                     _TRISD	set	3979
   431  0000                     _TRISC	set	3978
   432  0000                     _TRISB	set	3977
   433  0000                     _TRISA	set	3976
   434  0000                     _TRISE	set	3980
   435  0000                     _LATC	set	3973
   436  0000                     _LATB	set	3972
   437  0000                     _LATA	set	3971
   438  0000                     _LATD	set	3974
   439  0000                     _LATE	set	3975
   440  0000                     _GIE	set	32663
   441                           
   442                           ; #config settings
   443  0000                     
   444                           	psect	cinit
   445  00148E                     __pcinit:
   446                           	opt stack 0
   447  00148E                     start_initialization:
   448                           	opt stack 0
   449  00148E                     __initialization:
   450                           	opt stack 0
   451                           
   452                           ; Initialize objects allocated to COMRAM (1 bytes)
   453                           ; load TBLPTR registers with __pidataCOMRAM
   454  00148E  0E9C               	movlw	low __pidataCOMRAM
   455  001490  6EF6               	movwf	tblptrl,c
   456  001492  0E17               	movlw	high __pidataCOMRAM
   457  001494  6EF7               	movwf	tblptrh,c
   458  001496  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   459  001498  6EF8               	movwf	tblptru,c
   460  00149A  0009               	tblrd		*+	;fetch initializer
   461  00149C  CFF5 F042          	movff	tablat,__pdataCOMRAM
   462                           
   463                           ; Clear objects allocated to BANK0 (32 bytes)
   464  0014A0  EE00  F060         	lfsr	0,__pbssBANK0
   465  0014A4  0E20               	movlw	32
   466  0014A6                     clear_0:
   467  0014A6  6AEE               	clrf	postinc0,c
   468  0014A8  06E8               	decf	wreg,f,c
   469  0014AA  E1FD               	bnz	clear_0
   470                           
   471                           ; Clear objects allocated to COMRAM (18 bytes)
   472  0014AC  EE00  F02D         	lfsr	0,__pbssCOMRAM
   473  0014B0  0E12               	movlw	18
   474  0014B2                     clear_1:
   475  0014B2  6AEE               	clrf	postinc0,c
   476  0014B4  06E8               	decf	wreg,f,c
   477  0014B6  E1FD               	bnz	clear_1
   478  0014B8                     end_of_initialization:
   479                           	opt stack 0
   480  0014B8                     __end_of__initialization:
   481                           	opt stack 0
   482  0014B8  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   483  0014BA  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   484  0014BC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   485  0014BE  6EF8               	movwf	tblptru,c
   486  0014C0  0E0F               	movlw	high __Lsmallconst
   487  0014C2  6EF7               	movwf	tblptrh,c
   488  0014C4  0100               	movlb	0
   489  0014C6  EF65  F00A         	goto	_main	;jump to C main() function
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497                           	psect	bssCOMRAM
   498  00002D                     __pbssCOMRAM:
   499                           	opt stack 0
   500  00002D                     _hexnum:
   501                           	opt stack 0
   502  00002D                     	ds	3
   503  000030                     _dbcount:
   504                           	opt stack 0
   505  000030                     	ds	2
   506  000032                     _chkbyte:
   507                           	opt stack 0
   508  000032                     	ds	1
   509  000033                     _mcount:
   510                           	opt stack 0
   511  000033                     	ds	1
   512  000034                     _slvadd:
   513                           	opt stack 0
   514  000034                     	ds	1
   515  000035                     _cash:
   516                           	opt stack 0
   517  000035                     	ds	1
   518  000036                     _credit:
   519                           	opt stack 0
   520  000036                     	ds	1
   521  000037                     _stradd:
   522                           	opt stack 0
   523  000037                     	ds	1
   524  000038                     _lcdata:
   525                           	opt stack 0
   526  000038                     	ds	1
   527  000039                     _lcdfunc:
   528                           	opt stack 0
   529  000039                     	ds	1
   530  00003A                     _bflag:
   531                           	opt stack 0
   532  00003A                     	ds	1
   533  00003B                     _errorflags:
   534                           	opt stack 0
   535  00003B                     	ds	1
   536  00003C                     _noteen:
   537                           	opt stack 0
   538  00003C                     	ds	1
   539  00003D                     _mdbflags:
   540                           	opt stack 0
   541  00003D                     	ds	1
   542  00003E                     _venflags:
   543                           	opt stack 0
   544  00003E                     	ds	1
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           
   552                           	psect	dataCOMRAM
   553  000042                     __pdataCOMRAM:
   554                           	opt stack 0
   555  000042                     _noteen_byte:
   556                           	opt stack 0
   557  000042                     	ds	1
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           
   565                           	psect	bssBANK0
   566  000060                     __pbssBANK0:
   567                           	opt stack 0
   568  000060                     _mdbdata:
   569                           	opt stack 0
   570  000060                     	ds	32
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           
   578                           	psect	cstackCOMRAM
   579  000001                     __pcstackCOMRAM:
   580                           	opt stack 0
   581  000001                     ??_INTERRUPT_InterruptManagerHigh:
   582  000001                     
   583                           ; 1 bytes @ 0x0
   584  000001                     	ds	18
   585  000013                     ??_TMR1_Initialize:
   586  000013                     ?___ltdiv:
   587                           	opt stack 0
   588  000013                     ?___ltmod:
   589                           	opt stack 0
   590  000013                     PIN_MANAGER_Initialize@state:
   591                           	opt stack 0
   592  000013                     EUSART1_Write@txData:
   593                           	opt stack 0
   594  000013                     read_busy@savelate:
   595                           	opt stack 0
   596  000013                     init_mdbdata@initdata:
   597                           	opt stack 0
   598  000013                     DATAEE_WriteByte@bAdd:
   599                           	opt stack 0
   600  000013                     DATAEE_ReadByte@bAdd:
   601                           	opt stack 0
   602  000013                     ___ltdiv@dividend:
   603                           	opt stack 0
   604  000013                     ___ltmod@dividend:
   605                           	opt stack 0
   606                           
   607                           ; 3 bytes @ 0x12
   608  000013                     	ds	1
   609  000014                     read_busy@savelatd:
   610                           	opt stack 0
   611  000014                     init_mdbdata@i:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x13
   615  000014                     	ds	1
   616  000015                     DATAEE_WriteByte@bData:
   617                           	opt stack 0
   618  000015                     lcd_write@savelatd:
   619                           	opt stack 0
   620  000015                     mdb_poll@mcount:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x14
   624  000015                     	ds	1
   625  000016                     DATAEE_WriteByte@GIEBitValue:
   626                           	opt stack 0
   627  000016                     lcd_write@lcdata:
   628                           	opt stack 0
   629  000016                     mdb_poll@slvadd:
   630                           	opt stack 0
   631  000016                     ___ltdiv@divisor:
   632                           	opt stack 0
   633  000016                     ___ltmod@divisor:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0x15
   637  000016                     	ds	1
   638  000017                     lcd_writeC@lcdatasave:
   639                           	opt stack 0
   640  000017                     credit_add@credit:
   641                           	opt stack 0
   642  000017                     credit_subtract@credit:
   643                           	opt stack 0
   644  000017                     mdb_poll@i:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x16
   648  000017                     	ds	1
   649  000018                     ??_mdb_reset:
   650  000018                     lcd_writeC@lcdata:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x17
   654  000018                     	ds	1
   655  000019                     lcd_test@character:
   656                           	opt stack 0
   657  000019                     mdb_reset@i_1457:
   658                           	opt stack 0
   659  000019                     ___ltmod@counter:
   660                           	opt stack 0
   661  000019                     lcd_string@lcdstring:
   662                           	opt stack 0
   663  000019                     ___ltdiv@quotient:
   664                           	opt stack 0
   665                           
   666                           ; 3 bytes @ 0x18
   667  000019                     	ds	1
   668  00001A                     ??_lcd_init:
   669  00001A                     mdb_reset@i:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x19
   673  00001A                     	ds	1
   674  00001B                     ??_lcd_string:
   675                           
   676                           ; 1 bytes @ 0x1A
   677  00001B                     	ds	1
   678  00001C                     ___ltdiv@counter:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x1B
   682  00001C                     	ds	1
   683  00001D                     displ_hex@hexnum:
   684                           	opt stack 0
   685                           
   686                           ; 3 bytes @ 0x1C
   687  00001D                     	ds	3
   688  000020                     displ_hex@value:
   689                           	opt stack 0
   690                           
   691                           ; 8 bytes @ 0x1F
   692  000020                     	ds	8
   693  000028                     displ_hex@hexnumsave:
   694                           	opt stack 0
   695                           
   696                           ; 3 bytes @ 0x27
   697  000028                     	ds	3
   698  00002B                     displ_hex@i:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x2A
   702  00002B                     	ds	1
   703  00002C                     displ_credit@cash:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x2B
   707  00002C                     	ds	1
   708  00002D                     tblptru	equ	0xFF8
   709                           tblptrh	equ	0xFF7
   710                           tblptrl	equ	0xFF6
   711                           tablat	equ	0xFF5
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           
   715                           ; 1 bytes @ 0x2C
   716 ;;
   717 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   718 ;;
   719 ;; *************** function _main *****************
   720 ;; Defined at:
   721 ;;		line 53 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels required when called:    8
   741 ;; This function calls:
   742 ;;		_SYSTEM_Initialize
   743 ;;		_credit_add
   744 ;;		_credit_subtract
   745 ;;		_displ_credit
   746 ;;		_lcd_init
   747 ;;		_lcd_string
   748 ;;		_vend_init
   749 ;; This function is called by:
   750 ;;		Startup code after reset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text0
   755  0014CA                     __ptext0:
   756                           	opt stack 0
   757  0014CA                     _main:
   758                           	opt stack 23
   759                           
   760                           ;main.c: 56: SYSTEM_Initialize();
   761                           
   762                           ;incstack = 0
   763  0014CA  EC3B  F00B         	call	_SYSTEM_Initialize	;wreg free
   764                           
   765                           ;main.c: 58: lcd_init();
   766  0014CE  EC17  F009         	call	_lcd_init	;wreg free
   767                           
   768                           ;main.c: 59: vend_init();
   769  0014D2  EC03  F00B         	call	_vend_init	;wreg free
   770  0014D6                     l445:
   771  0014D6  F000               	nop		;# 
   772                           
   773                           ;main.c: 65: if(venflags.inscoin == 1)
   774  0014D8  A43E               	btfss	_venflags,2,c
   775  0014DA  D007               	goto	l446
   776                           
   777                           ;main.c: 66: {
   778                           ;main.c: 67: lcd_string(inscoin);
   779  0014DC  0E2E               	movlw	low _inscoin
   780  0014DE  6E19               	movwf	lcd_string@lcdstring,c
   781  0014E0  0E0F               	movlw	high _inscoin
   782  0014E2  6E1A               	movwf	lcd_string@lcdstring+1,c
   783  0014E4  ECD6  F008         	call	_lcd_string	;wreg free
   784                           
   785                           ;main.c: 68: venflags.inscoin = 0;
   786  0014E8  943E               	bcf	_venflags,2,c
   787  0014EA                     l446:
   788                           
   789                           ;main.c: 69: }
   790                           ;main.c: 70: if(venflags.initialrun == 1)
   791  0014EA  AA3E               	btfss	_venflags,5,c
   792  0014EC  D007               	goto	l447
   793                           
   794                           ;main.c: 71: {
   795                           ;main.c: 72: credit_add(0x05);
   796  0014EE  0E05               	movlw	5
   797  0014F0  EC04  F00A         	call	_credit_add
   798                           
   799                           ;main.c: 73: credit_subtract(0x00);
   800  0014F4  0E00               	movlw	0
   801  0014F6  ECE1  F009         	call	_credit_subtract
   802                           
   803                           ;main.c: 74: venflags.initialrun = 0;
   804  0014FA  9A3E               	bcf	_venflags,5,c
   805  0014FC                     l447:
   806                           
   807                           ;main.c: 75: }
   808                           ;main.c: 76: if(venflags.credisplay == 1)
   809  0014FC  A83E               	btfss	_venflags,4,c
   810  0014FE  D7EB               	goto	l445
   811                           
   812                           ;main.c: 77: {
   813                           ;main.c: 78: displ_credit();
   814  001500  EC2A  F00B         	call	_displ_credit	;wreg free
   815  001504  D7E8               	goto	l445
   816  001506                     __end_of_main:
   817                           	opt stack 0
   818                           tblptru	equ	0xFF8
   819                           tblptrh	equ	0xFF7
   820                           tblptrl	equ	0xFF6
   821                           tablat	equ	0xFF5
   822                           postinc0	equ	0xFEE
   823                           wreg	equ	0xFE8
   824                           
   825 ;; *************** function _vend_init *****************
   826 ;; Defined at:
   827 ;;		line 17 in file "vend.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    6
   848 ;; This function calls:
   849 ;;		_credit_check
   850 ;;		_mdb_noten
   851 ;;		_mdb_reset
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text1
   858  001606                     __ptext1:
   859                           	opt stack 0
   860  001606                     _vend_init:
   861                           	opt stack 24
   862                           
   863                           ;vend.c: 20: mdbflags.noteerr = 0;
   864                           
   865                           ;incstack = 0
   866  001606  923D               	bcf	_mdbflags,1,c
   867                           
   868                           ;vend.c: 21: mdbflags.isdata = 0;
   869  001608  903D               	bcf	_mdbflags,0,c
   870                           
   871                           ;vend.c: 24: mdb_reset();
   872  00160A  EC86  F009         	call	_mdb_reset	;wreg free
   873                           
   874                           ;vend.c: 25: mdb_noten();
   875  00160E  ECD5  F00A         	call	_mdb_noten	;wreg free
   876                           
   877                           ;vend.c: 26: venflags.initialrun = 1;
   878  001612  8A3E               	bsf	_venflags,5,c
   879                           
   880                           ;vend.c: 27: if(credit_check() == 0)
   881  001614  EC4C  F00B         	call	_credit_check	;wreg free
   882  001618  0900               	iorlw	0
   883  00161A  A4D8               	btfss	status,2,c
   884  00161C  D004               	goto	l771
   885                           
   886                           ;vend.c: 28: {
   887                           ;vend.c: 29: venflags.iscredit = 0;
   888  00161E  903E               	bcf	_venflags,0,c
   889                           
   890                           ;vend.c: 30: venflags.inscoin = 1;
   891  001620  843E               	bsf	_venflags,2,c
   892                           
   893                           ;vend.c: 31: venflags.credisplay = 0;
   894  001622  983E               	bcf	_venflags,4,c
   895                           
   896                           ;vend.c: 32: }
   897  001624  0012               	return	
   898  001626                     l771:
   899                           
   900                           ;vend.c: 33: else
   901                           ;vend.c: 34: {
   902                           ;vend.c: 35: venflags.iscredit = 1;
   903  001626  803E               	bsf	_venflags,0,c
   904                           
   905                           ;vend.c: 36: venflags.inscoin = 0;
   906  001628  943E               	bcf	_venflags,2,c
   907                           
   908                           ;vend.c: 37: venflags.credisplay = 1;
   909  00162A  883E               	bsf	_venflags,4,c
   910  00162C  0012               	return	
   911  00162E                     __end_of_vend_init:
   912                           	opt stack 0
   913                           tblptru	equ	0xFF8
   914                           tblptrh	equ	0xFF7
   915                           tblptrl	equ	0xFF6
   916                           tablat	equ	0xFF5
   917                           postinc0	equ	0xFEE
   918                           wreg	equ	0xFE8
   919                           status	equ	0xFD8
   920                           
   921 ;; *************** function _mdb_reset *****************
   922 ;; Defined at:
   923 ;;		line 93 in file "vend.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  i               1   24[COMRAM] unsigned char 
   928 ;;  i               1   25[COMRAM] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      unsigned char 
   931 ;; Registers used:
   932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   942 ;;Total ram usage:        3 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    5
   945 ;; This function calls:
   946 ;;		_mdb_poll
   947 ;; This function is called by:
   948 ;;		_vend_init
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text2
   953  00130C                     __ptext2:
   954                           	opt stack 0
   955  00130C                     _mdb_reset:
   956                           	opt stack 24
   957                           
   958                           ;vend.c: 95: uint8_t i = mdb_poll(note_reset, 0x00);
   959                           
   960                           ;incstack = 0
   961  00130C  0E00               	movlw	0
   962  00130E  6E15               	movwf	mdb_poll@mcount,c
   963  001310  0E20               	movlw	low _note_reset
   964  001312  6EF6               	movwf	tblptrl,c
   965  001314                     	if	0	;There is only one active tblptr byte
   966  001314                     	endif
   967  001314                     	if	0	;There are less than 3 active tblptr bytes
   968  001314                     	endif
   969  001314  0008               	tblrd		*
   970  001316  50F5               	movf	tablat,w,c
   971  001318  ECA9  F007         	call	_mdb_poll
   972  00131C  6E1A               	movwf	mdb_reset@i,c
   973  00131E  F000               	nop		;# 
   974                           
   975                           ;vend.c: 97: uint8_t i = mdb_poll(note_poll, 0x00);
   976  001320  0E00               	movlw	0
   977  001322  6E15               	movwf	mdb_poll@mcount,c
   978  001324  0E1D               	movlw	low _note_poll
   979  001326  6EF6               	movwf	tblptrl,c
   980  001328                     	if	0	;There is only one active tblptr byte
   981  001328                     	endif
   982  001328                     	if	0	;There are less than 3 active tblptr bytes
   983  001328                     	endif
   984  001328  0008               	tblrd		*
   985  00132A  50F5               	movf	tablat,w,c
   986  00132C  ECA9  F007         	call	_mdb_poll
   987  001330  6E1A               	movwf	mdb_reset@i,c
   988                           
   989                           ;vend.c: 98: if(mdbdata[--i] == just_reset)
   990  001332  061A               	decf	mdb_reset@i,f,c
   991  001334  501A               	movf	mdb_reset@i,w,c
   992  001336  0D01               	mullw	1
   993  001338  0E60               	movlw	low _mdbdata
   994  00133A  24F3               	addwf	prodl,w,c
   995  00133C  6ED9               	movwf	fsr2l,c
   996  00133E  0E00               	movlw	high _mdbdata
   997  001340  20F4               	addwfc	prodh,w,c
   998  001342  6EDA               	movwf	fsr2h,c
   999  001344  50DF               	movf	indf2,w,c
  1000  001346  6E18               	movwf	??_mdb_reset& (0+255),c
  1001  001348  0E13               	movlw	low _just_reset
  1002  00134A  6EF6               	movwf	tblptrl,c
  1003  00134C                     	if	0	;There is only one active tblptr byte
  1004  00134C                     	endif
  1005  00134C                     	if	0	;There are less than 3 active tblptr bytes
  1006  00134C                     	endif
  1007  00134C  0008               	tblrd		*
  1008  00134E  50F5               	movf	tablat,w,c
  1009  001350  1818               	xorwf	??_mdb_reset,w,c
  1010  001352  A4D8               	btfss	status,2,c
  1011  001354  D00A               	goto	l802
  1012                           
  1013                           ;vend.c: 99: {
  1014                           ;vend.c: 101: uint8_t i = mdb_poll(note_poll, 0x00);
  1015  001356  0E00               	movlw	0
  1016  001358  6E15               	movwf	mdb_poll@mcount,c
  1017  00135A  0E1D               	movlw	low _note_poll
  1018  00135C  6EF6               	movwf	tblptrl,c
  1019  00135E                     	if	0	;There is only one active tblptr byte
  1020  00135E                     	endif
  1021  00135E                     	if	0	;There are less than 3 active tblptr bytes
  1022  00135E                     	endif
  1023  00135E  0008               	tblrd		*
  1024  001360  50F5               	movf	tablat,w,c
  1025  001362  ECA9  F007         	call	_mdb_poll
  1026  001366  6E19               	movwf	mdb_reset@i_1457,c
  1027                           
  1028                           ;vend.c: 102: }
  1029  001368  0012               	return	
  1030  00136A                     l802:
  1031                           
  1032                           ;vend.c: 103: else
  1033                           ;vend.c: 104: {
  1034                           ;vend.c: 106: return mdbflags.noteerr = 1;
  1035                           ;	Return value of _mdb_reset is never used
  1036  00136A  823D               	bsf	_mdbflags,1,c
  1037  00136C  0012               	return	
  1038  00136E                     __end_of_mdb_reset:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           prodh	equ	0xFF4
  1045                           prodl	equ	0xFF3
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           indf2	equ	0xFDF
  1049                           fsr2h	equ	0xFDA
  1050                           fsr2l	equ	0xFD9
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _mdb_noten *****************
  1054 ;; Defined at:
  1055 ;;		line 112 in file "vend.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      unsigned char 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    5
  1076 ;; This function calls:
  1077 ;;		_init_mdbdata
  1078 ;;		_mdb_poll
  1079 ;; This function is called by:
  1080 ;;		_vend_init
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text3
  1085  0015AA                     __ptext3:
  1086                           	opt stack 0
  1087  0015AA                     _mdb_noten:
  1088                           	opt stack 24
  1089                           
  1090                           ;vend.c: 115: init_mdbdata(0x00);
  1091                           
  1092                           ;incstack = 0
  1093  0015AA  0E00               	movlw	0
  1094  0015AC  EC17  F00B         	call	_init_mdbdata
  1095                           
  1096                           ;vend.c: 117: mcount = 3;
  1097  0015B0  0E03               	movlw	3
  1098  0015B2  6E33               	movwf	_mcount,c
  1099                           
  1100                           ;vend.c: 119: mdbdata[0] = 0x00;
  1101  0015B4  0E00               	movlw	0
  1102  0015B6  0100               	movlb	0	; () banked
  1103  0015B8  6F60               	movwf	_mdbdata& (0+255),b
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;vend.c: 120: mdbdata[1] = 0x00;
  1107  0015BA  0E00               	movlw	0
  1108  0015BC  6F61               	movwf	(_mdbdata+1)& (0+255),b
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;vend.c: 122: mdbdata[2] = noteen_byte;
  1112  0015BE  C042  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;vend.c: 124: mdbdata[3] = 0x00;
  1116  0015C2  0E00               	movlw	0
  1117  0015C4  6F63               	movwf	(_mdbdata+3)& (0+255),b
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;vend.c: 125: mcount = mdb_poll(note_type, mcount);
  1121  0015C6  C033  F015         	movff	_mcount,mdb_poll@mcount
  1122  0015CA  0E1C               	movlw	low _note_type
  1123  0015CC  6EF6               	movwf	tblptrl,c
  1124  0015CE                     	if	0	;There is only one active tblptr byte
  1125  0015CE                     	endif
  1126  0015CE                     	if	0	;There are less than 3 active tblptr bytes
  1127  0015CE                     	endif
  1128  0015CE  0008               	tblrd		*
  1129  0015D0  50F5               	movf	tablat,w,c
  1130  0015D2  ECA9  F007         	call	_mdb_poll
  1131  0015D6  6E33               	movwf	_mcount,c
  1132  0015D8  0012               	return		;funcret
  1133  0015DA                     __end_of_mdb_noten:
  1134                           	opt stack 0
  1135                           tblptru	equ	0xFF8
  1136                           tblptrh	equ	0xFF7
  1137                           tblptrl	equ	0xFF6
  1138                           tablat	equ	0xFF5
  1139                           prodh	equ	0xFF4
  1140                           prodl	equ	0xFF3
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           indf2	equ	0xFDF
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           status	equ	0xFD8
  1147                           
  1148 ;; *************** function _mdb_poll *****************
  1149 ;; Defined at:
  1150 ;;		line 128 in file "vend.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  slvadd          1    wreg     unsigned char 
  1153 ;;  mcount          1   20[COMRAM] unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  slvadd          1   21[COMRAM] unsigned char 
  1156 ;;  i               1   22[COMRAM] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      unsigned char 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1166 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1170 ;;Total ram usage:        3 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    4
  1173 ;; This function calls:
  1174 ;;		_EUSART1_Read
  1175 ;;		_EUSART1_Write
  1176 ;;		_TMR1_Initialize
  1177 ;;		_init_mdbdata
  1178 ;;		_mdb_on
  1179 ;;		_mdb_waitr
  1180 ;;		_mdb_waitx
  1181 ;; This function is called by:
  1182 ;;		_mdb_reset
  1183 ;;		_mdb_noten
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text4
  1188  000F52                     __ptext4:
  1189                           	opt stack 0
  1190  000F52                     _mdb_poll:
  1191                           	opt stack 24
  1192                           
  1193                           ;incstack = 0
  1194                           ;mdb_poll@slvadd stored from wreg
  1195  000F52  6E16               	movwf	mdb_poll@slvadd,c
  1196                           
  1197                           ;vend.c: 131: uint8_t i = 0;
  1198  000F54  0E00               	movlw	0
  1199  000F56  6E17               	movwf	mdb_poll@i,c
  1200                           
  1201                           ;vend.c: 133: TX1STAbits.TX9D = 1;
  1202  000F58  809E               	bsf	3998,0,c	;volatile
  1203                           
  1204                           ;vend.c: 134: mdb_on();
  1205  000F5A  ECC0  F00B         	call	_mdb_on	;wreg free
  1206                           
  1207                           ;vend.c: 138: EUSART1_Write(slvadd);
  1208  000F5E  5016               	movf	mdb_poll@slvadd,w,c
  1209  000F60  ECA6  F00B         	call	_EUSART1_Write
  1210                           
  1211                           ;vend.c: 139: TX1STAbits.TX9D = 0;
  1212  000F64  909E               	bcf	3998,0,c	;volatile
  1213                           
  1214                           ;vend.c: 141: mdb_waitx();
  1215  000F66  ECBA  F00B         	call	_mdb_waitx	;wreg free
  1216                           
  1217                           ;vend.c: 143: chkbyte = slvadd;
  1218  000F6A  C016  F032         	movff	mdb_poll@slvadd,_chkbyte
  1219                           
  1220                           ;vend.c: 144: if(mcount != 0)
  1221  000F6E  5015               	movf	mdb_poll@mcount,w,c
  1222  000F70  B4D8               	btfsc	status,2,c
  1223  000F72  D018               	goto	l813
  1224  000F74                     u650:
  1225                           
  1226                           ;vend.c: 147: {
  1227                           ;vend.c: 148: EUSART1_Write(mdbdata[mcount]);
  1228                           
  1229                           ;vend.c: 145: {
  1230                           ;vend.c: 146: while(mcount > -1)
  1231  000F74  5015               	movf	mdb_poll@mcount,w,c
  1232  000F76  0D01               	mullw	1
  1233  000F78  0E60               	movlw	low _mdbdata
  1234  000F7A  24F3               	addwf	prodl,w,c
  1235  000F7C  6ED9               	movwf	fsr2l,c
  1236  000F7E  0E00               	movlw	high _mdbdata
  1237  000F80  20F4               	addwfc	prodh,w,c
  1238  000F82  6EDA               	movwf	fsr2h,c
  1239  000F84  50DF               	movf	indf2,w,c
  1240  000F86  ECA6  F00B         	call	_EUSART1_Write
  1241                           
  1242                           ;vend.c: 150: chkbyte = chkbyte + mdbdata[mcount];
  1243  000F8A  5015               	movf	mdb_poll@mcount,w,c
  1244  000F8C  0D01               	mullw	1
  1245  000F8E  0E60               	movlw	low _mdbdata
  1246  000F90  24F3               	addwf	prodl,w,c
  1247  000F92  6ED9               	movwf	fsr2l,c
  1248  000F94  0E00               	movlw	high _mdbdata
  1249  000F96  20F4               	addwfc	prodh,w,c
  1250  000F98  6EDA               	movwf	fsr2h,c
  1251  000F9A  50DF               	movf	indf2,w,c
  1252  000F9C  2432               	addwf	_chkbyte,w,c
  1253  000F9E  6E32               	movwf	_chkbyte,c
  1254                           
  1255                           ;vend.c: 151: mcount--;
  1256  000FA0  0615               	decf	mdb_poll@mcount,f,c
  1257  000FA2  D7E8               	goto	u650
  1258  000FA4                     l813:
  1259                           
  1260                           ;vend.c: 152: }
  1261                           ;vend.c: 153: }
  1262                           ;vend.c: 154: EUSART1_Write(chkbyte);
  1263  000FA4  5032               	movf	_chkbyte,w,c
  1264  000FA6  ECA6  F00B         	call	_EUSART1_Write
  1265                           
  1266                           ;vend.c: 155: mdb_waitx();
  1267  000FAA  ECBA  F00B         	call	_mdb_waitx	;wreg free
  1268                           
  1269                           ;vend.c: 160: init_mdbdata(0xFF);
  1270  000FAE  0EFF               	movlw	255
  1271  000FB0  EC17  F00B         	call	_init_mdbdata
  1272                           
  1273                           ;vend.c: 161: TMR1_Initialize();
  1274  000FB4  ECA0  F00A         	call	_TMR1_Initialize	;wreg free
  1275                           
  1276                           ;vend.c: 162: dbcount = 0;
  1277  000FB8  0E00               	movlw	0
  1278  000FBA  6E31               	movwf	_dbcount+1,c
  1279  000FBC  0E00               	movlw	0
  1280  000FBE  6E30               	movwf	_dbcount,c
  1281                           
  1282                           ;vend.c: 163: mdbflags.isdata = 0;
  1283  000FC0  903D               	bcf	_mdbflags,0,c
  1284                           
  1285                           ;vend.c: 164: i = 0;
  1286  000FC2  0E00               	movlw	0
  1287  000FC4  6E17               	movwf	mdb_poll@i,c
  1288                           
  1289                           ;vend.c: 166: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  1290  000FC6  D01E               	goto	u680
  1291  000FC8                     
  1292                           ;vend.c: 167: {
  1293                           ;vend.c: 169: dbcount++;
  1294  000FC8  4A30               	infsnz	_dbcount,f,c
  1295  000FCA  2A31               	incf	_dbcount+1,f,c
  1296                           
  1297                           ;vend.c: 170: mdbflags.isdata = 0;
  1298  000FCC  903D               	bcf	_mdbflags,0,c
  1299                           
  1300                           ;vend.c: 173: while(PIR3bits.RC1IF && !mdbflags.isdata)
  1301  000FCE  D015               	goto	l816
  1302  000FD0                     
  1303                           ;vend.c: 174: {
  1304                           ;vend.c: 177: mdbdata[i] = EUSART1_Read();
  1305  000FD0  5017               	movf	mdb_poll@i,w,c
  1306  000FD2  0D01               	mullw	1
  1307  000FD4  0E60               	movlw	low _mdbdata
  1308  000FD6  24F3               	addwf	prodl,w,c
  1309  000FD8  6ED9               	movwf	fsr2l,c
  1310  000FDA  0E00               	movlw	high _mdbdata
  1311  000FDC  20F4               	addwfc	prodh,w,c
  1312  000FDE  6EDA               	movwf	fsr2h,c
  1313  000FE0  EC9D  F00B         	call	_EUSART1_Read	;wreg free
  1314  000FE4  6EDF               	movwf	indf2,c
  1315                           
  1316                           ;vend.c: 178: mdb_waitr();
  1317  000FE6  ECBD  F00B         	call	_mdb_waitr	;wreg free
  1318                           
  1319                           ;vend.c: 180: mdbflags.isdata = RC1STAbits.RX9D;
  1320  000FEA  A09D               	btfss	3997,0,c	;volatile
  1321  000FEC  D002               	bra	u665
  1322  000FEE  803D               	bsf	_mdbflags,0,c
  1323  000FF0  D001               	bra	u667
  1324  000FF2                     u665:
  1325  000FF2  903D               	bcf	_mdbflags,0,c
  1326  000FF4                     u667:
  1327                           
  1328                           ;vend.c: 181: TMR1_Initialize();
  1329  000FF4  ECA0  F00A         	call	_TMR1_Initialize	;wreg free
  1330                           
  1331                           ;vend.c: 182: i++;
  1332  000FF8  2A17               	incf	mdb_poll@i,f,c
  1333  000FFA                     l816:
  1334  000FFA  010E               	movlb	14	; () banked
  1335  000FFC  ABCD               	btfss	205,5,b	;volatile
  1336  000FFE  D002               	goto	u680
  1337                           
  1338                           ; BSR set to: 14
  1339  001000  A03D               	btfss	_mdbflags,0,c
  1340  001002  D7E6               	goto	l817
  1341  001004                     u680:
  1342                           
  1343                           ; BSR set to: 14
  1344                           
  1345                           ; BSR set to: 14
  1346  001004  010E               	movlb	14	; () banked
  1347  001006  B1CE               	btfsc	206,0,b	;volatile
  1348  001008  D002               	goto	u700
  1349                           
  1350                           ; BSR set to: 14
  1351  00100A  A03D               	btfss	_mdbflags,0,c
  1352  00100C  D7DD               	goto	l815
  1353  00100E                     u700:
  1354                           
  1355                           ; BSR set to: 14
  1356                           ;vend.c: 184: }
  1357                           ;vend.c: 186: }
  1358                           ;vend.c: 188: i--;
  1359                           
  1360                           ; BSR set to: 14
  1361                           
  1362                           ; BSR set to: 14
  1363  00100E  0617               	decf	mdb_poll@i,f,c
  1364                           
  1365                           ; BSR set to: 14
  1366                           ;vend.c: 190: mdbflags.timeout = PIR4bits.TMR1IF;
  1367  001010  A1CE               	btfss	206,0,b	;volatile
  1368  001012  D002               	bra	u715
  1369  001014  863D               	bsf	_mdbflags,3,c
  1370  001016  D001               	bra	u717
  1371  001018                     u715:
  1372  001018  963D               	bcf	_mdbflags,3,c
  1373  00101A                     u717:
  1374                           
  1375                           ;vend.c: 192: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  1376  00101A  A03D               	btfss	_mdbflags,0,c
  1377  00101C  D013               	goto	l824
  1378  00101E  5017               	movf	mdb_poll@i,w,c
  1379  001020  0D01               	mullw	1
  1380  001022  0E60               	movlw	low _mdbdata
  1381  001024  24F3               	addwf	prodl,w,c
  1382  001026  6ED9               	movwf	fsr2l,c
  1383  001028  0E00               	movlw	high _mdbdata
  1384  00102A  20F4               	addwfc	prodh,w,c
  1385  00102C  6EDA               	movwf	fsr2h,c
  1386  00102E  50DF               	movf	indf2,w,c
  1387  001030  B4D8               	btfsc	status,2,c
  1388  001032  D008               	goto	l824
  1389                           
  1390                           ;vend.c: 193: {
  1391                           ;vend.c: 194: TX1STAbits.TX9D = 1;
  1392  001034  809E               	bsf	3998,0,c	;volatile
  1393                           
  1394                           ;vend.c: 195: mdb_on();
  1395  001036  ECC0  F00B         	call	_mdb_on	;wreg free
  1396                           
  1397                           ;vend.c: 196: EUSART1_Write(0x00);
  1398  00103A  0E00               	movlw	0
  1399  00103C  ECA6  F00B         	call	_EUSART1_Write
  1400                           
  1401                           ;vend.c: 197: mdb_waitx();
  1402  001040  ECBA  F00B         	call	_mdb_waitx	;wreg free
  1403  001044                     l824:
  1404                           
  1405                           ;vend.c: 198: }
  1406                           ;vend.c: 200: mdb_on();
  1407  001044  ECC0  F00B         	call	_mdb_on	;wreg free
  1408                           
  1409                           ;vend.c: 202: return(i);
  1410  001048  5017               	movf	mdb_poll@i,w,c
  1411  00104A  0012               	return	
  1412  00104C                     __end_of_mdb_poll:
  1413                           	opt stack 0
  1414                           tblptru	equ	0xFF8
  1415                           tblptrh	equ	0xFF7
  1416                           tblptrl	equ	0xFF6
  1417                           tablat	equ	0xFF5
  1418                           prodh	equ	0xFF4
  1419                           prodl	equ	0xFF3
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           indf2	equ	0xFDF
  1423                           fsr2h	equ	0xFDA
  1424                           fsr2l	equ	0xFD9
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function _mdb_waitx *****************
  1428 ;; Defined at:
  1429 ;;		line 220 in file "vend.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		None
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    2
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_mdb_poll
  1454 ;;		_mdb_test
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text5
  1459  001774                     __ptext5:
  1460                           	opt stack 0
  1461  001774                     _mdb_waitx:
  1462                           	opt stack 25
  1463                           
  1464                           ;vend.c: 223: {
  1465                           
  1466                           ;vend.c: 222: while(TX1STAbits.TRMT == 0)
  1467                           
  1468                           ;incstack = 0
  1469  001774  B29E               	btfsc	3998,1,c	;volatile
  1470  001776  0012               	return	
  1471  001778  D7FD               	goto	_mdb_waitx
  1472  00177A                     __end_of_mdb_waitx:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           prodh	equ	0xFF4
  1479                           prodl	equ	0xFF3
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           indf2	equ	0xFDF
  1483                           fsr2h	equ	0xFDA
  1484                           fsr2l	equ	0xFD9
  1485                           status	equ	0xFD8
  1486                           
  1487 ;; *************** function _mdb_waitr *****************
  1488 ;; Defined at:
  1489 ;;		line 228 in file "vend.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		None
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    2
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_mdb_poll
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text6
  1518  00177A                     __ptext6:
  1519                           	opt stack 0
  1520  00177A                     _mdb_waitr:
  1521                           	opt stack 25
  1522                           
  1523                           ;vend.c: 231: {
  1524                           
  1525                           ;vend.c: 230: while(BAUD1CONbits.RCIDL == 0)
  1526                           
  1527                           ;incstack = 0
  1528  00177A  BC9F               	btfsc	3999,6,c	;volatile
  1529  00177C  0012               	return	
  1530  00177E  D7FD               	goto	_mdb_waitr
  1531  001780                     __end_of_mdb_waitr:
  1532                           	opt stack 0
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           prodh	equ	0xFF4
  1538                           prodl	equ	0xFF3
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           indf2	equ	0xFDF
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _mdb_on *****************
  1547 ;; Defined at:
  1548 ;;		line 205 in file "vend.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		None
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    2
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_mdb_poll
  1573 ;;		_mdb_test
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text7
  1578  001780                     __ptext7:
  1579                           	opt stack 0
  1580  001780                     _mdb_on:
  1581                           	opt stack 25
  1582                           
  1583                           ;vend.c: 207: LATCbits.LATC0 = 1;
  1584                           
  1585                           ;incstack = 0
  1586  001780  8085               	bsf	3973,0,c	;volatile
  1587                           
  1588                           ;vend.c: 208: LATCbits.LATC1 = 1;
  1589  001782  8285               	bsf	3973,1,c	;volatile
  1590  001784  0012               	return		;funcret
  1591  001786                     __end_of_mdb_on:
  1592                           	opt stack 0
  1593                           tblptru	equ	0xFF8
  1594                           tblptrh	equ	0xFF7
  1595                           tblptrl	equ	0xFF6
  1596                           tablat	equ	0xFF5
  1597                           prodh	equ	0xFF4
  1598                           prodl	equ	0xFF3
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           indf2	equ	0xFDF
  1602                           fsr2h	equ	0xFDA
  1603                           fsr2l	equ	0xFD9
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _init_mdbdata *****************
  1607 ;; Defined at:
  1608 ;;		line 85 in file "vend.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  initdata        1    wreg     unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  initdata        1   18[COMRAM] unsigned char 
  1613 ;;  i               1   19[COMRAM] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;Total ram usage:        2 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    2
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_mdb_noten
  1634 ;;		_mdb_poll
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text8
  1639  00162E                     __ptext8:
  1640                           	opt stack 0
  1641  00162E                     _init_mdbdata:
  1642                           	opt stack 25
  1643                           
  1644                           ;incstack = 0
  1645                           ;init_mdbdata@initdata stored from wreg
  1646  00162E  6E13               	movwf	init_mdbdata@initdata,c
  1647                           
  1648                           ;vend.c: 87: for(uint8_t i = 0;i < 33; i++)
  1649  001630  0E00               	movlw	0
  1650  001632  6E14               	movwf	init_mdbdata@i,c
  1651  001634                     l2145:
  1652  001634  0E20               	movlw	32
  1653  001636  6414               	cpfsgt	init_mdbdata@i,c
  1654  001638  D001               	goto	l797
  1655  00163A  0012               	return	
  1656  00163C                     l797:
  1657                           
  1658                           ;vend.c: 88: {
  1659                           ;vend.c: 89: mdbdata[i] = initdata;
  1660  00163C  5014               	movf	init_mdbdata@i,w,c
  1661  00163E  0D01               	mullw	1
  1662  001640  0E60               	movlw	low _mdbdata
  1663  001642  24F3               	addwf	prodl,w,c
  1664  001644  6ED9               	movwf	fsr2l,c
  1665  001646  0E00               	movlw	high _mdbdata
  1666  001648  20F4               	addwfc	prodh,w,c
  1667  00164A  6EDA               	movwf	fsr2h,c
  1668  00164C  C013  FFDF         	movff	init_mdbdata@initdata,indf2
  1669  001650  2A14               	incf	init_mdbdata@i,f,c
  1670  001652  D7F0               	goto	l2145
  1671  001654                     __end_of_init_mdbdata:
  1672                           	opt stack 0
  1673                           tblptru	equ	0xFF8
  1674                           tblptrh	equ	0xFF7
  1675                           tblptrl	equ	0xFF6
  1676                           tablat	equ	0xFF5
  1677                           prodh	equ	0xFF4
  1678                           prodl	equ	0xFF3
  1679                           postinc0	equ	0xFEE
  1680                           wreg	equ	0xFE8
  1681                           indf2	equ	0xFDF
  1682                           fsr2h	equ	0xFDA
  1683                           fsr2l	equ	0xFD9
  1684                           status	equ	0xFD8
  1685                           
  1686 ;; *************** function _EUSART1_Write *****************
  1687 ;; Defined at:
  1688 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  txData          1    wreg     unsigned char 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  txData          1   18[COMRAM] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;Total ram usage:        1 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    2
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_mdb_poll
  1713 ;;		_mdb_test
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text9
  1718  00174C                     __ptext9:
  1719                           	opt stack 0
  1720  00174C                     _EUSART1_Write:
  1721                           	opt stack 25
  1722                           
  1723                           ;incstack = 0
  1724                           ;EUSART1_Write@txData stored from wreg
  1725  00174C  6E13               	movwf	EUSART1_Write@txData,c
  1726  00174E                     
  1727                           ;eusart1.c: 99: {
  1728                           
  1729                           ;eusart1.c: 98: while(0 == PIR3bits.TX1IF)
  1730  00174E  010E               	movlb	14	; () banked
  1731  001750  A9CD               	btfss	205,4,b	;volatile
  1732  001752  D7FD               	goto	l2131
  1733                           
  1734                           ; BSR set to: 14
  1735                           ;eusart1.c: 100: }
  1736                           ;eusart1.c: 102: TX1REG = txData;
  1737                           
  1738                           ; BSR set to: 14
  1739  001754  C013  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  1740                           
  1741                           ; BSR set to: 14
  1742  001758  0012               	return		;funcret
  1743  00175A                     __end_of_EUSART1_Write:
  1744                           	opt stack 0
  1745                           tblptru	equ	0xFF8
  1746                           tblptrh	equ	0xFF7
  1747                           tblptrl	equ	0xFF6
  1748                           tablat	equ	0xFF5
  1749                           prodh	equ	0xFF4
  1750                           prodl	equ	0xFF3
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           indf2	equ	0xFDF
  1754                           fsr2h	equ	0xFDA
  1755                           fsr2l	equ	0xFD9
  1756                           status	equ	0xFD8
  1757                           
  1758 ;; *************** function _EUSART1_Read *****************
  1759 ;; Defined at:
  1760 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      unsigned char 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:    2
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_mdb_poll
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text10
  1789  00173A                     __ptext10:
  1790                           	opt stack 0
  1791  00173A                     _EUSART1_Read:
  1792                           	opt stack 25
  1793                           
  1794                           ;eusart1.c: 81: {
  1795                           
  1796                           ;eusart1.c: 80: while(!PIR3bits.RC1IF)
  1797                           
  1798                           ; BSR set to: 14
  1799                           ;incstack = 0
  1800  00173A  010E               	movlb	14	; () banked
  1801  00173C  ABCD               	btfss	205,5,b	;volatile
  1802  00173E  D7FD               	goto	_EUSART1_Read
  1803                           
  1804                           ; BSR set to: 14
  1805                           ;eusart1.c: 82: }
  1806                           ;eusart1.c: 85: if(1 == RC1STAbits.OERR)
  1807  001740  A29D               	btfss	3997,1,c	;volatile
  1808  001742  D002               	goto	l111
  1809                           
  1810                           ; BSR set to: 14
  1811                           ;eusart1.c: 86: {
  1812                           ;eusart1.c: 89: RC1STAbits.SPEN = 0;
  1813  001744  9E9D               	bcf	3997,7,c	;volatile
  1814                           
  1815                           ;eusart1.c: 90: RC1STAbits.SPEN = 1;
  1816  001746  8E9D               	bsf	3997,7,c	;volatile
  1817  001748                     l111:
  1818                           
  1819                           ; BSR set to: 14
  1820                           ;eusart1.c: 91: }
  1821                           ;eusart1.c: 93: return RC1REG;
  1822                           
  1823                           ; BSR set to: 14
  1824  001748  5099               	movf	3993,w,c	;volatile
  1825  00174A  0012               	return	
  1826  00174C                     __end_of_EUSART1_Read:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           prodh	equ	0xFF4
  1833                           prodl	equ	0xFF3
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           indf2	equ	0xFDF
  1837                           fsr2h	equ	0xFDA
  1838                           fsr2l	equ	0xFD9
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function _lcd_init *****************
  1842 ;; Defined at:
  1843 ;;		line 15 in file "lcd.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;Total ram usage:        1 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    7
  1864 ;; This function calls:
  1865 ;;		_lcd_clockE
  1866 ;;		_lcd_test
  1867 ;;		_lcd_write
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text11
  1874  00122E                     __ptext11:
  1875                           	opt stack 0
  1876  00122E                     _lcd_init:
  1877                           	opt stack 23
  1878                           
  1879                           ;lcd.c: 17: LATE = 0x00;
  1880                           
  1881                           ; BSR set to: 14
  1882                           ;incstack = 0
  1883  00122E  0E00               	movlw	0
  1884  001230  6E87               	movwf	3975,c	;volatile
  1885                           
  1886                           ;lcd.c: 19: LATD = 0x03;
  1887  001232  0E03               	movlw	3
  1888  001234  6E86               	movwf	3974,c	;volatile
  1889                           
  1890                           ;lcd.c: 20: for(count = 3; count > 0; count-- )
  1891  001236  0E03               	movlw	3
  1892  001238  6E41               	movwf	_count,c
  1893  00123A                     l1851:
  1894  00123A  5041               	movf	_count,w,c
  1895  00123C  0A80               	xorlw	128
  1896  00123E  0F7F               	addlw	-129
  1897  001240  A0D8               	btfss	status,0,c
  1898  001242  D00B               	goto	u360
  1899                           
  1900                           ;lcd.c: 21: {
  1901                           ;lcd.c: 22: lcd_clockE();
  1902  001244  ECAD  F00B         	call	_lcd_clockE	;wreg free
  1903                           
  1904                           ;lcd.c: 23: _delay((unsigned long)((5)*(8000000/4000.0)));
  1905  001248  0E0D               	movlw	13
  1906  00124A  6E1A               	movwf	??_lcd_init& (0+255),c
  1907  00124C  0EFC               	movlw	252
  1908  00124E                     u947:
  1909  00124E  2EE8               	decfsz	wreg,f,c
  1910  001250  D7FE               	bra	u947
  1911  001252  2E1A               	decfsz	??_lcd_init& (0+255),f,c
  1912  001254  D7FC               	bra	u947
  1913  001256  0641               	decf	_count,f,c
  1914  001258  D7F0               	goto	l1851
  1915  00125A                     u360:
  1916                           
  1917                           ;lcd.c: 25: }
  1918                           ;lcd.c: 26: _delay((unsigned long)((50)*(8000000/4000000.0)));
  1919  00125A  0E21               	movlw	33
  1920  00125C                     u957:
  1921  00125C  2EE8               	decfsz	wreg,f,c
  1922  00125E  D7FE               	bra	u957
  1923  001260  F000               	nop	
  1924                           
  1925                           ;lcd.c: 27: LATD = 0x02;
  1926  001262  0E02               	movlw	2
  1927  001264  6E86               	movwf	3974,c	;volatile
  1928                           
  1929                           ;lcd.c: 28: lcd_clockE();
  1930  001266  ECAD  F00B         	call	_lcd_clockE	;wreg free
  1931                           
  1932                           ;lcd.c: 31: lcd_write(dispfunc2);
  1933  00126A  0E2C               	movlw	low _dispfunc2
  1934  00126C  6EF6               	movwf	tblptrl,c
  1935  00126E                     	if	0	;There is only one active tblptr byte
  1936  00126E                     	endif
  1937  00126E                     	if	0	;There are less than 3 active tblptr bytes
  1938  00126E                     	endif
  1939  00126E  0008               	tblrd		*
  1940  001270  50F5               	movf	tablat,w,c
  1941  001272  ECBC  F00A         	call	_lcd_write
  1942                           
  1943                           ;lcd.c: 33: lcd_write(dispon);
  1944  001276  0E2B               	movlw	low _dispon
  1945  001278  6EF6               	movwf	tblptrl,c
  1946  00127A                     	if	0	;There is only one active tblptr byte
  1947  00127A                     	endif
  1948  00127A                     	if	0	;There are less than 3 active tblptr bytes
  1949  00127A                     	endif
  1950  00127A  0008               	tblrd		*
  1951  00127C  50F5               	movf	tablat,w,c
  1952  00127E  ECBC  F00A         	call	_lcd_write
  1953                           
  1954                           ;lcd.c: 35: lcd_write(dispnormal);
  1955  001282  0E27               	movlw	low _dispnormal
  1956  001284  6EF6               	movwf	tblptrl,c
  1957  001286                     	if	0	;There is only one active tblptr byte
  1958  001286                     	endif
  1959  001286                     	if	0	;There are less than 3 active tblptr bytes
  1960  001286                     	endif
  1961  001286  0008               	tblrd		*
  1962  001288  50F5               	movf	tablat,w,c
  1963  00128A  ECBC  F00A         	call	_lcd_write
  1964                           
  1965                           ;lcd.c: 37: lcd_write(dispclr);
  1966  00128E  0E2A               	movlw	low _dispclr
  1967  001290  6EF6               	movwf	tblptrl,c
  1968  001292                     	if	0	;There is only one active tblptr byte
  1969  001292                     	endif
  1970  001292                     	if	0	;There are less than 3 active tblptr bytes
  1971  001292                     	endif
  1972  001292  0008               	tblrd		*
  1973  001294  50F5               	movf	tablat,w,c
  1974  001296  ECBC  F00A         	call	_lcd_write
  1975                           
  1976                           ;lcd.c: 39: lcd_test();
  1977  00129A  EC7D  F00B         	call	_lcd_test	;wreg free
  1978  00129E  F000               	nop		;# 
  1979  0012A0  0012               	return		;funcret
  1980  0012A2                     __end_of_lcd_init:
  1981                           	opt stack 0
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           prodh	equ	0xFF4
  1987                           prodl	equ	0xFF3
  1988                           postinc0	equ	0xFEE
  1989                           wreg	equ	0xFE8
  1990                           indf2	equ	0xFDF
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8
  1994                           
  1995 ;; *************** function _lcd_test *****************
  1996 ;; Defined at:
  1997 ;;		line 130 in file "lcd.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  character       1   24[COMRAM] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2015 ;;Total ram usage:        1 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    6
  2018 ;; This function calls:
  2019 ;;		_lcd_writeC
  2020 ;; This function is called by:
  2021 ;;		_lcd_init
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text12
  2026  0016FA                     __ptext12:
  2027                           	opt stack 0
  2028  0016FA                     _lcd_test:
  2029                           	opt stack 23
  2030                           
  2031                           ;lcd.c: 132: uint8_t character = 0x30;
  2032                           
  2033                           ;incstack = 0
  2034  0016FA  0E30               	movlw	48
  2035  0016FC  D004               	goto	L1
  2036  0016FE                     
  2037                           ;lcd.c: 134: {
  2038                           ;lcd.c: 135: lcd_writeC(character);
  2039  0016FE  5019               	movf	lcd_test@character,w,c
  2040  001700  ECED  F00A         	call	_lcd_writeC
  2041                           
  2042                           ;lcd.c: 136: character = character+ 1;
  2043  001704  2819               	incf	lcd_test@character,w,c
  2044  001706                     L1:
  2045  001706  6E19               	movwf	lcd_test@character,c
  2046  001708  0E4F               	movlw	79
  2047  00170A  6419               	cpfsgt	lcd_test@character,c
  2048  00170C  D7F8               	goto	l622
  2049  00170E  0012               	return	
  2050  001710                     __end_of_lcd_test:
  2051                           	opt stack 0
  2052                           tblptru	equ	0xFF8
  2053                           tblptrh	equ	0xFF7
  2054                           tblptrl	equ	0xFF6
  2055                           tablat	equ	0xFF5
  2056                           prodh	equ	0xFF4
  2057                           prodl	equ	0xFF3
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           indf2	equ	0xFDF
  2061                           fsr2h	equ	0xFDA
  2062                           fsr2l	equ	0xFD9
  2063                           status	equ	0xFD8
  2064                           
  2065 ;; *************** function _displ_credit *****************
  2066 ;; Defined at:
  2067 ;;		line 44 in file "lcd.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  cash            1   43[COMRAM] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;Total ram usage:        1 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    7
  2088 ;; This function calls:
  2089 ;;		_credit_check
  2090 ;;		_displ_hex
  2091 ;;		_lcd_string
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text13
  2098  001654                     __ptext13:
  2099                           	opt stack 0
  2100  001654                     _displ_credit:
  2101                           	opt stack 23
  2102                           
  2103                           ;lcd.c: 46: lcd_string(credits);
  2104                           
  2105                           ;incstack = 0
  2106  001654  0E44               	movlw	low _credits
  2107  001656  6E19               	movwf	lcd_string@lcdstring,c
  2108  001658  0E0F               	movlw	high _credits
  2109  00165A  6E1A               	movwf	lcd_string@lcdstring+1,c
  2110  00165C  ECD6  F008         	call	_lcd_string	;wreg free
  2111                           
  2112                           ;lcd.c: 47: uint8_t cash = credit_check();
  2113  001660  EC4C  F00B         	call	_credit_check	;wreg free
  2114  001664  6E2C               	movwf	displ_credit@cash,c
  2115                           
  2116                           ;lcd.c: 48: displ_hex((uint8_t) cash);
  2117  001666  502C               	movf	displ_credit@cash,w,c
  2118  001668  6E1D               	movwf	displ_hex@hexnum,c
  2119  00166A  6A1E               	clrf	displ_hex@hexnum+1,c
  2120  00166C  6A1F               	clrf	displ_hex@hexnum+2,c
  2121  00166E  EC26  F008         	call	_displ_hex	;wreg free
  2122                           
  2123                           ;lcd.c: 49: venflags.credisplay = 0;
  2124  001672  983E               	bcf	_venflags,4,c
  2125  001674  0012               	return		;funcret
  2126  001676                     __end_of_displ_credit:
  2127                           	opt stack 0
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodh	equ	0xFF4
  2133                           prodl	equ	0xFF3
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           indf2	equ	0xFDF
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _lcd_string *****************
  2142 ;; Defined at:
  2143 ;;		line 78 in file "lcd.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  lcdstring       2   24[COMRAM] PTR unsigned char 
  2146 ;;		 -> credits(13), inscoin(22), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;Total ram usage:        4 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    6
  2165 ;; This function calls:
  2166 ;;		_lcd_write
  2167 ;;		_lcd_writeC
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;;		_displ_credit
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text14
  2175  0011AC                     __ptext14:
  2176                           	opt stack 0
  2177  0011AC                     _lcd_string:
  2178                           	opt stack 24
  2179                           
  2180                           ;lcd.c: 80: lcd_write(dispclr);
  2181                           
  2182                           ;incstack = 0
  2183  0011AC  0E2A               	movlw	low _dispclr
  2184  0011AE  6EF6               	movwf	tblptrl,c
  2185  0011B0                     	if	0	;There is only one active tblptr byte
  2186  0011B0                     	endif
  2187  0011B0                     	if	0	;There are less than 3 active tblptr bytes
  2188  0011B0                     	endif
  2189  0011B0  0008               	tblrd		*
  2190  0011B2  50F5               	movf	tablat,w,c
  2191  0011B4  ECBC  F00A         	call	_lcd_write
  2192                           
  2193                           ;lcd.c: 81: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
  2194  0011B8  0E00               	movlw	0
  2195  0011BA  6E37               	movwf	_stradd,c
  2196  0011BC  D024               	goto	l605
  2197  0011BE                     
  2198                           ;lcd.c: 82: {
  2199                           ;lcd.c: 83: lcdata = lcdstring[stradd];
  2200  0011BE  5037               	movf	_stradd,w,c
  2201  0011C0  0D01               	mullw	1
  2202  0011C2  C019  F01B         	movff	lcd_string@lcdstring,??_lcd_string
  2203  0011C6  C01A  F01C         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  2204  0011CA  50F3               	movf	prodl,w,c
  2205  0011CC  261B               	addwf	??_lcd_string,f,c
  2206  0011CE  50F4               	movf	prodh,w,c
  2207  0011D0  221C               	addwfc	??_lcd_string+1,f,c
  2208  0011D2  C01B  FFF6         	movff	??_lcd_string,tblptrl
  2209  0011D6  C01C  FFF7         	movff	??_lcd_string+1,tblptrh
  2210  0011DA                     	if	0	;tblptru may be non-zero
  2211  0011DA                     	endif
  2212  0011DA                     	if	0	;tblptru may be non-zero
  2213  0011DA                     	endif
  2214  0011DA  0008               	tblrd		*
  2215  0011DC  CFF5 F038          	movff	tablat,_lcdata
  2216                           
  2217                           ;lcd.c: 84: lcd_writeC(lcdstring[stradd]);
  2218  0011E0  5037               	movf	_stradd,w,c
  2219  0011E2  0D01               	mullw	1
  2220  0011E4  C019  F01B         	movff	lcd_string@lcdstring,??_lcd_string
  2221  0011E8  C01A  F01C         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  2222  0011EC  50F3               	movf	prodl,w,c
  2223  0011EE  261B               	addwf	??_lcd_string,f,c
  2224  0011F0  50F4               	movf	prodh,w,c
  2225  0011F2  221C               	addwfc	??_lcd_string+1,f,c
  2226  0011F4  C01B  FFF6         	movff	??_lcd_string,tblptrl
  2227  0011F8  C01C  FFF7         	movff	??_lcd_string+1,tblptrh
  2228  0011FC                     	if	0	;tblptru may be non-zero
  2229  0011FC                     	endif
  2230  0011FC                     	if	0	;tblptru may be non-zero
  2231  0011FC                     	endif
  2232  0011FC  0008               	tblrd		*
  2233  0011FE  50F5               	movf	tablat,w,c
  2234  001200  ECED  F00A         	call	_lcd_writeC
  2235  001204  2A37               	incf	_stradd,f,c
  2236  001206                     l605:
  2237  001206  5037               	movf	_stradd,w,c
  2238  001208  0D01               	mullw	1
  2239  00120A  C019  F01B         	movff	lcd_string@lcdstring,??_lcd_string
  2240  00120E  C01A  F01C         	movff	lcd_string@lcdstring+1,??_lcd_string+1
  2241  001212  50F3               	movf	prodl,w,c
  2242  001214  261B               	addwf	??_lcd_string,f,c
  2243  001216  50F4               	movf	prodh,w,c
  2244  001218  221C               	addwfc	??_lcd_string+1,f,c
  2245  00121A  C01B  FFF6         	movff	??_lcd_string,tblptrl
  2246  00121E  C01C  FFF7         	movff	??_lcd_string+1,tblptrh
  2247  001222                     	if	0	;tblptru may be non-zero
  2248  001222                     	endif
  2249  001222                     	if	0	;tblptru may be non-zero
  2250  001222                     	endif
  2251  001222  0008               	tblrd		*
  2252  001224  50F5               	movf	tablat,w,c
  2253  001226  0900               	iorlw	0
  2254  001228  B4D8               	btfsc	status,2,c
  2255  00122A  0012               	return	
  2256  00122C  D7C8               	goto	l606
  2257  00122E                     __end_of_lcd_string:
  2258                           	opt stack 0
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           prodh	equ	0xFF4
  2264                           prodl	equ	0xFF3
  2265                           postinc0	equ	0xFEE
  2266                           wreg	equ	0xFE8
  2267                           indf2	equ	0xFDF
  2268                           fsr2h	equ	0xFDA
  2269                           fsr2l	equ	0xFD9
  2270                           status	equ	0xFD8
  2271                           
  2272 ;; *************** function _displ_hex *****************
  2273 ;; Defined at:
  2274 ;;		line 53 in file "lcd.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  hexnum          3   28[COMRAM] unsigned um
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  value           8   31[COMRAM] unsigned char [8]
  2279 ;;  hexnumsave      3   39[COMRAM] unsigned um
  2280 ;;  i               1   42[COMRAM] char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2290 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;Total ram usage:       15 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    6
  2297 ;; This function calls:
  2298 ;;		___ltdiv
  2299 ;;		___ltmod
  2300 ;;		_lcd_writeC
  2301 ;; This function is called by:
  2302 ;;		_displ_credit
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text15
  2307  00104C                     __ptext15:
  2308                           	opt stack 0
  2309  00104C                     _displ_hex:
  2310                           	opt stack 23
  2311                           
  2312                           ;lcd.c: 55: signed char i = 0;
  2313                           
  2314                           ;incstack = 0
  2315  00104C  0E00               	movlw	0
  2316  00104E  6E2B               	movwf	displ_hex@i,c
  2317                           
  2318                           ;lcd.c: 56: uint8_t value[8];
  2319                           ;lcd.c: 57: uint24_t hexnumsave = hexnum;
  2320  001050  C01D  F028         	movff	displ_hex@hexnum,displ_hex@hexnumsave
  2321  001054  C01E  F029         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
  2322  001058  C01F  F02A         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
  2323                           
  2324                           ;lcd.c: 58: while(hexnum > 0)
  2325  00105C  D02E               	goto	l595
  2326  00105E                     
  2327                           ;lcd.c: 59: {
  2328                           ;lcd.c: 60: value[i] = hexnum % 10;
  2329  00105E  502B               	movf	displ_hex@i,w,c
  2330  001060  0D01               	mullw	1
  2331  001062  0E20               	movlw	low displ_hex@value
  2332  001064  24F3               	addwf	prodl,w,c
  2333  001066  6ED9               	movwf	fsr2l,c
  2334  001068  0E00               	movlw	high displ_hex@value
  2335  00106A  20F4               	addwfc	prodh,w,c
  2336  00106C  6EDA               	movwf	fsr2h,c
  2337  00106E  C01D  F013         	movff	displ_hex@hexnum,___ltmod@dividend
  2338  001072  C01E  F014         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
  2339  001076  C01F  F015         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
  2340  00107A  0E0A               	movlw	10
  2341  00107C  6E16               	movwf	___ltmod@divisor,c
  2342  00107E  0E00               	movlw	0
  2343  001080  6E17               	movwf	___ltmod@divisor+1,c
  2344  001082  0E00               	movlw	0
  2345  001084  6E18               	movwf	___ltmod@divisor+2,c
  2346  001086  ECB7  F009         	call	___ltmod	;wreg free
  2347  00108A  5013               	movf	?___ltmod,w,c
  2348  00108C  6EDF               	movwf	indf2,c
  2349                           
  2350                           ;lcd.c: 61: hexnum /= 10;
  2351  00108E  C01D  F013         	movff	displ_hex@hexnum,___ltdiv@dividend
  2352  001092  C01E  F014         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
  2353  001096  C01F  F015         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
  2354  00109A  0E0A               	movlw	10
  2355  00109C  6E16               	movwf	___ltdiv@divisor,c
  2356  00109E  0E00               	movlw	0
  2357  0010A0  6E17               	movwf	___ltdiv@divisor+1,c
  2358  0010A2  0E00               	movlw	0
  2359  0010A4  6E18               	movwf	___ltdiv@divisor+2,c
  2360  0010A6  EC51  F009         	call	___ltdiv	;wreg free
  2361  0010AA  C013  F01D         	movff	?___ltdiv,displ_hex@hexnum
  2362  0010AE  C014  F01E         	movff	?___ltdiv+1,displ_hex@hexnum+1
  2363  0010B2  C015  F01F         	movff	?___ltdiv+2,displ_hex@hexnum+2
  2364                           
  2365                           ;lcd.c: 62: i = i + 1;
  2366  0010B6  282B               	incf	displ_hex@i,w,c
  2367  0010B8  6E2B               	movwf	displ_hex@i,c
  2368  0010BA                     l595:
  2369  0010BA  501D               	movf	displ_hex@hexnum,w,c
  2370  0010BC  101E               	iorwf	displ_hex@hexnum+1,w,c
  2371  0010BE  101F               	iorwf	displ_hex@hexnum+2,w,c
  2372  0010C0  B4D8               	btfsc	status,2,c
  2373  0010C2  D00E               	goto	l598
  2374  0010C4  D7CC               	goto	l596
  2375  0010C6                     
  2376                           ;lcd.c: 66: {
  2377                           ;lcd.c: 67: i--;
  2378  0010C6  062B               	decf	displ_hex@i,f,c
  2379                           
  2380                           ;lcd.c: 68: lcd_writeC(value[i] | 0x30);
  2381  0010C8  502B               	movf	displ_hex@i,w,c
  2382  0010CA  0D01               	mullw	1
  2383  0010CC  0E20               	movlw	low displ_hex@value
  2384  0010CE  24F3               	addwf	prodl,w,c
  2385  0010D0  6ED9               	movwf	fsr2l,c
  2386  0010D2  0E00               	movlw	high displ_hex@value
  2387  0010D4  20F4               	addwfc	prodh,w,c
  2388  0010D6  6EDA               	movwf	fsr2h,c
  2389  0010D8  50DF               	movf	indf2,w,c
  2390  0010DA  0930               	iorlw	48
  2391  0010DC  ECED  F00A         	call	_lcd_writeC
  2392  0010E0                     l598:
  2393  0010E0  502B               	movf	displ_hex@i,w,c
  2394  0010E2  0A80               	xorlw	128
  2395  0010E4  0F7F               	addlw	-129
  2396  0010E6  B0D8               	btfsc	status,0,c
  2397  0010E8  D7EE               	goto	l599
  2398                           
  2399                           ;lcd.c: 69: }
  2400                           ;lcd.c: 71: if(hexnumsave == 0)
  2401  0010EA  5028               	movf	displ_hex@hexnumsave,w,c
  2402  0010EC  1029               	iorwf	displ_hex@hexnumsave+1,w,c
  2403  0010EE  102A               	iorwf	displ_hex@hexnumsave+2,w,c
  2404  0010F0  A4D8               	btfss	status,2,c
  2405  0010F2  0012               	return	
  2406                           
  2407                           ;lcd.c: 72: {
  2408                           ;lcd.c: 73: lcd_writeC(0x30);
  2409  0010F4  0E30               	movlw	48
  2410  0010F6  ECED  F00A         	call	_lcd_writeC
  2411  0010FA  0012               	return	
  2412  0010FC                     __end_of_displ_hex:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           indf2	equ	0xFDF
  2423                           fsr2h	equ	0xFDA
  2424                           fsr2l	equ	0xFD9
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _lcd_writeC *****************
  2428 ;; Defined at:
  2429 ;;		line 88 in file "lcd.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  lcdata          1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  lcdata          1   23[COMRAM] unsigned char 
  2434 ;;  lcdatasave      1   22[COMRAM] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2448 ;;Total ram usage:        2 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    5
  2451 ;; This function calls:
  2452 ;;		_lcd_write
  2453 ;; This function is called by:
  2454 ;;		_displ_hex
  2455 ;;		_lcd_string
  2456 ;;		_lcd_test
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text16
  2461  0015DA                     __ptext16:
  2462                           	opt stack 0
  2463  0015DA                     _lcd_writeC:
  2464                           	opt stack 24
  2465                           
  2466                           ;incstack = 0
  2467                           ;lcd_writeC@lcdata stored from wreg
  2468  0015DA  6E18               	movwf	lcd_writeC@lcdata,c
  2469  0015DC  8487               	bsf	3975,2,c	;# 
  2470                           
  2471                           ;lcd.c: 93: lcd_write(lcdata);
  2472  0015DE  5018               	movf	lcd_writeC@lcdata,w,c
  2473  0015E0  ECBC  F00A         	call	_lcd_write
  2474                           
  2475                           ;lcd.c: 96: if(bflag == 0x0F)
  2476  0015E4  0E0F               	movlw	15
  2477  0015E6  183A               	xorwf	_bflag,w,c
  2478  0015E8  A4D8               	btfss	status,2,c
  2479  0015EA  D00B               	goto	l611
  2480                           
  2481                           ;lcd.c: 97: {
  2482                           ;lcd.c: 98: uint8_t lcdatasave = lcdata;
  2483  0015EC  C018  F017         	movff	lcd_writeC@lcdata,lcd_writeC@lcdatasave
  2484  0015F0  9487               	bcf	3975,2,c	;# 
  2485                           
  2486                           ;lcd.c: 101: lcdata = 0xC0;
  2487  0015F2  0EC0               	movlw	192
  2488  0015F4  6E18               	movwf	lcd_writeC@lcdata,c
  2489                           
  2490                           ;lcd.c: 102: lcd_write(lcdata);
  2491  0015F6  5018               	movf	lcd_writeC@lcdata,w,c
  2492  0015F8  ECBC  F00A         	call	_lcd_write
  2493  0015FC  8487               	bsf	3975,2,c	;# 
  2494                           
  2495                           ;lcd.c: 104: lcdata = lcdatasave;
  2496  0015FE  C017  F018         	movff	lcd_writeC@lcdatasave,lcd_writeC@lcdata
  2497  001602                     l611:
  2498  001602  9487               	bcf	3975,2,c	;# 
  2499  001604  0012               	return		;funcret
  2500  001606                     __end_of_lcd_writeC:
  2501                           	opt stack 0
  2502                           tblptru	equ	0xFF8
  2503                           tblptrh	equ	0xFF7
  2504                           tblptrl	equ	0xFF6
  2505                           tablat	equ	0xFF5
  2506                           prodh	equ	0xFF4
  2507                           prodl	equ	0xFF3
  2508                           postinc0	equ	0xFEE
  2509                           wreg	equ	0xFE8
  2510                           indf2	equ	0xFDF
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _lcd_write *****************
  2516 ;; Defined at:
  2517 ;;		line 110 in file "lcd.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  lcdata          1    wreg     unsigned char 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  lcdata          1   21[COMRAM] unsigned char 
  2522 ;;  savelatd        1   20[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;Total ram usage:        2 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    4
  2539 ;; This function calls:
  2540 ;;		_lcd_clockE
  2541 ;;		_read_busy
  2542 ;; This function is called by:
  2543 ;;		_lcd_init
  2544 ;;		_lcd_string
  2545 ;;		_lcd_writeC
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text17
  2550  001578                     __ptext17:
  2551                           	opt stack 0
  2552  001578                     _lcd_write:
  2553                           	opt stack 24
  2554                           
  2555                           ;incstack = 0
  2556                           ;lcd_write@lcdata stored from wreg
  2557  001578  6E16               	movwf	lcd_write@lcdata,c
  2558                           
  2559                           ;lcd.c: 112: uint8_t savelatd = LATD;
  2560  00157A  CF86 F015          	movff	3974,lcd_write@savelatd	;volatile
  2561                           
  2562                           ;lcd.c: 115: bflag = read_busy();
  2563  00157E  EC26  F00A         	call	_read_busy	;wreg free
  2564  001582  D002               	goto	L2
  2565  001584                     
  2566                           ;lcd.c: 117: {
  2567                           ;lcd.c: 118: bflag = read_busy();
  2568  001584  EC26  F00A         	call	_read_busy	;wreg free
  2569  001588                     L2:
  2570  001588  6E3A               	movwf	_bflag,c
  2571  00158A  BE3A               	btfsc	_bflag,7,c
  2572  00158C  D7FB               	goto	l616
  2573                           
  2574                           ;lcd.c: 119: }
  2575                           ;lcd.c: 120: LATD = (lcdata >> 4) & 0x0F;
  2576  00158E  3816               	swapf	lcd_write@lcdata,w,c
  2577  001590  0B0F               	andlw	15
  2578  001592  0B0F               	andlw	15
  2579  001594  6E86               	movwf	3974,c	;volatile
  2580                           
  2581                           ;lcd.c: 122: lcd_clockE();
  2582  001596  ECAD  F00B         	call	_lcd_clockE	;wreg free
  2583                           
  2584                           ;lcd.c: 124: LATD = lcdata & 0x0F;
  2585  00159A  5016               	movf	lcd_write@lcdata,w,c
  2586  00159C  0B0F               	andlw	15
  2587  00159E  6E86               	movwf	3974,c	;volatile
  2588                           
  2589                           ;lcd.c: 125: lcd_clockE();
  2590  0015A0  ECAD  F00B         	call	_lcd_clockE	;wreg free
  2591                           
  2592                           ;lcd.c: 126: LATD = savelatd;
  2593  0015A4  C015  FF86         	movff	lcd_write@savelatd,3974	;volatile
  2594  0015A8  0012               	return		;funcret
  2595  0015AA                     __end_of_lcd_write:
  2596                           	opt stack 0
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           indf2	equ	0xFDF
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _read_busy *****************
  2611 ;; Defined at:
  2612 ;;		line 141 in file "lcd.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  savelatd        1   19[COMRAM] unsigned char 
  2617 ;;  savelate        1   18[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      char 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;Total ram usage:        2 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    3
  2634 ;; This function calls:
  2635 ;;		_lcd_clockH
  2636 ;;		_lcd_clockL
  2637 ;; This function is called by:
  2638 ;;		_lcd_write
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text18
  2643  00144C                     __ptext18:
  2644                           	opt stack 0
  2645  00144C                     _read_busy:
  2646                           	opt stack 24
  2647                           
  2648                           ;lcd.c: 143: uint8_t savelate = LATE;
  2649                           
  2650                           ;incstack = 0
  2651  00144C  CF87 F013          	movff	3975,read_busy@savelate	;volatile
  2652                           
  2653                           ;lcd.c: 144: uint8_t savelatd = LATD;
  2654  001450  CF86 F014          	movff	3974,read_busy@savelatd	;volatile
  2655  001454  9487               	bcf	3975,2,c	;# 
  2656  001456  8287               	bsf	3975,1,c	;# 
  2657                           
  2658                           ;lcd.c: 147: TRISD = (TRISD | 0x0F);
  2659  001458  508B               	movf	3979,w,c	;volatile
  2660  00145A  090F               	iorlw	15
  2661  00145C  6E8B               	movwf	3979,c	;volatile
  2662                           
  2663                           ;lcd.c: 148: lcd_clockH();
  2664  00145E  ECC6  F00B         	call	_lcd_clockH	;wreg free
  2665                           
  2666                           ;lcd.c: 149: bflag = (PORTD << 4);
  2667  001462  3890               	swapf	3984,w,c	;volatile
  2668  001464  0BF0               	andlw	240
  2669  001466  6E3A               	movwf	_bflag,c
  2670                           
  2671                           ;lcd.c: 150: lcd_clockL();
  2672  001468  ECC3  F00B         	call	_lcd_clockL	;wreg free
  2673                           
  2674                           ;lcd.c: 151: lcd_clockH();
  2675  00146C  ECC6  F00B         	call	_lcd_clockH	;wreg free
  2676                           
  2677                           ;lcd.c: 152: bflag = bflag | (PORTD & 0x0F);
  2678  001470  5090               	movf	3984,w,c	;volatile
  2679  001472  0B0F               	andlw	15
  2680  001474  103A               	iorwf	_bflag,w,c
  2681  001476  6E3A               	movwf	_bflag,c
  2682  001478  9087               	bcf	3975,0,c	;# 
  2683                           
  2684                           ;lcd.c: 154: TRISD = (TRISD & 0xF0);
  2685  00147A  508B               	movf	3979,w,c	;volatile
  2686  00147C  0BF0               	andlw	240
  2687  00147E  6E8B               	movwf	3979,c	;volatile
  2688  001480  9287               	bcf	3975,1,c	;# 
  2689                           
  2690                           ;lcd.c: 156: LATD = savelatd;
  2691  001482  C014  FF86         	movff	read_busy@savelatd,3974	;volatile
  2692                           
  2693                           ;lcd.c: 157: LATE = savelate;
  2694  001486  C013  FF87         	movff	read_busy@savelate,3975	;volatile
  2695                           
  2696                           ;lcd.c: 158: return(bflag);
  2697  00148A  503A               	movf	_bflag,w,c
  2698  00148C  0012               	return	
  2699  00148E                     __end_of_read_busy:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           prodh	equ	0xFF4
  2706                           prodl	equ	0xFF3
  2707                           postinc0	equ	0xFEE
  2708                           wreg	equ	0xFE8
  2709                           indf2	equ	0xFDF
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8
  2713                           
  2714 ;; *************** function _lcd_clockL *****************
  2715 ;; Defined at:
  2716 ;;		line 173 in file "lcd.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		None
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    2
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_read_busy
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text19
  2745  001786                     __ptext19:
  2746                           	opt stack 0
  2747  001786                     _lcd_clockL:
  2748                           	opt stack 24
  2749                           
  2750                           ;incstack = 0
  2751  001786  9087               	bcf	3975,0,c	;# 
  2752                           
  2753                           ;lcd.c: 176: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2754  001788  D000               	nop2		;2 cycle nop
  2755  00178A  0012               	return		;funcret
  2756  00178C                     __end_of_lcd_clockL:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           postinc0	equ	0xFEE
  2765                           wreg	equ	0xFE8
  2766                           indf2	equ	0xFDF
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8
  2770                           
  2771 ;; *************** function _lcd_clockH *****************
  2772 ;; Defined at:
  2773 ;;		line 165 in file "lcd.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		None
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;Total ram usage:        0 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    2
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_read_busy
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text20
  2802  00178C                     __ptext20:
  2803                           	opt stack 0
  2804  00178C                     _lcd_clockH:
  2805                           	opt stack 24
  2806                           
  2807                           ;incstack = 0
  2808  00178C  8087               	bsf	3975,0,c	;# 
  2809                           
  2810                           ;lcd.c: 168: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2811  00178E  D000               	nop2		;2 cycle nop
  2812  001790  0012               	return		;funcret
  2813  001792                     __end_of_lcd_clockH:
  2814                           	opt stack 0
  2815                           tblptru	equ	0xFF8
  2816                           tblptrh	equ	0xFF7
  2817                           tblptrl	equ	0xFF6
  2818                           tablat	equ	0xFF5
  2819                           prodh	equ	0xFF4
  2820                           prodl	equ	0xFF3
  2821                           postinc0	equ	0xFEE
  2822                           wreg	equ	0xFE8
  2823                           indf2	equ	0xFDF
  2824                           fsr2h	equ	0xFDA
  2825                           fsr2l	equ	0xFD9
  2826                           status	equ	0xFD8
  2827                           
  2828 ;; *************** function _lcd_clockE *****************
  2829 ;; Defined at:
  2830 ;;		line 181 in file "lcd.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		None
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;Total ram usage:        0 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    2
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_lcd_init
  2855 ;;		_lcd_write
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text21
  2860  00175A                     __ptext21:
  2861                           	opt stack 0
  2862  00175A                     _lcd_clockE:
  2863                           	opt stack 25
  2864                           
  2865                           ;incstack = 0
  2866  00175A  8087               	bsf	3975,0,c	;# 
  2867                           
  2868                           ;lcd.c: 184: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2869  00175C  D000               	nop2		;2 cycle nop
  2870  00175E  9087               	bcf	3975,0,c	;# 
  2871                           
  2872                           ;lcd.c: 186: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2873  001760  D000               	nop2		;2 cycle nop
  2874  001762  0012               	return		;funcret
  2875  001764                     __end_of_lcd_clockE:
  2876                           	opt stack 0
  2877                           tblptru	equ	0xFF8
  2878                           tblptrh	equ	0xFF7
  2879                           tblptrl	equ	0xFF6
  2880                           tablat	equ	0xFF5
  2881                           prodh	equ	0xFF4
  2882                           prodl	equ	0xFF3
  2883                           postinc0	equ	0xFEE
  2884                           wreg	equ	0xFE8
  2885                           indf2	equ	0xFDF
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function ___ltmod *****************
  2891 ;; Defined at:
  2892 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltmod.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  dividend        3   18[COMRAM] unsigned um
  2895 ;;  divisor         3   21[COMRAM] unsigned um
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  counter         1   24[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  3   18[COMRAM] unsigned um
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2907 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;Total ram usage:        7 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    2
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_displ_hex
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text22
  2922  00136E                     __ptext22:
  2923                           	opt stack 0
  2924  00136E                     ___ltmod:
  2925                           	opt stack 26
  2926                           
  2927                           ;incstack = 0
  2928  00136E  5016               	movf	___ltmod@divisor,w,c
  2929  001370  1017               	iorwf	___ltmod@divisor+1,w,c
  2930  001372  1018               	iorwf	___ltmod@divisor+2,w,c
  2931  001374  B4D8               	btfsc	status,2,c
  2932  001376  D01E               	goto	l1249
  2933  001378  0E01               	movlw	1
  2934  00137A  6E19               	movwf	___ltmod@counter,c
  2935  00137C  D005               	goto	l1244
  2936  00137E  90D8               	bcf	status,0,c
  2937  001380  3616               	rlcf	___ltmod@divisor,f,c
  2938  001382  3617               	rlcf	___ltmod@divisor+1,f,c
  2939  001384  3618               	rlcf	___ltmod@divisor+2,f,c
  2940  001386  2A19               	incf	___ltmod@counter,f,c
  2941  001388                     l1244:
  2942  001388  AE18               	btfss	___ltmod@divisor+2,7,c
  2943  00138A  D7F9               	goto	l1245
  2944  00138C                     u780:
  2945  00138C  5016               	movf	___ltmod@divisor,w,c
  2946  00138E  5C13               	subwf	___ltmod@dividend,w,c
  2947  001390  5017               	movf	___ltmod@divisor+1,w,c
  2948  001392  5814               	subwfb	___ltmod@dividend+1,w,c
  2949  001394  5018               	movf	___ltmod@divisor+2,w,c
  2950  001396  5815               	subwfb	___ltmod@dividend+2,w,c
  2951  001398  A0D8               	btfss	status,0,c
  2952  00139A  D006               	goto	l1248
  2953  00139C  5016               	movf	___ltmod@divisor,w,c
  2954  00139E  5E13               	subwf	___ltmod@dividend,f,c
  2955  0013A0  5017               	movf	___ltmod@divisor+1,w,c
  2956  0013A2  5A14               	subwfb	___ltmod@dividend+1,f,c
  2957  0013A4  5018               	movf	___ltmod@divisor+2,w,c
  2958  0013A6  5A15               	subwfb	___ltmod@dividend+2,f,c
  2959  0013A8                     l1248:
  2960  0013A8  90D8               	bcf	status,0,c
  2961  0013AA  3218               	rrcf	___ltmod@divisor+2,f,c
  2962  0013AC  3217               	rrcf	___ltmod@divisor+1,f,c
  2963  0013AE  3216               	rrcf	___ltmod@divisor,f,c
  2964  0013B0  2E19               	decfsz	___ltmod@counter,f,c
  2965  0013B2  D7EC               	goto	u780
  2966  0013B4                     l1249:
  2967  0013B4  C013  F013         	movff	___ltmod@dividend,?___ltmod
  2968  0013B8  C014  F014         	movff	___ltmod@dividend+1,?___ltmod+1
  2969  0013BC  C015  F015         	movff	___ltmod@dividend+2,?___ltmod+2
  2970  0013C0  0012               	return		;funcret
  2971  0013C2                     __end_of___ltmod:
  2972                           	opt stack 0
  2973                           tblptru	equ	0xFF8
  2974                           tblptrh	equ	0xFF7
  2975                           tblptrl	equ	0xFF6
  2976                           tablat	equ	0xFF5
  2977                           prodh	equ	0xFF4
  2978                           prodl	equ	0xFF3
  2979                           postinc0	equ	0xFEE
  2980                           wreg	equ	0xFE8
  2981                           indf2	equ	0xFDF
  2982                           fsr2h	equ	0xFDA
  2983                           fsr2l	equ	0xFD9
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function ___ltdiv *****************
  2987 ;; Defined at:
  2988 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltdiv.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  dividend        3   18[COMRAM] unsigned um
  2991 ;;  divisor         3   21[COMRAM] unsigned um
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  quotient        3   24[COMRAM] unsigned um
  2994 ;;  counter         1   27[COMRAM] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  3   18[COMRAM] unsigned um
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3004 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;Total ram usage:       10 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_displ_hex
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text23
  3019  0012A2                     __ptext23:
  3020                           	opt stack 0
  3021  0012A2                     ___ltdiv:
  3022                           	opt stack 26
  3023                           
  3024                           ;incstack = 0
  3025  0012A2  0E00               	movlw	0
  3026  0012A4  6E19               	movwf	___ltdiv@quotient,c
  3027  0012A6  0E00               	movlw	0
  3028  0012A8  6E1A               	movwf	___ltdiv@quotient+1,c
  3029  0012AA  0E00               	movlw	0
  3030  0012AC  6E1B               	movwf	___ltdiv@quotient+2,c
  3031  0012AE  5016               	movf	___ltdiv@divisor,w,c
  3032  0012B0  1017               	iorwf	___ltdiv@divisor+1,w,c
  3033  0012B2  1018               	iorwf	___ltdiv@divisor+2,w,c
  3034  0012B4  B4D8               	btfsc	status,2,c
  3035  0012B6  D023               	goto	l1239
  3036  0012B8  0E01               	movlw	1
  3037  0012BA  6E1C               	movwf	___ltdiv@counter,c
  3038  0012BC  D005               	goto	l1234
  3039  0012BE  90D8               	bcf	status,0,c
  3040  0012C0  3616               	rlcf	___ltdiv@divisor,f,c
  3041  0012C2  3617               	rlcf	___ltdiv@divisor+1,f,c
  3042  0012C4  3618               	rlcf	___ltdiv@divisor+2,f,c
  3043  0012C6  2A1C               	incf	___ltdiv@counter,f,c
  3044  0012C8                     l1234:
  3045  0012C8  AE18               	btfss	___ltdiv@divisor+2,7,c
  3046  0012CA  D7F9               	goto	l1235
  3047  0012CC                     u750:
  3048  0012CC  90D8               	bcf	status,0,c
  3049  0012CE  3619               	rlcf	___ltdiv@quotient,f,c
  3050  0012D0  361A               	rlcf	___ltdiv@quotient+1,f,c
  3051  0012D2  361B               	rlcf	___ltdiv@quotient+2,f,c
  3052  0012D4  5016               	movf	___ltdiv@divisor,w,c
  3053  0012D6  5C13               	subwf	___ltdiv@dividend,w,c
  3054  0012D8  5017               	movf	___ltdiv@divisor+1,w,c
  3055  0012DA  5814               	subwfb	___ltdiv@dividend+1,w,c
  3056  0012DC  5018               	movf	___ltdiv@divisor+2,w,c
  3057  0012DE  5815               	subwfb	___ltdiv@dividend+2,w,c
  3058  0012E0  A0D8               	btfss	status,0,c
  3059  0012E2  D007               	goto	l1238
  3060  0012E4  5016               	movf	___ltdiv@divisor,w,c
  3061  0012E6  5E13               	subwf	___ltdiv@dividend,f,c
  3062  0012E8  5017               	movf	___ltdiv@divisor+1,w,c
  3063  0012EA  5A14               	subwfb	___ltdiv@dividend+1,f,c
  3064  0012EC  5018               	movf	___ltdiv@divisor+2,w,c
  3065  0012EE  5A15               	subwfb	___ltdiv@dividend+2,f,c
  3066  0012F0  8019               	bsf	___ltdiv@quotient,0,c
  3067  0012F2                     l1238:
  3068  0012F2  90D8               	bcf	status,0,c
  3069  0012F4  3218               	rrcf	___ltdiv@divisor+2,f,c
  3070  0012F6  3217               	rrcf	___ltdiv@divisor+1,f,c
  3071  0012F8  3216               	rrcf	___ltdiv@divisor,f,c
  3072  0012FA  2E1C               	decfsz	___ltdiv@counter,f,c
  3073  0012FC  D7E7               	goto	u750
  3074  0012FE                     l1239:
  3075  0012FE  C019  F013         	movff	___ltdiv@quotient,?___ltdiv
  3076  001302  C01A  F014         	movff	___ltdiv@quotient+1,?___ltdiv+1
  3077  001306  C01B  F015         	movff	___ltdiv@quotient+2,?___ltdiv+2
  3078  00130A  0012               	return		;funcret
  3079  00130C                     __end_of___ltdiv:
  3080                           	opt stack 0
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           postinc0	equ	0xFEE
  3088                           wreg	equ	0xFE8
  3089                           indf2	equ	0xFDF
  3090                           fsr2h	equ	0xFDA
  3091                           fsr2l	equ	0xFD9
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function _credit_check *****************
  3095 ;; Defined at:
  3096 ;;		line 70 in file "vend.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      unsigned char 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    3
  3117 ;; This function calls:
  3118 ;;		_DATAEE_ReadByte
  3119 ;; This function is called by:
  3120 ;;		_displ_credit
  3121 ;;		_vend_init
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text24
  3126  001698                     __ptext24:
  3127                           	opt stack 0
  3128  001698                     _credit_check:
  3129                           	opt stack 26
  3130                           
  3131                           ;vend.c: 72: cash = DATAEE_ReadByte(credmem);
  3132                           
  3133                           ;incstack = 0
  3134  001698  0E0B               	movlw	low _credmem
  3135  00169A  6EF6               	movwf	tblptrl,c
  3136  00169C                     	if	0	;There is only one active tblptr byte
  3137  00169C                     	endif
  3138  00169C                     	if	0	;There are less than 3 active tblptr bytes
  3139  00169C                     	endif
  3140  00169C  0009               	tblrd		*+
  3141  00169E  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  3142  0016A2  000A               	tblrd		*-
  3143  0016A4  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3144  0016A8  EC59  F00B         	call	_DATAEE_ReadByte	;wreg free
  3145  0016AC  6E35               	movwf	_cash,c	;volatile
  3146                           
  3147                           ;vend.c: 73: return(cash);
  3148  0016AE  5035               	movf	_cash,w,c	;volatile
  3149  0016B0  0012               	return	
  3150  0016B2                     __end_of_credit_check:
  3151                           	opt stack 0
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           indf2	equ	0xFDF
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           
  3165 ;; *************** function _credit_subtract *****************
  3166 ;; Defined at:
  3167 ;;		line 57 in file "vend.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  credit          1    wreg     unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  credit          1   22[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;Total ram usage:        1 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    3
  3188 ;; This function calls:
  3189 ;;		_DATAEE_ReadByte
  3190 ;;		_DATAEE_WriteByte
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text25
  3197  0013C2                     __ptext25:
  3198                           	opt stack 0
  3199  0013C2                     _credit_subtract:
  3200                           	opt stack 27
  3201                           
  3202                           ;incstack = 0
  3203                           ;credit_subtract@credit stored from wreg
  3204  0013C2  6E17               	movwf	credit_subtract@credit,c
  3205                           
  3206                           ;vend.c: 59: cash = DATAEE_ReadByte(credmem);
  3207  0013C4  0E0B               	movlw	low _credmem
  3208  0013C6  6EF6               	movwf	tblptrl,c
  3209  0013C8                     	if	0	;There is only one active tblptr byte
  3210  0013C8                     	endif
  3211  0013C8                     	if	0	;There are less than 3 active tblptr bytes
  3212  0013C8                     	endif
  3213  0013C8  0009               	tblrd		*+
  3214  0013CA  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  3215  0013CE  000A               	tblrd		*-
  3216  0013D0  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3217  0013D4  EC59  F00B         	call	_DATAEE_ReadByte	;wreg free
  3218  0013D8  6E35               	movwf	_cash,c	;volatile
  3219                           
  3220                           ;vend.c: 60: cash = (cash - credit) & 0xFF;
  3221  0013DA  5017               	movf	credit_subtract@credit,w,c
  3222  0013DC  0800               	sublw	0
  3223  0013DE  2435               	addwf	_cash,w,c	;volatile
  3224  0013E0  6E35               	movwf	_cash,c	;volatile
  3225                           
  3226                           ;vend.c: 61: DATAEE_WriteByte(credmem, cash);
  3227  0013E2  0E0B               	movlw	low _credmem
  3228  0013E4  6EF6               	movwf	tblptrl,c
  3229  0013E6                     	if	0	;There is only one active tblptr byte
  3230  0013E6                     	endif
  3231  0013E6                     	if	0	;There are less than 3 active tblptr bytes
  3232  0013E6                     	endif
  3233  0013E6  0009               	tblrd		*+
  3234  0013E8  CFF5 F013          	movff	tablat,DATAEE_WriteByte@bAdd
  3235  0013EC  000A               	tblrd		*-
  3236  0013EE  CFF5 F014          	movff	tablat,DATAEE_WriteByte@bAdd+1
  3237  0013F2  C035  F015         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  3238  0013F6  EC83  F00A         	call	_DATAEE_WriteByte	;wreg free
  3239                           
  3240                           ;vend.c: 62: if(cash == 0)
  3241  0013FA  5035               	movf	_cash,w,c	;volatile
  3242  0013FC  A4D8               	btfss	status,2,c
  3243  0013FE  0012               	return	
  3244                           
  3245                           ;vend.c: 63: {
  3246                           ;vend.c: 64: venflags.iscredit = 0;
  3247  001400  903E               	bcf	_venflags,0,c
  3248                           
  3249                           ;vend.c: 65: venflags.inscoin = 1;
  3250  001402  843E               	bsf	_venflags,2,c
  3251                           
  3252                           ;vend.c: 66: venflags.credisplay = 0;
  3253  001404  983E               	bcf	_venflags,4,c
  3254  001406  0012               	return	
  3255  001408                     __end_of_credit_subtract:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           prodh	equ	0xFF4
  3262                           prodl	equ	0xFF3
  3263                           postinc0	equ	0xFEE
  3264                           wreg	equ	0xFE8
  3265                           indf2	equ	0xFDF
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _credit_add *****************
  3271 ;; Defined at:
  3272 ;;		line 43 in file "vend.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  credit          1    wreg     unsigned char 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  credit          1   22[COMRAM] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3290 ;;Total ram usage:        1 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    3
  3293 ;; This function calls:
  3294 ;;		_DATAEE_ReadByte
  3295 ;;		_DATAEE_WriteByte
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text26
  3302  001408                     __ptext26:
  3303                           	opt stack 0
  3304  001408                     _credit_add:
  3305                           	opt stack 27
  3306                           
  3307                           ;incstack = 0
  3308                           ;credit_add@credit stored from wreg
  3309  001408  6E17               	movwf	credit_add@credit,c
  3310                           
  3311                           ;vend.c: 45: cash = DATAEE_ReadByte(credmem);
  3312  00140A  0E0B               	movlw	low _credmem
  3313  00140C  6EF6               	movwf	tblptrl,c
  3314  00140E                     	if	0	;There is only one active tblptr byte
  3315  00140E                     	endif
  3316  00140E                     	if	0	;There are less than 3 active tblptr bytes
  3317  00140E                     	endif
  3318  00140E  0009               	tblrd		*+
  3319  001410  CFF5 F013          	movff	tablat,DATAEE_ReadByte@bAdd
  3320  001414  000A               	tblrd		*-
  3321  001416  CFF5 F014          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3322  00141A  EC59  F00B         	call	_DATAEE_ReadByte	;wreg free
  3323  00141E  6E35               	movwf	_cash,c	;volatile
  3324                           
  3325                           ;vend.c: 46: cash = cash + credit;
  3326  001420  5035               	movf	_cash,w,c	;volatile
  3327  001422  2417               	addwf	credit_add@credit,w,c
  3328  001424  6E35               	movwf	_cash,c	;volatile
  3329                           
  3330                           ;vend.c: 47: DATAEE_WriteByte(credmem, cash);
  3331  001426  0E0B               	movlw	low _credmem
  3332  001428  6EF6               	movwf	tblptrl,c
  3333  00142A                     	if	0	;There is only one active tblptr byte
  3334  00142A                     	endif
  3335  00142A                     	if	0	;There are less than 3 active tblptr bytes
  3336  00142A                     	endif
  3337  00142A  0009               	tblrd		*+
  3338  00142C  CFF5 F013          	movff	tablat,DATAEE_WriteByte@bAdd
  3339  001430  000A               	tblrd		*-
  3340  001432  CFF5 F014          	movff	tablat,DATAEE_WriteByte@bAdd+1
  3341  001436  C035  F015         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  3342  00143A  EC83  F00A         	call	_DATAEE_WriteByte	;wreg free
  3343                           
  3344                           ;vend.c: 48: if(cash != 0)
  3345  00143E  5035               	movf	_cash,w,c	;volatile
  3346  001440  B4D8               	btfsc	status,2,c
  3347  001442  0012               	return	
  3348                           
  3349                           ;vend.c: 49: {
  3350                           ;vend.c: 50: venflags.iscredit = 1;
  3351  001444  803E               	bsf	_venflags,0,c
  3352                           
  3353                           ;vend.c: 51: venflags.inscoin = 0;
  3354  001446  943E               	bcf	_venflags,2,c
  3355                           
  3356                           ;vend.c: 52: venflags.credisplay = 1;
  3357  001448  883E               	bsf	_venflags,4,c
  3358  00144A  0012               	return	
  3359  00144C                     __end_of_credit_add:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodh	equ	0xFF4
  3366                           prodl	equ	0xFF3
  3367                           postinc0	equ	0xFEE
  3368                           wreg	equ	0xFE8
  3369                           indf2	equ	0xFDF
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _DATAEE_WriteByte *****************
  3375 ;; Defined at:
  3376 ;;		line 167 in file "mcc_generated_files/memory.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  bAdd            2   18[COMRAM] unsigned int 
  3379 ;;  bData           1   20[COMRAM] unsigned char 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3391 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3395 ;;Total ram usage:        4 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    2
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_credit_add
  3402 ;;		_credit_subtract
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text27
  3407  001506                     __ptext27:
  3408                           	opt stack 0
  3409  001506                     _DATAEE_WriteByte:
  3410                           	opt stack 27
  3411                           
  3412                           ;memory.c: 169: uint8_t GIEBitValue = INTCONbits.GIE;
  3413                           
  3414                           ;incstack = 0
  3415  001506  0E00               	movlw	0
  3416  001508  BEF2               	btfsc	intcon,7,c	;volatile
  3417  00150A  0E01               	movlw	1
  3418  00150C  6E16               	movwf	DATAEE_WriteByte@GIEBitValue,c
  3419                           
  3420                           ;memory.c: 171: NVMADRH = ((bAdd >> 8) & 0x03);
  3421  00150E  5014               	movf	DATAEE_WriteByte@bAdd+1,w,c
  3422  001510  0B03               	andlw	3
  3423  001512  6E7F               	movwf	3967,c	;volatile
  3424                           
  3425                           ;memory.c: 172: NVMADRL = (bAdd & 0xFF);
  3426  001514  C013  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  3427                           
  3428                           ;memory.c: 173: NVMDAT = bData;
  3429  001518  C015  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  3430                           
  3431                           ;memory.c: 174: NVMCON1bits.NVMREG = 0;
  3432  00151C  0E3F               	movlw	-193
  3433  00151E  1681               	andwf	3969,f,c	;volsfr
  3434                           
  3435                           ;memory.c: 175: NVMCON1bits.WREN = 1;
  3436  001520  8481               	bsf	3969,2,c	;volsfr
  3437                           
  3438                           ;memory.c: 176: INTCONbits.GIE = 0;
  3439  001522  9EF2               	bcf	intcon,7,c	;volatile
  3440                           
  3441                           ;memory.c: 177: NVMCON2 = 0x55;
  3442  001524  0E55               	movlw	85
  3443  001526  6E82               	movwf	3970,c	;volsfr
  3444                           
  3445                           ;memory.c: 178: NVMCON2 = 0xAA;
  3446  001528  0EAA               	movlw	170
  3447  00152A  6E82               	movwf	3970,c	;volsfr
  3448                           
  3449                           ;memory.c: 179: NVMCON1bits.WR = 1;
  3450  00152C  8281               	bsf	3969,1,c	;volsfr
  3451  00152E                     
  3452                           ;memory.c: 182: {
  3453  00152E  B281               	btfsc	3969,1,c	;volsfr
  3454  001530  D7FE               	goto	l240
  3455                           
  3456                           ;memory.c: 183: }
  3457                           ;memory.c: 185: NVMCON1bits.WREN = 0;
  3458  001532  9481               	bcf	3969,2,c	;volsfr
  3459                           
  3460                           ;memory.c: 186: INTCONbits.GIE = GIEBitValue;
  3461  001534  B016               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
  3462  001536  D002               	bra	u815
  3463  001538  9EF2               	bcf	intcon,7,c	;volatile
  3464  00153A  D001               	bra	u816
  3465  00153C                     u815:
  3466  00153C  8EF2               	bsf	intcon,7,c	;volatile
  3467  00153E                     u816:
  3468  00153E  0012               	return		;funcret
  3469  001540                     __end_of_DATAEE_WriteByte:
  3470                           	opt stack 0
  3471                           tblptru	equ	0xFF8
  3472                           tblptrh	equ	0xFF7
  3473                           tblptrl	equ	0xFF6
  3474                           tablat	equ	0xFF5
  3475                           prodh	equ	0xFF4
  3476                           prodl	equ	0xFF3
  3477                           intcon	equ	0xFF2
  3478                           postinc0	equ	0xFEE
  3479                           wreg	equ	0xFE8
  3480                           indf2	equ	0xFDF
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _DATAEE_ReadByte *****************
  3486 ;; Defined at:
  3487 ;;		line 189 in file "mcc_generated_files/memory.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  bAdd            2   18[COMRAM] unsigned int 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      unsigned char 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    2
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_credit_add
  3512 ;;		_credit_subtract
  3513 ;;		_credit_check
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text28
  3518  0016B2                     __ptext28:
  3519                           	opt stack 0
  3520  0016B2                     _DATAEE_ReadByte:
  3521                           	opt stack 26
  3522                           
  3523                           ;memory.c: 191: NVMADRH = ((bAdd >> 8) & 0x03);
  3524                           
  3525                           ;incstack = 0
  3526  0016B2  5014               	movf	DATAEE_ReadByte@bAdd+1,w,c
  3527  0016B4  0B03               	andlw	3
  3528  0016B6  6E7F               	movwf	3967,c	;volatile
  3529                           
  3530                           ;memory.c: 192: NVMADRL = (bAdd & 0xFF);
  3531  0016B8  C013  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  3532                           
  3533                           ;memory.c: 193: NVMCON1bits.NVMREG = 0;
  3534  0016BC  0E3F               	movlw	-193
  3535  0016BE  1681               	andwf	3969,f,c	;volsfr
  3536                           
  3537                           ;memory.c: 194: NVMCON1bits.RD = 1;
  3538  0016C0  8081               	bsf	3969,0,c	;volsfr
  3539                           
  3540                           ;memory.c: 195: __nop();
  3541  0016C2  F000               	nop	
  3542                           
  3543                           ;memory.c: 196: __nop();
  3544  0016C4  F000               	nop	
  3545                           
  3546                           ;memory.c: 198: return (NVMDAT);
  3547  0016C6  5080               	movf	3968,w,c	;volatile
  3548  0016C8  0012               	return	
  3549  0016CA                     __end_of_DATAEE_ReadByte:
  3550                           	opt stack 0
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           prodh	equ	0xFF4
  3556                           prodl	equ	0xFF3
  3557                           intcon	equ	0xFF2
  3558                           postinc0	equ	0xFEE
  3559                           wreg	equ	0xFE8
  3560                           indf2	equ	0xFDF
  3561                           fsr2h	equ	0xFDA
  3562                           fsr2l	equ	0xFD9
  3563                           status	equ	0xFD8
  3564                           
  3565 ;; *************** function _SYSTEM_Initialize *****************
  3566 ;; Defined at:
  3567 ;;		line 115 in file "mcc_generated_files/mcc.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    4
  3588 ;; This function calls:
  3589 ;;		_CMP1_Initialize
  3590 ;;		_EUSART1_Initialize
  3591 ;;		_EUSART2_Initialize
  3592 ;;		_FVR_Initialize
  3593 ;;		_INTERRUPT_Initialize
  3594 ;;		_OSCILLATOR_Initialize
  3595 ;;		_PIN_MANAGER_Initialize
  3596 ;;		_TMR1_Initialize
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text29
  3603  001676                     __ptext29:
  3604                           	opt stack 0
  3605  001676                     _SYSTEM_Initialize:
  3606                           	opt stack 26
  3607                           
  3608                           ;mcc.c: 118: INTERRUPT_Initialize();
  3609                           
  3610                           ;incstack = 0
  3611  001676  ECB2  F00B         	call	_INTERRUPT_Initialize	;wreg free
  3612                           
  3613                           ;mcc.c: 119: PIN_MANAGER_Initialize();
  3614  00167A  EC7E  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  3615                           
  3616                           ;mcc.c: 120: OSCILLATOR_Initialize();
  3617  00167E  EC65  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  3618                           
  3619                           ;mcc.c: 121: FVR_Initialize();
  3620  001682  ECB6  F00B         	call	_FVR_Initialize	;wreg free
  3621                           
  3622                           ;mcc.c: 122: CMP1_Initialize();
  3623  001686  EC93  F00B         	call	_CMP1_Initialize	;wreg free
  3624                           
  3625                           ;mcc.c: 123: TMR1_Initialize();
  3626  00168A  ECA0  F00A         	call	_TMR1_Initialize	;wreg free
  3627                           
  3628                           ;mcc.c: 124: EUSART1_Initialize();
  3629  00168E  EC88  F00B         	call	_EUSART1_Initialize	;wreg free
  3630                           
  3631                           ;mcc.c: 125: EUSART2_Initialize();
  3632  001692  EC71  F00B         	call	_EUSART2_Initialize	;wreg free
  3633  001696  0012               	return		;funcret
  3634  001698                     __end_of_SYSTEM_Initialize:
  3635                           	opt stack 0
  3636                           tblptru	equ	0xFF8
  3637                           tblptrh	equ	0xFF7
  3638                           tblptrl	equ	0xFF6
  3639                           tablat	equ	0xFF5
  3640                           prodh	equ	0xFF4
  3641                           prodl	equ	0xFF3
  3642                           intcon	equ	0xFF2
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           indf2	equ	0xFDF
  3646                           fsr2h	equ	0xFDA
  3647                           fsr2l	equ	0xFD9
  3648                           status	equ	0xFD8
  3649                           
  3650 ;; *************** function _TMR1_Initialize *****************
  3651 ;; Defined at:
  3652 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;		None
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3670 ;;Total ram usage:        2 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    3
  3673 ;; This function calls:
  3674 ;;		_TMR1_StartTimer
  3675 ;; This function is called by:
  3676 ;;		_SYSTEM_Initialize
  3677 ;;		_mdb_poll
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text30
  3682  001540                     __ptext30:
  3683                           	opt stack 0
  3684  001540                     _TMR1_Initialize:
  3685                           	opt stack 24
  3686                           
  3687                           ;tmr1.c: 67: T1CON = 0x00;
  3688                           
  3689                           ;incstack = 0
  3690  001540  0E00               	movlw	0
  3691  001542  6ECF               	movwf	4047,c	;volatile
  3692                           
  3693                           ;tmr1.c: 70: T1GCON = 0x00;
  3694  001544  0E00               	movlw	0
  3695  001546  6ED0               	movwf	4048,c	;volatile
  3696                           
  3697                           ;tmr1.c: 73: T1GATE = 0x00;
  3698  001548  0E00               	movlw	0
  3699  00154A  6ED1               	movwf	4049,c	;volatile
  3700                           
  3701                           ;tmr1.c: 76: T1CLK = 0x05;
  3702  00154C  0E05               	movlw	5
  3703  00154E  6ED2               	movwf	4050,c	;volatile
  3704                           
  3705                           ;tmr1.c: 79: TMR1H = 0xF6;
  3706  001550  0EF6               	movlw	246
  3707  001552  6ECE               	movwf	4046,c	;volatile
  3708                           
  3709                           ;tmr1.c: 82: TMR1L = 0x3C;
  3710  001554  0E3C               	movlw	60
  3711  001556  6ECD               	movwf	4045,c	;volatile
  3712                           
  3713                           ;tmr1.c: 85: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3714  001558  50CD               	movf	4045,w,c	;volatile
  3715  00155A  CFCE F013          	movff	4046,??_TMR1_Initialize	;volatile
  3716  00155E  6A14               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  3717  001560  C013  F014         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  3718  001564  6A13               	clrf	??_TMR1_Initialize,c
  3719  001566  1013               	iorwf	??_TMR1_Initialize,w,c
  3720  001568  6E3F               	movwf	_timer1ReloadVal,c	;volatile
  3721  00156A  5014               	movf	??_TMR1_Initialize+1,w,c
  3722  00156C  6E40               	movwf	_timer1ReloadVal+1,c	;volatile
  3723                           
  3724                           ;tmr1.c: 88: PIR4bits.TMR1IF = 0;
  3725  00156E  010E               	movlb	14	; () banked
  3726  001570  91CE               	bcf	206,0,b	;volatile
  3727                           
  3728                           ; BSR set to: 14
  3729                           ;tmr1.c: 91: TMR1_StartTimer();
  3730  001572  ECCC  F00B         	call	_TMR1_StartTimer	;wreg free
  3731  001576  0012               	return		;funcret
  3732  001578                     __end_of_TMR1_Initialize:
  3733                           	opt stack 0
  3734                           tblptru	equ	0xFF8
  3735                           tblptrh	equ	0xFF7
  3736                           tblptrl	equ	0xFF6
  3737                           tablat	equ	0xFF5
  3738                           prodh	equ	0xFF4
  3739                           prodl	equ	0xFF3
  3740                           intcon	equ	0xFF2
  3741                           postinc0	equ	0xFEE
  3742                           wreg	equ	0xFE8
  3743                           indf2	equ	0xFDF
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _TMR1_StartTimer *****************
  3749 ;; Defined at:
  3750 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		None
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    2
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_TMR1_Initialize
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text31
  3779  001798                     __ptext31:
  3780                           	opt stack 0
  3781  001798                     _TMR1_StartTimer:
  3782                           	opt stack 24
  3783                           
  3784                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3785                           
  3786                           ;incstack = 0
  3787  001798  80CF               	bsf	4047,0,c	;volatile
  3788  00179A  0012               	return		;funcret
  3789  00179C                     __end_of_TMR1_StartTimer:
  3790                           	opt stack 0
  3791                           tblptru	equ	0xFF8
  3792                           tblptrh	equ	0xFF7
  3793                           tblptrl	equ	0xFF6
  3794                           tablat	equ	0xFF5
  3795                           prodh	equ	0xFF4
  3796                           prodl	equ	0xFF3
  3797                           intcon	equ	0xFF2
  3798                           postinc0	equ	0xFEE
  3799                           wreg	equ	0xFE8
  3800                           indf2	equ	0xFDF
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function _PIN_MANAGER_Initialize *****************
  3806 ;; Defined at:
  3807 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  state           1   18[COMRAM] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3825 ;;Total ram usage:        1 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    2
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_SYSTEM_Initialize
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text32
  3836  0010FC                     __ptext32:
  3837                           	opt stack 0
  3838  0010FC                     _PIN_MANAGER_Initialize:
  3839                           	opt stack 27
  3840                           
  3841                           ;pin_manager.c: 57: LATE = 0x00;
  3842                           
  3843                           ;incstack = 0
  3844  0010FC  0E00               	movlw	0
  3845  0010FE  6E87               	movwf	3975,c	;volatile
  3846                           
  3847                           ;pin_manager.c: 58: LATD = 0x00;
  3848  001100  0E00               	movlw	0
  3849  001102  6E86               	movwf	3974,c	;volatile
  3850                           
  3851                           ;pin_manager.c: 59: LATA = 0x00;
  3852  001104  0E00               	movlw	0
  3853  001106  6E83               	movwf	3971,c	;volatile
  3854                           
  3855                           ;pin_manager.c: 60: LATB = 0x00;
  3856  001108  0E00               	movlw	0
  3857  00110A  6E84               	movwf	3972,c	;volatile
  3858                           
  3859                           ;pin_manager.c: 61: LATC = 0x00;
  3860  00110C  0E00               	movlw	0
  3861  00110E  6E85               	movwf	3973,c	;volatile
  3862                           
  3863                           ;pin_manager.c: 66: TRISE = 0x00;
  3864  001110  0E00               	movlw	0
  3865  001112  6E8C               	movwf	3980,c	;volatile
  3866                           
  3867                           ;pin_manager.c: 67: TRISA = 0x1F;
  3868  001114  0E1F               	movlw	31
  3869  001116  6E88               	movwf	3976,c	;volatile
  3870                           
  3871                           ;pin_manager.c: 68: TRISB = 0xD0;
  3872  001118  0ED0               	movlw	208
  3873  00111A  6E89               	movwf	3977,c	;volatile
  3874                           
  3875                           ;pin_manager.c: 69: TRISC = 0x80;
  3876  00111C  0E80               	movlw	128
  3877  00111E  6E8A               	movwf	3978,c	;volatile
  3878                           
  3879                           ;pin_manager.c: 70: TRISD = 0x00;
  3880  001120  0E00               	movlw	0
  3881  001122  6E8B               	movwf	3979,c	;volatile
  3882                           
  3883                           ;pin_manager.c: 75: ANSELC = 0x00;
  3884  001124  0E00               	movlw	0
  3885  001126  010F               	movlb	15	; () banked
  3886  001128  6F21               	movwf	33,b	;volatile
  3887                           
  3888                           ;pin_manager.c: 76: ANSELB = 0xC0;
  3889  00112A  0EC0               	movlw	192
  3890  00112C  6F19               	movwf	25,b	;volatile
  3891                           
  3892                           ;pin_manager.c: 77: ANSELD = 0x00;
  3893  00112E  0E00               	movlw	0
  3894  001130  6F26               	movwf	38,b	;volatile
  3895                           
  3896                           ;pin_manager.c: 78: ANSELE = 0x00;
  3897  001132  0E00               	movlw	0
  3898  001134  6F2E               	movwf	46,b	;volatile
  3899                           
  3900                           ;pin_manager.c: 79: ANSELA = 0x01;
  3901  001136  0E01               	movlw	1
  3902  001138  6F11               	movwf	17,b	;volatile
  3903                           
  3904                           ;pin_manager.c: 84: WPUD = 0x00;
  3905  00113A  0E00               	movlw	0
  3906  00113C  6F25               	movwf	37,b	;volatile
  3907                           
  3908                           ;pin_manager.c: 85: WPUE = 0x00;
  3909  00113E  0E00               	movlw	0
  3910  001140  6F2D               	movwf	45,b	;volatile
  3911                           
  3912                           ;pin_manager.c: 86: WPUB = 0x00;
  3913  001142  0E00               	movlw	0
  3914  001144  6F18               	movwf	24,b	;volatile
  3915                           
  3916                           ;pin_manager.c: 87: WPUA = 0x00;
  3917  001146  0E00               	movlw	0
  3918  001148  6F10               	movwf	16,b	;volatile
  3919                           
  3920                           ;pin_manager.c: 88: WPUC = 0x00;
  3921  00114A  0E00               	movlw	0
  3922  00114C  6F20               	movwf	32,b	;volatile
  3923                           
  3924                           ;pin_manager.c: 93: ODCONE = 0x00;
  3925  00114E  0E00               	movlw	0
  3926  001150  6F2C               	movwf	44,b	;volatile
  3927                           
  3928                           ;pin_manager.c: 94: ODCONA = 0x00;
  3929  001152  0E00               	movlw	0
  3930  001154  6F0F               	movwf	15,b	;volatile
  3931                           
  3932                           ;pin_manager.c: 95: ODCONB = 0x00;
  3933  001156  0E00               	movlw	0
  3934  001158  6F17               	movwf	23,b	;volatile
  3935                           
  3936                           ;pin_manager.c: 96: ODCONC = 0x00;
  3937  00115A  0E00               	movlw	0
  3938  00115C  6F1F               	movwf	31,b	;volatile
  3939                           
  3940                           ;pin_manager.c: 97: ODCOND = 0x00;
  3941  00115E  0E00               	movlw	0
  3942  001160  6F24               	movwf	36,b	;volatile
  3943                           
  3944                           ; BSR set to: 15
  3945                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
  3946  001162  010E               	movlb	14	; () banked
  3947  001164  89C2               	bsf	194,4,b	;volatile
  3948                           
  3949                           ;pin_manager.c: 106: bool state = (unsigned char)GIE;
  3950  001166  0E00               	movlw	0
  3951  001168  BEF2               	btfsc	intcon,7,c	;volatile
  3952  00116A  0E01               	movlw	1
  3953  00116C  6E13               	movwf	PIN_MANAGER_Initialize@state,c
  3954                           
  3955                           ; BSR set to: 14
  3956                           ;pin_manager.c: 107: GIE = 0;
  3957  00116E  9EF2               	bcf	intcon,7,c	;volatile
  3958                           
  3959                           ;pin_manager.c: 108: PPSLOCK = 0x55;
  3960  001170  0E55               	movlw	85
  3961  001172  6FA0               	movwf	160,b	;volsfr
  3962                           
  3963                           ;pin_manager.c: 109: PPSLOCK = 0xAA;
  3964  001174  0EAA               	movlw	170
  3965  001176  6FA0               	movwf	160,b	;volsfr
  3966                           
  3967                           ; BSR set to: 14
  3968                           ;pin_manager.c: 110: PPSLOCKbits.PPSLOCKED = 0x00;
  3969  001178  91A0               	bcf	160,0,b	;volsfr
  3970                           
  3971                           ; BSR set to: 14
  3972                           ;pin_manager.c: 112: RX1PPSbits.RXPPS = 0x17;
  3973  00117A  81B5               	bsf	181,0,b	;volatile
  3974  00117C  83B5               	bsf	181,1,b	;volatile
  3975  00117E  85B5               	bsf	181,2,b	;volatile
  3976  001180  97B5               	bcf	181,3,b	;volatile
  3977  001182  89B5               	bsf	181,4,b	;volatile
  3978                           
  3979                           ;pin_manager.c: 113: RC6PPS = 0x09;
  3980  001184  0E09               	movlw	9
  3981  001186  6FFD               	movwf	253,b	;volatile
  3982                           
  3983                           ;pin_manager.c: 114: RB5PPS = 0x0B;
  3984  001188  0E0B               	movlw	11
  3985  00118A  6FF4               	movwf	244,b	;volatile
  3986                           
  3987                           ; BSR set to: 14
  3988                           ;pin_manager.c: 115: RX2PPSbits.RXPPS = 0x0C;
  3989  00118C  918D               	bcf	141,0,b	;volatile
  3990  00118E  938D               	bcf	141,1,b	;volatile
  3991  001190  858D               	bsf	141,2,b	;volatile
  3992  001192  878D               	bsf	141,3,b	;volatile
  3993  001194  998D               	bcf	141,4,b	;volatile
  3994                           
  3995                           ;pin_manager.c: 117: PPSLOCK = 0x55;
  3996  001196  0E55               	movlw	85
  3997  001198  6FA0               	movwf	160,b	;volsfr
  3998                           
  3999                           ;pin_manager.c: 118: PPSLOCK = 0xAA;
  4000  00119A  0EAA               	movlw	170
  4001  00119C  6FA0               	movwf	160,b	;volsfr
  4002                           
  4003                           ; BSR set to: 14
  4004                           ;pin_manager.c: 119: PPSLOCKbits.PPSLOCKED = 0x01;
  4005  00119E  81A0               	bsf	160,0,b	;volsfr
  4006                           
  4007                           ; BSR set to: 14
  4008                           ;pin_manager.c: 121: GIE = state;
  4009  0011A0  A013               	btfss	PIN_MANAGER_Initialize@state,0,c
  4010  0011A2  D002               	goto	u250
  4011  0011A4  8EF2               	bsf	intcon,7,c	;volatile
  4012  0011A6  0012               	return	
  4013  0011A8                     u250:
  4014  0011A8  9EF2               	bcf	intcon,7,c	;volatile
  4015  0011AA  0012               	return		;funcret
  4016  0011AC                     __end_of_PIN_MANAGER_Initialize:
  4017                           	opt stack 0
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           prodh	equ	0xFF4
  4023                           prodl	equ	0xFF3
  4024                           intcon	equ	0xFF2
  4025                           postinc0	equ	0xFEE
  4026                           wreg	equ	0xFE8
  4027                           indf2	equ	0xFDF
  4028                           fsr2h	equ	0xFDA
  4029                           fsr2l	equ	0xFD9
  4030                           status	equ	0xFD8
  4031                           
  4032 ;; *************** function _OSCILLATOR_Initialize *****************
  4033 ;; Defined at:
  4034 ;;		line 128 in file "mcc_generated_files/mcc.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4052 ;;Total ram usage:        0 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    2
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_SYSTEM_Initialize
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text33
  4063  0016CA                     __ptext33:
  4064                           	opt stack 0
  4065  0016CA                     _OSCILLATOR_Initialize:
  4066                           	opt stack 27
  4067                           
  4068                           ;mcc.c: 131: OSCCON1 = 0x60;
  4069                           
  4070                           ;incstack = 0
  4071  0016CA  0E60               	movlw	96
  4072  0016CC  010E               	movlb	14	; () banked
  4073  0016CE  6FD8               	movwf	216,b	;volatile
  4074                           
  4075                           ;mcc.c: 133: OSCCON3 = 0x00;
  4076  0016D0  0E00               	movlw	0
  4077  0016D2  6FDA               	movwf	218,b	;volatile
  4078                           
  4079                           ;mcc.c: 135: OSCEN = 0x00;
  4080  0016D4  0E00               	movlw	0
  4081  0016D6  6FDC               	movwf	220,b	;volatile
  4082                           
  4083                           ;mcc.c: 137: OSCFRQ = 0x03;
  4084  0016D8  0E03               	movlw	3
  4085  0016DA  6FDE               	movwf	222,b	;volatile
  4086                           
  4087                           ;mcc.c: 139: OSCTUNE = 0x00;
  4088  0016DC  0E00               	movlw	0
  4089  0016DE  6FDD               	movwf	221,b	;volatile
  4090                           
  4091                           ; BSR set to: 14
  4092  0016E0  0012               	return		;funcret
  4093  0016E2                     __end_of_OSCILLATOR_Initialize:
  4094                           	opt stack 0
  4095                           tblptru	equ	0xFF8
  4096                           tblptrh	equ	0xFF7
  4097                           tblptrl	equ	0xFF6
  4098                           tablat	equ	0xFF5
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           intcon	equ	0xFF2
  4102                           postinc0	equ	0xFEE
  4103                           wreg	equ	0xFE8
  4104                           indf2	equ	0xFDF
  4105                           fsr2h	equ	0xFDA
  4106                           fsr2l	equ	0xFD9
  4107                           status	equ	0xFD8
  4108                           
  4109 ;; *************** function _INTERRUPT_Initialize *****************
  4110 ;; Defined at:
  4111 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;		None
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		None
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;Total ram usage:        0 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    2
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_SYSTEM_Initialize
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text34
  4140  001764                     __ptext34:
  4141                           	opt stack 0
  4142  001764                     _INTERRUPT_Initialize:
  4143                           	opt stack 27
  4144                           
  4145                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
  4146                           
  4147                           ; BSR set to: 14
  4148                           ;incstack = 0
  4149  001764  8AF2               	bsf	intcon,5,c	;volatile
  4150                           
  4151                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
  4152  001766  010E               	movlb	14	; () banked
  4153  001768  89BA               	bsf	186,4,b	;volatile
  4154                           
  4155                           ; BSR set to: 14
  4156  00176A  0012               	return		;funcret
  4157  00176C                     __end_of_INTERRUPT_Initialize:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           prodh	equ	0xFF4
  4164                           prodl	equ	0xFF3
  4165                           intcon	equ	0xFF2
  4166                           postinc0	equ	0xFEE
  4167                           wreg	equ	0xFE8
  4168                           indf2	equ	0xFDF
  4169                           fsr2h	equ	0xFDA
  4170                           fsr2l	equ	0xFD9
  4171                           status	equ	0xFD8
  4172                           
  4173 ;; *************** function _FVR_Initialize *****************
  4174 ;; Defined at:
  4175 ;;		line 57 in file "mcc_generated_files/fvr.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;		None
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4193 ;;Total ram usage:        0 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    2
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_SYSTEM_Initialize
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text35
  4204  00176C                     __ptext35:
  4205                           	opt stack 0
  4206  00176C                     _FVR_Initialize:
  4207                           	opt stack 27
  4208                           
  4209                           ;fvr.c: 60: FVRCON = 0x8C;
  4210                           
  4211                           ; BSR set to: 14
  4212                           ;incstack = 0
  4213  00176C  0E8C               	movlw	140
  4214  00176E  010F               	movlb	15	; () banked
  4215  001770  6F31               	movwf	49,b	;volatile
  4216                           
  4217                           ; BSR set to: 15
  4218  001772  0012               	return		;funcret
  4219  001774                     __end_of_FVR_Initialize:
  4220                           	opt stack 0
  4221                           tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           prodh	equ	0xFF4
  4226                           prodl	equ	0xFF3
  4227                           intcon	equ	0xFF2
  4228                           postinc0	equ	0xFEE
  4229                           wreg	equ	0xFE8
  4230                           indf2	equ	0xFDF
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _EUSART2_Initialize *****************
  4236 ;; Defined at:
  4237 ;;		line 55 in file "mcc_generated_files/eusart2.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4255 ;;Total ram usage:        0 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    2
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_SYSTEM_Initialize
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text36
  4266  0016E2                     __ptext36:
  4267                           	opt stack 0
  4268  0016E2                     _EUSART2_Initialize:
  4269                           	opt stack 27
  4270                           
  4271                           ;eusart2.c: 60: BAUD2CON = 0x08;
  4272                           
  4273                           ; BSR set to: 15
  4274                           ;incstack = 0
  4275  0016E2  0E08               	movlw	8
  4276  0016E4  010E               	movlb	14	; () banked
  4277  0016E6  6F9F               	movwf	159,b	;volatile
  4278                           
  4279                           ;eusart2.c: 63: RC2STA = 0x10;
  4280  0016E8  0E10               	movlw	16
  4281  0016EA  6F9D               	movwf	157,b	;volatile
  4282                           
  4283                           ;eusart2.c: 66: TX2STA = 0x04;
  4284  0016EC  0E04               	movlw	4
  4285  0016EE  6F9E               	movwf	158,b	;volatile
  4286                           
  4287                           ;eusart2.c: 69: SP2BRGL = 0xCF;
  4288  0016F0  0ECF               	movlw	207
  4289  0016F2  6F9B               	movwf	155,b	;volatile
  4290                           
  4291                           ;eusart2.c: 72: SP2BRGH = 0x00;
  4292  0016F4  0E00               	movlw	0
  4293  0016F6  6F9C               	movwf	156,b	;volatile
  4294                           
  4295                           ; BSR set to: 14
  4296  0016F8  0012               	return		;funcret
  4297  0016FA                     __end_of_EUSART2_Initialize:
  4298                           	opt stack 0
  4299                           tblptru	equ	0xFF8
  4300                           tblptrh	equ	0xFF7
  4301                           tblptrl	equ	0xFF6
  4302                           tablat	equ	0xFF5
  4303                           prodh	equ	0xFF4
  4304                           prodl	equ	0xFF3
  4305                           intcon	equ	0xFF2
  4306                           postinc0	equ	0xFEE
  4307                           wreg	equ	0xFE8
  4308                           indf2	equ	0xFDF
  4309                           fsr2h	equ	0xFDA
  4310                           fsr2l	equ	0xFD9
  4311                           status	equ	0xFD8
  4312                           
  4313 ;; *************** function _EUSART1_Initialize *****************
  4314 ;; Defined at:
  4315 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4333 ;;Total ram usage:        0 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    2
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_SYSTEM_Initialize
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text37
  4344  001710                     __ptext37:
  4345                           	opt stack 0
  4346  001710                     _EUSART1_Initialize:
  4347                           	opt stack 27
  4348                           
  4349                           ;eusart1.c: 60: BAUD1CON = 0x08;
  4350                           
  4351                           ; BSR set to: 14
  4352                           ;incstack = 0
  4353  001710  0E08               	movlw	8
  4354  001712  6E9F               	movwf	3999,c	;volatile
  4355                           
  4356                           ;eusart1.c: 63: RC1STA = 0xD0;
  4357  001714  0ED0               	movlw	208
  4358  001716  6E9D               	movwf	3997,c	;volatile
  4359                           
  4360                           ;eusart1.c: 66: TX1STA = 0xEC;
  4361  001718  0EEC               	movlw	236
  4362  00171A  6E9E               	movwf	3998,c	;volatile
  4363                           
  4364                           ;eusart1.c: 69: SP1BRGL = 0xCF;
  4365  00171C  0ECF               	movlw	207
  4366  00171E  6E9B               	movwf	3995,c	;volatile
  4367                           
  4368                           ;eusart1.c: 72: SP1BRGH = 0x00;
  4369  001720  0E00               	movlw	0
  4370  001722  6E9C               	movwf	3996,c	;volatile
  4371  001724  0012               	return		;funcret
  4372  001726                     __end_of_EUSART1_Initialize:
  4373                           	opt stack 0
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           postinc0	equ	0xFEE
  4382                           wreg	equ	0xFE8
  4383                           indf2	equ	0xFDF
  4384                           fsr2h	equ	0xFDA
  4385                           fsr2l	equ	0xFD9
  4386                           status	equ	0xFD8
  4387                           
  4388 ;; *************** function _CMP1_Initialize *****************
  4389 ;; Defined at:
  4390 ;;		line 56 in file "mcc_generated_files/cmp1.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;Total ram usage:        0 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    2
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_SYSTEM_Initialize
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text38
  4419  001726                     __ptext38:
  4420                           	opt stack 0
  4421  001726                     _CMP1_Initialize:
  4422                           	opt stack 27
  4423                           
  4424                           ;cmp1.c: 61: CM1CON0 = 0x84;
  4425                           
  4426                           ;incstack = 0
  4427  001726  0E84               	movlw	132
  4428  001728  010F               	movlb	15	; () banked
  4429  00172A  6F39               	movwf	57,b	;volatile
  4430                           
  4431                           ;cmp1.c: 64: CM1CON1 = 0x00;
  4432  00172C  0E00               	movlw	0
  4433  00172E  6F3A               	movwf	58,b	;volatile
  4434                           
  4435                           ;cmp1.c: 67: CM1NCH = 0x00;
  4436  001730  0E00               	movlw	0
  4437  001732  6F3B               	movwf	59,b	;volatile
  4438                           
  4439                           ;cmp1.c: 70: CM1PCH = 0x06;
  4440  001734  0E06               	movlw	6
  4441  001736  6F3C               	movwf	60,b	;volatile
  4442                           
  4443                           ; BSR set to: 15
  4444  001738  0012               	return		;funcret
  4445  00173A                     __end_of_CMP1_Initialize:
  4446                           	opt stack 0
  4447                           tblptru	equ	0xFF8
  4448                           tblptrh	equ	0xFF7
  4449                           tblptrl	equ	0xFF6
  4450                           tablat	equ	0xFF5
  4451                           prodh	equ	0xFF4
  4452                           prodl	equ	0xFF3
  4453                           intcon	equ	0xFF2
  4454                           postinc0	equ	0xFEE
  4455                           wreg	equ	0xFE8
  4456                           indf2	equ	0xFDF
  4457                           fsr2h	equ	0xFDA
  4458                           fsr2l	equ	0xFD9
  4459                           status	equ	0xFD8
  4460                           
  4461 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  4462 ;; Defined at:
  4463 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4480 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4481 ;;Total ram usage:       18 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    1
  4484 ;; This function calls:
  4485 ;;		_PIN_MANAGER_IOC
  4486 ;; This function is called by:
  4487 ;;		Interrupt level 2
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	intcode
  4492  000008                     __pintcode:
  4493                           	opt stack 0
  4494  000008                     _INTERRUPT_InterruptManagerHigh:
  4495                           	opt stack 23
  4496                           
  4497                           ; BSR set to: 15
  4498                           ;incstack = 0
  4499  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4500  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  4501  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  4502  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
  4503  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
  4504  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
  4505  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
  4506  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
  4507  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
  4508  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
  4509  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
  4510  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
  4511  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
  4512  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
  4513  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
  4514  000042  C043  F00F         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
  4515  000046  C044  F010         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
  4516  00004A  C045  F011         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
  4517  00004E  C046  F012         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
  4518                           
  4519                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
  4520  000052  010E               	movlb	14	; () banked
  4521  000054  B9C2               	btfsc	194,4,b	;volatile
  4522                           
  4523                           ; BSR set to: 14
  4524  000056  A9CA               	btfss	202,4,b	;volatile
  4525  000058  D002               	goto	i2l184
  4526                           
  4527                           ; BSR set to: 14
  4528                           ;interrupt_manager.c: 68: {
  4529                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
  4530  00005A  ECC9  F00B         	call	_PIN_MANAGER_IOC	;wreg free
  4531  00005E                     i2l184:
  4532                           
  4533                           ;interrupt_manager.c: 71: else
  4534                           ;interrupt_manager.c: 72: {
  4535  00005E  C012  F046         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
  4536  000062  C011  F045         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
  4537  000066  C010  F044         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
  4538  00006A  C00F  F043         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
  4539  00006E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
  4540  000072  C00D  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
  4541  000076  C00C  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
  4542  00007A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
  4543  00007E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
  4544  000082  C009  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
  4545  000086  C008  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
  4546  00008A  C007  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
  4547  00008E  C006  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
  4548  000092  C005  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
  4549  000096  C004  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
  4550  00009A  C003  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
  4551  00009E  C002  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  4552  0000A2  C001  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  4553  0000A6  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4554  0000A8  0011               	retfie		f
  4555  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
  4556                           	opt stack 0
  4557                           pclatu	equ	0xFFB
  4558                           pclath	equ	0xFFA
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           prodh	equ	0xFF4
  4564                           prodl	equ	0xFF3
  4565                           intcon	equ	0xFF2
  4566                           postinc0	equ	0xFEE
  4567                           fsr0h	equ	0xFEA
  4568                           fsr0l	equ	0xFE9
  4569                           wreg	equ	0xFE8
  4570                           fsr1h	equ	0xFE2
  4571                           fsr1l	equ	0xFE1
  4572                           indf2	equ	0xFDF
  4573                           fsr2h	equ	0xFDA
  4574                           fsr2l	equ	0xFD9
  4575                           status	equ	0xFD8
  4576                           
  4577 ;; *************** function _PIN_MANAGER_IOC *****************
  4578 ;; Defined at:
  4579 ;;		line 124 in file "mcc_generated_files/pin_manager.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		None
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_INTERRUPT_InterruptManagerHigh
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text40
  4607  001792                     __ptext40:
  4608                           	opt stack 0
  4609  001792                     _PIN_MANAGER_IOC:
  4610                           	opt stack 23
  4611                           
  4612                           ;pin_manager.c: 128: PIR0bits.IOCIF = 0;
  4613                           
  4614                           ;incstack = 0
  4615  001792  010E               	movlb	14	; () banked
  4616  001794  99CA               	bcf	202,4,b	;volatile
  4617                           
  4618                           ; BSR set to: 14
  4619  001796  0012               	return		;funcret
  4620  001798                     __end_of_PIN_MANAGER_IOC:
  4621                           	opt stack 0
  4622                           pclatu	equ	0xFFB
  4623                           pclath	equ	0xFFA
  4624                           tblptru	equ	0xFF8
  4625                           tblptrh	equ	0xFF7
  4626                           tblptrl	equ	0xFF6
  4627                           tablat	equ	0xFF5
  4628                           prodh	equ	0xFF4
  4629                           prodl	equ	0xFF3
  4630                           intcon	equ	0xFF2
  4631                           postinc0	equ	0xFEE
  4632                           fsr0h	equ	0xFEA
  4633                           fsr0l	equ	0xFE9
  4634                           wreg	equ	0xFE8
  4635                           fsr1h	equ	0xFE2
  4636                           fsr1l	equ	0xFE1
  4637                           indf2	equ	0xFDF
  4638                           fsr2h	equ	0xFDA
  4639                           fsr2l	equ	0xFD9
  4640                           status	equ	0xFD8
  4641                           pclatu	equ	0xFFB
  4642                           pclath	equ	0xFFA
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           postinc0	equ	0xFEE
  4651                           fsr0h	equ	0xFEA
  4652                           fsr0l	equ	0xFE9
  4653                           wreg	equ	0xFE8
  4654                           fsr1h	equ	0xFE2
  4655                           fsr1l	equ	0xFE1
  4656                           indf2	equ	0xFDF
  4657                           fsr2h	equ	0xFDA
  4658                           fsr2l	equ	0xFD9
  4659                           status	equ	0xFD8
  4660                           
  4661                           	psect	rparam
  4662  0000                     pclatu	equ	0xFFB
  4663                           pclath	equ	0xFFA
  4664                           tblptru	equ	0xFF8
  4665                           tblptrh	equ	0xFF7
  4666                           tblptrl	equ	0xFF6
  4667                           tablat	equ	0xFF5
  4668                           prodh	equ	0xFF4
  4669                           prodl	equ	0xFF3
  4670                           intcon	equ	0xFF2
  4671                           postinc0	equ	0xFEE
  4672                           fsr0h	equ	0xFEA
  4673                           fsr0l	equ	0xFE9
  4674                           wreg	equ	0xFE8
  4675                           fsr1h	equ	0xFE2
  4676                           fsr1l	equ	0xFE1
  4677                           indf2	equ	0xFDF
  4678                           fsr2h	equ	0xFDA
  4679                           fsr2l	equ	0xFD9
  4680                           status	equ	0xFD8
  4681                           
  4682                           	psect	temp
  4683  000043                     btemp:
  4684                           	opt stack 0
  4685  000043                     	ds	1
  4686  0000                     int$flags	set	btemp
  4687  0000                     wtemp6	set	btemp+1
  4688                           pclatu	equ	0xFFB
  4689                           pclath	equ	0xFFA
  4690                           tblptru	equ	0xFF8
  4691                           tblptrh	equ	0xFF7
  4692                           tblptrl	equ	0xFF6
  4693                           tablat	equ	0xFF5
  4694                           prodh	equ	0xFF4
  4695                           prodl	equ	0xFF3
  4696                           intcon	equ	0xFF2
  4697                           postinc0	equ	0xFEE
  4698                           fsr0h	equ	0xFEA
  4699                           fsr0l	equ	0xFE9
  4700                           wreg	equ	0xFE8
  4701                           fsr1h	equ	0xFE2
  4702                           fsr1l	equ	0xFE1
  4703                           indf2	equ	0xFDF
  4704                           fsr2h	equ	0xFDA
  4705                           fsr2l	equ	0xFD9
  4706                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        1
    BSS         50
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      66
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 22
		 -> credits(CODE[13]), inscoin(CODE[22]), 


Critical Paths under _main in COMRAM

    _main->_displ_credit
    _vend_init->_mdb_reset
    _mdb_reset->_mdb_poll
    _mdb_noten->_mdb_poll
    _mdb_poll->_TMR1_Initialize
    _mdb_poll->_init_mdbdata
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_DATAEE_WriteByte
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5468
                  _SYSTEM_Initialize
                         _credit_add
                    _credit_subtract
                       _displ_credit
                           _lcd_init
                         _lcd_string
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0    1587
                       _credit_check
                          _mdb_noten
                          _mdb_reset
 ---------------------------------------------------------------------------------
 (2) _mdb_reset                                            3     3      0     628
                                             23 COMRAM     3     3      0
                           _mdb_poll
 ---------------------------------------------------------------------------------
 (2) _mdb_noten                                            0     0      0     687
                       _init_mdbdata
                           _mdb_poll
 ---------------------------------------------------------------------------------
 (3) _mdb_poll                                             3     2      1     597
                                             20 COMRAM     3     2      1
                       _EUSART1_Read
                      _EUSART1_Write
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                          _mdb_waitr
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (4) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _init_mdbdata                                         2     2      0      90
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     255
                                             25 COMRAM     1     1      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     180
                                             24 COMRAM     1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0    1809
                                             43 COMRAM     1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     2      2     428
                                             24 COMRAM     4     2      2
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _displ_hex                                           15    12      3    1086
                                             28 COMRAM    15    12      3
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _lcd_writeC                                           2     2      0     135
                                             22 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            2     2      0      75
                                             20 COMRAM     2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (4) _read_busy                                            2     2      0      30
                                             18 COMRAM     2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (5) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___ltmod                                              7     1      6     311
                                             18 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) ___ltdiv                                             10     4      6     314
                                             18 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0     272
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _credit_subtract                                      1     1      0     687
                                             22 COMRAM     1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _credit_add                                           1     1      0     687
                                             22 COMRAM     1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     393
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     272
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _CMP1_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (4) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (5) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManagerHigh                      18    18      0       0
                                              0 COMRAM    18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (8) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CMP1_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _credit_subtract
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _vend_init
     _credit_check
       _DATAEE_ReadByte
     _mdb_noten
       _init_mdbdata
       _mdb_poll
         _EUSART1_Read
         _EUSART1_Write
         _TMR1_Initialize
           _TMR1_StartTimer
         _init_mdbdata
         _mdb_on
         _mdb_waitr
         _mdb_waitx
     _mdb_reset
       _mdb_poll
         _EUSART1_Read
         _EUSART1_Write
         _TMR1_Initialize
           _TMR1_StartTimer
         _init_mdbdata
         _mdb_on
         _mdb_waitr
         _mdb_waitx

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      42       1       70.2%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62       6        0.0%
DATA                 0      0      62       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Oct 30 14:25:58 2017

                       lcd_writeC@lcdata 0018                              __CFG_CP$OFF 000000  
                      ??_CMP1_Initialize 0013                            ?_displ_credit 0001  
                 __end_of_FVR_Initialize 1774                          lcd_write@lcdata 0016  
                            __CFG_LVP$ON 000000                                      LATE 000F87  
                                    l111 1748                                      l240 152E  
                                    l611 1602                                      l605 1206  
                                    l445 14D6                                      l606 11BE  
                                    l622 16FE                                      l446 14EA  
                                    l447 14FC                                      l616 1584  
                                    l802 136A                                      l813 0FA4  
                                    l815 0FC8                                      l824 1044  
                                    l816 0FFA                                      l817 0FD0  
                                    l595 10BA                                      l771 1626  
                                    l596 105E                                      l598 10E0  
                                    l599 10C6                                      l797 163C  
                                    _GIE 007F97                                      u250 11A8  
                                    u360 125A                             __CFG_CPD$OFF 000000  
                                    u700 100E                                      u650 0F74  
                                    u715 1018                                      u717 101A  
                                    u750 12CC                                      u815 153C  
                                    u816 153E                                      u680 1004  
                                    u665 0FF2                                      u667 0FF4  
                                    u780 138C                                      u947 124E  
                                    u957 125C                          _timer1ReloadVal 003F  
                                    prod 000FF3                                      wreg 000FE8  
                         ??_credit_check 0015                     lcd_writeC@lcdatasave 0017  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                                   l1234 12C8                                     l1235 12BE  
                                   l2131 174E                                     l1244 1388  
                                   l1245 137E                                     l1238 12F2  
                                   l1239 12FE                                     l1248 13A8  
                                   l1249 13B4                                     l2145 1634  
                                   l1851 123A                                     _LATA 000F83  
                                   _LATB 000F84                                     _LATC 000F85  
                                   _LATD 000F86                                     _LATE 000F87  
                                   _WPUA 000F10                                     _WPUB 000F18  
                                   _WPUC 000F20                                     _WPUD 000F25  
                                   _WPUE 000F2D                            _EUSART1_Write 174C  
                          __CFG_FCMEN$ON 000000                                     _cash 0035  
                                   _main 14CA                            ?_EUSART1_Read 0001  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 0043  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 00AA                            __CFG_CSWEN$ON 000000  
                           ___param_bank 000000                            __CFG_SCANE$ON 000000  
                         ??_displ_credit 002C                __size_of_DATAEE_WriteByte 003A  
                        ?_FVR_Initialize 0001           __size_of_OSCILLATOR_Initialize 0018  
          __end_of_OSCILLATOR_Initialize 16E2                                    ?_main 0001  
                          __CFG_WDTE$OFF 000000                          _TMR1_StartTimer 1798  
                                  _T1CLK 000FD2                                    _T1CON 000FCF  
                        __end_of___ltdiv 130C                           __CFG_DEBUG$OFF 000000  
                        __end_of___ltmod 13C2                                    i2l184 005E  
                                  _OSCEN 000EDC                                    _TMR1H 000FCE  
                                  _TMR1L 000FCD                                    _PORTD 000F90  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                          __end_of_cashint 0F09  
                        __end_of_cashinv 0F0B                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                           __CFG_EBTR0$OFF 000000  
                      lcd_write@savelatd 0015                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                         __CFG_EBTR4$OFF 000000                          __end_of_credmem 0F0D  
                         __CFG_EBTR5$OFF 000000                          __end_of_credits 0F51  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                        __end_of_dispclr 0F2B                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                          __end_of_dispoff 0F24  
                          __CFG_WRTD$OFF 000000                                    _bflag 003A  
                        _DATAEE_ReadByte 16B2                           __CFG_EBTRB$OFF 000000  
                __end_of_PIN_MANAGER_IOC 1798                          __end_of_dsphome 0F29  
                                  _count 0041                          __end_of_inscoin 0F44  
                     __CFG_MCLRE$EXTMCLR 000000                           ?_EUSART1_Write 0001  
                __end_of_TMR1_Initialize 1578                                    pclath 000FFA  
                                  tablat 000FF5                           ??_EUSART1_Read 0013  
                                  status 000FD8                                    wtemp6 0044  
                        __initialization 148E               __end_of_EUSART1_Initialize 1726  
                           __end_of_main 1506                                   ??_main 002D  
                          __activetblptr 000001               __end_of_EUSART2_Initialize 16FA  
                                 _CM1NCH 000F3B                                   _CM1PCH 000F3C  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                                   _T1GATE 000FD1  
                                 _T1GCON 000FD0                                   _RC1REG 000F99  
                                 _RC2REG 000E99                                   _RC1STA 000F9D  
                                 _RC2STA 000E9D                                   _RB5PPS 000EF4  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _RC6PPS 000EFD  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
               __size_of_credit_subtract 0046                         credit_add@credit 0017  
                         __CFG_WDTCCS$SC 000000                                   _TABLAT 000FF5  
                                 _FVRCON 000F31                            ?_init_mdbdata 0001  
                                 _OSCFRQ 000EDE                                   _NVMDAT 000F80  
                                 _TX1REG 000F9A                                   _TX2REG 000E9A  
                                 _TX1STA 000F9E                                   _TX2STA 000E9E  
                         __CFG_PWRTE$OFF 000000                           __CFG_XINST$OFF 000000  
                       __end_of_dispaddr 0F2A                         __end_of_lcd_init 12A2  
                       __end_of_lcd_test 1710                         __end_of_mdb_poll 104C  
                   __end_of_credit_check 16B2                  __end_of_TMR1_StartTimer 179C  
                         __CFG_STVREN$ON 000000                                ??___ltdiv 0019  
                        mdb_reset@i_1457 0019                                ??___ltmod 0019  
                                 _credit 0036                                   _lcdata 0038  
                                 _dispon 0F2B                                   _mdb_on 1780  
                                 _dispsl 0F21                                   _dispsr 0F22  
                                 _hexnum 002D                                   _mcount 0033  
                                 clear_0 14A6                                   clear_1 14B2  
                                 _noteen 003C                                   _slvadd 0034  
                                 _stradd 0037                        read_busy@savelatd 0014  
                      read_busy@savelate 0013                  __end_of_DATAEE_ReadByte 16CA  
                           __pdataCOMRAM 0042                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                          ??_EUSART1_Write 0013  
                       ?_PIN_MANAGER_IOC 0001            __size_of_INTERRUPT_Initialize 0008  
                         ??_init_mdbdata 0013                     __end_of_displ_credit 1676  
                       ?_TMR1_Initialize 0001         ??_INTERRUPT_InterruptManagerHigh 0001  
        ?_INTERRUPT_InterruptManagerHigh 0001                        _SYSTEM_Initialize 1676  
                             __accesstop 0060                  __end_of__initialization 14B8  
                  __end_of_note_features 0F1A                          _CMP1_Initialize 1726  
                     ?_SYSTEM_Initialize 0001                    __end_of_theft_attempt 0F0E  
                          ___rparam_used 000001                           __pcstackCOMRAM 0001  
                    ??_SYSTEM_Initialize 0015                         _DATAEE_WriteByte 1506  
                  __end_of_note_rejected 0F0F                    __end_of_note_security 0F1F  
                   __end_of_EUSART1_Read 174C                       __size_of_displ_hex 00B0  
                     __size_of_lcd_write 0032                __end_of_SYSTEM_Initialize 1698  
                     __size_of_mdb_reset 0062                       __size_of_mdb_noten 0030  
                     __size_of_mdb_waitr 0006                       __size_of_mdb_waitx 0006  
                             __pbssBANK0 0060                      displ_hex@hexnumsave 0028  
                             __pnvCOMRAM 003F                       __size_of_read_busy 0042  
                      ??_credit_subtract 0017                         ??_FVR_Initialize 0013  
                       ?_TMR1_StartTimer 0001                          __CFG_PPS1WAY$ON 000000  
                                ?_mdb_on 0001                                  _CM1CON0 000F39  
                                _CM1CON1 000F3A                         ?_DATAEE_ReadByte 0013  
                     __size_of_vend_init 0028                               _credit_add 1408  
                             _lcd_clockE 175A                               _lcd_clockH 178C  
                             _lcd_clockL 1786                                  _SP1BRGH 000F9C  
                                _SP1BRGL 000F9B                                  _SP2BRGH 000E9C  
                                _SP2BRGL 000E9B                                  _OSCCON1 000ED8  
                                _OSCCON3 000EDA                                  _TBLPTRH 000FF7  
                                _TBLPTRL 000FF6                                  _TBLPTRU 000FF8  
                                _NVMADRH 000F7F                                  _NVMADRL 000F7E  
                             _jammed_err 0F14                                  _OSCTUNE 000EDD  
                                _NVMCON2 000F82                                  _PPSLOCK 000EA0  
                __end_of_CMP1_Initialize 173A                               _lcd_string 11AC  
                             _dispcursor 0F26                               _lcd_writeC 15DA  
                              ?_lcd_init 0001                                ?_lcd_test 0001  
                             _dispshleft 0F24                               _dispnormal 0F27  
                              ?_mdb_poll 0015                     DATAEE_WriteByte@bAdd 0013  
                         displ_hex@value 0020                    __size_of_credit_check 001A  
                                __Hparam 0000                                  __Lparam 0000  
             __CFG_RSTOSC$HFINTOSC_64MHZ 000000                        __end_of_displ_hex 10FC  
                      __end_of_dispfunc1 0F2E                        __end_of_dispfunc2 0F2D  
                      __end_of_lcd_write 15AA                                  ___ltdiv 12A2  
                      __end_of_mdb_reset 136E                        __end_of_mdb_noten 15DA  
                                ___ltmod 136E                        __end_of_mdb_waitr 1780  
                      __end_of_mdb_waitx 177A                             __psmallconst 0F00  
                        __size_of_mdb_on 0006                                  _dbcount 0030  
                                __pcinit 148E                                  _cashint 0F07  
                   __end_of_init_mdbdata 1654                                  _cashinv 0F09  
                                __ramtop 0F00                                  _chkbyte 0032  
                             _errorflags 003B                                  __ptext0 14CA  
                                __ptext1 1606                                  __ptext2 130C  
                                __ptext3 15AA                                  __ptext4 0F52  
                                __ptext5 1774                                  __ptext6 177A  
                                __ptext7 1780                                  __ptext8 162E  
                                __ptext9 174C                                  _credmem 0F0B  
                                _credits 0F44                                  _dispclr 0F2A  
                                _dispoff 0F23                                  _mdbdata 0060  
                                _lcdfunc 0039                                _T1CONbits 000FCF  
                                _dsphome 0F28                    _OSCILLATOR_Initialize 16CA  
                                _inscoin 0F2E                                _CMOUTbits 000F3D  
                      __end_of_read_busy 148E                       _EUSART1_Initialize 1710  
               ??_PIN_MANAGER_Initialize 0013                    __size_of_displ_credit 0022  
             __size_of_SYSTEM_Initialize 0022                             _credit_check 1698  
                             ??_lcd_init 001A                               ??_lcd_test 0019  
                   end_of_initialization 14B8                               ??_mdb_poll 0016  
                    ?_EUSART1_Initialize 0001                        __end_of_note_poll 0F1E  
                      __end_of_note_type 0F1D                        __end_of_just_busy 0F17  
                      __end_of_vend_init 162E                         ___ltdiv@dividend 0013  
                      __end_of_rom_error 0F16                       _EUSART2_Initialize 16E2  
                      __end_of_vendstore 0F07                               _note_reset 0F20  
                             _sens_error 0F17                               _note_setup 0F1F  
                                postinc0 000FEE                    __size_of_EUSART1_Read 0012  
                             _motr_error 0F18                               _just_reset 0F13  
                   ??_EUSART1_Initialize 0013                               _pricestore 0F03  
                  __CFG_WDTCPS$WDTCPS_31 000000                      ?_EUSART2_Initialize 0001  
                           _displ_credit 1654                               _venderrors 0F01  
                            ?_credit_add 0001                              ?_lcd_clockE 0001  
                            ?_lcd_clockH 0001                              ?_lcd_clockL 0001  
                       ___ltdiv@quotient 0019                              ?_lcd_string 0019  
                            ?_lcd_writeC 0001                      EUSART1_Write@txData 0013  
                       ?_CMP1_Initialize 0001                         __CFG_FEXTOSC$OFF 000000  
               __end_of_DATAEE_WriteByte 1540                     ??_EUSART2_Initialize 0013  
                           _EUSART1_Read 173A                      __end_of_cashbox_err 0F12  
                             displ_hex@i 002B                               mdb_reset@i 001A  
           __end_of_INTERRUPT_Initialize 176C                            __pidataCOMRAM 179C  
                         __end_of_dispon 0F2C                           __end_of_mdb_on 1786  
                         __end_of_dispsl 0F22                           __end_of_dispsr 0F23  
                       displ_credit@cash 002C                   ?_OSCILLATOR_Initialize 0001  
                    start_initialization 148E          __size_of_PIN_MANAGER_Initialize 00B0  
                        _credit_subtract 13C2                    __end_of_EUSART1_Write 175A  
                    DATAEE_ReadByte@bAdd 0013                 __size_of_PIN_MANAGER_IOC 0006  
                    __size_of_credit_add 0044                         __CFG_LPBOREN$OFF 000000  
                    __size_of_lcd_clockE 000A                      __size_of_lcd_clockH 0006  
                    __size_of_lcd_clockL 0006                 __size_of_TMR1_Initialize 0038  
                  __size_of_init_mdbdata 0026                                 ??_mdb_on 0013  
                    __size_of_lcd_string 0082                      __size_of_lcd_writeC 002C  
                         mdb_poll@mcount 0015                           mdb_poll@slvadd 0016  
                            __pbssCOMRAM 002D                      __end_of_dispshright 0F26  
                            _cashbox_err 0F11                     __end_of_note_removed 0F13  
                  credit_subtract@credit 0017                     __end_of_note_stacker 0F1B  
                   init_mdbdata@initdata 0013                             _init_mdbdata 162E  
                      __size_of_lcd_init 0074                        __size_of_lcd_test 0016  
                      __size_of_mdb_poll 00FA                   _PIN_MANAGER_Initialize 10FC  
                              __pintcode 0008                                 ?___ltdiv 0013  
                               ?___ltmod 0013                                _displ_hex 104C  
                              _dispfunc1 0F2D                                _dispfunc2 0F2C  
                              _lcd_write 1578                                _mdb_reset 130C  
                              _mdb_noten 15AA                                _mdb_waitr 177A  
                              _mdb_waitx 1774                                 _BAUD1CON 000F9F  
                               _BAUD2CON 000E9F                              __smallconst 0F00  
                __end_of_credit_subtract 1408                 __size_of_TMR1_StartTimer 0004  
                         _acept_disabled 0F10                 __size_of_DATAEE_ReadByte 0018  
                              _read_busy 144C                     _INTERRUPT_Initialize 1764  
                       ___ltmod@dividend 0013                                 _LATCbits 000F85  
                               _IPR0bits 000EBA                                 _PIE0bits 000EC2  
                          _note_features 0F19                      __CFG_BORV$VBOR_2P45 000000  
                          _theft_attempt 0F0D                                 _PIR0bits 000ECA  
                        ___ltdiv@divisor 0016                                 _PIR3bits 000ECD  
                               _PIR4bits 000ECE                                 _PIR7bits 000ED1  
                        ___ltdiv@counter 001C                                _note_poll 0F1D  
                              _note_type 0F1C                                _just_busy 0F16  
                              _vend_init 1606                                _rom_error 0F15  
                      ??_PIN_MANAGER_IOC 0001                                _vendstore 0F05  
                          _note_rejected 0F0E                        ??_TMR1_Initialize 0013  
                             ?_displ_hex 001D                               ?_lcd_write 0001  
                          _note_security 0F1E                               ?_mdb_reset 0001  
                             ?_mdb_noten 0001                              _dispshright 0F25  
                             ?_mdb_waitr 0001                               ?_mdb_waitx 0001  
                __size_of_FVR_Initialize 0008                             ??_credit_add 0017  
                           ??_lcd_clockE 0013                             ??_lcd_clockH 0013  
                           ??_lcd_clockL 0013                   __end_of_acept_disabled 0F11  
                  DATAEE_WriteByte@bData 0015                                mdb_poll@i 0017  
                        displ_hex@hexnum 001D                             ??_lcd_string 001B  
                           ??_lcd_writeC 0017                               ?_read_busy 0001  
                  ?_INTERRUPT_Initialize 0001                        ?_DATAEE_WriteByte 0013  
                     ??_DATAEE_WriteByte 0016                      lcd_string@lcdstring 0019  
                               __Hrparam 0000                                 __Lrparam 0000  
                     __end_of_credit_add 144C                             __Lsmallconst 0F00  
                     __CFG_BOREN$SBORDIS 000000                       __end_of_lcd_clockE 1764  
                     __end_of_lcd_clockH 1792                       __end_of_lcd_clockL 178C  
                             ?_vend_init 0001                  ??_OSCILLATOR_Initialize 0013  
                     __end_of_jammed_err 0F15              __size_of_EUSART1_Initialize 0016  
                       __size_of___ltdiv 006A                         __size_of___ltmod 0054  
                     __end_of_lcd_string 122E                       __end_of_dispcursor 0F27  
                     __end_of_lcd_writeC 1606                           _invalid_escrow 0F0F  
                    __end_of_note_escrow 0F1C                       __end_of_dispshleft 0F25  
                     __end_of_dispnormal 0F28                         ?_credit_subtract 0001  
                               __ptext10 173A                                 __ptext11 122E  
                               __ptext20 178C                                 __ptext12 16FA  
                               __ptext21 175A                                 __ptext13 1654  
                             _T1GCONbits 000FD0                                 __ptext30 1540  
                               __ptext22 136E                                 __ptext14 11AC  
                               __ptext31 1798                                 __ptext23 12A2  
                               __ptext15 104C                                 __ptext40 1792  
                               __ptext32 10FC                                 __ptext24 1698  
                               __ptext16 15DA                                 __ptext33 16CA  
                               __ptext25 13C2                                 __ptext17 1578  
                               __ptext34 1764                                 __ptext26 1408  
                               __ptext18 144C                                 __ptext35 176C  
                               __ptext27 1506                                 __ptext19 1786  
                               __ptext36 16E2                                 __ptext28 16B2  
                               __ptext37 1710                                 __ptext29 1676  
                               __ptext38 1726                                 _dispaddr 0F29  
                               _lcd_init 122E                                 _lcd_test 16FA  
                      ??_TMR1_StartTimer 0013                                 _mdb_poll 0F52  
                               _mdbflags 003D              DATAEE_WriteByte@GIEBitValue 0016  
            __size_of_EUSART2_Initialize 0018                            __size_of_main 003C  
                        ___ltmod@divisor 0016                        ??_DATAEE_ReadByte 0015  
                   __CFG_WDTCWS$WDTCWS_7 000000                 __size_of_CMP1_Initialize 0014  
                        ___ltmod@counter 0019                               _RC1STAbits 000F9D  
                             _RC2STAbits 000E9D                                 _venflags 003E  
                          init_mdbdata@i 0014                                 int$flags 0043  
                 __end_of_invalid_escrow 0F10                             _note_removed 0F12  
                           _note_stacker 0F1A                              ??_displ_hex 0020  
            PIN_MANAGER_Initialize@state 0013                              ??_lcd_write 0015  
                            ??_mdb_reset 0018                              ??_mdb_noten 0018  
                            ??_mdb_waitr 0013                              ??_mdb_waitx 0013  
                             _INTCONbits 000FF2                              _NVMCON1bits 000F81  
                             _FVRCONbits 000F31                   ??_INTERRUPT_Initialize 0013  
                            ??_read_busy 0013                       __end_of_note_reset 0F21  
                     __end_of_sens_error 0F18                       __end_of_note_setup 0F20  
                               intlevel2 0000                       __end_of_motr_error 0F19  
                     __end_of_just_reset 0F14                  ?_PIN_MANAGER_Initialize 0001  
                     __end_of_pricestore 0F05                        __CFG_CLKOUTEN$OFF 000000  
                            _PPSLOCKbits 000EA0                       __end_of_venderrors 0F03  
                            _note_escrow 0F1B                              ??_vend_init 001B  
                            _noteen_byte 0042                   __size_of_EUSART1_Write 000E  
 __end_of_INTERRUPT_InterruptManagerHigh 00AA  __size_of_INTERRUPT_InterruptManagerHigh 00A2  
         _INTERRUPT_InterruptManagerHigh 0008                               _RX1PPSbits 000EB5  
                         _FVR_Initialize 176C                               _RX2PPSbits 000E8D  
                      lcd_test@character 0019                            ?_credit_check 0001  
                             _TX1STAbits 000F9E           __end_of_PIN_MANAGER_Initialize 11AC  
                        _PIN_MANAGER_IOC 1792                          _TMR1_Initialize 1540  
