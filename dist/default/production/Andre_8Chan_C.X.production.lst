

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Sep 29 13:06:27 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataCOMRAMh,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	text117,global,reloc=2,class=CODE,delta=1
   136                           	psect	text118,global,reloc=2,class=CODE,delta=1
   137                           	psect	text119,global,reloc=2,class=CODE,delta=1
   138                           	psect	text120,global,reloc=2,class=CODE,delta=1
   139                           	psect	text121,global,reloc=2,class=CODE,delta=1
   140                           	psect	text122,global,reloc=2,class=CODE,delta=1
   141                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   142                           	psect	text124,global,reloc=2,class=CODE,delta=1
   143                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   144                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   145                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   146                           	dabs	1,0x3,1,_chanlink1
   147                           	dabs	1,0xA,1,_chanlink8
   148                           	dabs	1,0x9,1,_chanlink7
   149                           	dabs	1,0x8,1,_chanlink6
   150                           	dabs	1,0x7,1,_chanlink5
   151                           	dabs	1,0x6,1,_chanlink4
   152                           	dabs	1,0x5,1,_chanlink3
   153                           	dabs	1,0x4,1,_chanlink2
   154  0000                     
   155                           ; Version 1.45
   156                           ; Generated 16/11/2017 GMT
   157                           ; 
   158                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   159                           ; All rights reserved.
   160                           ; 
   161                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   162                           ; 
   163                           ; Redistribution and use in source and binary forms, with or without modification, are
   164                           ; permitted provided that the following conditions are met:
   165                           ; 
   166                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   167                           ;        conditions and the following disclaimer.
   168                           ; 
   169                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   170                           ;        of conditions and the following disclaimer in the documentation and/or other
   171                           ;        materials provided with the distribution.
   172                           ; 
   173                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   174                           ;        software without specific prior written permission.
   175                           ; 
   176                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   177                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   178                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   179                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   180                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   181                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   182                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   183                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   184                           ; 
   185                           ; 
   186                           ; Code-generator required, PIC18F47K40 Definitions
   187                           ; 
   188                           ; SFR Addresses
   189  0000                     
   190                           	psect	idataBANK0
   191  012CAA                     __pidataBANK0:
   192                           	opt stack 0
   193                           
   194                           ;initializer for _hopercount
   195  012CAA  03                 	db	3
   196                           
   197                           	psect	idataCOMRAMh
   198  012CAB                     __pidataCOMRAMh:
   199                           	opt stack 0
   200                           
   201                           ;initializer for _notenum
   202  012CAB  FF                 	db	255
   203                           
   204                           	psect	mediumconst
   205  00FA74                     __pmediumconst:
   206                           	opt stack 0
   207  00FA74  00                 	db	0
   208  00FA75                     _chanlinkmsg:
   209                           	opt stack 0
   210  00FA75  50                 	db	80
   211  00FA76  75                 	db	117
   212  00FA77  73                 	db	115
   213  00FA78  68                 	db	104
   214  00FA79  20                 	db	32
   215  00FA7A  42                 	db	66
   216  00FA7B  75                 	db	117
   217  00FA7C  74                 	db	116
   218  00FA7D  74                 	db	116
   219  00FA7E  6F                 	db	111
   220  00FA7F  6E                 	db	110
   221  00FA80  20                 	db	32
   222  00FA81  74                 	db	116
   223  00FA82  6F                 	db	111
   224  00FA83  20                 	db	32
   225  00FA84  4C                 	db	76
   226  00FA85  69                 	db	105
   227  00FA86  6E                 	db	110
   228  00FA87  6B                 	db	107
   229  00FA88  20                 	db	32
   230  00FA89  50                 	db	80
   231  00FA8A  75                 	db	117
   232  00FA8B  73                 	db	115
   233  00FA8C  68                 	db	104
   234  00FA8D  20                 	db	32
   235  00FA8E  61                 	db	97
   236  00FA8F  67                 	db	103
   237  00FA90  61                 	db	97
   238  00FA91  69                 	db	105
   239  00FA92  6E                 	db	110
   240  00FA93  20                 	db	32
   241  00FA94  74                 	db	116
   242  00FA95  6F                 	db	111
   243  00FA96  20                 	db	32
   244  00FA97  55                 	db	85
   245  00FA98  6E                 	db	110
   246  00FA99  6C                 	db	108
   247  00FA9A  69                 	db	105
   248  00FA9B  6E                 	db	110
   249  00FA9C  6B                 	db	107
   250  00FA9D  50                 	db	80
   251  00FA9E  75                 	db	117
   252  00FA9F  73                 	db	115
   253  00FAA0  68                 	db	104
   254  00FAA1  20                 	db	32
   255  00FAA2  53                 	db	83
   256  00FAA3  65                 	db	101
   257  00FAA4  72                 	db	114
   258  00FAA5  76                 	db	118
   259  00FAA6  69                 	db	105
   260  00FAA7  63                 	db	99
   261  00FAA8  65                 	db	101
   262  00FAA9  20                 	db	32
   263  00FAAA  74                 	db	116
   264  00FAAB  6F                 	db	111
   265  00FAAC  20                 	db	32
   266  00FAAD  45                 	db	69
   267  00FAAE  78                 	db	120
   268  00FAAF  69                 	db	105
   269  00FAB0  74                 	db	116
   270  00FAB1  00                 	db	0
   271  00FAB2                     __end_of_chanlinkmsg:
   272                           	opt stack 0
   273  00FAB2                     _motimemsg:
   274                           	opt stack 0
   275  00FAB2  20                 	db	32
   276  00FAB3  50                 	db	80
   277  00FAB4  72                 	db	114
   278  00FAB5  65                 	db	101
   279  00FAB6  73                 	db	115
   280  00FAB7  73                 	db	115
   281  00FAB8  20                 	db	32
   282  00FAB9  43                 	db	67
   283  00FABA  68                 	db	104
   284  00FABB  61                 	db	97
   285  00FABC  6E                 	db	110
   286  00FABD  6E                 	db	110
   287  00FABE  65                 	db	101
   288  00FABF  6C                 	db	108
   289  00FAC0  20                 	db	32
   290  00FAC1  56                 	db	86
   291  00FAC2  65                 	db	101
   292  00FAC3  6E                 	db	110
   293  00FAC4  64                 	db	100
   294  00FAC5  20                 	db	32
   295  00FAC6  42                 	db	66
   296  00FAC7  75                 	db	117
   297  00FAC8  74                 	db	116
   298  00FAC9  74                 	db	116
   299  00FACA  6F                 	db	111
   300  00FACB  6E                 	db	110
   301  00FACC  20                 	db	32
   302  00FACD  6F                 	db	111
   303  00FACE  72                 	db	114
   304  00FACF  20                 	db	32
   305  00FAD0  50                 	db	80
   306  00FAD1  72                 	db	114
   307  00FAD2  65                 	db	101
   308  00FAD3  73                 	db	115
   309  00FAD4  73                 	db	115
   310  00FAD5  20                 	db	32
   311  00FAD6  20                 	db	32
   312  00FAD7  20                 	db	32
   313  00FAD8  20                 	db	32
   314  00FAD9  20                 	db	32
   315  00FADA  20                 	db	32
   316  00FADB  20                 	db	32
   317  00FADC  53                 	db	83
   318  00FADD  65                 	db	101
   319  00FADE  72                 	db	114
   320  00FADF  76                 	db	118
   321  00FAE0  69                 	db	105
   322  00FAE1  63                 	db	99
   323  00FAE2  65                 	db	101
   324  00FAE3  20                 	db	32
   325  00FAE4  74                 	db	116
   326  00FAE5  6F                 	db	111
   327  00FAE6  20                 	db	32
   328  00FAE7  45                 	db	69
   329  00FAE8  78                 	db	120
   330  00FAE9  69                 	db	105
   331  00FAEA  74                 	db	116
   332  00FAEB  00                 	db	0
   333  00FAEC                     __end_of_motimemsg:
   334                           	opt stack 0
   335  00FAEC                     _sensoffms:
   336                           	opt stack 0
   337  00FAEC  48                 	db	72
   338  00FAED  6F                 	db	111
   339  00FAEE  6C                 	db	108
   340  00FAEF  64                 	db	100
   341  00FAF0  20                 	db	32
   342  00FAF1  63                 	db	99
   343  00FAF2  68                 	db	104
   344  00FAF3  61                 	db	97
   345  00FAF4  6E                 	db	110
   346  00FAF5  6E                 	db	110
   347  00FAF6  65                 	db	101
   348  00FAF7  6C                 	db	108
   349  00FAF8  20                 	db	32
   350  00FAF9  62                 	db	98
   351  00FAFA  75                 	db	117
   352  00FAFB  74                 	db	116
   353  00FAFC  74                 	db	116
   354  00FAFD  6F                 	db	111
   355  00FAFE  6E                 	db	110
   356  00FAFF  20                 	db	32
   357  00FB00  6F                 	db	111
   358  00FB01  72                 	db	114
   359  00FB02  20                 	db	32
   360  00FB03  50                 	db	80
   361  00FB04  75                 	db	117
   362  00FB05  73                 	db	115
   363  00FB06  68                 	db	104
   364  00FB07  20                 	db	32
   365  00FB08  73                 	db	115
   366  00FB09  65                 	db	101
   367  00FB0A  72                 	db	114
   368  00FB0B  76                 	db	118
   369  00FB0C  69                 	db	105
   370  00FB0D  63                 	db	99
   371  00FB0E  65                 	db	101
   372  00FB0F  20                 	db	32
   373  00FB10  74                 	db	116
   374  00FB11  6F                 	db	111
   375  00FB12  20                 	db	32
   376  00FB13  20                 	db	32
   377  00FB14  65                 	db	101
   378  00FB15  78                 	db	120
   379  00FB16  69                 	db	105
   380  00FB17  74                 	db	116
   381  00FB18  00                 	db	0
   382  00FB19                     __end_of_sensoffms:
   383                           	opt stack 0
   384  00FB19                     _credclr:
   385                           	opt stack 0
   386  00FB19  50                 	db	80
   387  00FB1A  75                 	db	117
   388  00FB1B  73                 	db	115
   389  00FB1C  68                 	db	104
   390  00FB1D  20                 	db	32
   391  00FB1E  62                 	db	98
   392  00FB1F  75                 	db	117
   393  00FB20  74                 	db	116
   394  00FB21  74                 	db	116
   395  00FB22  6F                 	db	111
   396  00FB23  6E                 	db	110
   397  00FB24  20                 	db	32
   398  00FB25  31                 	db	49
   399  00FB26  20                 	db	32
   400  00FB27  74                 	db	116
   401  00FB28  6F                 	db	111
   402  00FB29  20                 	db	32
   403  00FB2A  63                 	db	99
   404  00FB2B  6C                 	db	108
   405  00FB2C  65                 	db	101
   406  00FB2D  61                 	db	97
   407  00FB2E  72                 	db	114
   408  00FB2F  20                 	db	32
   409  00FB30  63                 	db	99
   410  00FB31  72                 	db	114
   411  00FB32  65                 	db	101
   412  00FB33  64                 	db	100
   413  00FB34  69                 	db	105
   414  00FB35  74                 	db	116
   415  00FB36  73                 	db	115
   416  00FB37  20                 	db	32
   417  00FB38  20                 	db	32
   418  00FB39  20                 	db	32
   419  00FB3A  61                 	db	97
   420  00FB3B  6E                 	db	110
   421  00FB3C  64                 	db	100
   422  00FB3D  20                 	db	32
   423  00FB3E  65                 	db	101
   424  00FB3F  78                 	db	120
   425  00FB40  69                 	db	105
   426  00FB41  74                 	db	116
   427  00FB42  00                 	db	0
   428  00FB43                     __end_of_credclr:
   429                           	opt stack 0
   430  00FB43                     _settimemsg:
   431                           	opt stack 0
   432  00FB43  50                 	db	80
   433  00FB44  72                 	db	114
   434  00FB45  65                 	db	101
   435  00FB46  73                 	db	115
   436  00FB47  73                 	db	115
   437  00FB48  20                 	db	32
   438  00FB49  31                 	db	49
   439  00FB4A  20                 	db	32
   440  00FB4B  3D                 	db	61
   441  00FB4C  20                 	db	32
   442  00FB4D  2B                 	db	43
   443  00FB4E  20                 	db	32
   444  00FB4F  6F                 	db	111
   445  00FB50  72                 	db	114
   446  00FB51  20                 	db	32
   447  00FB52  32                 	db	50
   448  00FB53  20                 	db	32
   449  00FB54  3D                 	db	61
   450  00FB55  20                 	db	32
   451  00FB56  2D                 	db	45
   452  00FB57  20                 	db	32
   453  00FB58  20                 	db	32
   454  00FB59  50                 	db	80
   455  00FB5A  72                 	db	114
   456  00FB5B  65                 	db	101
   457  00FB5C  73                 	db	115
   458  00FB5D  73                 	db	115
   459  00FB5E  20                 	db	32
   460  00FB5F  38                 	db	56
   461  00FB60  20                 	db	32
   462  00FB61  74                 	db	116
   463  00FB62  6F                 	db	111
   464  00FB63  20                 	db	32
   465  00FB64  45                 	db	69
   466  00FB65  78                 	db	120
   467  00FB66  69                 	db	105
   468  00FB67  74                 	db	116
   469  00FB68  00                 	db	0
   470  00FB69                     __end_of_settimemsg:
   471                           	opt stack 0
   472  00FB69                     _vendtest:
   473                           	opt stack 0
   474  00FB69  20                 	db	32
   475  00FB6A  50                 	db	80
   476  00FB6B  75                 	db	117
   477  00FB6C  73                 	db	115
   478  00FB6D  68                 	db	104
   479  00FB6E  20                 	db	32
   480  00FB6F  62                 	db	98
   481  00FB70  75                 	db	117
   482  00FB71  74                 	db	116
   483  00FB72  74                 	db	116
   484  00FB73  6F                 	db	111
   485  00FB74  6E                 	db	110
   486  00FB75  20                 	db	32
   487  00FB76  74                 	db	116
   488  00FB77  6F                 	db	111
   489  00FB78  20                 	db	32
   490  00FB79  20                 	db	32
   491  00FB7A  20                 	db	32
   492  00FB7B  20                 	db	32
   493  00FB7C  20                 	db	32
   494  00FB7D  76                 	db	118
   495  00FB7E  65                 	db	101
   496  00FB7F  6E                 	db	110
   497  00FB80  64                 	db	100
   498  00FB81  00                 	db	0
   499  00FB82                     __end_of_vendtest:
   500                           	opt stack 0
   501  00FB82                     _priceexit:
   502                           	opt stack 0
   503  00FB82  50                 	db	80
   504  00FB83  72                 	db	114
   505  00FB84  65                 	db	101
   506  00FB85  73                 	db	115
   507  00FB86  73                 	db	115
   508  00FB87  20                 	db	32
   509  00FB88  73                 	db	115
   510  00FB89  65                 	db	101
   511  00FB8A  72                 	db	114
   512  00FB8B  76                 	db	118
   513  00FB8C  69                 	db	105
   514  00FB8D  63                 	db	99
   515  00FB8E  65                 	db	101
   516  00FB8F  20                 	db	32
   517  00FB90  74                 	db	116
   518  00FB91  6F                 	db	111
   519  00FB92  20                 	db	32
   520  00FB93  65                 	db	101
   521  00FB94  78                 	db	120
   522  00FB95  69                 	db	105
   523  00FB96  74                 	db	116
   524  00FB97  00                 	db	0
   525  00FB98                     __end_of_priceexit:
   526                           	opt stack 0
   527  00FB98                     _inithop:
   528                           	opt stack 0
   529  00FB98  20                 	db	32
   530  00FB99  20                 	db	32
   531  00FB9A  49                 	db	73
   532  00FB9B  6E                 	db	110
   533  00FB9C  69                 	db	105
   534  00FB9D  74                 	db	116
   535  00FB9E  69                 	db	105
   536  00FB9F  61                 	db	97
   537  00FBA0  6C                 	db	108
   538  00FBA1  69                 	db	105
   539  00FBA2  7A                 	db	122
   540  00FBA3  65                 	db	101
   541  00FBA4  20                 	db	32
   542  00FBA5  48                 	db	72
   543  00FBA6  6F                 	db	111
   544  00FBA7  70                 	db	112
   545  00FBA8  70                 	db	112
   546  00FBA9  65                 	db	101
   547  00FBAA  72                 	db	114
   548  00FBAB  00                 	db	0
   549  00FBAC                     __end_of_inithop:
   550                           	opt stack 0
   551  00FBAC                     _senset:
   552                           	opt stack 0
   553  00FBAC  20                 	db	32
   554  00FBAD  20                 	db	32
   555  00FBAE  53                 	db	83
   556  00FBAF  65                 	db	101
   557  00FBB0  74                 	db	116
   558  00FBB1  75                 	db	117
   559  00FBB2  70                 	db	112
   560  00FBB3  20                 	db	32
   561  00FBB4  53                 	db	83
   562  00FBB5  65                 	db	101
   563  00FBB6  6E                 	db	110
   564  00FBB7  73                 	db	115
   565  00FBB8  6F                 	db	111
   566  00FBB9  72                 	db	114
   567  00FBBA  00                 	db	0
   568  00FBBB                     __end_of_senset:
   569                           	opt stack 0
   570  00FBBB                     _notetest:
   571                           	opt stack 0
   572  00FBBB  20                 	db	32
   573  00FBBC  20                 	db	32
   574  00FBBD  49                 	db	73
   575  00FBBE  6E                 	db	110
   576  00FBBF  73                 	db	115
   577  00FBC0  65                 	db	101
   578  00FBC1  72                 	db	114
   579  00FBC2  74                 	db	116
   580  00FBC3  20                 	db	32
   581  00FBC4  4E                 	db	78
   582  00FBC5  6F                 	db	111
   583  00FBC6  74                 	db	116
   584  00FBC7  65                 	db	101
   585  00FBC8  00                 	db	0
   586  00FBC9                     __end_of_notetest:
   587                           	opt stack 0
   588  00FBC9                     _auditmsg:
   589                           	opt stack 0
   590  00FBC9  20                 	db	32
   591  00FBCA  20                 	db	32
   592  00FBCB  41                 	db	65
   593  00FBCC  75                 	db	117
   594  00FBCD  64                 	db	100
   595  00FBCE  69                 	db	105
   596  00FBCF  74                 	db	116
   597  00FBD0  20                 	db	32
   598  00FBD1  4D                 	db	77
   599  00FBD2  6F                 	db	111
   600  00FBD3  64                 	db	100
   601  00FBD4  65                 	db	101
   602  00FBD5  00                 	db	0
   603  00FBD6                     __end_of_auditmsg:
   604                           	opt stack 0
   605  00FBD6                     _pricemsg:
   606                           	opt stack 0
   607  00FBD6  50                 	db	80
   608  00FBD7  72                 	db	114
   609  00FBD8  69                 	db	105
   610  00FBD9  63                 	db	99
   611  00FBDA  65                 	db	101
   612  00FBDB  20                 	db	32
   613  00FBDC  52                 	db	82
   614  00FBDD  00                 	db	0
   615  00FBDE                     __end_of_pricemsg:
   616                           	opt stack 0
   617  00FBDE                     _exit:
   618                           	opt stack 0
   619  00FBDE  45                 	db	69
   620  00FBDF  78                 	db	120
   621  00FBE0  69                 	db	105
   622  00FBE1  74                 	db	116
   623  00FBE2  00                 	db	0
   624  00FBE3                     __end_of_exit:
   625                           	opt stack 0
   626  00FBE3                     _hoperror:
   627                           	opt stack 0
   628  00FBE3  002F               	dw	47
   629  00FBE5                     __end_of_hoperror:
   630                           	opt stack 0
   631  00FBE5                     _nosentime:
   632                           	opt stack 0
   633  00FBE5  002E               	dw	46
   634  00FBE7                     __end_of_nosentime:
   635                           	opt stack 0
   636  00FBE7                     _chan8time:
   637                           	opt stack 0
   638  00FBE7  002D               	dw	45
   639  00FBE9                     __end_of_chan8time:
   640                           	opt stack 0
   641  00FBE9                     _chan7time:
   642                           	opt stack 0
   643  00FBE9  002C               	dw	44
   644  00FBEB                     __end_of_chan7time:
   645                           	opt stack 0
   646  00FBEB                     _chan6time:
   647                           	opt stack 0
   648  00FBEB  002B               	dw	43
   649  00FBED                     __end_of_chan6time:
   650                           	opt stack 0
   651  00FBED                     _chan5time:
   652                           	opt stack 0
   653  00FBED  002A               	dw	42
   654  00FBEF                     __end_of_chan5time:
   655                           	opt stack 0
   656  00FBEF                     _chan4time:
   657                           	opt stack 0
   658  00FBEF  0029               	dw	41
   659  00FBF1                     __end_of_chan4time:
   660                           	opt stack 0
   661  00FBF1                     _chan3time:
   662                           	opt stack 0
   663  00FBF1  0028               	dw	40
   664  00FBF3                     __end_of_chan3time:
   665                           	opt stack 0
   666  00FBF3                     _chan2time:
   667                           	opt stack 0
   668  00FBF3  0027               	dw	39
   669  00FBF5                     __end_of_chan2time:
   670                           	opt stack 0
   671  00FBF5                     _chan1time:
   672                           	opt stack 0
   673  00FBF5  0026               	dw	38
   674  00FBF7                     __end_of_chan1time:
   675                           	opt stack 0
   676  00FBF7                     _sensorflags:
   677                           	opt stack 0
   678  00FBF7  0025               	dw	37
   679  00FBF9                     __end_of_sensorflags:
   680                           	opt stack 0
   681  00FBF9                     _chan8linkbits:
   682                           	opt stack 0
   683  00FBF9  0024               	dw	36
   684  00FBFB                     __end_of_chan8linkbits:
   685                           	opt stack 0
   686  00FBFB                     _chan7linkbits:
   687                           	opt stack 0
   688  00FBFB  0023               	dw	35
   689  00FBFD                     __end_of_chan7linkbits:
   690                           	opt stack 0
   691  00FBFD                     _chan6linkbits:
   692                           	opt stack 0
   693  00FBFD  0022               	dw	34
   694  00FBFF                     __end_of_chan6linkbits:
   695                           	opt stack 0
   696  00FBFF                     _chan5linkbits:
   697                           	opt stack 0
   698  00FBFF  0021               	dw	33
   699  00FC01                     __end_of_chan5linkbits:
   700                           	opt stack 0
   701  00FC01                     _chan4linkbits:
   702                           	opt stack 0
   703  00FC01  0020               	dw	32
   704  00FC03                     __end_of_chan4linkbits:
   705                           	opt stack 0
   706  00FC03                     _chan3linkbits:
   707                           	opt stack 0
   708  00FC03  001F               	dw	31
   709  00FC05                     __end_of_chan3linkbits:
   710                           	opt stack 0
   711  00FC05                     _chan2linkbits:
   712                           	opt stack 0
   713  00FC05  001E               	dw	30
   714  00FC07                     __end_of_chan2linkbits:
   715                           	opt stack 0
   716  00FC07                     _chan1linkbits:
   717                           	opt stack 0
   718  00FC07  001D               	dw	29
   719  00FC09                     __end_of_chan1linkbits:
   720                           	opt stack 0
   721  00FC09                     _hopcoin:
   722                           	opt stack 0
   723  00FC09  001C               	dw	28
   724  00FC0B                     __end_of_hopcoin:
   725                           	opt stack 0
   726  00FC0B                     _cashoutv:
   727                           	opt stack 0
   728  00FC0B  001A               	dw	26
   729  00FC0D                     __end_of_cashoutv:
   730                           	opt stack 0
   731  00FC0D                     _sensval:
   732                           	opt stack 0
   733  00FC0D  0019               	dw	25
   734  00FC0F                     __end_of_sensval:
   735                           	opt stack 0
   736  00FC0F                     _notebits:
   737                           	opt stack 0
   738  00FC0F  0018               	dw	24
   739  00FC11                     __end_of_notebits:
   740                           	opt stack 0
   741  00FC11                     _venderrors:
   742                           	opt stack 0
   743  00FC11  0017               	dw	23
   744  00FC13                     __end_of_venderrors:
   745                           	opt stack 0
   746  00FC13                     _pricestore:
   747                           	opt stack 0
   748  00FC13  000F               	dw	15
   749  00FC15                     __end_of_pricestore:
   750                           	opt stack 0
   751  00FC15                     _cashint:
   752                           	opt stack 0
   753  00FC15  000C               	dw	12
   754  00FC17                     __end_of_cashint:
   755                           	opt stack 0
   756  00FC17                     _vendstore:
   757                           	opt stack 0
   758  00FC17  0004               	dw	4
   759  00FC19                     __end_of_vendstore:
   760                           	opt stack 0
   761  00FC19                     _cashinv:
   762                           	opt stack 0
   763  00FC19  0002               	dw	2
   764  00FC1B                     __end_of_cashinv:
   765                           	opt stack 0
   766  00FC1B                     _credmem:
   767                           	opt stack 0
   768  00FC1B  0000               	dw	0
   769  00FC1D                     __end_of_credmem:
   770                           	opt stack 0
   771  00FC1D                     _secondadd:
   772                           	opt stack 0
   773  00FC1D  1E46               	dw	7750
   774  00FC1F                     __end_of_secondadd:
   775                           	opt stack 0
   776  00FC1F                     _second_5:
   777                           	opt stack 0
   778  00FC1F  0F23               	dw	3875
   779  00FC21                     __end_of_second_5:
   780                           	opt stack 0
   781  00FC21                     _second1:
   782                           	opt stack 0
   783  00FC21  E1BA               	dw	57786
   784  00FC23                     __end_of_second1:
   785                           	opt stack 0
   786  00FC23                     _noecho:
   787                           	opt stack 0
   788  00FC23  FA                 	db	low STR_1
   789  00FC24                     __end_of_noecho:
   790                           	opt stack 0
   791  00FC24                     _cc_poll:
   792                           	opt stack 0
   793  00FC24  FE                 	db	254
   794  00FC25                     __end_of_cc_poll:
   795                           	opt stack 0
   796  00FC25                     _cc_adpoll:
   797                           	opt stack 0
   798  00FC25  FD                 	db	253
   799  00FC26                     __end_of_cc_adpoll:
   800                           	opt stack 0
   801  00FC26                     _cc_serial:
   802                           	opt stack 0
   803  00FC26  F2                 	db	242
   804  00FC27                     __end_of_cc_serial:
   805                           	opt stack 0
   806  00FC27                     _cc_newpin:
   807                           	opt stack 0
   808  00FC27  DB                 	db	219
   809  00FC28                     __end_of_cc_newpin:
   810                           	opt stack 0
   811  00FC28                     _cc_pin:
   812                           	opt stack 0
   813  00FC28  DA                 	db	218
   814  00FC29                     __end_of_cc_pin:
   815                           	opt stack 0
   816  00FC29                     _cc_level:
   817                           	opt stack 0
   818  00FC29  EC                 	db	236
   819  00FC2A                     __end_of_cc_level:
   820                           	opt stack 0
   821  00FC2A                     _cc_stop:
   822                           	opt stack 0
   823  00FC2A  AC                 	db	172
   824  00FC2B                     __end_of_cc_stop:
   825                           	opt stack 0
   826  00FC2B                     _cc_countrq:
   827                           	opt stack 0
   828  00FC2B  A8                 	db	168
   829  00FC2C                     __end_of_cc_countrq:
   830                           	opt stack 0
   831  00FC2C                     _cc_pay:
   832                           	opt stack 0
   833  00FC2C  A7                 	db	167
   834  00FC2D                     __end_of_cc_pay:
   835                           	opt stack 0
   836  00FC2D                     _cc_status:
   837                           	opt stack 0
   838  00FC2D  A6                 	db	166
   839  00FC2E                     __end_of_cc_status:
   840                           	opt stack 0
   841  00FC2E                     _cc_enable:
   842                           	opt stack 0
   843  00FC2E  A4                 	db	164
   844  00FC2F                     __end_of_cc_enable:
   845                           	opt stack 0
   846  00FC2F                     _cc_test:
   847                           	opt stack 0
   848  00FC2F  A3                 	db	163
   849  00FC30                     __end_of_cc_test:
   850                           	opt stack 0
   851  00FC30                     _cc_reset:
   852                           	opt stack 0
   853  00FC30  01                 	db	1
   854  00FC31                     __end_of_cc_reset:
   855                           	opt stack 0
   856  00FC31                     _mastadd:
   857                           	opt stack 0
   858  00FC31  01                 	db	1
   859  00FC32                     __end_of_mastadd:
   860                           	opt stack 0
   861  00FC32                     _hopadd:
   862                           	opt stack 0
   863  00FC32  03                 	db	3
   864  00FC33                     __end_of_hopadd:
   865                           	opt stack 0
   866  00FC33                     _theft_attempt:
   867                           	opt stack 0
   868  00FC33  0C                 	db	12
   869  00FC34                     __end_of_theft_attempt:
   870                           	opt stack 0
   871  00FC34                     _note_rejected:
   872                           	opt stack 0
   873  00FC34  0B                 	db	11
   874  00FC35                     __end_of_note_rejected:
   875                           	opt stack 0
   876  00FC35                     _invalid_escrow:
   877                           	opt stack 0
   878  00FC35  0A                 	db	10
   879  00FC36                     __end_of_invalid_escrow:
   880                           	opt stack 0
   881  00FC36                     _acept_disabled:
   882                           	opt stack 0
   883  00FC36  09                 	db	9
   884  00FC37                     __end_of_acept_disabled:
   885                           	opt stack 0
   886  00FC37                     _cashbox_err:
   887                           	opt stack 0
   888  00FC37  08                 	db	8
   889  00FC38                     __end_of_cashbox_err:
   890                           	opt stack 0
   891  00FC38                     _note_removed:
   892                           	opt stack 0
   893  00FC38  07                 	db	7
   894  00FC39                     __end_of_note_removed:
   895                           	opt stack 0
   896  00FC39                     _just_reset:
   897                           	opt stack 0
   898  00FC39  06                 	db	6
   899  00FC3A                     __end_of_just_reset:
   900                           	opt stack 0
   901  00FC3A                     _jammed_err:
   902                           	opt stack 0
   903  00FC3A  05                 	db	5
   904  00FC3B                     __end_of_jammed_err:
   905                           	opt stack 0
   906  00FC3B                     _rom_error:
   907                           	opt stack 0
   908  00FC3B  04                 	db	4
   909  00FC3C                     __end_of_rom_error:
   910                           	opt stack 0
   911  00FC3C                     _just_busy:
   912                           	opt stack 0
   913  00FC3C  03                 	db	3
   914  00FC3D                     __end_of_just_busy:
   915                           	opt stack 0
   916  00FC3D                     _sens_error:
   917                           	opt stack 0
   918  00FC3D  02                 	db	2
   919  00FC3E                     __end_of_sens_error:
   920                           	opt stack 0
   921  00FC3E                     _motr_error:
   922                           	opt stack 0
   923  00FC3E  01                 	db	1
   924  00FC3F                     __end_of_motr_error:
   925                           	opt stack 0
   926  00FC3F                     _note_features:
   927                           	opt stack 0
   928  00FC3F  33                 	db	51
   929  00FC40                     __end_of_note_features:
   930                           	opt stack 0
   931  00FC40                     _note_stacker:
   932                           	opt stack 0
   933  00FC40  36                 	db	54
   934  00FC41                     __end_of_note_stacker:
   935                           	opt stack 0
   936  00FC41                     _note_escrow:
   937                           	opt stack 0
   938  00FC41  35                 	db	53
   939  00FC42                     __end_of_note_escrow:
   940                           	opt stack 0
   941  00FC42                     _note_type:
   942                           	opt stack 0
   943  00FC42  34                 	db	52
   944  00FC43                     __end_of_note_type:
   945                           	opt stack 0
   946  00FC43                     _note_poll:
   947                           	opt stack 0
   948  00FC43  33                 	db	51
   949  00FC44                     __end_of_note_poll:
   950                           	opt stack 0
   951  00FC44                     _note_security:
   952                           	opt stack 0
   953  00FC44  32                 	db	50
   954  00FC45                     __end_of_note_security:
   955                           	opt stack 0
   956  00FC45                     _note_setup:
   957                           	opt stack 0
   958  00FC45  31                 	db	49
   959  00FC46                     __end_of_note_setup:
   960                           	opt stack 0
   961  00FC46                     _note_reset:
   962                           	opt stack 0
   963  00FC46  30                 	db	48
   964  00FC47                     __end_of_note_reset:
   965                           	opt stack 0
   966  00FC47                     _line4:
   967                           	opt stack 0
   968  00FC47  54                 	db	84
   969  00FC48                     __end_of_line4:
   970                           	opt stack 0
   971  00FC48                     _line3:
   972                           	opt stack 0
   973  00FC48  14                 	db	20
   974  00FC49                     __end_of_line3:
   975                           	opt stack 0
   976  00FC49                     _line2:
   977                           	opt stack 0
   978  00FC49  40                 	db	64
   979  00FC4A                     __end_of_line2:
   980                           	opt stack 0
   981  00FC4A                     _line1:
   982                           	opt stack 0
   983  00FC4A  00                 	db	0
   984  00FC4B                     __end_of_line1:
   985                           	opt stack 0
   986  00FC4B                     _dispsl:
   987                           	opt stack 0
   988  00FC4B  18                 	db	24
   989  00FC4C                     __end_of_dispsl:
   990                           	opt stack 0
   991  00FC4C                     _dispsr:
   992                           	opt stack 0
   993  00FC4C  1B                 	db	27
   994  00FC4D                     __end_of_dispsr:
   995                           	opt stack 0
   996  00FC4D                     _dispoff:
   997                           	opt stack 0
   998  00FC4D  08                 	db	8
   999  00FC4E                     __end_of_dispoff:
  1000                           	opt stack 0
  1001  00FC4E                     _dispshleft:
  1002                           	opt stack 0
  1003  00FC4E  07                 	db	7
  1004  00FC4F                     __end_of_dispshleft:
  1005                           	opt stack 0
  1006  00FC4F                     _dispshright:
  1007                           	opt stack 0
  1008  00FC4F  05                 	db	5
  1009  00FC50                     __end_of_dispshright:
  1010                           	opt stack 0
  1011  00FC50                     _dispcursor:
  1012                           	opt stack 0
  1013  00FC50  04                 	db	4
  1014  00FC51                     __end_of_dispcursor:
  1015                           	opt stack 0
  1016  00FC51                     _dispnormal:
  1017                           	opt stack 0
  1018  00FC51  06                 	db	6
  1019  00FC52                     __end_of_dispnormal:
  1020                           	opt stack 0
  1021  00FC52                     _dsphome:
  1022                           	opt stack 0
  1023  00FC52  02                 	db	2
  1024  00FC53                     __end_of_dsphome:
  1025                           	opt stack 0
  1026  00FC53                     _dispaddr:
  1027                           	opt stack 0
  1028  00FC53  A8                 	db	168
  1029  00FC54                     __end_of_dispaddr:
  1030                           	opt stack 0
  1031  00FC54                     _dispclr:
  1032                           	opt stack 0
  1033  00FC54  01                 	db	1
  1034  00FC55                     __end_of_dispclr:
  1035                           	opt stack 0
  1036  00FC55                     _dispon:
  1037                           	opt stack 0
  1038  00FC55  0C                 	db	12
  1039  00FC56                     __end_of_dispon:
  1040                           	opt stack 0
  1041  00FC56                     _dispfunc3:
  1042                           	opt stack 0
  1043  00FC56  2C                 	db	44
  1044  00FC57                     __end_of_dispfunc3:
  1045                           	opt stack 0
  1046  00FC57                     _dispfunc2:
  1047                           	opt stack 0
  1048  00FC57  28                 	db	40
  1049  00FC58                     __end_of_dispfunc2:
  1050                           	opt stack 0
  1051  00FC58                     _dispfunc1:
  1052                           	opt stack 0
  1053  00FC58  24                 	db	36
  1054  00FC59                     __end_of_dispfunc1:
  1055                           	opt stack 0
  1056  00FC59                     _servmsg:
  1057                           	opt stack 0
  1058  00FC59  31                 	db	49
  1059  00FC5A  20                 	db	32
  1060  00FC5B  3D                 	db	61
  1061  00FC5C  20                 	db	32
  1062  00FC5D  41                 	db	65
  1063  00FC5E  75                 	db	117
  1064  00FC5F  64                 	db	100
  1065  00FC60  69                 	db	105
  1066  00FC61  74                 	db	116
  1067  00FC62  20                 	db	32
  1068  00FC63  32                 	db	50
  1069  00FC64  20                 	db	32
  1070  00FC65  3D                 	db	61
  1071  00FC66  20                 	db	32
  1072  00FC67  53                 	db	83
  1073  00FC68  65                 	db	101
  1074  00FC69  6E                 	db	110
  1075  00FC6A  73                 	db	115
  1076  00FC6B  6F                 	db	111
  1077  00FC6C  72                 	db	114
  1078  00FC6D  33                 	db	51
  1079  00FC6E  3D                 	db	61
  1080  00FC6F  48                 	db	72
  1081  00FC70  6F                 	db	111
  1082  00FC71  70                 	db	112
  1083  00FC72  2D                 	db	45
  1084  00FC73  43                 	db	67
  1085  00FC74  6F                 	db	111
  1086  00FC75  69                 	db	105
  1087  00FC76  6E                 	db	110
  1088  00FC77  20                 	db	32
  1089  00FC78  34                 	db	52
  1090  00FC79  3D                 	db	61
  1091  00FC7A  4E                 	db	78
  1092  00FC7B  6F                 	db	111
  1093  00FC7C  74                 	db	116
  1094  00FC7D  65                 	db	101
  1095  00FC7E  2D                 	db	45
  1096  00FC7F  65                 	db	101
  1097  00FC80  6E                 	db	110
  1098  00FC81  35                 	db	53
  1099  00FC82  3D                 	db	61
  1100  00FC83  43                 	db	67
  1101  00FC84  72                 	db	114
  1102  00FC85  65                 	db	101
  1103  00FC86  64                 	db	100
  1104  00FC87  2D                 	db	45
  1105  00FC88  63                 	db	99
  1106  00FC89  6C                 	db	108
  1107  00FC8A  72                 	db	114
  1108  00FC8B  20                 	db	32
  1109  00FC8C  36                 	db	54
  1110  00FC8D  3D                 	db	61
  1111  00FC8E  50                 	db	80
  1112  00FC8F  72                 	db	114
  1113  00FC90  69                 	db	105
  1114  00FC91  63                 	db	99
  1115  00FC92  65                 	db	101
  1116  00FC93  73                 	db	115
  1117  00FC94  20                 	db	32
  1118  00FC95  37                 	db	55
  1119  00FC96  3D                 	db	61
  1120  00FC97  56                 	db	86
  1121  00FC98  65                 	db	101
  1122  00FC99  6E                 	db	110
  1123  00FC9A  64                 	db	100
  1124  00FC9B  20                 	db	32
  1125  00FC9C  73                 	db	115
  1126  00FC9D  65                 	db	101
  1127  00FC9E  74                 	db	116
  1128  00FC9F  75                 	db	117
  1129  00FCA0  70                 	db	112
  1130  00FCA1  20                 	db	32
  1131  00FCA2  38                 	db	56
  1132  00FCA3  3D                 	db	61
  1133  00FCA4  45                 	db	69
  1134  00FCA5  78                 	db	120
  1135  00FCA6  69                 	db	105
  1136  00FCA7  74                 	db	116
  1137  00FCA8  00                 	db	0
  1138  00FCA9                     __end_of_servmsg:
  1139                           	opt stack 0
  1140  00FCA9                     _setnotes:
  1141                           	opt stack 0
  1142  00FCA9  45                 	db	69
  1143  00FCAA  6E                 	db	110
  1144  00FCAB  61                 	db	97
  1145  00FCAC  62                 	db	98
  1146  00FCAD  6C                 	db	108
  1147  00FCAE  65                 	db	101
  1148  00FCAF  20                 	db	32
  1149  00FCB0  2F                 	db	47
  1150  00FCB1  20                 	db	32
  1151  00FCB2  44                 	db	68
  1152  00FCB3  69                 	db	105
  1153  00FCB4  73                 	db	115
  1154  00FCB5  61                 	db	97
  1155  00FCB6  62                 	db	98
  1156  00FCB7  6C                 	db	108
  1157  00FCB8  65                 	db	101
  1158  00FCB9  20                 	db	32
  1159  00FCBA  20                 	db	32
  1160  00FCBB  20                 	db	32
  1161  00FCBC  20                 	db	32
  1162  00FCBD  31                 	db	49
  1163  00FCBE  20                 	db	32
  1164  00FCBF  3D                 	db	61
  1165  00FCC0  20                 	db	32
  1166  00FCC1  52                 	db	82
  1167  00FCC2  31                 	db	49
  1168  00FCC3  30                 	db	48
  1169  00FCC4  2C                 	db	44
  1170  00FCC5  20                 	db	32
  1171  00FCC6  32                 	db	50
  1172  00FCC7  20                 	db	32
  1173  00FCC8  3D                 	db	61
  1174  00FCC9  20                 	db	32
  1175  00FCCA  52                 	db	82
  1176  00FCCB  32                 	db	50
  1177  00FCCC  30                 	db	48
  1178  00FCCD  20                 	db	32
  1179  00FCCE  20                 	db	32
  1180  00FCCF  20                 	db	32
  1181  00FCD0  20                 	db	32
  1182  00FCD1  33                 	db	51
  1183  00FCD2  20                 	db	32
  1184  00FCD3  3D                 	db	61
  1185  00FCD4  20                 	db	32
  1186  00FCD5  52                 	db	82
  1187  00FCD6  35                 	db	53
  1188  00FCD7  30                 	db	48
  1189  00FCD8  2C                 	db	44
  1190  00FCD9  20                 	db	32
  1191  00FCDA  34                 	db	52
  1192  00FCDB  20                 	db	32
  1193  00FCDC  3D                 	db	61
  1194  00FCDD  20                 	db	32
  1195  00FCDE  52                 	db	82
  1196  00FCDF  31                 	db	49
  1197  00FCE0  30                 	db	48
  1198  00FCE1  30                 	db	48
  1199  00FCE2  20                 	db	32
  1200  00FCE3  20                 	db	32
  1201  00FCE4  20                 	db	32
  1202  00FCE5  35                 	db	53
  1203  00FCE6  20                 	db	32
  1204  00FCE7  3D                 	db	61
  1205  00FCE8  20                 	db	32
  1206  00FCE9  52                 	db	82
  1207  00FCEA  32                 	db	50
  1208  00FCEB  30                 	db	48
  1209  00FCEC  30                 	db	48
  1210  00FCED  00                 	db	0
  1211  00FCEE                     __end_of_setnotes:
  1212                           	opt stack 0
  1213  00FCEE                     _vendsetup:
  1214                           	opt stack 0
  1215  00FCEE  50                 	db	80
  1216  00FCEF  75                 	db	117
  1217  00FCF0  73                 	db	115
  1218  00FCF1  68                 	db	104
  1219  00FCF2  20                 	db	32
  1220  00FCF3  31                 	db	49
  1221  00FCF4  20                 	db	32
  1222  00FCF5  56                 	db	86
  1223  00FCF6  65                 	db	101
  1224  00FCF7  6E                 	db	110
  1225  00FCF8  64                 	db	100
  1226  00FCF9  20                 	db	32
  1227  00FCFA  54                 	db	84
  1228  00FCFB  69                 	db	105
  1229  00FCFC  6D                 	db	109
  1230  00FCFD  65                 	db	101
  1231  00FCFE  2C                 	db	44
  1232  00FCFF  20                 	db	32
  1233  00FD00  20                 	db	32
  1234  00FD01  20                 	db	32
  1235  00FD02  32                 	db	50
  1236  00FD03  20                 	db	32
  1237  00FD04  43                 	db	67
  1238  00FD05  68                 	db	104
  1239  00FD06  61                 	db	97
  1240  00FD07  6E                 	db	110
  1241  00FD08  4C                 	db	76
  1242  00FD09  69                 	db	105
  1243  00FD0A  6E                 	db	110
  1244  00FD0B  6B                 	db	107
  1245  00FD0C  20                 	db	32
  1246  00FD0D  33                 	db	51
  1247  00FD0E  20                 	db	32
  1248  00FD0F  53                 	db	83
  1249  00FD10  65                 	db	101
  1250  00FD11  6E                 	db	110
  1251  00FD12  73                 	db	115
  1252  00FD13  4F                 	db	79
  1253  00FD14  66                 	db	102
  1254  00FD15  66                 	db	102
  1255  00FD16  34                 	db	52
  1256  00FD17  20                 	db	32
  1257  00FD18  43                 	db	67
  1258  00FD19  6C                 	db	108
  1259  00FD1A  72                 	db	114
  1260  00FD1B  54                 	db	84
  1261  00FD1C  6F                 	db	111
  1262  00FD1D  74                 	db	116
  1263  00FD1E  20                 	db	32
  1264  00FD1F  35                 	db	53
  1265  00FD20  20                 	db	32
  1266  00FD21  46                 	db	70
  1267  00FD22  61                 	db	97
  1268  00FD23  63                 	db	99
  1269  00FD24  52                 	db	82
  1270  00FD25  65                 	db	101
  1271  00FD26  73                 	db	115
  1272  00FD27  65                 	db	101
  1273  00FD28  74                 	db	116
  1274  00FD29  20                 	db	32
  1275  00FD2A  38                 	db	56
  1276  00FD2B  20                 	db	32
  1277  00FD2C  65                 	db	101
  1278  00FD2D  78                 	db	120
  1279  00FD2E  69                 	db	105
  1280  00FD2F  74                 	db	116
  1281  00FD30  00                 	db	0
  1282  00FD31                     __end_of_vendsetup:
  1283                           	opt stack 0
  1284  00FD31                     _pricesetm2:
  1285                           	opt stack 0
  1286  00FD31  50                 	db	80
  1287  00FD32  72                 	db	114
  1288  00FD33  65                 	db	101
  1289  00FD34  73                 	db	115
  1290  00FD35  73                 	db	115
  1291  00FD36  20                 	db	32
  1292  00FD37  63                 	db	99
  1293  00FD38  68                 	db	104
  1294  00FD39  61                 	db	97
  1295  00FD3A  6E                 	db	110
  1296  00FD3B  6E                 	db	110
  1297  00FD3C  65                 	db	101
  1298  00FD3D  6C                 	db	108
  1299  00FD3E  20                 	db	32
  1300  00FD3F  62                 	db	98
  1301  00FD40  75                 	db	117
  1302  00FD41  74                 	db	116
  1303  00FD42  74                 	db	116
  1304  00FD43  6F                 	db	111
  1305  00FD44  6E                 	db	110
  1306  00FD45  20                 	db	32
  1307  00FD46  20                 	db	32
  1308  00FD47  20                 	db	32
  1309  00FD48  20                 	db	32
  1310  00FD49  74                 	db	116
  1311  00FD4A  6F                 	db	111
  1312  00FD4B  20                 	db	32
  1313  00FD4C  73                 	db	115
  1314  00FD4D  65                 	db	101
  1315  00FD4E  74                 	db	116
  1316  00FD4F  20                 	db	32
  1317  00FD50  70                 	db	112
  1318  00FD51  72                 	db	114
  1319  00FD52  69                 	db	105
  1320  00FD53  63                 	db	99
  1321  00FD54  65                 	db	101
  1322  00FD55  20                 	db	32
  1323  00FD56  20                 	db	32
  1324  00FD57  20                 	db	32
  1325  00FD58  20                 	db	32
  1326  00FD59  20                 	db	32
  1327  00FD5A  20                 	db	32
  1328  00FD5B  53                 	db	83
  1329  00FD5C  65                 	db	101
  1330  00FD5D  72                 	db	114
  1331  00FD5E  76                 	db	118
  1332  00FD5F  69                 	db	105
  1333  00FD60  63                 	db	99
  1334  00FD61  65                 	db	101
  1335  00FD62  20                 	db	32
  1336  00FD63  3D                 	db	61
  1337  00FD64  20                 	db	32
  1338  00FD65  45                 	db	69
  1339  00FD66  78                 	db	120
  1340  00FD67  69                 	db	105
  1341  00FD68  74                 	db	116
  1342  00FD69  00                 	db	0
  1343  00FD6A                     __end_of_pricesetm2:
  1344                           	opt stack 0
  1345  00FD6A                     _chanlinkm:
  1346                           	opt stack 0
  1347  00FD6A  50                 	db	80
  1348  00FD6B  72                 	db	114
  1349  00FD6C  65                 	db	101
  1350  00FD6D  73                 	db	115
  1351  00FD6E  73                 	db	115
  1352  00FD6F  20                 	db	32
  1353  00FD70  63                 	db	99
  1354  00FD71  68                 	db	104
  1355  00FD72  61                 	db	97
  1356  00FD73  6E                 	db	110
  1357  00FD74  6E                 	db	110
  1358  00FD75  65                 	db	101
  1359  00FD76  6C                 	db	108
  1360  00FD77  20                 	db	32
  1361  00FD78  62                 	db	98
  1362  00FD79  75                 	db	117
  1363  00FD7A  74                 	db	116
  1364  00FD7B  74                 	db	116
  1365  00FD7C  6F                 	db	111
  1366  00FD7D  6E                 	db	110
  1367  00FD7E  20                 	db	32
  1368  00FD7F  20                 	db	32
  1369  00FD80  20                 	db	32
  1370  00FD81  20                 	db	32
  1371  00FD82  74                 	db	116
  1372  00FD83  6F                 	db	111
  1373  00FD84  20                 	db	32
  1374  00FD85  6C                 	db	108
  1375  00FD86  69                 	db	105
  1376  00FD87  6E                 	db	110
  1377  00FD88  6B                 	db	107
  1378  00FD89  20                 	db	32
  1379  00FD8A  74                 	db	116
  1380  00FD8B  6F                 	db	111
  1381  00FD8C  20                 	db	32
  1382  00FD8D  20                 	db	32
  1383  00FD8E  20                 	db	32
  1384  00FD8F  20                 	db	32
  1385  00FD90  20                 	db	32
  1386  00FD91  20                 	db	32
  1387  00FD92  53                 	db	83
  1388  00FD93  65                 	db	101
  1389  00FD94  72                 	db	114
  1390  00FD95  76                 	db	118
  1391  00FD96  69                 	db	105
  1392  00FD97  63                 	db	99
  1393  00FD98  65                 	db	101
  1394  00FD99  20                 	db	32
  1395  00FD9A  3D                 	db	61
  1396  00FD9B  20                 	db	32
  1397  00FD9C  45                 	db	69
  1398  00FD9D  78                 	db	120
  1399  00FD9E  69                 	db	105
  1400  00FD9F  74                 	db	116
  1401  00FDA0  00                 	db	0
  1402  00FDA1                     __end_of_chanlinkm:
  1403                           	opt stack 0
  1404  00FDA1                     _hoppcoin:
  1405                           	opt stack 0
  1406  00FDA1  48                 	db	72
  1407  00FDA2  6F                 	db	111
  1408  00FDA3  70                 	db	112
  1409  00FDA4  70                 	db	112
  1410  00FDA5  65                 	db	101
  1411  00FDA6  72                 	db	114
  1412  00FDA7  20                 	db	32
  1413  00FDA8  43                 	db	67
  1414  00FDA9  6F                 	db	111
  1415  00FDAA  69                 	db	105
  1416  00FDAB  6E                 	db	110
  1417  00FDAC  20                 	db	32
  1418  00FDAD  20                 	db	32
  1419  00FDAE  20                 	db	32
  1420  00FDAF  20                 	db	32
  1421  00FDB0  20                 	db	32
  1422  00FDB1  20                 	db	32
  1423  00FDB2  20                 	db	32
  1424  00FDB3  20                 	db	32
  1425  00FDB4  20                 	db	32
  1426  00FDB5  42                 	db	66
  1427  00FDB6  75                 	db	117
  1428  00FDB7  74                 	db	116
  1429  00FDB8  74                 	db	116
  1430  00FDB9  6F                 	db	111
  1431  00FDBA  6E                 	db	110
  1432  00FDBB  20                 	db	32
  1433  00FDBC  31                 	db	49
  1434  00FDBD  20                 	db	32
  1435  00FDBE  3D                 	db	61
  1436  00FDBF  20                 	db	32
  1437  00FDC0  2B                 	db	43
  1438  00FDC1  20                 	db	32
  1439  00FDC2  26                 	db	38
  1440  00FDC3  20                 	db	32
  1441  00FDC4  32                 	db	50
  1442  00FDC5  20                 	db	32
  1443  00FDC6  3D                 	db	61
  1444  00FDC7  20                 	db	32
  1445  00FDC8  2D                 	db	45
  1446  00FDC9  20                 	db	32
  1447  00FDCA  56                 	db	86
  1448  00FDCB  61                 	db	97
  1449  00FDCC  6C                 	db	108
  1450  00FDCD  75                 	db	117
  1451  00FDCE  65                 	db	101
  1452  00FDCF  20                 	db	32
  1453  00FDD0  3D                 	db	61
  1454  00FDD1  20                 	db	32
  1455  00FDD2  52                 	db	82
  1456  00FDD3  00                 	db	0
  1457  00FDD4                     __end_of_hoppcoin:
  1458                           	opt stack 0
  1459  00FDD4                     _vendtimem:
  1460                           	opt stack 0
  1461  00FDD4  50                 	db	80
  1462  00FDD5  75                 	db	117
  1463  00FDD6  73                 	db	115
  1464  00FDD7  68                 	db	104
  1465  00FDD8  20                 	db	32
  1466  00FDD9  31                 	db	49
  1467  00FDDA  20                 	db	32
  1468  00FDDB  3D                 	db	61
  1469  00FDDC  20                 	db	32
  1470  00FDDD  2B                 	db	43
  1471  00FDDE  2E                 	db	46
  1472  00FDDF  35                 	db	53
  1473  00FDE0  20                 	db	32
  1474  00FDE1  73                 	db	115
  1475  00FDE2  65                 	db	101
  1476  00FDE3  63                 	db	99
  1477  00FDE4  6F                 	db	111
  1478  00FDE5  6E                 	db	110
  1479  00FDE6  64                 	db	100
  1480  00FDE7  20                 	db	32
  1481  00FDE8  50                 	db	80
  1482  00FDE9  75                 	db	117
  1483  00FDEA  73                 	db	115
  1484  00FDEB  68                 	db	104
  1485  00FDEC  20                 	db	32
  1486  00FDED  32                 	db	50
  1487  00FDEE  20                 	db	32
  1488  00FDEF  3D                 	db	61
  1489  00FDF0  20                 	db	32
  1490  00FDF1  2D                 	db	45
  1491  00FDF2  2E                 	db	46
  1492  00FDF3  35                 	db	53
  1493  00FDF4  20                 	db	32
  1494  00FDF5  73                 	db	115
  1495  00FDF6  65                 	db	101
  1496  00FDF7  63                 	db	99
  1497  00FDF8  6F                 	db	111
  1498  00FDF9  6E                 	db	110
  1499  00FDFA  64                 	db	100
  1500  00FDFB  20                 	db	32
  1501  00FDFC  00                 	db	0
  1502  00FDFD                     __end_of_vendtimem:
  1503                           	opt stack 0
  1504  00FDFD                     _setimemsg:
  1505                           	opt stack 0
  1506  00FDFD  50                 	db	80
  1507  00FDFE  75                 	db	117
  1508  00FDFF  73                 	db	115
  1509  00FE00  68                 	db	104
  1510  00FE01  20                 	db	32
  1511  00FE02  63                 	db	99
  1512  00FE03  68                 	db	104
  1513  00FE04  61                 	db	97
  1514  00FE05  6E                 	db	110
  1515  00FE06  6E                 	db	110
  1516  00FE07  65                 	db	101
  1517  00FE08  6C                 	db	108
  1518  00FE09  20                 	db	32
  1519  00FE0A  62                 	db	98
  1520  00FE0B  75                 	db	117
  1521  00FE0C  74                 	db	116
  1522  00FE0D  74                 	db	116
  1523  00FE0E  6F                 	db	111
  1524  00FE0F  6E                 	db	110
  1525  00FE10  20                 	db	32
  1526  00FE11  50                 	db	80
  1527  00FE12  75                 	db	117
  1528  00FE13  73                 	db	115
  1529  00FE14  68                 	db	104
  1530  00FE15  20                 	db	32
  1531  00FE16  73                 	db	115
  1532  00FE17  65                 	db	101
  1533  00FE18  72                 	db	114
  1534  00FE19  76                 	db	118
  1535  00FE1A  69                 	db	105
  1536  00FE1B  63                 	db	99
  1537  00FE1C  65                 	db	101
  1538  00FE1D  20                 	db	32
  1539  00FE1E  74                 	db	116
  1540  00FE1F  6F                 	db	111
  1541  00FE20  20                 	db	32
  1542  00FE21  65                 	db	101
  1543  00FE22  78                 	db	120
  1544  00FE23  69                 	db	105
  1545  00FE24  74                 	db	116
  1546  00FE25  00                 	db	0
  1547  00FE26                     __end_of_setimemsg:
  1548                           	opt stack 0
  1549  00FE26                     _inscoin:
  1550                           	opt stack 0
  1551  00FE26  49                 	db	73
  1552  00FE27  6E                 	db	110
  1553  00FE28  73                 	db	115
  1554  00FE29  65                 	db	101
  1555  00FE2A  72                 	db	114
  1556  00FE2B  74                 	db	116
  1557  00FE2C  20                 	db	32
  1558  00FE2D  4E                 	db	78
  1559  00FE2E  6F                 	db	111
  1560  00FE2F  74                 	db	116
  1561  00FE30  65                 	db	101
  1562  00FE31  73                 	db	115
  1563  00FE32  20                 	db	32
  1564  00FE33  26                 	db	38
  1565  00FE34  20                 	db	32
  1566  00FE35  50                 	db	80
  1567  00FE36  72                 	db	114
  1568  00FE37  65                 	db	101
  1569  00FE38  73                 	db	115
  1570  00FE39  73                 	db	115
  1571  00FE3A  4C                 	db	76
  1572  00FE3B  69                 	db	105
  1573  00FE3C  74                 	db	116
  1574  00FE3D  20                 	db	32
  1575  00FE3E  42                 	db	66
  1576  00FE3F  75                 	db	117
  1577  00FE40  74                 	db	116
  1578  00FE41  74                 	db	116
  1579  00FE42  6F                 	db	111
  1580  00FE43  6E                 	db	110
  1581  00FE44  20                 	db	32
  1582  00FE45  54                 	db	84
  1583  00FE46  6F                 	db	111
  1584  00FE47  20                 	db	32
  1585  00FE48  56                 	db	86
  1586  00FE49  65                 	db	101
  1587  00FE4A  6E                 	db	110
  1588  00FE4B  64                 	db	100
  1589  00FE4C  00                 	db	0
  1590  00FE4D                     __end_of_inscoin:
  1591                           	opt stack 0
  1592  00FE4D                     _initnote:
  1593                           	opt stack 0
  1594  00FE4D  20                 	db	32
  1595  00FE4E  20                 	db	32
  1596  00FE4F  20                 	db	32
  1597  00FE50  20                 	db	32
  1598  00FE51  20                 	db	32
  1599  00FE52  49                 	db	73
  1600  00FE53  6E                 	db	110
  1601  00FE54  69                 	db	105
  1602  00FE55  74                 	db	116
  1603  00FE56  69                 	db	105
  1604  00FE57  61                 	db	97
  1605  00FE58  6C                 	db	108
  1606  00FE59  69                 	db	105
  1607  00FE5A  7A                 	db	122
  1608  00FE5B  65                 	db	101
  1609  00FE5C  20                 	db	32
  1610  00FE5D  20                 	db	32
  1611  00FE5E  20                 	db	32
  1612  00FE5F  20                 	db	32
  1613  00FE60  20                 	db	32
  1614  00FE61  20                 	db	32
  1615  00FE62  20                 	db	32
  1616  00FE63  20                 	db	32
  1617  00FE64  20                 	db	32
  1618  00FE65  20                 	db	32
  1619  00FE66  4E                 	db	78
  1620  00FE67  6F                 	db	111
  1621  00FE68  74                 	db	116
  1622  00FE69  65                 	db	101
  1623  00FE6A  20                 	db	32
  1624  00FE6B  52                 	db	82
  1625  00FE6C  65                 	db	101
  1626  00FE6D  61                 	db	97
  1627  00FE6E  64                 	db	100
  1628  00FE6F  65                 	db	101
  1629  00FE70  72                 	db	114
  1630  00FE71  00                 	db	0
  1631  00FE72                     __end_of_initnote:
  1632                           	opt stack 0
  1633  00FE72                     _nochange:
  1634                           	opt stack 0
  1635  00FE72  4E                 	db	78
  1636  00FE73  6F                 	db	111
  1637  00FE74  20                 	db	32
  1638  00FE75  43                 	db	67
  1639  00FE76  68                 	db	104
  1640  00FE77  61                 	db	97
  1641  00FE78  6E                 	db	110
  1642  00FE79  67                 	db	103
  1643  00FE7A  65                 	db	101
  1644  00FE7B  20                 	db	32
  1645  00FE7C  55                 	db	85
  1646  00FE7D  73                 	db	115
  1647  00FE7E  65                 	db	101
  1648  00FE7F  20                 	db	32
  1649  00FE80  45                 	db	69
  1650  00FE81  78                 	db	120
  1651  00FE82  61                 	db	97
  1652  00FE83  63                 	db	99
  1653  00FE84  74                 	db	116
  1654  00FE85  20                 	db	32
  1655  00FE86  20                 	db	32
  1656  00FE87  20                 	db	32
  1657  00FE88  20                 	db	32
  1658  00FE89  20                 	db	32
  1659  00FE8A  20                 	db	32
  1660  00FE8B  41                 	db	65
  1661  00FE8C  6D                 	db	109
  1662  00FE8D  6F                 	db	111
  1663  00FE8E  75                 	db	117
  1664  00FE8F  6E                 	db	110
  1665  00FE90  74                 	db	116
  1666  00FE91  21                 	db	33
  1667  00FE92  00                 	db	0
  1668  00FE93                     __end_of_nochange:
  1669                           	opt stack 0
  1670  00FE93                     _chanresetmsg:
  1671                           	opt stack 0
  1672  00FE93  52                 	db	82
  1673  00FE94  65                 	db	101
  1674  00FE95  73                 	db	115
  1675  00FE96  65                 	db	101
  1676  00FE97  74                 	db	116
  1677  00FE98  20                 	db	32
  1678  00FE99  74                 	db	116
  1679  00FE9A  6F                 	db	111
  1680  00FE9B  20                 	db	32
  1681  00FE9C  44                 	db	68
  1682  00FE9D  65                 	db	101
  1683  00FE9E  66                 	db	102
  1684  00FE9F  61                 	db	97
  1685  00FEA0  75                 	db	117
  1686  00FEA1  6C                 	db	108
  1687  00FEA2  74                 	db	116
  1688  00FEA3  20                 	db	32
  1689  00FEA4  20                 	db	32
  1690  00FEA5  20                 	db	32
  1691  00FEA6  20                 	db	32
  1692  00FEA7  53                 	db	83
  1693  00FEA8  74                 	db	116
  1694  00FEA9  61                 	db	97
  1695  00FEAA  72                 	db	114
  1696  00FEAB  74                 	db	116
  1697  00FEAC  20                 	db	32
  1698  00FEAD  41                 	db	65
  1699  00FEAE  67                 	db	103
  1700  00FEAF  61                 	db	97
  1701  00FEB0  69                 	db	105
  1702  00FEB1  6E                 	db	110
  1703  00FEB2  00                 	db	0
  1704  00FEB3                     __end_of_chanresetmsg:
  1705                           	opt stack 0
  1706  00FEB3                     _sensoffmsg:
  1707                           	opt stack 0
  1708  00FEB3  50                 	db	80
  1709  00FEB4  75                 	db	117
  1710  00FEB5  73                 	db	115
  1711  00FEB6  68                 	db	104
  1712  00FEB7  20                 	db	32
  1713  00FEB8  31                 	db	49
  1714  00FEB9  20                 	db	32
  1715  00FEBA  3D                 	db	61
  1716  00FEBB  20                 	db	32
  1717  00FEBC  4F                 	db	79
  1718  00FEBD  6E                 	db	110
  1719  00FEBE  2C                 	db	44
  1720  00FEBF  20                 	db	32
  1721  00FEC0  32                 	db	50
  1722  00FEC1  20                 	db	32
  1723  00FEC2  3D                 	db	61
  1724  00FEC3  20                 	db	32
  1725  00FEC4  4F                 	db	79
  1726  00FEC5  66                 	db	102
  1727  00FEC6  66                 	db	102
  1728  00FEC7  2C                 	db	44
  1729  00FEC8  20                 	db	32
  1730  00FEC9  38                 	db	56
  1731  00FECA  20                 	db	32
  1732  00FECB  3D                 	db	61
  1733  00FECC  20                 	db	32
  1734  00FECD  45                 	db	69
  1735  00FECE  78                 	db	120
  1736  00FECF  69                 	db	105
  1737  00FED0  74                 	db	116
  1738  00FED1  00                 	db	0
  1739  00FED2                     __end_of_sensoffmsg:
  1740                           	opt stack 0
  1741  00FED2                     _noteerr:
  1742                           	opt stack 0
  1743  00FED2  20                 	db	32
  1744  00FED3  20                 	db	32
  1745  00FED4  20                 	db	32
  1746  00FED5  4E                 	db	78
  1747  00FED6  6F                 	db	111
  1748  00FED7  74                 	db	116
  1749  00FED8  65                 	db	101
  1750  00FED9  20                 	db	32
  1751  00FEDA  65                 	db	101
  1752  00FEDB  72                 	db	114
  1753  00FEDC  72                 	db	114
  1754  00FEDD  6F                 	db	111
  1755  00FEDE  72                 	db	114
  1756  00FEDF  20                 	db	32
  1757  00FEE0  20                 	db	32
  1758  00FEE1  20                 	db	32
  1759  00FEE2  20                 	db	32
  1760  00FEE3  20                 	db	32
  1761  00FEE4  63                 	db	99
  1762  00FEE5  6F                 	db	111
  1763  00FEE6  64                 	db	100
  1764  00FEE7  65                 	db	101
  1765  00FEE8  20                 	db	32
  1766  00FEE9  3D                 	db	61
  1767  00FEEA  20                 	db	32
  1768  00FEEB  30                 	db	48
  1769  00FEEC  78                 	db	120
  1770  00FEED  00                 	db	0
  1771  00FEEE                     __end_of_noteerr:
  1772                           	opt stack 0
  1773  00FEEE                     _vendispmsg:
  1774                           	opt stack 0
  1775  00FEEE  55                 	db	85
  1776  00FEEF  73                 	db	115
  1777  00FEF0  65                 	db	101
  1778  00FEF1  20                 	db	32
  1779  00FEF2  62                 	db	98
  1780  00FEF3  75                 	db	117
  1781  00FEF4  74                 	db	116
  1782  00FEF5  74                 	db	116
  1783  00FEF6  6F                 	db	111
  1784  00FEF7  6E                 	db	110
  1785  00FEF8  20                 	db	32
  1786  00FEF9  2F                 	db	47
  1787  00FEFA  20                 	db	32
  1788  00FEFB  53                 	db	83
  1789  00FEFC  65                 	db	101
  1790  00FEFD  72                 	db	114
  1791  00FEFE  76                 	db	118
  1792  00FEFF  69                 	db	105
  1793  00FF00  63                 	db	99
  1794  00FF01  65                 	db	101
  1795  00FF02  00                 	db	0
  1796  00FF03                     __end_of_vendispmsg:
  1797                           	opt stack 0
  1798  00FF03                     _clrline:
  1799                           	opt stack 0
  1800  00FF03  20                 	db	32
  1801  00FF04  20                 	db	32
  1802  00FF05  20                 	db	32
  1803  00FF06  20                 	db	32
  1804  00FF07  20                 	db	32
  1805  00FF08  20                 	db	32
  1806  00FF09  20                 	db	32
  1807  00FF0A  20                 	db	32
  1808  00FF0B  20                 	db	32
  1809  00FF0C  20                 	db	32
  1810  00FF0D  20                 	db	32
  1811  00FF0E  20                 	db	32
  1812  00FF0F  20                 	db	32
  1813  00FF10  20                 	db	32
  1814  00FF11  20                 	db	32
  1815  00FF12  20                 	db	32
  1816  00FF13  20                 	db	32
  1817  00FF14  20                 	db	32
  1818  00FF15  20                 	db	32
  1819  00FF16  20                 	db	32
  1820  00FF17  00                 	db	0
  1821  00FF18                     __end_of_clrline:
  1822                           	opt stack 0
  1823  00FF18                     _timemsg:
  1824                           	opt stack 0
  1825  00FF18  54                 	db	84
  1826  00FF19  69                 	db	105
  1827  00FF1A  6D                 	db	109
  1828  00FF1B  65                 	db	101
  1829  00FF1C  20                 	db	32
  1830  00FF1D  69                 	db	105
  1831  00FF1E  6E                 	db	110
  1832  00FF1F  20                 	db	32
  1833  00FF20  31                 	db	49
  1834  00FF21  2F                 	db	47
  1835  00FF22  32                 	db	50
  1836  00FF23  73                 	db	115
  1837  00FF24  65                 	db	101
  1838  00FF25  63                 	db	99
  1839  00FF26  20                 	db	32
  1840  00FF27  3D                 	db	61
  1841  00FF28  20                 	db	32
  1842  00FF29  00                 	db	0
  1843  00FF2A                     __end_of_timemsg:
  1844                           	opt stack 0
  1845  00FF2A                     _pricesetmsg:
  1846                           	opt stack 0
  1847  00FF2A  20                 	db	32
  1848  00FF2B  20                 	db	32
  1849  00FF2C  20                 	db	32
  1850  00FF2D  50                 	db	80
  1851  00FF2E  72                 	db	114
  1852  00FF2F  69                 	db	105
  1853  00FF30  63                 	db	99
  1854  00FF31  65                 	db	101
  1855  00FF32  20                 	db	32
  1856  00FF33  73                 	db	115
  1857  00FF34  65                 	db	101
  1858  00FF35  74                 	db	116
  1859  00FF36  20                 	db	32
  1860  00FF37  6D                 	db	109
  1861  00FF38  6F                 	db	111
  1862  00FF39  64                 	db	100
  1863  00FF3A  65                 	db	101
  1864  00FF3B  00                 	db	0
  1865  00FF3C                     __end_of_pricesetmsg:
  1866                           	opt stack 0
  1867  00FF3C                     _creditclr:
  1868                           	opt stack 0
  1869  00FF3C  43                 	db	67
  1870  00FF3D  72                 	db	114
  1871  00FF3E  65                 	db	101
  1872  00FF3F  64                 	db	100
  1873  00FF40  69                 	db	105
  1874  00FF41  74                 	db	116
  1875  00FF42  73                 	db	115
  1876  00FF43  20                 	db	32
  1877  00FF44  43                 	db	67
  1878  00FF45  6C                 	db	108
  1879  00FF46  65                 	db	101
  1880  00FF47  61                 	db	97
  1881  00FF48  72                 	db	114
  1882  00FF49  65                 	db	101
  1883  00FF4A  64                 	db	100
  1884  00FF4B  00                 	db	0
  1885  00FF4C                     __end_of_creditclr:
  1886                           	opt stack 0
  1887  00FF4C                     _dacmsg:
  1888                           	opt stack 0
  1889  00FF4C  53                 	db	83
  1890  00FF4D  65                 	db	101
  1891  00FF4E  6E                 	db	110
  1892  00FF4F  73                 	db	115
  1893  00FF50  69                 	db	105
  1894  00FF51  74                 	db	116
  1895  00FF52  69                 	db	105
  1896  00FF53  76                 	db	118
  1897  00FF54  69                 	db	105
  1898  00FF55  74                 	db	116
  1899  00FF56  79                 	db	121
  1900  00FF57  20                 	db	32
  1901  00FF58  00                 	db	0
  1902  00FF59                     __end_of_dacmsg:
  1903                           	opt stack 0
  1904  00FF59                     _credits:
  1905                           	opt stack 0
  1906  00FF59  20                 	db	32
  1907  00FF5A  20                 	db	32
  1908  00FF5B  43                 	db	67
  1909  00FF5C  72                 	db	114
  1910  00FF5D  65                 	db	101
  1911  00FF5E  64                 	db	100
  1912  00FF5F  69                 	db	105
  1913  00FF60  74                 	db	116
  1914  00FF61  20                 	db	32
  1915  00FF62  3D                 	db	61
  1916  00FF63  20                 	db	32
  1917  00FF64  52                 	db	82
  1918  00FF65  00                 	db	0
  1919  00FF66                     __end_of_credits:
  1920                           	opt stack 0
  1921  00FF66                     _chanmsg:
  1922                           	opt stack 0
  1923  00FF66  20                 	db	32
  1924  00FF67  20                 	db	32
  1925  00FF68  20                 	db	32
  1926  00FF69  43                 	db	67
  1927  00FF6A  68                 	db	104
  1928  00FF6B  61                 	db	97
  1929  00FF6C  6E                 	db	110
  1930  00FF6D  6E                 	db	110
  1931  00FF6E  65                 	db	101
  1932  00FF6F  6C                 	db	108
  1933  00FF70  20                 	db	32
  1934  00FF71  00                 	db	0
  1935  00FF72                     __end_of_chanmsg:
  1936                           	opt stack 0
  1937  00FF72                     _linkmsg:
  1938                           	opt stack 0
  1939  00FF72  6C                 	db	108
  1940  00FF73  69                 	db	105
  1941  00FF74  6E                 	db	110
  1942  00FF75  6B                 	db	107
  1943  00FF76  65                 	db	101
  1944  00FF77  64                 	db	100
  1945  00FF78  20                 	db	32
  1946  00FF79  74                 	db	116
  1947  00FF7A  6F                 	db	111
  1948  00FF7B  20                 	db	32
  1949  00FF7C  3A                 	db	58
  1950  00FF7D  00                 	db	0
  1951  00FF7E                     __end_of_linkmsg:
  1952                           	opt stack 0
  1953  00FF7E                     _sensmsg:
  1954                           	opt stack 0
  1955  00FF7E  53                 	db	83
  1956  00FF7F  65                 	db	101
  1957  00FF80  6E                 	db	110
  1958  00FF81  73                 	db	115
  1959  00FF82  6F                 	db	111
  1960  00FF83  72                 	db	114
  1961  00FF84  20                 	db	32
  1962  00FF85  69                 	db	105
  1963  00FF86  73                 	db	115
  1964  00FF87  20                 	db	32
  1965  00FF88  00                 	db	0
  1966  00FF89                     __end_of_sensmsg:
  1967                           	opt stack 0
  1968  00FF89                     _cashinmsg:
  1969                           	opt stack 0
  1970  00FF89  43                 	db	67
  1971  00FF8A  61                 	db	97
  1972  00FF8B  73                 	db	115
  1973  00FF8C  68                 	db	104
  1974  00FF8D  20                 	db	32
  1975  00FF8E  69                 	db	105
  1976  00FF8F  6E                 	db	110
  1977  00FF90  20                 	db	32
  1978  00FF91  52                 	db	82
  1979  00FF92  00                 	db	0
  1980  00FF93                     __end_of_cashinmsg:
  1981                           	opt stack 0
  1982  00FF93                     _clrmsg:
  1983                           	opt stack 0
  1984  00FF93  20                 	db	32
  1985  00FF94  20                 	db	32
  1986  00FF95  20                 	db	32
  1987  00FF96  20                 	db	32
  1988  00FF97  20                 	db	32
  1989  00FF98  20                 	db	32
  1990  00FF99  20                 	db	32
  1991  00FF9A  20                 	db	32
  1992  00FF9B  20                 	db	32
  1993  00FF9C  00                 	db	0
  1994  00FF9D                     __end_of_clrmsg:
  1995                           	opt stack 0
  1996  00FF9D                     _disabled:
  1997                           	opt stack 0
  1998  00FF9D  20                 	db	32
  1999  00FF9E  64                 	db	100
  2000  00FF9F  69                 	db	105
  2001  00FFA0  73                 	db	115
  2002  00FFA1  61                 	db	97
  2003  00FFA2  62                 	db	98
  2004  00FFA3  6C                 	db	108
  2005  00FFA4  65                 	db	101
  2006  00FFA5  64                 	db	100
  2007  00FFA6  00                 	db	0
  2008  00FFA7                     __end_of_disabled:
  2009                           	opt stack 0
  2010  00FFA7                     _enabled:
  2011                           	opt stack 0
  2012  00FFA7  20                 	db	32
  2013  00FFA8  65                 	db	101
  2014  00FFA9  6E                 	db	110
  2015  00FFAA  61                 	db	97
  2016  00FFAB  62                 	db	98
  2017  00FFAC  6C                 	db	108
  2018  00FFAD  65                 	db	101
  2019  00FFAE  64                 	db	100
  2020  00FFAF  20                 	db	32
  2021  00FFB0  00                 	db	0
  2022  00FFB1                     __end_of_enabled:
  2023                           	opt stack 0
  2024  00FFB1                     _tenrand:
  2025                           	opt stack 0
  2026  00FFB1  20                 	db	32
  2027  00FFB2  20                 	db	32
  2028  00FFB3  20                 	db	32
  2029  00FFB4  52                 	db	82
  2030  00FFB5  31                 	db	49
  2031  00FFB6  30                 	db	48
  2032  00FFB7  20                 	db	32
  2033  00FFB8  20                 	db	32
  2034  00FFB9  00                 	db	0
  2035  00FFBA                     __end_of_tenrand:
  2036                           	opt stack 0
  2037  00FFBA                     _emptymsg:
  2038                           	opt stack 0
  2039  00FFBA  4E                 	db	78
  2040  00FFBB  6F                 	db	111
  2041  00FFBC  20                 	db	32
  2042  00FFBD  53                 	db	83
  2043  00FFBE  74                 	db	116
  2044  00FFBF  6F                 	db	111
  2045  00FFC0  63                 	db	99
  2046  00FFC1  6B                 	db	107
  2047  00FFC2  00                 	db	0
  2048  00FFC3                     __end_of_emptymsg:
  2049                           	opt stack 0
  2050  00FFC3                     _totalmsg:
  2051                           	opt stack 0
  2052  00FFC3  54                 	db	84
  2053  00FFC4  6F                 	db	111
  2054  00FFC5  74                 	db	116
  2055  00FFC6  61                 	db	97
  2056  00FFC7  6C                 	db	108
  2057  00FFC8  20                 	db	32
  2058  00FFC9  52                 	db	82
  2059  00FFCA  00                 	db	0
  2060  00FFCB                     __end_of_totalmsg:
  2061                           	opt stack 0
  2062  00FFCB                     _twohundredrand:
  2063                           	opt stack 0
  2064  00FFCB  20                 	db	32
  2065  00FFCC  20                 	db	32
  2066  00FFCD  52                 	db	82
  2067  00FFCE  32                 	db	50
  2068  00FFCF  30                 	db	48
  2069  00FFD0  30                 	db	48
  2070  00FFD1  20                 	db	32
  2071  00FFD2  00                 	db	0
  2072  00FFD3                     __end_of_twohundredrand:
  2073                           	opt stack 0
  2074  00FFD3                     _hundredrand:
  2075                           	opt stack 0
  2076  00FFD3  20                 	db	32
  2077  00FFD4  20                 	db	32
  2078  00FFD5  52                 	db	82
  2079  00FFD6  31                 	db	49
  2080  00FFD7  30                 	db	48
  2081  00FFD8  30                 	db	48
  2082  00FFD9  20                 	db	32
  2083  00FFDA  00                 	db	0
  2084  00FFDB                     __end_of_hundredrand:
  2085                           	opt stack 0
  2086  00FFDB                     _fiftyrand:
  2087                           	opt stack 0
  2088  00FFDB  20                 	db	32
  2089  00FFDC  20                 	db	32
  2090  00FFDD  52                 	db	82
  2091  00FFDE  35                 	db	53
  2092  00FFDF  30                 	db	48
  2093  00FFE0  20                 	db	32
  2094  00FFE1  20                 	db	32
  2095  00FFE2  00                 	db	0
  2096  00FFE3                     __end_of_fiftyrand:
  2097                           	opt stack 0
  2098  00FFE3                     _twentyrand:
  2099                           	opt stack 0
  2100  00FFE3  20                 	db	32
  2101  00FFE4  20                 	db	32
  2102  00FFE5  52                 	db	82
  2103  00FFE6  32                 	db	50
  2104  00FFE7  30                 	db	48
  2105  00FFE8  20                 	db	32
  2106  00FFE9  20                 	db	32
  2107  00FFEA  00                 	db	0
  2108  00FFEB                     __end_of_twentyrand:
  2109                           	opt stack 0
  2110  00FFEB                     _totalvendsm:
  2111                           	opt stack 0
  2112  00FFEB  56                 	db	86
  2113  00FFEC  65                 	db	101
  2114  00FFED  6E                 	db	110
  2115  00FFEE  64                 	db	100
  2116  00FFEF  73                 	db	115
  2117  00FFF0  20                 	db	32
  2118  00FFF1  00                 	db	0
  2119  00FFF2                     __end_of_totalvendsm:
  2120                           	opt stack 0
  2121  00FFF2                     _offmsg:
  2122                           	opt stack 0
  2123  00FFF2  4F                 	db	79
  2124  00FFF3  66                 	db	102
  2125  00FFF4  66                 	db	102
  2126  00FFF5  00                 	db	0
  2127  00FFF6                     __end_of_offmsg:
  2128                           	opt stack 0
  2129  00FFF6                     _onmsg:
  2130                           	opt stack 0
  2131  00FFF6  4F                 	db	79
  2132  00FFF7  6E                 	db	110
  2133  00FFF8  20                 	db	32
  2134  00FFF9  00                 	db	0
  2135  00FFFA                     __end_of_onmsg:
  2136                           	opt stack 0
  2137  00FFFA                     STR_1:
  2138                           
  2139                           ; BSR set to: 14
  2140  00FFFA  41                 	db	65	;'A'
  2141  00FFFB  54                 	db	84	;'T'
  2142  00FFFC  45                 	db	69	;'E'
  2143  00FFFD  30                 	db	48	;'0'
  2144  00FFFE  00                 	db	0
  2145  0000                     
  2146                           ; #config settings
  2147  00FFFF  00                 	db	0	; dummy byte at the end
  2148  0000                     
  2149                           	psect	nvBANK0
  2150  0000C5                     __pnvBANK0:
  2151                           	opt stack 0
  2152  0000C5                     _timer0ReloadVal16bit:
  2153                           	opt stack 0
  2154  0000C5                     	ds	2
  2155  0000C7                     _timer5ReloadVal:
  2156                           	opt stack 0
  2157  0000C7                     	ds	2
  2158  0000C9                     _timer3ReloadVal:
  2159                           	opt stack 0
  2160  0000C9                     	ds	2
  2161  0000CB                     _timer1ReloadVal:
  2162                           	opt stack 0
  2163  0000CB                     	ds	2
  2164  0000CD                     _count:
  2165                           	opt stack 0
  2166  0000CD                     	ds	1
  2167  0000                     _PPSLOCKbits	set	3744
  2168  0000                     _PPSLOCK	set	3744
  2169  0000                     _TX2REG	set	3738
  2170  0000                     _RC2REG	set	3737
  2171  0000                     _RC2STAbits	set	3741
  2172  0000                     _TX2STAbits	set	3742
  2173  0000                     _SP2BRGH	set	3740
  2174  0000                     _SP2BRGL	set	3739
  2175  0000                     _TX2STA	set	3742
  2176  0000                     _RC2STA	set	3741
  2177  0000                     _BAUD2CON	set	3743
  2178  0000                     _PIR4bits	set	3790
  2179  0000                     _PIR7bits	set	3793
  2180  0000                     _IPR0bits	set	3770
  2181  0000                     _PMD5	set	3814
  2182  0000                     _PMD4	set	3813
  2183  0000                     _PMD3	set	3812
  2184  0000                     _PMD2	set	3811
  2185  0000                     _PMD1	set	3810
  2186  0000                     _PMD0	set	3809
  2187  0000                     _OSCTUNE	set	3805
  2188  0000                     _OSCFRQ	set	3806
  2189  0000                     _OSCEN	set	3804
  2190  0000                     _OSCCON3	set	3802
  2191  0000                     _OSCCON1	set	3800
  2192  0000                     _PIR3bits	set	3789
  2193  0000                     _PIR0bits	set	3786
  2194  0000                     _RX2PPSbits	set	3725
  2195  0000                     _RB5PPS	set	3828
  2196  0000                     _RC6PPS	set	3837
  2197  0000                     _RX1PPSbits	set	3765
  2198  0000                     _PIE0bits	set	3778
  2199  0000                     _CMOUT	set	3901
  2200  0000                     _DAC1CON1	set	3892
  2201  0000                     _DAC1CON0	set	3891
  2202  0000                     _CMOUTbits	set	3901
  2203  0000                     _CM1PCH	set	3900
  2204  0000                     _CM1NCH	set	3899
  2205  0000                     _CM1CON1	set	3898
  2206  0000                     _CM1CON0	set	3897
  2207  0000                     _ODCOND	set	3876
  2208  0000                     _ODCONC	set	3871
  2209  0000                     _ODCONB	set	3863
  2210  0000                     _ODCONA	set	3855
  2211  0000                     _ODCONE	set	3884
  2212  0000                     _WPUC	set	3872
  2213  0000                     _WPUA	set	3856
  2214  0000                     _WPUB	set	3864
  2215  0000                     _WPUE	set	3885
  2216  0000                     _WPUD	set	3877
  2217  0000                     _ANSELA	set	3857
  2218  0000                     _ANSELE	set	3886
  2219  0000                     _ANSELD	set	3878
  2220  0000                     _ANSELB	set	3865
  2221  0000                     _ANSELC	set	3873
  2222  0000                     _PORTBbits	set	3982
  2223  0000                     _BAUD1CONbits	set	3999
  2224  0000                     _PORTA	set	3981
  2225  0000                     _LATCbits	set	3973
  2226  0000                     _LATAbits	set	3971
  2227  0000                     _PORTD	set	3984
  2228  0000                     _PR4	set	4022
  2229  0000                     _TMR4	set	4021
  2230  0000                     _T4CONbits	set	4023
  2231  0000                     _T4RSTbits	set	4026
  2232  0000                     _T4HLTbits	set	4024
  2233  0000                     _T4CON	set	4023
  2234  0000                     _T4TMR	set	4021
  2235  0000                     _T4PR	set	4022
  2236  0000                     _T4RST	set	4026
  2237  0000                     _T4HLT	set	4024
  2238  0000                     _T4CLKCON	set	4025
  2239  0000                     _PR2	set	4028
  2240  0000                     _TMR2	set	4027
  2241  0000                     _T2CONbits	set	4029
  2242  0000                     _T2RSTbits	set	4032
  2243  0000                     _T2HLTbits	set	4030
  2244  0000                     _T2CON	set	4029
  2245  0000                     _T2TMR	set	4027
  2246  0000                     _T2PR	set	4028
  2247  0000                     _T2RST	set	4032
  2248  0000                     _T2HLT	set	4030
  2249  0000                     _T2CLKCON	set	4031
  2250  0000                     _T0CON0bits	set	4053
  2251  0000                     _T0CON0	set	4053
  2252  0000                     _TMR0L	set	4051
  2253  0000                     _TMR0H	set	4052
  2254  0000                     _T0CON1	set	4054
  2255  0000                     _T5GCONbits	set	4036
  2256  0000                     _T5CONbits	set	4035
  2257  0000                     _T5CON	set	4035
  2258  0000                     _TMR5L	set	4033
  2259  0000                     _TMR5H	set	4034
  2260  0000                     _T5CLK	set	4038
  2261  0000                     _T5GATE	set	4037
  2262  0000                     _T5GCON	set	4036
  2263  0000                     _T3GCONbits	set	4042
  2264  0000                     _T3CONbits	set	4041
  2265  0000                     _T3CON	set	4041
  2266  0000                     _TMR3L	set	4039
  2267  0000                     _TMR3H	set	4040
  2268  0000                     _T3CLK	set	4044
  2269  0000                     _T3GATE	set	4043
  2270  0000                     _T3GCON	set	4042
  2271  0000                     _T1GCONbits	set	4048
  2272  0000                     _T1CONbits	set	4047
  2273  0000                     _T1CON	set	4047
  2274  0000                     _TMR1L	set	4045
  2275  0000                     _TMR1H	set	4046
  2276  0000                     _T1CLK	set	4050
  2277  0000                     _T1GATE	set	4049
  2278  0000                     _T1GCON	set	4048
  2279  0000                     _NVMDAT	set	3968
  2280  0000                     _NVMADRL	set	3966
  2281  0000                     _NVMADRH	set	3967
  2282  0000                     _NVMCON2	set	3970
  2283  0000                     _TABLAT	set	4085
  2284  0000                     _TBLPTRL	set	4086
  2285  0000                     _TBLPTRH	set	4087
  2286  0000                     _TBLPTRU	set	4088
  2287  0000                     _NVMCON1bits	set	3969
  2288  0000                     _INTCONbits	set	4082
  2289  0000                     _TX1REG	set	3994
  2290  0000                     _RC1REG	set	3993
  2291  0000                     _RC1STAbits	set	3997
  2292  0000                     _TX1STAbits	set	3998
  2293  0000                     _SP1BRGH	set	3996
  2294  0000                     _SP1BRGL	set	3995
  2295  0000                     _TX1STA	set	3998
  2296  0000                     _RC1STA	set	3997
  2297  0000                     _BAUD1CON	set	3999
  2298  0000                     _TRISD	set	3979
  2299  0000                     _TRISC	set	3978
  2300  0000                     _TRISB	set	3977
  2301  0000                     _TRISA	set	3976
  2302  0000                     _TRISE	set	3980
  2303  0000                     _LATC	set	3973
  2304  0000                     _LATB	set	3972
  2305  0000                     _LATA	set	3971
  2306  0000                     _LATD	set	3974
  2307  0000                     _LATE	set	3975
  2308  0000                     _LATA6	set	31774
  2309  0000                     _LATA7	set	31775
  2310                           
  2311                           	psect	cinit
  2312  01241E                     __pcinit:
  2313                           	opt stack 0
  2314  01241E                     start_initialization:
  2315                           	opt stack 0
  2316  01241E                     __initialization:
  2317                           	opt stack 0
  2318                           
  2319                           ; Initialize objects allocated to BANK0 (1 bytes)
  2320                           ; load TBLPTR registers with __pidataBANK0
  2321  01241E  0EAA               	movlw	low __pidataBANK0
  2322  012420  6EF6               	movwf	tblptrl,c
  2323  012422  0E2C               	movlw	high __pidataBANK0
  2324  012424  6EF7               	movwf	tblptrh,c
  2325  012426  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2326  012428  6EF8               	movwf	tblptru,c
  2327  01242A  0009               	tblrd		*+	;fetch initializer
  2328  01242C  CFF5 F0CE          	movff	tablat,__pdataBANK0
  2329                           
  2330                           ; Initialize objects allocated to COMRAMh (1 bytes)
  2331                           ; load TBLPTR registers with __pidataCOMRAMh
  2332  012430  0EAB               	movlw	low __pidataCOMRAMh
  2333  012432  6EF6               	movwf	tblptrl,c
  2334  012434  0E2C               	movlw	high __pidataCOMRAMh
  2335  012436  6EF7               	movwf	tblptrh,c
  2336  012438  0E01               	movlw	low (__pidataCOMRAMh shr (0+16))
  2337  01243A  6EF8               	movwf	tblptru,c
  2338  01243C  0009               	tblrd		*+	;fetch initializer
  2339  01243E  CFF5 F04D          	movff	tablat,__pdataCOMRAMh
  2340                           
  2341                           ; Clear objects allocated to BANK0 (82 bytes)
  2342  012442  EE00  F060         	lfsr	0,__pbssBANK0
  2343  012446  0E52               	movlw	82
  2344  012448                     clear_0:
  2345  012448  6AEE               	clrf	postinc0,c
  2346  01244A  06E8               	decf	wreg,f,c
  2347  01244C  E1FD               	bnz	clear_0
  2348                           
  2349                           ; Clear objects allocated to COMRAMh (32 bytes)
  2350  01244E  EE00  F02D         	lfsr	0,__pbssCOMRAMh
  2351  012452  0E20               	movlw	32
  2352  012454                     clear_1:
  2353  012454  6AEE               	clrf	postinc0,c
  2354  012456  06E8               	decf	wreg,f,c
  2355  012458  E1FD               	bnz	clear_1
  2356                           
  2357                           ; Clear objects allocated to COMRAMl (1 bytes)
  2358  01245A  6A4E               	clrf	__pbssCOMRAMl& (0+255),c
  2359  01245C                     end_of_initialization:
  2360                           	opt stack 0
  2361  01245C                     __end_of__initialization:
  2362                           	opt stack 0
  2363  01245C  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2364  01245E  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2365  012460  0100               	movlb	0
  2366  012462  EF9B  F081         	goto	_main	;jump to C main() function
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           postinc0	equ	0xFEE
  2372                           wreg	equ	0xFE8
  2373                           
  2374                           	psect	bssCOMRAMh
  2375  00002D                     __pbssCOMRAMh:
  2376                           	opt stack 0
  2377  00002D                     _venflags:
  2378                           	opt stack 0
  2379  00002D                     	ds	3
  2380  000030                     _channel:
  2381                           	opt stack 0
  2382  000030                     	ds	1
  2383  000031                     _errormask:
  2384                           	opt stack 0
  2385  000031                     	ds	1
  2386  000032                     _chanmask:
  2387                           	opt stack 0
  2388  000032                     	ds	1
  2389  000033                     _lowprice:
  2390                           	opt stack 0
  2391  000033                     	ds	1
  2392  000034                     _highprice:
  2393                           	opt stack 0
  2394  000034                     	ds	1
  2395  000035                     _senspos:
  2396                           	opt stack 0
  2397  000035                     	ds	1
  2398  000036                     _sensorval:
  2399                           	opt stack 0
  2400  000036                     	ds	1
  2401  000037                     _vendprice:
  2402                           	opt stack 0
  2403  000037                     	ds	1
  2404  000038                     _buttons:
  2405                           	opt stack 0
  2406  000038                     	ds	1
  2407  000039                     _cash:
  2408                           	opt stack 0
  2409  000039                     	ds	1
  2410  00003A                     _credit:
  2411                           	opt stack 0
  2412  00003A                     	ds	1
  2413  00003B                     _outcoins:
  2414                           	opt stack 0
  2415  00003B                     	ds	1
  2416  00003C                     _change:
  2417                           	opt stack 0
  2418  00003C                     	ds	1
  2419  00003D                     _noteen_byte:
  2420                           	opt stack 0
  2421  00003D                     	ds	1
  2422  00003E                     _noteen:
  2423                           	opt stack 0
  2424  00003E                     	ds	1
  2425  00003F                     _mdbflags:
  2426                           	opt stack 0
  2427  00003F                     	ds	1
  2428  000040                     _chkbyte:
  2429                           	opt stack 0
  2430  000040                     	ds	1
  2431  000041                     _notebyte:
  2432                           	opt stack 0
  2433  000041                     	ds	1
  2434  000042                     _mcount:
  2435                           	opt stack 0
  2436  000042                     	ds	1
  2437  000043                     _dspposition:
  2438                           	opt stack 0
  2439  000043                     	ds	1
  2440  000044                     _ercode:
  2441                           	opt stack 0
  2442  000044                     	ds	1
  2443  000045                     _stradd:
  2444                           	opt stack 0
  2445  000045                     	ds	1
  2446  000046                     _lcdata:
  2447                           	opt stack 0
  2448  000046                     	ds	1
  2449  000047                     _bflag:
  2450                           	opt stack 0
  2451  000047                     	ds	1
  2452  000048                     _pnvcash:
  2453                           	opt stack 0
  2454  000048                     	ds	3
  2455  00004B                     _pvcash:
  2456                           	opt stack 0
  2457  00004B                     	ds	2
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           
  2465                           	psect	dataCOMRAMh
  2466  00004D                     __pdataCOMRAMh:
  2467                           	opt stack 0
  2468  00004D                     _notenum:
  2469                           	opt stack 0
  2470  00004D                     	ds	1
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           
  2478                           	psect	bssCOMRAMl
  2479  00004E                     __pbssCOMRAMl:
  2480                           	opt stack 0
  2481  00004E                     _cctflags:
  2482                           	opt stack 0
  2483  00004E                     	ds	1
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           
  2491                           	psect	bssBANK0
  2492  000060                     __pbssBANK0:
  2493                           	opt stack 0
  2494  000060                     _mdbdata:
  2495                           	opt stack 0
  2496  000060                     	ds	31
  2497  00007F                     _pricevend:
  2498                           	opt stack 0
  2499  00007F                     	ds	8
  2500  000087                     _dummy:
  2501                           	opt stack 0
  2502  000087                     	ds	8
  2503  00008F                     _tvends:
  2504                           	opt stack 0
  2505  00008F                     	ds	8
  2506  000097                     _nvcash:
  2507                           	opt stack 0
  2508  000097                     	ds	3
  2509  00009A                     _hpserial:
  2510                           	opt stack 0
  2511  00009A                     	ds	3
  2512  00009D                     _hexnum:
  2513                           	opt stack 0
  2514  00009D                     	ds	3
  2515  0000A0                     _vcashout:
  2516                           	opt stack 0
  2517  0000A0                     	ds	2
  2518  0000A2                     _vcash:
  2519                           	opt stack 0
  2520  0000A2                     	ds	2
  2521  0000A4                     _dbcount:
  2522                           	opt stack 0
  2523  0000A4                     	ds	2
  2524  0000A6                     _gsmbyte:
  2525                           	opt stack 0
  2526  0000A6                     	ds	1
  2527  0000A7                     _venderr:
  2528                           	opt stack 0
  2529  0000A7                     	ds	1
  2530  0000A8                     _senschk:
  2531                           	opt stack 0
  2532  0000A8                     	ds	1
  2533  0000A9                     _command:
  2534                           	opt stack 0
  2535  0000A9                     	ds	1
  2536  0000AA                     _nobytes:
  2537                           	opt stack 0
  2538  0000AA                     	ds	1
  2539  0000AB                     _dest:
  2540                           	opt stack 0
  2541  0000AB                     	ds	1
  2542  0000AC                     _mdbtxbyte:
  2543                           	opt stack 0
  2544  0000AC                     	ds	1
  2545  0000AD                     _errorflags:
  2546                           	opt stack 0
  2547  0000AD                     	ds	1
  2548  0000AE                     _slvadd:
  2549                           	opt stack 0
  2550  0000AE                     	ds	1
  2551  0000AF                     _lcdaddress:
  2552                           	opt stack 0
  2553  0000AF                     	ds	1
  2554  0000B0                     _lcdline:
  2555                           	opt stack 0
  2556  0000B0                     	ds	1
  2557  0000B1                     _lcdfunc:
  2558                           	opt stack 0
  2559  0000B1                     	ds	1
  2560                           tblptru	equ	0xFF8
  2561                           tblptrh	equ	0xFF7
  2562                           tblptrl	equ	0xFF6
  2563                           tablat	equ	0xFF5
  2564                           postinc0	equ	0xFEE
  2565                           wreg	equ	0xFE8
  2566                           
  2567                           	psect	dataBANK0
  2568  0000CE                     __pdataBANK0:
  2569                           	opt stack 0
  2570  0000CE                     _hopercount:
  2571                           	opt stack 0
  2572  0000CE                     	ds	1
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           
  2580                           	psect	cstackBANK0
  2581  0000B2                     __pcstackBANK0:
  2582                           	opt stack 0
  2583  0000B2                     ??_Link_chan:
  2584  0000B2                     off_sens@channel:
  2585                           	opt stack 0
  2586  0000B2                     dispense@sensmask:
  2587                           	opt stack 0
  2588  0000B2                     Reset_settings@chanlinkbits:
  2589                           	opt stack 0
  2590  0000B2                     displ_hex@value:
  2591                           	opt stack 0
  2592                           
  2593                           ; 8 bytes @ 0x0
  2594  0000B2                     	ds	1
  2595  0000B3                     off_sens@chanbit:
  2596                           	opt stack 0
  2597  0000B3                     dispense@chanel:
  2598                           	opt stack 0
  2599                           
  2600                           ; 1 bytes @ 0x1
  2601  0000B3                     	ds	1
  2602  0000B4                     ??_price_check:
  2603  0000B4                     Link_chan@chanbit:
  2604                           	opt stack 0
  2605  0000B4                     off_sens@senseflags:
  2606                           	opt stack 0
  2607  0000B4                     Reset_settings@chantimebits:
  2608                           	opt stack 0
  2609                           
  2610                           ; 2 bytes @ 0x2
  2611  0000B4                     	ds	1
  2612  0000B5                     ??_Sens_off:
  2613  0000B5                     Link_chan@channel:
  2614                           	opt stack 0
  2615                           
  2616                           ; 1 bytes @ 0x3
  2617  0000B5                     	ds	1
  2618  0000B6                     Link_chan@linkflags:
  2619                           	opt stack 0
  2620  0000B6                     price_check@savechan:
  2621                           	opt stack 0
  2622                           
  2623                           ; 1 bytes @ 0x4
  2624  0000B6                     	ds	1
  2625  0000B7                     ??_Chan_link:
  2626  0000B7                     price_check@savebut:
  2627                           	opt stack 0
  2628                           
  2629                           ; 1 bytes @ 0x5
  2630  0000B7                     	ds	1
  2631  0000B8                     price_check@chanlinkbit:
  2632                           	opt stack 0
  2633                           
  2634                           ; 1 bytes @ 0x6
  2635  0000B8                     	ds	1
  2636  0000B9                     price_check@i:
  2637                           	opt stack 0
  2638                           
  2639                           ; 1 bytes @ 0x7
  2640  0000B9                     	ds	1
  2641  0000BA                     displ_hex@hexnumsave:
  2642                           	opt stack 0
  2643                           
  2644                           ; 3 bytes @ 0x8
  2645  0000BA                     	ds	3
  2646  0000BD                     displ_hex@i:
  2647                           	opt stack 0
  2648                           
  2649                           ; 1 bytes @ 0xB
  2650  0000BD                     	ds	1
  2651  0000BE                     ??_Vend_timeset:
  2652  0000BE                     set_price@buttons:
  2653                           	opt stack 0
  2654                           
  2655                           ; 1 bytes @ 0xC
  2656  0000BE                     	ds	1
  2657  0000BF                     set_price@channel:
  2658                           	opt stack 0
  2659                           
  2660                           ; 1 bytes @ 0xD
  2661  0000BF                     	ds	1
  2662  0000C0                     Vend_timeset@chantime:
  2663                           	opt stack 0
  2664                           
  2665                           ; 1 bytes @ 0xE
  2666  0000C0                     	ds	1
  2667  0000C1                     Vend_timeset@channel:
  2668                           	opt stack 0
  2669                           
  2670                           ; 1 bytes @ 0xF
  2671  0000C1                     	ds	1
  2672  0000C2                     ??_main:
  2673                           
  2674                           ; 1 bytes @ 0x10
  2675  0000C2                     	ds	2
  2676  0000C4                     main@channel:
  2677                           	opt stack 0
  2678                           
  2679                           ; 1 bytes @ 0x12
  2680  0000C4                     	ds	1
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           
  2688                           	psect	cstackCOMRAMh
  2689  00000B                     __pcstackCOMRAMh:
  2690                           	opt stack 0
  2691  00000B                     ??_INTERRUPT_InterruptManagerHigh:
  2692  00000B                     
  2693                           ; 1 bytes @ 0x0
  2694  00000B                     	ds	18
  2695  00001D                     ??_TMR0_Initialize:
  2696  00001D                     ??_TMR3_Initialize:
  2697  00001D                     ??_TMR5_Initialize:
  2698  00001D                     ??_TMR1_Initialize:
  2699  00001D                     ??_butin:
  2700  00001D                     ??_switch_read:
  2701  00001D                     ??_Reset_hopper:
  2702  00001D                     ?___wmul:
  2703                           	opt stack 0
  2704  00001D                     ?___ltdiv:
  2705                           	opt stack 0
  2706  00001D                     ?___ltmod:
  2707                           	opt stack 0
  2708  00001D                     EUSART1_Write@txData:
  2709                           	opt stack 0
  2710  00001D                     DAC1_SetOutput@inputData:
  2711                           	opt stack 0
  2712  00001D                     EUSART2_Write@txData:
  2713                           	opt stack 0
  2714  00001D                     read_busy@savelate:
  2715                           	opt stack 0
  2716  00001D                     Read_Service@senval:
  2717                           	opt stack 0
  2718  00001D                     get_channel@butons:
  2719                           	opt stack 0
  2720  00001D                     ___lbdiv@divisor:
  2721                           	opt stack 0
  2722  00001D                     DATAEE_WriteByte@bAdd:
  2723                           	opt stack 0
  2724  00001D                     DATAEE_ReadByte@bAdd:
  2725                           	opt stack 0
  2726  00001D                     TMR0_WriteTimer@timerVal:
  2727                           	opt stack 0
  2728  00001D                     ___wmul@multiplier:
  2729                           	opt stack 0
  2730  00001D                     ___ltdiv@dividend:
  2731                           	opt stack 0
  2732  00001D                     ___ltmod@dividend:
  2733                           	opt stack 0
  2734                           
  2735                           ; 3 bytes @ 0x12
  2736  00001D                     	ds	1
  2737  00001E                     read_busy@savelatd:
  2738                           	opt stack 0
  2739  00001E                     butin@butons:
  2740                           	opt stack 0
  2741  00001E                     mdb_transmit@txbyte:
  2742                           	opt stack 0
  2743  00001E                     find_highprice@i:
  2744                           	opt stack 0
  2745  00001E                     find_lowprice@i:
  2746                           	opt stack 0
  2747  00001E                     gsm_transmit@txbyte:
  2748                           	opt stack 0
  2749  00001E                     ___lbdiv@dividend:
  2750                           	opt stack 0
  2751                           
  2752                           ; 1 bytes @ 0x13
  2753  00001E                     	ds	1
  2754  00001F                     ??_gsm_init:
  2755  00001F                     ??_mdb_unlock:
  2756  00001F                     ??_butindb:
  2757  00001F                     ??_init_pricestore:
  2758  00001F                     ??_Init_vendmem:
  2759  00001F                     DATAEE_WriteByte@bData:
  2760                           	opt stack 0
  2761  00001F                     lcd_write@savelatd:
  2762                           	opt stack 0
  2763  00001F                     ___lbdiv@counter:
  2764                           	opt stack 0
  2765  00001F                     Read_NVstore@storeadd:
  2766                           	opt stack 0
  2767  00001F                     ___wmul@multiplicand:
  2768                           	opt stack 0
  2769                           
  2770                           ; 2 bytes @ 0x14
  2771  00001F                     	ds	1
  2772  000020                     ??_vend_nosense:
  2773  000020                     DATAEE_WriteByte@GIEBitValue:
  2774                           	opt stack 0
  2775  000020                     lcd_write@lcdata:
  2776                           	opt stack 0
  2777  000020                     ___lbdiv@quotient:
  2778                           	opt stack 0
  2779  000020                     ___ltdiv@divisor:
  2780                           	opt stack 0
  2781  000020                     ___ltmod@divisor:
  2782                           	opt stack 0
  2783                           
  2784                           ; 3 bytes @ 0x15
  2785  000020                     	ds	1
  2786  000021                     ??_update_vends:
  2787  000021                     ??_disable_channel:
  2788  000021                     lcd_dispadd@lcdaddress:
  2789                           	opt stack 0
  2790  000021                     credit_subtract@credit:
  2791                           	opt stack 0
  2792  000021                     butindb@butval:
  2793                           	opt stack 0
  2794  000021                     init_pricestore@i:
  2795                           	opt stack 0
  2796  000021                     Init_vendmem@chanlinkbits:
  2797                           	opt stack 0
  2798  000021                     Write_NVstore@storeadd:
  2799                           	opt stack 0
  2800  000021                     Read_NVstore@storemem:
  2801                           	opt stack 0
  2802  000021                     Clear_Totals@eeaddress:
  2803                           	opt stack 0
  2804  000021                     ___wmul@product:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x16
  2808  000021                     	ds	1
  2809  000022                     lcd_dispadd@lcdatasave:
  2810                           	opt stack 0
  2811  000022                     butindb@butt:
  2812                           	opt stack 0
  2813  000022                     init_mdbdata@initdata:
  2814                           	opt stack 0
  2815  000022                     vend_nosense@chanel:
  2816                           	opt stack 0
  2817                           
  2818                           ; 1 bytes @ 0x17
  2819  000022                     	ds	1
  2820  000023                     ??_set_motortime:
  2821  000023                     lcd_writeC@lcdata:
  2822                           	opt stack 0
  2823  000023                     Read_NVstore@storesize:
  2824                           	opt stack 0
  2825  000023                     init_mdbdata@i:
  2826                           	opt stack 0
  2827  000023                     disable_channel@channel:
  2828                           	opt stack 0
  2829  000023                     update_vends@x:
  2830                           	opt stack 0
  2831  000023                     ___ltmod@counter:
  2832                           	opt stack 0
  2833  000023                     Init_vendmem@chanlink:
  2834                           	opt stack 0
  2835  000023                     Write_NVstore@storemem:
  2836                           	opt stack 0
  2837  000023                     ___ltdiv@quotient:
  2838                           	opt stack 0
  2839                           
  2840                           ; 3 bytes @ 0x18
  2841  000023                     	ds	1
  2842  000024                     ??_displ_code:
  2843  000024                     lcd_test@character:
  2844                           	opt stack 0
  2845  000024                     Read_NVstore@i:
  2846                           	opt stack 0
  2847  000024                     mdb_comm@mcount:
  2848                           	opt stack 0
  2849  000024                     disable_channel@errormask:
  2850                           	opt stack 0
  2851  000024                     update_vends@chanel:
  2852                           	opt stack 0
  2853  000024                     lcd_string@lcdstring:
  2854                           	opt stack 0
  2855                           
  2856                           ; 2 bytes @ 0x19
  2857  000024                     	ds	1
  2858  000025                     ??_lcd_init:
  2859  000025                     Init_vendmem@i:
  2860                           	opt stack 0
  2861  000025                     Write_NVstore@storesize:
  2862                           	opt stack 0
  2863  000025                     mdb_comm@slvadd:
  2864                           	opt stack 0
  2865  000025                     set_motortime@chanel:
  2866                           	opt stack 0
  2867                           
  2868                           ; 1 bytes @ 0x1A
  2869  000025                     	ds	1
  2870  000026                     displ_code@ercode:
  2871                           	opt stack 0
  2872  000026                     lcd_string@lcdline:
  2873                           	opt stack 0
  2874  000026                     Write_NVstore@i:
  2875                           	opt stack 0
  2876  000026                     mdb_comm@i:
  2877                           	opt stack 0
  2878  000026                     set_motortime@i:
  2879                           	opt stack 0
  2880  000026                     ___ltdiv@counter:
  2881                           	opt stack 0
  2882                           
  2883                           ; 1 bytes @ 0x1B
  2884  000026                     	ds	1
  2885  000027                     ??_lcd_string:
  2886  000027                     ??_mdb_reset:
  2887  000027                     Update_cashaudit@addcash:
  2888                           	opt stack 0
  2889  000027                     mdb_poll@i:
  2890                           	opt stack 0
  2891  000027                     Update_coinsout@coinsout:
  2892                           	opt stack 0
  2893  000027                     set_motortime@time:
  2894                           	opt stack 0
  2895  000027                     displ_hex@hexnum:
  2896                           	opt stack 0
  2897                           
  2898                           ; 3 bytes @ 0x1C
  2899  000027                     	ds	1
  2900  000028                     ??_hopper_pay:
  2901  000028                     credit_add@credit:
  2902                           	opt stack 0
  2903  000028                     mdb_reset@i:
  2904                           	opt stack 0
  2905                           
  2906                           ; 1 bytes @ 0x1D
  2907  000028                     	ds	1
  2908  000029                     ??_Clear_cred:
  2909  000029                     ??_Reset_settings:
  2910  000029                     ??_vend_dispense:
  2911  000029                     displ_lflags@linkflgs:
  2912                           	opt stack 0
  2913  000029                     displ_sflags@chanel:
  2914                           	opt stack 0
  2915  000029                     displ_nendis@note2disp:
  2916                           	opt stack 0
  2917  000029                     mdb_reset@i_4062:
  2918                           	opt stack 0
  2919  000029                     hopper_pay@change:
  2920                           	opt stack 0
  2921  000029                     displ_note@notestring:
  2922                           	opt stack 0
  2923                           
  2924                           ; 2 bytes @ 0x1E
  2925  000029                     	ds	1
  2926  00002A                     ??_mdb_init:
  2927  00002A                     ??_Audit:
  2928  00002A                     displ_sens@dmsgpos:
  2929                           	opt stack 0
  2930  00002A                     displ_lflags@chanel:
  2931                           	opt stack 0
  2932  00002A                     displ_sflags@chanbit:
  2933                           	opt stack 0
  2934  00002A                     displ_time@channel:
  2935                           	opt stack 0
  2936  00002A                     displ_nendis@x:
  2937                           	opt stack 0
  2938  00002A                     displ_credit@cash:
  2939                           	opt stack 0
  2940  00002A                     displ_price@vendprice:
  2941                           	opt stack 0
  2942  00002A                     Update_Hopcoin@direction:
  2943                           	opt stack 0
  2944  00002A                     give_change@paycash:
  2945                           	opt stack 0
  2946                           
  2947                           ; 1 bytes @ 0x1F
  2948  00002A                     	ds	1
  2949  00002B                     ??_set_price:
  2950  00002B                     displ_sens@smsgpos:
  2951                           	opt stack 0
  2952  00002B                     displ_lflags@lchan:
  2953                           	opt stack 0
  2954  00002B                     displ_sflags@senseflags:
  2955                           	opt stack 0
  2956  00002B                     displ_time@motortime:
  2957                           	opt stack 0
  2958  00002B                     Update_Hopcoin@newval:
  2959                           	opt stack 0
  2960  00002B                     enable_notes@notenum:
  2961                           	opt stack 0
  2962  00002B                     give_change@i:
  2963                           	opt stack 0
  2964  00002B                     vend_dispense@chanel:
  2965                           	opt stack 0
  2966                           
  2967                           ; 1 bytes @ 0x20
  2968  00002B                     	ds	1
  2969  00002C                     Audit@vends:
  2970                           	opt stack 0
  2971  00002C                     Hopper_coin@coinval:
  2972                           	opt stack 0
  2973  00002C                     Sensor_set@dacpos:
  2974                           	opt stack 0
  2975  00002C                     mdb_init@i:
  2976                           	opt stack 0
  2977                           
  2978                           ; 1 bytes @ 0x21
  2979  00002C                     	ds	1
  2980  00002D                     tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           tblptrl	equ	0xFF6
  2983                           tablat	equ	0xFF5
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           
  2987                           ; 1 bytes @ 0x22
  2988                           
  2989                           	psect	cstackCOMRAMl
  2990  000000                     __pcstackCOMRAMl:
  2991                           	opt stack 0
  2992  000000                     tblptru	equ	0xFF8
  2993                           tblptrh	equ	0xFF7
  2994                           tblptrl	equ	0xFF6
  2995                           tablat	equ	0xFF5
  2996                           postinc0	equ	0xFEE
  2997                           wreg	equ	0xFE8
  2998                           
  2999                           ; 1 bytes @ 0x0
  3000 ;;
  3001 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3002 ;;
  3003 ;; *************** function _main *****************
  3004 ;; Defined at:
  3005 ;;		line 58 in file "main.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  channel         1   18[BANK0 ] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        3 bytes
  3024 ;; Hardware stack levels required when called:   13
  3025 ;; This function calls:
  3026 ;;		_CMP1_GetOutputStatus
  3027 ;;		_DATAEE_ReadByte
  3028 ;;		_SYSTEM_Initialize
  3029 ;;		_butin
  3030 ;;		_credit_add
  3031 ;;		_displ_credit
  3032 ;;		_displ_nochange
  3033 ;;		_displ_noteer
  3034 ;;		_displ_price
  3035 ;;		_enter_service
  3036 ;;		_get_channel
  3037 ;;		_gsm_init
  3038 ;;		_lcd_init
  3039 ;;		_lcd_string
  3040 ;;		_mdb_init
  3041 ;;		_mdb_poll
  3042 ;;		_price_check
  3043 ;;		_vend_init
  3044 ;; This function is called by:
  3045 ;;		Startup code after reset
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text0
  3050  010336                     __ptext0:
  3051                           	opt stack 0
  3052  010336                     _main:
  3053                           	opt stack 18
  3054                           
  3055                           ;main.c: 61: SYSTEM_Initialize();
  3056                           
  3057                           ;incstack = 0
  3058  010336  EC6C  F093         	call	_SYSTEM_Initialize	;wreg free
  3059                           
  3060                           ;main.c: 63: lcd_init();
  3061  01033A  ECD2  F08A         	call	_lcd_init	;wreg free
  3062                           
  3063                           ;main.c: 64: gsm_init();
  3064  01033E  ECBF  F094         	call	_gsm_init	;wreg free
  3065                           
  3066                           ;main.c: 65: vend_init();
  3067  010342  ECEE  F086         	call	_vend_init	;wreg free
  3068  010346                     l1112:
  3069  010346  F000               	nop		;# 
  3070                           
  3071                           ;main.c: 71: DAC1CON1 = 0x01;
  3072  010348  0E01               	movlw	1
  3073  01034A  010F               	movlb	15	; () banked
  3074  01034C  6F34               	movwf	52,b	;volatile
  3075                           
  3076                           ; BSR set to: 15
  3077                           ;main.c: 72: if (!CMP1_GetOutputStatus())
  3078  01034E  EC0E  F096         	call	_CMP1_GetOutputStatus	;wreg free
  3079  010352  0900               	iorlw	0
  3080  010354  B4D8               	btfsc	status,2,c
  3081                           
  3082                           ;main.c: 73: {
  3083                           ;main.c: 74: venflags.service = 1;
  3084  010356  8E2D               	bsf	_venflags,7,c
  3085                           
  3086                           ;main.c: 76: }
  3087                           ;main.c: 77: DAC1CON1 = sensorval;
  3088  010358  C036  FF34         	movff	_sensorval,3892	;volatile
  3089                           
  3090                           ;main.c: 79: if(venflags.service == 1)
  3091  01035C  BE2D               	btfsc	_venflags,7,c
  3092                           
  3093                           ;main.c: 80: {
  3094                           ;main.c: 81: enter_service();
  3095  01035E  EC28  F08B         	call	_enter_service	;wreg free
  3096                           
  3097                           ;main.c: 82: }
  3098                           ;main.c: 84: if(venflags.inscoin == 1)
  3099  010362  A42D               	btfss	_venflags,2,c
  3100  010364  D013               	goto	l1116
  3101                           
  3102                           ;main.c: 85: {
  3103                           ;main.c: 86: lcd_string(inscoin, line1);
  3104  010366  0E26               	movlw	low _inscoin
  3105  010368  6E24               	movwf	lcd_string@lcdstring,c
  3106  01036A  0EFE               	movlw	high _inscoin
  3107  01036C  6E25               	movwf	lcd_string@lcdstring+1,c
  3108  01036E  0E4A               	movlw	low _line1
  3109  010370  6EF6               	movwf	tblptrl,c
  3110  010372                     	if	1	;There is more than 1 active tblptr byte
  3111  010372  0EFC               	movlw	high _line1
  3112  010374  6EF7               	movwf	tblptrh,c
  3113  010376                     	endif
  3114  010376                     	if	1	;There are 3 active tblptr bytes
  3115  010376  0E00               	movlw	low (_line1 shr (0+16))
  3116  010378  6EF8               	movwf	tblptru,c
  3117  01037A                     	endif
  3118  01037A  0008               	tblrd		*
  3119  01037C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3120  010380  EC78  F08A         	call	_lcd_string	;wreg free
  3121                           
  3122                           ;main.c: 87: venflags.inscoin = 0;
  3123  010384  942D               	bcf	_venflags,2,c
  3124                           
  3125                           ;main.c: 88: if(venflags.nochange)
  3126  010386  B62D               	btfsc	_venflags,3,c
  3127                           
  3128                           ;main.c: 89: {
  3129                           ;main.c: 90: displ_nochange();
  3130  010388  EC2B  F094         	call	_displ_nochange	;wreg free
  3131  01038C                     l1116:
  3132                           
  3133                           ;main.c: 91: }
  3134                           ;main.c: 92: }
  3135                           ;main.c: 93: if(venflags.initialrun == 1)
  3136  01038C  BA2D               	btfsc	_venflags,5,c
  3137                           
  3138                           ;main.c: 94: {
  3139                           ;main.c: 95: venflags.initialrun = 0;
  3140  01038E  9A2D               	bcf	_venflags,5,c
  3141                           
  3142                           ;main.c: 97: }
  3143                           ;main.c: 98: if(venflags.credisplay == 1)
  3144  010390  A82D               	btfss	_venflags,4,c
  3145  010392  D005               	goto	l1119
  3146                           
  3147                           ;main.c: 99: {
  3148                           ;main.c: 100: displ_credit();
  3149  010394  EC45  F094         	call	_displ_credit	;wreg free
  3150                           
  3151                           ;main.c: 101: if(venflags.nochange)
  3152  010398  B62D               	btfsc	_venflags,3,c
  3153                           
  3154                           ;main.c: 102: {
  3155                           ;main.c: 103: displ_nochange();
  3156  01039A  EC2B  F094         	call	_displ_nochange	;wreg free
  3157  01039E                     l1119:
  3158                           
  3159                           ;main.c: 104: }
  3160                           ;main.c: 105: }
  3161                           ;main.c: 107: if(PIR4bits.TMR3IF)
  3162  01039E  010E               	movlb	14	; () banked
  3163  0103A0  A5CE               	btfss	206,2,b	;volatile
  3164  0103A2  D02B               	goto	l1134
  3165                           
  3166                           ; BSR set to: 14
  3167                           ;main.c: 108: {
  3168                           ;main.c: 109: credit = mdb_poll();
  3169  0103A4  EC4B  F082         	call	_mdb_poll	;wreg free
  3170  0103A8  6E3A               	movwf	_credit,c	;volatile
  3171                           
  3172                           ;main.c: 110: if(credit != 0x00)
  3173  0103AA  503A               	movf	_credit,w,c	;volatile
  3174  0103AC  B4D8               	btfsc	status,2,c
  3175  0103AE  D022               	goto	l1121
  3176                           
  3177                           ;main.c: 111: {
  3178                           ;main.c: 112: if(mdbflags.noteerr == 1)
  3179  0103B0  B23F               	btfsc	_mdbflags,1,c
  3180  0103B2  D00D               	goto	l1123
  3181  0103B4  D01A               	goto	l1122
  3182  0103B6  EC50  F08F         	call	_mdb_init	;wreg free
  3183  0103BA  D003               	goto	l1129
  3184  0103BC                     l1126:
  3185                           
  3186                           ;main.c: 123: if(mdbflags.vending)
  3187  0103BC  A83F               	btfss	_mdbflags,4,c
  3188                           
  3189                           ;main.c: 127: else
  3190                           ;main.c: 128: {
  3191                           ;main.c: 129: mdb_init();
  3192                           
  3193                           ;main.c: 126: }
  3194                           
  3195                           ;main.c: 124: {
  3196                           ;main.c: 125: credit = 0;
  3197  0103BE  EC50  F08F         	call	_mdb_init	;wreg free
  3198  0103C2                     l1129:
  3199                           
  3200                           ;main.c: 137: credit = 0;
  3201                           
  3202                           ;main.c: 136: case 0x0C : mdbflags.noteerr == 0;
  3203                           
  3204                           ;main.c: 135: break;
  3205                           
  3206                           ;main.c: 134: credit = 0;
  3207  0103C2  0E00               	movlw	0
  3208  0103C4  6E3A               	movwf	_credit,c	;volatile
  3209                           
  3210                           ;main.c: 138: break;
  3211  0103C6  D019               	goto	l1134
  3212  0103C8  EC91  F094         	call	_displ_noteer	;wreg free
  3213                           
  3214                           ;main.c: 140: }
  3215  0103CC  D016               	goto	l1134
  3216  0103CE                     l1123:
  3217  0103CE  503A               	movf	_credit,w,c	;volatile
  3218                           
  3219                           ; Switch size 1, requested type "space"
  3220                           ; Number of cases is 4, Range of values is 6 to 16
  3221                           ; switch strategies available:
  3222                           ; Name         Instructions Cycles
  3223                           ; simple_byte           13     7 (average)
  3224                           ;	Chosen strategy is simple_byte
  3225  0103D0  0A06               	xorlw	6	; case 6
  3226  0103D2  B4D8               	btfsc	status,2,c
  3227  0103D4  D7F0               	goto	l1124
  3228  0103D6  0A0F               	xorlw	15	; case 9
  3229  0103D8  B4D8               	btfsc	status,2,c
  3230  0103DA  D7F0               	goto	l1126
  3231  0103DC  0A05               	xorlw	5	; case 12
  3232  0103DE  B4D8               	btfsc	status,2,c
  3233  0103E0  D7F0               	goto	l1129
  3234  0103E2  0A1C               	xorlw	28	; case 16
  3235  0103E4  B4D8               	btfsc	status,2,c
  3236  0103E6  D7ED               	goto	l1129
  3237  0103E8  D7EF               	goto	l1131
  3238  0103EA                     l1122:
  3239                           
  3240                           ;main.c: 142: else
  3241                           ;main.c: 143: {
  3242                           ;main.c: 144: credit_add(credit);
  3243  0103EA  503A               	movf	_credit,w,c	;volatile
  3244  0103EC  EC76  F090         	call	_credit_add
  3245                           
  3246                           ;main.c: 145: venflags.iscredit = 1;
  3247  0103F0  802D               	bsf	_venflags,0,c
  3248                           
  3249                           ;main.c: 146: }
  3250                           ;main.c: 147: }
  3251  0103F2  D003               	goto	l1134
  3252  0103F4                     l1121:
  3253                           
  3254                           ;main.c: 148: else
  3255                           ;main.c: 149: {
  3256                           ;main.c: 150: if(mdbflags.noteerr == 1)
  3257  0103F4  B23F               	btfsc	_mdbflags,1,c
  3258                           
  3259                           ;main.c: 151: {
  3260                           ;main.c: 152: displ_noteer();
  3261  0103F6  EC91  F094         	call	_displ_noteer	;wreg free
  3262  0103FA                     l1134:
  3263                           
  3264                           ;main.c: 153: }
  3265                           ;main.c: 156: }
  3266                           ;main.c: 157: }
  3267                           ;main.c: 158: if(venflags.iscredit)
  3268  0103FA  A02D               	btfss	_venflags,0,c
  3269  0103FC  D007               	goto	l1135
  3270                           
  3271                           ;main.c: 159: {
  3272                           ;main.c: 160: if(price_check())
  3273  0103FE  ECDD  F080         	call	_price_check	;wreg free
  3274  010402  0900               	iorlw	0
  3275  010404  B4D8               	btfsc	status,2,c
  3276  010406  D79F               	goto	l1112
  3277  010408  00FF               	reset		;# 
  3278                           
  3279                           ;main.c: 163: }
  3280                           ;main.c: 164: }
  3281  01040A  D79D               	goto	l1112
  3282  01040C                     l1135:
  3283                           
  3284                           ;main.c: 165: else
  3285                           ;main.c: 166: {
  3286                           ;main.c: 167: if(butin() != 0)
  3287  01040C  ECEA  F091         	call	_butin	;wreg free
  3288  010410  0900               	iorlw	0
  3289  010412  B4D8               	btfsc	status,2,c
  3290  010414  D03B               	goto	l1138
  3291                           
  3292                           ;main.c: 168: {
  3293                           ;main.c: 170: buttons = butin();
  3294  010416  ECEA  F091         	call	_butin	;wreg free
  3295  01041A  6E38               	movwf	_buttons,c	;volatile
  3296                           
  3297                           ;main.c: 171: if(((buttons & ~errormask) == 0x00) && !venflags.pricedisplay)
  3298  01041C  5031               	movf	_errormask,w,c	;volatile
  3299  01041E  0AFF               	xorlw	255
  3300  010420  1438               	andwf	_buttons,w,c	;volatile
  3301  010422  0900               	iorlw	0
  3302  010424  B4D8               	btfsc	status,2,c
  3303  010426  B42F               	btfsc	_venflags+2,2,c
  3304  010428  D010               	goto	l1139
  3305                           
  3306                           ;main.c: 172: {
  3307                           ;main.c: 173: lcd_string(emptymsg, line1);
  3308  01042A  0EBA               	movlw	low _emptymsg
  3309  01042C  6E24               	movwf	lcd_string@lcdstring,c
  3310  01042E  0EFF               	movlw	high _emptymsg
  3311  010430  6E25               	movwf	lcd_string@lcdstring+1,c
  3312  010432  0E4A               	movlw	low _line1
  3313  010434  6EF6               	movwf	tblptrl,c
  3314  010436                     	if	1	;There is more than 1 active tblptr byte
  3315  010436  0EFC               	movlw	high _line1
  3316  010438  6EF7               	movwf	tblptrh,c
  3317  01043A                     	endif
  3318  01043A                     	if	1	;There are 3 active tblptr bytes
  3319  01043A  0E00               	movlw	low (_line1 shr (0+16))
  3320  01043C  6EF8               	movwf	tblptru,c
  3321  01043E                     	endif
  3322  01043E  0008               	tblrd		*
  3323  010440  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3324  010444  EC78  F08A         	call	_lcd_string	;wreg free
  3325                           
  3326                           ;main.c: 174: venflags.pricedisplay = 1;
  3327  010448  842F               	bsf	_venflags+2,2,c
  3328  01044A                     l1139:
  3329                           
  3330                           ;main.c: 175: }
  3331                           ;main.c: 176: if(!venflags.pricedisplay)
  3332  01044A  B42F               	btfsc	_venflags+2,2,c
  3333  01044C  D77C               	goto	l1112
  3334                           
  3335                           ;main.c: 177: {
  3336                           ;main.c: 178: uint8_t channel = get_channel(buttons);
  3337  01044E  5038               	movf	_buttons,w,c	;volatile
  3338  010450  EC3E  F095         	call	_get_channel
  3339  010454  0100               	movlb	0	; () banked
  3340  010456  6FC4               	movwf	main@channel& (0+255),b
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;main.c: 179: vendprice = DATAEE_ReadByte(pricestore + channel);
  3344  010458  0E13               	movlw	low _pricestore
  3345  01045A  6EF6               	movwf	tblptrl,c
  3346  01045C                     	if	1	;There is more than 1 active tblptr byte
  3347  01045C  0EFC               	movlw	high _pricestore
  3348  01045E  6EF7               	movwf	tblptrh,c
  3349  010460                     	endif
  3350  010460                     	if	1	;There are 3 active tblptr bytes
  3351  010460  0E00               	movlw	low (_pricestore shr (0+16))
  3352  010462  6EF8               	movwf	tblptru,c
  3353  010464                     	endif
  3354  010464  0009               	tblrd		*+
  3355  010466  CFF5 F0C2          	movff	tablat,??_main
  3356  01046A  0009               	tblrd		*+
  3357  01046C  CFF5 F0C3          	movff	tablat,??_main+1
  3358  010470  51C4               	movf	main@channel& (0+255),w,b
  3359  010472  25C2               	addwf	??_main& (0+255),w,b
  3360  010474  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  3361  010476  0E00               	movlw	0
  3362  010478  21C3               	addwfc	(??_main+1)& (0+255),w,b
  3363  01047A  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  3364  01047C  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3365  010480  6E37               	movwf	_vendprice,c	;volatile
  3366                           
  3367                           ;main.c: 180: displ_price(vendprice);
  3368  010482  5037               	movf	_vendprice,w,c	;volatile
  3369  010484  ECB5  F092         	call	_displ_price
  3370                           
  3371                           ;main.c: 181: venflags.pricedisplay = 1;
  3372  010488  842F               	bsf	_venflags+2,2,c
  3373                           
  3374                           ;main.c: 182: }
  3375                           ;main.c: 183: }
  3376  01048A  D75D               	goto	l1112
  3377  01048C                     l1138:
  3378                           
  3379                           ;main.c: 184: else
  3380                           ;main.c: 185: {
  3381                           ;main.c: 186: if(venflags.pricedisplay)
  3382  01048C  A42F               	btfss	_venflags+2,2,c
  3383  01048E  D75B               	goto	l1112
  3384                           
  3385                           ;main.c: 187: {
  3386                           ;main.c: 188: venflags.pricedisplay = 0;
  3387  010490  942F               	bcf	_venflags+2,2,c
  3388                           
  3389                           ;main.c: 189: venflags.inscoin = 1;
  3390  010492  842D               	bsf	_venflags,2,c
  3391  010494  D758               	goto	l1112
  3392  010496                     __end_of_main:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           status	equ	0xFD8
  3401                           
  3402 ;; *************** function _vend_init *****************
  3403 ;; Defined at:
  3404 ;;		line 33 in file "vend.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;Total ram usage:        0 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    8
  3425 ;; This function calls:
  3426 ;;		_DAC1_SetOutput
  3427 ;;		_DATAEE_ReadByte
  3428 ;;		_Init_vendmem
  3429 ;;		_credit_check
  3430 ;;		_find_highprice
  3431 ;;		_find_lowprice
  3432 ;;		_lcd_string
  3433 ;;		_mdb_init
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text1
  3440  010DDC                     __ptext1:
  3441                           	opt stack 0
  3442  010DDC                     _vend_init:
  3443                           	opt stack 22
  3444                           
  3445                           ;vend.c: 36: ((uint8_t*) &venderr)[0] = DATAEE_ReadByte(venderrors);
  3446                           
  3447                           ;incstack = 0
  3448  010DDC  0E11               	movlw	low _venderrors
  3449  010DDE  6EF6               	movwf	tblptrl,c
  3450  010DE0                     	if	1	;There is more than 1 active tblptr byte
  3451  010DE0  0EFC               	movlw	high _venderrors
  3452  010DE2  6EF7               	movwf	tblptrh,c
  3453  010DE4                     	endif
  3454  010DE4                     	if	1	;There are 3 active tblptr bytes
  3455  010DE4  0E00               	movlw	low (_venderrors shr (0+16))
  3456  010DE6  6EF8               	movwf	tblptru,c
  3457  010DE8                     	endif
  3458  010DE8  0009               	tblrd		*+
  3459  010DEA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3460  010DEE  000A               	tblrd		*-
  3461  010DF0  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3462  010DF4  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3463  010DF8  0100               	movlb	0	; () banked
  3464  010DFA  6FA7               	movwf	_venderr& (0+255),b
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;vend.c: 37: venflags.hiprice = 0;
  3468  010DFC  982F               	bcf	_venflags+2,4,c
  3469                           
  3470                           ;vend.c: 39: if(DATAEE_ReadByte(hoperror) != 0)
  3471  010DFE  0EE3               	movlw	low _hoperror
  3472  010E00  6EF6               	movwf	tblptrl,c
  3473  010E02                     	if	1	;There is more than 1 active tblptr byte
  3474  010E02  0EFB               	movlw	high _hoperror
  3475  010E04  6EF7               	movwf	tblptrh,c
  3476  010E06                     	endif
  3477  010E06                     	if	1	;There are 3 active tblptr bytes
  3478  010E06  0E00               	movlw	low (_hoperror shr (0+16))
  3479  010E08  6EF8               	movwf	tblptru,c
  3480  010E0A                     	endif
  3481  010E0A  0009               	tblrd		*+
  3482  010E0C  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3483  010E10  000A               	tblrd		*-
  3484  010E12  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3485  010E16  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3486  010E1A  0900               	iorlw	0
  3487  010E1C  B4D8               	btfsc	status,2,c
  3488  010E1E  D002               	goto	l2188
  3489                           
  3490                           ;vend.c: 40: {
  3491                           ;vend.c: 41: venflags.nochange = 1;
  3492  010E20  862D               	bsf	_venflags,3,c
  3493                           
  3494                           ;vend.c: 42: }
  3495  010E22  D001               	goto	l2189
  3496  010E24                     l2188:
  3497                           
  3498                           ;vend.c: 43: else
  3499                           ;vend.c: 44: {
  3500                           ;vend.c: 45: venflags.nochange = 0;
  3501  010E24  962D               	bcf	_venflags,3,c
  3502  010E26                     l2189:
  3503                           
  3504                           ;vend.c: 46: }
  3505                           ;vend.c: 48: Init_vendmem();
  3506  010E26  EC66  F089         	call	_Init_vendmem	;wreg free
  3507                           
  3508                           ;vend.c: 49: find_highprice();
  3509  010E2A  EC95  F092         	call	_find_highprice	;wreg free
  3510                           
  3511                           ;vend.c: 50: find_lowprice();
  3512  010E2E  EC75  F092         	call	_find_lowprice	;wreg free
  3513                           
  3514                           ;vend.c: 52: sensorval = DATAEE_ReadByte(sensval);
  3515  010E32  0E0D               	movlw	low _sensval
  3516  010E34  6EF6               	movwf	tblptrl,c
  3517  010E36                     	if	1	;There is more than 1 active tblptr byte
  3518  010E36  0EFC               	movlw	high _sensval
  3519  010E38  6EF7               	movwf	tblptrh,c
  3520  010E3A                     	endif
  3521  010E3A                     	if	1	;There are 3 active tblptr bytes
  3522  010E3A  0E00               	movlw	low (_sensval shr (0+16))
  3523  010E3C  6EF8               	movwf	tblptru,c
  3524  010E3E                     	endif
  3525  010E3E  0009               	tblrd		*+
  3526  010E40  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3527  010E44  000A               	tblrd		*-
  3528  010E46  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3529  010E4A  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3530  010E4E  6E36               	movwf	_sensorval,c	;volatile
  3531                           
  3532                           ;vend.c: 53: DAC1_SetOutput(sensorval);
  3533  010E50  5036               	movf	_sensorval,w,c	;volatile
  3534  010E52  EC2C  F096         	call	_DAC1_SetOutput
  3535                           
  3536                           ;vend.c: 54: errormask = DATAEE_ReadByte(venderrors);
  3537  010E56  0E11               	movlw	low _venderrors
  3538  010E58  6EF6               	movwf	tblptrl,c
  3539  010E5A                     	if	1	;There is more than 1 active tblptr byte
  3540  010E5A  0EFC               	movlw	high _venderrors
  3541  010E5C  6EF7               	movwf	tblptrh,c
  3542  010E5E                     	endif
  3543  010E5E                     	if	1	;There are 3 active tblptr bytes
  3544  010E5E  0E00               	movlw	low (_venderrors shr (0+16))
  3545  010E60  6EF8               	movwf	tblptru,c
  3546  010E62                     	endif
  3547  010E62  0009               	tblrd		*+
  3548  010E64  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3549  010E68  000A               	tblrd		*-
  3550  010E6A  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3551  010E6E  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3552  010E72  6E31               	movwf	_errormask,c	;volatile
  3553                           
  3554                           ;vend.c: 59: lcd_string(initnote, line1);
  3555  010E74  0E4D               	movlw	low _initnote
  3556  010E76  6E24               	movwf	lcd_string@lcdstring,c
  3557  010E78  0EFE               	movlw	high _initnote
  3558  010E7A  6E25               	movwf	lcd_string@lcdstring+1,c
  3559  010E7C  0E4A               	movlw	low _line1
  3560  010E7E  6EF6               	movwf	tblptrl,c
  3561  010E80                     	if	1	;There is more than 1 active tblptr byte
  3562  010E80  0EFC               	movlw	high _line1
  3563  010E82  6EF7               	movwf	tblptrh,c
  3564  010E84                     	endif
  3565  010E84                     	if	1	;There are 3 active tblptr bytes
  3566  010E84  0E00               	movlw	low (_line1 shr (0+16))
  3567  010E86  6EF8               	movwf	tblptru,c
  3568  010E88                     	endif
  3569  010E88  0008               	tblrd		*
  3570  010E8A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3571  010E8E  EC78  F08A         	call	_lcd_string	;wreg free
  3572                           
  3573                           ;vend.c: 60: mdb_init();
  3574  010E92  EC50  F08F         	call	_mdb_init	;wreg free
  3575                           
  3576                           ;vend.c: 62: venflags.pricedisplay = 0;
  3577  010E96  942F               	bcf	_venflags+2,2,c
  3578                           
  3579                           ;vend.c: 63: venflags.service = 0;
  3580  010E98  9E2D               	bcf	_venflags,7,c
  3581                           
  3582                           ;vend.c: 64: venflags.initialrun = 1;
  3583  010E9A  8A2D               	bsf	_venflags,5,c
  3584                           
  3585                           ;vend.c: 65: if(credit_check() == 0)
  3586  010E9C  EC0E  F095         	call	_credit_check	;wreg free
  3587  010EA0  0900               	iorlw	0
  3588  010EA2  A4D8               	btfss	status,2,c
  3589  010EA4  D004               	goto	l2190
  3590                           
  3591                           ;vend.c: 66: {
  3592                           ;vend.c: 67: venflags.iscredit = 0;
  3593  010EA6  902D               	bcf	_venflags,0,c
  3594                           
  3595                           ;vend.c: 68: venflags.inscoin = 1;
  3596  010EA8  842D               	bsf	_venflags,2,c
  3597                           
  3598                           ;vend.c: 69: venflags.credisplay = 0;
  3599  010EAA  982D               	bcf	_venflags,4,c
  3600  010EAC  D003               	goto	L1
  3601  010EAE                     l2190:
  3602                           
  3603                           ;vend.c: 72: else
  3604                           ;vend.c: 73: {
  3605                           ;vend.c: 74: venflags.iscredit = 1;
  3606  010EAE  802D               	bsf	_venflags,0,c
  3607                           
  3608                           ;vend.c: 75: venflags.inscoin = 0;
  3609  010EB0  942D               	bcf	_venflags,2,c
  3610                           
  3611                           ;vend.c: 76: venflags.credisplay = 1;
  3612  010EB2  882D               	bsf	_venflags,4,c
  3613  010EB4                     L1:
  3614                           
  3615                           ;vend.c: 77: mdbflags.noteerr = 0;
  3616  010EB4  923F               	bcf	_mdbflags,1,c
  3617                           
  3618                           ;vend.c: 78: }
  3619                           ;vend.c: 80: LATAbits.LA5 = 0;
  3620  010EB6  9A83               	bcf	3971,5,c	;volatile
  3621                           
  3622                           ;vend.c: 82: LATCbits.LC2 = 1;
  3623  010EB8  8485               	bsf	3973,2,c	;volatile
  3624  010EBA  0012               	return		;funcret
  3625  010EBC                     __end_of_vend_init:
  3626                           	opt stack 0
  3627                           tblptru	equ	0xFF8
  3628                           tblptrh	equ	0xFF7
  3629                           tblptrl	equ	0xFF6
  3630                           tablat	equ	0xFF5
  3631                           postinc0	equ	0xFEE
  3632                           wreg	equ	0xFE8
  3633                           status	equ	0xFD8
  3634                           
  3635 ;; *************** function _mdb_init *****************
  3636 ;; Defined at:
  3637 ;;		line 24 in file "mdb.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  i               1   33[COMRAM] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:        3 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    7
  3658 ;; This function calls:
  3659 ;;		_DATAEE_ReadByte
  3660 ;;		_eusartmdb_Initialize
  3661 ;;		_mdb_comm
  3662 ;;		_mdb_noten
  3663 ;;		_mdb_reset
  3664 ;;		_mdb_security
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;;		_vend_init
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text2
  3672  011EA0                     __ptext2:
  3673                           	opt stack 0
  3674  011EA0                     _mdb_init:
  3675                           	opt stack 22
  3676                           
  3677                           ;mdb.c: 26: _delay((unsigned long)((250)*(12000000/4000.0)));
  3678                           
  3679                           ;incstack = 0
  3680  011EA0  0E04               	movlw	4
  3681  011EA2  6E2B               	movwf	(??_mdb_init+1)& (0+255),c
  3682  011EA4  0ECF               	movlw	207
  3683  011EA6  6E2A               	movwf	??_mdb_init& (0+255),c
  3684  011EA8  0E02               	movlw	2
  3685  011EAA                     u5737:
  3686  011EAA  2EE8               	decfsz	wreg,f,c
  3687  011EAC  D7FE               	bra	u5737
  3688  011EAE  2E2A               	decfsz	??_mdb_init& (0+255),f,c
  3689  011EB0  D7FC               	bra	u5737
  3690  011EB2  2E2B               	decfsz	(??_mdb_init+1)& (0+255),f,c
  3691  011EB4  D7FA               	bra	u5737
  3692                           
  3693                           ;mdb.c: 27: noteen_byte = DATAEE_ReadByte(notebits);
  3694  011EB6  0E0F               	movlw	low _notebits
  3695  011EB8  6EF6               	movwf	tblptrl,c
  3696  011EBA                     	if	1	;There is more than 1 active tblptr byte
  3697  011EBA  0EFC               	movlw	high _notebits
  3698  011EBC  6EF7               	movwf	tblptrh,c
  3699  011EBE                     	endif
  3700  011EBE                     	if	1	;There are 3 active tblptr bytes
  3701  011EBE  0E00               	movlw	low (_notebits shr (0+16))
  3702  011EC0  6EF8               	movwf	tblptru,c
  3703  011EC2                     	endif
  3704  011EC2  0009               	tblrd		*+
  3705  011EC4  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3706  011EC8  000A               	tblrd		*-
  3707  011ECA  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3708  011ECE  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3709  011ED2  6E3D               	movwf	_noteen_byte,c	;volatile
  3710                           
  3711                           ;mdb.c: 28: ((uint8_t*) &noteen)[0] = noteen_byte;
  3712  011ED4  C03D  F03E         	movff	_noteen_byte,_noteen	;volatile
  3713                           
  3714                           ;mdb.c: 29: eusartmdb_Initialize();
  3715  011ED8  ECA4  F095         	call	_eusartmdb_Initialize	;wreg free
  3716                           
  3717                           ;mdb.c: 30: mdbflags.noteerr = 0;
  3718  011EDC  923F               	bcf	_mdbflags,1,c
  3719                           
  3720                           ;mdb.c: 31: mdbflags.isdata = 0;
  3721  011EDE  903F               	bcf	_mdbflags,0,c
  3722                           
  3723                           ;mdb.c: 32: mdb_reset();
  3724  011EE0  EC26  F08D         	call	_mdb_reset	;wreg free
  3725                           
  3726                           ;mdb.c: 33: mdb_noten();
  3727  011EE4  EC33  F092         	call	_mdb_noten	;wreg free
  3728                           
  3729                           ;mdb.c: 34: mdb_security();
  3730  011EE8  EC1F  F095         	call	_mdb_security	;wreg free
  3731                           
  3732                           ;mdb.c: 35: uint8_t i = mdb_comm(note_poll, 0x00);
  3733  011EEC  0E00               	movlw	0
  3734  011EEE  6E24               	movwf	mdb_comm@mcount,c
  3735  011EF0  0E43               	movlw	low _note_poll
  3736  011EF2  6EF6               	movwf	tblptrl,c
  3737  011EF4                     	if	1	;There is more than 1 active tblptr byte
  3738  011EF4  0EFC               	movlw	high _note_poll
  3739  011EF6  6EF7               	movwf	tblptrh,c
  3740  011EF8                     	endif
  3741  011EF8                     	if	1	;There are 3 active tblptr bytes
  3742  011EF8  0E00               	movlw	low (_note_poll shr (0+16))
  3743  011EFA  6EF8               	movwf	tblptru,c
  3744  011EFC                     	endif
  3745  011EFC  0008               	tblrd		*
  3746  011EFE  50F5               	movf	tablat,w,c
  3747  011F00  EC03  F085         	call	_mdb_comm
  3748  011F04  6E2C               	movwf	mdb_init@i,c
  3749  011F06  0012               	return		;funcret
  3750  011F08                     __end_of_mdb_init:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           postinc0	equ	0xFEE
  3757                           wreg	equ	0xFE8
  3758                           status	equ	0xFD8
  3759                           
  3760 ;; *************** function _mdb_security *****************
  3761 ;; Defined at:
  3762 ;;		line 158 in file "mdb.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    6
  3783 ;; This function calls:
  3784 ;;		_init_mdbdata
  3785 ;;		_mdb_comm
  3786 ;; This function is called by:
  3787 ;;		_mdb_init
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text3
  3792  012A3E                     __ptext3:
  3793                           	opt stack 0
  3794  012A3E                     _mdb_security:
  3795                           	opt stack 22
  3796                           
  3797                           ;mdb.c: 160: init_mdbdata(0x00);
  3798                           
  3799                           ;incstack = 0
  3800  012A3E  0E00               	movlw	0
  3801  012A40  ECD5  F094         	call	_init_mdbdata
  3802                           
  3803                           ;mdb.c: 161: mdb_comm(note_security, 0x01);
  3804  012A44  0E01               	movlw	1
  3805  012A46  6E24               	movwf	mdb_comm@mcount,c
  3806  012A48  0E44               	movlw	low _note_security
  3807  012A4A  6EF6               	movwf	tblptrl,c
  3808  012A4C                     	if	1	;There is more than 1 active tblptr byte
  3809  012A4C  0EFC               	movlw	high _note_security
  3810  012A4E  6EF7               	movwf	tblptrh,c
  3811  012A50                     	endif
  3812  012A50                     	if	1	;There are 3 active tblptr bytes
  3813  012A50  0E00               	movlw	low (_note_security shr (0+16))
  3814  012A52  6EF8               	movwf	tblptru,c
  3815  012A54                     	endif
  3816  012A54  0008               	tblrd		*
  3817  012A56  50F5               	movf	tablat,w,c
  3818  012A58  EC03  F085         	call	_mdb_comm
  3819  012A5C  0012               	return		;funcret
  3820  012A5E                     __end_of_mdb_security:
  3821                           	opt stack 0
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           postinc0	equ	0xFEE
  3827                           wreg	equ	0xFE8
  3828                           status	equ	0xFD8
  3829                           
  3830 ;; *************** function _mdb_reset *****************
  3831 ;; Defined at:
  3832 ;;		line 39 in file "mdb.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  i               1   29[COMRAM] unsigned char 
  3837 ;;  i               1   30[COMRAM] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      unsigned char 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;Total ram usage:        3 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    6
  3854 ;; This function calls:
  3855 ;;		_mdb_comm
  3856 ;; This function is called by:
  3857 ;;		_mdb_init
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text4
  3862  011A4C                     __ptext4:
  3863                           	opt stack 0
  3864  011A4C                     _mdb_reset:
  3865                           	opt stack 22
  3866                           
  3867                           ;mdb.c: 44: mdbflags.timeout = 1;
  3868                           
  3869                           ;incstack = 0
  3870  011A4C  863F               	bsf	_mdbflags,3,c
  3871                           
  3872                           ;mdb.c: 45: while(mdbflags.timeout)
  3873  011A4E  D00D               	goto	l2933
  3874  011A50                     
  3875                           ;mdb.c: 46: {
  3876                           ;mdb.c: 47: uint8_t i = mdb_comm(note_reset, 0x00);
  3877  011A50  0E00               	movlw	0
  3878  011A52  6E24               	movwf	mdb_comm@mcount,c
  3879  011A54  0E46               	movlw	low _note_reset
  3880  011A56  6EF6               	movwf	tblptrl,c
  3881  011A58                     	if	1	;There is more than 1 active tblptr byte
  3882  011A58  0EFC               	movlw	high _note_reset
  3883  011A5A  6EF7               	movwf	tblptrh,c
  3884  011A5C                     	endif
  3885  011A5C                     	if	1	;There are 3 active tblptr bytes
  3886  011A5C  0E00               	movlw	low (_note_reset shr (0+16))
  3887  011A5E  6EF8               	movwf	tblptru,c
  3888  011A60                     	endif
  3889  011A60  0008               	tblrd		*
  3890  011A62  50F5               	movf	tablat,w,c
  3891  011A64  EC03  F085         	call	_mdb_comm
  3892  011A68  6E28               	movwf	mdb_reset@i,c
  3893  011A6A                     l2933:
  3894  011A6A  B63F               	btfsc	_mdbflags,3,c
  3895  011A6C  D7F1               	goto	l2934
  3896  011A6E  F000               	nop		;# 
  3897                           
  3898                           ;mdb.c: 50: uint8_t i = mdb_comm(note_poll, 0x00);
  3899  011A70  0E00               	movlw	0
  3900  011A72  6E24               	movwf	mdb_comm@mcount,c
  3901  011A74  0E43               	movlw	low _note_poll
  3902  011A76  6EF6               	movwf	tblptrl,c
  3903  011A78                     	if	1	;There is more than 1 active tblptr byte
  3904  011A78  0EFC               	movlw	high _note_poll
  3905  011A7A  6EF7               	movwf	tblptrh,c
  3906  011A7C                     	endif
  3907  011A7C                     	if	1	;There are 3 active tblptr bytes
  3908  011A7C  0E00               	movlw	low (_note_poll shr (0+16))
  3909  011A7E  6EF8               	movwf	tblptru,c
  3910  011A80                     	endif
  3911  011A80  0008               	tblrd		*
  3912  011A82  50F5               	movf	tablat,w,c
  3913  011A84  EC03  F085         	call	_mdb_comm
  3914  011A88  6E29               	movwf	mdb_reset@i_4062,c
  3915                           
  3916                           ;mdb.c: 51: if(mdbdata[--i] == just_reset)
  3917  011A8A  0629               	decf	mdb_reset@i_4062,f,c
  3918  011A8C  5029               	movf	mdb_reset@i_4062,w,c
  3919  011A8E  0D01               	mullw	1
  3920  011A90  0E60               	movlw	low _mdbdata
  3921  011A92  24F3               	addwf	prodl,w,c
  3922  011A94  6ED9               	movwf	fsr2l,c
  3923  011A96  0E00               	movlw	high _mdbdata
  3924  011A98  20F4               	addwfc	prodh,w,c
  3925  011A9A  6EDA               	movwf	fsr2h,c
  3926  011A9C  50DF               	movf	indf2,w,c
  3927  011A9E  6E27               	movwf	??_mdb_reset& (0+255),c
  3928  011AA0  0E39               	movlw	low _just_reset
  3929  011AA2  6EF6               	movwf	tblptrl,c
  3930  011AA4                     	if	1	;There is more than 1 active tblptr byte
  3931  011AA4  0EFC               	movlw	high _just_reset
  3932  011AA6  6EF7               	movwf	tblptrh,c
  3933  011AA8                     	endif
  3934  011AA8                     	if	1	;There are 3 active tblptr bytes
  3935  011AA8  0E00               	movlw	low (_just_reset shr (0+16))
  3936  011AAA  6EF8               	movwf	tblptru,c
  3937  011AAC                     	endif
  3938  011AAC  0008               	tblrd		*
  3939  011AAE  50F5               	movf	tablat,w,c
  3940  011AB0  1827               	xorwf	??_mdb_reset,w,c
  3941  011AB2  A4D8               	btfss	status,2,c
  3942  011AB4  0012               	return	
  3943                           
  3944                           ;mdb.c: 52: {
  3945                           ;mdb.c: 54: i = mdb_comm(note_poll, 0x00);
  3946  011AB6  0E00               	movlw	0
  3947  011AB8  6E24               	movwf	mdb_comm@mcount,c
  3948  011ABA  0E43               	movlw	low _note_poll
  3949  011ABC  6EF6               	movwf	tblptrl,c
  3950  011ABE                     	if	1	;There is more than 1 active tblptr byte
  3951  011ABE  0EFC               	movlw	high _note_poll
  3952  011AC0  6EF7               	movwf	tblptrh,c
  3953  011AC2                     	endif
  3954  011AC2                     	if	1	;There are 3 active tblptr bytes
  3955  011AC2  0E00               	movlw	low (_note_poll shr (0+16))
  3956  011AC4  6EF8               	movwf	tblptru,c
  3957  011AC6                     	endif
  3958  011AC6  0008               	tblrd		*
  3959  011AC8  50F5               	movf	tablat,w,c
  3960  011ACA  EC03  F085         	call	_mdb_comm
  3961  011ACE  6E29               	movwf	mdb_reset@i_4062,c
  3962  011AD0  0012               	return	
  3963  011AD2                     __end_of_mdb_reset:
  3964                           	opt stack 0
  3965                           tblptru	equ	0xFF8
  3966                           tblptrh	equ	0xFF7
  3967                           tblptrl	equ	0xFF6
  3968                           tablat	equ	0xFF5
  3969                           prodh	equ	0xFF4
  3970                           prodl	equ	0xFF3
  3971                           postinc0	equ	0xFEE
  3972                           wreg	equ	0xFE8
  3973                           indf2	equ	0xFDF
  3974                           fsr2h	equ	0xFDA
  3975                           fsr2l	equ	0xFD9
  3976                           status	equ	0xFD8
  3977                           
  3978 ;; *************** function _eusartmdb_Initialize *****************
  3979 ;; Defined at:
  3980 ;;		line 55 in file "eusart_mdb.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, status,2
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    2
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_mdb_init
  4005 ;;		_cctalk_init
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text5
  4010  012B48                     __ptext5:
  4011                           	opt stack 0
  4012  012B48                     _eusartmdb_Initialize:
  4013                           	opt stack 26
  4014                           
  4015                           ;eusart_mdb.c: 60: BAUD1CON = 0x08;
  4016                           
  4017                           ;incstack = 0
  4018  012B48  0E08               	movlw	8
  4019  012B4A  6E9F               	movwf	3999,c	;volatile
  4020                           
  4021                           ;eusart_mdb.c: 63: RC1STA = 0xD0;
  4022  012B4C  0ED0               	movlw	208
  4023  012B4E  6E9D               	movwf	3997,c	;volatile
  4024                           
  4025                           ;eusart_mdb.c: 66: TX1STA = 0xEC;
  4026  012B50  0EEC               	movlw	236
  4027  012B52  6E9E               	movwf	3998,c	;volatile
  4028                           
  4029                           ;eusart_mdb.c: 69: SP1BRGL = 0x38;
  4030  012B54  0E38               	movlw	56
  4031  012B56  6E9B               	movwf	3995,c	;volatile
  4032                           
  4033                           ;eusart_mdb.c: 72: SP1BRGH = 0x01;
  4034  012B58  0E01               	movlw	1
  4035  012B5A  6E9C               	movwf	3996,c	;volatile
  4036  012B5C  0012               	return		;funcret
  4037  012B5E                     __end_of_eusartmdb_Initialize:
  4038                           	opt stack 0
  4039                           tblptru	equ	0xFF8
  4040                           tblptrh	equ	0xFF7
  4041                           tblptrl	equ	0xFF6
  4042                           tablat	equ	0xFF5
  4043                           prodh	equ	0xFF4
  4044                           prodl	equ	0xFF3
  4045                           postinc0	equ	0xFEE
  4046                           wreg	equ	0xFE8
  4047                           indf2	equ	0xFDF
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _find_lowprice *****************
  4053 ;; Defined at:
  4054 ;;		line 201 in file "dispense.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  i               1   19[COMRAM] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;Total ram usage:        2 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    2
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_vend_init
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text6
  4083  0124EA                     __ptext6:
  4084                           	opt stack 0
  4085  0124EA                     _find_lowprice:
  4086                           	opt stack 27
  4087                           
  4088                           ;dispense.c: 203: char i = 0;
  4089                           
  4090                           ;incstack = 0
  4091  0124EA  0E00               	movlw	0
  4092  0124EC  6E1E               	movwf	find_lowprice@i,c
  4093                           
  4094                           ;dispense.c: 204: lowprice = pricevend[0];
  4095  0124EE  C07F  F033         	movff	_pricevend,_lowprice	;volatile
  4096                           
  4097                           ;dispense.c: 205: while(i < 8)
  4098  0124F2  D017               	goto	l4518
  4099  0124F4                     
  4100                           ;dispense.c: 206: {
  4101                           ;dispense.c: 207: if(lowprice > pricevend[i])
  4102  0124F4  501E               	movf	find_lowprice@i,w,c
  4103  0124F6  0D01               	mullw	1
  4104  0124F8  0E7F               	movlw	low _pricevend
  4105  0124FA  24F3               	addwf	prodl,w,c
  4106  0124FC  6ED9               	movwf	fsr2l,c
  4107  0124FE  0E00               	movlw	high _pricevend
  4108  012500  20F4               	addwfc	prodh,w,c
  4109  012502  6EDA               	movwf	fsr2h,c
  4110  012504  5033               	movf	_lowprice,w,c	;volatile
  4111  012506  5CDE               	subwf	postinc2,w,c
  4112  012508  B0D8               	btfsc	status,0,c
  4113  01250A  D00A               	goto	l4520
  4114                           
  4115                           ;dispense.c: 208: {
  4116                           ;dispense.c: 209: lowprice = pricevend[i];
  4117  01250C  501E               	movf	find_lowprice@i,w,c
  4118  01250E  0D01               	mullw	1
  4119  012510  0E7F               	movlw	low _pricevend
  4120  012512  24F3               	addwf	prodl,w,c
  4121  012514  6ED9               	movwf	fsr2l,c
  4122  012516  0E00               	movlw	high _pricevend
  4123  012518  20F4               	addwfc	prodh,w,c
  4124  01251A  6EDA               	movwf	fsr2h,c
  4125  01251C  50DF               	movf	indf2,w,c
  4126  01251E  6E33               	movwf	_lowprice,c	;volatile
  4127  012520                     l4520:
  4128                           
  4129                           ;dispense.c: 210: }
  4130                           ;dispense.c: 211: i++;
  4131  012520  2A1E               	incf	find_lowprice@i,f,c
  4132  012522                     l4518:
  4133  012522  0E07               	movlw	7
  4134  012524  641E               	cpfsgt	find_lowprice@i,c
  4135  012526  D7E6               	goto	l4519
  4136  012528  0012               	return	
  4137  01252A                     __end_of_find_lowprice:
  4138                           	opt stack 0
  4139                           tblptru	equ	0xFF8
  4140                           tblptrh	equ	0xFF7
  4141                           tblptrl	equ	0xFF6
  4142                           tablat	equ	0xFF5
  4143                           prodh	equ	0xFF4
  4144                           prodl	equ	0xFF3
  4145                           postinc0	equ	0xFEE
  4146                           wreg	equ	0xFE8
  4147                           indf2	equ	0xFDF
  4148                           postinc2	equ	0xFDE
  4149                           fsr2h	equ	0xFDA
  4150                           fsr2l	equ	0xFD9
  4151                           status	equ	0xFD8
  4152                           
  4153 ;; *************** function _find_highprice *****************
  4154 ;; Defined at:
  4155 ;;		line 187 in file "dispense.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  i               1   19[COMRAM] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:        2 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    2
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_vend_init
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text7
  4184  01252A                     __ptext7:
  4185                           	opt stack 0
  4186  01252A                     _find_highprice:
  4187                           	opt stack 27
  4188                           
  4189                           ;dispense.c: 189: char i = 0;
  4190                           
  4191                           ;incstack = 0
  4192  01252A  0E00               	movlw	0
  4193  01252C  6E1E               	movwf	find_highprice@i,c
  4194                           
  4195                           ;dispense.c: 190: highprice = pricevend[0];
  4196  01252E  C07F  F034         	movff	_pricevend,_highprice	;volatile
  4197                           
  4198                           ;dispense.c: 191: while(i < 8)
  4199  012532  D017               	goto	l4511
  4200  012534                     
  4201                           ;dispense.c: 192: {
  4202                           ;dispense.c: 193: if(highprice < pricevend[i])
  4203  012534  501E               	movf	find_highprice@i,w,c
  4204  012536  0D01               	mullw	1
  4205  012538  0E7F               	movlw	low _pricevend
  4206  01253A  24F3               	addwf	prodl,w,c
  4207  01253C  6ED9               	movwf	fsr2l,c
  4208  01253E  0E00               	movlw	high _pricevend
  4209  012540  20F4               	addwfc	prodh,w,c
  4210  012542  6EDA               	movwf	fsr2h,c
  4211  012544  50DE               	movf	postinc2,w,c
  4212  012546  5C34               	subwf	_highprice,w,c	;volatile
  4213  012548  B0D8               	btfsc	status,0,c
  4214  01254A  D00A               	goto	l4513
  4215                           
  4216                           ;dispense.c: 194: {
  4217                           ;dispense.c: 195: highprice = pricevend[i];
  4218  01254C  501E               	movf	find_highprice@i,w,c
  4219  01254E  0D01               	mullw	1
  4220  012550  0E7F               	movlw	low _pricevend
  4221  012552  24F3               	addwf	prodl,w,c
  4222  012554  6ED9               	movwf	fsr2l,c
  4223  012556  0E00               	movlw	high _pricevend
  4224  012558  20F4               	addwfc	prodh,w,c
  4225  01255A  6EDA               	movwf	fsr2h,c
  4226  01255C  50DF               	movf	indf2,w,c
  4227  01255E  6E34               	movwf	_highprice,c	;volatile
  4228  012560                     l4513:
  4229                           
  4230                           ;dispense.c: 196: }
  4231                           ;dispense.c: 197: i++;
  4232  012560  2A1E               	incf	find_highprice@i,f,c
  4233  012562                     l4511:
  4234  012562  0E07               	movlw	7
  4235  012564  641E               	cpfsgt	find_highprice@i,c
  4236  012566  D7E6               	goto	l4512
  4237  012568  0012               	return	
  4238  01256A                     __end_of_find_highprice:
  4239                           	opt stack 0
  4240                           tblptru	equ	0xFF8
  4241                           tblptrh	equ	0xFF7
  4242                           tblptrl	equ	0xFF6
  4243                           tablat	equ	0xFF5
  4244                           prodh	equ	0xFF4
  4245                           prodl	equ	0xFF3
  4246                           postinc0	equ	0xFEE
  4247                           wreg	equ	0xFE8
  4248                           indf2	equ	0xFDF
  4249                           postinc2	equ	0xFDE
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function _DAC1_SetOutput *****************
  4255 ;; Defined at:
  4256 ;;		line 66 in file "mcc_generated_files/dac1.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  inputData       1    wreg     unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  inputData       1   18[COMRAM] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;Total ram usage:        1 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    2
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_vend_init
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text8
  4285  012C58                     __ptext8:
  4286                           	opt stack 0
  4287  012C58                     _DAC1_SetOutput:
  4288                           	opt stack 27
  4289                           
  4290                           ;incstack = 0
  4291                           ;DAC1_SetOutput@inputData stored from wreg
  4292  012C58  6E1D               	movwf	DAC1_SetOutput@inputData,c
  4293                           
  4294                           ;dac1.c: 68: DAC1CON1 = inputData;
  4295  012C5A  C01D  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  4296  012C5E  0012               	return		;funcret
  4297  012C60                     __end_of_DAC1_SetOutput:
  4298                           	opt stack 0
  4299                           tblptru	equ	0xFF8
  4300                           tblptrh	equ	0xFF7
  4301                           tblptrl	equ	0xFF6
  4302                           tablat	equ	0xFF5
  4303                           prodh	equ	0xFF4
  4304                           prodl	equ	0xFF3
  4305                           postinc0	equ	0xFEE
  4306                           wreg	equ	0xFE8
  4307                           indf2	equ	0xFDF
  4308                           postinc2	equ	0xFDE
  4309                           fsr2h	equ	0xFDA
  4310                           fsr2l	equ	0xFD9
  4311                           status	equ	0xFD8
  4312                           
  4313 ;; *************** function _price_check *****************
  4314 ;; Defined at:
  4315 ;;		line 10 in file "dispense.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  chanlinkbit     1    6[BANK0 ] unsigned char 
  4320 ;;  savebut         1    5[BANK0 ] unsigned char 
  4321 ;;  savechan        1    4[BANK0 ] unsigned char 
  4322 ;;  i               1    7[BANK0 ] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      unsigned char 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;Total ram usage:        6 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    8
  4339 ;; This function calls:
  4340 ;;		_DATAEE_ReadByte
  4341 ;;		_butin
  4342 ;;		_credit_check
  4343 ;;		_credit_subtract
  4344 ;;		_dispense
  4345 ;;		_get_channel
  4346 ;;		_give_change
  4347 ;;		_lcd_string
  4348 ;;		_note_disable
  4349 ;; This function is called by:
  4350 ;;		_main
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text9
  4355  0101BA                     __ptext9:
  4356                           	opt stack 0
  4357  0101BA                     _price_check:
  4358                           	opt stack 22
  4359                           
  4360                           ;dispense.c: 13: channel = 0x00;
  4361                           
  4362                           ;incstack = 0
  4363  0101BA  0E00               	movlw	0
  4364  0101BC  6E30               	movwf	_channel,c	;volatile
  4365                           
  4366                           ;dispense.c: 14: cash = credit_check();
  4367  0101BE  EC0E  F095         	call	_credit_check	;wreg free
  4368  0101C2  6E39               	movwf	_cash,c	;volatile
  4369                           
  4370                           ;dispense.c: 15: if(lowprice > cash)
  4371  0101C4  5033               	movf	_lowprice,w,c	;volatile
  4372  0101C6  5C39               	subwf	_cash,w,c	;volatile
  4373  0101C8  B0D8               	btfsc	status,0,c
  4374  0101CA  D002               	goto	l4467
  4375                           
  4376                           ;dispense.c: 16: {
  4377                           ;dispense.c: 17: return 0;
  4378  0101CC  0E00               	movlw	0
  4379  0101CE  0012               	return	
  4380  0101D0                     l4467:
  4381                           
  4382                           ;dispense.c: 18: }
  4383                           ;dispense.c: 19: if(highprice <= cash && !venflags.hiprice)
  4384  0101D0  5034               	movf	_highprice,w,c	;volatile
  4385  0101D2  5C39               	subwf	_cash,w,c	;volatile
  4386  0101D4  B0D8               	btfsc	status,0,c
  4387  0101D6  B82F               	btfsc	_venflags+2,4,c
  4388  0101D8  D003               	goto	l4469
  4389                           
  4390                           ;dispense.c: 20: {
  4391                           ;dispense.c: 21: note_disable();
  4392  0101DA  EC22  F096         	call	_note_disable	;wreg free
  4393                           
  4394                           ;dispense.c: 22: venflags.hiprice = 1;
  4395  0101DE  882F               	bsf	_venflags+2,4,c
  4396  0101E0                     l4469:
  4397                           
  4398                           ;dispense.c: 23: }
  4399                           ;dispense.c: 24: chanmask = 0;
  4400  0101E0  0E00               	movlw	0
  4401  0101E2  6E32               	movwf	_chanmask,c	;volatile
  4402                           
  4403                           ;dispense.c: 25: char i = 7;
  4404  0101E4  0E07               	movlw	7
  4405  0101E6  0100               	movlb	0	; () banked
  4406  0101E8  6FB9               	movwf	price_check@i& (0+255),b
  4407                           
  4408                           ;dispense.c: 26: while(i > 0x00)
  4409  0101EA  D013               	goto	l4470
  4410  0101EC                     
  4411                           ; BSR set to: 0
  4412                           ;dispense.c: 27: {
  4413                           ;dispense.c: 28: if(pricevend[i] <= cash)
  4414                           
  4415                           ; BSR set to: 0
  4416  0101EC  51B9               	movf	price_check@i& (0+255),w,b
  4417  0101EE  0D01               	mullw	1
  4418  0101F0  0E7F               	movlw	low _pricevend
  4419  0101F2  24F3               	addwf	prodl,w,c
  4420  0101F4  6ED9               	movwf	fsr2l,c
  4421  0101F6  0E00               	movlw	high _pricevend
  4422  0101F8  20F4               	addwfc	prodh,w,c
  4423  0101FA  6EDA               	movwf	fsr2h,c
  4424  0101FC  50DE               	movf	postinc2,w,c
  4425  0101FE  5C39               	subwf	_cash,w,c	;volatile
  4426  010200  A0D8               	btfss	status,0,c
  4427  010202  D003               	goto	l4472
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;dispense.c: 29: {
  4431                           ;dispense.c: 30: chanmask = chanmask | 0x01;
  4432  010204  5032               	movf	_chanmask,w,c	;volatile
  4433  010206  0901               	iorlw	1
  4434  010208  6E32               	movwf	_chanmask,c	;volatile
  4435  01020A                     l4472:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;dispense.c: 31: }
  4439                           ;dispense.c: 32: chanmask = chanmask << 1;
  4440  01020A  5032               	movf	_chanmask,w,c	;volatile
  4441  01020C  2432               	addwf	_chanmask,w,c	;volatile
  4442  01020E  6E32               	movwf	_chanmask,c	;volatile
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;dispense.c: 33: i--;
  4446  010210  07B9               	decf	price_check@i& (0+255),f,b
  4447  010212                     l4470:
  4448                           
  4449                           ; BSR set to: 0
  4450                           
  4451                           ; BSR set to: 0
  4452  010212  51B9               	movf	price_check@i& (0+255),w,b
  4453  010214  A4D8               	btfss	status,2,c
  4454  010216  D7EA               	goto	l4471
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;dispense.c: 34: }
  4458                           ;dispense.c: 35: if(pricevend[0] <= cash)
  4459                           
  4460                           ; BSR set to: 0
  4461  010218  517F               	movf	_pricevend& (0+255),w,b	;volatile
  4462  01021A  5C39               	subwf	_cash,w,c	;volatile
  4463  01021C  A0D8               	btfss	status,0,c
  4464  01021E  D003               	goto	l4474
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;dispense.c: 36: {
  4468                           ;dispense.c: 37: chanmask = chanmask | 0x01;
  4469  010220  5032               	movf	_chanmask,w,c	;volatile
  4470  010222  0901               	iorlw	1
  4471  010224  6E32               	movwf	_chanmask,c	;volatile
  4472  010226                     l4474:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;dispense.c: 38: }
  4476                           ;dispense.c: 39: chanmask = chanmask & ~errormask;
  4477  010226  5031               	movf	_errormask,w,c	;volatile
  4478  010228  0AFF               	xorlw	255
  4479  01022A  1432               	andwf	_chanmask,w,c	;volatile
  4480  01022C  6E32               	movwf	_chanmask,c	;volatile
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;dispense.c: 40: venflags.error = 0;
  4484  01022E  922D               	bcf	_venflags,1,c
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;dispense.c: 44: LATCbits.LC2 = 1;
  4488  010230  8485               	bsf	3973,2,c	;volatile
  4489                           
  4490                           ;dispense.c: 45: LATB = chanmask & 0x0F;
  4491  010232  5032               	movf	_chanmask,w,c	;volatile
  4492  010234  0B0F               	andlw	15
  4493  010236  6E84               	movwf	3972,c	;volatile
  4494                           
  4495                           ;dispense.c: 46: LATD = chanmask & 0xF0;
  4496  010238  5032               	movf	_chanmask,w,c	;volatile
  4497  01023A  0BF0               	andlw	240
  4498  01023C  6E86               	movwf	3974,c	;volatile
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;dispense.c: 47: buttons = butin();
  4502  01023E  ECEA  F091         	call	_butin	;wreg free
  4503  010242  6E38               	movwf	_buttons,c	;volatile
  4504                           
  4505                           ;dispense.c: 48: if((buttons & errormask) != 0x00)
  4506  010244  5038               	movf	_buttons,w,c	;volatile
  4507  010246  1431               	andwf	_errormask,w,c	;volatile
  4508  010248  0900               	iorlw	0
  4509  01024A  B4D8               	btfsc	status,2,c
  4510  01024C  D014               	goto	l4475
  4511                           
  4512                           ;dispense.c: 49: {
  4513                           ;dispense.c: 50: if(!venflags.pricedisplay)
  4514  01024E  B42F               	btfsc	_venflags+2,2,c
  4515  010250  D010               	goto	l4476
  4516                           
  4517                           ;dispense.c: 51: {
  4518                           ;dispense.c: 52: lcd_string(emptymsg, line1);
  4519  010252  0EBA               	movlw	low _emptymsg
  4520  010254  6E24               	movwf	lcd_string@lcdstring,c
  4521  010256  0EFF               	movlw	high _emptymsg
  4522  010258  6E25               	movwf	lcd_string@lcdstring+1,c
  4523  01025A  0E4A               	movlw	low _line1
  4524  01025C  6EF6               	movwf	tblptrl,c
  4525  01025E                     	if	1	;There is more than 1 active tblptr byte
  4526  01025E  0EFC               	movlw	high _line1
  4527  010260  6EF7               	movwf	tblptrh,c
  4528  010262                     	endif
  4529  010262                     	if	1	;There are 3 active tblptr bytes
  4530  010262  0E00               	movlw	low (_line1 shr (0+16))
  4531  010264  6EF8               	movwf	tblptru,c
  4532  010266                     	endif
  4533  010266  0008               	tblrd		*
  4534  010268  CFF5 F026          	movff	tablat,lcd_string@lcdline
  4535  01026C  EC78  F08A         	call	_lcd_string	;wreg free
  4536                           
  4537                           ;dispense.c: 53: venflags.pricedisplay = 1;
  4538  010270  842F               	bsf	_venflags+2,2,c
  4539  010272                     l4476:
  4540                           
  4541                           ;dispense.c: 54: }
  4542                           ;dispense.c: 56: return 0;
  4543  010272  0E00               	movlw	0
  4544  010274  0012               	return	
  4545  010276                     l4475:
  4546                           
  4547                           ;dispense.c: 57: }
  4548                           ;dispense.c: 58: buttons = buttons & chanmask;
  4549  010276  5038               	movf	_buttons,w,c	;volatile
  4550  010278  1432               	andwf	_chanmask,w,c	;volatile
  4551  01027A  6E38               	movwf	_buttons,c	;volatile
  4552                           
  4553                           ;dispense.c: 59: if(buttons != 0)
  4554  01027C  5038               	movf	_buttons,w,c	;volatile
  4555  01027E  B4D8               	btfsc	status,2,c
  4556  010280  D056               	goto	l4477
  4557                           
  4558                           ;dispense.c: 60: {
  4559                           ;dispense.c: 61: channel = get_channel(buttons);
  4560  010282  5038               	movf	_buttons,w,c	;volatile
  4561  010284  EC3E  F095         	call	_get_channel
  4562  010288  6E30               	movwf	_channel,c	;volatile
  4563                           
  4564                           ;dispense.c: 62: vendprice = pricevend[channel];
  4565  01028A  5030               	movf	_channel,w,c	;volatile
  4566  01028C  0D01               	mullw	1
  4567  01028E  0E7F               	movlw	low _pricevend
  4568  010290  24F3               	addwf	prodl,w,c
  4569  010292  6ED9               	movwf	fsr2l,c
  4570  010294  0E00               	movlw	high _pricevend
  4571  010296  20F4               	addwfc	prodh,w,c
  4572  010298  6EDA               	movwf	fsr2h,c
  4573  01029A  50DF               	movf	indf2,w,c
  4574  01029C  6E37               	movwf	_vendprice,c	;volatile
  4575                           
  4576                           ;dispense.c: 63: uint8_t savechan = channel;
  4577  01029E  C030  F0B6         	movff	_channel,price_check@savechan	;volatile
  4578                           
  4579                           ;dispense.c: 64: uint8_t savebut = buttons;
  4580  0102A2  C038  F0B7         	movff	_buttons,price_check@savebut	;volatile
  4581                           
  4582                           ;dispense.c: 66: if(channel > 0x03)
  4583  0102A6  0E03               	movlw	3
  4584  0102A8  6430               	cpfsgt	_channel,c	;volatile
  4585  0102AA  D004               	goto	l4478
  4586                           
  4587                           ;dispense.c: 67: {
  4588                           ;dispense.c: 68: buttons = 0x80;
  4589  0102AC  0E80               	movlw	128
  4590  0102AE  6E38               	movwf	_buttons,c	;volatile
  4591                           
  4592                           ;dispense.c: 69: channel = 0x07;
  4593  0102B0  0E07               	movlw	7
  4594  0102B2  6E30               	movwf	_channel,c	;volatile
  4595  0102B4                     l4478:
  4596                           
  4597                           ;dispense.c: 70: }
  4598                           ;dispense.c: 71: dispense(channel);
  4599  0102B4  5030               	movf	_channel,w,c	;volatile
  4600  0102B6  EC77  F091         	call	_dispense
  4601                           
  4602                           ;dispense.c: 72: channel = savechan;
  4603  0102BA  C0B6  F030         	movff	price_check@savechan,_channel	;volatile
  4604                           
  4605                           ;dispense.c: 73: buttons = savebut;
  4606  0102BE  C0B7  F038         	movff	price_check@savebut,_buttons	;volatile
  4607                           
  4608                           ;dispense.c: 74: uint8_t chanlinkbit = DATAEE_ReadByte(chan1linkbits + channel);
  4609  0102C2  0E07               	movlw	low _chan1linkbits
  4610  0102C4  6EF6               	movwf	tblptrl,c
  4611  0102C6                     	if	1	;There is more than 1 active tblptr byte
  4612  0102C6  0EFC               	movlw	high _chan1linkbits
  4613  0102C8  6EF7               	movwf	tblptrh,c
  4614  0102CA                     	endif
  4615  0102CA                     	if	1	;There are 3 active tblptr bytes
  4616  0102CA  0E00               	movlw	low (_chan1linkbits shr (0+16))
  4617  0102CC  6EF8               	movwf	tblptru,c
  4618  0102CE                     	endif
  4619  0102CE  0009               	tblrd		*+
  4620  0102D0  CFF5 F0B4          	movff	tablat,??_price_check
  4621  0102D4  0009               	tblrd		*+
  4622  0102D6  CFF5 F0B5          	movff	tablat,??_price_check+1
  4623  0102DA  5030               	movf	_channel,w,c	;volatile
  4624  0102DC  0100               	movlb	0	; () banked
  4625  0102DE  25B4               	addwf	??_price_check& (0+255),w,b
  4626  0102E0  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  4627  0102E2  0E00               	movlw	0
  4628  0102E4  21B5               	addwfc	(??_price_check+1)& (0+255),w,b
  4629  0102E6  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  4630  0102E8  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  4631  0102EC  0100               	movlb	0	; () banked
  4632  0102EE  6FB8               	movwf	price_check@chanlinkbit& (0+255),b
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;dispense.c: 75: if(chanlinkbit != 0x00 && !venflags.error)
  4636  0102F0  51B8               	movf	price_check@chanlinkbit& (0+255),w,b
  4637  0102F2  A4D8               	btfss	status,2,c
  4638                           
  4639                           ; BSR set to: 0
  4640  0102F4  B22D               	btfsc	_venflags,1,c
  4641  0102F6  D007               	goto	l4479
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;dispense.c: 76: {
  4645                           ;dispense.c: 77: channel = get_channel(chanlinkbit);
  4646  0102F8  51B8               	movf	price_check@chanlinkbit& (0+255),w,b
  4647  0102FA  EC3E  F095         	call	_get_channel
  4648  0102FE  6E30               	movwf	_channel,c	;volatile
  4649                           
  4650                           ;dispense.c: 78: dispense(channel);
  4651  010300  5030               	movf	_channel,w,c	;volatile
  4652  010302  EC77  F091         	call	_dispense
  4653  010306                     l4479:
  4654                           
  4655                           ;dispense.c: 79: }
  4656                           ;dispense.c: 80: credit_subtract(vendprice);
  4657  010306  5037               	movf	_vendprice,w,c	;volatile
  4658  010308  ECD0  F090         	call	_credit_subtract
  4659                           
  4660                           ;dispense.c: 81: venflags.hiprice = 0;
  4661  01030C  982F               	bcf	_venflags+2,4,c
  4662                           
  4663                           ;dispense.c: 82: cash = credit_check();
  4664  01030E  EC0E  F095         	call	_credit_check	;wreg free
  4665  010312  6E39               	movwf	_cash,c	;volatile
  4666                           
  4667                           ;dispense.c: 83: if(cash > 0 && !venflags.nochange && !venflags.error)
  4668  010314  5039               	movf	_cash,w,c	;volatile
  4669  010316  A4D8               	btfss	status,2,c
  4670  010318  B62D               	btfsc	_venflags,3,c
  4671  01031A  D005               	goto	l4480
  4672  01031C  B22D               	btfsc	_venflags,1,c
  4673  01031E  D003               	goto	l4480
  4674                           
  4675                           ;dispense.c: 84: {
  4676                           ;dispense.c: 86: give_change(cash);
  4677  010320  5039               	movf	_cash,w,c	;volatile
  4678  010322  ECFB  F090         	call	_give_change
  4679  010326                     l4480:
  4680                           
  4681                           ;dispense.c: 87: }
  4682                           ;dispense.c: 88: LATAbits.LA5 = 0;
  4683  010326  9A83               	bcf	3971,5,c	;volatile
  4684                           
  4685                           ;dispense.c: 89: LATCbits.LC2 = 1;
  4686  010328  8485               	bsf	3973,2,c	;volatile
  4687                           
  4688                           ;dispense.c: 90: return 1;
  4689  01032A  0E01               	movlw	1
  4690  01032C  0012               	return	
  4691  01032E                     l4477:
  4692                           
  4693                           ;dispense.c: 92: else
  4694                           ;dispense.c: 93: {
  4695                           ;dispense.c: 94: venflags.pricedisplay = 0;
  4696  01032E  942F               	bcf	_venflags+2,2,c
  4697                           
  4698                           ;dispense.c: 95: venflags.credisplay = 1;
  4699  010330  882D               	bsf	_venflags,4,c
  4700                           
  4701                           ;dispense.c: 96: }
  4702                           ;dispense.c: 97: return 0;
  4703  010332  0E00               	movlw	0
  4704  010334  0012               	return	
  4705  010336                     __end_of_price_check:
  4706                           	opt stack 0
  4707                           tblptru	equ	0xFF8
  4708                           tblptrh	equ	0xFF7
  4709                           tblptrl	equ	0xFF6
  4710                           tablat	equ	0xFF5
  4711                           prodh	equ	0xFF4
  4712                           prodl	equ	0xFF3
  4713                           postinc0	equ	0xFEE
  4714                           wreg	equ	0xFE8
  4715                           indf2	equ	0xFDF
  4716                           postinc2	equ	0xFDE
  4717                           fsr2h	equ	0xFDA
  4718                           fsr2l	equ	0xFD9
  4719                           status	equ	0xFD8
  4720                           
  4721 ;; *************** function _note_disable *****************
  4722 ;; Defined at:
  4723 ;;		line 126 in file "mdb.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    7
  4744 ;; This function calls:
  4745 ;;		_mdb_noten
  4746 ;; This function is called by:
  4747 ;;		_price_check
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text10
  4752  012C44                     __ptext10:
  4753                           	opt stack 0
  4754  012C44                     _note_disable:
  4755                           	opt stack 22
  4756                           
  4757                           ;mdb.c: 128: noteen_byte = 0x00;
  4758                           
  4759                           ;incstack = 0
  4760  012C44  0E00               	movlw	0
  4761  012C46  6E3D               	movwf	_noteen_byte,c	;volatile
  4762                           
  4763                           ;mdb.c: 129: mdb_noten();
  4764  012C48  EC33  F092         	call	_mdb_noten	;wreg free
  4765  012C4C  0012               	return		;funcret
  4766  012C4E                     __end_of_note_disable:
  4767                           	opt stack 0
  4768                           tblptru	equ	0xFF8
  4769                           tblptrh	equ	0xFF7
  4770                           tblptrl	equ	0xFF6
  4771                           tablat	equ	0xFF5
  4772                           prodh	equ	0xFF4
  4773                           prodl	equ	0xFF3
  4774                           postinc0	equ	0xFEE
  4775                           wreg	equ	0xFE8
  4776                           indf2	equ	0xFDF
  4777                           postinc2	equ	0xFDE
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8
  4781                           
  4782 ;; *************** function _mdb_noten *****************
  4783 ;; Defined at:
  4784 ;;		line 138 in file "mdb.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;Total ram usage:        0 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    6
  4805 ;; This function calls:
  4806 ;;		_init_mdbdata
  4807 ;;		_mdb_comm
  4808 ;; This function is called by:
  4809 ;;		_mdb_init
  4810 ;;		_note_disable
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text11
  4815  012466                     __ptext11:
  4816                           	opt stack 0
  4817  012466                     _mdb_noten:
  4818                           	opt stack 22
  4819                           
  4820                           ;mdb.c: 140: if(venflags.hiprice)
  4821                           
  4822                           ;incstack = 0
  4823  012466  A82F               	btfss	_venflags+2,4,c
  4824  012468  D002               	goto	l2973
  4825                           
  4826                           ;mdb.c: 141: {
  4827                           ;mdb.c: 142: noteen_byte = 0x00;
  4828  01246A  0E00               	movlw	0
  4829  01246C  6E3D               	movwf	_noteen_byte,c	;volatile
  4830  01246E                     l2973:
  4831                           
  4832                           ;mdb.c: 143: }
  4833                           ;mdb.c: 145: init_mdbdata(0x00);
  4834  01246E  0E00               	movlw	0
  4835  012470  ECD5  F094         	call	_init_mdbdata
  4836                           
  4837                           ;mdb.c: 147: mcount = 3;
  4838  012474  0E03               	movlw	3
  4839  012476  6E42               	movwf	_mcount,c
  4840                           
  4841                           ;mdb.c: 149: mdbdata[0] = 0x00;
  4842  012478  0E00               	movlw	0
  4843  01247A  0100               	movlb	0	; () banked
  4844  01247C  6F60               	movwf	_mdbdata& (0+255),b
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;mdb.c: 150: mdbdata[1] = 0x00;
  4848  01247E  0E00               	movlw	0
  4849  012480  6F61               	movwf	(_mdbdata+1)& (0+255),b
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;mdb.c: 152: mdbdata[2] = noteen_byte;
  4853  012482  C03D  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;mdb.c: 154: mdbdata[3] = 0x00;
  4857  012486  0E00               	movlw	0
  4858  012488  6F63               	movwf	(_mdbdata+3)& (0+255),b
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;mdb.c: 155: mcount = mdb_comm(note_type, mcount);
  4862  01248A  C042  F024         	movff	_mcount,mdb_comm@mcount
  4863  01248E  0E42               	movlw	low _note_type
  4864  012490  6EF6               	movwf	tblptrl,c
  4865  012492                     	if	1	;There is more than 1 active tblptr byte
  4866  012492  0EFC               	movlw	high _note_type
  4867  012494  6EF7               	movwf	tblptrh,c
  4868  012496                     	endif
  4869  012496                     	if	1	;There are 3 active tblptr bytes
  4870  012496  0E00               	movlw	low (_note_type shr (0+16))
  4871  012498  6EF8               	movwf	tblptru,c
  4872  01249A                     	endif
  4873  01249A  0008               	tblrd		*
  4874  01249C  50F5               	movf	tablat,w,c
  4875  01249E  EC03  F085         	call	_mdb_comm
  4876  0124A2  6E42               	movwf	_mcount,c
  4877                           
  4878                           ;mdb.c: 156: mdbflags.vending = 0;
  4879  0124A4  983F               	bcf	_mdbflags,4,c
  4880  0124A6  0012               	return		;funcret
  4881  0124A8                     __end_of_mdb_noten:
  4882                           	opt stack 0
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           prodh	equ	0xFF4
  4888                           prodl	equ	0xFF3
  4889                           postinc0	equ	0xFEE
  4890                           wreg	equ	0xFE8
  4891                           indf2	equ	0xFDF
  4892                           postinc2	equ	0xFDE
  4893                           fsr2h	equ	0xFDA
  4894                           fsr2l	equ	0xFD9
  4895                           status	equ	0xFD8
  4896                           
  4897 ;; *************** function _give_change *****************
  4898 ;; Defined at:
  4899 ;;		line 21 in file "hopper.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  paycash         1    wreg     unsigned char 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  paycash         1   31[COMRAM] unsigned char 
  4904 ;;  i               1   32[COMRAM] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;Total ram usage:        2 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    6
  4921 ;; This function calls:
  4922 ;;		_DATAEE_ReadByte
  4923 ;;		___lbdiv
  4924 ;;		_credit_add
  4925 ;;		_credit_subtract
  4926 ;;		_hopper_pay
  4927 ;; This function is called by:
  4928 ;;		_price_check
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text12
  4933  0121F6                     __ptext12:
  4934                           	opt stack 0
  4935  0121F6                     _give_change:
  4936                           	opt stack 23
  4937                           
  4938                           ;incstack = 0
  4939                           ;give_change@paycash stored from wreg
  4940  0121F6  6E2A               	movwf	give_change@paycash,c
  4941                           
  4942                           ;hopper.c: 23: cash = paycash;
  4943  0121F8  C02A  F039         	movff	give_change@paycash,_cash	;volatile
  4944                           
  4945                           ;hopper.c: 24: credit_subtract(cash);
  4946  0121FC  5039               	movf	_cash,w,c	;volatile
  4947  0121FE  ECD0  F090         	call	_credit_subtract
  4948                           
  4949                           ;hopper.c: 25: uint8_t i = DATAEE_ReadByte(hopcoin);
  4950  012202  0E09               	movlw	low _hopcoin
  4951  012204  6EF6               	movwf	tblptrl,c
  4952  012206                     	if	1	;There is more than 1 active tblptr byte
  4953  012206  0EFC               	movlw	high _hopcoin
  4954  012208  6EF7               	movwf	tblptrh,c
  4955  01220A                     	endif
  4956  01220A                     	if	1	;There are 3 active tblptr bytes
  4957  01220A  0E00               	movlw	low (_hopcoin shr (0+16))
  4958  01220C  6EF8               	movwf	tblptru,c
  4959  01220E                     	endif
  4960  01220E  0009               	tblrd		*+
  4961  012210  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  4962  012214  000A               	tblrd		*-
  4963  012216  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  4964  01221A  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  4965  01221E  6E2B               	movwf	give_change@i,c
  4966                           
  4967                           ;hopper.c: 26: change = paycash / i;
  4968  012220  C02B  F01D         	movff	give_change@i,___lbdiv@divisor
  4969  012224  502A               	movf	give_change@paycash,w,c
  4970  012226  EC32  F093         	call	___lbdiv
  4971  01222A  6E3C               	movwf	_change,c
  4972                           
  4973                           ;hopper.c: 27: change = hopper_pay(change);
  4974  01222C  503C               	movf	_change,w,c
  4975  01222E  ECE4  F08E         	call	_hopper_pay
  4976  012232  6E3C               	movwf	_change,c
  4977                           
  4978                           ;hopper.c: 28: if(change > 0)
  4979  012234  503C               	movf	_change,w,c
  4980  012236  B4D8               	btfsc	status,2,c
  4981  012238  0012               	return	
  4982                           
  4983                           ;hopper.c: 29: {
  4984                           ;hopper.c: 30: change = change * i;
  4985  01223A  503C               	movf	_change,w,c
  4986  01223C  022B               	mulwf	give_change@i,c
  4987  01223E  CFF3 F03C          	movff	prodl,_change
  4988                           
  4989                           ;hopper.c: 31: credit_add(change);
  4990  012242  503C               	movf	_change,w,c
  4991  012244  EC76  F090         	call	_credit_add
  4992  012248  0012               	return	
  4993  01224A                     __end_of_give_change:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           postinc0	equ	0xFEE
  5002                           wreg	equ	0xFE8
  5003                           indf2	equ	0xFDF
  5004                           postinc2	equ	0xFDE
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function _credit_subtract *****************
  5010 ;; Defined at:
  5011 ;;		line 136 in file "vend.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  credit          1    wreg     unsigned char 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  credit          1   22[COMRAM] unsigned char 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:        1 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    3
  5032 ;; This function calls:
  5033 ;;		_DATAEE_ReadByte
  5034 ;;		_DATAEE_WriteByte
  5035 ;; This function is called by:
  5036 ;;		_give_change
  5037 ;;		_price_check
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text13
  5042  0121A0                     __ptext13:
  5043                           	opt stack 0
  5044  0121A0                     _credit_subtract:
  5045                           	opt stack 25
  5046                           
  5047                           ;incstack = 0
  5048                           ;credit_subtract@credit stored from wreg
  5049  0121A0  6E21               	movwf	credit_subtract@credit,c
  5050                           
  5051                           ;vend.c: 138: cash = DATAEE_ReadByte(credmem);
  5052  0121A2  0E1B               	movlw	low _credmem
  5053  0121A4  6EF6               	movwf	tblptrl,c
  5054  0121A6                     	if	1	;There is more than 1 active tblptr byte
  5055  0121A6  0EFC               	movlw	high _credmem
  5056  0121A8  6EF7               	movwf	tblptrh,c
  5057  0121AA                     	endif
  5058  0121AA                     	if	1	;There are 3 active tblptr bytes
  5059  0121AA  0E00               	movlw	low (_credmem shr (0+16))
  5060  0121AC  6EF8               	movwf	tblptru,c
  5061  0121AE                     	endif
  5062  0121AE  0009               	tblrd		*+
  5063  0121B0  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  5064  0121B4  000A               	tblrd		*-
  5065  0121B6  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  5066  0121BA  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  5067  0121BE  6E39               	movwf	_cash,c	;volatile
  5068                           
  5069                           ;vend.c: 139: cash = (cash - credit) & 0xFF;
  5070  0121C0  5021               	movf	credit_subtract@credit,w,c
  5071  0121C2  0800               	sublw	0
  5072  0121C4  2439               	addwf	_cash,w,c	;volatile
  5073  0121C6  6E39               	movwf	_cash,c	;volatile
  5074                           
  5075                           ;vend.c: 140: DATAEE_WriteByte(credmem, cash);
  5076  0121C8  0E1B               	movlw	low _credmem
  5077  0121CA  6EF6               	movwf	tblptrl,c
  5078  0121CC                     	if	1	;There is more than 1 active tblptr byte
  5079  0121CC  0EFC               	movlw	high _credmem
  5080  0121CE  6EF7               	movwf	tblptrh,c
  5081  0121D0                     	endif
  5082  0121D0                     	if	1	;There are 3 active tblptr bytes
  5083  0121D0  0E00               	movlw	low (_credmem shr (0+16))
  5084  0121D2  6EF8               	movwf	tblptru,c
  5085  0121D4                     	endif
  5086  0121D4  0009               	tblrd		*+
  5087  0121D6  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  5088  0121DA  000A               	tblrd		*-
  5089  0121DC  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  5090  0121E0  C039  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  5091  0121E4  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  5092                           
  5093                           ;vend.c: 141: if(cash == 0)
  5094  0121E8  5039               	movf	_cash,w,c	;volatile
  5095  0121EA  A4D8               	btfss	status,2,c
  5096  0121EC  0012               	return	
  5097                           
  5098                           ;vend.c: 142: {
  5099                           ;vend.c: 143: venflags.iscredit = 0;
  5100  0121EE  902D               	bcf	_venflags,0,c
  5101                           
  5102                           ;vend.c: 144: venflags.inscoin = 1;
  5103  0121F0  842D               	bsf	_venflags,2,c
  5104                           
  5105                           ;vend.c: 145: venflags.credisplay = 0;
  5106  0121F2  982D               	bcf	_venflags,4,c
  5107  0121F4  0012               	return	
  5108  0121F6                     __end_of_credit_subtract:
  5109                           	opt stack 0
  5110                           tblptru	equ	0xFF8
  5111                           tblptrh	equ	0xFF7
  5112                           tblptrl	equ	0xFF6
  5113                           tablat	equ	0xFF5
  5114                           prodh	equ	0xFF4
  5115                           prodl	equ	0xFF3
  5116                           postinc0	equ	0xFEE
  5117                           wreg	equ	0xFE8
  5118                           indf2	equ	0xFDF
  5119                           postinc2	equ	0xFDE
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _credit_add *****************
  5125 ;; Defined at:
  5126 ;;		line 121 in file "vend.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  credit          1    wreg     unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  credit          1   29[COMRAM] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        1 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    5
  5147 ;; This function calls:
  5148 ;;		_DATAEE_ReadByte
  5149 ;;		_DATAEE_WriteByte
  5150 ;;		_Update_cashaudit
  5151 ;; This function is called by:
  5152 ;;		_main
  5153 ;;		_give_change
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text14
  5158  0120EC                     __ptext14:
  5159                           	opt stack 0
  5160  0120EC                     _credit_add:
  5161                           	opt stack 23
  5162                           
  5163                           ;incstack = 0
  5164                           ;credit_add@credit stored from wreg
  5165  0120EC  6E28               	movwf	credit_add@credit,c
  5166                           
  5167                           ;vend.c: 123: cash = DATAEE_ReadByte(credmem);
  5168  0120EE  0E1B               	movlw	low _credmem
  5169  0120F0  6EF6               	movwf	tblptrl,c
  5170  0120F2                     	if	1	;There is more than 1 active tblptr byte
  5171  0120F2  0EFC               	movlw	high _credmem
  5172  0120F4  6EF7               	movwf	tblptrh,c
  5173  0120F6                     	endif
  5174  0120F6                     	if	1	;There are 3 active tblptr bytes
  5175  0120F6  0E00               	movlw	low (_credmem shr (0+16))
  5176  0120F8  6EF8               	movwf	tblptru,c
  5177  0120FA                     	endif
  5178  0120FA  0009               	tblrd		*+
  5179  0120FC  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  5180  012100  000A               	tblrd		*-
  5181  012102  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  5182  012106  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  5183  01210A  6E39               	movwf	_cash,c	;volatile
  5184                           
  5185                           ;vend.c: 124: cash = cash + credit;
  5186  01210C  5039               	movf	_cash,w,c	;volatile
  5187  01210E  2428               	addwf	credit_add@credit,w,c
  5188  012110  6E39               	movwf	_cash,c	;volatile
  5189                           
  5190                           ;vend.c: 125: DATAEE_WriteByte(credmem, cash);
  5191  012112  0E1B               	movlw	low _credmem
  5192  012114  6EF6               	movwf	tblptrl,c
  5193  012116                     	if	1	;There is more than 1 active tblptr byte
  5194  012116  0EFC               	movlw	high _credmem
  5195  012118  6EF7               	movwf	tblptrh,c
  5196  01211A                     	endif
  5197  01211A                     	if	1	;There are 3 active tblptr bytes
  5198  01211A  0E00               	movlw	low (_credmem shr (0+16))
  5199  01211C  6EF8               	movwf	tblptru,c
  5200  01211E                     	endif
  5201  01211E  0009               	tblrd		*+
  5202  012120  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  5203  012124  000A               	tblrd		*-
  5204  012126  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  5205  01212A  C039  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  5206  01212E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  5207                           
  5208                           ;vend.c: 126: if(cash != 0)
  5209  012132  5039               	movf	_cash,w,c	;volatile
  5210  012134  B4D8               	btfsc	status,2,c
  5211  012136  D003               	goto	l2210
  5212                           
  5213                           ;vend.c: 127: {
  5214                           ;vend.c: 128: venflags.iscredit = 1;
  5215  012138  802D               	bsf	_venflags,0,c
  5216                           
  5217                           ;vend.c: 129: venflags.inscoin = 0;
  5218  01213A  942D               	bcf	_venflags,2,c
  5219                           
  5220                           ;vend.c: 130: venflags.credisplay = 1;
  5221  01213C  882D               	bsf	_venflags,4,c
  5222  01213E                     l2210:
  5223                           
  5224                           ;vend.c: 132: }
  5225                           ;vend.c: 133: Update_cashaudit(credit);
  5226  01213E  5028               	movf	credit_add@credit,w,c
  5227  012140  EC04  F089         	call	_Update_cashaudit
  5228  012144  0012               	return		;funcret
  5229  012146                     __end_of_credit_add:
  5230                           	opt stack 0
  5231                           tblptru	equ	0xFF8
  5232                           tblptrh	equ	0xFF7
  5233                           tblptrl	equ	0xFF6
  5234                           tablat	equ	0xFF5
  5235                           prodh	equ	0xFF4
  5236                           prodl	equ	0xFF3
  5237                           postinc0	equ	0xFEE
  5238                           wreg	equ	0xFE8
  5239                           indf2	equ	0xFDF
  5240                           postinc2	equ	0xFDE
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function _Update_cashaudit *****************
  5246 ;; Defined at:
  5247 ;;		line 106 in file "vend.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  addcash         1    wreg     unsigned char 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;  addcash         1   28[COMRAM] unsigned char 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;Total ram usage:        1 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    4
  5268 ;; This function calls:
  5269 ;;		_Read_NVstore
  5270 ;;		_Write_NVstore
  5271 ;; This function is called by:
  5272 ;;		_credit_add
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text15
  5277  011208                     __ptext15:
  5278                           	opt stack 0
  5279  011208                     _Update_cashaudit:
  5280                           	opt stack 23
  5281                           
  5282                           ;incstack = 0
  5283                           ;Update_cashaudit@addcash stored from wreg
  5284  011208  6E27               	movwf	Update_cashaudit@addcash,c
  5285                           
  5286                           ;vend.c: 108: Read_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
  5287  01120A  0E19               	movlw	low _cashinv
  5288  01120C  6EF6               	movwf	tblptrl,c
  5289  01120E                     	if	1	;There is more than 1 active tblptr byte
  5290  01120E  0EFC               	movlw	high _cashinv
  5291  011210  6EF7               	movwf	tblptrh,c
  5292  011212                     	endif
  5293  011212                     	if	1	;There are 3 active tblptr bytes
  5294  011212  0E00               	movlw	low (_cashinv shr (0+16))
  5295  011214  6EF8               	movwf	tblptru,c
  5296  011216                     	endif
  5297  011216  0009               	tblrd		*+
  5298  011218  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
  5299  01121C  000A               	tblrd		*-
  5300  01121E  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
  5301  011222  0E4B               	movlw	low _pvcash
  5302  011224  6E21               	movwf	Read_NVstore@storemem,c
  5303  011226  0E00               	movlw	high _pvcash
  5304  011228  6E22               	movwf	Read_NVstore@storemem+1,c
  5305  01122A  0E02               	movlw	2
  5306  01122C  6E23               	movwf	Read_NVstore@storesize,c
  5307  01122E  EC11  F094         	call	_Read_NVstore	;wreg free
  5308                           
  5309                           ;vend.c: 109: Read_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
  5310  011232  0E15               	movlw	low _cashint
  5311  011234  6EF6               	movwf	tblptrl,c
  5312  011236                     	if	1	;There is more than 1 active tblptr byte
  5313  011236  0EFC               	movlw	high _cashint
  5314  011238  6EF7               	movwf	tblptrh,c
  5315  01123A                     	endif
  5316  01123A                     	if	1	;There are 3 active tblptr bytes
  5317  01123A  0E00               	movlw	low (_cashint shr (0+16))
  5318  01123C  6EF8               	movwf	tblptru,c
  5319  01123E                     	endif
  5320  01123E  0009               	tblrd		*+
  5321  011240  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
  5322  011244  000A               	tblrd		*-
  5323  011246  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
  5324  01124A  0E48               	movlw	low _pnvcash
  5325  01124C  6E21               	movwf	Read_NVstore@storemem,c
  5326  01124E  0E00               	movlw	high _pnvcash
  5327  011250  6E22               	movwf	Read_NVstore@storemem+1,c
  5328  011252  0E03               	movlw	3
  5329  011254  6E23               	movwf	Read_NVstore@storesize,c
  5330  011256  EC11  F094         	call	_Read_NVstore	;wreg free
  5331                           
  5332                           ;vend.c: 111: pvcash = pvcash + (uint16_t)addcash;
  5333  01125A  5027               	movf	Update_cashaudit@addcash,w,c
  5334  01125C  244B               	addwf	_pvcash,w,c	;volatile
  5335  01125E  6E4B               	movwf	_pvcash,c	;volatile
  5336  011260  0E00               	movlw	0
  5337  011262  204C               	addwfc	_pvcash+1,w,c	;volatile
  5338  011264  6E4C               	movwf	_pvcash+1,c	;volatile
  5339                           
  5340                           ;vend.c: 113: pnvcash = pnvcash + (uint24_t)addcash;
  5341  011266  5027               	movf	Update_cashaudit@addcash,w,c
  5342  011268  2448               	addwf	_pnvcash,w,c	;volatile
  5343  01126A  6E48               	movwf	_pnvcash,c	;volatile
  5344  01126C  0E00               	movlw	0
  5345  01126E  2049               	addwfc	_pnvcash+1,w,c	;volatile
  5346  011270  6E49               	movwf	_pnvcash+1,c	;volatile
  5347  011272  0E00               	movlw	0
  5348  011274  204A               	addwfc	_pnvcash+2,w,c	;volatile
  5349  011276  6E4A               	movwf	_pnvcash+2,c	;volatile
  5350                           
  5351                           ;vend.c: 115: Write_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
  5352  011278  0E19               	movlw	low _cashinv
  5353  01127A  6EF6               	movwf	tblptrl,c
  5354  01127C                     	if	1	;There is more than 1 active tblptr byte
  5355  01127C  0EFC               	movlw	high _cashinv
  5356  01127E  6EF7               	movwf	tblptrh,c
  5357  011280                     	endif
  5358  011280                     	if	1	;There are 3 active tblptr bytes
  5359  011280  0E00               	movlw	low (_cashinv shr (0+16))
  5360  011282  6EF8               	movwf	tblptru,c
  5361  011284                     	endif
  5362  011284  0009               	tblrd		*+
  5363  011286  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
  5364  01128A  000A               	tblrd		*-
  5365  01128C  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
  5366  011290  0E4B               	movlw	low _pvcash
  5367  011292  6E23               	movwf	Write_NVstore@storemem,c
  5368  011294  0E00               	movlw	high _pvcash
  5369  011296  6E24               	movwf	Write_NVstore@storemem+1,c
  5370  011298  0E02               	movlw	2
  5371  01129A  6E25               	movwf	Write_NVstore@storesize,c
  5372  01129C  ECA5  F093         	call	_Write_NVstore	;wreg free
  5373                           
  5374                           ;vend.c: 116: Write_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
  5375  0112A0  0E15               	movlw	low _cashint
  5376  0112A2  6EF6               	movwf	tblptrl,c
  5377  0112A4                     	if	1	;There is more than 1 active tblptr byte
  5378  0112A4  0EFC               	movlw	high _cashint
  5379  0112A6  6EF7               	movwf	tblptrh,c
  5380  0112A8                     	endif
  5381  0112A8                     	if	1	;There are 3 active tblptr bytes
  5382  0112A8  0E00               	movlw	low (_cashint shr (0+16))
  5383  0112AA  6EF8               	movwf	tblptru,c
  5384  0112AC                     	endif
  5385  0112AC  0009               	tblrd		*+
  5386  0112AE  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
  5387  0112B2  000A               	tblrd		*-
  5388  0112B4  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
  5389  0112B8  0E48               	movlw	low _pnvcash
  5390  0112BA  6E23               	movwf	Write_NVstore@storemem,c
  5391  0112BC  0E00               	movlw	high _pnvcash
  5392  0112BE  6E24               	movwf	Write_NVstore@storemem+1,c
  5393  0112C0  0E03               	movlw	3
  5394  0112C2  6E25               	movwf	Write_NVstore@storesize,c
  5395  0112C4  ECA5  F093         	call	_Write_NVstore	;wreg free
  5396  0112C8  F000               	nop		;# 
  5397  0112CA  0012               	return		;funcret
  5398  0112CC                     __end_of_Update_cashaudit:
  5399                           	opt stack 0
  5400                           tblptru	equ	0xFF8
  5401                           tblptrh	equ	0xFF7
  5402                           tblptrl	equ	0xFF6
  5403                           tablat	equ	0xFF5
  5404                           prodh	equ	0xFF4
  5405                           prodl	equ	0xFF3
  5406                           postinc0	equ	0xFEE
  5407                           wreg	equ	0xFE8
  5408                           indf2	equ	0xFDF
  5409                           postinc2	equ	0xFDE
  5410                           fsr2h	equ	0xFDA
  5411                           fsr2l	equ	0xFD9
  5412                           status	equ	0xFD8
  5413                           
  5414 ;; *************** function ___lbdiv *****************
  5415 ;; Defined at:
  5416 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/lbdiv.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  dividend        1    wreg     unsigned char 
  5419 ;;  divisor         1   18[COMRAM] unsigned char 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  dividend        1   19[COMRAM] unsigned char 
  5422 ;;  quotient        1   21[COMRAM] unsigned char 
  5423 ;;  counter         1   20[COMRAM] unsigned char 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      unsigned char 
  5426 ;; Registers used:
  5427 ;;		wreg, status,2, status,0
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5433 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;Total ram usage:        4 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:    2
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_give_change
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text16
  5448  012664                     __ptext16:
  5449                           	opt stack 0
  5450  012664                     ___lbdiv:
  5451                           	opt stack 26
  5452                           
  5453                           ;incstack = 0
  5454                           ;___lbdiv@dividend stored from wreg
  5455  012664  6E1E               	movwf	___lbdiv@dividend,c
  5456  012666  0E00               	movlw	0
  5457  012668  6E20               	movwf	___lbdiv@quotient,c
  5458  01266A  501D               	movf	___lbdiv@divisor,w,c
  5459  01266C  B4D8               	btfsc	status,2,c
  5460  01266E  D015               	goto	l5314
  5461  012670  0E01               	movlw	1
  5462  012672  6E1F               	movwf	___lbdiv@counter,c
  5463  012674  D003               	goto	l5309
  5464  012676  90D8               	bcf	status,0,c
  5465  012678  361D               	rlcf	___lbdiv@divisor,f,c
  5466  01267A  2A1F               	incf	___lbdiv@counter,f,c
  5467  01267C                     l5309:
  5468  01267C  AE1D               	btfss	___lbdiv@divisor,7,c
  5469  01267E  D7FB               	goto	l5310
  5470  012680                     u4940:
  5471  012680  90D8               	bcf	status,0,c
  5472  012682  3620               	rlcf	___lbdiv@quotient,f,c
  5473  012684  501D               	movf	___lbdiv@divisor,w,c
  5474  012686  5C1E               	subwf	___lbdiv@dividend,w,c
  5475  012688  A0D8               	btfss	status,0,c
  5476  01268A  D003               	goto	l5313
  5477  01268C  501D               	movf	___lbdiv@divisor,w,c
  5478  01268E  5E1E               	subwf	___lbdiv@dividend,f,c
  5479  012690  8020               	bsf	___lbdiv@quotient,0,c
  5480  012692                     l5313:
  5481  012692  90D8               	bcf	status,0,c
  5482  012694  321D               	rrcf	___lbdiv@divisor,f,c
  5483  012696  2E1F               	decfsz	___lbdiv@counter,f,c
  5484  012698  D7F3               	goto	u4940
  5485  01269A                     l5314:
  5486  01269A  5020               	movf	___lbdiv@quotient,w,c
  5487  01269C  0012               	return	
  5488  01269E                     __end_of___lbdiv:
  5489                           	opt stack 0
  5490                           tblptru	equ	0xFF8
  5491                           tblptrh	equ	0xFF7
  5492                           tblptrl	equ	0xFF6
  5493                           tablat	equ	0xFF5
  5494                           prodh	equ	0xFF4
  5495                           prodl	equ	0xFF3
  5496                           postinc0	equ	0xFEE
  5497                           wreg	equ	0xFE8
  5498                           indf2	equ	0xFDF
  5499                           postinc2	equ	0xFDE
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _dispense *****************
  5505 ;; Defined at:
  5506 ;;		line 100 in file "dispense.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  chanel          1    wreg     unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  chanel          1    1[BANK0 ] unsigned char 
  5511 ;;  sensmask        1    0[BANK0 ] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;Total ram usage:        2 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    5
  5528 ;; This function calls:
  5529 ;;		_DATAEE_ReadByte
  5530 ;;		_update_vends
  5531 ;;		_vend_dispense
  5532 ;;		_vend_nosense
  5533 ;; This function is called by:
  5534 ;;		_price_check
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text17
  5539  0122EE                     __ptext17:
  5540                           	opt stack 0
  5541  0122EE                     _dispense:
  5542                           	opt stack 24
  5543                           
  5544                           ;incstack = 0
  5545                           ;dispense@chanel stored from wreg
  5546  0122EE  0100               	movlb	0	; () banked
  5547  0122F0  6FB3               	movwf	dispense@chanel& (0+255),b
  5548                           
  5549                           ;dispense.c: 102: channel = chanel;
  5550  0122F2  C0B3  F030         	movff	dispense@chanel,_channel	;volatile
  5551                           
  5552                           ;dispense.c: 103: uint8_t sensmask = DATAEE_ReadByte(sensorflags);
  5553  0122F6  0EF7               	movlw	low _sensorflags
  5554  0122F8  6EF6               	movwf	tblptrl,c
  5555  0122FA                     	if	1	;There is more than 1 active tblptr byte
  5556  0122FA  0EFB               	movlw	high _sensorflags
  5557  0122FC  6EF7               	movwf	tblptrh,c
  5558  0122FE                     	endif
  5559  0122FE                     	if	1	;There are 3 active tblptr bytes
  5560  0122FE  0E00               	movlw	low (_sensorflags shr (0+16))
  5561  012300  6EF8               	movwf	tblptru,c
  5562  012302                     	endif
  5563  012302  0009               	tblrd		*+
  5564  012304  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  5565  012308  000A               	tblrd		*-
  5566  01230A  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  5567  01230E  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  5568  012312  0100               	movlb	0	; () banked
  5569  012314  6FB2               	movwf	dispense@sensmask& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;dispense.c: 104: if((buttons & sensmask) != 0)
  5573  012316  5038               	movf	_buttons,w,c	;volatile
  5574  012318  15B2               	andwf	dispense@sensmask& (0+255),w,b
  5575  01231A  0900               	iorlw	0
  5576  01231C  B4D8               	btfsc	status,2,c
  5577  01231E  D004               	goto	l4484
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;dispense.c: 105: {
  5581                           ;dispense.c: 106: vend_nosense(chanel);
  5582  012320  51B3               	movf	dispense@chanel& (0+255),w,b
  5583  012322  ECA3  F090         	call	_vend_nosense
  5584                           
  5585                           ;dispense.c: 107: }
  5586  012326  D004               	goto	l4485
  5587  012328                     l4484:
  5588                           
  5589                           ;dispense.c: 108: else
  5590                           ;dispense.c: 109: {
  5591                           ;dispense.c: 110: vend_dispense(chanel);
  5592  012328  0100               	movlb	0	; () banked
  5593  01232A  51B3               	movf	dispense@chanel& (0+255),w,b
  5594  01232C  EC69  F08D         	call	_vend_dispense
  5595  012330                     l4485:
  5596                           
  5597                           ;dispense.c: 111: }
  5598                           ;dispense.c: 112: if(!venflags.error)
  5599  012330  B22D               	btfsc	_venflags,1,c
  5600  012332  0012               	return	
  5601                           
  5602                           ;dispense.c: 113: {
  5603                           ;dispense.c: 114: update_vends(channel);
  5604  012334  5030               	movf	_channel,w,c	;volatile
  5605  012336  EC48  F090         	call	_update_vends
  5606  01233A  0012               	return	
  5607  01233C                     __end_of_dispense:
  5608                           	opt stack 0
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           prodh	equ	0xFF4
  5614                           prodl	equ	0xFF3
  5615                           postinc0	equ	0xFEE
  5616                           wreg	equ	0xFE8
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _vend_nosense *****************
  5624 ;; Defined at:
  5625 ;;		line 119 in file "dispense.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  chanel          1    wreg     unsigned char 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  chanel          1   23[COMRAM] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:        3 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    4
  5646 ;; This function calls:
  5647 ;;		_mdb_unlock
  5648 ;; This function is called by:
  5649 ;;		_dispense
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text18
  5654  012146                     __ptext18:
  5655                           	opt stack 0
  5656  012146                     _vend_nosense:
  5657                           	opt stack 24
  5658                           
  5659                           ;incstack = 0
  5660                           ;vend_nosense@chanel stored from wreg
  5661  012146  6E22               	movwf	vend_nosense@chanel,c
  5662                           
  5663                           ;dispense.c: 121: LATB = 0x00;
  5664  012148  0E00               	movlw	0
  5665  01214A  6E84               	movwf	3972,c	;volatile
  5666                           
  5667                           ;dispense.c: 122: LATD = 0x00;
  5668  01214C  0E00               	movlw	0
  5669  01214E  6E86               	movwf	3974,c	;volatile
  5670                           
  5671                           ;dispense.c: 124: LATCbits.LC2 = 0;
  5672  012150  9485               	bcf	3973,2,c	;volatile
  5673                           
  5674                           ;dispense.c: 126: chanmask = 0x01;
  5675  012152  0E01               	movlw	1
  5676  012154  6E32               	movwf	_chanmask,c	;volatile
  5677                           
  5678                           ;dispense.c: 127: chanmask = chanmask << chanel;
  5679  012156  C022  F020         	movff	vend_nosense@chanel,??_vend_nosense
  5680  01215A  C032  F021         	movff	_chanmask,??_vend_nosense+1	;volatile
  5681  01215E  2A20               	incf	??_vend_nosense,f,c
  5682  012160  D002               	goto	u4854
  5683  012162                     u4855:
  5684  012162  90D8               	bcf	status,0,c
  5685  012164  3621               	rlcf	??_vend_nosense+1,f,c
  5686  012166                     u4854:
  5687  012166  2E20               	decfsz	??_vend_nosense,f,c
  5688  012168  D7FC               	goto	u4855
  5689  01216A  5021               	movf	??_vend_nosense+1,w,c
  5690  01216C  6E32               	movwf	_chanmask,c	;volatile
  5691                           
  5692                           ;dispense.c: 128: mdb_unlock();
  5693  01216E  ECA0  F088         	call	_mdb_unlock	;wreg free
  5694                           
  5695                           ;dispense.c: 130: LATAbits.LA5 = 1;
  5696  012172  8A83               	bsf	3971,5,c	;volatile
  5697                           
  5698                           ;dispense.c: 131: LATB = chanmask & 0x0F;
  5699  012174  5032               	movf	_chanmask,w,c	;volatile
  5700  012176  0B0F               	andlw	15
  5701  012178  6E84               	movwf	3972,c	;volatile
  5702                           
  5703                           ;dispense.c: 132: LATD = chanmask & 0xF0;
  5704  01217A  5032               	movf	_chanmask,w,c	;volatile
  5705  01217C  0BF0               	andlw	240
  5706  01217E  6E86               	movwf	3974,c	;volatile
  5707                           
  5708                           ;dispense.c: 133: _delay((unsigned long)((250)*(12000000/4000.0)));
  5709  012180  0E04               	movlw	4
  5710  012182  6E21               	movwf	(??_vend_nosense+1)& (0+255),c
  5711  012184  0ECF               	movlw	207
  5712  012186  6E20               	movwf	??_vend_nosense& (0+255),c
  5713  012188  0E02               	movlw	2
  5714  01218A                     u5747:
  5715  01218A  2EE8               	decfsz	wreg,f,c
  5716  01218C  D7FE               	bra	u5747
  5717  01218E  2E20               	decfsz	??_vend_nosense& (0+255),f,c
  5718  012190  D7FC               	bra	u5747
  5719  012192  2E21               	decfsz	(??_vend_nosense+1)& (0+255),f,c
  5720  012194  D7FA               	bra	u5747
  5721                           
  5722                           ;dispense.c: 134: LATB = 0;
  5723  012196  0E00               	movlw	0
  5724  012198  6E84               	movwf	3972,c	;volatile
  5725                           
  5726                           ;dispense.c: 135: LATD = 0;
  5727  01219A  0E00               	movlw	0
  5728  01219C  6E86               	movwf	3974,c	;volatile
  5729  01219E  0012               	return		;funcret
  5730  0121A0                     __end_of_vend_nosense:
  5731                           	opt stack 0
  5732                           tblptru	equ	0xFF8
  5733                           tblptrh	equ	0xFF7
  5734                           tblptrl	equ	0xFF6
  5735                           tablat	equ	0xFF5
  5736                           prodh	equ	0xFF4
  5737                           prodl	equ	0xFF3
  5738                           postinc0	equ	0xFEE
  5739                           wreg	equ	0xFE8
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           fsr2h	equ	0xFDA
  5743                           fsr2l	equ	0xFD9
  5744                           status	equ	0xFD8
  5745                           
  5746 ;; *************** function _vend_dispense *****************
  5747 ;; Defined at:
  5748 ;;		line 138 in file "dispense.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  chanel          1    wreg     unsigned char 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  chanel          1   32[COMRAM] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;Total ram usage:        3 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    4
  5769 ;; This function calls:
  5770 ;;		_TMR0_StopTimer
  5771 ;;		_disable_channel
  5772 ;;		_mdb_unlock
  5773 ;;		_set_motortime
  5774 ;; This function is called by:
  5775 ;;		_dispense
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text19
  5780  011AD2                     __ptext19:
  5781                           	opt stack 0
  5782  011AD2                     _vend_dispense:
  5783                           	opt stack 24
  5784                           
  5785                           ;incstack = 0
  5786                           ;vend_dispense@chanel stored from wreg
  5787  011AD2  6E2B               	movwf	vend_dispense@chanel,c
  5788                           
  5789                           ;dispense.c: 140: mdb_unlock();
  5790  011AD4  ECA0  F088         	call	_mdb_unlock	;wreg free
  5791                           
  5792                           ;dispense.c: 141: LATB = 0x00;
  5793  011AD8  0E00               	movlw	0
  5794  011ADA  6E84               	movwf	3972,c	;volatile
  5795                           
  5796                           ;dispense.c: 142: LATD = 0x00;
  5797  011ADC  0E00               	movlw	0
  5798  011ADE  6E86               	movwf	3974,c	;volatile
  5799                           
  5800                           ;dispense.c: 144: LATAbits.LA5 = 1;
  5801  011AE0  8A83               	bsf	3971,5,c	;volatile
  5802                           
  5803                           ;dispense.c: 146: LATCbits.LC2 = 0;
  5804  011AE2  9485               	bcf	3973,2,c	;volatile
  5805                           
  5806                           ;dispense.c: 148: chanmask = 0x01;
  5807  011AE4  0E01               	movlw	1
  5808  011AE6  6E32               	movwf	_chanmask,c	;volatile
  5809                           
  5810                           ;dispense.c: 149: chanmask = chanmask << chanel;
  5811  011AE8  C02B  F029         	movff	vend_dispense@chanel,??_vend_dispense
  5812  011AEC  C032  F02A         	movff	_chanmask,??_vend_dispense+1	;volatile
  5813  011AF0  2A29               	incf	??_vend_dispense,f,c
  5814  011AF2  D002               	goto	u4864
  5815  011AF4                     u4865:
  5816  011AF4  90D8               	bcf	status,0,c
  5817  011AF6  362A               	rlcf	??_vend_dispense+1,f,c
  5818  011AF8                     u4864:
  5819  011AF8  2E29               	decfsz	??_vend_dispense,f,c
  5820  011AFA  D7FC               	goto	u4865
  5821  011AFC  502A               	movf	??_vend_dispense+1,w,c
  5822  011AFE  6E32               	movwf	_chanmask,c	;volatile
  5823                           
  5824                           ;dispense.c: 150: set_motortime(chanel);
  5825  011B00  502B               	movf	vend_dispense@chanel,w,c
  5826  011B02  ECC4  F08B         	call	_set_motortime
  5827                           
  5828                           ;dispense.c: 151: while(!CMOUTbits.MC1OUT && !PIR0bits.TMR0IF)
  5829  011B06  D006               	goto	l4493
  5830  011B08                     
  5831                           ;dispense.c: 152: {
  5832                           ;dispense.c: 153: LATB = chanmask & 0x0F;
  5833  011B08  5032               	movf	_chanmask,w,c	;volatile
  5834  011B0A  0B0F               	andlw	15
  5835  011B0C  6E84               	movwf	3972,c	;volatile
  5836                           
  5837                           ;dispense.c: 154: LATD = chanmask & 0xF0;
  5838  011B0E  5032               	movf	_chanmask,w,c	;volatile
  5839  011B10  0BF0               	andlw	240
  5840  011B12  6E86               	movwf	3974,c	;volatile
  5841  011B14                     l4493:
  5842  011B14  010F               	movlb	15	; () banked
  5843  011B16  B13D               	btfsc	61,0,b	;volatile
  5844  011B18  D003               	goto	u4880
  5845                           
  5846                           ; BSR set to: 15
  5847  011B1A  010E               	movlb	14	; () banked
  5848  011B1C  ABCA               	btfss	202,5,b	;volatile
  5849  011B1E  D7F4               	goto	l4494
  5850  011B20                     u4880:
  5851                           
  5852                           ;dispense.c: 155: }
  5853                           ;dispense.c: 156: LATB = 0;
  5854                           
  5855                           ; BSR set to: 14
  5856                           
  5857                           ; BSR set to: 14
  5858  011B20  0E00               	movlw	0
  5859  011B22  6E84               	movwf	3972,c	;volatile
  5860                           
  5861                           ;dispense.c: 157: LATD = 0;
  5862  011B24  0E00               	movlw	0
  5863  011B26  6E86               	movwf	3974,c	;volatile
  5864                           
  5865                           ;dispense.c: 158: TMR0_StopTimer();
  5866  011B28  EC49  F096         	call	_TMR0_StopTimer	;wreg free
  5867                           
  5868                           ;dispense.c: 159: if(PIR0bits.TMR0IF)
  5869  011B2C  010E               	movlb	14	; () banked
  5870  011B2E  ABCA               	btfss	202,5,b	;volatile
  5871  011B30  0012               	return	
  5872                           
  5873                           ; BSR set to: 14
  5874                           ;dispense.c: 160: {
  5875                           ;dispense.c: 161: set_motortime(chanel);
  5876  011B32  502B               	movf	vend_dispense@chanel,w,c
  5877  011B34  ECC4  F08B         	call	_set_motortime
  5878  011B38  010F               	movlb	15	; () banked
  5879  011B3A  B13D               	btfsc	61,0,b	;volatile
  5880  011B3C  D003               	goto	u4910
  5881                           
  5882                           ; BSR set to: 15
  5883  011B3E  010E               	movlb	14	; () banked
  5884  011B40  ABCA               	btfss	202,5,b	;volatile
  5885  011B42  D7FA               	goto	l4500
  5886  011B44                     u4910:
  5887                           
  5888                           ;dispense.c: 164: if(PIR0bits.TMR0IF)
  5889                           
  5890                           ; BSR set to: 14
  5891  011B44  010E               	movlb	14	; () banked
  5892  011B46  ABCA               	btfss	202,5,b	;volatile
  5893  011B48  0012               	return	
  5894                           
  5895                           ; BSR set to: 14
  5896                           ;dispense.c: 165: {
  5897                           ;dispense.c: 166: venflags.error = 1;
  5898  011B4A  822D               	bsf	_venflags,1,c
  5899                           
  5900                           ; BSR set to: 14
  5901                           ;dispense.c: 167: disable_channel(chanel);
  5902  011B4C  502B               	movf	vend_dispense@chanel,w,c
  5903  011B4E  ECE8  F08F         	call	_disable_channel
  5904                           
  5905                           ;dispense.c: 169: vendprice = 0x00;
  5906  011B52  0E00               	movlw	0
  5907  011B54  6E37               	movwf	_vendprice,c	;volatile
  5908  011B56  0012               	return	
  5909  011B58                     __end_of_vend_dispense:
  5910                           	opt stack 0
  5911                           tblptru	equ	0xFF8
  5912                           tblptrh	equ	0xFF7
  5913                           tblptrl	equ	0xFF6
  5914                           tablat	equ	0xFF5
  5915                           prodh	equ	0xFF4
  5916                           prodl	equ	0xFF3
  5917                           postinc0	equ	0xFEE
  5918                           wreg	equ	0xFE8
  5919                           indf2	equ	0xFDF
  5920                           postinc2	equ	0xFDE
  5921                           fsr2h	equ	0xFDA
  5922                           fsr2l	equ	0xFD9
  5923                           status	equ	0xFD8
  5924                           
  5925 ;; *************** function _set_motortime *****************
  5926 ;; Defined at:
  5927 ;;		line 175 in file "dispense.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  chanel          1    wreg     unsigned char 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  chanel          1   26[COMRAM] unsigned char 
  5932 ;;  time            2   28[COMRAM] unsigned int 
  5933 ;;  i               1   27[COMRAM] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1    wreg      void 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;Total ram usage:        6 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    3
  5950 ;; This function calls:
  5951 ;;		_DATAEE_ReadByte
  5952 ;;		_TMR0_StartTimer
  5953 ;;		_TMR0_StopTimer
  5954 ;;		_TMR0_WriteTimer
  5955 ;;		___wmul
  5956 ;; This function is called by:
  5957 ;;		_vend_dispense
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text20
  5962  011788                     __ptext20:
  5963                           	opt stack 0
  5964  011788                     _set_motortime:
  5965                           	opt stack 24
  5966                           
  5967                           ;incstack = 0
  5968                           ;set_motortime@chanel stored from wreg
  5969  011788  6E25               	movwf	set_motortime@chanel,c
  5970                           
  5971                           ;dispense.c: 177: uint8_t i = DATAEE_ReadByte(chan1time + chanel);
  5972  01178A  0EF5               	movlw	low _chan1time
  5973  01178C  6EF6               	movwf	tblptrl,c
  5974  01178E                     	if	1	;There is more than 1 active tblptr byte
  5975  01178E  0EFB               	movlw	high _chan1time
  5976  011790  6EF7               	movwf	tblptrh,c
  5977  011792                     	endif
  5978  011792                     	if	1	;There are 3 active tblptr bytes
  5979  011792  0E00               	movlw	low (_chan1time shr (0+16))
  5980  011794  6EF8               	movwf	tblptru,c
  5981  011796                     	endif
  5982  011796  0009               	tblrd		*+
  5983  011798  CFF5 F023          	movff	tablat,??_set_motortime
  5984  01179C  0009               	tblrd		*+
  5985  01179E  CFF5 F024          	movff	tablat,??_set_motortime+1
  5986  0117A2  5025               	movf	set_motortime@chanel,w,c
  5987  0117A4  2423               	addwf	??_set_motortime,w,c
  5988  0117A6  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  5989  0117A8  0E00               	movlw	0
  5990  0117AA  2024               	addwfc	??_set_motortime+1,w,c
  5991  0117AC  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  5992  0117AE  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  5993  0117B2  6E26               	movwf	set_motortime@i,c
  5994                           
  5995                           ;dispense.c: 178: TMR0_StopTimer();
  5996  0117B4  EC49  F096         	call	_TMR0_StopTimer	;wreg free
  5997                           
  5998                           ;dispense.c: 179: PIR0bits.TMR0IF = 0;
  5999  0117B8  010E               	movlb	14	; () banked
  6000  0117BA  9BCA               	bcf	202,5,b	;volatile
  6001                           
  6002                           ; BSR set to: 14
  6003                           ;dispense.c: 181: uint16_t time = second1;
  6004  0117BC  0E21               	movlw	low _second1
  6005  0117BE  6EF6               	movwf	tblptrl,c
  6006  0117C0                     	if	1	;There is more than 1 active tblptr byte
  6007  0117C0  0EFC               	movlw	high _second1
  6008  0117C2  6EF7               	movwf	tblptrh,c
  6009  0117C4                     	endif
  6010  0117C4                     	if	1	;There are 3 active tblptr bytes
  6011  0117C4  0E00               	movlw	low (_second1 shr (0+16))
  6012  0117C6  6EF8               	movwf	tblptru,c
  6013  0117C8                     	endif
  6014  0117C8  0009               	tblrd		*+
  6015  0117CA  CFF5 F027          	movff	tablat,set_motortime@time
  6016  0117CE  000A               	tblrd		*-
  6017  0117D0  CFF5 F028          	movff	tablat,set_motortime@time+1
  6018                           
  6019                           ; BSR set to: 14
  6020                           ;dispense.c: 182: time = time - (second_5 * i);
  6021  0117D4  C026  F01D         	movff	set_motortime@i,___wmul@multiplier
  6022  0117D8  6A1E               	clrf	___wmul@multiplier+1,c
  6023  0117DA  0E1F               	movlw	low _second_5
  6024  0117DC  6EF6               	movwf	tblptrl,c
  6025  0117DE                     	if	1	;There is more than 1 active tblptr byte
  6026  0117DE  0EFC               	movlw	high _second_5
  6027  0117E0  6EF7               	movwf	tblptrh,c
  6028  0117E2                     	endif
  6029  0117E2                     	if	1	;There are 3 active tblptr bytes
  6030  0117E2  0E00               	movlw	low (_second_5 shr (0+16))
  6031  0117E4  6EF8               	movwf	tblptru,c
  6032  0117E6                     	endif
  6033  0117E6  0009               	tblrd		*+
  6034  0117E8  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  6035  0117EC  000A               	tblrd		*-
  6036  0117EE  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  6037  0117F2  ECEA  F094         	call	___wmul	;wreg free
  6038  0117F6  1E1D               	comf	?___wmul,f,c
  6039  0117F8  1E1E               	comf	?___wmul+1,f,c
  6040  0117FA  4A1D               	infsnz	?___wmul,f,c
  6041  0117FC  2A1E               	incf	?___wmul+1,f,c
  6042  0117FE  5027               	movf	set_motortime@time,w,c
  6043  011800  241D               	addwf	?___wmul,w,c
  6044  011802  6E27               	movwf	set_motortime@time,c
  6045  011804  5028               	movf	set_motortime@time+1,w,c
  6046  011806  201E               	addwfc	?___wmul+1,w,c
  6047  011808  6E28               	movwf	set_motortime@time+1,c
  6048                           
  6049                           ;dispense.c: 183: TMR0_WriteTimer(time);
  6050  01180A  C027  F01D         	movff	set_motortime@time,TMR0_WriteTimer@timerVal
  6051  01180E  C028  F01E         	movff	set_motortime@time+1,TMR0_WriteTimer@timerVal+1
  6052  011812  EC27  F096         	call	_TMR0_WriteTimer	;wreg free
  6053                           
  6054                           ;dispense.c: 184: TMR0_StartTimer();
  6055  011816  EC4B  F096         	call	_TMR0_StartTimer	;wreg free
  6056  01181A  0012               	return		;funcret
  6057  01181C                     __end_of_set_motortime:
  6058                           	opt stack 0
  6059                           tblptru	equ	0xFF8
  6060                           tblptrh	equ	0xFF7
  6061                           tblptrl	equ	0xFF6
  6062                           tablat	equ	0xFF5
  6063                           prodh	equ	0xFF4
  6064                           prodl	equ	0xFF3
  6065                           postinc0	equ	0xFEE
  6066                           wreg	equ	0xFE8
  6067                           indf2	equ	0xFDF
  6068                           postinc2	equ	0xFDE
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function ___wmul *****************
  6074 ;; Defined at:
  6075 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  multiplier      2   18[COMRAM] unsigned int 
  6078 ;;  multiplicand    2   20[COMRAM] unsigned int 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  product         2   22[COMRAM] unsigned int 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  2   18[COMRAM] unsigned int 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0, prodl, prodh
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;Total ram usage:        6 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    2
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_set_motortime
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text21
  6105  0129D4                     __ptext21:
  6106                           	opt stack 0
  6107  0129D4                     ___wmul:
  6108                           	opt stack 24
  6109                           
  6110                           ;incstack = 0
  6111  0129D4  501D               	movf	___wmul@multiplier,w,c
  6112  0129D6  021F               	mulwf	___wmul@multiplicand,c
  6113  0129D8  CFF3 F021          	movff	prodl,___wmul@product
  6114  0129DC  CFF4 F022          	movff	prodh,___wmul@product+1
  6115  0129E0  501D               	movf	___wmul@multiplier,w,c
  6116  0129E2  0220               	mulwf	___wmul@multiplicand+1,c
  6117  0129E4  50F3               	movf	prodl,w,c
  6118  0129E6  2622               	addwf	___wmul@product+1,f,c
  6119  0129E8  501E               	movf	___wmul@multiplier+1,w,c
  6120  0129EA  021F               	mulwf	___wmul@multiplicand,c
  6121  0129EC  50F3               	movf	prodl,w,c
  6122  0129EE  2622               	addwf	___wmul@product+1,f,c
  6123  0129F0  C021  F01D         	movff	___wmul@product,?___wmul
  6124  0129F4  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  6125  0129F8  0012               	return	
  6126  0129FA                     __end_of___wmul:
  6127                           	opt stack 0
  6128                           tblptru	equ	0xFF8
  6129                           tblptrh	equ	0xFF7
  6130                           tblptrl	equ	0xFF6
  6131                           tablat	equ	0xFF5
  6132                           prodh	equ	0xFF4
  6133                           prodl	equ	0xFF3
  6134                           postinc0	equ	0xFEE
  6135                           wreg	equ	0xFE8
  6136                           indf2	equ	0xFDF
  6137                           postinc2	equ	0xFDE
  6138                           fsr2h	equ	0xFDA
  6139                           fsr2l	equ	0xFD9
  6140                           status	equ	0xFD8
  6141                           
  6142 ;; *************** function _TMR0_WriteTimer *****************
  6143 ;; Defined at:
  6144 ;;		line 113 in file "mcc_generated_files/tmr0.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  timerVal        2   18[COMRAM] unsigned int 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1    wreg      void 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;Total ram usage:        2 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:    2
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_set_motortime
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text22
  6173  012C4E                     __ptext22:
  6174                           	opt stack 0
  6175  012C4E                     _TMR0_WriteTimer:
  6176                           	opt stack 24
  6177                           
  6178                           ;tmr0.c: 116: TMR0H = timerVal >> 8;
  6179                           
  6180                           ;incstack = 0
  6181  012C4E  501E               	movf	TMR0_WriteTimer@timerVal+1,w,c
  6182  012C50  6ED4               	movwf	4052,c	;volatile
  6183                           
  6184                           ;tmr0.c: 117: TMR0L = (uint8_t) timerVal;
  6185  012C52  C01D  FFD3         	movff	TMR0_WriteTimer@timerVal,4051	;volatile
  6186  012C56  0012               	return		;funcret
  6187  012C58                     __end_of_TMR0_WriteTimer:
  6188                           	opt stack 0
  6189                           tblptru	equ	0xFF8
  6190                           tblptrh	equ	0xFF7
  6191                           tblptrl	equ	0xFF6
  6192                           tablat	equ	0xFF5
  6193                           prodh	equ	0xFF4
  6194                           prodl	equ	0xFF3
  6195                           postinc0	equ	0xFEE
  6196                           wreg	equ	0xFE8
  6197                           indf2	equ	0xFDF
  6198                           postinc2	equ	0xFDE
  6199                           fsr2h	equ	0xFDA
  6200                           fsr2l	equ	0xFD9
  6201                           status	equ	0xFD8
  6202                           
  6203 ;; *************** function _TMR0_StopTimer *****************
  6204 ;; Defined at:
  6205 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;		None
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;		None
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		None
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;Total ram usage:        0 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    2
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_vend_dispense
  6230 ;;		_set_motortime
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text23
  6235  012C92                     __ptext23:
  6236                           	opt stack 0
  6237  012C92                     _TMR0_StopTimer:
  6238                           	opt stack 24
  6239                           
  6240                           ;tmr0.c: 97: T0CON0bits.T0EN = 0;
  6241                           
  6242                           ;incstack = 0
  6243  012C92  9ED5               	bcf	4053,7,c	;volatile
  6244  012C94  0012               	return		;funcret
  6245  012C96                     __end_of_TMR0_StopTimer:
  6246                           	opt stack 0
  6247                           tblptru	equ	0xFF8
  6248                           tblptrh	equ	0xFF7
  6249                           tblptrl	equ	0xFF6
  6250                           tablat	equ	0xFF5
  6251                           prodh	equ	0xFF4
  6252                           prodl	equ	0xFF3
  6253                           postinc0	equ	0xFEE
  6254                           wreg	equ	0xFE8
  6255                           indf2	equ	0xFDF
  6256                           postinc2	equ	0xFDE
  6257                           fsr2h	equ	0xFDA
  6258                           fsr2l	equ	0xFD9
  6259                           status	equ	0xFD8
  6260                           
  6261 ;; *************** function _TMR0_StartTimer *****************
  6262 ;; Defined at:
  6263 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;		None
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		None
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;Total ram usage:        0 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    2
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_set_motortime
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text24
  6292  012C96                     __ptext24:
  6293                           	opt stack 0
  6294  012C96                     _TMR0_StartTimer:
  6295                           	opt stack 24
  6296                           
  6297                           ;tmr0.c: 91: T0CON0bits.T0EN = 1;
  6298                           
  6299                           ;incstack = 0
  6300  012C96  8ED5               	bsf	4053,7,c	;volatile
  6301  012C98  0012               	return		;funcret
  6302  012C9A                     __end_of_TMR0_StartTimer:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           prodh	equ	0xFF4
  6309                           prodl	equ	0xFF3
  6310                           postinc0	equ	0xFEE
  6311                           wreg	equ	0xFE8
  6312                           indf2	equ	0xFDF
  6313                           postinc2	equ	0xFDE
  6314                           fsr2h	equ	0xFDA
  6315                           fsr2l	equ	0xFD9
  6316                           status	equ	0xFD8
  6317                           
  6318 ;; *************** function _disable_channel *****************
  6319 ;; Defined at:
  6320 ;;		line 233 in file "dispense.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  channel         1    wreg     unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  channel         1   24[COMRAM] unsigned char 
  6325 ;;  errormask       1   25[COMRAM] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;Total ram usage:        4 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    3
  6342 ;; This function calls:
  6343 ;;		_DATAEE_ReadByte
  6344 ;;		_DATAEE_WriteByte
  6345 ;; This function is called by:
  6346 ;;		_vend_dispense
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text25
  6351  011FD0                     __ptext25:
  6352                           	opt stack 0
  6353  011FD0                     _disable_channel:
  6354                           	opt stack 24
  6355                           
  6356                           ;incstack = 0
  6357                           ;disable_channel@channel stored from wreg
  6358  011FD0  6E23               	movwf	disable_channel@channel,c
  6359                           
  6360                           ;dispense.c: 235: uint8_t errormask = 0x01;
  6361  011FD2  0E01               	movlw	1
  6362  011FD4  6E24               	movwf	disable_channel@errormask,c
  6363                           
  6364                           ;dispense.c: 236: uint8_t errormask = errormask << channel;
  6365  011FD6  C023  F021         	movff	disable_channel@channel,??_disable_channel
  6366  011FDA  C024  F022         	movff	disable_channel@errormask,??_disable_channel+1
  6367  011FDE  2A21               	incf	??_disable_channel,f,c
  6368  011FE0  D002               	goto	u4554
  6369  011FE2                     u4555:
  6370  011FE2  90D8               	bcf	status,0,c
  6371  011FE4  3622               	rlcf	??_disable_channel+1,f,c
  6372  011FE6                     u4554:
  6373  011FE6  2E21               	decfsz	??_disable_channel,f,c
  6374  011FE8  D7FC               	goto	u4555
  6375  011FEA  5022               	movf	??_disable_channel+1,w,c
  6376  011FEC  6E24               	movwf	disable_channel@errormask,c
  6377                           
  6378                           ;dispense.c: 237: errormask = errormask | DATAEE_ReadByte(venderrors);
  6379  011FEE  0E11               	movlw	low _venderrors
  6380  011FF0  6EF6               	movwf	tblptrl,c
  6381  011FF2                     	if	1	;There is more than 1 active tblptr byte
  6382  011FF2  0EFC               	movlw	high _venderrors
  6383  011FF4  6EF7               	movwf	tblptrh,c
  6384  011FF6                     	endif
  6385  011FF6                     	if	1	;There are 3 active tblptr bytes
  6386  011FF6  0E00               	movlw	low (_venderrors shr (0+16))
  6387  011FF8  6EF8               	movwf	tblptru,c
  6388  011FFA                     	endif
  6389  011FFA  0009               	tblrd		*+
  6390  011FFC  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  6391  012000  000A               	tblrd		*-
  6392  012002  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  6393  012006  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  6394  01200A  1024               	iorwf	disable_channel@errormask,w,c
  6395  01200C  6E24               	movwf	disable_channel@errormask,c
  6396                           
  6397                           ;dispense.c: 238: DATAEE_WriteByte(venderrors, errormask);
  6398  01200E  0E11               	movlw	low _venderrors
  6399  012010  6EF6               	movwf	tblptrl,c
  6400  012012                     	if	1	;There is more than 1 active tblptr byte
  6401  012012  0EFC               	movlw	high _venderrors
  6402  012014  6EF7               	movwf	tblptrh,c
  6403  012016                     	endif
  6404  012016                     	if	1	;There are 3 active tblptr bytes
  6405  012016  0E00               	movlw	low (_venderrors shr (0+16))
  6406  012018  6EF8               	movwf	tblptru,c
  6407  01201A                     	endif
  6408  01201A  0009               	tblrd		*+
  6409  01201C  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  6410  012020  000A               	tblrd		*-
  6411  012022  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  6412  012026  C024  F01F         	movff	disable_channel@errormask,DATAEE_WriteByte@bData
  6413  01202A  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  6414  01202E  0012               	return		;funcret
  6415  012030                     __end_of_disable_channel:
  6416                           	opt stack 0
  6417                           tblptru	equ	0xFF8
  6418                           tblptrh	equ	0xFF7
  6419                           tblptrl	equ	0xFF6
  6420                           tablat	equ	0xFF5
  6421                           prodh	equ	0xFF4
  6422                           prodl	equ	0xFF3
  6423                           postinc0	equ	0xFEE
  6424                           wreg	equ	0xFE8
  6425                           indf2	equ	0xFDF
  6426                           postinc2	equ	0xFDE
  6427                           fsr2h	equ	0xFDA
  6428                           fsr2l	equ	0xFD9
  6429                           status	equ	0xFD8
  6430                           
  6431 ;; *************** function _update_vends *****************
  6432 ;; Defined at:
  6433 ;;		line 241 in file "dispense.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  chanel          1    wreg     unsigned char 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  chanel          1   25[COMRAM] unsigned char 
  6438 ;;  x               1   24[COMRAM] unsigned char 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;Total ram usage:        4 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    3
  6455 ;; This function calls:
  6456 ;;		_DATAEE_ReadByte
  6457 ;;		_DATAEE_WriteByte
  6458 ;; This function is called by:
  6459 ;;		_dispense
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text26
  6464  012090                     __ptext26:
  6465                           	opt stack 0
  6466  012090                     _update_vends:
  6467                           	opt stack 25
  6468                           
  6469                           ;incstack = 0
  6470                           ;update_vends@chanel stored from wreg
  6471  012090  6E24               	movwf	update_vends@chanel,c
  6472                           
  6473                           ;dispense.c: 243: uint8_t x = DATAEE_ReadByte(vendstore + chanel);
  6474  012092  0E17               	movlw	low _vendstore
  6475  012094  6EF6               	movwf	tblptrl,c
  6476  012096                     	if	1	;There is more than 1 active tblptr byte
  6477  012096  0EFC               	movlw	high _vendstore
  6478  012098  6EF7               	movwf	tblptrh,c
  6479  01209A                     	endif
  6480  01209A                     	if	1	;There are 3 active tblptr bytes
  6481  01209A  0E00               	movlw	low (_vendstore shr (0+16))
  6482  01209C  6EF8               	movwf	tblptru,c
  6483  01209E                     	endif
  6484  01209E  0009               	tblrd		*+
  6485  0120A0  CFF5 F021          	movff	tablat,??_update_vends
  6486  0120A4  0009               	tblrd		*+
  6487  0120A6  CFF5 F022          	movff	tablat,??_update_vends+1
  6488  0120AA  5024               	movf	update_vends@chanel,w,c
  6489  0120AC  2421               	addwf	??_update_vends,w,c
  6490  0120AE  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  6491  0120B0  0E00               	movlw	0
  6492  0120B2  2022               	addwfc	??_update_vends+1,w,c
  6493  0120B4  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  6494  0120B6  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  6495  0120BA  6E23               	movwf	update_vends@x,c
  6496                           
  6497                           ;dispense.c: 244: x++;
  6498  0120BC  2A23               	incf	update_vends@x,f,c
  6499                           
  6500                           ;dispense.c: 245: DATAEE_WriteByte(vendstore + chanel, x);
  6501  0120BE  0E17               	movlw	low _vendstore
  6502  0120C0  6EF6               	movwf	tblptrl,c
  6503  0120C2                     	if	1	;There is more than 1 active tblptr byte
  6504  0120C2  0EFC               	movlw	high _vendstore
  6505  0120C4  6EF7               	movwf	tblptrh,c
  6506  0120C6                     	endif
  6507  0120C6                     	if	1	;There are 3 active tblptr bytes
  6508  0120C6  0E00               	movlw	low (_vendstore shr (0+16))
  6509  0120C8  6EF8               	movwf	tblptru,c
  6510  0120CA                     	endif
  6511  0120CA  0009               	tblrd		*+
  6512  0120CC  CFF5 F021          	movff	tablat,??_update_vends
  6513  0120D0  0009               	tblrd		*+
  6514  0120D2  CFF5 F022          	movff	tablat,??_update_vends+1
  6515  0120D6  5024               	movf	update_vends@chanel,w,c
  6516  0120D8  2421               	addwf	??_update_vends,w,c
  6517  0120DA  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6518  0120DC  0E00               	movlw	0
  6519  0120DE  2022               	addwfc	??_update_vends+1,w,c
  6520  0120E0  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6521  0120E2  C023  F01F         	movff	update_vends@x,DATAEE_WriteByte@bData
  6522  0120E6  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  6523  0120EA  0012               	return		;funcret
  6524  0120EC                     __end_of_update_vends:
  6525                           	opt stack 0
  6526                           tblptru	equ	0xFF8
  6527                           tblptrh	equ	0xFF7
  6528                           tblptrl	equ	0xFF6
  6529                           tablat	equ	0xFF5
  6530                           prodh	equ	0xFF4
  6531                           prodl	equ	0xFF3
  6532                           postinc0	equ	0xFEE
  6533                           wreg	equ	0xFE8
  6534                           indf2	equ	0xFDF
  6535                           postinc2	equ	0xFDE
  6536                           fsr2h	equ	0xFDA
  6537                           fsr2l	equ	0xFD9
  6538                           status	equ	0xFD8
  6539                           
  6540 ;; *************** function _mdb_poll *****************
  6541 ;; Defined at:
  6542 ;;		line 164 in file "mdb.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;		None
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  i               1   28[COMRAM] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      unsigned char 
  6549 ;; Registers used:
  6550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;Total ram usage:        1 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; Hardware stack levels required when called:    6
  6563 ;; This function calls:
  6564 ;;		_TMR3_Initialize
  6565 ;;		_mdb_comm
  6566 ;; This function is called by:
  6567 ;;		_main
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text27
  6572  010496                     __ptext27:
  6573                           	opt stack 0
  6574  010496                     _mdb_poll:
  6575                           	opt stack 24
  6576                           
  6577                           ;mdb.c: 168: TMR3_Initialize();
  6578                           
  6579                           ;incstack = 0
  6580  010496  ECDB  F093         	call	_TMR3_Initialize	;wreg free
  6581                           
  6582                           ;mdb.c: 169: uint8_t i = mdb_comm(note_poll, 0x00);
  6583  01049A  0E00               	movlw	0
  6584  01049C  6E24               	movwf	mdb_comm@mcount,c
  6585  01049E  0E43               	movlw	low _note_poll
  6586  0104A0  6EF6               	movwf	tblptrl,c
  6587  0104A2                     	if	1	;There is more than 1 active tblptr byte
  6588  0104A2  0EFC               	movlw	high _note_poll
  6589  0104A4  6EF7               	movwf	tblptrh,c
  6590  0104A6                     	endif
  6591  0104A6                     	if	1	;There are 3 active tblptr bytes
  6592  0104A6  0E00               	movlw	low (_note_poll shr (0+16))
  6593  0104A8  6EF8               	movwf	tblptru,c
  6594  0104AA                     	endif
  6595  0104AA  0008               	tblrd		*
  6596  0104AC  50F5               	movf	tablat,w,c
  6597  0104AE  EC03  F085         	call	_mdb_comm
  6598  0104B2  6E27               	movwf	mdb_poll@i,c
  6599                           
  6600                           ;mdb.c: 170: notebyte = mdbdata[0];
  6601  0104B4  C060  F041         	movff	_mdbdata,_notebyte
  6602                           
  6603                           ;mdb.c: 172: if((mdbdata[0] & 0x80) != 0)
  6604  0104B8  0100               	movlb	0	; () banked
  6605  0104BA  AF60               	btfss	_mdbdata& (0+255),7,b
  6606  0104BC  D050               	goto	l2991
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;mdb.c: 173: {
  6610                           ;mdb.c: 174: notebyte = mdbdata[0] & 0x7F;
  6611  0104BE  5160               	movf	_mdbdata& (0+255),w,b
  6612  0104C0  0B7F               	andlw	127
  6613  0104C2  6E41               	movwf	_notebyte,c
  6614                           
  6615                           ;mdb.c: 175: switch(notebyte)
  6616  0104C4  D019               	goto	l2981
  6617  0104C6                     
  6618                           ; BSR set to: 0
  6619  0104C6  0E0A               	movlw	10
  6620  0104C8  6E3A               	movwf	_credit,c	;volatile
  6621                           
  6622                           ;mdb.c: 178: return credit;
  6623  0104CA  503A               	movf	_credit,w,c	;volatile
  6624  0104CC  0012               	return	
  6625  0104CE  0E14               	movlw	20
  6626  0104D0  6E3A               	movwf	_credit,c	;volatile
  6627                           
  6628                           ;mdb.c: 180: return credit;
  6629  0104D2  503A               	movf	_credit,w,c	;volatile
  6630  0104D4  0012               	return	
  6631  0104D6  0E32               	movlw	50
  6632  0104D8  6E3A               	movwf	_credit,c	;volatile
  6633                           
  6634                           ;mdb.c: 182: return credit;
  6635  0104DA  503A               	movf	_credit,w,c	;volatile
  6636  0104DC  0012               	return	
  6637  0104DE  0E64               	movlw	100
  6638  0104E0  6E3A               	movwf	_credit,c	;volatile
  6639                           
  6640                           ;mdb.c: 184: return credit;
  6641  0104E2  503A               	movf	_credit,w,c	;volatile
  6642  0104E4  0012               	return	
  6643  0104E6  0EC8               	movlw	200
  6644  0104E8  6E3A               	movwf	_credit,c	;volatile
  6645                           
  6646                           ;mdb.c: 186: return credit;
  6647  0104EA  503A               	movf	_credit,w,c	;volatile
  6648  0104EC  0012               	return	
  6649  0104EE  0E10               	movlw	16
  6650  0104F0  6E3A               	movwf	_credit,c	;volatile
  6651                           
  6652                           ;mdb.c: 188: mdbflags.noteerr = 1;
  6653  0104F2  823F               	bsf	_mdbflags,1,c
  6654                           
  6655                           ;mdb.c: 189: return credit;
  6656  0104F4  503A               	movf	_credit,w,c	;volatile
  6657                           
  6658                           ;mdb.c: 190: }
  6659  0104F6  0012               	return	
  6660  0104F8                     l2981:
  6661  0104F8  5041               	movf	_notebyte,w,c
  6662                           
  6663                           ; Switch size 1, requested type "space"
  6664                           ; Number of cases is 5, Range of values is 0 to 4
  6665                           ; switch strategies available:
  6666                           ; Name         Instructions Cycles
  6667                           ; simple_byte           16     9 (average)
  6668                           ;	Chosen strategy is simple_byte
  6669  0104FA  0A00               	xorlw	0	; case 0
  6670  0104FC  B4D8               	btfsc	status,2,c
  6671  0104FE  D7E3               	goto	l2982
  6672  010500  0A01               	xorlw	1	; case 1
  6673  010502  B4D8               	btfsc	status,2,c
  6674  010504  D7E4               	goto	l2984
  6675  010506  0A03               	xorlw	3	; case 2
  6676  010508  B4D8               	btfsc	status,2,c
  6677  01050A  D7E5               	goto	l2985
  6678  01050C  0A01               	xorlw	1	; case 3
  6679  01050E  B4D8               	btfsc	status,2,c
  6680  010510  D7E6               	goto	l2986
  6681  010512  0A07               	xorlw	7	; case 4
  6682  010514  B4D8               	btfsc	status,2,c
  6683  010516  D7E7               	goto	l2987
  6684  010518  D7EA               	goto	l2988
  6685  01051A  0E00               	movlw	0
  6686  01051C  6E3A               	movwf	_credit,c	;volatile
  6687                           
  6688                           ;mdb.c: 198: return credit;
  6689  01051E  503A               	movf	_credit,w,c	;volatile
  6690  010520  0012               	return	
  6691  010522  0E01               	movlw	1
  6692  010524  D01A               	goto	L12
  6693  010526  0E02               	movlw	2
  6694  010528  D018               	goto	L12
  6695  01052A  0E00               	movlw	0
  6696  01052C  6E3A               	movwf	_credit,c	;volatile
  6697                           
  6698                           ;mdb.c: 207: mdbflags.noteerr = 0;
  6699  01052E  923F               	bcf	_mdbflags,1,c
  6700                           
  6701                           ;mdb.c: 208: return credit;
  6702  010530  503A               	movf	_credit,w,c	;volatile
  6703  010532  0012               	return	
  6704  010534  0E04               	movlw	4
  6705  010536  D011               	goto	L12
  6706  010538  0E05               	movlw	5
  6707  01053A  D00F               	goto	L12
  6708  01053C  0E06               	movlw	6
  6709  01053E  D00D               	goto	L12
  6710  010540  0E07               	movlw	7
  6711  010542  D00B               	goto	L12
  6712  010544  0E08               	movlw	8
  6713  010546  D009               	goto	L12
  6714  010548  0E09               	movlw	9
  6715  01054A  D007               	goto	L12
  6716  01054C  0E0A               	movlw	10
  6717  01054E  D005               	goto	L12
  6718  010550  0E0B               	movlw	11
  6719  010552  D003               	goto	L12
  6720  010554  0E0C               	movlw	12
  6721  010556  D001               	goto	L12
  6722  010558  0E00               	movlw	0
  6723  01055A                     L12:
  6724  01055A  6E3A               	movwf	_credit,c	;volatile
  6725                           
  6726                           ;mdb.c: 237: }
  6727  01055C  D02A               	goto	l2994
  6728  01055E                     l2991:
  6729  01055E  0100               	movlb	0	; () banked
  6730  010560  5160               	movf	_mdbdata& (0+255),w,b
  6731                           
  6732                           ; Switch size 1, requested type "space"
  6733                           ; Number of cases is 13, Range of values is 0 to 12
  6734                           ; switch strategies available:
  6735                           ; Name         Instructions Cycles
  6736                           ; simple_byte           40    21 (average)
  6737                           ;	Chosen strategy is simple_byte
  6738  010562  0A00               	xorlw	0	; case 0
  6739  010564  B4D8               	btfsc	status,2,c
  6740  010566  D7D9               	goto	l2992
  6741  010568  0A01               	xorlw	1	; case 1
  6742  01056A  B4D8               	btfsc	status,2,c
  6743  01056C  D7DA               	goto	l2993
  6744  01056E  0A03               	xorlw	3	; case 2
  6745  010570  B4D8               	btfsc	status,2,c
  6746  010572  D7D9               	goto	l2995
  6747  010574  0A01               	xorlw	1	; case 3
  6748  010576  B4D8               	btfsc	status,2,c
  6749  010578  D7D8               	goto	l2996
  6750  01057A  0A07               	xorlw	7	; case 4
  6751  01057C  B4D8               	btfsc	status,2,c
  6752  01057E  D7DA               	goto	l2997
  6753  010580  0A01               	xorlw	1	; case 5
  6754  010582  B4D8               	btfsc	status,2,c
  6755  010584  D7D9               	goto	l2998
  6756  010586  0A03               	xorlw	3	; case 6
  6757  010588  B4D8               	btfsc	status,2,c
  6758  01058A  D7D8               	goto	l2999
  6759  01058C  0A01               	xorlw	1	; case 7
  6760  01058E  B4D8               	btfsc	status,2,c
  6761  010590  D7D7               	goto	l3000
  6762  010592  0A0F               	xorlw	15	; case 8
  6763  010594  B4D8               	btfsc	status,2,c
  6764  010596  D7D6               	goto	l3001
  6765  010598  0A01               	xorlw	1	; case 9
  6766  01059A  B4D8               	btfsc	status,2,c
  6767  01059C  D7D5               	goto	l3002
  6768  01059E  0A03               	xorlw	3	; case 10
  6769  0105A0  B4D8               	btfsc	status,2,c
  6770  0105A2  D7D4               	goto	l3003
  6771  0105A4  0A01               	xorlw	1	; case 11
  6772  0105A6  B4D8               	btfsc	status,2,c
  6773  0105A8  D7D3               	goto	l3004
  6774  0105AA  0A07               	xorlw	7	; case 12
  6775  0105AC  B4D8               	btfsc	status,2,c
  6776  0105AE  D7D2               	goto	l3005
  6777  0105B0  D7D3               	goto	l3006
  6778  0105B2                     l2994:
  6779                           
  6780                           ;mdb.c: 238: mdbflags.noteerr = 1;
  6781  0105B2  823F               	bsf	_mdbflags,1,c
  6782                           
  6783                           ;mdb.c: 239: return credit;
  6784  0105B4  503A               	movf	_credit,w,c	;volatile
  6785  0105B6  0012               	return	
  6786  0105B8                     __end_of_mdb_poll:
  6787                           	opt stack 0
  6788                           tblptru	equ	0xFF8
  6789                           tblptrh	equ	0xFF7
  6790                           tblptrl	equ	0xFF6
  6791                           tablat	equ	0xFF5
  6792                           prodh	equ	0xFF4
  6793                           prodl	equ	0xFF3
  6794                           postinc0	equ	0xFEE
  6795                           wreg	equ	0xFE8
  6796                           indf2	equ	0xFDF
  6797                           postinc2	equ	0xFDE
  6798                           fsr2h	equ	0xFDA
  6799                           fsr2l	equ	0xFD9
  6800                           status	equ	0xFD8
  6801                           
  6802 ;; *************** function _mdb_comm *****************
  6803 ;; Defined at:
  6804 ;;		line 244 in file "mdb.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  slvadd          1    wreg     unsigned char 
  6807 ;;  mcount          1   25[COMRAM] unsigned char 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  slvadd          1   26[COMRAM] unsigned char 
  6810 ;;  i               1   27[COMRAM] unsigned char 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  1    wreg      unsigned char 
  6813 ;; Registers used:
  6814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6820 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;Total ram usage:        3 bytes
  6825 ;; Hardware stack levels used:    1
  6826 ;; Hardware stack levels required when called:    5
  6827 ;; This function calls:
  6828 ;;		_EUSART1_Read
  6829 ;;		_TMR1_Initialize
  6830 ;;		_init_mdbdata
  6831 ;;		_mdb_on
  6832 ;;		_mdb_transmit
  6833 ;;		_mdb_waitr
  6834 ;; This function is called by:
  6835 ;;		_mdb_init
  6836 ;;		_mdb_reset
  6837 ;;		_mdb_noten
  6838 ;;		_mdb_security
  6839 ;;		_mdb_poll
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text28
  6844  010A06                     __ptext28:
  6845                           	opt stack 0
  6846  010A06                     _mdb_comm:
  6847                           	opt stack 22
  6848                           
  6849                           ;incstack = 0
  6850                           ;mdb_comm@slvadd stored from wreg
  6851  010A06  6E25               	movwf	mdb_comm@slvadd,c
  6852                           
  6853                           ;mdb.c: 247: uint8_t i = 0;
  6854  010A08  0E00               	movlw	0
  6855  010A0A  6E26               	movwf	mdb_comm@i,c
  6856                           
  6857                           ;mdb.c: 249: TX1STAbits.TX9D = 1;
  6858  010A0C  809E               	bsf	3998,0,c	;volatile
  6859                           
  6860                           ;mdb.c: 250: mdb_on();
  6861  010A0E  EC4D  F096         	call	_mdb_on	;wreg free
  6862                           
  6863                           ;mdb.c: 254: mdb_transmit(slvadd);
  6864  010A12  5025               	movf	mdb_comm@slvadd,w,c
  6865  010A14  ECEB  F095         	call	_mdb_transmit
  6866                           
  6867                           ;mdb.c: 255: TX1STAbits.TX9D = 0;
  6868  010A18  909E               	bcf	3998,0,c	;volatile
  6869                           
  6870                           ;mdb.c: 259: chkbyte = slvadd;
  6871  010A1A  C025  F040         	movff	mdb_comm@slvadd,_chkbyte
  6872                           
  6873                           ;mdb.c: 260: if(mcount != 0)
  6874  010A1E  5024               	movf	mdb_comm@mcount,w,c
  6875  010A20  B4D8               	btfsc	status,2,c
  6876  010A22  D01E               	goto	u4360
  6877                           
  6878                           ;mdb.c: 261: {
  6879                           ;mdb.c: 262: i = mcount + 1;
  6880  010A24  2824               	incf	mdb_comm@mcount,w,c
  6881  010A26  6E26               	movwf	mdb_comm@i,c
  6882                           
  6883                           ;mdb.c: 263: while(i != 0)
  6884  010A28  D018               	goto	l3010
  6885  010A2A                     
  6886                           ;mdb.c: 264: {
  6887                           ;mdb.c: 265: mdb_transmit(mdbdata[mcount]);
  6888  010A2A  5024               	movf	mdb_comm@mcount,w,c
  6889  010A2C  0D01               	mullw	1
  6890  010A2E  0E60               	movlw	low _mdbdata
  6891  010A30  24F3               	addwf	prodl,w,c
  6892  010A32  6ED9               	movwf	fsr2l,c
  6893  010A34  0E00               	movlw	high _mdbdata
  6894  010A36  20F4               	addwfc	prodh,w,c
  6895  010A38  6EDA               	movwf	fsr2h,c
  6896  010A3A  50DF               	movf	indf2,w,c
  6897  010A3C  ECEB  F095         	call	_mdb_transmit
  6898                           
  6899                           ;mdb.c: 268: chkbyte = chkbyte + mdbdata[mcount];
  6900  010A40  5024               	movf	mdb_comm@mcount,w,c
  6901  010A42  0D01               	mullw	1
  6902  010A44  0E60               	movlw	low _mdbdata
  6903  010A46  24F3               	addwf	prodl,w,c
  6904  010A48  6ED9               	movwf	fsr2l,c
  6905  010A4A  0E00               	movlw	high _mdbdata
  6906  010A4C  20F4               	addwfc	prodh,w,c
  6907  010A4E  6EDA               	movwf	fsr2h,c
  6908  010A50  50DF               	movf	indf2,w,c
  6909  010A52  2440               	addwf	_chkbyte,w,c
  6910  010A54  6E40               	movwf	_chkbyte,c
  6911                           
  6912                           ;mdb.c: 269: i--;
  6913  010A56  0626               	decf	mdb_comm@i,f,c
  6914                           
  6915                           ;mdb.c: 270: mcount--;
  6916  010A58  0624               	decf	mdb_comm@mcount,f,c
  6917  010A5A                     l3010:
  6918  010A5A  5026               	movf	mdb_comm@i,w,c
  6919  010A5C  A4D8               	btfss	status,2,c
  6920  010A5E  D7E5               	goto	l3011
  6921  010A60                     u4360:
  6922                           
  6923                           ;mdb.c: 271: }
  6924                           ;mdb.c: 272: }
  6925                           ;mdb.c: 273: mdb_transmit(chkbyte);
  6926  010A60  5040               	movf	_chkbyte,w,c
  6927  010A62  ECEB  F095         	call	_mdb_transmit
  6928                           
  6929                           ;mdb.c: 280: init_mdbdata(0xFF);
  6930  010A66  0EFF               	movlw	255
  6931  010A68  ECD5  F094         	call	_init_mdbdata
  6932                           
  6933                           ;mdb.c: 281: TMR1_Initialize();
  6934  010A6C  ECF6  F093         	call	_TMR1_Initialize	;wreg free
  6935                           
  6936                           ;mdb.c: 282: dbcount = 0;
  6937  010A70  0E00               	movlw	0
  6938  010A72  0100               	movlb	0	; () banked
  6939  010A74  6FA5               	movwf	(_dbcount+1)& (0+255),b
  6940  010A76  0E00               	movlw	0
  6941  010A78  6FA4               	movwf	_dbcount& (0+255),b
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;mdb.c: 283: mdbflags.isdata = 0;
  6945  010A7A  903F               	bcf	_mdbflags,0,c
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;mdb.c: 284: i = 0;
  6949  010A7C  0E00               	movlw	0
  6950  010A7E  6E26               	movwf	mdb_comm@i,c
  6951                           
  6952                           ;mdb.c: 286: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  6953  010A80  D01F               	goto	u4390
  6954  010A82                     
  6955                           ;mdb.c: 287: {
  6956                           ;mdb.c: 289: dbcount++;
  6957                           
  6958                           ; BSR set to: 0
  6959  010A82  0100               	movlb	0	; () banked
  6960  010A84  4BA4               	infsnz	_dbcount& (0+255),f,b
  6961  010A86  2BA5               	incf	(_dbcount+1)& (0+255),f,b
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;mdb.c: 290: mdbflags.isdata = 0;
  6965  010A88  903F               	bcf	_mdbflags,0,c
  6966                           
  6967                           ;mdb.c: 293: while(PIR3bits.RC1IF && !mdbflags.isdata)
  6968  010A8A  D015               	goto	l3015
  6969  010A8C                     
  6970                           ;mdb.c: 294: {
  6971                           ;mdb.c: 297: mdbdata[i] = EUSART1_Read();
  6972                           
  6973                           ; BSR set to: 0
  6974  010A8C  5026               	movf	mdb_comm@i,w,c
  6975  010A8E  0D01               	mullw	1
  6976  010A90  0E60               	movlw	low _mdbdata
  6977  010A92  24F3               	addwf	prodl,w,c
  6978  010A94  6ED9               	movwf	fsr2l,c
  6979  010A96  0E00               	movlw	high _mdbdata
  6980  010A98  20F4               	addwfc	prodh,w,c
  6981  010A9A  6EDA               	movwf	fsr2h,c
  6982  010A9C  ECD9  F095         	call	_EUSART1_Read	;wreg free
  6983  010AA0  6EDF               	movwf	indf2,c
  6984                           
  6985                           ;mdb.c: 298: mdb_waitr();
  6986  010AA2  EC40  F096         	call	_mdb_waitr	;wreg free
  6987                           
  6988                           ;mdb.c: 300: mdbflags.isdata = RC1STAbits.RX9D;
  6989  010AA6  A09D               	btfss	3997,0,c	;volatile
  6990  010AA8  D002               	bra	u4375
  6991  010AAA  803F               	bsf	_mdbflags,0,c
  6992  010AAC  D001               	bra	u4377
  6993  010AAE                     u4375:
  6994  010AAE  903F               	bcf	_mdbflags,0,c
  6995  010AB0                     u4377:
  6996                           
  6997                           ;mdb.c: 301: TMR1_Initialize();
  6998  010AB0  ECF6  F093         	call	_TMR1_Initialize	;wreg free
  6999                           
  7000                           ;mdb.c: 302: i++;
  7001  010AB4  2A26               	incf	mdb_comm@i,f,c
  7002  010AB6                     l3015:
  7003  010AB6  010E               	movlb	14	; () banked
  7004  010AB8  ABCD               	btfss	205,5,b	;volatile
  7005  010ABA  D002               	goto	u4390
  7006                           
  7007                           ; BSR set to: 14
  7008  010ABC  A03F               	btfss	_mdbflags,0,c
  7009  010ABE  D7E6               	goto	l3016
  7010  010AC0                     u4390:
  7011                           
  7012                           ; BSR set to: 14
  7013                           
  7014                           ; BSR set to: 14
  7015  010AC0  010E               	movlb	14	; () banked
  7016  010AC2  B1CE               	btfsc	206,0,b	;volatile
  7017  010AC4  D002               	goto	u4410
  7018                           
  7019                           ; BSR set to: 14
  7020  010AC6  A03F               	btfss	_mdbflags,0,c
  7021  010AC8  D7DC               	goto	l3014
  7022  010ACA                     u4410:
  7023                           
  7024                           ; BSR set to: 14
  7025                           ;mdb.c: 304: }
  7026                           ;mdb.c: 306: }
  7027                           ;mdb.c: 308: i--;
  7028                           
  7029                           ; BSR set to: 14
  7030                           
  7031                           ; BSR set to: 14
  7032  010ACA  0626               	decf	mdb_comm@i,f,c
  7033                           
  7034                           ; BSR set to: 14
  7035                           ;mdb.c: 310: mdbflags.timeout = PIR4bits.TMR1IF;
  7036  010ACC  A1CE               	btfss	206,0,b	;volatile
  7037  010ACE  D002               	bra	u4425
  7038  010AD0  863F               	bsf	_mdbflags,3,c
  7039  010AD2  D001               	bra	u4427
  7040  010AD4                     u4425:
  7041  010AD4  963F               	bcf	_mdbflags,3,c
  7042  010AD6                     u4427:
  7043                           
  7044                           ;mdb.c: 312: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  7045  010AD6  A03F               	btfss	_mdbflags,0,c
  7046  010AD8  D011               	goto	l3023
  7047  010ADA  5026               	movf	mdb_comm@i,w,c
  7048  010ADC  0D01               	mullw	1
  7049  010ADE  0E60               	movlw	low _mdbdata
  7050  010AE0  24F3               	addwf	prodl,w,c
  7051  010AE2  6ED9               	movwf	fsr2l,c
  7052  010AE4  0E00               	movlw	high _mdbdata
  7053  010AE6  20F4               	addwfc	prodh,w,c
  7054  010AE8  6EDA               	movwf	fsr2h,c
  7055  010AEA  50DF               	movf	indf2,w,c
  7056  010AEC  B4D8               	btfsc	status,2,c
  7057  010AEE  D006               	goto	l3023
  7058                           
  7059                           ;mdb.c: 313: {
  7060                           ;mdb.c: 314: TX1STAbits.TX9D = 1;
  7061  010AF0  809E               	bsf	3998,0,c	;volatile
  7062                           
  7063                           ;mdb.c: 315: mdb_on();
  7064  010AF2  EC4D  F096         	call	_mdb_on	;wreg free
  7065                           
  7066                           ;mdb.c: 316: mdb_transmit(0x00);
  7067  010AF6  0E00               	movlw	0
  7068  010AF8  ECEB  F095         	call	_mdb_transmit
  7069  010AFC                     l3023:
  7070                           
  7071                           ;mdb.c: 318: }
  7072                           ;mdb.c: 320: mdb_on();
  7073  010AFC  EC4D  F096         	call	_mdb_on	;wreg free
  7074                           
  7075                           ;mdb.c: 322: return(i);
  7076  010B00  5026               	movf	mdb_comm@i,w,c
  7077  010B02  0012               	return	
  7078  010B04                     __end_of_mdb_comm:
  7079                           	opt stack 0
  7080                           tblptru	equ	0xFF8
  7081                           tblptrh	equ	0xFF7
  7082                           tblptrl	equ	0xFF6
  7083                           tablat	equ	0xFF5
  7084                           prodh	equ	0xFF4
  7085                           prodl	equ	0xFF3
  7086                           postinc0	equ	0xFEE
  7087                           wreg	equ	0xFE8
  7088                           indf2	equ	0xFDF
  7089                           postinc2	equ	0xFDE
  7090                           fsr2h	equ	0xFDA
  7091                           fsr2l	equ	0xFD9
  7092                           status	equ	0xFD8
  7093                           
  7094 ;; *************** function _mdb_waitr *****************
  7095 ;; Defined at:
  7096 ;;		line 346 in file "mdb.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		None
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    2
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_mdb_comm
  7121 ;;		_cctalk_read
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text29
  7126  012C80                     __ptext29:
  7127                           	opt stack 0
  7128  012C80                     _mdb_waitr:
  7129                           	opt stack 24
  7130                           
  7131                           ;mdb.c: 349: {
  7132                           
  7133                           ;mdb.c: 348: while(BAUD1CONbits.RCIDL == 0)
  7134                           
  7135                           ;incstack = 0
  7136  012C80  BC9F               	btfsc	3999,6,c	;volatile
  7137  012C82  0012               	return	
  7138  012C84  D7FD               	goto	_mdb_waitr
  7139  012C86                     __end_of_mdb_waitr:
  7140                           	opt stack 0
  7141                           tblptru	equ	0xFF8
  7142                           tblptrh	equ	0xFF7
  7143                           tblptrl	equ	0xFF6
  7144                           tablat	equ	0xFF5
  7145                           prodh	equ	0xFF4
  7146                           prodl	equ	0xFF3
  7147                           postinc0	equ	0xFEE
  7148                           wreg	equ	0xFE8
  7149                           indf2	equ	0xFDF
  7150                           postinc2	equ	0xFDE
  7151                           fsr2h	equ	0xFDA
  7152                           fsr2l	equ	0xFD9
  7153                           status	equ	0xFD8
  7154                           
  7155 ;; *************** function _mdb_transmit *****************
  7156 ;; Defined at:
  7157 ;;		line 447 in file "mdb.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  txbyte          1    wreg     unsigned char 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  txbyte          1   19[COMRAM] unsigned char 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;Total ram usage:        1 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    3
  7178 ;; This function calls:
  7179 ;;		_EUSART1_Write
  7180 ;;		_mdb_waitx
  7181 ;; This function is called by:
  7182 ;;		_mdb_comm
  7183 ;;		_mdb_test
  7184 ;;		_cctalk_comm
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text30
  7189  012BD6                     __ptext30:
  7190                           	opt stack 0
  7191  012BD6                     _mdb_transmit:
  7192                           	opt stack 23
  7193                           
  7194                           ;incstack = 0
  7195                           ;mdb_transmit@txbyte stored from wreg
  7196  012BD6  6E1E               	movwf	mdb_transmit@txbyte,c
  7197                           
  7198                           ;mdb.c: 449: EUSART1_Write(txbyte);
  7199  012BD8  501E               	movf	mdb_transmit@txbyte,w,c
  7200  012BDA  ECF2  F095         	call	_EUSART1_Write
  7201                           
  7202                           ;mdb.c: 450: mdb_waitx();
  7203  012BDE  EC43  F096         	call	_mdb_waitx	;wreg free
  7204  012BE2  0012               	return		;funcret
  7205  012BE4                     __end_of_mdb_transmit:
  7206                           	opt stack 0
  7207                           tblptru	equ	0xFF8
  7208                           tblptrh	equ	0xFF7
  7209                           tblptrl	equ	0xFF6
  7210                           tablat	equ	0xFF5
  7211                           prodh	equ	0xFF4
  7212                           prodl	equ	0xFF3
  7213                           postinc0	equ	0xFEE
  7214                           wreg	equ	0xFE8
  7215                           indf2	equ	0xFDF
  7216                           postinc2	equ	0xFDE
  7217                           fsr2h	equ	0xFDA
  7218                           fsr2l	equ	0xFD9
  7219                           status	equ	0xFD8
  7220                           
  7221 ;; *************** function _mdb_waitx *****************
  7222 ;; Defined at:
  7223 ;;		line 338 in file "mdb.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		None
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7241 ;;Total ram usage:        0 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:    2
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_mdb_transmit
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text31
  7252  012C86                     __ptext31:
  7253                           	opt stack 0
  7254  012C86                     _mdb_waitx:
  7255                           	opt stack 23
  7256                           
  7257                           ;mdb.c: 341: {
  7258                           
  7259                           ;mdb.c: 340: while(TX1STAbits.TRMT == 0)
  7260                           
  7261                           ;incstack = 0
  7262  012C86  B29E               	btfsc	3998,1,c	;volatile
  7263  012C88  0012               	return	
  7264  012C8A  D7FD               	goto	_mdb_waitx
  7265  012C8C                     __end_of_mdb_waitx:
  7266                           	opt stack 0
  7267                           tblptru	equ	0xFF8
  7268                           tblptrh	equ	0xFF7
  7269                           tblptrl	equ	0xFF6
  7270                           tablat	equ	0xFF5
  7271                           prodh	equ	0xFF4
  7272                           prodl	equ	0xFF3
  7273                           postinc0	equ	0xFEE
  7274                           wreg	equ	0xFE8
  7275                           indf2	equ	0xFDF
  7276                           postinc2	equ	0xFDE
  7277                           fsr2h	equ	0xFDA
  7278                           fsr2l	equ	0xFD9
  7279                           status	equ	0xFD8
  7280                           
  7281 ;; *************** function _EUSART1_Write *****************
  7282 ;; Defined at:
  7283 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  txData          1    wreg     unsigned char 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  txData          1   18[COMRAM] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;Total ram usage:        1 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    2
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_mdb_transmit
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text32
  7312  012BE4                     __ptext32:
  7313                           	opt stack 0
  7314  012BE4                     _EUSART1_Write:
  7315                           	opt stack 23
  7316                           
  7317                           ;incstack = 0
  7318                           ;EUSART1_Write@txData stored from wreg
  7319  012BE4  6E1D               	movwf	EUSART1_Write@txData,c
  7320  012BE6                     
  7321                           ;eusart1.c: 114: {
  7322                           
  7323                           ;eusart1.c: 113: while(0 == PIR3bits.TX1IF)
  7324  012BE6  010E               	movlb	14	; () banked
  7325  012BE8  A9CD               	btfss	205,4,b	;volatile
  7326  012BEA  D7FD               	goto	l10479
  7327                           
  7328                           ; BSR set to: 14
  7329                           ;eusart1.c: 115: }
  7330                           ;eusart1.c: 117: TX1REG = txData;
  7331                           
  7332                           ; BSR set to: 14
  7333  012BEC  C01D  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  7334                           
  7335                           ; BSR set to: 14
  7336  012BF0  0012               	return		;funcret
  7337  012BF2                     __end_of_EUSART1_Write:
  7338                           	opt stack 0
  7339                           tblptru	equ	0xFF8
  7340                           tblptrh	equ	0xFF7
  7341                           tblptrl	equ	0xFF6
  7342                           tablat	equ	0xFF5
  7343                           prodh	equ	0xFF4
  7344                           prodl	equ	0xFF3
  7345                           postinc0	equ	0xFEE
  7346                           wreg	equ	0xFE8
  7347                           indf2	equ	0xFDF
  7348                           postinc2	equ	0xFDE
  7349                           fsr2h	equ	0xFDA
  7350                           fsr2l	equ	0xFD9
  7351                           status	equ	0xFD8
  7352                           
  7353 ;; *************** function _mdb_on *****************
  7354 ;; Defined at:
  7355 ;;		line 325 in file "mdb.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;		None
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		None
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7373 ;;Total ram usage:        0 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    2
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_mdb_comm
  7380 ;;		_mdb_test
  7381 ;;		_cctalk_init
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text33
  7386  012C9A                     __ptext33:
  7387                           	opt stack 0
  7388  012C9A                     _mdb_on:
  7389                           	opt stack 24
  7390                           
  7391                           ;mdb.c: 331: LATCbits.LATC0 = 1;
  7392                           
  7393                           ; BSR set to: 14
  7394                           ;incstack = 0
  7395  012C9A  8085               	bsf	3973,0,c	;volatile
  7396  012C9C  0012               	return		;funcret
  7397  012C9E                     __end_of_mdb_on:
  7398                           	opt stack 0
  7399                           tblptru	equ	0xFF8
  7400                           tblptrh	equ	0xFF7
  7401                           tblptrl	equ	0xFF6
  7402                           tablat	equ	0xFF5
  7403                           prodh	equ	0xFF4
  7404                           prodl	equ	0xFF3
  7405                           postinc0	equ	0xFEE
  7406                           wreg	equ	0xFE8
  7407                           indf2	equ	0xFDF
  7408                           postinc2	equ	0xFDE
  7409                           fsr2h	equ	0xFDA
  7410                           fsr2l	equ	0xFD9
  7411                           status	equ	0xFD8
  7412                           
  7413 ;; *************** function _init_mdbdata *****************
  7414 ;; Defined at:
  7415 ;;		line 13 in file "mdb.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  initdata        1    wreg     unsigned char 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  initdata        1   23[COMRAM] unsigned char 
  7420 ;;  i               1   24[COMRAM] unsigned char 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;Total ram usage:        2 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    4
  7437 ;; This function calls:
  7438 ;;		_init_pricestore
  7439 ;; This function is called by:
  7440 ;;		_mdb_noten
  7441 ;;		_mdb_security
  7442 ;;		_mdb_comm
  7443 ;;		_cctalk_pinenter
  7444 ;;		_cctalk_comm
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text34
  7449  0129AA                     __ptext34:
  7450                           	opt stack 0
  7451  0129AA                     _init_mdbdata:
  7452                           	opt stack 22
  7453                           
  7454                           ;incstack = 0
  7455                           ;init_mdbdata@initdata stored from wreg
  7456  0129AA  6E22               	movwf	init_mdbdata@initdata,c
  7457                           
  7458                           ;mdb.c: 15: char i = 0;
  7459  0129AC  0E00               	movlw	0
  7460  0129AE  6E23               	movwf	init_mdbdata@i,c
  7461                           
  7462                           ;mdb.c: 16: while(i < 32)
  7463  0129B0  D00B               	goto	l2924
  7464  0129B2                     
  7465                           ;mdb.c: 17: {
  7466                           ;mdb.c: 18: mdbdata[i] = initdata;
  7467  0129B2  5023               	movf	init_mdbdata@i,w,c
  7468  0129B4  0D01               	mullw	1
  7469  0129B6  0E60               	movlw	low _mdbdata
  7470  0129B8  24F3               	addwf	prodl,w,c
  7471  0129BA  6ED9               	movwf	fsr2l,c
  7472  0129BC  0E00               	movlw	high _mdbdata
  7473  0129BE  20F4               	addwfc	prodh,w,c
  7474  0129C0  6EDA               	movwf	fsr2h,c
  7475  0129C2  C022  FFDF         	movff	init_mdbdata@initdata,indf2
  7476                           
  7477                           ;mdb.c: 19: i++;
  7478  0129C6  2A23               	incf	init_mdbdata@i,f,c
  7479  0129C8                     l2924:
  7480  0129C8  0E1F               	movlw	31
  7481  0129CA  6423               	cpfsgt	init_mdbdata@i,c
  7482  0129CC  D7F2               	goto	l2925
  7483                           
  7484                           ;mdb.c: 20: }
  7485                           ;mdb.c: 21: init_pricestore();
  7486  0129CE  ECC5  F091         	call	_init_pricestore	;wreg free
  7487  0129D2  0012               	return		;funcret
  7488  0129D4                     __end_of_init_mdbdata:
  7489                           	opt stack 0
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           prodh	equ	0xFF4
  7495                           prodl	equ	0xFF3
  7496                           postinc0	equ	0xFEE
  7497                           wreg	equ	0xFE8
  7498                           indf2	equ	0xFDF
  7499                           postinc2	equ	0xFDE
  7500                           fsr2h	equ	0xFDA
  7501                           fsr2l	equ	0xFD9
  7502                           status	equ	0xFD8
  7503                           
  7504 ;; *************** function _init_pricestore *****************
  7505 ;; Defined at:
  7506 ;;		line 221 in file "dispense.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  i               1   22[COMRAM] unsigned char 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;Total ram usage:        3 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    3
  7527 ;; This function calls:
  7528 ;;		_DATAEE_ReadByte
  7529 ;; This function is called by:
  7530 ;;		_init_mdbdata
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text35
  7535  01238A                     __ptext35:
  7536                           	opt stack 0
  7537  01238A                     _init_pricestore:
  7538                           	opt stack 22
  7539                           
  7540                           ;dispense.c: 224: char i = 0;
  7541                           
  7542                           ;incstack = 0
  7543  01238A  0E00               	movlw	0
  7544  01238C  6E21               	movwf	init_pricestore@i,c
  7545                           
  7546                           ;dispense.c: 225: while(i < 8)
  7547  01238E  D01E               	goto	l4528
  7548  012390                     
  7549                           ;dispense.c: 226: {
  7550                           ;dispense.c: 227: pricevend[i] = DATAEE_ReadByte(pricestore + i);
  7551  012390  5021               	movf	init_pricestore@i,w,c
  7552  012392  0D01               	mullw	1
  7553  012394  0E7F               	movlw	low _pricevend
  7554  012396  24F3               	addwf	prodl,w,c
  7555  012398  6ED9               	movwf	fsr2l,c
  7556  01239A  0E00               	movlw	high _pricevend
  7557  01239C  20F4               	addwfc	prodh,w,c
  7558  01239E  6EDA               	movwf	fsr2h,c
  7559  0123A0  0E13               	movlw	low _pricestore
  7560  0123A2  6EF6               	movwf	tblptrl,c
  7561  0123A4                     	if	1	;There is more than 1 active tblptr byte
  7562  0123A4  0EFC               	movlw	high _pricestore
  7563  0123A6  6EF7               	movwf	tblptrh,c
  7564  0123A8                     	endif
  7565  0123A8                     	if	1	;There are 3 active tblptr bytes
  7566  0123A8  0E00               	movlw	low (_pricestore shr (0+16))
  7567  0123AA  6EF8               	movwf	tblptru,c
  7568  0123AC                     	endif
  7569  0123AC  0009               	tblrd		*+
  7570  0123AE  CFF5 F01F          	movff	tablat,??_init_pricestore
  7571  0123B2  0009               	tblrd		*+
  7572  0123B4  CFF5 F020          	movff	tablat,??_init_pricestore+1
  7573  0123B8  5021               	movf	init_pricestore@i,w,c
  7574  0123BA  241F               	addwf	??_init_pricestore,w,c
  7575  0123BC  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  7576  0123BE  0E00               	movlw	0
  7577  0123C0  2020               	addwfc	??_init_pricestore+1,w,c
  7578  0123C2  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  7579  0123C4  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  7580  0123C8  6EDF               	movwf	indf2,c
  7581                           
  7582                           ;dispense.c: 228: i++;
  7583  0123CA  2A21               	incf	init_pricestore@i,f,c
  7584  0123CC                     l4528:
  7585  0123CC  0E07               	movlw	7
  7586  0123CE  6421               	cpfsgt	init_pricestore@i,c
  7587  0123D0  D7DF               	goto	l4529
  7588  0123D2  0012               	return	
  7589  0123D4                     __end_of_init_pricestore:
  7590                           	opt stack 0
  7591                           tblptru	equ	0xFF8
  7592                           tblptrh	equ	0xFF7
  7593                           tblptrl	equ	0xFF6
  7594                           tablat	equ	0xFF5
  7595                           prodh	equ	0xFF4
  7596                           prodl	equ	0xFF3
  7597                           postinc0	equ	0xFEE
  7598                           wreg	equ	0xFE8
  7599                           indf2	equ	0xFDF
  7600                           postinc2	equ	0xFDE
  7601                           fsr2h	equ	0xFDA
  7602                           fsr2l	equ	0xFD9
  7603                           status	equ	0xFD8
  7604                           
  7605 ;; *************** function _EUSART1_Read *****************
  7606 ;; Defined at:
  7607 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      unsigned char 
  7614 ;; Registers used:
  7615 ;;		wreg, status,2
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    2
  7628 ;; This function calls:
  7629 ;;		Nothing
  7630 ;; This function is called by:
  7631 ;;		_mdb_comm
  7632 ;;		_cctalk_read
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text36
  7637  012BB2                     __ptext36:
  7638                           	opt stack 0
  7639  012BB2                     _EUSART1_Read:
  7640                           	opt stack 24
  7641                           
  7642                           ;eusart1.c: 96: {
  7643                           
  7644                           ;eusart1.c: 95: while(!PIR3bits.RC1IF)
  7645                           
  7646                           ;incstack = 0
  7647  012BB2  010E               	movlb	14	; () banked
  7648  012BB4  ABCD               	btfss	205,5,b	;volatile
  7649  012BB6  D7FD               	goto	_EUSART1_Read
  7650                           
  7651                           ; BSR set to: 14
  7652                           ;eusart1.c: 97: }
  7653                           ;eusart1.c: 100: if(1 == RC1STAbits.OERR)
  7654  012BB8  A29D               	btfss	3997,1,c	;volatile
  7655  012BBA  D002               	goto	l108
  7656                           
  7657                           ; BSR set to: 14
  7658                           ;eusart1.c: 101: {
  7659                           ;eusart1.c: 104: RC1STAbits.CREN = 0;
  7660  012BBC  989D               	bcf	3997,4,c	;volatile
  7661                           
  7662                           ;eusart1.c: 105: RC1STAbits.CREN = 1;
  7663  012BBE  889D               	bsf	3997,4,c	;volatile
  7664  012BC0                     l108:
  7665                           
  7666                           ; BSR set to: 14
  7667                           ;eusart1.c: 106: }
  7668                           ;eusart1.c: 108: return RC1REG;
  7669                           
  7670                           ; BSR set to: 14
  7671  012BC0  5099               	movf	3993,w,c	;volatile
  7672  012BC2  0012               	return	
  7673  012BC4                     __end_of_EUSART1_Read:
  7674                           	opt stack 0
  7675                           tblptru	equ	0xFF8
  7676                           tblptrh	equ	0xFF7
  7677                           tblptrl	equ	0xFF6
  7678                           tablat	equ	0xFF5
  7679                           prodh	equ	0xFF4
  7680                           prodl	equ	0xFF3
  7681                           postinc0	equ	0xFEE
  7682                           wreg	equ	0xFE8
  7683                           indf2	equ	0xFDF
  7684                           postinc2	equ	0xFDE
  7685                           fsr2h	equ	0xFDA
  7686                           fsr2l	equ	0xFD9
  7687                           status	equ	0xFD8
  7688                           
  7689 ;; *************** function _lcd_init *****************
  7690 ;; Defined at:
  7691 ;;		line 11 in file "lcd.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;		None
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;		None
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;Total ram usage:        2 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; Hardware stack levels required when called:    8
  7712 ;; This function calls:
  7713 ;;		_lcd_clockE
  7714 ;;		_lcd_test
  7715 ;;		_lcd_write
  7716 ;; This function is called by:
  7717 ;;		_main
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text37
  7722  0115A4                     __ptext37:
  7723                           	opt stack 0
  7724  0115A4                     _lcd_init:
  7725                           	opt stack 22
  7726                           
  7727                           ;lcd.c: 13: LATE = 0x00;
  7728                           
  7729                           ; BSR set to: 14
  7730                           ;incstack = 0
  7731  0115A4  0E00               	movlw	0
  7732  0115A6  6E87               	movwf	3975,c	;volatile
  7733                           
  7734                           ;lcd.c: 15: LATD = 0x03;
  7735  0115A8  0E03               	movlw	3
  7736  0115AA  6E86               	movwf	3974,c	;volatile
  7737                           
  7738                           ;lcd.c: 16: for(count = 3; count > 0; count-- )
  7739  0115AC  0E03               	movlw	3
  7740  0115AE  0100               	movlb	0	; () banked
  7741  0115B0  6FCD               	movwf	_count& (0+255),b
  7742  0115B2                     l11955:
  7743                           
  7744                           ; BSR set to: 0
  7745  0115B2  51CD               	movf	_count& (0+255),w,b
  7746  0115B4  0A80               	xorlw	128
  7747  0115B6  0F7F               	addlw	-129
  7748  0115B8  A0D8               	btfss	status,0,c
  7749  0115BA  D00C               	goto	u5220
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;lcd.c: 17: {
  7753                           ;lcd.c: 18: lcd_clockE();
  7754                           
  7755                           ; BSR set to: 0
  7756                           
  7757                           ; BSR set to: 0
  7758  0115BC  EC15  F096         	call	_lcd_clockE	;wreg free
  7759                           
  7760                           ;lcd.c: 19: _delay((unsigned long)((5)*(12000000/4000.0)));
  7761  0115C0  0E14               	movlw	20
  7762  0115C2  6E25               	movwf	??_lcd_init& (0+255),c
  7763  0115C4  0E7A               	movlw	122
  7764  0115C6                     u5757:
  7765  0115C6  2EE8               	decfsz	wreg,f,c
  7766  0115C8  D7FE               	bra	u5757
  7767  0115CA  2E25               	decfsz	??_lcd_init& (0+255),f,c
  7768  0115CC  D7FC               	bra	u5757
  7769  0115CE  0100               	movlb	0	; () banked
  7770  0115D0  07CD               	decf	_count& (0+255),f,b
  7771  0115D2  D7EF               	goto	l11955
  7772  0115D4                     u5220:
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;lcd.c: 21: }
  7776                           ;lcd.c: 22: _delay((unsigned long)((50)*(12000000/4000000.0)));
  7777                           
  7778                           ; BSR set to: 0
  7779  0115D4  0E32               	movlw	50
  7780  0115D6                     u5767:
  7781  0115D6  2EE8               	decfsz	wreg,f,c
  7782  0115D8  D7FE               	bra	u5767
  7783                           
  7784                           ;lcd.c: 23: LATD = 0x02;
  7785  0115DA  0E02               	movlw	2
  7786  0115DC  6E86               	movwf	3974,c	;volatile
  7787                           
  7788                           ;lcd.c: 24: lcd_clockE();
  7789  0115DE  EC15  F096         	call	_lcd_clockE	;wreg free
  7790                           
  7791                           ;lcd.c: 27: lcd_write(dispfunc3);
  7792  0115E2  0E56               	movlw	low _dispfunc3
  7793  0115E4  6EF6               	movwf	tblptrl,c
  7794  0115E6                     	if	1	;There is more than 1 active tblptr byte
  7795  0115E6  0EFC               	movlw	high _dispfunc3
  7796  0115E8  6EF7               	movwf	tblptrh,c
  7797  0115EA                     	endif
  7798  0115EA                     	if	1	;There are 3 active tblptr bytes
  7799  0115EA  0E00               	movlw	low (_dispfunc3 shr (0+16))
  7800  0115EC  6EF8               	movwf	tblptru,c
  7801  0115EE                     	endif
  7802  0115EE  0008               	tblrd		*
  7803  0115F0  50F5               	movf	tablat,w,c
  7804  0115F2  EC78  F094         	call	_lcd_write
  7805                           
  7806                           ;lcd.c: 29: lcd_write(dispon);
  7807  0115F6  0E55               	movlw	low _dispon
  7808  0115F8  6EF6               	movwf	tblptrl,c
  7809  0115FA                     	if	1	;There is more than 1 active tblptr byte
  7810  0115FA  0EFC               	movlw	high _dispon
  7811  0115FC  6EF7               	movwf	tblptrh,c
  7812  0115FE                     	endif
  7813  0115FE                     	if	1	;There are 3 active tblptr bytes
  7814  0115FE  0E00               	movlw	low (_dispon shr (0+16))
  7815  011600  6EF8               	movwf	tblptru,c
  7816  011602                     	endif
  7817  011602  0008               	tblrd		*
  7818  011604  50F5               	movf	tablat,w,c
  7819  011606  EC78  F094         	call	_lcd_write
  7820                           
  7821                           ;lcd.c: 31: lcd_write(dispnormal);
  7822  01160A  0E51               	movlw	low _dispnormal
  7823  01160C  6EF6               	movwf	tblptrl,c
  7824  01160E                     	if	1	;There is more than 1 active tblptr byte
  7825  01160E  0EFC               	movlw	high _dispnormal
  7826  011610  6EF7               	movwf	tblptrh,c
  7827  011612                     	endif
  7828  011612                     	if	1	;There are 3 active tblptr bytes
  7829  011612  0E00               	movlw	low (_dispnormal shr (0+16))
  7830  011614  6EF8               	movwf	tblptru,c
  7831  011616                     	endif
  7832  011616  0008               	tblrd		*
  7833  011618  50F5               	movf	tablat,w,c
  7834  01161A  EC78  F094         	call	_lcd_write
  7835                           
  7836                           ;lcd.c: 33: lcd_write(dispclr);
  7837  01161E  0E54               	movlw	low _dispclr
  7838  011620  6EF6               	movwf	tblptrl,c
  7839  011622                     	if	1	;There is more than 1 active tblptr byte
  7840  011622  0EFC               	movlw	high _dispclr
  7841  011624  6EF7               	movwf	tblptrh,c
  7842  011626                     	endif
  7843  011626                     	if	1	;There are 3 active tblptr bytes
  7844  011626  0E00               	movlw	low (_dispclr shr (0+16))
  7845  011628  6EF8               	movwf	tblptru,c
  7846  01162A                     	endif
  7847  01162A  0008               	tblrd		*
  7848  01162C  50F5               	movf	tablat,w,c
  7849  01162E  EC78  F094         	call	_lcd_write
  7850                           
  7851                           ;lcd.c: 35: lcd_test();
  7852  011632  ECAF  F095         	call	_lcd_test	;wreg free
  7853                           
  7854                           ;lcd.c: 36: _delay((unsigned long)((250)*(12000000/4000.0)));
  7855  011636  0E04               	movlw	4
  7856  011638  6E26               	movwf	(??_lcd_init+1)& (0+255),c
  7857  01163A  0ECF               	movlw	207
  7858  01163C  6E25               	movwf	??_lcd_init& (0+255),c
  7859  01163E  0E02               	movlw	2
  7860  011640                     u5777:
  7861  011640  2EE8               	decfsz	wreg,f,c
  7862  011642  D7FE               	bra	u5777
  7863  011644  2E25               	decfsz	??_lcd_init& (0+255),f,c
  7864  011646  D7FC               	bra	u5777
  7865  011648  2E26               	decfsz	(??_lcd_init+1)& (0+255),f,c
  7866  01164A  D7FA               	bra	u5777
  7867  01164C  F000               	nop		;# 
  7868  01164E  0012               	return		;funcret
  7869  011650                     __end_of_lcd_init:
  7870                           	opt stack 0
  7871                           tblptru	equ	0xFF8
  7872                           tblptrh	equ	0xFF7
  7873                           tblptrl	equ	0xFF6
  7874                           tablat	equ	0xFF5
  7875                           prodh	equ	0xFF4
  7876                           prodl	equ	0xFF3
  7877                           postinc0	equ	0xFEE
  7878                           wreg	equ	0xFE8
  7879                           indf2	equ	0xFDF
  7880                           postinc2	equ	0xFDE
  7881                           fsr2h	equ	0xFDA
  7882                           fsr2l	equ	0xFD9
  7883                           status	equ	0xFD8
  7884                           
  7885 ;; *************** function _lcd_test *****************
  7886 ;; Defined at:
  7887 ;;		line 301 in file "lcd.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;		None
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  character       1   25[COMRAM] unsigned char 
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  1    wreg      void 
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;Total ram usage:        1 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:    7
  7908 ;; This function calls:
  7909 ;;		_lcd_writeC
  7910 ;; This function is called by:
  7911 ;;		_lcd_init
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text38
  7916  012B5E                     __ptext38:
  7917                           	opt stack 0
  7918  012B5E                     _lcd_test:
  7919                           	opt stack 22
  7920                           
  7921                           ;lcd.c: 303: uint8_t character = 0x30;
  7922                           
  7923                           ;incstack = 0
  7924  012B5E  0E30               	movlw	48
  7925  012B60  D004               	goto	L13
  7926  012B62                     
  7927                           ;lcd.c: 305: {
  7928                           ;lcd.c: 306: lcd_writeC(character);
  7929  012B62  5024               	movf	lcd_test@character,w,c
  7930  012B64  EC84  F08F         	call	_lcd_writeC
  7931                           
  7932                           ;lcd.c: 307: character = character+ 1;
  7933  012B68  2824               	incf	lcd_test@character,w,c
  7934  012B6A                     L13:
  7935  012B6A  6E24               	movwf	lcd_test@character,c
  7936  012B6C  0E7F               	movlw	127
  7937  012B6E  6424               	cpfsgt	lcd_test@character,c
  7938  012B70  D7F8               	goto	l1698
  7939  012B72  0012               	return	
  7940  012B74                     __end_of_lcd_test:
  7941                           	opt stack 0
  7942                           tblptru	equ	0xFF8
  7943                           tblptrh	equ	0xFF7
  7944                           tblptrl	equ	0xFF6
  7945                           tablat	equ	0xFF5
  7946                           prodh	equ	0xFF4
  7947                           prodl	equ	0xFF3
  7948                           postinc0	equ	0xFEE
  7949                           wreg	equ	0xFE8
  7950                           indf2	equ	0xFDF
  7951                           postinc2	equ	0xFDE
  7952                           fsr2h	equ	0xFDA
  7953                           fsr2l	equ	0xFD9
  7954                           status	equ	0xFD8
  7955                           
  7956 ;; *************** function _gsm_init *****************
  7957 ;; Defined at:
  7958 ;;		line 32 in file "gsm.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;		None
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;		None
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  1    wreg      void 
  7965 ;; Registers used:
  7966 ;;		wreg, status,2, cstack
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;Total ram usage:        1 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; Hardware stack levels required when called:    5
  7979 ;; This function calls:
  7980 ;;		_EUSART2_Read
  7981 ;;		_gsm_on
  7982 ;;		_gsm_txAT
  7983 ;; This function is called by:
  7984 ;;		_main
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text39
  7989  01297E                     __ptext39:
  7990                           	opt stack 0
  7991  01297E                     _gsm_init:
  7992                           	opt stack 25
  7993                           
  7994                           ;gsm.c: 34: gsm_on();
  7995                           
  7996                           ;incstack = 0
  7997  01297E  EC4F  F096         	call	_gsm_on	;wreg free
  7998                           
  7999                           ;gsm.c: 35: while(!PIR3bits.RC2IF)
  8000  012982  D00A               	goto	l4967
  8001  012984                     
  8002                           ;gsm.c: 36: {
  8003                           ;gsm.c: 37: gsm_txAT();
  8004  012984  ECF9  F095         	call	_gsm_txAT	;wreg free
  8005                           
  8006                           ;gsm.c: 38: _delay((unsigned long)((10)*(12000000/4000.0)));
  8007  012988  0E27               	movlw	39
  8008  01298A  6E1F               	movwf	??_gsm_init& (0+255),c
  8009  01298C  0EF5               	movlw	245
  8010  01298E                     u5787:
  8011  01298E  2EE8               	decfsz	wreg,f,c
  8012  012990  D7FE               	bra	u5787
  8013  012992  2E1F               	decfsz	??_gsm_init& (0+255),f,c
  8014  012994  D7FC               	bra	u5787
  8015  012996  F000               	nop	
  8016  012998                     l4967:
  8017  012998  010E               	movlb	14	; () banked
  8018  01299A  AFCD               	btfss	205,7,b	;volatile
  8019  01299C  D7F3               	goto	l4968
  8020                           
  8021                           ; BSR set to: 14
  8022                           ;gsm.c: 39: }
  8023                           ;gsm.c: 40: gsmbyte = EUSART2_Read();
  8024                           
  8025                           ; BSR set to: 14
  8026  01299E  ECE2  F095         	call	_EUSART2_Read	;wreg free
  8027  0129A2  0100               	movlb	0	; () banked
  8028  0129A4  6FA6               	movwf	_gsmbyte& (0+255),b
  8029  0129A6  F000               	nop		;# 
  8030  0129A8  0012               	return		;funcret
  8031  0129AA                     __end_of_gsm_init:
  8032                           	opt stack 0
  8033                           tblptru	equ	0xFF8
  8034                           tblptrh	equ	0xFF7
  8035                           tblptrl	equ	0xFF6
  8036                           tablat	equ	0xFF5
  8037                           prodh	equ	0xFF4
  8038                           prodl	equ	0xFF3
  8039                           postinc0	equ	0xFEE
  8040                           wreg	equ	0xFE8
  8041                           indf2	equ	0xFDF
  8042                           postinc2	equ	0xFDE
  8043                           fsr2h	equ	0xFDA
  8044                           fsr2l	equ	0xFD9
  8045                           status	equ	0xFD8
  8046                           
  8047 ;; *************** function _gsm_txAT *****************
  8048 ;; Defined at:
  8049 ;;		line 45 in file "gsm.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;Total ram usage:        0 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    4
  8070 ;; This function calls:
  8071 ;;		_gsm_transmit
  8072 ;; This function is called by:
  8073 ;;		_gsm_init
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text40
  8078  012BF2                     __ptext40:
  8079                           	opt stack 0
  8080  012BF2                     _gsm_txAT:
  8081                           	opt stack 25
  8082                           
  8083                           ;gsm.c: 47: gsm_transmit('A');
  8084                           
  8085                           ;incstack = 0
  8086  012BF2  0E41               	movlw	65
  8087  012BF4  EC00  F096         	call	_gsm_transmit
  8088                           
  8089                           ;gsm.c: 48: gsm_transmit('T');
  8090  012BF8  0E54               	movlw	84
  8091  012BFA  EC00  F096         	call	_gsm_transmit
  8092  012BFE  0012               	return		;funcret
  8093  012C00                     __end_of_gsm_txAT:
  8094                           	opt stack 0
  8095                           tblptru	equ	0xFF8
  8096                           tblptrh	equ	0xFF7
  8097                           tblptrl	equ	0xFF6
  8098                           tablat	equ	0xFF5
  8099                           prodh	equ	0xFF4
  8100                           prodl	equ	0xFF3
  8101                           postinc0	equ	0xFEE
  8102                           wreg	equ	0xFE8
  8103                           indf2	equ	0xFDF
  8104                           postinc2	equ	0xFDE
  8105                           fsr2h	equ	0xFDA
  8106                           fsr2l	equ	0xFD9
  8107                           status	equ	0xFD8
  8108                           
  8109 ;; *************** function _gsm_transmit *****************
  8110 ;; Defined at:
  8111 ;;		line 26 in file "gsm.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  txbyte          1    wreg     unsigned char 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;  txbyte          1   19[COMRAM] unsigned char 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;Total ram usage:        1 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    3
  8132 ;; This function calls:
  8133 ;;		_EUSART2_Write
  8134 ;;		_gsm_waitx
  8135 ;; This function is called by:
  8136 ;;		_gsm_txAT
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text41
  8141  012C00                     __ptext41:
  8142                           	opt stack 0
  8143  012C00                     _gsm_transmit:
  8144                           	opt stack 25
  8145                           
  8146                           ;incstack = 0
  8147                           ;gsm_transmit@txbyte stored from wreg
  8148  012C00  6E1E               	movwf	gsm_transmit@txbyte,c
  8149                           
  8150                           ;gsm.c: 28: EUSART2_Write(txbyte);
  8151  012C02  501E               	movf	gsm_transmit@txbyte,w,c
  8152  012C04  EC07  F096         	call	_EUSART2_Write
  8153                           
  8154                           ;gsm.c: 29: gsm_waitx();
  8155  012C08  EC30  F096         	call	_gsm_waitx	;wreg free
  8156  012C0C  0012               	return		;funcret
  8157  012C0E                     __end_of_gsm_transmit:
  8158                           	opt stack 0
  8159                           tblptru	equ	0xFF8
  8160                           tblptrh	equ	0xFF7
  8161                           tblptrl	equ	0xFF6
  8162                           tablat	equ	0xFF5
  8163                           prodh	equ	0xFF4
  8164                           prodl	equ	0xFF3
  8165                           postinc0	equ	0xFEE
  8166                           wreg	equ	0xFE8
  8167                           indf2	equ	0xFDF
  8168                           postinc2	equ	0xFDE
  8169                           fsr2h	equ	0xFDA
  8170                           fsr2l	equ	0xFD9
  8171                           status	equ	0xFD8
  8172                           
  8173 ;; *************** function _gsm_waitx *****************
  8174 ;; Defined at:
  8175 ;;		line 10 in file "gsm.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		None
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;Total ram usage:        0 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    2
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_gsm_transmit
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text42
  8204  012C60                     __ptext42:
  8205                           	opt stack 0
  8206  012C60                     _gsm_waitx:
  8207                           	opt stack 25
  8208                           
  8209                           ;gsm.c: 13: {
  8210                           
  8211                           ;gsm.c: 12: while(0 == PIR3bits.TX2IF)
  8212                           
  8213                           ;incstack = 0
  8214  012C60  010E               	movlb	14	; () banked
  8215  012C62  BDCD               	btfsc	205,6,b	;volatile
  8216  012C64  0012               	return	
  8217  012C66  D7FC               	goto	_gsm_waitx
  8218  012C68                     __end_of_gsm_waitx:
  8219                           	opt stack 0
  8220                           tblptru	equ	0xFF8
  8221                           tblptrh	equ	0xFF7
  8222                           tblptrl	equ	0xFF6
  8223                           tablat	equ	0xFF5
  8224                           prodh	equ	0xFF4
  8225                           prodl	equ	0xFF3
  8226                           postinc0	equ	0xFEE
  8227                           wreg	equ	0xFE8
  8228                           indf2	equ	0xFDF
  8229                           postinc2	equ	0xFDE
  8230                           fsr2h	equ	0xFDA
  8231                           fsr2l	equ	0xFD9
  8232                           status	equ	0xFD8
  8233                           
  8234 ;; *************** function _EUSART2_Write *****************
  8235 ;; Defined at:
  8236 ;;		line 111 in file "mcc_generated_files/eusart2.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  txData          1    wreg     unsigned char 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  txData          1   18[COMRAM] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8254 ;;Total ram usage:        1 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    2
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_gsm_transmit
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text43
  8265  012C0E                     __ptext43:
  8266                           	opt stack 0
  8267  012C0E                     _EUSART2_Write:
  8268                           	opt stack 25
  8269                           
  8270                           ; BSR set to: 14
  8271                           ;incstack = 0
  8272                           ;EUSART2_Write@txData stored from wreg
  8273  012C0E  6E1D               	movwf	EUSART2_Write@txData,c
  8274  012C10                     
  8275                           ;eusart2.c: 114: {
  8276                           
  8277                           ;eusart2.c: 113: while(0 == PIR3bits.TX2IF)
  8278  012C10  010E               	movlb	14	; () banked
  8279  012C12  ADCD               	btfss	205,6,b	;volatile
  8280  012C14  D7FD               	goto	l10789
  8281                           
  8282                           ; BSR set to: 14
  8283                           ;eusart2.c: 115: }
  8284                           ;eusart2.c: 117: TX2REG = txData;
  8285                           
  8286                           ; BSR set to: 14
  8287  012C16  C01D  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  8288                           
  8289                           ; BSR set to: 14
  8290  012C1A  0012               	return		;funcret
  8291  012C1C                     __end_of_EUSART2_Write:
  8292                           	opt stack 0
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           postinc0	equ	0xFEE
  8300                           wreg	equ	0xFE8
  8301                           indf2	equ	0xFDF
  8302                           postinc2	equ	0xFDE
  8303                           fsr2h	equ	0xFDA
  8304                           fsr2l	equ	0xFD9
  8305                           status	equ	0xFD8
  8306                           
  8307 ;; *************** function _gsm_on *****************
  8308 ;; Defined at:
  8309 ;;		line 51 in file "gsm.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;		None
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1    wreg      void 
  8316 ;; Registers used:
  8317 ;;		None
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;Total ram usage:        0 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:    2
  8330 ;; This function calls:
  8331 ;;		Nothing
  8332 ;; This function is called by:
  8333 ;;		_gsm_init
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text44
  8338  012C9E                     __ptext44:
  8339                           	opt stack 0
  8340  012C9E                     _gsm_on:
  8341                           	opt stack 27
  8342                           
  8343                           ;gsm.c: 53: LATCbits.LC3 = 1;
  8344                           
  8345                           ; BSR set to: 14
  8346                           ;incstack = 0
  8347  012C9E  8685               	bsf	3973,3,c	;volatile
  8348  012CA0  0012               	return		;funcret
  8349  012CA2                     __end_of_gsm_on:
  8350                           	opt stack 0
  8351                           tblptru	equ	0xFF8
  8352                           tblptrh	equ	0xFF7
  8353                           tblptrl	equ	0xFF6
  8354                           tablat	equ	0xFF5
  8355                           prodh	equ	0xFF4
  8356                           prodl	equ	0xFF3
  8357                           postinc0	equ	0xFEE
  8358                           wreg	equ	0xFE8
  8359                           indf2	equ	0xFDF
  8360                           postinc2	equ	0xFDE
  8361                           fsr2h	equ	0xFDA
  8362                           fsr2l	equ	0xFD9
  8363                           status	equ	0xFD8
  8364                           
  8365 ;; *************** function _EUSART2_Read *****************
  8366 ;; Defined at:
  8367 ;;		line 93 in file "mcc_generated_files/eusart2.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;		None
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1    wreg      unsigned char 
  8374 ;; Registers used:
  8375 ;;		wreg, status,2
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;Total ram usage:        0 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:    2
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_gsm_init
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text45
  8396  012BC4                     __ptext45:
  8397                           	opt stack 0
  8398  012BC4                     _EUSART2_Read:
  8399                           	opt stack 27
  8400                           
  8401                           ;eusart2.c: 96: {
  8402                           
  8403                           ;eusart2.c: 95: while(!PIR3bits.RC2IF)
  8404                           
  8405                           ;incstack = 0
  8406  012BC4  010E               	movlb	14	; () banked
  8407  012BC6  AFCD               	btfss	205,7,b	;volatile
  8408  012BC8  D7FD               	goto	_EUSART2_Read
  8409                           
  8410                           ; BSR set to: 14
  8411                           ;eusart2.c: 97: }
  8412                           ;eusart2.c: 100: if(1 == RC2STAbits.OERR)
  8413  012BCA  A39D               	btfss	157,1,b	;volatile
  8414  012BCC  D002               	goto	l641
  8415                           
  8416                           ; BSR set to: 14
  8417                           ;eusart2.c: 101: {
  8418                           ;eusart2.c: 104: RC2STAbits.CREN = 0;
  8419  012BCE  999D               	bcf	157,4,b	;volatile
  8420                           
  8421                           ;eusart2.c: 105: RC2STAbits.CREN = 1;
  8422  012BD0  899D               	bsf	157,4,b	;volatile
  8423  012BD2                     l641:
  8424                           
  8425                           ; BSR set to: 14
  8426                           ;eusart2.c: 106: }
  8427                           ;eusart2.c: 108: return RC2REG;
  8428                           
  8429                           ; BSR set to: 14
  8430  012BD2  5199               	movf	153,w,b	;volatile
  8431  012BD4  0012               	return	
  8432  012BD6                     __end_of_EUSART2_Read:
  8433                           	opt stack 0
  8434                           tblptru	equ	0xFF8
  8435                           tblptrh	equ	0xFF7
  8436                           tblptrl	equ	0xFF6
  8437                           tablat	equ	0xFF5
  8438                           prodh	equ	0xFF4
  8439                           prodl	equ	0xFF3
  8440                           postinc0	equ	0xFEE
  8441                           wreg	equ	0xFE8
  8442                           indf2	equ	0xFDF
  8443                           postinc2	equ	0xFDE
  8444                           fsr2h	equ	0xFDA
  8445                           fsr2l	equ	0xFD9
  8446                           status	equ	0xFD8
  8447                           
  8448 ;; *************** function _enter_service *****************
  8449 ;; Defined at:
  8450 ;;		line 215 in file "main.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;		None
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;		None
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  1    wreg      void 
  8457 ;; Registers used:
  8458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;Total ram usage:        0 bytes
  8469 ;; Hardware stack levels used:    1
  8470 ;; Hardware stack levels required when called:   12
  8471 ;; This function calls:
  8472 ;;		_Audit
  8473 ;;		_Clear_cred
  8474 ;;		_Hopper_coin
  8475 ;;		_Sensor_set
  8476 ;;		_Vend_setup
  8477 ;;		_butindb
  8478 ;;		_hopper_test
  8479 ;;		_lcd_string
  8480 ;;		_mdb_unlock
  8481 ;;		_price_set
  8482 ;;		_set_notes
  8483 ;; This function is called by:
  8484 ;;		_main
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text46
  8489  011650                     __ptext46:
  8490                           	opt stack 0
  8491  011650                     _enter_service:
  8492                           	opt stack 18
  8493                           
  8494                           ;main.c: 217: mdb_unlock();
  8495                           
  8496                           ; BSR set to: 14
  8497                           ;incstack = 0
  8498  011650  ECA0  F088         	call	_mdb_unlock	;wreg free
  8499                           
  8500                           ;main.c: 218: lcd_string(servmsg, line1);
  8501  011654  0E59               	movlw	low _servmsg
  8502  011656  6E24               	movwf	lcd_string@lcdstring,c
  8503  011658  0EFC               	movlw	high _servmsg
  8504  01165A  6E25               	movwf	lcd_string@lcdstring+1,c
  8505  01165C  0E4A               	movlw	low _line1
  8506  01165E  6EF6               	movwf	tblptrl,c
  8507  011660                     	if	1	;There is more than 1 active tblptr byte
  8508  011660  0EFC               	movlw	high _line1
  8509  011662  6EF7               	movwf	tblptrh,c
  8510  011664                     	endif
  8511  011664                     	if	1	;There are 3 active tblptr bytes
  8512  011664  0E00               	movlw	low (_line1 shr (0+16))
  8513  011666  6EF8               	movwf	tblptru,c
  8514  011668                     	endif
  8515  011668  0008               	tblrd		*
  8516  01166A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8517  01166E  EC78  F08A         	call	_lcd_string	;wreg free
  8518                           
  8519                           ;main.c: 221: while(venflags.service)
  8520  011672  D03C               	goto	l1151
  8521  011674                     
  8522                           ;main.c: 222: {
  8523                           ;main.c: 223: buttons = butindb();
  8524  011674  ECD5  F092         	call	_butindb	;wreg free
  8525  011678  6E38               	movwf	_buttons,c	;volatile
  8526                           
  8527                           ;main.c: 224: switch(buttons)
  8528  01167A  D01C               	goto	l1149
  8529  01167C  EC00  F080         	call	_Audit	;wreg free
  8530                           
  8531                           ;main.c: 227: break;
  8532  011680  D035               	goto	l1151
  8533  011682  ECCA  F087         	call	_Sensor_set	;wreg free
  8534                           
  8535                           ;main.c: 229: break;
  8536  011686  D032               	goto	l1151
  8537  011688  EC35  F088         	call	_Hopper_coin	;wreg free
  8538                           
  8539                           ;main.c: 231: break;
  8540  01168C  D02F               	goto	l1151
  8541  01168E  ECFC  F085         	call	_set_notes	;wreg free
  8542                           
  8543                           ;main.c: 233: break;
  8544  011692  D02C               	goto	l1151
  8545  011694  EC79  F08B         	call	_Clear_cred	;wreg free
  8546                           
  8547                           ;main.c: 235: venflags.service = 0;
  8548  011698  9E2D               	bcf	_venflags,7,c
  8549  01169A  00FF               	reset		;# 
  8550  01169C  ECEF  F08D         	call	_price_set	;wreg free
  8551                           
  8552                           ;main.c: 238: break;
  8553  0116A0  D025               	goto	l1151
  8554  0116A2  ECF7  F083         	call	_Vend_setup	;wreg free
  8555                           
  8556                           ;main.c: 240: break;
  8557  0116A6  D022               	goto	l1151
  8558  0116A8                     l1158:
  8559  0116A8  9E2D               	bcf	_venflags,7,c
  8560  0116AA  00FF               	reset		;# 
  8561                           
  8562                           ;main.c: 243: break;
  8563  0116AC  D01F               	goto	l1151
  8564  0116AE  ECC5  F095         	call	_hopper_test	;wreg free
  8565                           
  8566                           ;main.c: 245: }
  8567  0116B2  D01C               	goto	l1151
  8568  0116B4                     l1149:
  8569  0116B4  5038               	movf	_buttons,w,c	;volatile
  8570                           
  8571                           ; Switch size 1, requested type "space"
  8572                           ; Number of cases is 9, Range of values is 1 to 128
  8573                           ; switch strategies available:
  8574                           ; Name         Instructions Cycles
  8575                           ; simple_byte           28    15 (average)
  8576                           ;	Chosen strategy is simple_byte
  8577  0116B6  0A01               	xorlw	1	; case 1
  8578  0116B8  B4D8               	btfsc	status,2,c
  8579  0116BA  D7E0               	goto	l1150
  8580  0116BC  0A03               	xorlw	3	; case 2
  8581  0116BE  B4D8               	btfsc	status,2,c
  8582  0116C0  D7E0               	goto	l1152
  8583  0116C2  0A01               	xorlw	1	; case 3
  8584  0116C4  B4D8               	btfsc	status,2,c
  8585  0116C6  D7F3               	goto	l1159
  8586  0116C8  0A07               	xorlw	7	; case 4
  8587  0116CA  B4D8               	btfsc	status,2,c
  8588  0116CC  D7DD               	goto	l1153
  8589  0116CE  0A0C               	xorlw	12	; case 8
  8590  0116D0  B4D8               	btfsc	status,2,c
  8591  0116D2  D7DD               	goto	l1154
  8592  0116D4  0A18               	xorlw	24	; case 16
  8593  0116D6  B4D8               	btfsc	status,2,c
  8594  0116D8  D7DD               	goto	l1155
  8595  0116DA  0A30               	xorlw	48	; case 32
  8596  0116DC  B4D8               	btfsc	status,2,c
  8597  0116DE  D7DE               	goto	l1156
  8598  0116E0  0A60               	xorlw	96	; case 64
  8599  0116E2  B4D8               	btfsc	status,2,c
  8600  0116E4  D7DE               	goto	l1157
  8601  0116E6  0AC0               	xorlw	192	; case 128
  8602  0116E8  B4D8               	btfsc	status,2,c
  8603  0116EA  D7DE               	goto	l1158
  8604  0116EC                     l1151:
  8605  0116EC  AE2D               	btfss	_venflags,7,c
  8606  0116EE  0012               	return	
  8607  0116F0  D7C1               	goto	l1148
  8608  0116F2                     __end_of_enter_service:
  8609                           	opt stack 0
  8610                           tblptru	equ	0xFF8
  8611                           tblptrh	equ	0xFF7
  8612                           tblptrl	equ	0xFF6
  8613                           tablat	equ	0xFF5
  8614                           prodh	equ	0xFF4
  8615                           prodl	equ	0xFF3
  8616                           postinc0	equ	0xFEE
  8617                           wreg	equ	0xFE8
  8618                           indf2	equ	0xFDF
  8619                           postinc2	equ	0xFDE
  8620                           fsr2h	equ	0xFDA
  8621                           fsr2l	equ	0xFD9
  8622                           status	equ	0xFD8
  8623                           
  8624 ;; *************** function _set_notes *****************
  8625 ;; Defined at:
  8626 ;;		line 60 in file "mdb.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;		None
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;		None
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;Total ram usage:        0 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; Hardware stack levels required when called:   10
  8647 ;; This function calls:
  8648 ;;		_butindb
  8649 ;;		_displ_note
  8650 ;;		_enable_notes
  8651 ;;		_lcd_string
  8652 ;; This function is called by:
  8653 ;;		_enter_service
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text47
  8658  010BF8                     __ptext47:
  8659                           	opt stack 0
  8660  010BF8                     _set_notes:
  8661                           	opt stack 19
  8662                           
  8663                           ;mdb.c: 62: lcd_string(setnotes, line1);
  8664                           
  8665                           ;incstack = 0
  8666  010BF8  0EA9               	movlw	low _setnotes
  8667  010BFA  6E24               	movwf	lcd_string@lcdstring,c
  8668  010BFC  0EFC               	movlw	high _setnotes
  8669  010BFE  6E25               	movwf	lcd_string@lcdstring+1,c
  8670  010C00  0E4A               	movlw	low _line1
  8671  010C02  6EF6               	movwf	tblptrl,c
  8672  010C04                     	if	1	;There is more than 1 active tblptr byte
  8673  010C04  0EFC               	movlw	high _line1
  8674  010C06  6EF7               	movwf	tblptrh,c
  8675  010C08                     	endif
  8676  010C08                     	if	1	;There are 3 active tblptr bytes
  8677  010C08  0E00               	movlw	low (_line1 shr (0+16))
  8678  010C0A  6EF8               	movwf	tblptru,c
  8679  010C0C                     	endif
  8680  010C0C  0008               	tblrd		*
  8681  010C0E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8682  010C12  EC78  F08A         	call	_lcd_string	;wreg free
  8683                           
  8684                           ;mdb.c: 63: mdbflags.noteset = 1;
  8685  010C16  8A3F               	bsf	_mdbflags,5,c
  8686                           
  8687                           ;mdb.c: 64: mdbflags.endis = 1;
  8688  010C18  8C3F               	bsf	_mdbflags,6,c
  8689                           
  8690                           ;mdb.c: 65: while(mdbflags.noteset)
  8691  010C1A  D064               	goto	l2940
  8692  010C1C                     
  8693                           ;mdb.c: 66: {
  8694                           ;mdb.c: 67: buttons = butindb();
  8695  010C1C  ECD5  F092         	call	_butindb	;wreg free
  8696  010C20  6E38               	movwf	_buttons,c	;volatile
  8697                           
  8698                           ;mdb.c: 68: notenum = buttons;
  8699  010C22  C038  F04D         	movff	_buttons,_notenum	;volatile
  8700                           
  8701                           ;mdb.c: 69: switch(buttons)
  8702  010C26  D048               	goto	l2942
  8703  010C28  0EB1               	movlw	low _tenrand
  8704  010C2A  6E29               	movwf	displ_note@notestring,c
  8705  010C2C  0EFF               	movlw	high _tenrand
  8706  010C2E  6E2A               	movwf	displ_note@notestring+1,c
  8707  010C30  EC89  F093         	call	_displ_note	;wreg free
  8708  010C34  6E43               	movwf	_dspposition,c
  8709                           
  8710                           ;mdb.c: 73: enable_notes(0x01);
  8711  010C36  0E01               	movlw	1
  8712  010C38  EC6D  F08E         	call	_enable_notes
  8713                           
  8714                           ;mdb.c: 74: break;
  8715  010C3C  D050               	goto	l2944
  8716  010C3E  0EE3               	movlw	low _twentyrand
  8717  010C40  6E29               	movwf	displ_note@notestring,c
  8718  010C42  0EFF               	movlw	high _twentyrand
  8719  010C44  6E2A               	movwf	displ_note@notestring+1,c
  8720  010C46  EC89  F093         	call	_displ_note	;wreg free
  8721  010C4A  6E43               	movwf	_dspposition,c
  8722                           
  8723                           ;mdb.c: 77: enable_notes(0x02);
  8724  010C4C  0E02               	movlw	2
  8725  010C4E  EC6D  F08E         	call	_enable_notes
  8726                           
  8727                           ;mdb.c: 78: break;
  8728  010C52  D045               	goto	l2944
  8729  010C54  0EDB               	movlw	low _fiftyrand
  8730  010C56  6E29               	movwf	displ_note@notestring,c
  8731  010C58  0EFF               	movlw	high _fiftyrand
  8732  010C5A  6E2A               	movwf	displ_note@notestring+1,c
  8733  010C5C  EC89  F093         	call	_displ_note	;wreg free
  8734  010C60  6E43               	movwf	_dspposition,c
  8735                           
  8736                           ;mdb.c: 81: enable_notes(0x04);
  8737  010C62  0E04               	movlw	4
  8738  010C64  EC6D  F08E         	call	_enable_notes
  8739                           
  8740                           ;mdb.c: 82: break;
  8741  010C68  D03A               	goto	l2944
  8742  010C6A  0ED3               	movlw	low _hundredrand
  8743  010C6C  6E29               	movwf	displ_note@notestring,c
  8744  010C6E  0EFF               	movlw	high _hundredrand
  8745  010C70  6E2A               	movwf	displ_note@notestring+1,c
  8746  010C72  EC89  F093         	call	_displ_note	;wreg free
  8747  010C76  6E43               	movwf	_dspposition,c
  8748                           
  8749                           ;mdb.c: 85: enable_notes(0x08);
  8750  010C78  0E08               	movlw	8
  8751  010C7A  EC6D  F08E         	call	_enable_notes
  8752                           
  8753                           ;mdb.c: 86: break;
  8754  010C7E  D02F               	goto	l2944
  8755  010C80  0ECB               	movlw	low _twohundredrand
  8756  010C82  6E29               	movwf	displ_note@notestring,c
  8757  010C84  0EFF               	movlw	high _twohundredrand
  8758  010C86  6E2A               	movwf	displ_note@notestring+1,c
  8759  010C88  EC89  F093         	call	_displ_note	;wreg free
  8760  010C8C  6E43               	movwf	_dspposition,c
  8761                           
  8762                           ;mdb.c: 89: enable_notes(0x10);
  8763  010C8E  0E10               	movlw	16
  8764  010C90  EC6D  F08E         	call	_enable_notes
  8765                           
  8766                           ;mdb.c: 90: break;
  8767  010C94  D024               	goto	l2944
  8768  010C96  0E59               	movlw	low _servmsg
  8769  010C98  6E24               	movwf	lcd_string@lcdstring,c
  8770  010C9A  0EFC               	movlw	high _servmsg
  8771  010C9C  6E25               	movwf	lcd_string@lcdstring+1,c
  8772  010C9E  0E4A               	movlw	low _line1
  8773  010CA0  6EF6               	movwf	tblptrl,c
  8774  010CA2                     	if	1	;There is more than 1 active tblptr byte
  8775  010CA2  0EFC               	movlw	high _line1
  8776  010CA4  6EF7               	movwf	tblptrh,c
  8777  010CA6                     	endif
  8778  010CA6                     	if	1	;There are 3 active tblptr bytes
  8779  010CA6  0E00               	movlw	low (_line1 shr (0+16))
  8780  010CA8  6EF8               	movwf	tblptru,c
  8781  010CAA                     	endif
  8782  010CAA  0008               	tblrd		*
  8783  010CAC  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8784  010CB0  EC78  F08A         	call	_lcd_string	;wreg free
  8785                           
  8786                           ;mdb.c: 93: mdbflags.noteset = 0;
  8787  010CB4  9A3F               	bcf	_mdbflags,5,c
  8788                           
  8789                           ;mdb.c: 95: }
  8790                           
  8791                           ;mdb.c: 94: default : break;
  8792  010CB6  D013               	goto	l2944
  8793  010CB8                     l2942:
  8794  010CB8  5038               	movf	_buttons,w,c	;volatile
  8795                           
  8796                           ; Switch size 1, requested type "space"
  8797                           ; Number of cases is 6, Range of values is 1 to 128
  8798                           ; switch strategies available:
  8799                           ; Name         Instructions Cycles
  8800                           ; simple_byte           19    10 (average)
  8801                           ;	Chosen strategy is simple_byte
  8802  010CBA  0A01               	xorlw	1	; case 1
  8803  010CBC  B4D8               	btfsc	status,2,c
  8804  010CBE  D7B4               	goto	l2943
  8805  010CC0  0A03               	xorlw	3	; case 2
  8806  010CC2  B4D8               	btfsc	status,2,c
  8807  010CC4  D7BC               	goto	l2945
  8808  010CC6  0A06               	xorlw	6	; case 4
  8809  010CC8  B4D8               	btfsc	status,2,c
  8810  010CCA  D7C4               	goto	l2946
  8811  010CCC  0A0C               	xorlw	12	; case 8
  8812  010CCE  B4D8               	btfsc	status,2,c
  8813  010CD0  D7CC               	goto	l2947
  8814  010CD2  0A18               	xorlw	24	; case 16
  8815  010CD4  B4D8               	btfsc	status,2,c
  8816  010CD6  D7D4               	goto	l2948
  8817  010CD8  0A90               	xorlw	144	; case 128
  8818  010CDA  B4D8               	btfsc	status,2,c
  8819  010CDC  D7DC               	goto	l2949
  8820  010CDE                     l2944:
  8821                           
  8822                           ;mdb.c: 96: ((uint8_t*) &noteen)[0] = noteen_byte;
  8823  010CDE  C03D  F03E         	movff	_noteen_byte,_noteen	;volatile
  8824  010CE2  F000               	nop		;# 
  8825  010CE4                     l2940:
  8826  010CE4  AA3F               	btfss	_mdbflags,5,c
  8827  010CE6  0012               	return	
  8828  010CE8  D799               	goto	l2941
  8829  010CEA                     __end_of_set_notes:
  8830                           	opt stack 0
  8831                           tblptru	equ	0xFF8
  8832                           tblptrh	equ	0xFF7
  8833                           tblptrl	equ	0xFF6
  8834                           tablat	equ	0xFF5
  8835                           prodh	equ	0xFF4
  8836                           prodl	equ	0xFF3
  8837                           postinc0	equ	0xFEE
  8838                           wreg	equ	0xFE8
  8839                           indf2	equ	0xFDF
  8840                           postinc2	equ	0xFDE
  8841                           fsr2h	equ	0xFDA
  8842                           fsr2l	equ	0xFD9
  8843                           status	equ	0xFD8
  8844                           
  8845 ;; *************** function _enable_notes *****************
  8846 ;; Defined at:
  8847 ;;		line 101 in file "mdb.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;  notenum         1    wreg     unsigned char 
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;  notenum         1   32[COMRAM] unsigned char 
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      void 
  8854 ;; Registers used:
  8855 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;Total ram usage:        1 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; Hardware stack levels required when called:    9
  8868 ;; This function calls:
  8869 ;;		_butindb
  8870 ;;		_displ_nendis
  8871 ;;		_lcd_string
  8872 ;;		_save_notes
  8873 ;; This function is called by:
  8874 ;;		_set_notes
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text48
  8879  011CDA                     __ptext48:
  8880                           	opt stack 0
  8881  011CDA                     _enable_notes:
  8882                           	opt stack 19
  8883                           
  8884                           ;incstack = 0
  8885                           ;enable_notes@notenum stored from wreg
  8886  011CDA  6E2B               	movwf	enable_notes@notenum,c
  8887                           
  8888                           ;mdb.c: 103: mdbflags.endis = 1;
  8889  011CDC  8C3F               	bsf	_mdbflags,6,c
  8890                           
  8891                           ;mdb.c: 104: displ_nendis(notenum);
  8892  011CDE  502B               	movf	enable_notes@notenum,w,c
  8893  011CE0  EC5F  F094         	call	_displ_nendis
  8894                           
  8895                           ;mdb.c: 105: while(mdbflags.endis)
  8896  011CE4  D034               	goto	l2959
  8897  011CE6                     
  8898                           ;mdb.c: 106: {
  8899                           ;mdb.c: 107: buttons = butindb();
  8900  011CE6  ECD5  F092         	call	_butindb	;wreg free
  8901  011CEA  6E38               	movwf	_buttons,c	;volatile
  8902                           
  8903                           ;mdb.c: 108: switch(buttons)
  8904  011CEC  D026               	goto	l2957
  8905  011CEE  503D               	movf	_noteen_byte,w,c	;volatile
  8906  011CF0  102B               	iorwf	enable_notes@notenum,w,c
  8907  011CF2  6E3D               	movwf	_noteen_byte,c	;volatile
  8908                           
  8909                           ;mdb.c: 111: save_notes();
  8910  011CF4  ECFD  F094         	call	_save_notes	;wreg free
  8911                           
  8912                           ;mdb.c: 112: displ_nendis(notenum);
  8913  011CF8  502B               	movf	enable_notes@notenum,w,c
  8914  011CFA  EC5F  F094         	call	_displ_nendis
  8915                           
  8916                           ;mdb.c: 113: break;
  8917  011CFE  D027               	goto	l2959
  8918  011D00  502B               	movf	enable_notes@notenum,w,c
  8919  011D02  0AFF               	xorlw	255
  8920  011D04  143D               	andwf	_noteen_byte,w,c	;volatile
  8921  011D06  6E3D               	movwf	_noteen_byte,c	;volatile
  8922                           
  8923                           ;mdb.c: 115: save_notes();
  8924  011D08  ECFD  F094         	call	_save_notes	;wreg free
  8925                           
  8926                           ;mdb.c: 116: displ_nendis(notenum);
  8927  011D0C  502B               	movf	enable_notes@notenum,w,c
  8928  011D0E  EC5F  F094         	call	_displ_nendis
  8929                           
  8930                           ;mdb.c: 117: break;
  8931  011D12  D01D               	goto	l2959
  8932  011D14                     l2961:
  8933  011D14  9C3F               	bcf	_mdbflags,6,c
  8934                           
  8935                           ;mdb.c: 119: lcd_string(setnotes, line1);
  8936  011D16  0EA9               	movlw	low _setnotes
  8937  011D18  6E24               	movwf	lcd_string@lcdstring,c
  8938  011D1A  0EFC               	movlw	high _setnotes
  8939  011D1C  6E25               	movwf	lcd_string@lcdstring+1,c
  8940  011D1E  0E4A               	movlw	low _line1
  8941  011D20  6EF6               	movwf	tblptrl,c
  8942  011D22                     	if	1	;There is more than 1 active tblptr byte
  8943  011D22  0EFC               	movlw	high _line1
  8944  011D24  6EF7               	movwf	tblptrh,c
  8945  011D26                     	endif
  8946  011D26                     	if	1	;There are 3 active tblptr bytes
  8947  011D26  0E00               	movlw	low (_line1 shr (0+16))
  8948  011D28  6EF8               	movwf	tblptru,c
  8949  011D2A                     	endif
  8950  011D2A  0008               	tblrd		*
  8951  011D2C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8952  011D30  EC78  F08A         	call	_lcd_string	;wreg free
  8953                           
  8954                           ;mdb.c: 120: buttons = 0;
  8955  011D34  0E00               	movlw	0
  8956  011D36  6E38               	movwf	_buttons,c	;volatile
  8957                           
  8958                           ;mdb.c: 122: }
  8959                           
  8960                           ;mdb.c: 121: default : break;
  8961  011D38  D00A               	goto	l2959
  8962  011D3A                     l2957:
  8963  011D3A  5038               	movf	_buttons,w,c	;volatile
  8964                           
  8965                           ; Switch size 1, requested type "space"
  8966                           ; Number of cases is 3, Range of values is 1 to 128
  8967                           ; switch strategies available:
  8968                           ; Name         Instructions Cycles
  8969                           ; simple_byte           10     6 (average)
  8970                           ;	Chosen strategy is simple_byte
  8971  011D3C  0A01               	xorlw	1	; case 1
  8972  011D3E  B4D8               	btfsc	status,2,c
  8973  011D40  D7D6               	goto	l2958
  8974  011D42  0A03               	xorlw	3	; case 2
  8975  011D44  B4D8               	btfsc	status,2,c
  8976  011D46  D7DC               	goto	l2960
  8977  011D48  0A82               	xorlw	130	; case 128
  8978  011D4A  B4D8               	btfsc	status,2,c
  8979  011D4C  D7E3               	goto	l2961
  8980  011D4E                     l2959:
  8981  011D4E  AC3F               	btfss	_mdbflags,6,c
  8982  011D50  0012               	return	
  8983  011D52  D7C9               	goto	l2956
  8984  011D54                     __end_of_enable_notes:
  8985                           	opt stack 0
  8986                           tblptru	equ	0xFF8
  8987                           tblptrh	equ	0xFF7
  8988                           tblptrl	equ	0xFF6
  8989                           tablat	equ	0xFF5
  8990                           prodh	equ	0xFF4
  8991                           prodl	equ	0xFF3
  8992                           postinc0	equ	0xFEE
  8993                           wreg	equ	0xFE8
  8994                           indf2	equ	0xFDF
  8995                           postinc2	equ	0xFDE
  8996                           fsr2h	equ	0xFDA
  8997                           fsr2l	equ	0xFD9
  8998                           status	equ	0xFD8
  8999                           
  9000 ;; *************** function _save_notes *****************
  9001 ;; Defined at:
  9002 ;;		line 132 in file "mdb.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      void 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9020 ;;Total ram usage:        0 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; Hardware stack levels required when called:    3
  9023 ;; This function calls:
  9024 ;;		_DATAEE_WriteByte
  9025 ;; This function is called by:
  9026 ;;		_enable_notes
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text49
  9031  0129FA                     __ptext49:
  9032                           	opt stack 0
  9033  0129FA                     _save_notes:
  9034                           	opt stack 24
  9035                           
  9036                           ;mdb.c: 134: DATAEE_WriteByte(notebits, noteen_byte);
  9037                           
  9038                           ;incstack = 0
  9039  0129FA  0E0F               	movlw	low _notebits
  9040  0129FC  6EF6               	movwf	tblptrl,c
  9041  0129FE                     	if	1	;There is more than 1 active tblptr byte
  9042  0129FE  0EFC               	movlw	high _notebits
  9043  012A00  6EF7               	movwf	tblptrh,c
  9044  012A02                     	endif
  9045  012A02                     	if	1	;There are 3 active tblptr bytes
  9046  012A02  0E00               	movlw	low (_notebits shr (0+16))
  9047  012A04  6EF8               	movwf	tblptru,c
  9048  012A06                     	endif
  9049  012A06  0009               	tblrd		*+
  9050  012A08  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9051  012A0C  000A               	tblrd		*-
  9052  012A0E  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9053  012A12  C03D  F01F         	movff	_noteen_byte,DATAEE_WriteByte@bData	;volatile
  9054  012A16  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  9055  012A1A  0012               	return		;funcret
  9056  012A1C                     __end_of_save_notes:
  9057                           	opt stack 0
  9058                           tblptru	equ	0xFF8
  9059                           tblptrh	equ	0xFF7
  9060                           tblptrl	equ	0xFF6
  9061                           tablat	equ	0xFF5
  9062                           prodh	equ	0xFF4
  9063                           prodl	equ	0xFF3
  9064                           postinc0	equ	0xFEE
  9065                           wreg	equ	0xFE8
  9066                           indf2	equ	0xFDF
  9067                           postinc2	equ	0xFDE
  9068                           fsr2h	equ	0xFDA
  9069                           fsr2l	equ	0xFD9
  9070                           status	equ	0xFD8
  9071                           
  9072 ;; *************** function _displ_nendis *****************
  9073 ;; Defined at:
  9074 ;;		line 114 in file "lcd.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  note2disp       1    wreg     unsigned char 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;  note2disp       1   30[COMRAM] unsigned char 
  9079 ;;  x               1   31[COMRAM] unsigned char 
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;Total ram usage:        2 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    8
  9096 ;; This function calls:
  9097 ;;		_lcd_string
  9098 ;; This function is called by:
  9099 ;;		_enable_notes
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text50
  9104  0128BE                     __ptext50:
  9105                           	opt stack 0
  9106  0128BE                     _displ_nendis:
  9107                           	opt stack 19
  9108                           
  9109                           ;incstack = 0
  9110                           ;displ_nendis@note2disp stored from wreg
  9111  0128BE  6E29               	movwf	displ_nendis@note2disp,c
  9112                           
  9113                           ;lcd.c: 116: uint8_t x = note2disp & noteen_byte;
  9114  0128C0  5029               	movf	displ_nendis@note2disp,w,c
  9115  0128C2  143D               	andwf	_noteen_byte,w,c	;volatile
  9116  0128C4  6E2A               	movwf	displ_nendis@x,c
  9117                           
  9118                           ;lcd.c: 117: if(x != 0x00)
  9119  0128C6  502A               	movf	displ_nendis@x,w,c
  9120  0128C8  B4D8               	btfsc	status,2,c
  9121  0128CA  D009               	goto	l1622
  9122                           
  9123                           ;lcd.c: 118: {
  9124                           ;lcd.c: 119: lcd_string(enabled, dspposition);
  9125  0128CC  0EA7               	movlw	low _enabled
  9126  0128CE  6E24               	movwf	lcd_string@lcdstring,c
  9127  0128D0  0EFF               	movlw	high _enabled
  9128  0128D2  6E25               	movwf	lcd_string@lcdstring+1,c
  9129  0128D4  C043  F026         	movff	_dspposition,lcd_string@lcdline
  9130  0128D8  EC78  F08A         	call	_lcd_string	;wreg free
  9131                           
  9132                           ;lcd.c: 120: }
  9133  0128DC  0012               	return	
  9134  0128DE                     l1622:
  9135                           
  9136                           ;lcd.c: 121: else
  9137                           ;lcd.c: 122: {
  9138                           ;lcd.c: 123: lcd_string(disabled, dspposition);
  9139  0128DE  0E9D               	movlw	low _disabled
  9140  0128E0  6E24               	movwf	lcd_string@lcdstring,c
  9141  0128E2  0EFF               	movlw	high _disabled
  9142  0128E4  6E25               	movwf	lcd_string@lcdstring+1,c
  9143  0128E6  C043  F026         	movff	_dspposition,lcd_string@lcdline
  9144  0128EA  EC78  F08A         	call	_lcd_string	;wreg free
  9145  0128EE  0012               	return	
  9146  0128F0                     __end_of_displ_nendis:
  9147                           	opt stack 0
  9148                           tblptru	equ	0xFF8
  9149                           tblptrh	equ	0xFF7
  9150                           tblptrl	equ	0xFF6
  9151                           tablat	equ	0xFF5
  9152                           prodh	equ	0xFF4
  9153                           prodl	equ	0xFF3
  9154                           postinc0	equ	0xFEE
  9155                           wreg	equ	0xFE8
  9156                           indf2	equ	0xFDF
  9157                           postinc2	equ	0xFDE
  9158                           fsr2h	equ	0xFDA
  9159                           fsr2l	equ	0xFD9
  9160                           status	equ	0xFD8
  9161                           
  9162 ;; *************** function _displ_note *****************
  9163 ;; Defined at:
  9164 ;;		line 107 in file "lcd.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  notestring      2   30[COMRAM] PTR unsigned char 
  9167 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  9168 ;;		 -> tenrand(9), 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;		None
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      unsigned char 
  9173 ;; Registers used:
  9174 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;Total ram usage:        2 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    8
  9187 ;; This function calls:
  9188 ;;		_lcd_string
  9189 ;;		_lcd_write
  9190 ;; This function is called by:
  9191 ;;		_set_notes
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           	psect	text51
  9196  012712                     __ptext51:
  9197                           	opt stack 0
  9198  012712                     _displ_note:
  9199                           	opt stack 20
  9200                           
  9201                           ;lcd.c: 109: lcd_write(dispclr);
  9202                           
  9203                           ;incstack = 0
  9204  012712  0E54               	movlw	low _dispclr
  9205  012714  6EF6               	movwf	tblptrl,c
  9206  012716                     	if	1	;There is more than 1 active tblptr byte
  9207  012716  0EFC               	movlw	high _dispclr
  9208  012718  6EF7               	movwf	tblptrh,c
  9209  01271A                     	endif
  9210  01271A                     	if	1	;There are 3 active tblptr bytes
  9211  01271A  0E00               	movlw	low (_dispclr shr (0+16))
  9212  01271C  6EF8               	movwf	tblptru,c
  9213  01271E                     	endif
  9214  01271E  0008               	tblrd		*
  9215  012720  50F5               	movf	tablat,w,c
  9216  012722  EC78  F094         	call	_lcd_write
  9217                           
  9218                           ;lcd.c: 110: lcd_string(notestring, line2);
  9219  012726  C029  F024         	movff	displ_note@notestring,lcd_string@lcdstring
  9220  01272A  C02A  F025         	movff	displ_note@notestring+1,lcd_string@lcdstring+1
  9221  01272E  0E49               	movlw	low _line2
  9222  012730  6EF6               	movwf	tblptrl,c
  9223  012732                     	if	1	;There is more than 1 active tblptr byte
  9224  012732  0EFC               	movlw	high _line2
  9225  012734  6EF7               	movwf	tblptrh,c
  9226  012736                     	endif
  9227  012736                     	if	1	;There are 3 active tblptr bytes
  9228  012736  0E00               	movlw	low (_line2 shr (0+16))
  9229  012738  6EF8               	movwf	tblptru,c
  9230  01273A                     	endif
  9231  01273A  0008               	tblrd		*
  9232  01273C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9233  012740  EC78  F08A         	call	_lcd_string	;wreg free
  9234                           
  9235                           ;lcd.c: 111: return bflag+2;
  9236  012744  5047               	movf	_bflag,w,c
  9237  012746  0F02               	addlw	2
  9238  012748  0012               	return	
  9239  01274A                     __end_of_displ_note:
  9240                           	opt stack 0
  9241                           tblptru	equ	0xFF8
  9242                           tblptrh	equ	0xFF7
  9243                           tblptrl	equ	0xFF6
  9244                           tablat	equ	0xFF5
  9245                           prodh	equ	0xFF4
  9246                           prodl	equ	0xFF3
  9247                           postinc0	equ	0xFEE
  9248                           wreg	equ	0xFE8
  9249                           indf2	equ	0xFDF
  9250                           postinc2	equ	0xFDE
  9251                           fsr2h	equ	0xFDA
  9252                           fsr2l	equ	0xFD9
  9253                           status	equ	0xFD8
  9254                           
  9255 ;; *************** function _price_set *****************
  9256 ;; Defined at:
  9257 ;;		line 359 in file "vend.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;		None
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;		None
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;Total ram usage:        0 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:   10
  9278 ;; This function calls:
  9279 ;;		_Read_Service
  9280 ;;		_butindb
  9281 ;;		_lcd_string
  9282 ;;		_set_price
  9283 ;; This function is called by:
  9284 ;;		_enter_service
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text52
  9289  011BDE                     __ptext52:
  9290                           	opt stack 0
  9291  011BDE                     _price_set:
  9292                           	opt stack 19
  9293                           
  9294                           ;vend.c: 361: venflags.priceset = 1;
  9295                           
  9296                           ;incstack = 0
  9297  011BDE  802E               	bsf	_venflags+1,0,c
  9298                           
  9299                           ;vend.c: 362: lcd_string(pricesetmsg, line1);
  9300  011BE0  0E2A               	movlw	low _pricesetmsg
  9301  011BE2  6E24               	movwf	lcd_string@lcdstring,c
  9302  011BE4  0EFF               	movlw	high _pricesetmsg
  9303  011BE6  6E25               	movwf	lcd_string@lcdstring+1,c
  9304  011BE8  0E4A               	movlw	low _line1
  9305  011BEA  6EF6               	movwf	tblptrl,c
  9306  011BEC                     	if	1	;There is more than 1 active tblptr byte
  9307  011BEC  0EFC               	movlw	high _line1
  9308  011BEE  6EF7               	movwf	tblptrh,c
  9309  011BF0                     	endif
  9310  011BF0                     	if	1	;There are 3 active tblptr bytes
  9311  011BF0  0E00               	movlw	low (_line1 shr (0+16))
  9312  011BF2  6EF8               	movwf	tblptru,c
  9313  011BF4                     	endif
  9314  011BF4  0008               	tblrd		*
  9315  011BF6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9316  011BFA  EC78  F08A         	call	_lcd_string	;wreg free
  9317                           
  9318                           ;vend.c: 363: lcd_string(pricesetm2, line2);
  9319  011BFE  0E31               	movlw	low _pricesetm2
  9320  011C00  6E24               	movwf	lcd_string@lcdstring,c
  9321  011C02  0EFD               	movlw	high _pricesetm2
  9322  011C04  6E25               	movwf	lcd_string@lcdstring+1,c
  9323  011C06  0E49               	movlw	low _line2
  9324  011C08  6EF6               	movwf	tblptrl,c
  9325  011C0A                     	if	1	;There is more than 1 active tblptr byte
  9326  011C0A  0EFC               	movlw	high _line2
  9327  011C0C  6EF7               	movwf	tblptrh,c
  9328  011C0E                     	endif
  9329  011C0E                     	if	1	;There are 3 active tblptr bytes
  9330  011C0E  0E00               	movlw	low (_line2 shr (0+16))
  9331  011C10  6EF8               	movwf	tblptru,c
  9332  011C12                     	endif
  9333  011C12  0008               	tblrd		*
  9334  011C14  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9335  011C18  EC78  F08A         	call	_lcd_string	;wreg free
  9336                           
  9337                           ;vend.c: 364: while(venflags.priceset)
  9338  011C1C  D00E               	goto	l2298
  9339  011C1E                     
  9340                           ;vend.c: 365: {
  9341                           ;vend.c: 366: buttons = butindb();
  9342  011C1E  ECD5  F092         	call	_butindb	;wreg free
  9343  011C22  6E38               	movwf	_buttons,c	;volatile
  9344                           
  9345                           ;vend.c: 367: if(buttons != 0x00)
  9346  011C24  5038               	movf	_buttons,w,c	;volatile
  9347  011C26  B4D8               	btfsc	status,2,c
  9348  011C28  D003               	goto	l2297
  9349                           
  9350                           ;vend.c: 368: {
  9351                           ;vend.c: 369: set_price(buttons);
  9352  011C2A  5038               	movf	_buttons,w,c	;volatile
  9353  011C2C  EC6B  F083         	call	_set_price
  9354  011C30                     l2297:
  9355                           
  9356                           ;vend.c: 370: }
  9357                           ;vend.c: 371: if(Read_Service() == 0x00)
  9358  011C30  EC68  F095         	call	_Read_Service	;wreg free
  9359  011C34  0900               	iorlw	0
  9360  011C36  B4D8               	btfsc	status,2,c
  9361                           
  9362                           ;vend.c: 372: {
  9363                           ;vend.c: 373: venflags.priceset = 0;
  9364  011C38  902E               	bcf	_venflags+1,0,c
  9365  011C3A                     l2298:
  9366  011C3A  B02E               	btfsc	_venflags+1,0,c
  9367  011C3C  D7F0               	goto	l2296
  9368                           
  9369                           ;vend.c: 374: }
  9370                           ;vend.c: 375: }
  9371                           ;vend.c: 376: lcd_string(servmsg, line1);
  9372  011C3E  0E59               	movlw	low _servmsg
  9373  011C40  6E24               	movwf	lcd_string@lcdstring,c
  9374  011C42  0EFC               	movlw	high _servmsg
  9375  011C44  6E25               	movwf	lcd_string@lcdstring+1,c
  9376  011C46  0E4A               	movlw	low _line1
  9377  011C48  6EF6               	movwf	tblptrl,c
  9378  011C4A                     	if	1	;There is more than 1 active tblptr byte
  9379  011C4A  0EFC               	movlw	high _line1
  9380  011C4C  6EF7               	movwf	tblptrh,c
  9381  011C4E                     	endif
  9382  011C4E                     	if	1	;There are 3 active tblptr bytes
  9383  011C4E  0E00               	movlw	low (_line1 shr (0+16))
  9384  011C50  6EF8               	movwf	tblptru,c
  9385  011C52                     	endif
  9386  011C52  0008               	tblrd		*
  9387  011C54  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9388  011C58  EC78  F08A         	call	_lcd_string	;wreg free
  9389  011C5C  0012               	return		;funcret
  9390  011C5E                     __end_of_price_set:
  9391                           	opt stack 0
  9392                           tblptru	equ	0xFF8
  9393                           tblptrh	equ	0xFF7
  9394                           tblptrl	equ	0xFF6
  9395                           tablat	equ	0xFF5
  9396                           prodh	equ	0xFF4
  9397                           prodl	equ	0xFF3
  9398                           postinc0	equ	0xFEE
  9399                           wreg	equ	0xFE8
  9400                           indf2	equ	0xFDF
  9401                           postinc2	equ	0xFDE
  9402                           fsr2h	equ	0xFDA
  9403                           fsr2l	equ	0xFD9
  9404                           status	equ	0xFD8
  9405                           
  9406 ;; *************** function _set_price *****************
  9407 ;; Defined at:
  9408 ;;		line 392 in file "vend.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  buttons         1    wreg     unsigned char 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  buttons         1   12[BANK0 ] unsigned char 
  9413 ;;  channel         1   13[BANK0 ] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9424 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9426 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9427 ;;Total ram usage:        4 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:    9
  9430 ;; This function calls:
  9431 ;;		_DATAEE_ReadByte
  9432 ;;		_DATAEE_WriteByte
  9433 ;;		_butindb
  9434 ;;		_displ_price
  9435 ;;		_get_channel
  9436 ;;		_lcd_string
  9437 ;; This function is called by:
  9438 ;;		_price_set
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442                           	psect	text53
  9443  0106D6                     __ptext53:
  9444                           	opt stack 0
  9445  0106D6                     _set_price:
  9446                           	opt stack 19
  9447                           
  9448                           ;incstack = 0
  9449                           ;set_price@buttons stored from wreg
  9450  0106D6  0100               	movlb	0	; () banked
  9451  0106D8  6FBE               	movwf	set_price@buttons& (0+255),b
  9452                           
  9453                           ;vend.c: 394: venflags.setprice = 1;
  9454  0106DA  822E               	bsf	_venflags+1,1,c
  9455                           
  9456                           ;vend.c: 395: uint8_t channel = get_channel(buttons);
  9457  0106DC  0100               	movlb	0	; () banked
  9458  0106DE  51BE               	movf	set_price@buttons& (0+255),w,b
  9459  0106E0  EC3E  F095         	call	_get_channel
  9460  0106E4  0100               	movlb	0	; () banked
  9461  0106E6  6FBF               	movwf	set_price@channel& (0+255),b
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;vend.c: 397: vendprice = DATAEE_ReadByte(pricestore + channel);
  9465  0106E8  0E13               	movlw	low _pricestore
  9466  0106EA  6EF6               	movwf	tblptrl,c
  9467  0106EC                     	if	1	;There is more than 1 active tblptr byte
  9468  0106EC  0EFC               	movlw	high _pricestore
  9469  0106EE  6EF7               	movwf	tblptrh,c
  9470  0106F0                     	endif
  9471  0106F0                     	if	1	;There are 3 active tblptr bytes
  9472  0106F0  0E00               	movlw	low (_pricestore shr (0+16))
  9473  0106F2  6EF8               	movwf	tblptru,c
  9474  0106F4                     	endif
  9475  0106F4  0009               	tblrd		*+
  9476  0106F6  CFF5 F02B          	movff	tablat,??_set_price
  9477  0106FA  0009               	tblrd		*+
  9478  0106FC  CFF5 F02C          	movff	tablat,??_set_price+1
  9479  010700  51BF               	movf	set_price@channel& (0+255),w,b
  9480  010702  242B               	addwf	??_set_price,w,c
  9481  010704  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  9482  010706  0E00               	movlw	0
  9483  010708  202C               	addwfc	??_set_price+1,w,c
  9484  01070A  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  9485  01070C  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  9486  010710  6E37               	movwf	_vendprice,c	;volatile
  9487                           
  9488                           ;vend.c: 398: displ_price(vendprice);
  9489  010712  5037               	movf	_vendprice,w,c	;volatile
  9490  010714  ECB5  F092         	call	_displ_price
  9491                           
  9492                           ;vend.c: 399: while(venflags.setprice)
  9493  010718  D067               	goto	l2313
  9494  01071A                     
  9495                           ;vend.c: 400: {
  9496                           ;vend.c: 401: buttons = butindb();
  9497  01071A  ECD5  F092         	call	_butindb	;wreg free
  9498  01071E  0100               	movlb	0	; () banked
  9499  010720  6FBE               	movwf	set_price@buttons& (0+255),b
  9500                           
  9501                           ;vend.c: 403: switch(buttons)
  9502  010722  D057               	goto	l2311
  9503  010724                     
  9504                           ; BSR set to: 0
  9505                           
  9506                           ; BSR set to: 0
  9507  010724  2A37               	incf	_vendprice,f,c	;volatile
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;vend.c: 406: DATAEE_WriteByte(pricestore + channel, vendprice);
  9511  010726  0E13               	movlw	low _pricestore
  9512  010728  6EF6               	movwf	tblptrl,c
  9513  01072A                     	if	1	;There is more than 1 active tblptr byte
  9514  01072A  0EFC               	movlw	high _pricestore
  9515  01072C  6EF7               	movwf	tblptrh,c
  9516  01072E                     	endif
  9517  01072E                     	if	1	;There are 3 active tblptr bytes
  9518  01072E  0E00               	movlw	low (_pricestore shr (0+16))
  9519  010730  6EF8               	movwf	tblptru,c
  9520  010732                     	endif
  9521  010732  0009               	tblrd		*+
  9522  010734  CFF5 F02B          	movff	tablat,??_set_price
  9523  010738  0009               	tblrd		*+
  9524  01073A  CFF5 F02C          	movff	tablat,??_set_price+1
  9525  01073E  51BF               	movf	set_price@channel& (0+255),w,b
  9526  010740  242B               	addwf	??_set_price,w,c
  9527  010742  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  9528  010744  0E00               	movlw	0
  9529  010746  202C               	addwfc	??_set_price+1,w,c
  9530  010748  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  9531  01074A  C037  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  9532  01074E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  9533                           
  9534                           ;vend.c: 407: displ_price(vendprice);
  9535  010752  5037               	movf	_vendprice,w,c	;volatile
  9536  010754  ECB5  F092         	call	_displ_price
  9537                           
  9538                           ;vend.c: 408: break;
  9539  010758  D047               	goto	l2313
  9540  01075A  0637               	decf	_vendprice,f,c	;volatile
  9541                           
  9542                           ;vend.c: 410: DATAEE_WriteByte(pricestore + channel, vendprice);
  9543  01075C  0E13               	movlw	low _pricestore
  9544  01075E  6EF6               	movwf	tblptrl,c
  9545  010760                     	if	1	;There is more than 1 active tblptr byte
  9546  010760  0EFC               	movlw	high _pricestore
  9547  010762  6EF7               	movwf	tblptrh,c
  9548  010764                     	endif
  9549  010764                     	if	1	;There are 3 active tblptr bytes
  9550  010764  0E00               	movlw	low (_pricestore shr (0+16))
  9551  010766  6EF8               	movwf	tblptru,c
  9552  010768                     	endif
  9553  010768  0009               	tblrd		*+
  9554  01076A  CFF5 F02B          	movff	tablat,??_set_price
  9555  01076E  0009               	tblrd		*+
  9556  010770  CFF5 F02C          	movff	tablat,??_set_price+1
  9557  010774  0100               	movlb	0	; () banked
  9558  010776  51BF               	movf	set_price@channel& (0+255),w,b
  9559  010778  242B               	addwf	??_set_price,w,c
  9560  01077A  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  9561  01077C  0E00               	movlw	0
  9562  01077E  202C               	addwfc	??_set_price+1,w,c
  9563  010780  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  9564  010782  C037  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  9565  010786  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  9566                           
  9567                           ;vend.c: 411: displ_price(vendprice);
  9568  01078A  5037               	movf	_vendprice,w,c	;volatile
  9569  01078C  ECB5  F092         	call	_displ_price
  9570                           
  9571                           ;vend.c: 412: break;
  9572  010790  D02B               	goto	l2313
  9573  010792                     l2315:
  9574                           
  9575                           ; BSR set to: 0
  9576  010792  922E               	bcf	_venflags+1,1,c
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;vend.c: 414: lcd_string(pricesetmsg, line1);
  9580  010794  0E2A               	movlw	low _pricesetmsg
  9581  010796  6E24               	movwf	lcd_string@lcdstring,c
  9582  010798  0EFF               	movlw	high _pricesetmsg
  9583  01079A  6E25               	movwf	lcd_string@lcdstring+1,c
  9584  01079C  0E4A               	movlw	low _line1
  9585  01079E  6EF6               	movwf	tblptrl,c
  9586  0107A0                     	if	1	;There is more than 1 active tblptr byte
  9587  0107A0  0EFC               	movlw	high _line1
  9588  0107A2  6EF7               	movwf	tblptrh,c
  9589  0107A4                     	endif
  9590  0107A4                     	if	1	;There are 3 active tblptr bytes
  9591  0107A4  0E00               	movlw	low (_line1 shr (0+16))
  9592  0107A6  6EF8               	movwf	tblptru,c
  9593  0107A8                     	endif
  9594  0107A8  0008               	tblrd		*
  9595  0107AA  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9596  0107AE  EC78  F08A         	call	_lcd_string	;wreg free
  9597                           
  9598                           ;vend.c: 415: lcd_string(pricesetm2, line2);
  9599  0107B2  0E31               	movlw	low _pricesetm2
  9600  0107B4  6E24               	movwf	lcd_string@lcdstring,c
  9601  0107B6  0EFD               	movlw	high _pricesetm2
  9602  0107B8  6E25               	movwf	lcd_string@lcdstring+1,c
  9603  0107BA  0E49               	movlw	low _line2
  9604  0107BC  6EF6               	movwf	tblptrl,c
  9605  0107BE                     	if	1	;There is more than 1 active tblptr byte
  9606  0107BE  0EFC               	movlw	high _line2
  9607  0107C0  6EF7               	movwf	tblptrh,c
  9608  0107C2                     	endif
  9609  0107C2                     	if	1	;There are 3 active tblptr bytes
  9610  0107C2  0E00               	movlw	low (_line2 shr (0+16))
  9611  0107C4  6EF8               	movwf	tblptru,c
  9612  0107C6                     	endif
  9613  0107C6  0008               	tblrd		*
  9614  0107C8  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9615  0107CC  EC78  F08A         	call	_lcd_string	;wreg free
  9616                           
  9617                           ;vend.c: 418: }
  9618                           
  9619                           ;vend.c: 417: break;
  9620  0107D0  D00B               	goto	l2313
  9621  0107D2                     l2311:
  9622  0107D2  0100               	movlb	0	; () banked
  9623  0107D4  51BE               	movf	set_price@buttons& (0+255),w,b
  9624                           
  9625                           ; Switch size 1, requested type "space"
  9626                           ; Number of cases is 3, Range of values is 1 to 128
  9627                           ; switch strategies available:
  9628                           ; Name         Instructions Cycles
  9629                           ; simple_byte           10     6 (average)
  9630                           ;	Chosen strategy is simple_byte
  9631  0107D6  0A01               	xorlw	1	; case 1
  9632  0107D8  B4D8               	btfsc	status,2,c
  9633  0107DA  D7A4               	goto	l2312
  9634  0107DC  0A03               	xorlw	3	; case 2
  9635  0107DE  B4D8               	btfsc	status,2,c
  9636  0107E0  D7BC               	goto	l2314
  9637  0107E2  0A82               	xorlw	130	; case 128
  9638  0107E4  B4D8               	btfsc	status,2,c
  9639  0107E6  D7D5               	goto	l2315
  9640  0107E8                     l2313:
  9641                           
  9642                           ; BSR set to: 0
  9643  0107E8  A22E               	btfss	_venflags+1,1,c
  9644  0107EA  0012               	return	
  9645  0107EC  D796               	goto	l2310
  9646  0107EE                     __end_of_set_price:
  9647                           	opt stack 0
  9648                           tblptru	equ	0xFF8
  9649                           tblptrh	equ	0xFF7
  9650                           tblptrl	equ	0xFF6
  9651                           tablat	equ	0xFF5
  9652                           prodh	equ	0xFF4
  9653                           prodl	equ	0xFF3
  9654                           postinc0	equ	0xFEE
  9655                           wreg	equ	0xFE8
  9656                           indf2	equ	0xFDF
  9657                           postinc2	equ	0xFDE
  9658                           fsr2h	equ	0xFDA
  9659                           fsr2l	equ	0xFD9
  9660                           status	equ	0xFD8
  9661                           
  9662 ;; *************** function _displ_price *****************
  9663 ;; Defined at:
  9664 ;;		line 234 in file "lcd.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;  vendprice       1    wreg     unsigned char 
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;  vendprice       1   31[COMRAM] unsigned char 
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  1    wreg      void 
  9671 ;; Registers used:
  9672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9673 ;; Tracked objects:
  9674 ;;		On entry : 0/0
  9675 ;;		On exit  : 0/0
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9682 ;;Total ram usage:        1 bytes
  9683 ;; Hardware stack levels used:    1
  9684 ;; Hardware stack levels required when called:    8
  9685 ;; This function calls:
  9686 ;;		_displ_hex
  9687 ;;		_lcd_dispadd
  9688 ;;		_lcd_write
  9689 ;;		_lcd_writeC
  9690 ;; This function is called by:
  9691 ;;		_main
  9692 ;;		_set_price
  9693 ;; This function uses a non-reentrant model
  9694 ;;
  9695                           
  9696                           	psect	text54
  9697  01256A                     __ptext54:
  9698                           	opt stack 0
  9699  01256A                     _displ_price:
  9700                           	opt stack 19
  9701                           
  9702                           ;incstack = 0
  9703                           ;displ_price@vendprice stored from wreg
  9704  01256A  6E2A               	movwf	displ_price@vendprice,c
  9705                           
  9706                           ;lcd.c: 236: lcd_write(dispclr);
  9707  01256C  0E54               	movlw	low _dispclr
  9708  01256E  6EF6               	movwf	tblptrl,c
  9709  012570                     	if	1	;There is more than 1 active tblptr byte
  9710  012570  0EFC               	movlw	high _dispclr
  9711  012572  6EF7               	movwf	tblptrh,c
  9712  012574                     	endif
  9713  012574                     	if	1	;There are 3 active tblptr bytes
  9714  012574  0E00               	movlw	low (_dispclr shr (0+16))
  9715  012576  6EF8               	movwf	tblptru,c
  9716  012578                     	endif
  9717  012578  0008               	tblrd		*
  9718  01257A  50F5               	movf	tablat,w,c
  9719  01257C  EC78  F094         	call	_lcd_write
  9720                           
  9721                           ;lcd.c: 237: lcd_dispadd(line2 + 4);
  9722  012580  0E49               	movlw	low _line2
  9723  012582  6EF6               	movwf	tblptrl,c
  9724  012584                     	if	1	;There is more than 1 active tblptr byte
  9725  012584  0EFC               	movlw	high _line2
  9726  012586  6EF7               	movwf	tblptrh,c
  9727  012588                     	endif
  9728  012588                     	if	1	;There are 3 active tblptr bytes
  9729  012588  0E00               	movlw	low (_line2 shr (0+16))
  9730  01258A  6EF8               	movwf	tblptru,c
  9731  01258C                     	endif
  9732  01258C  0008               	tblrd		*
  9733  01258E  50F5               	movf	tablat,w,c
  9734  012590  0F04               	addlw	4
  9735  012592  EC74  F095         	call	_lcd_dispadd
  9736                           
  9737                           ;lcd.c: 238: lcd_writeC((uint8_t)'R');
  9738  012596  0E52               	movlw	82
  9739  012598  EC84  F08F         	call	_lcd_writeC
  9740                           
  9741                           ;lcd.c: 239: displ_hex(vendprice);
  9742  01259C  502A               	movf	displ_price@vendprice,w,c
  9743  01259E  6E27               	movwf	displ_hex@hexnum,c
  9744  0125A0  6A28               	clrf	displ_hex@hexnum+1,c
  9745  0125A2  6A29               	clrf	displ_hex@hexnum+2,c
  9746  0125A4  ECC3  F089         	call	_displ_hex	;wreg free
  9747  0125A8  0012               	return		;funcret
  9748  0125AA                     __end_of_displ_price:
  9749                           	opt stack 0
  9750                           tblptru	equ	0xFF8
  9751                           tblptrh	equ	0xFF7
  9752                           tblptrl	equ	0xFF6
  9753                           tablat	equ	0xFF5
  9754                           prodh	equ	0xFF4
  9755                           prodl	equ	0xFF3
  9756                           postinc0	equ	0xFEE
  9757                           wreg	equ	0xFE8
  9758                           indf2	equ	0xFDF
  9759                           postinc2	equ	0xFDE
  9760                           fsr2h	equ	0xFDA
  9761                           fsr2l	equ	0xFD9
  9762                           status	equ	0xFD8
  9763                           
  9764 ;; *************** function _mdb_unlock *****************
  9765 ;; Defined at:
  9766 ;;		line 382 in file "mdb.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;		None
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;		None
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  1    wreg      void 
  9773 ;; Registers used:
  9774 ;;		wreg, status,2, status,0, cstack
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;Total ram usage:        1 bytes
  9785 ;; Hardware stack levels used:    1
  9786 ;; Hardware stack levels required when called:    3
  9787 ;; This function calls:
  9788 ;;		_CMP1_Initialize
  9789 ;;		_DAC1_Initialize
  9790 ;;		_TMR1_Initialize
  9791 ;;		_TMR3_Initialize
  9792 ;;		_TMR5_Initialize
  9793 ;; This function is called by:
  9794 ;;		_enter_service
  9795 ;;		_vend_nosense
  9796 ;;		_vend_dispense
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text55
  9801  011140                     __ptext55:
  9802                           	opt stack 0
  9803  011140                     _mdb_unlock:
  9804                           	opt stack 24
  9805                           
  9806                           ;mdb.c: 384: _delay((unsigned long)((50)*(12000000/4000.0)));
  9807                           
  9808                           ;incstack = 0
  9809  011140  0EC3               	movlw	195
  9810  011142  6E1F               	movwf	??_mdb_unlock& (0+255),c
  9811  011144  0ECD               	movlw	205
  9812  011146                     u5797:
  9813  011146  2EE8               	decfsz	wreg,f,c
  9814  011148  D7FE               	bra	u5797
  9815  01114A  2E1F               	decfsz	??_mdb_unlock& (0+255),f,c
  9816  01114C  D7FC               	bra	u5797
  9817  01114E  F000               	nop	
  9818                           
  9819                           ;mdb.c: 385: LATE = 0x00;
  9820  011150  0E00               	movlw	0
  9821  011152  6E87               	movwf	3975,c	;volatile
  9822                           
  9823                           ;mdb.c: 386: LATD = 0x00;
  9824  011154  0E00               	movlw	0
  9825  011156  6E86               	movwf	3974,c	;volatile
  9826                           
  9827                           ;mdb.c: 387: LATA = 0xC0;
  9828  011158  0EC0               	movlw	192
  9829  01115A  6E83               	movwf	3971,c	;volatile
  9830                           
  9831                           ;mdb.c: 388: LATB = 0x00;
  9832  01115C  0E00               	movlw	0
  9833  01115E  6E84               	movwf	3972,c	;volatile
  9834                           
  9835                           ;mdb.c: 389: LATC = 0x01;
  9836  011160  0E01               	movlw	1
  9837  011162  6E85               	movwf	3973,c	;volatile
  9838                           
  9839                           ;mdb.c: 394: TRISE = 0x00;
  9840  011164  0E00               	movlw	0
  9841  011166  6E8C               	movwf	3980,c	;volatile
  9842                           
  9843                           ;mdb.c: 395: TRISA = 0x1F;
  9844  011168  0E1F               	movlw	31
  9845  01116A  6E88               	movwf	3976,c	;volatile
  9846                           
  9847                           ;mdb.c: 396: TRISB = 0xD0;
  9848  01116C  0ED0               	movlw	208
  9849  01116E  6E89               	movwf	3977,c	;volatile
  9850                           
  9851                           ;mdb.c: 397: TRISC = 0x80;
  9852  011170  0E80               	movlw	128
  9853  011172  6E8A               	movwf	3978,c	;volatile
  9854                           
  9855                           ;mdb.c: 398: TRISD = 0x00;
  9856  011174  0E00               	movlw	0
  9857  011176  6E8B               	movwf	3979,c	;volatile
  9858                           
  9859                           ;mdb.c: 403: ANSELC = 0x00;
  9860  011178  0E00               	movlw	0
  9861  01117A  010F               	movlb	15	; () banked
  9862  01117C  6F21               	movwf	33,b	;volatile
  9863                           
  9864                           ; BSR set to: 15
  9865                           ;mdb.c: 404: ANSELB = 0xC0;
  9866  01117E  0EC0               	movlw	192
  9867  011180  6F19               	movwf	25,b	;volatile
  9868                           
  9869                           ; BSR set to: 15
  9870                           ;mdb.c: 405: ANSELD = 0x00;
  9871  011182  0E00               	movlw	0
  9872  011184  6F26               	movwf	38,b	;volatile
  9873                           
  9874                           ; BSR set to: 15
  9875                           ;mdb.c: 406: ANSELE = 0x00;
  9876  011186  0E00               	movlw	0
  9877  011188  6F2E               	movwf	46,b	;volatile
  9878                           
  9879                           ; BSR set to: 15
  9880                           ;mdb.c: 407: ANSELA = 0x01;
  9881  01118A  0E01               	movlw	1
  9882  01118C  6F11               	movwf	17,b	;volatile
  9883                           
  9884                           ; BSR set to: 15
  9885                           ;mdb.c: 412: WPUD = 0x00;
  9886  01118E  0E00               	movlw	0
  9887  011190  6F25               	movwf	37,b	;volatile
  9888                           
  9889                           ; BSR set to: 15
  9890                           ;mdb.c: 413: WPUE = 0x00;
  9891  011192  0E00               	movlw	0
  9892  011194  6F2D               	movwf	45,b	;volatile
  9893                           
  9894                           ; BSR set to: 15
  9895                           ;mdb.c: 414: WPUB = 0x00;
  9896  011196  0E00               	movlw	0
  9897  011198  6F18               	movwf	24,b	;volatile
  9898                           
  9899                           ; BSR set to: 15
  9900                           ;mdb.c: 415: WPUA = 0x00;
  9901  01119A  0E00               	movlw	0
  9902  01119C  6F10               	movwf	16,b	;volatile
  9903                           
  9904                           ; BSR set to: 15
  9905                           ;mdb.c: 416: WPUC = 0x00;
  9906  01119E  0E00               	movlw	0
  9907  0111A0  6F20               	movwf	32,b	;volatile
  9908                           
  9909                           ; BSR set to: 15
  9910                           ;mdb.c: 421: ODCONE = 0x00;
  9911  0111A2  0E00               	movlw	0
  9912  0111A4  6F2C               	movwf	44,b	;volatile
  9913                           
  9914                           ; BSR set to: 15
  9915                           ;mdb.c: 422: ODCONA = 0x00;
  9916  0111A6  0E00               	movlw	0
  9917  0111A8  6F0F               	movwf	15,b	;volatile
  9918                           
  9919                           ; BSR set to: 15
  9920                           ;mdb.c: 423: ODCONB = 0x00;
  9921  0111AA  0E00               	movlw	0
  9922  0111AC  6F17               	movwf	23,b	;volatile
  9923                           
  9924                           ; BSR set to: 15
  9925                           ;mdb.c: 424: ODCONC = 0x00;
  9926  0111AE  0E00               	movlw	0
  9927  0111B0  6F1F               	movwf	31,b	;volatile
  9928                           
  9929                           ; BSR set to: 15
  9930                           ;mdb.c: 425: ODCOND = 0x00;
  9931  0111B2  0E00               	movlw	0
  9932  0111B4  6F24               	movwf	36,b	;volatile
  9933                           
  9934                           ; BSR set to: 15
  9935                           ;mdb.c: 426: LATC = 0x01;
  9936  0111B6  0E01               	movlw	1
  9937  0111B8  6E85               	movwf	3973,c	;volatile
  9938                           
  9939                           ; BSR set to: 15
  9940                           ;mdb.c: 427: TRISC = 0x80;
  9941  0111BA  0E80               	movlw	128
  9942  0111BC  6E8A               	movwf	3978,c	;volatile
  9943                           
  9944                           ; BSR set to: 15
  9945                           ;mdb.c: 428: ANSELC = 0x00;
  9946  0111BE  0E00               	movlw	0
  9947  0111C0  6F21               	movwf	33,b	;volatile
  9948                           
  9949                           ; BSR set to: 15
  9950                           ;mdb.c: 429: WPUC = 0x00;
  9951  0111C2  0E00               	movlw	0
  9952  0111C4  6F20               	movwf	32,b	;volatile
  9953                           
  9954                           ; BSR set to: 15
  9955                           ;mdb.c: 430: ODCONC = 0x00;
  9956  0111C6  0E00               	movlw	0
  9957  0111C8  6F1F               	movwf	31,b	;volatile
  9958                           
  9959                           ; BSR set to: 15
  9960                           ;mdb.c: 431: PPSLOCK = 0x55;
  9961  0111CA  0E55               	movlw	85
  9962  0111CC  010E               	movlb	14	; () banked
  9963  0111CE  6FA0               	movwf	160,b	;volsfr
  9964                           
  9965                           ; BSR set to: 14
  9966                           ;mdb.c: 432: PPSLOCK = 0xAA;
  9967  0111D0  0EAA               	movlw	170
  9968  0111D2  6FA0               	movwf	160,b	;volsfr
  9969                           
  9970                           ; BSR set to: 14
  9971                           ;mdb.c: 433: PPSLOCKbits.PPSLOCKED = 0x00;
  9972  0111D4  91A0               	bcf	160,0,b	;volsfr
  9973                           
  9974                           ; BSR set to: 14
  9975                           ;mdb.c: 435: RX1PPSbits.RXPPS = 0x0;
  9976  0111D6  91B5               	bcf	181,0,b	;volatile
  9977  0111D8  93B5               	bcf	181,1,b	;volatile
  9978  0111DA  95B5               	bcf	181,2,b	;volatile
  9979  0111DC  97B5               	bcf	181,3,b	;volatile
  9980  0111DE  99B5               	bcf	181,4,b	;volatile
  9981                           
  9982                           ; BSR set to: 14
  9983                           ;mdb.c: 436: RC6PPS = 0x0;
  9984  0111E0  0E00               	movlw	0
  9985  0111E2  6FFD               	movwf	253,b	;volatile
  9986                           
  9987                           ; BSR set to: 14
  9988                           ;mdb.c: 437: RB5PPS = 0x0;
  9989  0111E4  0E00               	movlw	0
  9990  0111E6  6FF4               	movwf	244,b	;volatile
  9991                           
  9992                           ; BSR set to: 14
  9993                           ;mdb.c: 438: RX2PPSbits.RXPPS = 0x0;
  9994  0111E8  918D               	bcf	141,0,b	;volatile
  9995  0111EA  938D               	bcf	141,1,b	;volatile
  9996  0111EC  958D               	bcf	141,2,b	;volatile
  9997  0111EE  978D               	bcf	141,3,b	;volatile
  9998  0111F0  998D               	bcf	141,4,b	;volatile
  9999                           
 10000                           ; BSR set to: 14
 10001                           ;mdb.c: 439: CMP1_Initialize();
 10002  0111F2  ECCF  F095         	call	_CMP1_Initialize	;wreg free
 10003                           
 10004                           ;mdb.c: 440: TMR3_Initialize();
 10005  0111F6  ECDB  F093         	call	_TMR3_Initialize	;wreg free
 10006                           
 10007                           ;mdb.c: 441: DAC1_Initialize();
 10008  0111FA  EC1C  F096         	call	_DAC1_Initialize	;wreg free
 10009                           
 10010                           ;mdb.c: 442: TMR5_Initialize();
 10011  0111FE  ECC0  F093         	call	_TMR5_Initialize	;wreg free
 10012                           
 10013                           ;mdb.c: 443: TMR1_Initialize();
 10014  011202  ECF6  F093         	call	_TMR1_Initialize	;wreg free
 10015  011206  0012               	return		;funcret
 10016  011208                     __end_of_mdb_unlock:
 10017                           	opt stack 0
 10018                           tblptru	equ	0xFF8
 10019                           tblptrh	equ	0xFF7
 10020                           tblptrl	equ	0xFF6
 10021                           tablat	equ	0xFF5
 10022                           prodh	equ	0xFF4
 10023                           prodl	equ	0xFF3
 10024                           postinc0	equ	0xFEE
 10025                           wreg	equ	0xFE8
 10026                           indf2	equ	0xFDF
 10027                           postinc2	equ	0xFDE
 10028                           fsr2h	equ	0xFDA
 10029                           fsr2l	equ	0xFD9
 10030                           status	equ	0xFD8
 10031                           
 10032 ;; *************** function _hopper_test *****************
 10033 ;; Defined at:
 10034 ;;		line 10 in file "hopper.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;		None
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10052 ;;Total ram usage:        0 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    6
 10055 ;; This function calls:
 10056 ;;		_hopper_pay
 10057 ;; This function is called by:
 10058 ;;		_enter_service
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text56
 10063  012B8A                     __ptext56:
 10064                           	opt stack 0
 10065  012B8A                     _hopper_test:
 10066                           	opt stack 23
 10067                           
 10068                           ;hopper.c: 12: if(!hopper_pay(0x05))
 10069                           
 10070                           ;incstack = 0
 10071  012B8A  0E05               	movlw	5
 10072  012B8C  ECE4  F08E         	call	_hopper_pay
 10073  012B90  0900               	iorlw	0
 10074  012B92  A4D8               	btfss	status,2,c
 10075  012B94  D002               	goto	l3967
 10076  012B96  F000               	nop		;# 
 10077                           
 10078                           ;hopper.c: 15: }
 10079  012B98  0012               	return	
 10080  012B9A                     l3967:
 10081  012B9A  F000               	nop		;# 
 10082  012B9C  0012               	return	
 10083  012B9E                     __end_of_hopper_test:
 10084                           	opt stack 0
 10085                           tblptru	equ	0xFF8
 10086                           tblptrh	equ	0xFF7
 10087                           tblptrl	equ	0xFF6
 10088                           tablat	equ	0xFF5
 10089                           prodh	equ	0xFF4
 10090                           prodl	equ	0xFF3
 10091                           postinc0	equ	0xFEE
 10092                           wreg	equ	0xFE8
 10093                           indf2	equ	0xFDF
 10094                           postinc2	equ	0xFDE
 10095                           fsr2h	equ	0xFDA
 10096                           fsr2l	equ	0xFD9
 10097                           status	equ	0xFD8
 10098                           
 10099 ;; *************** function _hopper_pay *****************
 10100 ;; Defined at:
 10101 ;;		line 39 in file "hopper.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;  change          1    wreg     unsigned char 
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;  change          1   30[COMRAM] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      unsigned char 
 10108 ;; Registers used:
 10109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10119 ;;Total ram usage:        2 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:    5
 10122 ;; This function calls:
 10123 ;;		_DATAEE_WriteByte
 10124 ;;		_Update_coinsout
 10125 ;;		_cctalk_off
 10126 ;;		_cctalk_on
 10127 ;;		_pay_coin
 10128 ;; This function is called by:
 10129 ;;		_hopper_test
 10130 ;;		_give_change
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text57
 10135  011DC8                     __ptext57:
 10136                           	opt stack 0
 10137  011DC8                     _hopper_pay:
 10138                           	opt stack 23
 10139                           
 10140                           ;incstack = 0
 10141                           ;hopper_pay@change stored from wreg
 10142  011DC8  6E29               	movwf	hopper_pay@change,c
 10143                           
 10144                           ;hopper.c: 41: cctalk_on();
 10145  011DCA  EC51  F096         	call	_cctalk_on	;wreg free
 10146                           
 10147                           ;hopper.c: 42: outcoins = 0x00;
 10148  011DCE  0E00               	movlw	0
 10149  011DD0  6E3B               	movwf	_outcoins,c
 10150                           
 10151                           ;hopper.c: 43: while(change > 0)
 10152  011DD2  D027               	goto	l3976
 10153  011DD4                     
 10154                           ;hopper.c: 44: {
 10155                           ;hopper.c: 45: venflags.nochange = pay_coin();
 10156  011DD4  EC57  F08C         	call	_pay_coin	;wreg free
 10157  011DD8  6E28               	movwf	??_hopper_pay& (0+255),c
 10158  011DDA  4628               	rlncf	??_hopper_pay,f,c
 10159  011DDC  4628               	rlncf	??_hopper_pay,f,c
 10160  011DDE  4628               	rlncf	??_hopper_pay,f,c
 10161  011DE0  502D               	movf	_venflags,w,c
 10162  011DE2  1828               	xorwf	??_hopper_pay,w,c
 10163  011DE4  0BF7               	andlw	-9
 10164  011DE6  1828               	xorwf	??_hopper_pay,w,c
 10165  011DE8  6E2D               	movwf	_venflags,c
 10166                           
 10167                           ;hopper.c: 46: if(venflags.nochange)
 10168  011DEA  A62D               	btfss	_venflags,3,c
 10169  011DEC  D018               	goto	l3978
 10170                           
 10171                           ;hopper.c: 47: {
 10172                           ;hopper.c: 48: cctalk_off();
 10173  011DEE  EC53  F096         	call	_cctalk_off	;wreg free
 10174                           
 10175                           ;hopper.c: 49: Update_coinsout(outcoins);
 10176  011DF2  503B               	movf	_outcoins,w,c
 10177  011DF4  EC18  F090         	call	_Update_coinsout
 10178                           
 10179                           ;hopper.c: 50: venflags.nochange = 1;
 10180  011DF8  862D               	bsf	_venflags,3,c
 10181                           
 10182                           ;hopper.c: 51: DATAEE_WriteByte(hoperror, 0x01);
 10183  011DFA  0EE3               	movlw	low _hoperror
 10184  011DFC  6EF6               	movwf	tblptrl,c
 10185  011DFE                     	if	1	;There is more than 1 active tblptr byte
 10186  011DFE  0EFB               	movlw	high _hoperror
 10187  011E00  6EF7               	movwf	tblptrh,c
 10188  011E02                     	endif
 10189  011E02                     	if	1	;There are 3 active tblptr bytes
 10190  011E02  0E00               	movlw	low (_hoperror shr (0+16))
 10191  011E04  6EF8               	movwf	tblptru,c
 10192  011E06                     	endif
 10193  011E06  0009               	tblrd		*+
 10194  011E08  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 10195  011E0C  000A               	tblrd		*-
 10196  011E0E  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 10197  011E12  0E01               	movlw	1
 10198  011E14  6E1F               	movwf	DATAEE_WriteByte@bData,c
 10199  011E16  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 10200                           
 10201                           ;hopper.c: 52: return change;
 10202  011E1A  5029               	movf	hopper_pay@change,w,c
 10203  011E1C  0012               	return	
 10204  011E1E                     l3978:
 10205                           
 10206                           ;hopper.c: 53: }
 10207                           ;hopper.c: 54: outcoins++;
 10208  011E1E  2A3B               	incf	_outcoins,f,c
 10209                           
 10210                           ;hopper.c: 55: change--;
 10211  011E20  0629               	decf	hopper_pay@change,f,c
 10212  011E22                     l3976:
 10213  011E22  5029               	movf	hopper_pay@change,w,c
 10214  011E24  A4D8               	btfss	status,2,c
 10215  011E26  D7D6               	goto	l3977
 10216                           
 10217                           ;hopper.c: 56: }
 10218                           ;hopper.c: 57: cctalk_off();
 10219  011E28  EC53  F096         	call	_cctalk_off	;wreg free
 10220                           
 10221                           ;hopper.c: 58: Update_coinsout(outcoins);
 10222  011E2C  503B               	movf	_outcoins,w,c
 10223  011E2E  EC18  F090         	call	_Update_coinsout
 10224                           
 10225                           ;hopper.c: 59: return change;
 10226  011E32  5029               	movf	hopper_pay@change,w,c
 10227  011E34  0012               	return	
 10228  011E36                     __end_of_hopper_pay:
 10229                           	opt stack 0
 10230                           tblptru	equ	0xFF8
 10231                           tblptrh	equ	0xFF7
 10232                           tblptrl	equ	0xFF6
 10233                           tablat	equ	0xFF5
 10234                           prodh	equ	0xFF4
 10235                           prodl	equ	0xFF3
 10236                           postinc0	equ	0xFEE
 10237                           wreg	equ	0xFE8
 10238                           indf2	equ	0xFDF
 10239                           postinc2	equ	0xFDE
 10240                           fsr2h	equ	0xFDA
 10241                           fsr2l	equ	0xFD9
 10242                           status	equ	0xFD8
 10243                           
 10244 ;; *************** function _pay_coin *****************
 10245 ;; Defined at:
 10246 ;;		line 79 in file "hopper.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;		None
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1    wreg      unsigned char 
 10253 ;; Registers used:
 10254 ;;		wreg, status,2, status,0, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10264 ;;Total ram usage:        0 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    4
 10267 ;; This function calls:
 10268 ;;		_Reset_hopper
 10269 ;;		_TMR2_Initialize
 10270 ;;		_TMR4_Initialize
 10271 ;;		_cctalk_off
 10272 ;;		_cctalk_on
 10273 ;;		_switch_read
 10274 ;; This function is called by:
 10275 ;;		_hopper_pay
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279                           	psect	text58
 10280  0118AE                     __ptext58:
 10281                           	opt stack 0
 10282  0118AE                     _pay_coin:
 10283                           	opt stack 23
 10284                           
 10285                           ;hopper.c: 82: hopercount = 3;
 10286                           
 10287                           ;incstack = 0
 10288  0118AE  0E03               	movlw	3
 10289  0118B0  0100               	movlb	0	; () banked
 10290  0118B2  6FCE               	movwf	_hopercount& (0+255),b
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;hopper.c: 83: if(switch_read())
 10294  0118B4  EC4F  F091         	call	_switch_read	;wreg free
 10295  0118B8  0900               	iorlw	0
 10296  0118BA  B4D8               	btfsc	status,2,c
 10297  0118BC  D011               	goto	l3988
 10298                           
 10299                           ;hopper.c: 84: {
 10300                           ;hopper.c: 85: TMR2_Initialize();
 10301  0118BE  EC2F  F095         	call	_TMR2_Initialize	;wreg free
 10302  0118C2  EC4F  F091         	call	_switch_read	;wreg free
 10303  0118C6  0900               	iorlw	0
 10304  0118C8  B4D8               	btfsc	status,2,c
 10305  0118CA  D003               	goto	u4470
 10306  0118CC  010E               	movlb	14	; () banked
 10307  0118CE  A3CE               	btfss	206,1,b	;volatile
 10308  0118D0  D7F8               	goto	l3990
 10309  0118D2                     u4470:
 10310                           
 10311                           ;hopper.c: 88: if(PIR4bits.TMR2IF)
 10312                           
 10313                           ; BSR set to: 14
 10314  0118D2  010E               	movlb	14	; () banked
 10315  0118D4  A3CE               	btfss	206,1,b	;volatile
 10316  0118D6  D002               	goto	l3994
 10317                           
 10318                           ; BSR set to: 14
 10319                           ;hopper.c: 89: {
 10320                           ;hopper.c: 91: return 1;
 10321  0118D8  0E01               	movlw	1
 10322                           
 10323                           ; BSR set to: 14
 10324                           ;hopper.c: 92: }
 10325                           
 10326                           ; BSR set to: 14
 10327  0118DA  0012               	return	
 10328  0118DC                     l3994:
 10329                           
 10330                           ; BSR set to: 14
 10331                           ;hopper.c: 93: else
 10332                           ;hopper.c: 94: {
 10333                           ;hopper.c: 95: return 0;
 10334                           
 10335                           ; BSR set to: 14
 10336  0118DC  0E00               	movlw	0
 10337                           
 10338                           ; BSR set to: 14
 10339                           ;hopper.c: 96: }
 10340                           ;hopper.c: 97: }
 10341                           
 10342                           ; BSR set to: 14
 10343  0118DE  0012               	return	
 10344  0118E0                     l3988:
 10345                           
 10346                           ;hopper.c: 98: else
 10347                           ;hopper.c: 99: {
 10348                           ;hopper.c: 100: cctalk_on();
 10349                           
 10350                           ; BSR set to: 14
 10351  0118E0  EC51  F096         	call	_cctalk_on	;wreg free
 10352                           
 10353                           ;hopper.c: 101: TMR4_Initialize();
 10354  0118E4  EC4C  F095         	call	_TMR4_Initialize	;wreg free
 10355                           
 10356                           ;hopper.c: 103: while(!switch_read())
 10357  0118E8  D00C               	goto	l4001
 10358  0118EA                     l3999:
 10359                           
 10360                           ;hopper.c: 104: {
 10361                           ;hopper.c: 105: if(PIR4bits.TMR4IF)
 10362  0118EA  010E               	movlb	14	; () banked
 10363  0118EC  A7CE               	btfss	206,3,b	;volatile
 10364  0118EE  D009               	goto	l4001
 10365                           
 10366                           ; BSR set to: 14
 10367                           ;hopper.c: 106: {
 10368                           ;hopper.c: 107: if(Reset_hopper())
 10369  0118F0  EC14  F093         	call	_Reset_hopper	;wreg free
 10370  0118F4  0900               	iorlw	0
 10371  0118F6  B4D8               	btfsc	status,2,c
 10372  0118F8  D004               	goto	l4001
 10373                           
 10374                           ;hopper.c: 108: {
 10375                           ;hopper.c: 109: cctalk_off();
 10376  0118FA  EC53  F096         	call	_cctalk_off	;wreg free
 10377                           
 10378                           ;hopper.c: 110: return 1;
 10379  0118FE  0E01               	movlw	1
 10380  011900  0012               	return	
 10381  011902                     l4001:
 10382  011902  EC4F  F091         	call	_switch_read	;wreg free
 10383  011906  0900               	iorlw	0
 10384  011908  B4D8               	btfsc	status,2,c
 10385  01190A  D7EF               	goto	l3999
 10386                           
 10387                           ;hopper.c: 111: }
 10388                           ;hopper.c: 113: }
 10389                           ;hopper.c: 114: }
 10390                           ;hopper.c: 115: cctalk_off();
 10391  01190C  EC53  F096         	call	_cctalk_off	;wreg free
 10392                           
 10393                           ;hopper.c: 116: TMR2_Initialize();
 10394  011910  EC2F  F095         	call	_TMR2_Initialize	;wreg free
 10395                           
 10396                           ;hopper.c: 117: cctalk_on();
 10397  011914  EC51  F096         	call	_cctalk_on	;wreg free
 10398  011918  EC4F  F091         	call	_switch_read	;wreg free
 10399  01191C  0900               	iorlw	0
 10400  01191E  B4D8               	btfsc	status,2,c
 10401  011920  D003               	goto	u4530
 10402  011922  010E               	movlb	14	; () banked
 10403  011924  A3CE               	btfss	206,1,b	;volatile
 10404  011926  D7F8               	goto	l4004
 10405  011928                     u4530:
 10406                           
 10407                           ;hopper.c: 119: cctalk_off();
 10408                           
 10409                           ; BSR set to: 14
 10410                           
 10411                           ; BSR set to: 14
 10412  011928  EC53  F096         	call	_cctalk_off	;wreg free
 10413                           
 10414                           ;hopper.c: 120: if(PIR4bits.TMR2IF)
 10415  01192C  010E               	movlb	14	; () banked
 10416  01192E  A3CE               	btfss	206,1,b	;volatile
 10417  011930  D002               	goto	l4008
 10418                           
 10419                           ; BSR set to: 14
 10420                           ;hopper.c: 121: {
 10421                           ;hopper.c: 122: return 1;
 10422  011932  0E01               	movlw	1
 10423                           
 10424                           ; BSR set to: 14
 10425                           ;hopper.c: 123: }
 10426                           
 10427                           ; BSR set to: 14
 10428  011934  0012               	return	
 10429  011936                     l4008:
 10430                           
 10431                           ; BSR set to: 14
 10432                           ;hopper.c: 124: else
 10433                           ;hopper.c: 125: {
 10434                           ;hopper.c: 126: return 0;
 10435                           
 10436                           ; BSR set to: 14
 10437  011936  0E00               	movlw	0
 10438                           
 10439                           ; BSR set to: 14
 10440                           
 10441                           ; BSR set to: 14
 10442  011938  0012               	return	
 10443  01193A                     __end_of_pay_coin:
 10444                           	opt stack 0
 10445                           tblptru	equ	0xFF8
 10446                           tblptrh	equ	0xFF7
 10447                           tblptrl	equ	0xFF6
 10448                           tablat	equ	0xFF5
 10449                           prodh	equ	0xFF4
 10450                           prodl	equ	0xFF3
 10451                           postinc0	equ	0xFEE
 10452                           wreg	equ	0xFE8
 10453                           indf2	equ	0xFDF
 10454                           postinc2	equ	0xFDE
 10455                           fsr2h	equ	0xFDA
 10456                           fsr2l	equ	0xFD9
 10457                           status	equ	0xFD8
 10458                           
 10459 ;; *************** function _switch_read *****************
 10460 ;; Defined at:
 10461 ;;		line 133 in file "hopper.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;		None
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      unsigned char 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;Total ram usage:        1 bytes
 10480 ;; Hardware stack levels used:    1
 10481 ;; Hardware stack levels required when called:    2
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_pay_coin
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text59
 10490  01229E                     __ptext59:
 10491                           	opt stack 0
 10492  01229E                     _switch_read:
 10493                           	opt stack 24
 10494                           
 10495                           ;hopper.c: 135: if(PORTBbits.RB4 == venflags.swclosed)
 10496                           
 10497                           ;incstack = 0
 10498  01229E  A22F               	btfss	_venflags+2,1,c
 10499  0122A0  D002               	goto	u4190
 10500  0122A2  0E01               	movlw	1
 10501  0122A4  D001               	goto	u4192
 10502  0122A6                     u4190:
 10503  0122A6  0E00               	movlw	0
 10504  0122A8                     u4192:
 10505  0122A8  6E1D               	movwf	??_switch_read& (0+255),c
 10506  0122AA  A88E               	btfss	3982,4,c	;volatile
 10507  0122AC  D002               	goto	u4200
 10508  0122AE  0E01               	movlw	1
 10509  0122B0  D001               	goto	u4202
 10510  0122B2                     u4200:
 10511  0122B2  0E00               	movlw	0
 10512  0122B4                     u4202:
 10513  0122B4  1A1D               	xorwf	??_switch_read,f,c
 10514  0122B6  A4D8               	btfss	status,2,c
 10515  0122B8  D012               	goto	l4014
 10516                           
 10517                           ;hopper.c: 136: {
 10518                           ;hopper.c: 137: if(venflags.swclosed)
 10519  0122BA  A22F               	btfss	_venflags+2,1,c
 10520  0122BC  D008               	goto	l4013
 10521                           
 10522                           ;hopper.c: 138: {
 10523                           ;hopper.c: 139: _delay((unsigned long)((5)*(12000000/4000.0)));
 10524  0122BE  0E14               	movlw	20
 10525  0122C0  6E1D               	movwf	??_switch_read& (0+255),c
 10526  0122C2  0E7A               	movlw	122
 10527  0122C4                     u5807:
 10528  0122C4  2EE8               	decfsz	wreg,f,c
 10529  0122C6  D7FE               	bra	u5807
 10530  0122C8  2E1D               	decfsz	??_switch_read& (0+255),f,c
 10531  0122CA  D7FC               	bra	u5807
 10532                           
 10533                           ;hopper.c: 140: }
 10534  0122CC  D008               	goto	l4014
 10535  0122CE                     l4013:
 10536                           
 10537                           ;hopper.c: 141: else
 10538                           ;hopper.c: 142: {
 10539                           ;hopper.c: 143: _delay((unsigned long)((20)*(12000000/4000.0)));
 10540  0122CE  0E4E               	movlw	78
 10541  0122D0  6E1D               	movwf	??_switch_read& (0+255),c
 10542  0122D2  0EEB               	movlw	235
 10543  0122D4                     u5817:
 10544  0122D4  2EE8               	decfsz	wreg,f,c
 10545  0122D6  D7FE               	bra	u5817
 10546  0122D8  2E1D               	decfsz	??_switch_read& (0+255),f,c
 10547  0122DA  D7FC               	bra	u5817
 10548  0122DC  F000               	nop	
 10549  0122DE                     l4014:
 10550                           
 10551                           ;hopper.c: 144: }
 10552                           ;hopper.c: 145: }
 10553                           ;hopper.c: 146: if(PORTBbits.RB4)
 10554  0122DE  A88E               	btfss	3982,4,c	;volatile
 10555  0122E0  D003               	goto	l4015
 10556                           
 10557                           ;hopper.c: 147: {
 10558                           ;hopper.c: 148: venflags.swclosed = 0;
 10559  0122E2  922F               	bcf	_venflags+2,1,c
 10560                           
 10561                           ;hopper.c: 149: return 0;
 10562  0122E4  0E00               	movlw	0
 10563                           
 10564                           ;hopper.c: 150: }
 10565  0122E6  0012               	return	
 10566  0122E8                     l4015:
 10567                           
 10568                           ;hopper.c: 151: else
 10569                           ;hopper.c: 152: {
 10570                           ;hopper.c: 153: venflags.swclosed = 1;
 10571  0122E8  822F               	bsf	_venflags+2,1,c
 10572                           
 10573                           ;hopper.c: 154: return 1;
 10574  0122EA  0E01               	movlw	1
 10575  0122EC  0012               	return	
 10576  0122EE                     __end_of_switch_read:
 10577                           	opt stack 0
 10578                           tblptru	equ	0xFF8
 10579                           tblptrh	equ	0xFF7
 10580                           tblptrl	equ	0xFF6
 10581                           tablat	equ	0xFF5
 10582                           prodh	equ	0xFF4
 10583                           prodl	equ	0xFF3
 10584                           postinc0	equ	0xFEE
 10585                           wreg	equ	0xFE8
 10586                           indf2	equ	0xFDF
 10587                           postinc2	equ	0xFDE
 10588                           fsr2h	equ	0xFDA
 10589                           fsr2l	equ	0xFD9
 10590                           status	equ	0xFD8
 10591                           
 10592 ;; *************** function _Reset_hopper *****************
 10593 ;; Defined at:
 10594 ;;		line 62 in file "hopper.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;		None
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;		None
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      unsigned char 
 10601 ;; Registers used:
 10602 ;;		wreg, status,2, status,0, cstack
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10612 ;;Total ram usage:        2 bytes
 10613 ;; Hardware stack levels used:    1
 10614 ;; Hardware stack levels required when called:    3
 10615 ;; This function calls:
 10616 ;;		_TMR4_Initialize
 10617 ;;		_cctalk_off
 10618 ;;		_cctalk_on
 10619 ;; This function is called by:
 10620 ;;		_pay_coin
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624                           	psect	text60
 10625  012628                     __ptext60:
 10626                           	opt stack 0
 10627  012628                     _Reset_hopper:
 10628                           	opt stack 23
 10629                           
 10630                           ;hopper.c: 64: hopercount--;
 10631                           
 10632                           ;incstack = 0
 10633  012628  0100               	movlb	0	; () banked
 10634  01262A  07CE               	decf	_hopercount& (0+255),f,b
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;hopper.c: 65: cctalk_off();
 10638  01262C  EC53  F096         	call	_cctalk_off	;wreg free
 10639                           
 10640                           ;hopper.c: 66: _delay((unsigned long)((2000)*(12000000/4000.0)));
 10641  012630  0E1F               	movlw	31
 10642  012632  6E1E               	movwf	(??_Reset_hopper+1)& (0+255),c
 10643  012634  0E71               	movlw	113
 10644  012636  6E1D               	movwf	??_Reset_hopper& (0+255),c
 10645  012638  0E1E               	movlw	30
 10646  01263A                     u5827:
 10647  01263A  2EE8               	decfsz	wreg,f,c
 10648  01263C  D7FE               	bra	u5827
 10649  01263E  2E1D               	decfsz	??_Reset_hopper& (0+255),f,c
 10650  012640  D7FC               	bra	u5827
 10651  012642  2E1E               	decfsz	(??_Reset_hopper+1)& (0+255),f,c
 10652  012644  D7FA               	bra	u5827
 10653  012646  D000               	nop2	
 10654                           
 10655                           ;hopper.c: 67: TMR4_Initialize();
 10656  012648  EC4C  F095         	call	_TMR4_Initialize	;wreg free
 10657                           
 10658                           ;hopper.c: 68: if(hopercount > 0)
 10659  01264C  0100               	movlb	0	; () banked
 10660  01264E  51CE               	movf	_hopercount& (0+255),w,b
 10661  012650  0A80               	xorlw	128
 10662  012652  0F7F               	addlw	-129
 10663  012654  A0D8               	btfss	status,0,c
 10664  012656  D004               	goto	l3983
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;hopper.c: 69: {
 10668                           ;hopper.c: 70: cctalk_on();
 10669  012658  EC51  F096         	call	_cctalk_on	;wreg free
 10670                           
 10671                           ;hopper.c: 71: return 0;
 10672  01265C  0E00               	movlw	0
 10673                           
 10674                           ;hopper.c: 72: }
 10675  01265E  0012               	return	
 10676  012660                     l3983:
 10677                           
 10678                           ;hopper.c: 73: else
 10679                           ;hopper.c: 74: {
 10680                           ;hopper.c: 75: return 1;
 10681  012660  0E01               	movlw	1
 10682  012662  0012               	return	
 10683  012664                     __end_of_Reset_hopper:
 10684                           	opt stack 0
 10685                           tblptru	equ	0xFF8
 10686                           tblptrh	equ	0xFF7
 10687                           tblptrl	equ	0xFF6
 10688                           tablat	equ	0xFF5
 10689                           prodh	equ	0xFF4
 10690                           prodl	equ	0xFF3
 10691                           postinc0	equ	0xFEE
 10692                           wreg	equ	0xFE8
 10693                           indf2	equ	0xFDF
 10694                           postinc2	equ	0xFDE
 10695                           fsr2h	equ	0xFDA
 10696                           fsr2l	equ	0xFD9
 10697                           status	equ	0xFD8
 10698                           
 10699 ;; *************** function _cctalk_on *****************
 10700 ;; Defined at:
 10701 ;;		line 137 in file "cctalk.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;		None
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  1    wreg      void 
 10708 ;; Registers used:
 10709 ;;		None
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10719 ;;Total ram usage:        0 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    2
 10722 ;; This function calls:
 10723 ;;		Nothing
 10724 ;; This function is called by:
 10725 ;;		_hopper_pay
 10726 ;;		_Reset_hopper
 10727 ;;		_pay_coin
 10728 ;;		_cctalk_init
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           	psect	text61
 10733  012CA2                     __ptext61:
 10734                           	opt stack 0
 10735  012CA2                     _cctalk_on:
 10736                           	opt stack 24
 10737                           
 10738                           ;cctalk.c: 144: LATCbits.LATC1 = 1;
 10739                           
 10740                           ;incstack = 0
 10741  012CA2  8285               	bsf	3973,1,c	;volatile
 10742  012CA4  0012               	return		;funcret
 10743  012CA6                     __end_of_cctalk_on:
 10744                           	opt stack 0
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           postinc0	equ	0xFEE
 10752                           wreg	equ	0xFE8
 10753                           indf2	equ	0xFDF
 10754                           postinc2	equ	0xFDE
 10755                           fsr2h	equ	0xFDA
 10756                           fsr2l	equ	0xFD9
 10757                           status	equ	0xFD8
 10758                           
 10759 ;; *************** function _cctalk_off *****************
 10760 ;; Defined at:
 10761 ;;		line 132 in file "cctalk.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;		None
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;		None
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  1    wreg      void 
 10768 ;; Registers used:
 10769 ;;		None
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;Total ram usage:        0 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:    2
 10782 ;; This function calls:
 10783 ;;		Nothing
 10784 ;; This function is called by:
 10785 ;;		_hopper_pay
 10786 ;;		_Reset_hopper
 10787 ;;		_pay_coin
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text62
 10792  012CA6                     __ptext62:
 10793                           	opt stack 0
 10794  012CA6                     _cctalk_off:
 10795                           	opt stack 24
 10796                           
 10797                           ;cctalk.c: 134: LATCbits.LATC1 = 0;
 10798                           
 10799                           ;incstack = 0
 10800  012CA6  9285               	bcf	3973,1,c	;volatile
 10801  012CA8  0012               	return		;funcret
 10802  012CAA                     __end_of_cctalk_off:
 10803                           	opt stack 0
 10804                           tblptru	equ	0xFF8
 10805                           tblptrh	equ	0xFF7
 10806                           tblptrl	equ	0xFF6
 10807                           tablat	equ	0xFF5
 10808                           prodh	equ	0xFF4
 10809                           prodl	equ	0xFF3
 10810                           postinc0	equ	0xFEE
 10811                           wreg	equ	0xFE8
 10812                           indf2	equ	0xFDF
 10813                           postinc2	equ	0xFDE
 10814                           fsr2h	equ	0xFDA
 10815                           fsr2l	equ	0xFD9
 10816                           status	equ	0xFD8
 10817                           
 10818 ;; *************** function _Update_coinsout *****************
 10819 ;; Defined at:
 10820 ;;		line 158 in file "hopper.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  coinsout        1    wreg     unsigned char 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;  coinsout        1   28[COMRAM] unsigned char 
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10838 ;;Total ram usage:        1 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; Hardware stack levels required when called:    4
 10841 ;; This function calls:
 10842 ;;		_Read_NVstore
 10843 ;;		_Write_NVstore
 10844 ;; This function is called by:
 10845 ;;		_hopper_pay
 10846 ;; This function uses a non-reentrant model
 10847 ;;
 10848                           
 10849                           	psect	text63
 10850  012030                     __ptext63:
 10851                           	opt stack 0
 10852  012030                     _Update_coinsout:
 10853                           	opt stack 23
 10854                           
 10855                           ;incstack = 0
 10856                           ;Update_coinsout@coinsout stored from wreg
 10857  012030  6E27               	movwf	Update_coinsout@coinsout,c
 10858                           
 10859                           ;hopper.c: 160: Read_NVstore(cashoutv, ((uint8_t*) &pvcash), 0x02);
 10860  012032  0E0B               	movlw	low _cashoutv
 10861  012034  6EF6               	movwf	tblptrl,c
 10862  012036                     	if	1	;There is more than 1 active tblptr byte
 10863  012036  0EFC               	movlw	high _cashoutv
 10864  012038  6EF7               	movwf	tblptrh,c
 10865  01203A                     	endif
 10866  01203A                     	if	1	;There are 3 active tblptr bytes
 10867  01203A  0E00               	movlw	low (_cashoutv shr (0+16))
 10868  01203C  6EF8               	movwf	tblptru,c
 10869  01203E                     	endif
 10870  01203E  0009               	tblrd		*+
 10871  012040  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 10872  012044  000A               	tblrd		*-
 10873  012046  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 10874  01204A  0E4B               	movlw	low _pvcash
 10875  01204C  6E21               	movwf	Read_NVstore@storemem,c
 10876  01204E  0E00               	movlw	high _pvcash
 10877  012050  6E22               	movwf	Read_NVstore@storemem+1,c
 10878  012052  0E02               	movlw	2
 10879  012054  6E23               	movwf	Read_NVstore@storesize,c
 10880  012056  EC11  F094         	call	_Read_NVstore	;wreg free
 10881                           
 10882                           ;hopper.c: 161: pvcash = pvcash + (uint16_t)coinsout;
 10883  01205A  5027               	movf	Update_coinsout@coinsout,w,c
 10884  01205C  244B               	addwf	_pvcash,w,c	;volatile
 10885  01205E  6E4B               	movwf	_pvcash,c	;volatile
 10886  012060  0E00               	movlw	0
 10887  012062  204C               	addwfc	_pvcash+1,w,c	;volatile
 10888  012064  6E4C               	movwf	_pvcash+1,c	;volatile
 10889                           
 10890                           ;hopper.c: 162: Write_NVstore(cashoutv, ((uint8_t*) &pvcash), 0x02);
 10891  012066  0E0B               	movlw	low _cashoutv
 10892  012068  6EF6               	movwf	tblptrl,c
 10893  01206A                     	if	1	;There is more than 1 active tblptr byte
 10894  01206A  0EFC               	movlw	high _cashoutv
 10895  01206C  6EF7               	movwf	tblptrh,c
 10896  01206E                     	endif
 10897  01206E                     	if	1	;There are 3 active tblptr bytes
 10898  01206E  0E00               	movlw	low (_cashoutv shr (0+16))
 10899  012070  6EF8               	movwf	tblptru,c
 10900  012072                     	endif
 10901  012072  0009               	tblrd		*+
 10902  012074  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 10903  012078  000A               	tblrd		*-
 10904  01207A  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 10905  01207E  0E4B               	movlw	low _pvcash
 10906  012080  6E23               	movwf	Write_NVstore@storemem,c
 10907  012082  0E00               	movlw	high _pvcash
 10908  012084  6E24               	movwf	Write_NVstore@storemem+1,c
 10909  012086  0E02               	movlw	2
 10910  012088  6E25               	movwf	Write_NVstore@storesize,c
 10911  01208A  ECA5  F093         	call	_Write_NVstore	;wreg free
 10912  01208E  0012               	return		;funcret
 10913  012090                     __end_of_Update_coinsout:
 10914                           	opt stack 0
 10915                           tblptru	equ	0xFF8
 10916                           tblptrh	equ	0xFF7
 10917                           tblptrl	equ	0xFF6
 10918                           tablat	equ	0xFF5
 10919                           prodh	equ	0xFF4
 10920                           prodl	equ	0xFF3
 10921                           postinc0	equ	0xFEE
 10922                           wreg	equ	0xFE8
 10923                           indf2	equ	0xFDF
 10924                           postinc2	equ	0xFDE
 10925                           fsr2h	equ	0xFDA
 10926                           fsr2l	equ	0xFD9
 10927                           status	equ	0xFD8
 10928                           
 10929 ;; *************** function _Write_NVstore *****************
 10930 ;; Defined at:
 10931 ;;		line 86 in file "vend.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;  storeadd        2   22[COMRAM] unsigned int 
 10934 ;;  storemem        2   24[COMRAM] PTR unsigned char 
 10935 ;;		 -> pnvcash(3), pvcash(2), 
 10936 ;;  storesize       1   26[COMRAM] unsigned char 
 10937 ;; Auto vars:     Size  Location     Type
 10938 ;;  i               1   27[COMRAM] unsigned char 
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1    wreg      void 
 10941 ;; Registers used:
 10942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10948 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10952 ;;Total ram usage:        6 bytes
 10953 ;; Hardware stack levels used:    1
 10954 ;; Hardware stack levels required when called:    3
 10955 ;; This function calls:
 10956 ;;		_DATAEE_WriteByte
 10957 ;; This function is called by:
 10958 ;;		_Update_cashaudit
 10959 ;;		_Update_coinsout
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text64
 10964  01274A                     __ptext64:
 10965                           	opt stack 0
 10966  01274A                     _Write_NVstore:
 10967                           	opt stack 23
 10968                           
 10969                           ;vend.c: 88: uint8_t i = 0;
 10970                           
 10971                           ;incstack = 0
 10972  01274A  0E00               	movlw	0
 10973  01274C  6E26               	movwf	Write_NVstore@i,c
 10974                           
 10975                           ;vend.c: 89: while(i < storesize)
 10976  01274E  D013               	goto	l2195
 10977  012750                     
 10978                           ;vend.c: 90: {
 10979                           ;vend.c: 91: DATAEE_WriteByte(storeadd + i, storemem[i]);
 10980  012750  5026               	movf	Write_NVstore@i,w,c
 10981  012752  2421               	addwf	Write_NVstore@storeadd,w,c
 10982  012754  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
 10983  012756  0E00               	movlw	0
 10984  012758  2022               	addwfc	Write_NVstore@storeadd+1,w,c
 10985  01275A  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
 10986  01275C  5026               	movf	Write_NVstore@i,w,c
 10987  01275E  0D01               	mullw	1
 10988  012760  50F3               	movf	prodl,w,c
 10989  012762  2423               	addwf	Write_NVstore@storemem,w,c
 10990  012764  6ED9               	movwf	fsr2l,c
 10991  012766  50F4               	movf	prodh,w,c
 10992  012768  2024               	addwfc	Write_NVstore@storemem+1,w,c
 10993  01276A  6EDA               	movwf	fsr2h,c
 10994  01276C  50DF               	movf	indf2,w,c
 10995  01276E  6E1F               	movwf	DATAEE_WriteByte@bData,c
 10996  012770  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 10997                           
 10998                           ;vend.c: 92: i++;
 10999  012774  2A26               	incf	Write_NVstore@i,f,c
 11000  012776                     l2195:
 11001  012776  5025               	movf	Write_NVstore@storesize,w,c
 11002  012778  5C26               	subwf	Write_NVstore@i,w,c
 11003  01277A  B0D8               	btfsc	status,0,c
 11004  01277C  0012               	return	
 11005  01277E  D7E8               	goto	l2196
 11006  012780                     __end_of_Write_NVstore:
 11007                           	opt stack 0
 11008                           tblptru	equ	0xFF8
 11009                           tblptrh	equ	0xFF7
 11010                           tblptrl	equ	0xFF6
 11011                           tablat	equ	0xFF5
 11012                           prodh	equ	0xFF4
 11013                           prodl	equ	0xFF3
 11014                           postinc0	equ	0xFEE
 11015                           wreg	equ	0xFE8
 11016                           indf2	equ	0xFDF
 11017                           postinc2	equ	0xFDE
 11018                           fsr2h	equ	0xFDA
 11019                           fsr2l	equ	0xFD9
 11020                           status	equ	0xFD8
 11021                           
 11022 ;; *************** function _Vend_setup *****************
 11023 ;; Defined at:
 11024 ;;		line 425 in file "vend.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;		None
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;		None
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  1    wreg      void 
 11031 ;; Registers used:
 11032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11042 ;;Total ram usage:        0 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; Hardware stack levels required when called:   11
 11045 ;; This function calls:
 11046 ;;		_Chan_link
 11047 ;;		_Clear_Totals
 11048 ;;		_Init_vendmem
 11049 ;;		_Reset_settings
 11050 ;;		_Sens_off
 11051 ;;		_Vend_settime
 11052 ;;		_butindb
 11053 ;;		_lcd_string
 11054 ;; This function is called by:
 11055 ;;		_enter_service
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text65
 11060  0107EE                     __ptext65:
 11061                           	opt stack 0
 11062  0107EE                     _Vend_setup:
 11063                           	opt stack 18
 11064                           
 11065                           ;vend.c: 427: venflags.vendset = 1;
 11066                           
 11067                           ;incstack = 0
 11068  0107EE  842E               	bsf	_venflags+1,2,c
 11069                           
 11070                           ;vend.c: 428: lcd_string(vendsetup, line1);
 11071  0107F0  0EEE               	movlw	low _vendsetup
 11072  0107F2  6E24               	movwf	lcd_string@lcdstring,c
 11073  0107F4  0EFC               	movlw	high _vendsetup
 11074  0107F6  6E25               	movwf	lcd_string@lcdstring+1,c
 11075  0107F8  0E4A               	movlw	low _line1
 11076  0107FA  6EF6               	movwf	tblptrl,c
 11077  0107FC                     	if	1	;There is more than 1 active tblptr byte
 11078  0107FC  0EFC               	movlw	high _line1
 11079  0107FE  6EF7               	movwf	tblptrh,c
 11080  010800                     	endif
 11081  010800                     	if	1	;There are 3 active tblptr bytes
 11082  010800  0E00               	movlw	low (_line1 shr (0+16))
 11083  010802  6EF8               	movwf	tblptru,c
 11084  010804                     	endif
 11085  010804  0008               	tblrd		*
 11086  010806  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11087  01080A  EC78  F08A         	call	_lcd_string	;wreg free
 11088                           
 11089                           ;vend.c: 429: while(venflags.vendset)
 11090  01080E  D075               	goto	l2324
 11091  010810                     
 11092                           ;vend.c: 430: {
 11093                           ;vend.c: 431: buttons = butindb();
 11094  010810  ECD5  F092         	call	_butindb	;wreg free
 11095  010814  6E38               	movwf	_buttons,c	;volatile
 11096                           
 11097                           ;vend.c: 432: switch(buttons)
 11098  010816  D05E               	goto	l2322
 11099  010818  EC9E  F091         	call	_Vend_settime	;wreg free
 11100                           
 11101                           ;vend.c: 435: lcd_string(vendsetup, line1);
 11102  01081C  0EEE               	movlw	low _vendsetup
 11103  01081E  6E24               	movwf	lcd_string@lcdstring,c
 11104  010820  0EFC               	movlw	high _vendsetup
 11105  010822  6E25               	movwf	lcd_string@lcdstring+1,c
 11106  010824  0E4A               	movlw	low _line1
 11107  010826  6EF6               	movwf	tblptrl,c
 11108  010828                     	if	1	;There is more than 1 active tblptr byte
 11109  010828  0EFC               	movlw	high _line1
 11110  01082A  6EF7               	movwf	tblptrh,c
 11111  01082C                     	endif
 11112  01082C                     	if	1	;There are 3 active tblptr bytes
 11113  01082C  0E00               	movlw	low (_line1 shr (0+16))
 11114  01082E  6EF8               	movwf	tblptru,c
 11115  010830                     	endif
 11116  010830  0008               	tblrd		*
 11117  010832  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11118  010836  EC78  F08A         	call	_lcd_string	;wreg free
 11119                           
 11120                           ;vend.c: 436: break;
 11121  01083A  D05F               	goto	l2324
 11122  01083C  ECB7  F08F         	call	_Chan_link	;wreg free
 11123                           
 11124                           ;vend.c: 438: lcd_string(vendsetup, line1);
 11125  010840  0EEE               	movlw	low _vendsetup
 11126  010842  6E24               	movwf	lcd_string@lcdstring,c
 11127  010844  0EFC               	movlw	high _vendsetup
 11128  010846  6E25               	movwf	lcd_string@lcdstring+1,c
 11129  010848  0E4A               	movlw	low _line1
 11130  01084A  6EF6               	movwf	tblptrl,c
 11131  01084C                     	if	1	;There is more than 1 active tblptr byte
 11132  01084C  0EFC               	movlw	high _line1
 11133  01084E  6EF7               	movwf	tblptrh,c
 11134  010850                     	endif
 11135  010850                     	if	1	;There are 3 active tblptr bytes
 11136  010850  0E00               	movlw	low (_line1 shr (0+16))
 11137  010852  6EF8               	movwf	tblptru,c
 11138  010854                     	endif
 11139  010854  0008               	tblrd		*
 11140  010856  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11141  01085A  EC78  F08A         	call	_lcd_string	;wreg free
 11142                           
 11143                           ;vend.c: 439: break;
 11144  01085E  D04D               	goto	l2324
 11145  010860  EC2F  F08E         	call	_Sens_off	;wreg free
 11146                           
 11147                           ;vend.c: 441: lcd_string(vendsetup, line1);
 11148  010864  0EEE               	movlw	low _vendsetup
 11149  010866  6E24               	movwf	lcd_string@lcdstring,c
 11150  010868  0EFC               	movlw	high _vendsetup
 11151  01086A  6E25               	movwf	lcd_string@lcdstring+1,c
 11152  01086C  0E4A               	movlw	low _line1
 11153  01086E  6EF6               	movwf	tblptrl,c
 11154  010870                     	if	1	;There is more than 1 active tblptr byte
 11155  010870  0EFC               	movlw	high _line1
 11156  010872  6EF7               	movwf	tblptrh,c
 11157  010874                     	endif
 11158  010874                     	if	1	;There are 3 active tblptr bytes
 11159  010874  0E00               	movlw	low (_line1 shr (0+16))
 11160  010876  6EF8               	movwf	tblptru,c
 11161  010878                     	endif
 11162  010878  0008               	tblrd		*
 11163  01087A  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11164  01087E  EC78  F08A         	call	_lcd_string	;wreg free
 11165                           
 11166                           ;vend.c: 442: break;
 11167  010882  D03B               	goto	l2324
 11168  010884  ECF5  F092         	call	_Clear_Totals	;wreg free
 11169                           
 11170                           ;vend.c: 444: break;
 11171  010888  D038               	goto	l2324
 11172  01088A  EC75  F086         	call	_Reset_settings	;wreg free
 11173                           
 11174                           ;vend.c: 446: lcd_string(vendsetup, line1);
 11175  01088E  0EEE               	movlw	low _vendsetup
 11176  010890  6E24               	movwf	lcd_string@lcdstring,c
 11177  010892  0EFC               	movlw	high _vendsetup
 11178  010894  6E25               	movwf	lcd_string@lcdstring+1,c
 11179  010896  0E4A               	movlw	low _line1
 11180  010898  6EF6               	movwf	tblptrl,c
 11181  01089A                     	if	1	;There is more than 1 active tblptr byte
 11182  01089A  0EFC               	movlw	high _line1
 11183  01089C  6EF7               	movwf	tblptrh,c
 11184  01089E                     	endif
 11185  01089E                     	if	1	;There are 3 active tblptr bytes
 11186  01089E  0E00               	movlw	low (_line1 shr (0+16))
 11187  0108A0  6EF8               	movwf	tblptru,c
 11188  0108A2                     	endif
 11189  0108A2  0008               	tblrd		*
 11190  0108A4  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11191  0108A8  EC78  F08A         	call	_lcd_string	;wreg free
 11192                           
 11193                           ;vend.c: 447: break;
 11194  0108AC  D026               	goto	l2324
 11195  0108AE                     l2329:
 11196  0108AE  942E               	bcf	_venflags+1,2,c
 11197                           
 11198                           ;vend.c: 450: Init_vendmem();
 11199  0108B0  EC66  F089         	call	_Init_vendmem	;wreg free
 11200                           
 11201                           ;vend.c: 451: lcd_string(servmsg, line1);
 11202  0108B4  0E59               	movlw	low _servmsg
 11203  0108B6  6E24               	movwf	lcd_string@lcdstring,c
 11204  0108B8  0EFC               	movlw	high _servmsg
 11205  0108BA  6E25               	movwf	lcd_string@lcdstring+1,c
 11206  0108BC  0E4A               	movlw	low _line1
 11207  0108BE  6EF6               	movwf	tblptrl,c
 11208  0108C0                     	if	1	;There is more than 1 active tblptr byte
 11209  0108C0  0EFC               	movlw	high _line1
 11210  0108C2  6EF7               	movwf	tblptrh,c
 11211  0108C4                     	endif
 11212  0108C4                     	if	1	;There are 3 active tblptr bytes
 11213  0108C4  0E00               	movlw	low (_line1 shr (0+16))
 11214  0108C6  6EF8               	movwf	tblptru,c
 11215  0108C8                     	endif
 11216  0108C8  0008               	tblrd		*
 11217  0108CA  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11218  0108CE  EC78  F08A         	call	_lcd_string	;wreg free
 11219                           
 11220                           ;vend.c: 453: }
 11221                           
 11222                           ;vend.c: 452: break;
 11223  0108D2  D013               	goto	l2324
 11224  0108D4                     l2322:
 11225  0108D4  5038               	movf	_buttons,w,c	;volatile
 11226                           
 11227                           ; Switch size 1, requested type "space"
 11228                           ; Number of cases is 6, Range of values is 1 to 128
 11229                           ; switch strategies available:
 11230                           ; Name         Instructions Cycles
 11231                           ; simple_byte           19    10 (average)
 11232                           ;	Chosen strategy is simple_byte
 11233  0108D6  0A01               	xorlw	1	; case 1
 11234  0108D8  B4D8               	btfsc	status,2,c
 11235  0108DA  D79E               	goto	l2323
 11236  0108DC  0A03               	xorlw	3	; case 2
 11237  0108DE  B4D8               	btfsc	status,2,c
 11238  0108E0  D7AD               	goto	l2325
 11239  0108E2  0A06               	xorlw	6	; case 4
 11240  0108E4  B4D8               	btfsc	status,2,c
 11241  0108E6  D7BC               	goto	l2326
 11242  0108E8  0A0C               	xorlw	12	; case 8
 11243  0108EA  B4D8               	btfsc	status,2,c
 11244  0108EC  D7CB               	goto	l2327
 11245  0108EE  0A18               	xorlw	24	; case 16
 11246  0108F0  B4D8               	btfsc	status,2,c
 11247  0108F2  D7CB               	goto	l2328
 11248  0108F4  0A90               	xorlw	144	; case 128
 11249  0108F6  B4D8               	btfsc	status,2,c
 11250  0108F8  D7DA               	goto	l2329
 11251  0108FA                     l2324:
 11252  0108FA  A42E               	btfss	_venflags+1,2,c
 11253  0108FC  0012               	return	
 11254  0108FE  D788               	goto	l2321
 11255  010900                     __end_of_Vend_setup:
 11256                           	opt stack 0
 11257                           tblptru	equ	0xFF8
 11258                           tblptrh	equ	0xFF7
 11259                           tblptrl	equ	0xFF6
 11260                           tablat	equ	0xFF5
 11261                           prodh	equ	0xFF4
 11262                           prodl	equ	0xFF3
 11263                           postinc0	equ	0xFEE
 11264                           wreg	equ	0xFE8
 11265                           indf2	equ	0xFDF
 11266                           postinc2	equ	0xFDE
 11267                           fsr2h	equ	0xFDA
 11268                           fsr2l	equ	0xFD9
 11269                           status	equ	0xFD8
 11270                           
 11271 ;; *************** function _Vend_settime *****************
 11272 ;; Defined at:
 11273 ;;		line 457 in file "vend.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;		None
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;		None
 11278 ;; Return value:  Size  Location     Type
 11279 ;;                  1    wreg      void 
 11280 ;; Registers used:
 11281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : 0/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;Total ram usage:        0 bytes
 11292 ;; Hardware stack levels used:    1
 11293 ;; Hardware stack levels required when called:   10
 11294 ;; This function calls:
 11295 ;;		_Read_Service
 11296 ;;		_Vend_timeset
 11297 ;;		_butindb
 11298 ;;		_get_channel
 11299 ;;		_lcd_string
 11300 ;; This function is called by:
 11301 ;;		_Vend_setup
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           	psect	text66
 11306  01233C                     __ptext66:
 11307                           	opt stack 0
 11308  01233C                     _Vend_settime:
 11309                           	opt stack 18
 11310                           
 11311                           ;vend.c: 460: lcd_string(setimemsg, line1);
 11312                           
 11313                           ;incstack = 0
 11314  01233C  0EFD               	movlw	low _setimemsg
 11315  01233E  6E24               	movwf	lcd_string@lcdstring,c
 11316  012340  0EFD               	movlw	high _setimemsg
 11317  012342  6E25               	movwf	lcd_string@lcdstring+1,c
 11318  012344  0E4A               	movlw	low _line1
 11319  012346  6EF6               	movwf	tblptrl,c
 11320  012348                     	if	1	;There is more than 1 active tblptr byte
 11321  012348  0EFC               	movlw	high _line1
 11322  01234A  6EF7               	movwf	tblptrh,c
 11323  01234C                     	endif
 11324  01234C                     	if	1	;There are 3 active tblptr bytes
 11325  01234C  0E00               	movlw	low (_line1 shr (0+16))
 11326  01234E  6EF8               	movwf	tblptru,c
 11327  012350                     	endif
 11328  012350  0008               	tblrd		*
 11329  012352  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11330  012356  EC78  F08A         	call	_lcd_string	;wreg free
 11331                           
 11332                           ;vend.c: 461: buttons = butindb();
 11333  01235A  ECD5  F092         	call	_butindb	;wreg free
 11334  01235E  6E38               	movwf	_buttons,c	;volatile
 11335                           
 11336                           ;vend.c: 462: venflags.settime = 1;
 11337  012360  8C2E               	bsf	_venflags+1,6,c
 11338                           
 11339                           ;vend.c: 464: while(venflags.settime)
 11340  012362  D010               	goto	l2337
 11341  012364                     
 11342                           ;vend.c: 465: {
 11343                           ;vend.c: 466: buttons = butindb();
 11344  012364  ECD5  F092         	call	_butindb	;wreg free
 11345  012368  6E38               	movwf	_buttons,c	;volatile
 11346                           
 11347                           ;vend.c: 467: if(buttons != 0x00)
 11348  01236A  5038               	movf	_buttons,w,c	;volatile
 11349  01236C  B4D8               	btfsc	status,2,c
 11350  01236E  D005               	goto	l2336
 11351                           
 11352                           ;vend.c: 468: {
 11353                           ;vend.c: 469: Vend_timeset(get_channel(buttons));
 11354  012370  5038               	movf	_buttons,w,c	;volatile
 11355  012372  EC3E  F095         	call	_get_channel
 11356  012376  ECDC  F082         	call	_Vend_timeset
 11357  01237A                     l2336:
 11358                           
 11359                           ;vend.c: 470: }
 11360                           ;vend.c: 471: if(Read_Service() == 0x00)
 11361  01237A  EC68  F095         	call	_Read_Service	;wreg free
 11362  01237E  0900               	iorlw	0
 11363  012380  B4D8               	btfsc	status,2,c
 11364                           
 11365                           ;vend.c: 472: {
 11366                           ;vend.c: 473: venflags.settime = 0;
 11367  012382  9C2E               	bcf	_venflags+1,6,c
 11368  012384                     l2337:
 11369  012384  AC2E               	btfss	_venflags+1,6,c
 11370  012386  0012               	return	
 11371  012388  D7ED               	goto	l2335
 11372  01238A                     __end_of_Vend_settime:
 11373                           	opt stack 0
 11374                           tblptru	equ	0xFF8
 11375                           tblptrh	equ	0xFF7
 11376                           tblptrl	equ	0xFF6
 11377                           tablat	equ	0xFF5
 11378                           prodh	equ	0xFF4
 11379                           prodl	equ	0xFF3
 11380                           postinc0	equ	0xFEE
 11381                           wreg	equ	0xFE8
 11382                           indf2	equ	0xFDF
 11383                           postinc2	equ	0xFDE
 11384                           fsr2h	equ	0xFDA
 11385                           fsr2l	equ	0xFD9
 11386                           status	equ	0xFD8
 11387                           
 11388 ;; *************** function _Vend_timeset *****************
 11389 ;; Defined at:
 11390 ;;		line 480 in file "vend.c"
 11391 ;; Parameters:    Size  Location     Type
 11392 ;;  channel         1    wreg     unsigned char 
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;  channel         1   15[BANK0 ] unsigned char 
 11395 ;;  chantime        1   14[BANK0 ] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11409 ;;Total ram usage:        4 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    9
 11412 ;; This function calls:
 11413 ;;		_DATAEE_ReadByte
 11414 ;;		_DATAEE_WriteByte
 11415 ;;		_butindb
 11416 ;;		_displ_time
 11417 ;;		_lcd_string
 11418 ;; This function is called by:
 11419 ;;		_Vend_settime
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           	psect	text67
 11424  0105B8                     __ptext67:
 11425                           	opt stack 0
 11426  0105B8                     _Vend_timeset:
 11427                           	opt stack 18
 11428                           
 11429                           ;incstack = 0
 11430                           ;Vend_timeset@channel stored from wreg
 11431  0105B8  0100               	movlb	0	; () banked
 11432  0105BA  6FC1               	movwf	Vend_timeset@channel& (0+255),b
 11433                           
 11434                           ;vend.c: 482: venflags.mottime = 1;
 11435  0105BC  882E               	bsf	_venflags+1,4,c
 11436                           
 11437                           ;vend.c: 483: lcd_string(vendtimem, line1);
 11438  0105BE  0ED4               	movlw	low _vendtimem
 11439  0105C0  6E24               	movwf	lcd_string@lcdstring,c
 11440  0105C2  0EFD               	movlw	high _vendtimem
 11441  0105C4  6E25               	movwf	lcd_string@lcdstring+1,c
 11442  0105C6  0E4A               	movlw	low _line1
 11443  0105C8  6EF6               	movwf	tblptrl,c
 11444  0105CA                     	if	1	;There is more than 1 active tblptr byte
 11445  0105CA  0EFC               	movlw	high _line1
 11446  0105CC  6EF7               	movwf	tblptrh,c
 11447  0105CE                     	endif
 11448  0105CE                     	if	1	;There are 3 active tblptr bytes
 11449  0105CE  0E00               	movlw	low (_line1 shr (0+16))
 11450  0105D0  6EF8               	movwf	tblptru,c
 11451  0105D2                     	endif
 11452  0105D2  0008               	tblrd		*
 11453  0105D4  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11454  0105D8  EC78  F08A         	call	_lcd_string	;wreg free
 11455                           
 11456                           ;vend.c: 484: uint8_t chantime = DATAEE_ReadByte(chan1time + channel);
 11457  0105DC  0EF5               	movlw	low _chan1time
 11458  0105DE  6EF6               	movwf	tblptrl,c
 11459  0105E0                     	if	1	;There is more than 1 active tblptr byte
 11460  0105E0  0EFB               	movlw	high _chan1time
 11461  0105E2  6EF7               	movwf	tblptrh,c
 11462  0105E4                     	endif
 11463  0105E4                     	if	1	;There are 3 active tblptr bytes
 11464  0105E4  0E00               	movlw	low (_chan1time shr (0+16))
 11465  0105E6  6EF8               	movwf	tblptru,c
 11466  0105E8                     	endif
 11467  0105E8  0009               	tblrd		*+
 11468  0105EA  CFF5 F0BE          	movff	tablat,??_Vend_timeset
 11469  0105EE  0009               	tblrd		*+
 11470  0105F0  CFF5 F0BF          	movff	tablat,??_Vend_timeset+1
 11471  0105F4  0100               	movlb	0	; () banked
 11472  0105F6  51C1               	movf	Vend_timeset@channel& (0+255),w,b
 11473  0105F8  25BE               	addwf	??_Vend_timeset& (0+255),w,b
 11474  0105FA  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 11475  0105FC  0E00               	movlw	0
 11476  0105FE  21BF               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
 11477  010600  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 11478  010602  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 11479  010606  0100               	movlb	0	; () banked
 11480  010608  6FC0               	movwf	Vend_timeset@chantime& (0+255),b
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;vend.c: 485: displ_time(chantime, channel);
 11484  01060A  C0C1  F02A         	movff	Vend_timeset@channel,displ_time@channel
 11485  01060E  51C0               	movf	Vend_timeset@chantime& (0+255),w,b
 11486  010610  EC0E  F08C         	call	_displ_time
 11487                           
 11488                           ;vend.c: 486: while(venflags.mottime)
 11489  010614  D05D               	goto	l2346
 11490  010616                     
 11491                           ;vend.c: 487: {
 11492                           ;vend.c: 488: buttons = butindb();
 11493  010616  ECD5  F092         	call	_butindb	;wreg free
 11494  01061A  6E38               	movwf	_buttons,c	;volatile
 11495                           
 11496                           ;vend.c: 489: switch(buttons)
 11497  01061C  D04F               	goto	l2344
 11498  01061E  0100               	movlb	0	; () banked
 11499  010620  2BC0               	incf	Vend_timeset@chantime& (0+255),f,b
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;vend.c: 492: DATAEE_WriteByte(chan1time + channel, chantime);
 11503  010622  0EF5               	movlw	low _chan1time
 11504  010624  6EF6               	movwf	tblptrl,c
 11505  010626                     	if	1	;There is more than 1 active tblptr byte
 11506  010626  0EFB               	movlw	high _chan1time
 11507  010628  6EF7               	movwf	tblptrh,c
 11508  01062A                     	endif
 11509  01062A                     	if	1	;There are 3 active tblptr bytes
 11510  01062A  0E00               	movlw	low (_chan1time shr (0+16))
 11511  01062C  6EF8               	movwf	tblptru,c
 11512  01062E                     	endif
 11513  01062E  0009               	tblrd		*+
 11514  010630  CFF5 F0BE          	movff	tablat,??_Vend_timeset
 11515  010634  0009               	tblrd		*+
 11516  010636  CFF5 F0BF          	movff	tablat,??_Vend_timeset+1
 11517  01063A  51C1               	movf	Vend_timeset@channel& (0+255),w,b
 11518  01063C  25BE               	addwf	??_Vend_timeset& (0+255),w,b
 11519  01063E  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
 11520  010640  0E00               	movlw	0
 11521  010642  21BF               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
 11522  010644  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
 11523  010646  C0C0  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
 11524  01064A  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 11525                           
 11526                           ;vend.c: 493: displ_time(chantime, channel);
 11527  01064E  C0C1  F02A         	movff	Vend_timeset@channel,displ_time@channel
 11528  010652  0100               	movlb	0	; () banked
 11529  010654  51C0               	movf	Vend_timeset@chantime& (0+255),w,b
 11530  010656  EC0E  F08C         	call	_displ_time
 11531                           
 11532                           ;vend.c: 494: break;
 11533  01065A  D03A               	goto	l2346
 11534  01065C  0100               	movlb	0	; () banked
 11535  01065E  07C0               	decf	Vend_timeset@chantime& (0+255),f,b
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;vend.c: 496: DATAEE_WriteByte(chan1time + channel, chantime);
 11539  010660  0EF5               	movlw	low _chan1time
 11540  010662  6EF6               	movwf	tblptrl,c
 11541  010664                     	if	1	;There is more than 1 active tblptr byte
 11542  010664  0EFB               	movlw	high _chan1time
 11543  010666  6EF7               	movwf	tblptrh,c
 11544  010668                     	endif
 11545  010668                     	if	1	;There are 3 active tblptr bytes
 11546  010668  0E00               	movlw	low (_chan1time shr (0+16))
 11547  01066A  6EF8               	movwf	tblptru,c
 11548  01066C                     	endif
 11549  01066C  0009               	tblrd		*+
 11550  01066E  CFF5 F0BE          	movff	tablat,??_Vend_timeset
 11551  010672  0009               	tblrd		*+
 11552  010674  CFF5 F0BF          	movff	tablat,??_Vend_timeset+1
 11553  010678  51C1               	movf	Vend_timeset@channel& (0+255),w,b
 11554  01067A  25BE               	addwf	??_Vend_timeset& (0+255),w,b
 11555  01067C  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
 11556  01067E  0E00               	movlw	0
 11557  010680  21BF               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
 11558  010682  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
 11559  010684  C0C0  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
 11560  010688  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 11561                           
 11562                           ;vend.c: 497: displ_time(chantime, channel);
 11563  01068C  C0C1  F02A         	movff	Vend_timeset@channel,displ_time@channel
 11564  010690  0100               	movlb	0	; () banked
 11565  010692  51C0               	movf	Vend_timeset@chantime& (0+255),w,b
 11566  010694  EC0E  F08C         	call	_displ_time
 11567                           
 11568                           ;vend.c: 498: break;
 11569  010698  D01B               	goto	l2346
 11570  01069A                     l2348:
 11571  01069A  982E               	bcf	_venflags+1,4,c
 11572                           
 11573                           ;vend.c: 500: lcd_string(setimemsg, line1);
 11574  01069C  0EFD               	movlw	low _setimemsg
 11575  01069E  6E24               	movwf	lcd_string@lcdstring,c
 11576  0106A0  0EFD               	movlw	high _setimemsg
 11577  0106A2  6E25               	movwf	lcd_string@lcdstring+1,c
 11578  0106A4  0E4A               	movlw	low _line1
 11579  0106A6  6EF6               	movwf	tblptrl,c
 11580  0106A8                     	if	1	;There is more than 1 active tblptr byte
 11581  0106A8  0EFC               	movlw	high _line1
 11582  0106AA  6EF7               	movwf	tblptrh,c
 11583  0106AC                     	endif
 11584  0106AC                     	if	1	;There are 3 active tblptr bytes
 11585  0106AC  0E00               	movlw	low (_line1 shr (0+16))
 11586  0106AE  6EF8               	movwf	tblptru,c
 11587  0106B0                     	endif
 11588  0106B0  0008               	tblrd		*
 11589  0106B2  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11590  0106B6  EC78  F08A         	call	_lcd_string	;wreg free
 11591                           
 11592                           ;vend.c: 502: }
 11593                           
 11594                           ;vend.c: 501: break;
 11595  0106BA  D00A               	goto	l2346
 11596  0106BC                     l2344:
 11597  0106BC  5038               	movf	_buttons,w,c	;volatile
 11598                           
 11599                           ; Switch size 1, requested type "space"
 11600                           ; Number of cases is 3, Range of values is 1 to 128
 11601                           ; switch strategies available:
 11602                           ; Name         Instructions Cycles
 11603                           ; simple_byte           10     6 (average)
 11604                           ;	Chosen strategy is simple_byte
 11605  0106BE  0A01               	xorlw	1	; case 1
 11606  0106C0  B4D8               	btfsc	status,2,c
 11607  0106C2  D7AD               	goto	l2345
 11608  0106C4  0A03               	xorlw	3	; case 2
 11609  0106C6  B4D8               	btfsc	status,2,c
 11610  0106C8  D7C9               	goto	l2347
 11611  0106CA  0A82               	xorlw	130	; case 128
 11612  0106CC  B4D8               	btfsc	status,2,c
 11613  0106CE  D7E5               	goto	l2348
 11614  0106D0                     l2346:
 11615  0106D0  A82E               	btfss	_venflags+1,4,c
 11616  0106D2  0012               	return	
 11617  0106D4  D7A0               	goto	l2343
 11618  0106D6                     __end_of_Vend_timeset:
 11619                           	opt stack 0
 11620                           tblptru	equ	0xFF8
 11621                           tblptrh	equ	0xFF7
 11622                           tblptrl	equ	0xFF6
 11623                           tablat	equ	0xFF5
 11624                           prodh	equ	0xFF4
 11625                           prodl	equ	0xFF3
 11626                           postinc0	equ	0xFEE
 11627                           wreg	equ	0xFE8
 11628                           indf2	equ	0xFDF
 11629                           postinc2	equ	0xFDE
 11630                           fsr2h	equ	0xFDA
 11631                           fsr2l	equ	0xFD9
 11632                           status	equ	0xFD8
 11633                           
 11634 ;; *************** function _displ_time *****************
 11635 ;; Defined at:
 11636 ;;		line 97 in file "lcd.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;  motortime       1    wreg     unsigned char 
 11639 ;;  channel         1   31[COMRAM] unsigned char 
 11640 ;; Auto vars:     Size  Location     Type
 11641 ;;  motortime       1   32[COMRAM] unsigned char 
 11642 ;; Return value:  Size  Location     Type
 11643 ;;                  1    wreg      void 
 11644 ;; Registers used:
 11645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11646 ;; Tracked objects:
 11647 ;;		On entry : 0/0
 11648 ;;		On exit  : 0/0
 11649 ;;		Unchanged: 0/0
 11650 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11651 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11655 ;;Total ram usage:        2 bytes
 11656 ;; Hardware stack levels used:    1
 11657 ;; Hardware stack levels required when called:    8
 11658 ;; This function calls:
 11659 ;;		_displ_hex
 11660 ;;		_lcd_string
 11661 ;;		_lcd_writeC
 11662 ;; This function is called by:
 11663 ;;		_Vend_timeset
 11664 ;; This function uses a non-reentrant model
 11665 ;;
 11666                           
 11667                           	psect	text68
 11668  01181C                     __ptext68:
 11669                           	opt stack 0
 11670  01181C                     _displ_time:
 11671                           	opt stack 18
 11672                           
 11673                           ;incstack = 0
 11674                           ;displ_time@motortime stored from wreg
 11675  01181C  6E2B               	movwf	displ_time@motortime,c
 11676                           
 11677                           ;lcd.c: 99: lcd_string(clrline, line3);
 11678  01181E  0E03               	movlw	low _clrline
 11679  011820  6E24               	movwf	lcd_string@lcdstring,c
 11680  011822  0EFF               	movlw	high _clrline
 11681  011824  6E25               	movwf	lcd_string@lcdstring+1,c
 11682  011826  0E48               	movlw	low _line3
 11683  011828  6EF6               	movwf	tblptrl,c
 11684  01182A                     	if	1	;There is more than 1 active tblptr byte
 11685  01182A  0EFC               	movlw	high _line3
 11686  01182C  6EF7               	movwf	tblptrh,c
 11687  01182E                     	endif
 11688  01182E                     	if	1	;There are 3 active tblptr bytes
 11689  01182E  0E00               	movlw	low (_line3 shr (0+16))
 11690  011830  6EF8               	movwf	tblptru,c
 11691  011832                     	endif
 11692  011832  0008               	tblrd		*
 11693  011834  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11694  011838  EC78  F08A         	call	_lcd_string	;wreg free
 11695                           
 11696                           ;lcd.c: 100: lcd_string(clrline, line4);
 11697  01183C  0E03               	movlw	low _clrline
 11698  01183E  6E24               	movwf	lcd_string@lcdstring,c
 11699  011840  0EFF               	movlw	high _clrline
 11700  011842  6E25               	movwf	lcd_string@lcdstring+1,c
 11701  011844  0E47               	movlw	low _line4
 11702  011846  6EF6               	movwf	tblptrl,c
 11703  011848                     	if	1	;There is more than 1 active tblptr byte
 11704  011848  0EFC               	movlw	high _line4
 11705  01184A  6EF7               	movwf	tblptrh,c
 11706  01184C                     	endif
 11707  01184C                     	if	1	;There are 3 active tblptr bytes
 11708  01184C  0E00               	movlw	low (_line4 shr (0+16))
 11709  01184E  6EF8               	movwf	tblptru,c
 11710  011850                     	endif
 11711  011850  0008               	tblrd		*
 11712  011852  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11713  011856  EC78  F08A         	call	_lcd_string	;wreg free
 11714                           
 11715                           ;lcd.c: 101: lcd_string(chanmsg, line3);
 11716  01185A  0E66               	movlw	low _chanmsg
 11717  01185C  6E24               	movwf	lcd_string@lcdstring,c
 11718  01185E  0EFF               	movlw	high _chanmsg
 11719  011860  6E25               	movwf	lcd_string@lcdstring+1,c
 11720  011862  0E48               	movlw	low _line3
 11721  011864  6EF6               	movwf	tblptrl,c
 11722  011866                     	if	1	;There is more than 1 active tblptr byte
 11723  011866  0EFC               	movlw	high _line3
 11724  011868  6EF7               	movwf	tblptrh,c
 11725  01186A                     	endif
 11726  01186A                     	if	1	;There are 3 active tblptr bytes
 11727  01186A  0E00               	movlw	low (_line3 shr (0+16))
 11728  01186C  6EF8               	movwf	tblptru,c
 11729  01186E                     	endif
 11730  01186E  0008               	tblrd		*
 11731  011870  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11732  011874  EC78  F08A         	call	_lcd_string	;wreg free
 11733                           
 11734                           ;lcd.c: 102: lcd_writeC(channel++ | 0x30);
 11735  011878  502A               	movf	displ_time@channel,w,c
 11736  01187A  0930               	iorlw	48
 11737  01187C  EC84  F08F         	call	_lcd_writeC
 11738  011880  2A2A               	incf	displ_time@channel,f,c
 11739                           
 11740                           ;lcd.c: 103: lcd_string(timemsg, line4);
 11741  011882  0E18               	movlw	low _timemsg
 11742  011884  6E24               	movwf	lcd_string@lcdstring,c
 11743  011886  0EFF               	movlw	high _timemsg
 11744  011888  6E25               	movwf	lcd_string@lcdstring+1,c
 11745  01188A  0E47               	movlw	low _line4
 11746  01188C  6EF6               	movwf	tblptrl,c
 11747  01188E                     	if	1	;There is more than 1 active tblptr byte
 11748  01188E  0EFC               	movlw	high _line4
 11749  011890  6EF7               	movwf	tblptrh,c
 11750  011892                     	endif
 11751  011892                     	if	1	;There are 3 active tblptr bytes
 11752  011892  0E00               	movlw	low (_line4 shr (0+16))
 11753  011894  6EF8               	movwf	tblptru,c
 11754  011896                     	endif
 11755  011896  0008               	tblrd		*
 11756  011898  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11757  01189C  EC78  F08A         	call	_lcd_string	;wreg free
 11758                           
 11759                           ;lcd.c: 104: displ_hex((uint8_t) motortime);
 11760  0118A0  502B               	movf	displ_time@motortime,w,c
 11761  0118A2  6E27               	movwf	displ_hex@hexnum,c
 11762  0118A4  6A28               	clrf	displ_hex@hexnum+1,c
 11763  0118A6  6A29               	clrf	displ_hex@hexnum+2,c
 11764  0118A8  ECC3  F089         	call	_displ_hex	;wreg free
 11765  0118AC  0012               	return		;funcret
 11766  0118AE                     __end_of_displ_time:
 11767                           	opt stack 0
 11768                           tblptru	equ	0xFF8
 11769                           tblptrh	equ	0xFF7
 11770                           tblptrl	equ	0xFF6
 11771                           tablat	equ	0xFF5
 11772                           prodh	equ	0xFF4
 11773                           prodl	equ	0xFF3
 11774                           postinc0	equ	0xFEE
 11775                           wreg	equ	0xFE8
 11776                           indf2	equ	0xFDF
 11777                           postinc2	equ	0xFDE
 11778                           fsr2h	equ	0xFDA
 11779                           fsr2l	equ	0xFD9
 11780                           status	equ	0xFD8
 11781                           
 11782 ;; *************** function _Sens_off *****************
 11783 ;; Defined at:
 11784 ;;		line 562 in file "vend.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;		None
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;		None
 11789 ;; Return value:  Size  Location     Type
 11790 ;;                  1    wreg      void 
 11791 ;; Registers used:
 11792 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11793 ;; Tracked objects:
 11794 ;;		On entry : 0/0
 11795 ;;		On exit  : 0/0
 11796 ;;		Unchanged: 0/0
 11797 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11802 ;;Total ram usage:        2 bytes
 11803 ;; Hardware stack levels used:    1
 11804 ;; Hardware stack levels required when called:   10
 11805 ;; This function calls:
 11806 ;;		_Read_Service
 11807 ;;		_butindb
 11808 ;;		_get_channel
 11809 ;;		_lcd_string
 11810 ;;		_off_sens
 11811 ;; This function is called by:
 11812 ;;		_Vend_setup
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           	psect	text69
 11817  011C5E                     __ptext69:
 11818                           	opt stack 0
 11819  011C5E                     _Sens_off:
 11820                           	opt stack 18
 11821                           
 11822                           ;vend.c: 564: _delay((unsigned long)((250)*(12000000/4000.0)));
 11823                           
 11824                           ;incstack = 0
 11825  011C5E  0E04               	movlw	4
 11826  011C60  0100               	movlb	0	; () banked
 11827  011C62  6FB6               	movwf	(??_Sens_off+1)& (0+255),b
 11828  011C64  0ECF               	movlw	207
 11829  011C66  6FB5               	movwf	??_Sens_off& (0+255),b
 11830  011C68  0E01               	movlw	1
 11831  011C6A                     u5837:
 11832  011C6A  2EE8               	decfsz	wreg,f,c
 11833  011C6C  D7FE               	bra	u5837
 11834  011C6E  2FB5               	decfsz	??_Sens_off& (0+255),f,b
 11835  011C70  D7FC               	bra	u5837
 11836  011C72  2FB6               	decfsz	(??_Sens_off+1)& (0+255),f,b
 11837  011C74  D7FA               	bra	u5837
 11838  011C76  D000               	nop2	
 11839                           
 11840                           ;vend.c: 565: buttons = butindb();
 11841  011C78  ECD5  F092         	call	_butindb	;wreg free
 11842  011C7C  D002               	goto	L14
 11843  011C7E                     
 11844                           ;vend.c: 567: {
 11845                           ;vend.c: 568: buttons = butindb();
 11846  011C7E  ECD5  F092         	call	_butindb	;wreg free
 11847  011C82                     L14:
 11848  011C82  6E38               	movwf	_buttons,c	;volatile
 11849  011C84  0E04               	movlw	4
 11850  011C86  1838               	xorwf	_buttons,w,c	;volatile
 11851  011C88  B4D8               	btfsc	status,2,c
 11852  011C8A  D7F9               	goto	l2374
 11853                           
 11854                           ;vend.c: 569: }
 11855                           ;vend.c: 570: venflags.nosense = 1;
 11856  011C8C  8A2E               	bsf	_venflags+1,5,c
 11857                           
 11858                           ;vend.c: 571: lcd_string(setimemsg, line1);
 11859  011C8E  0EFD               	movlw	low _setimemsg
 11860  011C90  6E24               	movwf	lcd_string@lcdstring,c
 11861  011C92  0EFD               	movlw	high _setimemsg
 11862  011C94  6E25               	movwf	lcd_string@lcdstring+1,c
 11863  011C96  0E4A               	movlw	low _line1
 11864  011C98  6EF6               	movwf	tblptrl,c
 11865  011C9A                     	if	1	;There is more than 1 active tblptr byte
 11866  011C9A  0EFC               	movlw	high _line1
 11867  011C9C  6EF7               	movwf	tblptrh,c
 11868  011C9E                     	endif
 11869  011C9E                     	if	1	;There are 3 active tblptr bytes
 11870  011C9E  0E00               	movlw	low (_line1 shr (0+16))
 11871  011CA0  6EF8               	movwf	tblptru,c
 11872  011CA2                     	endif
 11873  011CA2  0008               	tblrd		*
 11874  011CA4  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11875  011CA8  EC78  F08A         	call	_lcd_string	;wreg free
 11876                           
 11877                           ;vend.c: 572: buttons = butindb();
 11878  011CAC  ECD5  F092         	call	_butindb	;wreg free
 11879  011CB0  6E38               	movwf	_buttons,c	;volatile
 11880                           
 11881                           ;vend.c: 573: while(venflags.nosense)
 11882  011CB2  D010               	goto	l2379
 11883  011CB4                     
 11884                           ;vend.c: 574: {
 11885                           ;vend.c: 575: buttons = butindb();
 11886  011CB4  ECD5  F092         	call	_butindb	;wreg free
 11887  011CB8  6E38               	movwf	_buttons,c	;volatile
 11888                           
 11889                           ;vend.c: 576: if(buttons != 0x00)
 11890  011CBA  5038               	movf	_buttons,w,c	;volatile
 11891  011CBC  B4D8               	btfsc	status,2,c
 11892  011CBE  D005               	goto	l2378
 11893                           
 11894                           ;vend.c: 577: {
 11895                           ;vend.c: 578: off_sens(get_channel(buttons));
 11896  011CC0  5038               	movf	_buttons,w,c	;volatile
 11897  011CC2  EC3E  F095         	call	_get_channel
 11898  011CC6  EC82  F085         	call	_off_sens
 11899  011CCA                     l2378:
 11900                           
 11901                           ;vend.c: 579: }
 11902                           ;vend.c: 580: if(Read_Service() == 0x00)
 11903  011CCA  EC68  F095         	call	_Read_Service	;wreg free
 11904  011CCE  0900               	iorlw	0
 11905  011CD0  B4D8               	btfsc	status,2,c
 11906                           
 11907                           ;vend.c: 581: {
 11908                           ;vend.c: 582: venflags.nosense = 0;
 11909  011CD2  9A2E               	bcf	_venflags+1,5,c
 11910  011CD4                     l2379:
 11911  011CD4  AA2E               	btfss	_venflags+1,5,c
 11912  011CD6  0012               	return	
 11913  011CD8  D7ED               	goto	l2377
 11914  011CDA                     __end_of_Sens_off:
 11915                           	opt stack 0
 11916                           tblptru	equ	0xFF8
 11917                           tblptrh	equ	0xFF7
 11918                           tblptrl	equ	0xFF6
 11919                           tablat	equ	0xFF5
 11920                           prodh	equ	0xFF4
 11921                           prodl	equ	0xFF3
 11922                           postinc0	equ	0xFEE
 11923                           wreg	equ	0xFE8
 11924                           indf2	equ	0xFDF
 11925                           postinc2	equ	0xFDE
 11926                           fsr2h	equ	0xFDA
 11927                           fsr2l	equ	0xFD9
 11928                           status	equ	0xFD8
 11929                           
 11930 ;; *************** function _off_sens *****************
 11931 ;; Defined at:
 11932 ;;		line 589 in file "vend.c"
 11933 ;; Parameters:    Size  Location     Type
 11934 ;;  channel         1    wreg     unsigned char 
 11935 ;; Auto vars:     Size  Location     Type
 11936 ;;  channel         1    0[BANK0 ] unsigned char 
 11937 ;;  senseflags      1    2[BANK0 ] unsigned char 
 11938 ;;  chanbit         1    1[BANK0 ] unsigned char 
 11939 ;; Return value:  Size  Location     Type
 11940 ;;                  1    wreg      void 
 11941 ;; Registers used:
 11942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11943 ;; Tracked objects:
 11944 ;;		On entry : 0/0
 11945 ;;		On exit  : 0/0
 11946 ;;		Unchanged: 0/0
 11947 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11952 ;;Total ram usage:        3 bytes
 11953 ;; Hardware stack levels used:    1
 11954 ;; Hardware stack levels required when called:    9
 11955 ;; This function calls:
 11956 ;;		_DATAEE_ReadByte
 11957 ;;		_DATAEE_WriteByte
 11958 ;;		_butindb
 11959 ;;		_displ_sflags
 11960 ;;		_lcd_string
 11961 ;; This function is called by:
 11962 ;;		_Sens_off
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           	psect	text70
 11967  010B04                     __ptext70:
 11968                           	opt stack 0
 11969  010B04                     _off_sens:
 11970                           	opt stack 18
 11971                           
 11972                           ;incstack = 0
 11973                           ;off_sens@channel stored from wreg
 11974  010B04  0100               	movlb	0	; () banked
 11975  010B06  6FB2               	movwf	off_sens@channel& (0+255),b
 11976                           
 11977                           ;vend.c: 591: uint8_t chanbit = buttons;
 11978  010B08  C038  F0B3         	movff	_buttons,off_sens@chanbit	;volatile
 11979                           
 11980                           ;vend.c: 592: venflags.sensno = 1;
 11981  010B0C  8E2E               	bsf	_venflags+1,7,c
 11982                           
 11983                           ;vend.c: 593: uint8_t senseflags = DATAEE_ReadByte(sensorflags);
 11984  010B0E  0EF7               	movlw	low _sensorflags
 11985  010B10  6EF6               	movwf	tblptrl,c
 11986  010B12                     	if	1	;There is more than 1 active tblptr byte
 11987  010B12  0EFB               	movlw	high _sensorflags
 11988  010B14  6EF7               	movwf	tblptrh,c
 11989  010B16                     	endif
 11990  010B16                     	if	1	;There are 3 active tblptr bytes
 11991  010B16  0E00               	movlw	low (_sensorflags shr (0+16))
 11992  010B18  6EF8               	movwf	tblptru,c
 11993  010B1A                     	endif
 11994  010B1A  0009               	tblrd		*+
 11995  010B1C  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 11996  010B20  000A               	tblrd		*-
 11997  010B22  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 11998  010B26  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 11999  010B2A  0100               	movlb	0	; () banked
 12000  010B2C  6FB4               	movwf	off_sens@senseflags& (0+255),b
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;vend.c: 594: displ_sflags(senseflags, channel, chanbit);
 12004  010B2E  C0B2  F029         	movff	off_sens@channel,displ_sflags@chanel
 12005  010B32  C0B3  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
 12006  010B36  51B4               	movf	off_sens@senseflags& (0+255),w,b
 12007  010B38  EC1E  F08A         	call	_displ_sflags
 12008                           
 12009                           ;vend.c: 596: while(venflags.sensno)
 12010  010B3C  D05A               	goto	l2388
 12011  010B3E                     
 12012                           ;vend.c: 597: {
 12013                           ;vend.c: 598: buttons = butindb();
 12014  010B3E  ECD5  F092         	call	_butindb	;wreg free
 12015  010B42  6E38               	movwf	_buttons,c	;volatile
 12016                           
 12017                           ;vend.c: 599: switch(buttons)
 12018  010B44  D04C               	goto	l2386
 12019  010B46  0100               	movlb	0	; () banked
 12020  010B48  51B3               	movf	off_sens@chanbit& (0+255),w,b
 12021  010B4A  0AFF               	xorlw	255
 12022  010B4C  15B4               	andwf	off_sens@senseflags& (0+255),w,b
 12023  010B4E  6FB4               	movwf	off_sens@senseflags& (0+255),b
 12024                           
 12025                           ; BSR set to: 0
 12026                           ;vend.c: 603: DATAEE_WriteByte(sensorflags, senseflags);
 12027  010B50  0EF7               	movlw	low _sensorflags
 12028  010B52  6EF6               	movwf	tblptrl,c
 12029  010B54                     	if	1	;There is more than 1 active tblptr byte
 12030  010B54  0EFB               	movlw	high _sensorflags
 12031  010B56  6EF7               	movwf	tblptrh,c
 12032  010B58                     	endif
 12033  010B58                     	if	1	;There are 3 active tblptr bytes
 12034  010B58  0E00               	movlw	low (_sensorflags shr (0+16))
 12035  010B5A  6EF8               	movwf	tblptru,c
 12036  010B5C                     	endif
 12037  010B5C  0009               	tblrd		*+
 12038  010B5E  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12039  010B62  000A               	tblrd		*-
 12040  010B64  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12041  010B68  C0B4  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
 12042  010B6C  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12043                           
 12044                           ;vend.c: 604: displ_sflags(senseflags, channel, chanbit);
 12045  010B70  C0B2  F029         	movff	off_sens@channel,displ_sflags@chanel
 12046  010B74  C0B3  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
 12047  010B78  0100               	movlb	0	; () banked
 12048  010B7A  51B4               	movf	off_sens@senseflags& (0+255),w,b
 12049  010B7C  EC1E  F08A         	call	_displ_sflags
 12050                           
 12051                           ;vend.c: 605: break;
 12052  010B80  D038               	goto	l2388
 12053  010B82  0100               	movlb	0	; () banked
 12054  010B84  51B4               	movf	off_sens@senseflags& (0+255),w,b
 12055  010B86  11B3               	iorwf	off_sens@chanbit& (0+255),w,b
 12056  010B88  6FB4               	movwf	off_sens@senseflags& (0+255),b
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;vend.c: 608: DATAEE_WriteByte(sensorflags, senseflags);
 12060  010B8A  0EF7               	movlw	low _sensorflags
 12061  010B8C  6EF6               	movwf	tblptrl,c
 12062  010B8E                     	if	1	;There is more than 1 active tblptr byte
 12063  010B8E  0EFB               	movlw	high _sensorflags
 12064  010B90  6EF7               	movwf	tblptrh,c
 12065  010B92                     	endif
 12066  010B92                     	if	1	;There are 3 active tblptr bytes
 12067  010B92  0E00               	movlw	low (_sensorflags shr (0+16))
 12068  010B94  6EF8               	movwf	tblptru,c
 12069  010B96                     	endif
 12070  010B96  0009               	tblrd		*+
 12071  010B98  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12072  010B9C  000A               	tblrd		*-
 12073  010B9E  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12074  010BA2  C0B4  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
 12075  010BA6  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12076                           
 12077                           ;vend.c: 609: displ_sflags(senseflags, channel, chanbit);
 12078  010BAA  C0B2  F029         	movff	off_sens@channel,displ_sflags@chanel
 12079  010BAE  C0B3  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
 12080  010BB2  0100               	movlb	0	; () banked
 12081  010BB4  51B4               	movf	off_sens@senseflags& (0+255),w,b
 12082  010BB6  EC1E  F08A         	call	_displ_sflags
 12083                           
 12084                           ;vend.c: 610: break;
 12085  010BBA  D01B               	goto	l2388
 12086  010BBC                     l2390:
 12087  010BBC  9E2E               	bcf	_venflags+1,7,c
 12088                           
 12089                           ;vend.c: 612: lcd_string(setimemsg, line1);
 12090  010BBE  0EFD               	movlw	low _setimemsg
 12091  010BC0  6E24               	movwf	lcd_string@lcdstring,c
 12092  010BC2  0EFD               	movlw	high _setimemsg
 12093  010BC4  6E25               	movwf	lcd_string@lcdstring+1,c
 12094  010BC6  0E4A               	movlw	low _line1
 12095  010BC8  6EF6               	movwf	tblptrl,c
 12096  010BCA                     	if	1	;There is more than 1 active tblptr byte
 12097  010BCA  0EFC               	movlw	high _line1
 12098  010BCC  6EF7               	movwf	tblptrh,c
 12099  010BCE                     	endif
 12100  010BCE                     	if	1	;There are 3 active tblptr bytes
 12101  010BCE  0E00               	movlw	low (_line1 shr (0+16))
 12102  010BD0  6EF8               	movwf	tblptru,c
 12103  010BD2                     	endif
 12104  010BD2  0008               	tblrd		*
 12105  010BD4  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12106  010BD8  EC78  F08A         	call	_lcd_string	;wreg free
 12107                           
 12108                           ;vend.c: 614: }
 12109                           
 12110                           ;vend.c: 613: break;
 12111  010BDC  D00A               	goto	l2388
 12112  010BDE                     l2386:
 12113  010BDE  5038               	movf	_buttons,w,c	;volatile
 12114                           
 12115                           ; Switch size 1, requested type "space"
 12116                           ; Number of cases is 3, Range of values is 1 to 128
 12117                           ; switch strategies available:
 12118                           ; Name         Instructions Cycles
 12119                           ; simple_byte           10     6 (average)
 12120                           ;	Chosen strategy is simple_byte
 12121  010BE0  0A01               	xorlw	1	; case 1
 12122  010BE2  B4D8               	btfsc	status,2,c
 12123  010BE4  D7B0               	goto	l2387
 12124  010BE6  0A03               	xorlw	3	; case 2
 12125  010BE8  B4D8               	btfsc	status,2,c
 12126  010BEA  D7CB               	goto	l2389
 12127  010BEC  0A82               	xorlw	130	; case 128
 12128  010BEE  B4D8               	btfsc	status,2,c
 12129  010BF0  D7E5               	goto	l2390
 12130  010BF2                     l2388:
 12131  010BF2  AE2E               	btfss	_venflags+1,7,c
 12132  010BF4  0012               	return	
 12133  010BF6  D7A3               	goto	l2385
 12134  010BF8                     __end_of_off_sens:
 12135                           	opt stack 0
 12136                           tblptru	equ	0xFF8
 12137                           tblptrh	equ	0xFF7
 12138                           tblptrl	equ	0xFF6
 12139                           tablat	equ	0xFF5
 12140                           prodh	equ	0xFF4
 12141                           prodl	equ	0xFF3
 12142                           postinc0	equ	0xFEE
 12143                           wreg	equ	0xFE8
 12144                           indf2	equ	0xFDF
 12145                           postinc2	equ	0xFDE
 12146                           fsr2h	equ	0xFDA
 12147                           fsr2l	equ	0xFD9
 12148                           status	equ	0xFD8
 12149                           
 12150 ;; *************** function _displ_sflags *****************
 12151 ;; Defined at:
 12152 ;;		line 78 in file "lcd.c"
 12153 ;; Parameters:    Size  Location     Type
 12154 ;;  senseflags      1    wreg     unsigned char 
 12155 ;;  chanel          1   30[COMRAM] unsigned char 
 12156 ;;  chanbit         1   31[COMRAM] unsigned char 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  senseflags      1   32[COMRAM] unsigned char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12172 ;;Total ram usage:        3 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    8
 12175 ;; This function calls:
 12176 ;;		_lcd_string
 12177 ;;		_lcd_writeC
 12178 ;; This function is called by:
 12179 ;;		_off_sens
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           	psect	text71
 12184  01143C                     __ptext71:
 12185                           	opt stack 0
 12186  01143C                     _displ_sflags:
 12187                           	opt stack 18
 12188                           
 12189                           ;incstack = 0
 12190                           ;displ_sflags@senseflags stored from wreg
 12191  01143C  6E2B               	movwf	displ_sflags@senseflags,c
 12192                           
 12193                           ;lcd.c: 81: lcd_string(chanmsg, line1);
 12194  01143E  0E66               	movlw	low _chanmsg
 12195  011440  6E24               	movwf	lcd_string@lcdstring,c
 12196  011442  0EFF               	movlw	high _chanmsg
 12197  011444  6E25               	movwf	lcd_string@lcdstring+1,c
 12198  011446  0E4A               	movlw	low _line1
 12199  011448  6EF6               	movwf	tblptrl,c
 12200  01144A                     	if	1	;There is more than 1 active tblptr byte
 12201  01144A  0EFC               	movlw	high _line1
 12202  01144C  6EF7               	movwf	tblptrh,c
 12203  01144E                     	endif
 12204  01144E                     	if	1	;There are 3 active tblptr bytes
 12205  01144E  0E00               	movlw	low (_line1 shr (0+16))
 12206  011450  6EF8               	movwf	tblptru,c
 12207  011452                     	endif
 12208  011452  0008               	tblrd		*
 12209  011454  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12210  011458  EC78  F08A         	call	_lcd_string	;wreg free
 12211                           
 12212                           ;lcd.c: 82: lcd_writeC(++chanel | 0x30);
 12213  01145C  2A29               	incf	displ_sflags@chanel,f,c
 12214  01145E  5029               	movf	displ_sflags@chanel,w,c
 12215  011460  0930               	iorlw	48
 12216  011462  EC84  F08F         	call	_lcd_writeC
 12217                           
 12218                           ;lcd.c: 83: lcd_string(sensmsg, line2);
 12219  011466  0E7E               	movlw	low _sensmsg
 12220  011468  6E24               	movwf	lcd_string@lcdstring,c
 12221  01146A  0EFF               	movlw	high _sensmsg
 12222  01146C  6E25               	movwf	lcd_string@lcdstring+1,c
 12223  01146E  0E49               	movlw	low _line2
 12224  011470  6EF6               	movwf	tblptrl,c
 12225  011472                     	if	1	;There is more than 1 active tblptr byte
 12226  011472  0EFC               	movlw	high _line2
 12227  011474  6EF7               	movwf	tblptrh,c
 12228  011476                     	endif
 12229  011476                     	if	1	;There are 3 active tblptr bytes
 12230  011476  0E00               	movlw	low (_line2 shr (0+16))
 12231  011478  6EF8               	movwf	tblptru,c
 12232  01147A                     	endif
 12233  01147A  0008               	tblrd		*
 12234  01147C  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12235  011480  EC78  F08A         	call	_lcd_string	;wreg free
 12236                           
 12237                           ;lcd.c: 84: lcd_string(sensoffmsg, line3);
 12238  011484  0EB3               	movlw	low _sensoffmsg
 12239  011486  6E24               	movwf	lcd_string@lcdstring,c
 12240  011488  0EFE               	movlw	high _sensoffmsg
 12241  01148A  6E25               	movwf	lcd_string@lcdstring+1,c
 12242  01148C  0E48               	movlw	low _line3
 12243  01148E  6EF6               	movwf	tblptrl,c
 12244  011490                     	if	1	;There is more than 1 active tblptr byte
 12245  011490  0EFC               	movlw	high _line3
 12246  011492  6EF7               	movwf	tblptrh,c
 12247  011494                     	endif
 12248  011494                     	if	1	;There are 3 active tblptr bytes
 12249  011494  0E00               	movlw	low (_line3 shr (0+16))
 12250  011496  6EF8               	movwf	tblptru,c
 12251  011498                     	endif
 12252  011498  0008               	tblrd		*
 12253  01149A  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12254  01149E  EC78  F08A         	call	_lcd_string	;wreg free
 12255                           
 12256                           ;lcd.c: 86: if((senseflags & chanbit) != 0)
 12257  0114A2  502B               	movf	displ_sflags@senseflags,w,c
 12258  0114A4  142A               	andwf	displ_sflags@chanbit,w,c
 12259  0114A6  0900               	iorlw	0
 12260  0114A8  B4D8               	btfsc	status,2,c
 12261  0114AA  D011               	goto	l1611
 12262                           
 12263                           ;lcd.c: 87: {
 12264                           ;lcd.c: 88: lcd_string(disabled, line2 + 10);
 12265  0114AC  0E9D               	movlw	low _disabled
 12266  0114AE  6E24               	movwf	lcd_string@lcdstring,c
 12267  0114B0  0EFF               	movlw	high _disabled
 12268  0114B2  6E25               	movwf	lcd_string@lcdstring+1,c
 12269  0114B4  0E49               	movlw	low _line2
 12270  0114B6  6EF6               	movwf	tblptrl,c
 12271  0114B8                     	if	1	;There is more than 1 active tblptr byte
 12272  0114B8  0EFC               	movlw	high _line2
 12273  0114BA  6EF7               	movwf	tblptrh,c
 12274  0114BC                     	endif
 12275  0114BC                     	if	1	;There are 3 active tblptr bytes
 12276  0114BC  0E00               	movlw	low (_line2 shr (0+16))
 12277  0114BE  6EF8               	movwf	tblptru,c
 12278  0114C0                     	endif
 12279  0114C0  0008               	tblrd		*
 12280  0114C2  50F5               	movf	tablat,w,c
 12281  0114C4  0F0A               	addlw	10
 12282  0114C6  6E26               	movwf	lcd_string@lcdline,c
 12283  0114C8  EC78  F08A         	call	_lcd_string	;wreg free
 12284                           
 12285                           ;lcd.c: 89: }
 12286  0114CC  0012               	return	
 12287  0114CE                     l1611:
 12288                           
 12289                           ;lcd.c: 90: else
 12290                           ;lcd.c: 91: {
 12291                           ;lcd.c: 92: lcd_string(enabled, line2 + 10);
 12292  0114CE  0EA7               	movlw	low _enabled
 12293  0114D0  6E24               	movwf	lcd_string@lcdstring,c
 12294  0114D2  0EFF               	movlw	high _enabled
 12295  0114D4  6E25               	movwf	lcd_string@lcdstring+1,c
 12296  0114D6  0E49               	movlw	low _line2
 12297  0114D8  6EF6               	movwf	tblptrl,c
 12298  0114DA                     	if	1	;There is more than 1 active tblptr byte
 12299  0114DA  0EFC               	movlw	high _line2
 12300  0114DC  6EF7               	movwf	tblptrh,c
 12301  0114DE                     	endif
 12302  0114DE                     	if	1	;There are 3 active tblptr bytes
 12303  0114DE  0E00               	movlw	low (_line2 shr (0+16))
 12304  0114E0  6EF8               	movwf	tblptru,c
 12305  0114E2                     	endif
 12306  0114E2  0008               	tblrd		*
 12307  0114E4  50F5               	movf	tablat,w,c
 12308  0114E6  0F0A               	addlw	10
 12309  0114E8  6E26               	movwf	lcd_string@lcdline,c
 12310  0114EA  EC78  F08A         	call	_lcd_string	;wreg free
 12311  0114EE  0012               	return	
 12312  0114F0                     __end_of_displ_sflags:
 12313                           	opt stack 0
 12314                           tblptru	equ	0xFF8
 12315                           tblptrh	equ	0xFF7
 12316                           tblptrl	equ	0xFF6
 12317                           tablat	equ	0xFF5
 12318                           prodh	equ	0xFF4
 12319                           prodl	equ	0xFF3
 12320                           postinc0	equ	0xFEE
 12321                           wreg	equ	0xFE8
 12322                           indf2	equ	0xFDF
 12323                           postinc2	equ	0xFDE
 12324                           fsr2h	equ	0xFDA
 12325                           fsr2l	equ	0xFD9
 12326                           status	equ	0xFD8
 12327                           
 12328 ;; *************** function _Reset_settings *****************
 12329 ;; Defined at:
 12330 ;;		line 618 in file "vend.c"
 12331 ;; Parameters:    Size  Location     Type
 12332 ;;		None
 12333 ;; Auto vars:     Size  Location     Type
 12334 ;;  chantimebits    2    2[BANK0 ] unsigned int 
 12335 ;;  chanlinkbits    2    0[BANK0 ] unsigned int 
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/0
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12346 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Totals:         2       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;Total ram usage:        6 bytes
 12350 ;; Hardware stack levels used:    1
 12351 ;; Hardware stack levels required when called:    8
 12352 ;; This function calls:
 12353 ;;		_DATAEE_WriteByte
 12354 ;;		_lcd_string
 12355 ;; This function is called by:
 12356 ;;		_Vend_setup
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           	psect	text72
 12361  010CEA                     __ptext72:
 12362                           	opt stack 0
 12363  010CEA                     _Reset_settings:
 12364                           	opt stack 20
 12365                           
 12366                           ;vend.c: 620: lcd_string(chanresetmsg, line1);
 12367                           
 12368                           ;incstack = 0
 12369  010CEA  0E93               	movlw	low _chanresetmsg
 12370  010CEC  6E24               	movwf	lcd_string@lcdstring,c
 12371  010CEE  0EFE               	movlw	high _chanresetmsg
 12372  010CF0  6E25               	movwf	lcd_string@lcdstring+1,c
 12373  010CF2  0E4A               	movlw	low _line1
 12374  010CF4  6EF6               	movwf	tblptrl,c
 12375  010CF6                     	if	1	;There is more than 1 active tblptr byte
 12376  010CF6  0EFC               	movlw	high _line1
 12377  010CF8  6EF7               	movwf	tblptrh,c
 12378  010CFA                     	endif
 12379  010CFA                     	if	1	;There are 3 active tblptr bytes
 12380  010CFA  0E00               	movlw	low (_line1 shr (0+16))
 12381  010CFC  6EF8               	movwf	tblptru,c
 12382  010CFE                     	endif
 12383  010CFE  0008               	tblrd		*
 12384  010D00  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12385  010D04  EC78  F08A         	call	_lcd_string	;wreg free
 12386                           
 12387                           ;vend.c: 621: uint16_t chanlinkbits = chan1linkbits;
 12388  010D08  0E07               	movlw	low _chan1linkbits
 12389  010D0A  6EF6               	movwf	tblptrl,c
 12390  010D0C                     	if	1	;There is more than 1 active tblptr byte
 12391  010D0C  0EFC               	movlw	high _chan1linkbits
 12392  010D0E  6EF7               	movwf	tblptrh,c
 12393  010D10                     	endif
 12394  010D10                     	if	1	;There are 3 active tblptr bytes
 12395  010D10  0E00               	movlw	low (_chan1linkbits shr (0+16))
 12396  010D12  6EF8               	movwf	tblptru,c
 12397  010D14                     	endif
 12398  010D14  0009               	tblrd		*+
 12399  010D16  CFF5 F0B2          	movff	tablat,Reset_settings@chanlinkbits
 12400  010D1A  000A               	tblrd		*-
 12401  010D1C  CFF5 F0B3          	movff	tablat,Reset_settings@chanlinkbits+1
 12402                           
 12403                           ;vend.c: 622: while(chanlinkbits < chan1time)
 12404  010D20  D00B               	goto	l2395
 12405  010D22                     
 12406                           ;vend.c: 623: {
 12407                           ;vend.c: 625: DATAEE_WriteByte(chanlinkbits, 0x00);
 12408  010D22  C0B2  F01D         	movff	Reset_settings@chanlinkbits,DATAEE_WriteByte@bAdd
 12409  010D26  C0B3  F01E         	movff	Reset_settings@chanlinkbits+1,DATAEE_WriteByte@bAdd+1
 12410  010D2A  0E00               	movlw	0
 12411  010D2C  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12412  010D2E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12413                           
 12414                           ;vend.c: 626: chanlinkbits++;
 12415  010D32  0100               	movlb	0	; () banked
 12416  010D34  4BB2               	infsnz	Reset_settings@chanlinkbits& (0+255),f,b
 12417  010D36  2BB3               	incf	(Reset_settings@chanlinkbits+1)& (0+255),f,b
 12418  010D38                     l2395:
 12419                           
 12420                           ; BSR set to: 0
 12421  010D38  0EF5               	movlw	low _chan1time
 12422  010D3A  6EF6               	movwf	tblptrl,c
 12423  010D3C                     	if	1	;There is more than 1 active tblptr byte
 12424  010D3C  0EFB               	movlw	high _chan1time
 12425  010D3E  6EF7               	movwf	tblptrh,c
 12426  010D40                     	endif
 12427  010D40                     	if	1	;There are 3 active tblptr bytes
 12428  010D40  0E00               	movlw	low (_chan1time shr (0+16))
 12429  010D42  6EF8               	movwf	tblptru,c
 12430  010D44                     	endif
 12431  010D44  0009               	tblrd		*+
 12432  010D46  50F5               	movf	tablat,w,c
 12433  010D48  0100               	movlb	0	; () banked
 12434  010D4A  5DB2               	subwf	Reset_settings@chanlinkbits& (0+255),w,b
 12435  010D4C  0009               	tblrd		*+
 12436  010D4E  50F5               	movf	tablat,w,c
 12437  010D50  59B3               	subwfb	(Reset_settings@chanlinkbits+1)& (0+255),w,b
 12438  010D52  A0D8               	btfss	status,0,c
 12439  010D54  D7E6               	goto	l2396
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;vend.c: 627: }
 12443                           ;vend.c: 628: uint16_t chantimebits = chan1time;
 12444                           
 12445                           ; BSR set to: 0
 12446  010D56  0EF5               	movlw	low _chan1time
 12447  010D58  6EF6               	movwf	tblptrl,c
 12448  010D5A                     	if	1	;There is more than 1 active tblptr byte
 12449  010D5A  0EFB               	movlw	high _chan1time
 12450  010D5C  6EF7               	movwf	tblptrh,c
 12451  010D5E                     	endif
 12452  010D5E                     	if	1	;There are 3 active tblptr bytes
 12453  010D5E  0E00               	movlw	low (_chan1time shr (0+16))
 12454  010D60  6EF8               	movwf	tblptru,c
 12455  010D62                     	endif
 12456  010D62  0009               	tblrd		*+
 12457  010D64  CFF5 F0B4          	movff	tablat,Reset_settings@chantimebits
 12458  010D68  000A               	tblrd		*-
 12459  010D6A  CFF5 F0B5          	movff	tablat,Reset_settings@chantimebits+1
 12460                           
 12461                           ;vend.c: 629: while(chantimebits < nosentime)
 12462  010D6E  D00B               	goto	l2398
 12463  010D70                     
 12464                           ; BSR set to: 0
 12465                           ;vend.c: 630: {
 12466                           ;vend.c: 632: DATAEE_WriteByte(chantimebits, 0x08);
 12467                           
 12468                           ; BSR set to: 0
 12469  010D70  C0B4  F01D         	movff	Reset_settings@chantimebits,DATAEE_WriteByte@bAdd
 12470  010D74  C0B5  F01E         	movff	Reset_settings@chantimebits+1,DATAEE_WriteByte@bAdd+1
 12471  010D78  0E08               	movlw	8
 12472  010D7A  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12473  010D7C  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12474                           
 12475                           ;vend.c: 633: chantimebits++;
 12476  010D80  0100               	movlb	0	; () banked
 12477  010D82  4BB4               	infsnz	Reset_settings@chantimebits& (0+255),f,b
 12478  010D84  2BB5               	incf	(Reset_settings@chantimebits+1)& (0+255),f,b
 12479  010D86                     l2398:
 12480                           
 12481                           ; BSR set to: 0
 12482                           
 12483                           ; BSR set to: 0
 12484  010D86  0EE5               	movlw	low _nosentime
 12485  010D88  6EF6               	movwf	tblptrl,c
 12486  010D8A                     	if	1	;There is more than 1 active tblptr byte
 12487  010D8A  0EFB               	movlw	high _nosentime
 12488  010D8C  6EF7               	movwf	tblptrh,c
 12489  010D8E                     	endif
 12490  010D8E                     	if	1	;There are 3 active tblptr bytes
 12491  010D8E  0E00               	movlw	low (_nosentime shr (0+16))
 12492  010D90  6EF8               	movwf	tblptru,c
 12493  010D92                     	endif
 12494  010D92  0009               	tblrd		*+
 12495  010D94  50F5               	movf	tablat,w,c
 12496  010D96  5DB4               	subwf	Reset_settings@chantimebits& (0+255),w,b
 12497  010D98  0009               	tblrd		*+
 12498  010D9A  50F5               	movf	tablat,w,c
 12499  010D9C  59B5               	subwfb	(Reset_settings@chantimebits+1)& (0+255),w,b
 12500  010D9E  A0D8               	btfss	status,0,c
 12501  010DA0  D7E7               	goto	l2399
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;vend.c: 634: }
 12505                           ;vend.c: 635: DATAEE_WriteByte(sensorflags, 0x05);
 12506                           
 12507                           ; BSR set to: 0
 12508  010DA2  0EF7               	movlw	low _sensorflags
 12509  010DA4  6EF6               	movwf	tblptrl,c
 12510  010DA6                     	if	1	;There is more than 1 active tblptr byte
 12511  010DA6  0EFB               	movlw	high _sensorflags
 12512  010DA8  6EF7               	movwf	tblptrh,c
 12513  010DAA                     	endif
 12514  010DAA                     	if	1	;There are 3 active tblptr bytes
 12515  010DAA  0E00               	movlw	low (_sensorflags shr (0+16))
 12516  010DAC  6EF8               	movwf	tblptru,c
 12517  010DAE                     	endif
 12518  010DAE  0009               	tblrd		*+
 12519  010DB0  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12520  010DB4  000A               	tblrd		*-
 12521  010DB6  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12522  010DBA  0E05               	movlw	5
 12523  010DBC  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12524  010DBE  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12525                           
 12526                           ;vend.c: 636: _delay((unsigned long)((2000)*(12000000/4000.0)));
 12527  010DC2  0E1F               	movlw	31
 12528  010DC4  6E2A               	movwf	(??_Reset_settings+1)& (0+255),c
 12529  010DC6  0E71               	movlw	113
 12530  010DC8  6E29               	movwf	??_Reset_settings& (0+255),c
 12531  010DCA  0E1E               	movlw	30
 12532  010DCC                     u5847:
 12533  010DCC  2EE8               	decfsz	wreg,f,c
 12534  010DCE  D7FE               	bra	u5847
 12535  010DD0  2E29               	decfsz	??_Reset_settings& (0+255),f,c
 12536  010DD2  D7FC               	bra	u5847
 12537  010DD4  2E2A               	decfsz	(??_Reset_settings+1)& (0+255),f,c
 12538  010DD6  D7FA               	bra	u5847
 12539  010DD8  D000               	nop2	
 12540  010DDA  0012               	return		;funcret
 12541  010DDC                     __end_of_Reset_settings:
 12542                           	opt stack 0
 12543                           tblptru	equ	0xFF8
 12544                           tblptrh	equ	0xFF7
 12545                           tblptrl	equ	0xFF6
 12546                           tablat	equ	0xFF5
 12547                           prodh	equ	0xFF4
 12548                           prodl	equ	0xFF3
 12549                           postinc0	equ	0xFEE
 12550                           wreg	equ	0xFE8
 12551                           indf2	equ	0xFDF
 12552                           postinc2	equ	0xFDE
 12553                           fsr2h	equ	0xFDA
 12554                           fsr2l	equ	0xFD9
 12555                           status	equ	0xFD8
 12556                           
 12557 ;; *************** function _Init_vendmem *****************
 12558 ;; Defined at:
 12559 ;;		line 9 in file "vend.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;		None
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;  chanlink        2   24[COMRAM] PTR unsigned char 
 12564 ;;		 -> chanlink1(1), 
 12565 ;;  chanlinkbits    2   22[COMRAM] unsigned int 
 12566 ;;  i               1   26[COMRAM] unsigned char 
 12567 ;; Return value:  Size  Location     Type
 12568 ;;                  1    wreg      void 
 12569 ;; Registers used:
 12570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12571 ;; Tracked objects:
 12572 ;;		On entry : 0/0
 12573 ;;		On exit  : 0/0
 12574 ;;		Unchanged: 0/0
 12575 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12580 ;;Total ram usage:        7 bytes
 12581 ;; Hardware stack levels used:    1
 12582 ;; Hardware stack levels required when called:    3
 12583 ;; This function calls:
 12584 ;;		_DATAEE_ReadByte
 12585 ;; This function is called by:
 12586 ;;		_vend_init
 12587 ;;		_Vend_setup
 12588 ;; This function uses a non-reentrant model
 12589 ;;
 12590                           
 12591                           	psect	text73
 12592  0112CC                     __ptext73:
 12593                           	opt stack 0
 12594  0112CC                     _Init_vendmem:
 12595                           	opt stack 26
 12596                           
 12597                           ;vend.c: 12: ((uint8_t*) &senschk)[0] = DATAEE_ReadByte(sensorflags);
 12598                           
 12599                           ;incstack = 0
 12600  0112CC  0EF7               	movlw	low _sensorflags
 12601  0112CE  6EF6               	movwf	tblptrl,c
 12602  0112D0                     	if	1	;There is more than 1 active tblptr byte
 12603  0112D0  0EFB               	movlw	high _sensorflags
 12604  0112D2  6EF7               	movwf	tblptrh,c
 12605  0112D4                     	endif
 12606  0112D4                     	if	1	;There are 3 active tblptr bytes
 12607  0112D4  0E00               	movlw	low (_sensorflags shr (0+16))
 12608  0112D6  6EF8               	movwf	tblptru,c
 12609  0112D8                     	endif
 12610  0112D8  0009               	tblrd		*+
 12611  0112DA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 12612  0112DE  000A               	tblrd		*-
 12613  0112E0  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 12614  0112E4  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 12615  0112E8  0100               	movlb	0	; () banked
 12616  0112EA  6FA8               	movwf	_senschk& (0+255),b
 12617                           
 12618                           ; BSR set to: 0
 12619                           ;vend.c: 14: uint16_t chanlinkbits = chan1linkbits;
 12620  0112EC  0E07               	movlw	low _chan1linkbits
 12621  0112EE  6EF6               	movwf	tblptrl,c
 12622  0112F0                     	if	1	;There is more than 1 active tblptr byte
 12623  0112F0  0EFC               	movlw	high _chan1linkbits
 12624  0112F2  6EF7               	movwf	tblptrh,c
 12625  0112F4                     	endif
 12626  0112F4                     	if	1	;There are 3 active tblptr bytes
 12627  0112F4  0E00               	movlw	low (_chan1linkbits shr (0+16))
 12628  0112F6  6EF8               	movwf	tblptru,c
 12629  0112F8                     	endif
 12630  0112F8  0009               	tblrd		*+
 12631  0112FA  CFF5 F021          	movff	tablat,Init_vendmem@chanlinkbits
 12632  0112FE  000A               	tblrd		*-
 12633  011300  CFF5 F022          	movff	tablat,Init_vendmem@chanlinkbits+1
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;vend.c: 15: uint8_t *chanlink = ((uint8_t*) &chanlink1);
 12637  011304  0E03               	movlw	3
 12638  011306  6E23               	movwf	Init_vendmem@chanlink,c
 12639  011308  0E00               	movlw	0
 12640  01130A  6E24               	movwf	Init_vendmem@chanlink+1,c
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;vend.c: 16: char i = 0;
 12644  01130C  0E00               	movlw	0
 12645  01130E  6E25               	movwf	Init_vendmem@i,c
 12646                           
 12647                           ;vend.c: 17: while(i < 8)
 12648  011310  D012               	goto	l2179
 12649  011312                     
 12650                           ;vend.c: 18: {
 12651                           ;vend.c: 19: chanlink[i] = DATAEE_ReadByte(chanlinkbits + i);
 12652                           
 12653                           ; BSR set to: 0
 12654  011312  5025               	movf	Init_vendmem@i,w,c
 12655  011314  0D01               	mullw	1
 12656  011316  50F3               	movf	prodl,w,c
 12657  011318  2423               	addwf	Init_vendmem@chanlink,w,c
 12658  01131A  6ED9               	movwf	fsr2l,c
 12659  01131C  50F4               	movf	prodh,w,c
 12660  01131E  2024               	addwfc	Init_vendmem@chanlink+1,w,c
 12661  011320  6EDA               	movwf	fsr2h,c
 12662  011322  5025               	movf	Init_vendmem@i,w,c
 12663  011324  2421               	addwf	Init_vendmem@chanlinkbits,w,c
 12664  011326  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 12665  011328  0E00               	movlw	0
 12666  01132A  2022               	addwfc	Init_vendmem@chanlinkbits+1,w,c
 12667  01132C  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 12668  01132E  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 12669  011332  6EDF               	movwf	indf2,c
 12670                           
 12671                           ;vend.c: 20: i++;
 12672  011334  2A25               	incf	Init_vendmem@i,f,c
 12673  011336                     l2179:
 12674  011336  0E07               	movlw	7
 12675  011338  6425               	cpfsgt	Init_vendmem@i,c
 12676  01133A  D7EB               	goto	l2180
 12677                           
 12678                           ;vend.c: 21: }
 12679                           ;vend.c: 23: i = 0;
 12680  01133C  0E00               	movlw	0
 12681  01133E  6E25               	movwf	Init_vendmem@i,c
 12682                           
 12683                           ;vend.c: 24: while(i < 8)
 12684  011340  D01E               	goto	l2182
 12685  011342                     
 12686                           ;vend.c: 25: {
 12687                           ;vend.c: 26: pricevend[i] = DATAEE_ReadByte(pricestore + i);
 12688  011342  5025               	movf	Init_vendmem@i,w,c
 12689  011344  0D01               	mullw	1
 12690  011346  0E7F               	movlw	low _pricevend
 12691  011348  24F3               	addwf	prodl,w,c
 12692  01134A  6ED9               	movwf	fsr2l,c
 12693  01134C  0E00               	movlw	high _pricevend
 12694  01134E  20F4               	addwfc	prodh,w,c
 12695  011350  6EDA               	movwf	fsr2h,c
 12696  011352  0E13               	movlw	low _pricestore
 12697  011354  6EF6               	movwf	tblptrl,c
 12698  011356                     	if	1	;There is more than 1 active tblptr byte
 12699  011356  0EFC               	movlw	high _pricestore
 12700  011358  6EF7               	movwf	tblptrh,c
 12701  01135A                     	endif
 12702  01135A                     	if	1	;There are 3 active tblptr bytes
 12703  01135A  0E00               	movlw	low (_pricestore shr (0+16))
 12704  01135C  6EF8               	movwf	tblptru,c
 12705  01135E                     	endif
 12706  01135E  0009               	tblrd		*+
 12707  011360  CFF5 F01F          	movff	tablat,??_Init_vendmem
 12708  011364  0009               	tblrd		*+
 12709  011366  CFF5 F020          	movff	tablat,??_Init_vendmem+1
 12710  01136A  5025               	movf	Init_vendmem@i,w,c
 12711  01136C  241F               	addwf	??_Init_vendmem,w,c
 12712  01136E  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 12713  011370  0E00               	movlw	0
 12714  011372  2020               	addwfc	??_Init_vendmem+1,w,c
 12715  011374  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 12716  011376  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 12717  01137A  6EDF               	movwf	indf2,c
 12718                           
 12719                           ;vend.c: 27: i++;
 12720  01137C  2A25               	incf	Init_vendmem@i,f,c
 12721  01137E                     l2182:
 12722  01137E  0E07               	movlw	7
 12723  011380  6425               	cpfsgt	Init_vendmem@i,c
 12724  011382  D7DF               	goto	l2183
 12725  011384  0012               	return	
 12726  011386                     __end_of_Init_vendmem:
 12727                           	opt stack 0
 12728                           tblptru	equ	0xFF8
 12729                           tblptrh	equ	0xFF7
 12730                           tblptrl	equ	0xFF6
 12731                           tablat	equ	0xFF5
 12732                           prodh	equ	0xFF4
 12733                           prodl	equ	0xFF3
 12734                           postinc0	equ	0xFEE
 12735                           wreg	equ	0xFE8
 12736                           indf2	equ	0xFDF
 12737                           postinc2	equ	0xFDE
 12738                           fsr2h	equ	0xFDA
 12739                           fsr2l	equ	0xFD9
 12740                           status	equ	0xFD8
 12741                           
 12742 ;; *************** function _Clear_Totals *****************
 12743 ;; Defined at:
 12744 ;;		line 228 in file "vend.c"
 12745 ;; Parameters:    Size  Location     Type
 12746 ;;		None
 12747 ;; Auto vars:     Size  Location     Type
 12748 ;;  eeaddress       2   22[COMRAM] unsigned int 
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  1    wreg      void 
 12751 ;; Registers used:
 12752 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12753 ;; Tracked objects:
 12754 ;;		On entry : 0/0
 12755 ;;		On exit  : 0/0
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12762 ;;Total ram usage:        2 bytes
 12763 ;; Hardware stack levels used:    1
 12764 ;; Hardware stack levels required when called:    3
 12765 ;; This function calls:
 12766 ;;		_DATAEE_WriteByte
 12767 ;; This function is called by:
 12768 ;;		_Vend_setup
 12769 ;; This function uses a non-reentrant model
 12770 ;;
 12771                           
 12772                           	psect	text74
 12773  0125EA                     __ptext74:
 12774                           	opt stack 0
 12775  0125EA                     _Clear_Totals:
 12776                           	opt stack 25
 12777                           
 12778                           ;vend.c: 230: uint16_t eeaddress = cashinv;
 12779                           
 12780                           ;incstack = 0
 12781  0125EA  0E19               	movlw	low _cashinv
 12782  0125EC  6EF6               	movwf	tblptrl,c
 12783  0125EE                     	if	1	;There is more than 1 active tblptr byte
 12784  0125EE  0EFC               	movlw	high _cashinv
 12785  0125F0  6EF7               	movwf	tblptrh,c
 12786  0125F2                     	endif
 12787  0125F2                     	if	1	;There are 3 active tblptr bytes
 12788  0125F2  0E00               	movlw	low (_cashinv shr (0+16))
 12789  0125F4  6EF8               	movwf	tblptru,c
 12790  0125F6                     	endif
 12791  0125F6  0009               	tblrd		*+
 12792  0125F8  CFF5 F021          	movff	tablat,Clear_Totals@eeaddress
 12793  0125FC  000A               	tblrd		*-
 12794  0125FE  CFF5 F022          	movff	tablat,Clear_Totals@eeaddress+1
 12795                           
 12796                           ;vend.c: 231: while(eeaddress < 0x0C)
 12797  012602  D00A               	goto	l2245
 12798  012604                     
 12799                           ;vend.c: 232: {
 12800                           ;vend.c: 233: DATAEE_WriteByte(eeaddress, 0x00);
 12801  012604  C021  F01D         	movff	Clear_Totals@eeaddress,DATAEE_WriteByte@bAdd
 12802  012608  C022  F01E         	movff	Clear_Totals@eeaddress+1,DATAEE_WriteByte@bAdd+1
 12803  01260C  0E00               	movlw	0
 12804  01260E  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12805  012610  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12806                           
 12807                           ;vend.c: 234: eeaddress++;
 12808  012614  4A21               	infsnz	Clear_Totals@eeaddress,f,c
 12809  012616  2A22               	incf	Clear_Totals@eeaddress+1,f,c
 12810  012618                     l2245:
 12811  012618  5022               	movf	Clear_Totals@eeaddress+1,w,c
 12812  01261A  E104               	bnz	u4620
 12813  01261C  0E0C               	movlw	12
 12814  01261E  5C21               	subwf	Clear_Totals@eeaddress,w,c
 12815  012620  A0D8               	btfss	status,0,c
 12816  012622  D7F0               	goto	l2246
 12817  012624                     u4620:
 12818  012624  00FF               	reset		;# 
 12819  012626  0012               	return		;funcret
 12820  012628                     __end_of_Clear_Totals:
 12821                           	opt stack 0
 12822                           tblptru	equ	0xFF8
 12823                           tblptrh	equ	0xFF7
 12824                           tblptrl	equ	0xFF6
 12825                           tablat	equ	0xFF5
 12826                           prodh	equ	0xFF4
 12827                           prodl	equ	0xFF3
 12828                           postinc0	equ	0xFEE
 12829                           wreg	equ	0xFE8
 12830                           indf2	equ	0xFDF
 12831                           postinc2	equ	0xFDE
 12832                           fsr2h	equ	0xFDA
 12833                           fsr2l	equ	0xFD9
 12834                           status	equ	0xFD8
 12835                           
 12836 ;; *************** function _Chan_link *****************
 12837 ;; Defined at:
 12838 ;;		line 507 in file "vend.c"
 12839 ;; Parameters:    Size  Location     Type
 12840 ;;		None
 12841 ;; Auto vars:     Size  Location     Type
 12842 ;;		None
 12843 ;; Return value:  Size  Location     Type
 12844 ;;                  1    wreg      void 
 12845 ;; Registers used:
 12846 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12847 ;; Tracked objects:
 12848 ;;		On entry : 0/0
 12849 ;;		On exit  : 0/0
 12850 ;;		Unchanged: 0/0
 12851 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;Total ram usage:        2 bytes
 12857 ;; Hardware stack levels used:    1
 12858 ;; Hardware stack levels required when called:   10
 12859 ;; This function calls:
 12860 ;;		_Link_chan
 12861 ;;		_Read_Service
 12862 ;;		_butindb
 12863 ;;		_get_channel
 12864 ;;		_lcd_string
 12865 ;; This function is called by:
 12866 ;;		_Vend_setup
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text75
 12871  011F6E                     __ptext75:
 12872                           	opt stack 0
 12873  011F6E                     _Chan_link:
 12874                           	opt stack 18
 12875                           
 12876                           ;vend.c: 509: lcd_string(chanlinkm, line1);
 12877                           
 12878                           ;incstack = 0
 12879  011F6E  0E6A               	movlw	low _chanlinkm
 12880  011F70  6E24               	movwf	lcd_string@lcdstring,c
 12881  011F72  0EFD               	movlw	high _chanlinkm
 12882  011F74  6E25               	movwf	lcd_string@lcdstring+1,c
 12883  011F76  0E4A               	movlw	low _line1
 12884  011F78  6EF6               	movwf	tblptrl,c
 12885  011F7A                     	if	1	;There is more than 1 active tblptr byte
 12886  011F7A  0EFC               	movlw	high _line1
 12887  011F7C  6EF7               	movwf	tblptrh,c
 12888  011F7E                     	endif
 12889  011F7E                     	if	1	;There are 3 active tblptr bytes
 12890  011F7E  0E00               	movlw	low (_line1 shr (0+16))
 12891  011F80  6EF8               	movwf	tblptru,c
 12892  011F82                     	endif
 12893  011F82  0008               	tblrd		*
 12894  011F84  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12895  011F88  EC78  F08A         	call	_lcd_string	;wreg free
 12896                           
 12897                           ;vend.c: 510: venflags.chanlink = 1;
 12898  011F8C  862E               	bsf	_venflags+1,3,c
 12899                           
 12900                           ;vend.c: 511: while(venflags.chanlink)
 12901  011F8E  D01D               	goto	l2356
 12902  011F90                     
 12903                           ;vend.c: 512: {
 12904                           ;vend.c: 513: buttons = butindb();
 12905  011F90  ECD5  F092         	call	_butindb	;wreg free
 12906  011F94  6E38               	movwf	_buttons,c	;volatile
 12907                           
 12908                           ;vend.c: 514: if(buttons != 0x00)
 12909  011F96  5038               	movf	_buttons,w,c	;volatile
 12910  011F98  B4D8               	btfsc	status,2,c
 12911  011F9A  D012               	goto	l2355
 12912                           
 12913                           ;vend.c: 515: {
 12914                           ;vend.c: 516: Link_chan(get_channel(buttons));
 12915  011F9C  5038               	movf	_buttons,w,c	;volatile
 12916  011F9E  EC3E  F095         	call	_get_channel
 12917  011FA2  EC5E  F087         	call	_Link_chan
 12918                           
 12919                           ;vend.c: 517: _delay((unsigned long)((1000)*(12000000/4000.0)));
 12920  011FA6  0E10               	movlw	16
 12921  011FA8  0100               	movlb	0	; () banked
 12922  011FAA  6FB8               	movwf	(??_Chan_link+1)& (0+255),b
 12923  011FAC  0E39               	movlw	57
 12924  011FAE  6FB7               	movwf	??_Chan_link& (0+255),b
 12925  011FB0  0E0D               	movlw	13
 12926  011FB2                     u5857:
 12927  011FB2  2EE8               	decfsz	wreg,f,c
 12928  011FB4  D7FE               	bra	u5857
 12929  011FB6  2FB7               	decfsz	??_Chan_link& (0+255),f,b
 12930  011FB8  D7FC               	bra	u5857
 12931  011FBA  2FB8               	decfsz	(??_Chan_link+1)& (0+255),f,b
 12932  011FBC  D7FA               	bra	u5857
 12933  011FBE  D000               	nop2	
 12934  011FC0                     l2355:
 12935                           
 12936                           ;vend.c: 518: }
 12937                           ;vend.c: 519: if(Read_Service() == 0x00)
 12938  011FC0  EC68  F095         	call	_Read_Service	;wreg free
 12939  011FC4  0900               	iorlw	0
 12940  011FC6  B4D8               	btfsc	status,2,c
 12941                           
 12942                           ;vend.c: 520: {
 12943                           ;vend.c: 521: venflags.chanlink = 0;
 12944  011FC8  962E               	bcf	_venflags+1,3,c
 12945  011FCA                     l2356:
 12946  011FCA  A62E               	btfss	_venflags+1,3,c
 12947  011FCC  0012               	return	
 12948  011FCE  D7E0               	goto	l2354
 12949  011FD0                     __end_of_Chan_link:
 12950                           	opt stack 0
 12951                           tblptru	equ	0xFF8
 12952                           tblptrh	equ	0xFF7
 12953                           tblptrl	equ	0xFF6
 12954                           tablat	equ	0xFF5
 12955                           prodh	equ	0xFF4
 12956                           prodl	equ	0xFF3
 12957                           postinc0	equ	0xFEE
 12958                           wreg	equ	0xFE8
 12959                           indf2	equ	0xFDF
 12960                           postinc2	equ	0xFDE
 12961                           fsr2h	equ	0xFDA
 12962                           fsr2l	equ	0xFD9
 12963                           status	equ	0xFD8
 12964                           
 12965 ;; *************** function _Link_chan *****************
 12966 ;; Defined at:
 12967 ;;		line 528 in file "vend.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;  channel         1    wreg     unsigned char 
 12970 ;; Auto vars:     Size  Location     Type
 12971 ;;  channel         1    3[BANK0 ] unsigned char 
 12972 ;;  linkflags       1    4[BANK0 ] unsigned char 
 12973 ;;  chanbit         1    2[BANK0 ] unsigned char 
 12974 ;; Return value:  Size  Location     Type
 12975 ;;                  1    wreg      void 
 12976 ;; Registers used:
 12977 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12978 ;; Tracked objects:
 12979 ;;		On entry : 0/0
 12980 ;;		On exit  : 0/0
 12981 ;;		Unchanged: 0/0
 12982 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12986 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12987 ;;Total ram usage:        5 bytes
 12988 ;; Hardware stack levels used:    1
 12989 ;; Hardware stack levels required when called:    9
 12990 ;; This function calls:
 12991 ;;		_DATAEE_ReadByte
 12992 ;;		_DATAEE_WriteByte
 12993 ;;		_Read_Service
 12994 ;;		_butindb
 12995 ;;		_displ_lflags
 12996 ;;		_lcd_string
 12997 ;; This function is called by:
 12998 ;;		_Chan_link
 12999 ;; This function uses a non-reentrant model
 13000 ;;
 13001                           
 13002                           	psect	text76
 13003  010EBC                     __ptext76:
 13004                           	opt stack 0
 13005  010EBC                     _Link_chan:
 13006                           	opt stack 18
 13007                           
 13008                           ;incstack = 0
 13009                           ;Link_chan@channel stored from wreg
 13010  010EBC  0100               	movlb	0	; () banked
 13011  010EBE  6FB5               	movwf	Link_chan@channel& (0+255),b
 13012                           
 13013                           ;vend.c: 530: venflags.linkchan = 1;
 13014  010EC0  802F               	bsf	_venflags+2,0,c
 13015                           
 13016                           ;vend.c: 531: uint8_t chanbit = buttons;
 13017  010EC2  C038  F0B4         	movff	_buttons,Link_chan@chanbit	;volatile
 13018                           
 13019                           ;vend.c: 532: uint8_t linkflags = DATAEE_ReadByte(chan1linkbits + channel);
 13020  010EC6  0E07               	movlw	low _chan1linkbits
 13021  010EC8  6EF6               	movwf	tblptrl,c
 13022  010ECA                     	if	1	;There is more than 1 active tblptr byte
 13023  010ECA  0EFC               	movlw	high _chan1linkbits
 13024  010ECC  6EF7               	movwf	tblptrh,c
 13025  010ECE                     	endif
 13026  010ECE                     	if	1	;There are 3 active tblptr bytes
 13027  010ECE  0E00               	movlw	low (_chan1linkbits shr (0+16))
 13028  010ED0  6EF8               	movwf	tblptru,c
 13029  010ED2                     	endif
 13030  010ED2  0009               	tblrd		*+
 13031  010ED4  CFF5 F0B2          	movff	tablat,??_Link_chan
 13032  010ED8  0009               	tblrd		*+
 13033  010EDA  CFF5 F0B3          	movff	tablat,??_Link_chan+1
 13034  010EDE  0100               	movlb	0	; () banked
 13035  010EE0  51B5               	movf	Link_chan@channel& (0+255),w,b
 13036  010EE2  25B2               	addwf	??_Link_chan& (0+255),w,b
 13037  010EE4  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 13038  010EE6  0E00               	movlw	0
 13039  010EE8  21B3               	addwfc	(??_Link_chan+1)& (0+255),w,b
 13040  010EEA  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 13041  010EEC  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 13042  010EF0  0100               	movlb	0	; () banked
 13043  010EF2  6FB6               	movwf	Link_chan@linkflags& (0+255),b
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;vend.c: 533: displ_lflags(channel, linkflags);
 13047  010EF4  C0B6  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
 13048  010EF8  51B5               	movf	Link_chan@channel& (0+255),w,b
 13049  010EFA  EC9D  F08C         	call	_displ_lflags
 13050                           
 13051                           ;vend.c: 534: while(venflags.linkchan)
 13052  010EFE  D047               	goto	u4320
 13053  010F00                     
 13054                           ;vend.c: 535: {
 13055                           ;vend.c: 536: buttons = butindb();
 13056  010F00  ECD5  F092         	call	_butindb	;wreg free
 13057  010F04  6E38               	movwf	_buttons,c	;volatile
 13058                           
 13059                           ;vend.c: 537: if(buttons != 0x00)
 13060  010F06  5038               	movf	_buttons,w,c	;volatile
 13061  010F08  B4D8               	btfsc	status,2,c
 13062  010F0A  D03C               	goto	l2366
 13063                           
 13064                           ;vend.c: 538: {
 13065                           ;vend.c: 539: if(buttons && linkflags)
 13066  010F0C  5038               	movf	_buttons,w,c	;volatile
 13067  010F0E  B4D8               	btfsc	status,2,c
 13068  010F10  D008               	goto	l2364
 13069  010F12  0100               	movlb	0	; () banked
 13070  010F14  51B6               	movf	Link_chan@linkflags& (0+255),w,b
 13071  010F16  B4D8               	btfsc	status,2,c
 13072  010F18  D004               	goto	l2364
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;vend.c: 540: {
 13076                           ;vend.c: 542: linkflags = linkflags & ~buttons;
 13077  010F1A  5038               	movf	_buttons,w,c	;volatile
 13078  010F1C  0AFF               	xorlw	255
 13079  010F1E  15B6               	andwf	Link_chan@linkflags& (0+255),w,b
 13080  010F20  D003               	goto	L15
 13081  010F22                     l2364:
 13082                           
 13083                           ;vend.c: 544: else
 13084                           ;vend.c: 545: {
 13085                           ;vend.c: 547: linkflags = linkflags | buttons;
 13086                           
 13087                           ; BSR set to: 0
 13088  010F22  0100               	movlb	0	; () banked
 13089  010F24  51B6               	movf	Link_chan@linkflags& (0+255),w,b
 13090  010F26  1038               	iorwf	_buttons,w,c	;volatile
 13091  010F28                     L15:
 13092  010F28  6FB6               	movwf	Link_chan@linkflags& (0+255),b
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;vend.c: 548: }
 13096                           ;vend.c: 549: DATAEE_WriteByte(chan1linkbits + channel, linkflags);
 13097                           
 13098                           ; BSR set to: 0
 13099  010F2A  0E07               	movlw	low _chan1linkbits
 13100  010F2C  6EF6               	movwf	tblptrl,c
 13101  010F2E                     	if	1	;There is more than 1 active tblptr byte
 13102  010F2E  0EFC               	movlw	high _chan1linkbits
 13103  010F30  6EF7               	movwf	tblptrh,c
 13104  010F32                     	endif
 13105  010F32                     	if	1	;There are 3 active tblptr bytes
 13106  010F32  0E00               	movlw	low (_chan1linkbits shr (0+16))
 13107  010F34  6EF8               	movwf	tblptru,c
 13108  010F36                     	endif
 13109  010F36  0009               	tblrd		*+
 13110  010F38  CFF5 F0B2          	movff	tablat,??_Link_chan
 13111  010F3C  0009               	tblrd		*+
 13112  010F3E  CFF5 F0B3          	movff	tablat,??_Link_chan+1
 13113  010F42  51B5               	movf	Link_chan@channel& (0+255),w,b
 13114  010F44  25B2               	addwf	??_Link_chan& (0+255),w,b
 13115  010F46  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
 13116  010F48  0E00               	movlw	0
 13117  010F4A  21B3               	addwfc	(??_Link_chan+1)& (0+255),w,b
 13118  010F4C  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
 13119  010F4E  C0B6  F01F         	movff	Link_chan@linkflags,DATAEE_WriteByte@bData
 13120  010F52  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 13121                           
 13122                           ;vend.c: 550: displ_lflags(channel, linkflags);
 13123  010F56  C0B6  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
 13124  010F5A  0100               	movlb	0	; () banked
 13125  010F5C  51B5               	movf	Link_chan@channel& (0+255),w,b
 13126  010F5E  EC9D  F08C         	call	_displ_lflags
 13127                           
 13128                           ;vend.c: 551: }
 13129                           ;vend.c: 552: while(Read_Service() == 0x00)
 13130  010F62  D010               	goto	l2366
 13131  010F64                     l2367:
 13132                           
 13133                           ;vend.c: 553: {
 13134                           ;vend.c: 554: venflags.linkchan = 0;
 13135  010F64  902F               	bcf	_venflags+2,0,c
 13136                           
 13137                           ;vend.c: 555: lcd_string(chanlinkm, line1);
 13138  010F66  0E6A               	movlw	low _chanlinkm
 13139  010F68  6E24               	movwf	lcd_string@lcdstring,c
 13140  010F6A  0EFD               	movlw	high _chanlinkm
 13141  010F6C  6E25               	movwf	lcd_string@lcdstring+1,c
 13142  010F6E  0E4A               	movlw	low _line1
 13143  010F70  6EF6               	movwf	tblptrl,c
 13144  010F72                     	if	1	;There is more than 1 active tblptr byte
 13145  010F72  0EFC               	movlw	high _line1
 13146  010F74  6EF7               	movwf	tblptrh,c
 13147  010F76                     	endif
 13148  010F76                     	if	1	;There are 3 active tblptr bytes
 13149  010F76  0E00               	movlw	low (_line1 shr (0+16))
 13150  010F78  6EF8               	movwf	tblptru,c
 13151  010F7A                     	endif
 13152  010F7A  0008               	tblrd		*
 13153  010F7C  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13154  010F80  EC78  F08A         	call	_lcd_string	;wreg free
 13155  010F84                     l2366:
 13156  010F84  EC68  F095         	call	_Read_Service	;wreg free
 13157  010F88  0900               	iorlw	0
 13158  010F8A  B4D8               	btfsc	status,2,c
 13159  010F8C  D7EB               	goto	l2367
 13160  010F8E                     u4320:
 13161  010F8E  A02F               	btfss	_venflags+2,0,c
 13162  010F90  0012               	return	
 13163  010F92  D7B6               	goto	l2362
 13164  010F94                     __end_of_Link_chan:
 13165                           	opt stack 0
 13166                           tblptru	equ	0xFF8
 13167                           tblptrh	equ	0xFF7
 13168                           tblptrl	equ	0xFF6
 13169                           tablat	equ	0xFF5
 13170                           prodh	equ	0xFF4
 13171                           prodl	equ	0xFF3
 13172                           postinc0	equ	0xFEE
 13173                           wreg	equ	0xFE8
 13174                           indf2	equ	0xFDF
 13175                           postinc2	equ	0xFDE
 13176                           fsr2h	equ	0xFDA
 13177                           fsr2l	equ	0xFD9
 13178                           status	equ	0xFD8
 13179                           
 13180 ;; *************** function _displ_lflags *****************
 13181 ;; Defined at:
 13182 ;;		line 57 in file "lcd.c"
 13183 ;; Parameters:    Size  Location     Type
 13184 ;;  chanel          1    wreg     unsigned char 
 13185 ;;  linkflgs        1   30[COMRAM] unsigned char 
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;  chanel          1   31[COMRAM] unsigned char 
 13188 ;;  lchan           1   32[COMRAM] unsigned char 
 13189 ;; Return value:  Size  Location     Type
 13190 ;;                  1    wreg      void 
 13191 ;; Registers used:
 13192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13193 ;; Tracked objects:
 13194 ;;		On entry : 0/0
 13195 ;;		On exit  : 0/0
 13196 ;;		Unchanged: 0/0
 13197 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13198 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13202 ;;Total ram usage:        3 bytes
 13203 ;; Hardware stack levels used:    1
 13204 ;; Hardware stack levels required when called:    8
 13205 ;; This function calls:
 13206 ;;		_lcd_dispadd
 13207 ;;		_lcd_string
 13208 ;;		_lcd_writeC
 13209 ;; This function is called by:
 13210 ;;		_Link_chan
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           	psect	text77
 13215  01193A                     __ptext77:
 13216                           	opt stack 0
 13217  01193A                     _displ_lflags:
 13218                           	opt stack 18
 13219                           
 13220                           ;incstack = 0
 13221                           ;displ_lflags@chanel stored from wreg
 13222  01193A  6E2A               	movwf	displ_lflags@chanel,c
 13223                           
 13224                           ;lcd.c: 59: lcd_string(chanmsg, line1);
 13225  01193C  0E66               	movlw	low _chanmsg
 13226  01193E  6E24               	movwf	lcd_string@lcdstring,c
 13227  011940  0EFF               	movlw	high _chanmsg
 13228  011942  6E25               	movwf	lcd_string@lcdstring+1,c
 13229  011944  0E4A               	movlw	low _line1
 13230  011946  6EF6               	movwf	tblptrl,c
 13231  011948                     	if	1	;There is more than 1 active tblptr byte
 13232  011948  0EFC               	movlw	high _line1
 13233  01194A  6EF7               	movwf	tblptrh,c
 13234  01194C                     	endif
 13235  01194C                     	if	1	;There are 3 active tblptr bytes
 13236  01194C  0E00               	movlw	low (_line1 shr (0+16))
 13237  01194E  6EF8               	movwf	tblptru,c
 13238  011950                     	endif
 13239  011950  0008               	tblrd		*
 13240  011952  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13241  011956  EC78  F08A         	call	_lcd_string	;wreg free
 13242                           
 13243                           ;lcd.c: 60: lcd_writeC(++chanel | 0x30);
 13244  01195A  2A2A               	incf	displ_lflags@chanel,f,c
 13245  01195C  502A               	movf	displ_lflags@chanel,w,c
 13246  01195E  0930               	iorlw	48
 13247  011960  EC84  F08F         	call	_lcd_writeC
 13248                           
 13249                           ;lcd.c: 61: uint8_t lchan = 1;
 13250  011964  0E01               	movlw	1
 13251  011966  6E2B               	movwf	displ_lflags@lchan,c
 13252                           
 13253                           ;lcd.c: 63: lcd_string(linkmsg, line2);
 13254  011968  0E72               	movlw	low _linkmsg
 13255  01196A  6E24               	movwf	lcd_string@lcdstring,c
 13256  01196C  0EFF               	movlw	high _linkmsg
 13257  01196E  6E25               	movwf	lcd_string@lcdstring+1,c
 13258  011970  0E49               	movlw	low _line2
 13259  011972  6EF6               	movwf	tblptrl,c
 13260  011974                     	if	1	;There is more than 1 active tblptr byte
 13261  011974  0EFC               	movlw	high _line2
 13262  011976  6EF7               	movwf	tblptrh,c
 13263  011978                     	endif
 13264  011978                     	if	1	;There are 3 active tblptr bytes
 13265  011978  0E00               	movlw	low (_line2 shr (0+16))
 13266  01197A  6EF8               	movwf	tblptru,c
 13267  01197C                     	endif
 13268  01197C  0008               	tblrd		*
 13269  01197E  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13270  011982  EC78  F08A         	call	_lcd_string	;wreg free
 13271                           
 13272                           ;lcd.c: 64: lcd_dispadd(line3);
 13273  011986  0E48               	movlw	low _line3
 13274  011988  6EF6               	movwf	tblptrl,c
 13275  01198A                     	if	1	;There is more than 1 active tblptr byte
 13276  01198A  0EFC               	movlw	high _line3
 13277  01198C  6EF7               	movwf	tblptrh,c
 13278  01198E                     	endif
 13279  01198E                     	if	1	;There are 3 active tblptr bytes
 13280  01198E  0E00               	movlw	low (_line3 shr (0+16))
 13281  011990  6EF8               	movwf	tblptru,c
 13282  011992                     	endif
 13283  011992  0008               	tblrd		*
 13284  011994  50F5               	movf	tablat,w,c
 13285  011996  EC74  F095         	call	_lcd_dispadd
 13286                           
 13287                           ;lcd.c: 65: while(lchan < 0x09)
 13288  01199A  D010               	goto	l1604
 13289  01199C                     l1605:
 13290                           
 13291                           ;lcd.c: 66: {
 13292                           ;lcd.c: 67: if(linkflgs & 0x01)
 13293  01199C  A029               	btfss	displ_lflags@linkflgs,0,c
 13294  01199E  D00A               	goto	l1606
 13295                           
 13296                           ;lcd.c: 68: {
 13297                           ;lcd.c: 69: lcd_writeC(lchan | 0x30);
 13298  0119A0  502B               	movf	displ_lflags@lchan,w,c
 13299  0119A2  0930               	iorlw	48
 13300  0119A4  EC84  F08F         	call	_lcd_writeC
 13301                           
 13302                           ;lcd.c: 70: lcd_writeC(',');
 13303  0119A8  0E2C               	movlw	44
 13304  0119AA  EC84  F08F         	call	_lcd_writeC
 13305                           
 13306                           ;lcd.c: 71: lcd_writeC(' ');
 13307  0119AE  0E20               	movlw	32
 13308  0119B0  EC84  F08F         	call	_lcd_writeC
 13309  0119B4                     l1606:
 13310                           
 13311                           ;lcd.c: 72: }
 13312                           ;lcd.c: 73: lchan++;
 13313  0119B4  2A2B               	incf	displ_lflags@lchan,f,c
 13314                           
 13315                           ;lcd.c: 74: linkflgs = linkflgs >> 1;
 13316  0119B6  90D8               	bcf	status,0,c
 13317  0119B8  3029               	rrcf	displ_lflags@linkflgs,w,c
 13318  0119BA  6E29               	movwf	displ_lflags@linkflgs,c
 13319  0119BC                     l1604:
 13320  0119BC  0E08               	movlw	8
 13321  0119BE  642B               	cpfsgt	displ_lflags@lchan,c
 13322  0119C0  D7ED               	goto	l1605
 13323  0119C2  0012               	return	
 13324  0119C4                     __end_of_displ_lflags:
 13325                           	opt stack 0
 13326                           tblptru	equ	0xFF8
 13327                           tblptrh	equ	0xFF7
 13328                           tblptrl	equ	0xFF6
 13329                           tablat	equ	0xFF5
 13330                           prodh	equ	0xFF4
 13331                           prodl	equ	0xFF3
 13332                           postinc0	equ	0xFEE
 13333                           wreg	equ	0xFE8
 13334                           indf2	equ	0xFDF
 13335                           postinc2	equ	0xFDE
 13336                           fsr2h	equ	0xFDA
 13337                           fsr2l	equ	0xFD9
 13338                           status	equ	0xFD8
 13339                           
 13340 ;; *************** function _Read_Service *****************
 13341 ;; Defined at:
 13342 ;;		line 306 in file "vend.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;		None
 13345 ;; Auto vars:     Size  Location     Type
 13346 ;;  senval          1   18[COMRAM] unsigned char 
 13347 ;; Return value:  Size  Location     Type
 13348 ;;                  1    wreg      unsigned char 
 13349 ;; Registers used:
 13350 ;;		wreg, status,2
 13351 ;; Tracked objects:
 13352 ;;		On entry : 0/0
 13353 ;;		On exit  : 0/0
 13354 ;;		Unchanged: 0/0
 13355 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13360 ;;Total ram usage:        1 bytes
 13361 ;; Hardware stack levels used:    1
 13362 ;; Hardware stack levels required when called:    2
 13363 ;; This function calls:
 13364 ;;		Nothing
 13365 ;; This function is called by:
 13366 ;;		_price_set
 13367 ;;		_Vend_settime
 13368 ;;		_Chan_link
 13369 ;;		_Link_chan
 13370 ;;		_Sens_off
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           	psect	text78
 13375  012AD0                     __ptext78:
 13376                           	opt stack 0
 13377  012AD0                     _Read_Service:
 13378                           	opt stack 26
 13379                           
 13380                           ;vend.c: 308: DAC1CON1 = 0x01;
 13381                           
 13382                           ;incstack = 0
 13383  012AD0  0E01               	movlw	1
 13384  012AD2  010F               	movlb	15	; () banked
 13385  012AD4  6F34               	movwf	52,b	;volatile
 13386                           
 13387                           ; BSR set to: 15
 13388                           ;vend.c: 309: _delay((unsigned long)((50)*(12000000/4000000.0)));
 13389  012AD6  0E32               	movlw	50
 13390  012AD8                     u5867:
 13391  012AD8  2EE8               	decfsz	wreg,f,c
 13392  012ADA  D7FE               	bra	u5867
 13393                           
 13394                           ;vend.c: 310: uint8_t senval = CMOUT;
 13395  012ADC  CF3D F01D          	movff	3901,Read_Service@senval	;volatile
 13396                           
 13397                           ;vend.c: 311: DAC1CON1 = sensorval;
 13398  012AE0  C036  FF34         	movff	_sensorval,3892	;volatile
 13399                           
 13400                           ;vend.c: 312: return senval;
 13401  012AE4  501D               	movf	Read_Service@senval,w,c
 13402  012AE6  0012               	return	
 13403  012AE8                     __end_of_Read_Service:
 13404                           	opt stack 0
 13405                           tblptru	equ	0xFF8
 13406                           tblptrh	equ	0xFF7
 13407                           tblptrl	equ	0xFF6
 13408                           tablat	equ	0xFF5
 13409                           prodh	equ	0xFF4
 13410                           prodl	equ	0xFF3
 13411                           postinc0	equ	0xFEE
 13412                           wreg	equ	0xFE8
 13413                           indf2	equ	0xFDF
 13414                           postinc2	equ	0xFDE
 13415                           fsr2h	equ	0xFDA
 13416                           fsr2l	equ	0xFD9
 13417                           status	equ	0xFD8
 13418                           
 13419 ;; *************** function _Sensor_set *****************
 13420 ;; Defined at:
 13421 ;;		line 315 in file "vend.c"
 13422 ;; Parameters:    Size  Location     Type
 13423 ;;		None
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;  dacpos          1   33[COMRAM] unsigned char 
 13426 ;; Return value:  Size  Location     Type
 13427 ;;                  1    wreg      void 
 13428 ;; Registers used:
 13429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13430 ;; Tracked objects:
 13431 ;;		On entry : 0/0
 13432 ;;		On exit  : 0/0
 13433 ;;		Unchanged: 0/0
 13434 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13439 ;;Total ram usage:        1 bytes
 13440 ;; Hardware stack levels used:    1
 13441 ;; Hardware stack levels required when called:    9
 13442 ;; This function calls:
 13443 ;;		_butindb
 13444 ;;		_displ_sens
 13445 ;;		_lcd_string
 13446 ;; This function is called by:
 13447 ;;		_enter_service
 13448 ;; This function uses a non-reentrant model
 13449 ;;
 13450                           
 13451                           	psect	text79
 13452  010F94                     __ptext79:
 13453                           	opt stack 0
 13454  010F94                     _Sensor_set:
 13455                           	opt stack 20
 13456                           
 13457                           ;vend.c: 317: mdbflags.endis = 1;
 13458                           
 13459                           ;incstack = 0
 13460  010F94  8C3F               	bsf	_mdbflags,6,c
 13461                           
 13462                           ;vend.c: 319: lcd_string(sensmsg, line1);
 13463  010F96  0E7E               	movlw	low _sensmsg
 13464  010F98  6E24               	movwf	lcd_string@lcdstring,c
 13465  010F9A  0EFF               	movlw	high _sensmsg
 13466  010F9C  6E25               	movwf	lcd_string@lcdstring+1,c
 13467  010F9E  0E4A               	movlw	low _line1
 13468  010FA0  6EF6               	movwf	tblptrl,c
 13469  010FA2                     	if	1	;There is more than 1 active tblptr byte
 13470  010FA2  0EFC               	movlw	high _line1
 13471  010FA4  6EF7               	movwf	tblptrh,c
 13472  010FA6                     	endif
 13473  010FA6                     	if	1	;There are 3 active tblptr bytes
 13474  010FA6  0E00               	movlw	low (_line1 shr (0+16))
 13475  010FA8  6EF8               	movwf	tblptru,c
 13476  010FAA                     	endif
 13477  010FAA  0008               	tblrd		*
 13478  010FAC  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13479  010FB0  EC78  F08A         	call	_lcd_string	;wreg free
 13480                           
 13481                           ;vend.c: 321: senspos = bflag + 2;
 13482  010FB4  5047               	movf	_bflag,w,c
 13483  010FB6  0F02               	addlw	2
 13484  010FB8  6E35               	movwf	_senspos,c	;volatile
 13485                           
 13486                           ;vend.c: 323: lcd_string(dacmsg, line2);
 13487  010FBA  0E4C               	movlw	low _dacmsg
 13488  010FBC  6E24               	movwf	lcd_string@lcdstring,c
 13489  010FBE  0EFF               	movlw	high _dacmsg
 13490  010FC0  6E25               	movwf	lcd_string@lcdstring+1,c
 13491  010FC2  0E49               	movlw	low _line2
 13492  010FC4  6EF6               	movwf	tblptrl,c
 13493  010FC6                     	if	1	;There is more than 1 active tblptr byte
 13494  010FC6  0EFC               	movlw	high _line2
 13495  010FC8  6EF7               	movwf	tblptrh,c
 13496  010FCA                     	endif
 13497  010FCA                     	if	1	;There are 3 active tblptr bytes
 13498  010FCA  0E00               	movlw	low (_line2 shr (0+16))
 13499  010FCC  6EF8               	movwf	tblptru,c
 13500  010FCE                     	endif
 13501  010FCE  0008               	tblrd		*
 13502  010FD0  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13503  010FD4  EC78  F08A         	call	_lcd_string	;wreg free
 13504                           
 13505                           ;vend.c: 325: uint8_t dacpos = bflag + 2;
 13506  010FD8  5047               	movf	_bflag,w,c
 13507  010FDA  0F02               	addlw	2
 13508  010FDC  6E2C               	movwf	Sensor_set@dacpos,c
 13509                           
 13510                           ;vend.c: 326: displ_sens(senspos, dacpos);
 13511  010FDE  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 13512  010FE2  5035               	movf	_senspos,w,c	;volatile
 13513  010FE4  ECAA  F08E         	call	_displ_sens
 13514                           
 13515                           ;vend.c: 327: while(mdbflags.endis)
 13516  010FE8  D03D               	goto	l2287
 13517  010FEA                     
 13518                           ;vend.c: 328: {
 13519                           ;vend.c: 329: buttons = butindb();
 13520  010FEA  ECD5  F092         	call	_butindb	;wreg free
 13521  010FEE  6E38               	movwf	_buttons,c	;volatile
 13522                           
 13523                           ;vend.c: 330: switch(buttons)
 13524  010FF0  D027               	goto	l2282
 13525  010FF2  5036               	movf	_sensorval,w,c	;volatile
 13526  010FF4  0B1F               	andlw	31
 13527  010FF6  010F               	movlb	15	; () banked
 13528  010FF8  6F34               	movwf	52,b	;volatile
 13529                           
 13530                           ; BSR set to: 15
 13531  010FFA  2A36               	incf	_sensorval,f,c	;volatile
 13532                           
 13533                           ; BSR set to: 15
 13534                           ;vend.c: 333: displ_sens(senspos, dacpos);
 13535  010FFC  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 13536  011000  5035               	movf	_senspos,w,c	;volatile
 13537  011002  ECAA  F08E         	call	_displ_sens
 13538                           
 13539                           ;vend.c: 334: break;
 13540  011006  D026               	goto	l2284
 13541  011008  5036               	movf	_sensorval,w,c	;volatile
 13542  01100A  0B1F               	andlw	31
 13543  01100C  010F               	movlb	15	; () banked
 13544  01100E  6F34               	movwf	52,b	;volatile
 13545                           
 13546                           ; BSR set to: 15
 13547  011010  0636               	decf	_sensorval,f,c	;volatile
 13548                           
 13549                           ; BSR set to: 15
 13550                           ;vend.c: 336: displ_sens(senspos, dacpos);
 13551  011012  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 13552  011016  5035               	movf	_senspos,w,c	;volatile
 13553  011018  ECAA  F08E         	call	_displ_sens
 13554                           
 13555                           ;vend.c: 337: break;
 13556  01101C  D01B               	goto	l2284
 13557  01101E                     l2286:
 13558  01101E  9C3F               	bcf	_mdbflags,6,c
 13559                           
 13560                           ;vend.c: 339: lcd_string(servmsg, line1);
 13561  011020  0E59               	movlw	low _servmsg
 13562  011022  6E24               	movwf	lcd_string@lcdstring,c
 13563  011024  0EFC               	movlw	high _servmsg
 13564  011026  6E25               	movwf	lcd_string@lcdstring+1,c
 13565  011028  0E4A               	movlw	low _line1
 13566  01102A  6EF6               	movwf	tblptrl,c
 13567  01102C                     	if	1	;There is more than 1 active tblptr byte
 13568  01102C  0EFC               	movlw	high _line1
 13569  01102E  6EF7               	movwf	tblptrh,c
 13570  011030                     	endif
 13571  011030                     	if	1	;There are 3 active tblptr bytes
 13572  011030  0E00               	movlw	low (_line1 shr (0+16))
 13573  011032  6EF8               	movwf	tblptru,c
 13574  011034                     	endif
 13575  011034  0008               	tblrd		*
 13576  011036  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13577  01103A  EC78  F08A         	call	_lcd_string	;wreg free
 13578                           
 13579                           ;vend.c: 341: }
 13580                           
 13581                           ;vend.c: 340: break;
 13582  01103E  D00A               	goto	l2284
 13583  011040                     l2282:
 13584  011040  5038               	movf	_buttons,w,c	;volatile
 13585                           
 13586                           ; Switch size 1, requested type "space"
 13587                           ; Number of cases is 3, Range of values is 1 to 128
 13588                           ; switch strategies available:
 13589                           ; Name         Instructions Cycles
 13590                           ; simple_byte           10     6 (average)
 13591                           ;	Chosen strategy is simple_byte
 13592  011042  0A01               	xorlw	1	; case 1
 13593  011044  B4D8               	btfsc	status,2,c
 13594  011046  D7D5               	goto	l2283
 13595  011048  0A03               	xorlw	3	; case 2
 13596  01104A  B4D8               	btfsc	status,2,c
 13597  01104C  D7DD               	goto	l2285
 13598  01104E  0A82               	xorlw	130	; case 128
 13599  011050  B4D8               	btfsc	status,2,c
 13600  011052  D7E5               	goto	l2286
 13601  011054                     l2284:
 13602                           
 13603                           ;vend.c: 342: if(PIR4bits.TMR3IF)
 13604  011054  010E               	movlb	14	; () banked
 13605  011056  A5CE               	btfss	206,2,b	;volatile
 13606  011058  D005               	goto	l2287
 13607                           
 13608                           ; BSR set to: 14
 13609                           ;vend.c: 343: {
 13610                           ;vend.c: 344: displ_sens(senspos, dacpos);
 13611  01105A  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 13612  01105E  5035               	movf	_senspos,w,c	;volatile
 13613  011060  ECAA  F08E         	call	_displ_sens
 13614  011064                     l2287:
 13615  011064  AC3F               	btfss	_mdbflags,6,c
 13616  011066  0012               	return	
 13617  011068  D7C0               	goto	l2281
 13618  01106A                     __end_of_Sensor_set:
 13619                           	opt stack 0
 13620                           tblptru	equ	0xFF8
 13621                           tblptrh	equ	0xFF7
 13622                           tblptrl	equ	0xFF6
 13623                           tablat	equ	0xFF5
 13624                           prodh	equ	0xFF4
 13625                           prodl	equ	0xFF3
 13626                           postinc0	equ	0xFEE
 13627                           wreg	equ	0xFE8
 13628                           indf2	equ	0xFDF
 13629                           postinc2	equ	0xFDE
 13630                           fsr2h	equ	0xFDA
 13631                           fsr2l	equ	0xFD9
 13632                           status	equ	0xFD8
 13633                           
 13634 ;; *************** function _displ_sens *****************
 13635 ;; Defined at:
 13636 ;;		line 40 in file "lcd.c"
 13637 ;; Parameters:    Size  Location     Type
 13638 ;;  smsgpos         1    wreg     unsigned char 
 13639 ;;  dmsgpos         1   31[COMRAM] unsigned char 
 13640 ;; Auto vars:     Size  Location     Type
 13641 ;;  smsgpos         1   32[COMRAM] unsigned char 
 13642 ;; Return value:  Size  Location     Type
 13643 ;;                  1    wreg      void 
 13644 ;; Registers used:
 13645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13646 ;; Tracked objects:
 13647 ;;		On entry : 0/0
 13648 ;;		On exit  : 0/0
 13649 ;;		Unchanged: 0/0
 13650 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13651 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13655 ;;Total ram usage:        2 bytes
 13656 ;; Hardware stack levels used:    1
 13657 ;; Hardware stack levels required when called:    8
 13658 ;; This function calls:
 13659 ;;		_CMP1_GetOutputStatus
 13660 ;;		_DATAEE_WriteByte
 13661 ;;		_displ_hex
 13662 ;;		_lcd_dispadd
 13663 ;;		_lcd_string
 13664 ;; This function is called by:
 13665 ;;		_Sensor_set
 13666 ;; This function uses a non-reentrant model
 13667 ;;
 13668                           
 13669                           	psect	text80
 13670  011D54                     __ptext80:
 13671                           	opt stack 0
 13672  011D54                     _displ_sens:
 13673                           	opt stack 20
 13674                           
 13675                           ;incstack = 0
 13676                           ;displ_sens@smsgpos stored from wreg
 13677  011D54  6E2B               	movwf	displ_sens@smsgpos,c
 13678                           
 13679                           ;lcd.c: 42: if(CMP1_GetOutputStatus())
 13680  011D56  EC0E  F096         	call	_CMP1_GetOutputStatus	;wreg free
 13681  011D5A  0900               	iorlw	0
 13682  011D5C  B4D8               	btfsc	status,2,c
 13683  011D5E  D009               	goto	l1599
 13684                           
 13685                           ;lcd.c: 43: {
 13686                           ;lcd.c: 44: lcd_string(offmsg, smsgpos);
 13687  011D60  0EF2               	movlw	low _offmsg
 13688  011D62  6E24               	movwf	lcd_string@lcdstring,c
 13689  011D64  0EFF               	movlw	high _offmsg
 13690  011D66  6E25               	movwf	lcd_string@lcdstring+1,c
 13691  011D68  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
 13692  011D6C  EC78  F08A         	call	_lcd_string	;wreg free
 13693                           
 13694                           ;lcd.c: 45: }
 13695  011D70  D008               	goto	l1600
 13696  011D72                     l1599:
 13697                           
 13698                           ;lcd.c: 46: else
 13699                           ;lcd.c: 47: {
 13700                           ;lcd.c: 48: lcd_string(onmsg, smsgpos);
 13701  011D72  0EF6               	movlw	low _onmsg
 13702  011D74  6E24               	movwf	lcd_string@lcdstring,c
 13703  011D76  0EFF               	movlw	high _onmsg
 13704  011D78  6E25               	movwf	lcd_string@lcdstring+1,c
 13705  011D7A  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
 13706  011D7E  EC78  F08A         	call	_lcd_string	;wreg free
 13707  011D82                     l1600:
 13708                           
 13709                           ;lcd.c: 49: }
 13710                           ;lcd.c: 50: DATAEE_WriteByte(sensval, sensorval);
 13711  011D82  0E0D               	movlw	low _sensval
 13712  011D84  6EF6               	movwf	tblptrl,c
 13713  011D86                     	if	1	;There is more than 1 active tblptr byte
 13714  011D86  0EFC               	movlw	high _sensval
 13715  011D88  6EF7               	movwf	tblptrh,c
 13716  011D8A                     	endif
 13717  011D8A                     	if	1	;There are 3 active tblptr bytes
 13718  011D8A  0E00               	movlw	low (_sensval shr (0+16))
 13719  011D8C  6EF8               	movwf	tblptru,c
 13720  011D8E                     	endif
 13721  011D8E  0009               	tblrd		*+
 13722  011D90  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 13723  011D94  000A               	tblrd		*-
 13724  011D96  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 13725  011D9A  C036  F01F         	movff	_sensorval,DATAEE_WriteByte@bData	;volatile
 13726  011D9E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 13727                           
 13728                           ;lcd.c: 51: lcd_string(clrmsg, dmsgpos);
 13729  011DA2  0E93               	movlw	low _clrmsg
 13730  011DA4  6E24               	movwf	lcd_string@lcdstring,c
 13731  011DA6  0EFF               	movlw	high _clrmsg
 13732  011DA8  6E25               	movwf	lcd_string@lcdstring+1,c
 13733  011DAA  C02A  F026         	movff	displ_sens@dmsgpos,lcd_string@lcdline
 13734  011DAE  EC78  F08A         	call	_lcd_string	;wreg free
 13735                           
 13736                           ;lcd.c: 52: lcd_dispadd(dmsgpos);
 13737  011DB2  502A               	movf	displ_sens@dmsgpos,w,c
 13738  011DB4  EC74  F095         	call	_lcd_dispadd
 13739                           
 13740                           ;lcd.c: 53: displ_hex((uint8_t) DAC1CON1);
 13741  011DB8  010F               	movlb	15	; () banked
 13742  011DBA  5134               	movf	52,w,b	;volatile
 13743  011DBC  6E27               	movwf	displ_hex@hexnum,c
 13744  011DBE  6A28               	clrf	displ_hex@hexnum+1,c
 13745  011DC0  6A29               	clrf	displ_hex@hexnum+2,c
 13746  011DC2  ECC3  F089         	call	_displ_hex	;wreg free
 13747  011DC6  0012               	return		;funcret
 13748  011DC8                     __end_of_displ_sens:
 13749                           	opt stack 0
 13750                           tblptru	equ	0xFF8
 13751                           tblptrh	equ	0xFF7
 13752                           tblptrl	equ	0xFF6
 13753                           tablat	equ	0xFF5
 13754                           prodh	equ	0xFF4
 13755                           prodl	equ	0xFF3
 13756                           postinc0	equ	0xFEE
 13757                           wreg	equ	0xFE8
 13758                           indf2	equ	0xFDF
 13759                           postinc2	equ	0xFDE
 13760                           fsr2h	equ	0xFDA
 13761                           fsr2l	equ	0xFD9
 13762                           status	equ	0xFD8
 13763                           
 13764 ;; *************** function _Hopper_coin *****************
 13765 ;; Defined at:
 13766 ;;		line 239 in file "vend.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;		None
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;  coinval         1   33[COMRAM] unsigned char 
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  1    wreg      void 
 13773 ;; Registers used:
 13774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;Total ram usage:        1 bytes
 13785 ;; Hardware stack levels used:    1
 13786 ;; Hardware stack levels required when called:    9
 13787 ;; This function calls:
 13788 ;;		_DATAEE_ReadByte
 13789 ;;		_Update_Hopcoin
 13790 ;;		_butindb
 13791 ;;		_displ_hex
 13792 ;;		_lcd_dispadd
 13793 ;;		_lcd_string
 13794 ;; This function is called by:
 13795 ;;		_enter_service
 13796 ;; This function uses a non-reentrant model
 13797 ;;
 13798                           
 13799                           	psect	text81
 13800  01106A                     __ptext81:
 13801                           	opt stack 0
 13802  01106A                     _Hopper_coin:
 13803                           	opt stack 20
 13804                           
 13805                           ;vend.c: 241: lcd_string(hoppcoin, line1);
 13806                           
 13807                           ;incstack = 0
 13808  01106A  0EA1               	movlw	low _hoppcoin
 13809  01106C  6E24               	movwf	lcd_string@lcdstring,c
 13810  01106E  0EFD               	movlw	high _hoppcoin
 13811  011070  6E25               	movwf	lcd_string@lcdstring+1,c
 13812  011072  0E4A               	movlw	low _line1
 13813  011074  6EF6               	movwf	tblptrl,c
 13814  011076                     	if	1	;There is more than 1 active tblptr byte
 13815  011076  0EFC               	movlw	high _line1
 13816  011078  6EF7               	movwf	tblptrh,c
 13817  01107A                     	endif
 13818  01107A                     	if	1	;There are 3 active tblptr bytes
 13819  01107A  0E00               	movlw	low (_line1 shr (0+16))
 13820  01107C  6EF8               	movwf	tblptru,c
 13821  01107E                     	endif
 13822  01107E  0008               	tblrd		*
 13823  011080  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13824  011084  EC78  F08A         	call	_lcd_string	;wreg free
 13825                           
 13826                           ;vend.c: 242: mdbflags.endis = 1;
 13827  011088  8C3F               	bsf	_mdbflags,6,c
 13828                           
 13829                           ;vend.c: 243: senspos = bflag + 2;
 13830  01108A  5047               	movf	_bflag,w,c
 13831  01108C  0F02               	addlw	2
 13832  01108E  6E35               	movwf	_senspos,c	;volatile
 13833                           
 13834                           ;vend.c: 244: uint8_t coinval = DATAEE_ReadByte(hopcoin);
 13835  011090  0E09               	movlw	low _hopcoin
 13836  011092  6EF6               	movwf	tblptrl,c
 13837  011094                     	if	1	;There is more than 1 active tblptr byte
 13838  011094  0EFC               	movlw	high _hopcoin
 13839  011096  6EF7               	movwf	tblptrh,c
 13840  011098                     	endif
 13841  011098                     	if	1	;There are 3 active tblptr bytes
 13842  011098  0E00               	movlw	low (_hopcoin shr (0+16))
 13843  01109A  6EF8               	movwf	tblptru,c
 13844  01109C                     	endif
 13845  01109C  0009               	tblrd		*+
 13846  01109E  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 13847  0110A2  000A               	tblrd		*-
 13848  0110A4  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 13849  0110A8  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 13850  0110AC  6E2C               	movwf	Hopper_coin@coinval,c
 13851                           
 13852                           ;vend.c: 245: lcd_dispadd(senspos);
 13853  0110AE  5035               	movf	_senspos,w,c	;volatile
 13854  0110B0  EC74  F095         	call	_lcd_dispadd
 13855                           
 13856                           ;vend.c: 246: displ_hex((uint24_t)coinval);
 13857  0110B4  502C               	movf	Hopper_coin@coinval,w,c
 13858  0110B6  6E27               	movwf	displ_hex@hexnum,c
 13859  0110B8  6A28               	clrf	displ_hex@hexnum+1,c
 13860  0110BA  6A29               	clrf	displ_hex@hexnum+2,c
 13861  0110BC  ECC3  F089         	call	_displ_hex	;wreg free
 13862                           
 13863                           ;vend.c: 247: while(mdbflags.endis)
 13864  0110C0  D03C               	goto	l2251
 13865  0110C2                     
 13866                           ;vend.c: 248: {
 13867                           ;vend.c: 249: buttons = butindb();
 13868  0110C2  ECD5  F092         	call	_butindb	;wreg free
 13869  0110C6  6E38               	movwf	_buttons,c	;volatile
 13870                           
 13871                           ;vend.c: 250: switch(buttons)
 13872  0110C8  D01F               	goto	l2253
 13873  0110CA  0E01               	movlw	1
 13874  0110CC  6E2A               	movwf	Update_Hopcoin@direction,c
 13875  0110CE  502C               	movf	Hopper_coin@coinval,w,c
 13876  0110D0  ECAC  F08D         	call	_Update_Hopcoin
 13877                           
 13878                           ;vend.c: 253: break;
 13879  0110D4  D023               	goto	l2255
 13880  0110D6  0E02               	movlw	2
 13881  0110D8  6E2A               	movwf	Update_Hopcoin@direction,c
 13882  0110DA  502C               	movf	Hopper_coin@coinval,w,c
 13883  0110DC  ECAC  F08D         	call	_Update_Hopcoin
 13884                           
 13885                           ;vend.c: 255: break;
 13886  0110E0  D01D               	goto	l2255
 13887  0110E2                     l2257:
 13888  0110E2  9C3F               	bcf	_mdbflags,6,c
 13889                           
 13890                           ;vend.c: 257: lcd_string(servmsg, line1);
 13891  0110E4  0E59               	movlw	low _servmsg
 13892  0110E6  6E24               	movwf	lcd_string@lcdstring,c
 13893  0110E8  0EFC               	movlw	high _servmsg
 13894  0110EA  6E25               	movwf	lcd_string@lcdstring+1,c
 13895  0110EC  0E4A               	movlw	low _line1
 13896  0110EE  6EF6               	movwf	tblptrl,c
 13897  0110F0                     	if	1	;There is more than 1 active tblptr byte
 13898  0110F0  0EFC               	movlw	high _line1
 13899  0110F2  6EF7               	movwf	tblptrh,c
 13900  0110F4                     	endif
 13901  0110F4                     	if	1	;There are 3 active tblptr bytes
 13902  0110F4  0E00               	movlw	low (_line1 shr (0+16))
 13903  0110F6  6EF8               	movwf	tblptru,c
 13904  0110F8                     	endif
 13905  0110F8  0008               	tblrd		*
 13906  0110FA  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13907  0110FE  EC78  F08A         	call	_lcd_string	;wreg free
 13908                           
 13909                           ;vend.c: 258: buttons = 0x00;
 13910  011102  0E00               	movlw	0
 13911  011104  6E38               	movwf	_buttons,c	;volatile
 13912                           
 13913                           ;vend.c: 260: }
 13914                           
 13915                           ;vend.c: 259: break;
 13916  011106  D00A               	goto	l2255
 13917  011108                     l2253:
 13918  011108  5038               	movf	_buttons,w,c	;volatile
 13919                           
 13920                           ; Switch size 1, requested type "space"
 13921                           ; Number of cases is 3, Range of values is 1 to 128
 13922                           ; switch strategies available:
 13923                           ; Name         Instructions Cycles
 13924                           ; simple_byte           10     6 (average)
 13925                           ;	Chosen strategy is simple_byte
 13926  01110A  0A01               	xorlw	1	; case 1
 13927  01110C  B4D8               	btfsc	status,2,c
 13928  01110E  D7DD               	goto	l2254
 13929  011110  0A03               	xorlw	3	; case 2
 13930  011112  B4D8               	btfsc	status,2,c
 13931  011114  D7E0               	goto	l2256
 13932  011116  0A82               	xorlw	130	; case 128
 13933  011118  B4D8               	btfsc	status,2,c
 13934  01111A  D7E3               	goto	l2257
 13935  01111C                     l2255:
 13936                           
 13937                           ;vend.c: 261: coinval = DATAEE_ReadByte(hopcoin);
 13938  01111C  0E09               	movlw	low _hopcoin
 13939  01111E  6EF6               	movwf	tblptrl,c
 13940  011120                     	if	1	;There is more than 1 active tblptr byte
 13941  011120  0EFC               	movlw	high _hopcoin
 13942  011122  6EF7               	movwf	tblptrh,c
 13943  011124                     	endif
 13944  011124                     	if	1	;There are 3 active tblptr bytes
 13945  011124  0E00               	movlw	low (_hopcoin shr (0+16))
 13946  011126  6EF8               	movwf	tblptru,c
 13947  011128                     	endif
 13948  011128  0009               	tblrd		*+
 13949  01112A  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 13950  01112E  000A               	tblrd		*-
 13951  011130  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 13952  011134  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 13953  011138  6E2C               	movwf	Hopper_coin@coinval,c
 13954  01113A                     l2251:
 13955  01113A  AC3F               	btfss	_mdbflags,6,c
 13956  01113C  0012               	return	
 13957  01113E  D7C1               	goto	l2252
 13958  011140                     __end_of_Hopper_coin:
 13959                           	opt stack 0
 13960                           tblptru	equ	0xFF8
 13961                           tblptrh	equ	0xFF7
 13962                           tblptrl	equ	0xFF6
 13963                           tablat	equ	0xFF5
 13964                           prodh	equ	0xFF4
 13965                           prodl	equ	0xFF3
 13966                           postinc0	equ	0xFEE
 13967                           wreg	equ	0xFE8
 13968                           indf2	equ	0xFDF
 13969                           postinc2	equ	0xFDE
 13970                           fsr2h	equ	0xFDA
 13971                           fsr2l	equ	0xFD9
 13972                           status	equ	0xFD8
 13973                           
 13974 ;; *************** function _butindb *****************
 13975 ;; Defined at:
 13976 ;;		line 155 in file "vend.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;		None
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;  butt            1   23[COMRAM] unsigned char 
 13981 ;;  butval          1   22[COMRAM] unsigned char 
 13982 ;; Return value:  Size  Location     Type
 13983 ;;                  1    wreg      unsigned char 
 13984 ;; Registers used:
 13985 ;;		wreg, status,2, status,0, cstack
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;Total ram usage:        4 bytes
 13996 ;; Hardware stack levels used:    1
 13997 ;; Hardware stack levels required when called:    3
 13998 ;; This function calls:
 13999 ;;		_butin
 14000 ;; This function is called by:
 14001 ;;		_enter_service
 14002 ;;		_Hopper_coin
 14003 ;;		_Sensor_set
 14004 ;;		_price_set
 14005 ;;		_set_price
 14006 ;;		_Vend_setup
 14007 ;;		_Vend_settime
 14008 ;;		_Vend_timeset
 14009 ;;		_Chan_link
 14010 ;;		_Link_chan
 14011 ;;		_Sens_off
 14012 ;;		_off_sens
 14013 ;;		_set_notes
 14014 ;;		_enable_notes
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018                           	psect	text82
 14019  0125AA                     __ptext82:
 14020                           	opt stack 0
 14021  0125AA                     _butindb:
 14022                           	opt stack 24
 14023                           
 14024                           ;vend.c: 157: if(butin() == 0)
 14025                           
 14026                           ;incstack = 0
 14027  0125AA  ECEA  F091         	call	_butin	;wreg free
 14028  0125AE  0900               	iorlw	0
 14029  0125B0  A4D8               	btfss	status,2,c
 14030  0125B2  D002               	goto	l2221
 14031                           
 14032                           ;vend.c: 158: {
 14033                           ;vend.c: 159: return 0x00;
 14034  0125B4  0E00               	movlw	0
 14035  0125B6  0012               	return	
 14036  0125B8                     l2221:
 14037                           
 14038                           ;vend.c: 160: }
 14039                           ;vend.c: 161: uint8_t butt = butin();
 14040  0125B8  ECEA  F091         	call	_butin	;wreg free
 14041  0125BC  6E22               	movwf	butindb@butt,c
 14042                           
 14043                           ;vend.c: 162: uint8_t butval = butt;
 14044  0125BE  C022  F021         	movff	butindb@butt,butindb@butval
 14045                           
 14046                           ;vend.c: 163: while(butval != 0x00)
 14047  0125C2  D003               	goto	l2223
 14048  0125C4                     
 14049                           ;vend.c: 164: {
 14050                           ;vend.c: 165: butval = butin();
 14051  0125C4  ECEA  F091         	call	_butin	;wreg free
 14052  0125C8  6E21               	movwf	butindb@butval,c
 14053  0125CA                     l2223:
 14054  0125CA  5021               	movf	butindb@butval,w,c
 14055  0125CC  A4D8               	btfss	status,2,c
 14056  0125CE  D7FA               	goto	l2224
 14057                           
 14058                           ;vend.c: 166: }
 14059                           ;vend.c: 167: _delay((unsigned long)((500)*(12000000/4000.0)));
 14060  0125D0  0E08               	movlw	8
 14061  0125D2  6E20               	movwf	(??_butindb+1)& (0+255),c
 14062  0125D4  0E9D               	movlw	157
 14063  0125D6  6E1F               	movwf	??_butindb& (0+255),c
 14064  0125D8  0E06               	movlw	6
 14065  0125DA                     u5877:
 14066  0125DA  2EE8               	decfsz	wreg,f,c
 14067  0125DC  D7FE               	bra	u5877
 14068  0125DE  2E1F               	decfsz	??_butindb& (0+255),f,c
 14069  0125E0  D7FC               	bra	u5877
 14070  0125E2  2E20               	decfsz	(??_butindb+1)& (0+255),f,c
 14071  0125E4  D7FA               	bra	u5877
 14072                           
 14073                           ;vend.c: 169: return butt;
 14074  0125E6  5022               	movf	butindb@butt,w,c
 14075  0125E8  0012               	return	
 14076  0125EA                     __end_of_butindb:
 14077                           	opt stack 0
 14078                           tblptru	equ	0xFF8
 14079                           tblptrh	equ	0xFF7
 14080                           tblptrl	equ	0xFF6
 14081                           tablat	equ	0xFF5
 14082                           prodh	equ	0xFF4
 14083                           prodl	equ	0xFF3
 14084                           postinc0	equ	0xFEE
 14085                           wreg	equ	0xFE8
 14086                           indf2	equ	0xFDF
 14087                           postinc2	equ	0xFDE
 14088                           fsr2h	equ	0xFDA
 14089                           fsr2l	equ	0xFD9
 14090                           status	equ	0xFD8
 14091                           
 14092 ;; *************** function _Update_Hopcoin *****************
 14093 ;; Defined at:
 14094 ;;		line 265 in file "vend.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;  newval          1    wreg     unsigned char 
 14097 ;;  direction       1   31[COMRAM] unsigned char 
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;  newval          1   32[COMRAM] unsigned char 
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  1    wreg      void 
 14102 ;; Registers used:
 14103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14109 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14113 ;;Total ram usage:        2 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:    8
 14116 ;; This function calls:
 14117 ;;		_DATAEE_WriteByte
 14118 ;;		_displ_hex
 14119 ;;		_lcd_dispadd
 14120 ;;		_lcd_string
 14121 ;; This function is called by:
 14122 ;;		_Hopper_coin
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126                           	psect	text83
 14127  011B58                     __ptext83:
 14128                           	opt stack 0
 14129  011B58                     _Update_Hopcoin:
 14130                           	opt stack 20
 14131                           
 14132                           ;incstack = 0
 14133                           ;Update_Hopcoin@newval stored from wreg
 14134  011B58  6E2B               	movwf	Update_Hopcoin@newval,c
 14135                           
 14136                           ;vend.c: 268: switch(newval)
 14137  011B5A  D014               	goto	l2262
 14138  011B5C  042A               	decf	Update_Hopcoin@direction,w,c
 14139  011B5E  A4D8               	btfss	status,2,c
 14140  011B60  D005               	goto	u4640
 14141                           
 14142                           ;vend.c: 271: {
 14143                           ;vend.c: 272: newval++;
 14144  011B62  2A2B               	incf	Update_Hopcoin@newval,f,c
 14145                           
 14146                           ;vend.c: 273: }
 14147  011B64  D01A               	goto	l2266
 14148  011B66  042A               	decf	Update_Hopcoin@direction,w,c
 14149  011B68  A4D8               	btfss	status,2,c
 14150  011B6A  D002               	goto	l2268
 14151  011B6C                     u4640:
 14152                           
 14153                           ;vend.c: 280: {
 14154                           ;vend.c: 281: newval = 0x05;
 14155  011B6C  0E05               	movlw	5
 14156  011B6E  D006               	goto	L17
 14157  011B70                     l2268:
 14158                           
 14159                           ;vend.c: 283: else
 14160                           ;vend.c: 284: {
 14161                           ;vend.c: 285: newval--;
 14162  011B70  062B               	decf	Update_Hopcoin@newval,f,c
 14163                           
 14164                           ;vend.c: 286: }
 14165                           ;vend.c: 287: break;
 14166  011B72  D013               	goto	l2266
 14167  011B74  042A               	decf	Update_Hopcoin@direction,w,c
 14168  011B76  A4D8               	btfss	status,2,c
 14169  011B78  D003               	goto	l2273
 14170                           
 14171                           ;vend.c: 289: {
 14172                           ;vend.c: 291: newval = 0x01;
 14173  011B7A  0E01               	movlw	1
 14174  011B7C                     L17:
 14175  011B7C  6E2B               	movwf	Update_Hopcoin@newval,c
 14176                           
 14177                           ;vend.c: 296: }
 14178                           ;vend.c: 297: break;
 14179  011B7E  D00D               	goto	l2266
 14180  011B80                     l2273:
 14181  011B80  0E02               	movlw	2
 14182  011B82  D7FC               	goto	L17
 14183  011B84                     l2262:
 14184  011B84  502B               	movf	Update_Hopcoin@newval,w,c
 14185                           
 14186                           ; Switch size 1, requested type "space"
 14187                           ; Number of cases is 3, Range of values is 1 to 5
 14188                           ; switch strategies available:
 14189                           ; Name         Instructions Cycles
 14190                           ; simple_byte           10     6 (average)
 14191                           ;	Chosen strategy is simple_byte
 14192  011B86  0A01               	xorlw	1	; case 1
 14193  011B88  B4D8               	btfsc	status,2,c
 14194  011B8A  D7E8               	goto	l2263
 14195  011B8C  0A03               	xorlw	3	; case 2
 14196  011B8E  B4D8               	btfsc	status,2,c
 14197  011B90  D7EA               	goto	l2267
 14198  011B92  0A07               	xorlw	7	; case 5
 14199  011B94  B4D8               	btfsc	status,2,c
 14200  011B96  D7EE               	goto	l2270
 14201  011B98  D7F3               	goto	l2273
 14202  011B9A                     l2266:
 14203                           
 14204                           ;vend.c: 300: lcd_string(clrmsg, senspos);
 14205  011B9A  0E93               	movlw	low _clrmsg
 14206  011B9C  6E24               	movwf	lcd_string@lcdstring,c
 14207  011B9E  0EFF               	movlw	high _clrmsg
 14208  011BA0  6E25               	movwf	lcd_string@lcdstring+1,c
 14209  011BA2  C035  F026         	movff	_senspos,lcd_string@lcdline	;volatile
 14210  011BA6  EC78  F08A         	call	_lcd_string	;wreg free
 14211                           
 14212                           ;vend.c: 301: DATAEE_WriteByte(hopcoin, newval);
 14213  011BAA  0E09               	movlw	low _hopcoin
 14214  011BAC  6EF6               	movwf	tblptrl,c
 14215  011BAE                     	if	1	;There is more than 1 active tblptr byte
 14216  011BAE  0EFC               	movlw	high _hopcoin
 14217  011BB0  6EF7               	movwf	tblptrh,c
 14218  011BB2                     	endif
 14219  011BB2                     	if	1	;There are 3 active tblptr bytes
 14220  011BB2  0E00               	movlw	low (_hopcoin shr (0+16))
 14221  011BB4  6EF8               	movwf	tblptru,c
 14222  011BB6                     	endif
 14223  011BB6  0009               	tblrd		*+
 14224  011BB8  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 14225  011BBC  000A               	tblrd		*-
 14226  011BBE  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 14227  011BC2  C02B  F01F         	movff	Update_Hopcoin@newval,DATAEE_WriteByte@bData
 14228  011BC6  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 14229                           
 14230                           ;vend.c: 302: lcd_dispadd(senspos);
 14231  011BCA  5035               	movf	_senspos,w,c	;volatile
 14232  011BCC  EC74  F095         	call	_lcd_dispadd
 14233                           
 14234                           ;vend.c: 303: displ_hex((uint24_t)newval);
 14235  011BD0  502B               	movf	Update_Hopcoin@newval,w,c
 14236  011BD2  6E27               	movwf	displ_hex@hexnum,c
 14237  011BD4  6A28               	clrf	displ_hex@hexnum+1,c
 14238  011BD6  6A29               	clrf	displ_hex@hexnum+2,c
 14239  011BD8  ECC3  F089         	call	_displ_hex	;wreg free
 14240  011BDC  0012               	return		;funcret
 14241  011BDE                     __end_of_Update_Hopcoin:
 14242                           	opt stack 0
 14243                           tblptru	equ	0xFF8
 14244                           tblptrh	equ	0xFF7
 14245                           tblptrl	equ	0xFF6
 14246                           tablat	equ	0xFF5
 14247                           prodh	equ	0xFF4
 14248                           prodl	equ	0xFF3
 14249                           postinc0	equ	0xFEE
 14250                           wreg	equ	0xFE8
 14251                           indf2	equ	0xFDF
 14252                           postinc2	equ	0xFDE
 14253                           fsr2h	equ	0xFDA
 14254                           fsr2l	equ	0xFD9
 14255                           status	equ	0xFD8
 14256                           
 14257 ;; *************** function _Clear_cred *****************
 14258 ;; Defined at:
 14259 ;;		line 349 in file "vend.c"
 14260 ;; Parameters:    Size  Location     Type
 14261 ;;		None
 14262 ;; Auto vars:     Size  Location     Type
 14263 ;;		None
 14264 ;; Return value:  Size  Location     Type
 14265 ;;                  1    wreg      void 
 14266 ;; Registers used:
 14267 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14268 ;; Tracked objects:
 14269 ;;		On entry : 0/0
 14270 ;;		On exit  : 0/0
 14271 ;;		Unchanged: 0/0
 14272 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14277 ;;Total ram usage:        2 bytes
 14278 ;; Hardware stack levels used:    1
 14279 ;; Hardware stack levels required when called:    8
 14280 ;; This function calls:
 14281 ;;		_DATAEE_WriteByte
 14282 ;;		_lcd_string
 14283 ;; This function is called by:
 14284 ;;		_enter_service
 14285 ;; This function uses a non-reentrant model
 14286 ;;
 14287                           
 14288                           	psect	text84
 14289  0116F2                     __ptext84:
 14290                           	opt stack 0
 14291  0116F2                     _Clear_cred:
 14292                           	opt stack 21
 14293                           
 14294                           ;vend.c: 351: DATAEE_WriteByte(credmem, 0x00);
 14295                           
 14296                           ;incstack = 0
 14297  0116F2  0E1B               	movlw	low _credmem
 14298  0116F4  6EF6               	movwf	tblptrl,c
 14299  0116F6                     	if	1	;There is more than 1 active tblptr byte
 14300  0116F6  0EFC               	movlw	high _credmem
 14301  0116F8  6EF7               	movwf	tblptrh,c
 14302  0116FA                     	endif
 14303  0116FA                     	if	1	;There are 3 active tblptr bytes
 14304  0116FA  0E00               	movlw	low (_credmem shr (0+16))
 14305  0116FC  6EF8               	movwf	tblptru,c
 14306  0116FE                     	endif
 14307  0116FE  0009               	tblrd		*+
 14308  011700  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 14309  011704  000A               	tblrd		*-
 14310  011706  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 14311  01170A  0E00               	movlw	0
 14312  01170C  6E1F               	movwf	DATAEE_WriteByte@bData,c
 14313  01170E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 14314                           
 14315                           ;vend.c: 352: DATAEE_WriteByte(venderrors, 0x00);
 14316  011712  0E11               	movlw	low _venderrors
 14317  011714  6EF6               	movwf	tblptrl,c
 14318  011716                     	if	1	;There is more than 1 active tblptr byte
 14319  011716  0EFC               	movlw	high _venderrors
 14320  011718  6EF7               	movwf	tblptrh,c
 14321  01171A                     	endif
 14322  01171A                     	if	1	;There are 3 active tblptr bytes
 14323  01171A  0E00               	movlw	low (_venderrors shr (0+16))
 14324  01171C  6EF8               	movwf	tblptru,c
 14325  01171E                     	endif
 14326  01171E  0009               	tblrd		*+
 14327  011720  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 14328  011724  000A               	tblrd		*-
 14329  011726  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 14330  01172A  0E00               	movlw	0
 14331  01172C  6E1F               	movwf	DATAEE_WriteByte@bData,c
 14332  01172E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 14333                           
 14334                           ;vend.c: 353: DATAEE_WriteByte(hoperror, 0x00);
 14335  011732  0EE3               	movlw	low _hoperror
 14336  011734  6EF6               	movwf	tblptrl,c
 14337  011736                     	if	1	;There is more than 1 active tblptr byte
 14338  011736  0EFB               	movlw	high _hoperror
 14339  011738  6EF7               	movwf	tblptrh,c
 14340  01173A                     	endif
 14341  01173A                     	if	1	;There are 3 active tblptr bytes
 14342  01173A  0E00               	movlw	low (_hoperror shr (0+16))
 14343  01173C  6EF8               	movwf	tblptru,c
 14344  01173E                     	endif
 14345  01173E  0009               	tblrd		*+
 14346  011740  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 14347  011744  000A               	tblrd		*-
 14348  011746  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 14349  01174A  0E00               	movlw	0
 14350  01174C  6E1F               	movwf	DATAEE_WriteByte@bData,c
 14351  01174E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 14352                           
 14353                           ;vend.c: 354: lcd_string(creditclr, line1);
 14354  011752  0E3C               	movlw	low _creditclr
 14355  011754  6E24               	movwf	lcd_string@lcdstring,c
 14356  011756  0EFF               	movlw	high _creditclr
 14357  011758  6E25               	movwf	lcd_string@lcdstring+1,c
 14358  01175A  0E4A               	movlw	low _line1
 14359  01175C  6EF6               	movwf	tblptrl,c
 14360  01175E                     	if	1	;There is more than 1 active tblptr byte
 14361  01175E  0EFC               	movlw	high _line1
 14362  011760  6EF7               	movwf	tblptrh,c
 14363  011762                     	endif
 14364  011762                     	if	1	;There are 3 active tblptr bytes
 14365  011762  0E00               	movlw	low (_line1 shr (0+16))
 14366  011764  6EF8               	movwf	tblptru,c
 14367  011766                     	endif
 14368  011766  0008               	tblrd		*
 14369  011768  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14370  01176C  EC78  F08A         	call	_lcd_string	;wreg free
 14371                           
 14372                           ;vend.c: 355: _delay((unsigned long)((1000)*(12000000/4000.0)));
 14373  011770  0E10               	movlw	16
 14374  011772  6E2A               	movwf	(??_Clear_cred+1)& (0+255),c
 14375  011774  0E39               	movlw	57
 14376  011776  6E29               	movwf	??_Clear_cred& (0+255),c
 14377  011778  0E0E               	movlw	14
 14378  01177A                     u5887:
 14379  01177A  2EE8               	decfsz	wreg,f,c
 14380  01177C  D7FE               	bra	u5887
 14381  01177E  2E29               	decfsz	??_Clear_cred& (0+255),f,c
 14382  011780  D7FC               	bra	u5887
 14383  011782  2E2A               	decfsz	(??_Clear_cred+1)& (0+255),f,c
 14384  011784  D7FA               	bra	u5887
 14385  011786  0012               	return		;funcret
 14386  011788                     __end_of_Clear_cred:
 14387                           	opt stack 0
 14388                           tblptru	equ	0xFF8
 14389                           tblptrh	equ	0xFF7
 14390                           tblptrl	equ	0xFF6
 14391                           tablat	equ	0xFF5
 14392                           prodh	equ	0xFF4
 14393                           prodl	equ	0xFF3
 14394                           postinc0	equ	0xFEE
 14395                           wreg	equ	0xFE8
 14396                           indf2	equ	0xFDF
 14397                           postinc2	equ	0xFDE
 14398                           fsr2h	equ	0xFDA
 14399                           fsr2l	equ	0xFD9
 14400                           status	equ	0xFD8
 14401                           
 14402 ;; *************** function _DATAEE_WriteByte *****************
 14403 ;; Defined at:
 14404 ;;		line 170 in file "mcc_generated_files/memory.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;  bAdd            2   18[COMRAM] unsigned int 
 14407 ;;  bData           1   20[COMRAM] unsigned char 
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
 14410 ;; Return value:  Size  Location     Type
 14411 ;;                  1    wreg      void 
 14412 ;; Registers used:
 14413 ;;		wreg, status,2, status,0
 14414 ;; Tracked objects:
 14415 ;;		On entry : 0/0
 14416 ;;		On exit  : 0/0
 14417 ;;		Unchanged: 0/0
 14418 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14419 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14423 ;;Total ram usage:        4 bytes
 14424 ;; Hardware stack levels used:    1
 14425 ;; Hardware stack levels required when called:    2
 14426 ;; This function calls:
 14427 ;;		Nothing
 14428 ;; This function is called by:
 14429 ;;		_displ_sens
 14430 ;;		_Write_NVstore
 14431 ;;		_credit_add
 14432 ;;		_credit_subtract
 14433 ;;		_Clear_Totals
 14434 ;;		_Update_Hopcoin
 14435 ;;		_Clear_cred
 14436 ;;		_set_price
 14437 ;;		_Vend_timeset
 14438 ;;		_Link_chan
 14439 ;;		_off_sens
 14440 ;;		_Reset_settings
 14441 ;;		_save_notes
 14442 ;;		_hopper_pay
 14443 ;;		_disable_channel
 14444 ;;		_update_vends
 14445 ;; This function uses a non-reentrant model
 14446 ;;
 14447                           
 14448                           	psect	text85
 14449  01269E                     __ptext85:
 14450                           	opt stack 0
 14451  01269E                     _DATAEE_WriteByte:
 14452                           	opt stack 23
 14453                           
 14454                           ;memory.c: 172: uint8_t GIEBitValue = INTCONbits.GIE;
 14455                           
 14456                           ;incstack = 0
 14457  01269E  0E00               	movlw	0
 14458  0126A0  BEF2               	btfsc	intcon,7,c	;volatile
 14459  0126A2  0E01               	movlw	1
 14460  0126A4  6E20               	movwf	DATAEE_WriteByte@GIEBitValue,c
 14461                           
 14462                           ;memory.c: 174: NVMADRH = ((bAdd >> 8) & 0x03);
 14463  0126A6  501E               	movf	DATAEE_WriteByte@bAdd+1,w,c
 14464  0126A8  0B03               	andlw	3
 14465  0126AA  6E7F               	movwf	3967,c	;volatile
 14466                           
 14467                           ;memory.c: 175: NVMADRL = (bAdd & 0xFF);
 14468  0126AC  C01D  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
 14469                           
 14470                           ;memory.c: 176: NVMDAT = bData;
 14471  0126B0  C01F  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
 14472                           
 14473                           ;memory.c: 177: NVMCON1bits.NVMREG = 0;
 14474  0126B4  0E3F               	movlw	-193
 14475  0126B6  1681               	andwf	3969,f,c	;volsfr
 14476                           
 14477                           ;memory.c: 178: NVMCON1bits.WREN = 1;
 14478  0126B8  8481               	bsf	3969,2,c	;volsfr
 14479                           
 14480                           ;memory.c: 179: INTCONbits.GIE = 0;
 14481  0126BA  9EF2               	bcf	intcon,7,c	;volatile
 14482                           
 14483                           ;memory.c: 180: NVMCON2 = 0x55;
 14484  0126BC  0E55               	movlw	85
 14485  0126BE  6E82               	movwf	3970,c	;volsfr
 14486                           
 14487                           ;memory.c: 181: NVMCON2 = 0xAA;
 14488  0126C0  0EAA               	movlw	170
 14489  0126C2  6E82               	movwf	3970,c	;volsfr
 14490                           
 14491                           ;memory.c: 182: NVMCON1bits.WR = 1;
 14492  0126C4  8281               	bsf	3969,1,c	;volsfr
 14493  0126C6                     
 14494                           ;memory.c: 185: {
 14495  0126C6  B281               	btfsc	3969,1,c	;volsfr
 14496  0126C8  D7FE               	goto	l264
 14497                           
 14498                           ;memory.c: 186: }
 14499                           ;memory.c: 188: NVMCON1bits.WREN = 0;
 14500  0126CA  9481               	bcf	3969,2,c	;volsfr
 14501                           
 14502                           ;memory.c: 189: INTCONbits.GIE = GIEBitValue;
 14503  0126CC  B020               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
 14504  0126CE  D002               	bra	u3995
 14505  0126D0  9EF2               	bcf	intcon,7,c	;volatile
 14506  0126D2  D001               	bra	u3996
 14507  0126D4                     u3995:
 14508  0126D4  8EF2               	bsf	intcon,7,c	;volatile
 14509  0126D6                     u3996:
 14510  0126D6  0012               	return		;funcret
 14511  0126D8                     __end_of_DATAEE_WriteByte:
 14512                           	opt stack 0
 14513                           tblptru	equ	0xFF8
 14514                           tblptrh	equ	0xFF7
 14515                           tblptrl	equ	0xFF6
 14516                           tablat	equ	0xFF5
 14517                           prodh	equ	0xFF4
 14518                           prodl	equ	0xFF3
 14519                           intcon	equ	0xFF2
 14520                           postinc0	equ	0xFEE
 14521                           wreg	equ	0xFE8
 14522                           indf2	equ	0xFDF
 14523                           postinc2	equ	0xFDE
 14524                           fsr2h	equ	0xFDA
 14525                           fsr2l	equ	0xFD9
 14526                           status	equ	0xFD8
 14527                           
 14528 ;; *************** function _Audit *****************
 14529 ;; Defined at:
 14530 ;;		line 194 in file "vend.c"
 14531 ;; Parameters:    Size  Location     Type
 14532 ;;		None
 14533 ;; Auto vars:     Size  Location     Type
 14534 ;;  vends           1   33[COMRAM] unsigned char 
 14535 ;; Return value:  Size  Location     Type
 14536 ;;                  1    wreg      void 
 14537 ;; Registers used:
 14538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14539 ;; Tracked objects:
 14540 ;;		On entry : 0/0
 14541 ;;		On exit  : 0/0
 14542 ;;		Unchanged: 0/0
 14543 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14547 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14548 ;;Total ram usage:        3 bytes
 14549 ;; Hardware stack levels used:    1
 14550 ;; Hardware stack levels required when called:    8
 14551 ;; This function calls:
 14552 ;;		_CMP1_GetOutputStatus
 14553 ;;		_DATAEE_ReadByte
 14554 ;;		_Read_NVstore
 14555 ;;		_butin
 14556 ;;		_displ_hex
 14557 ;;		_get_channel
 14558 ;;		_lcd_string
 14559 ;; This function is called by:
 14560 ;;		_enter_service
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text86
 14565  010000                     __ptext86:
 14566                           	opt stack 0
 14567  010000                     _Audit:
 14568                           	opt stack 21
 14569                           
 14570                           ;vend.c: 196: DAC1CON1 = 0x01;
 14571                           
 14572                           ;incstack = 0
 14573  010000  0E01               	movlw	1
 14574  010002  010F               	movlb	15	; () banked
 14575  010004  6F34               	movwf	52,b	;volatile
 14576                           
 14577                           ; BSR set to: 15
 14578                           ;vend.c: 197: Read_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 14579  010006  0E19               	movlw	low _cashinv
 14580  010008  6EF6               	movwf	tblptrl,c
 14581  01000A                     	if	1	;There is more than 1 active tblptr byte
 14582  01000A  0EFC               	movlw	high _cashinv
 14583  01000C  6EF7               	movwf	tblptrh,c
 14584  01000E                     	endif
 14585  01000E                     	if	1	;There are 3 active tblptr bytes
 14586  01000E  0E00               	movlw	low (_cashinv shr (0+16))
 14587  010010  6EF8               	movwf	tblptru,c
 14588  010012                     	endif
 14589  010012  0009               	tblrd		*+
 14590  010014  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 14591  010018  000A               	tblrd		*-
 14592  01001A  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 14593  01001E  0E4B               	movlw	low _pvcash
 14594  010020  6E21               	movwf	Read_NVstore@storemem,c
 14595  010022  0E00               	movlw	high _pvcash
 14596  010024  6E22               	movwf	Read_NVstore@storemem+1,c
 14597  010026  0E02               	movlw	2
 14598  010028  6E23               	movwf	Read_NVstore@storesize,c
 14599  01002A  EC11  F094         	call	_Read_NVstore	;wreg free
 14600                           
 14601                           ;vend.c: 198: Read_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 14602  01002E  0E15               	movlw	low _cashint
 14603  010030  6EF6               	movwf	tblptrl,c
 14604  010032                     	if	1	;There is more than 1 active tblptr byte
 14605  010032  0EFC               	movlw	high _cashint
 14606  010034  6EF7               	movwf	tblptrh,c
 14607  010036                     	endif
 14608  010036                     	if	1	;There are 3 active tblptr bytes
 14609  010036  0E00               	movlw	low (_cashint shr (0+16))
 14610  010038  6EF8               	movwf	tblptru,c
 14611  01003A                     	endif
 14612  01003A  0009               	tblrd		*+
 14613  01003C  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 14614  010040  000A               	tblrd		*-
 14615  010042  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 14616  010046  0E48               	movlw	low _pnvcash
 14617  010048  6E21               	movwf	Read_NVstore@storemem,c
 14618  01004A  0E00               	movlw	high _pnvcash
 14619  01004C  6E22               	movwf	Read_NVstore@storemem+1,c
 14620  01004E  0E03               	movlw	3
 14621  010050  6E23               	movwf	Read_NVstore@storesize,c
 14622  010052  EC11  F094         	call	_Read_NVstore	;wreg free
 14623                           
 14624                           ;vend.c: 199: lcd_string(cashinmsg, line1);
 14625  010056  0E89               	movlw	low _cashinmsg
 14626  010058  6E24               	movwf	lcd_string@lcdstring,c
 14627  01005A  0EFF               	movlw	high _cashinmsg
 14628  01005C  6E25               	movwf	lcd_string@lcdstring+1,c
 14629  01005E  0E4A               	movlw	low _line1
 14630  010060  6EF6               	movwf	tblptrl,c
 14631  010062                     	if	1	;There is more than 1 active tblptr byte
 14632  010062  0EFC               	movlw	high _line1
 14633  010064  6EF7               	movwf	tblptrh,c
 14634  010066                     	endif
 14635  010066                     	if	1	;There are 3 active tblptr bytes
 14636  010066  0E00               	movlw	low (_line1 shr (0+16))
 14637  010068  6EF8               	movwf	tblptru,c
 14638  01006A                     	endif
 14639  01006A  0008               	tblrd		*
 14640  01006C  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14641  010070  EC78  F08A         	call	_lcd_string	;wreg free
 14642                           
 14643                           ;vend.c: 200: displ_hex((uint24_t)pvcash);
 14644  010074  C04B  F027         	movff	_pvcash,displ_hex@hexnum	;volatile
 14645  010078  C04C  F028         	movff	_pvcash+1,displ_hex@hexnum+1	;volatile
 14646  01007C  6A29               	clrf	displ_hex@hexnum+2,c
 14647  01007E  ECC3  F089         	call	_displ_hex	;wreg free
 14648                           
 14649                           ;vend.c: 201: lcd_string(totalmsg, line2);
 14650  010082  0EC3               	movlw	low _totalmsg
 14651  010084  6E24               	movwf	lcd_string@lcdstring,c
 14652  010086  0EFF               	movlw	high _totalmsg
 14653  010088  6E25               	movwf	lcd_string@lcdstring+1,c
 14654  01008A  0E49               	movlw	low _line2
 14655  01008C  6EF6               	movwf	tblptrl,c
 14656  01008E                     	if	1	;There is more than 1 active tblptr byte
 14657  01008E  0EFC               	movlw	high _line2
 14658  010090  6EF7               	movwf	tblptrh,c
 14659  010092                     	endif
 14660  010092                     	if	1	;There are 3 active tblptr bytes
 14661  010092  0E00               	movlw	low (_line2 shr (0+16))
 14662  010094  6EF8               	movwf	tblptru,c
 14663  010096                     	endif
 14664  010096  0008               	tblrd		*
 14665  010098  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14666  01009C  EC78  F08A         	call	_lcd_string	;wreg free
 14667                           
 14668                           ;vend.c: 202: displ_hex(pnvcash);
 14669  0100A0  C048  F027         	movff	_pnvcash,displ_hex@hexnum	;volatile
 14670  0100A4  C049  F028         	movff	_pnvcash+1,displ_hex@hexnum+1	;volatile
 14671  0100A8  C04A  F029         	movff	_pnvcash+2,displ_hex@hexnum+2	;volatile
 14672  0100AC  ECC3  F089         	call	_displ_hex	;wreg free
 14673                           
 14674                           ;vend.c: 203: lcd_string(vendispmsg, line3);
 14675  0100B0  0EEE               	movlw	low _vendispmsg
 14676  0100B2  6E24               	movwf	lcd_string@lcdstring,c
 14677  0100B4  0EFE               	movlw	high _vendispmsg
 14678  0100B6  6E25               	movwf	lcd_string@lcdstring+1,c
 14679  0100B8  0E48               	movlw	low _line3
 14680  0100BA  6EF6               	movwf	tblptrl,c
 14681  0100BC                     	if	1	;There is more than 1 active tblptr byte
 14682  0100BC  0EFC               	movlw	high _line3
 14683  0100BE  6EF7               	movwf	tblptrh,c
 14684  0100C0                     	endif
 14685  0100C0                     	if	1	;There are 3 active tblptr bytes
 14686  0100C0  0E00               	movlw	low (_line3 shr (0+16))
 14687  0100C2  6EF8               	movwf	tblptru,c
 14688  0100C4                     	endif
 14689  0100C4  0008               	tblrd		*
 14690  0100C6  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14691  0100CA  EC78  F08A         	call	_lcd_string	;wreg free
 14692                           
 14693                           ;vend.c: 204: venflags.audit = 1;
 14694  0100CE  862F               	bsf	_venflags+2,3,c
 14695                           
 14696                           ;vend.c: 205: while(venflags.audit)
 14697  0100D0  D071               	goto	l2240
 14698  0100D2                     
 14699                           ;vend.c: 206: {
 14700                           ;vend.c: 207: buttons = butin();
 14701  0100D2  ECEA  F091         	call	_butin	;wreg free
 14702  0100D6  6E38               	movwf	_buttons,c	;volatile
 14703                           
 14704                           ;vend.c: 208: if(buttons != 0x00)
 14705  0100D8  5038               	movf	_buttons,w,c	;volatile
 14706  0100DA  B4D8               	btfsc	status,2,c
 14707  0100DC  D054               	goto	l2236
 14708                           
 14709                           ;vend.c: 209: {
 14710                           ;vend.c: 210: buttons = butin();
 14711  0100DE  ECEA  F091         	call	_butin	;wreg free
 14712  0100E2  6E38               	movwf	_buttons,c	;volatile
 14713                           
 14714                           ;vend.c: 211: lcd_string(clrline, line4);
 14715  0100E4  0E03               	movlw	low _clrline
 14716  0100E6  6E24               	movwf	lcd_string@lcdstring,c
 14717  0100E8  0EFF               	movlw	high _clrline
 14718  0100EA  6E25               	movwf	lcd_string@lcdstring+1,c
 14719  0100EC  0E47               	movlw	low _line4
 14720  0100EE  6EF6               	movwf	tblptrl,c
 14721  0100F0                     	if	1	;There is more than 1 active tblptr byte
 14722  0100F0  0EFC               	movlw	high _line4
 14723  0100F2  6EF7               	movwf	tblptrh,c
 14724  0100F4                     	endif
 14725  0100F4                     	if	1	;There are 3 active tblptr bytes
 14726  0100F4  0E00               	movlw	low (_line4 shr (0+16))
 14727  0100F6  6EF8               	movwf	tblptru,c
 14728  0100F8                     	endif
 14729  0100F8  0008               	tblrd		*
 14730  0100FA  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14731  0100FE  EC78  F08A         	call	_lcd_string	;wreg free
 14732                           
 14733                           ;vend.c: 212: channel = get_channel(buttons);
 14734  010102  5038               	movf	_buttons,w,c	;volatile
 14735  010104  EC3E  F095         	call	_get_channel
 14736  010108  6E30               	movwf	_channel,c	;volatile
 14737                           
 14738                           ;vend.c: 213: uint8_t vends = DATAEE_ReadByte(vendstore + channel);
 14739  01010A  0E17               	movlw	low _vendstore
 14740  01010C  6EF6               	movwf	tblptrl,c
 14741  01010E                     	if	1	;There is more than 1 active tblptr byte
 14742  01010E  0EFC               	movlw	high _vendstore
 14743  010110  6EF7               	movwf	tblptrh,c
 14744  010112                     	endif
 14745  010112                     	if	1	;There are 3 active tblptr bytes
 14746  010112  0E00               	movlw	low (_vendstore shr (0+16))
 14747  010114  6EF8               	movwf	tblptru,c
 14748  010116                     	endif
 14749  010116  0009               	tblrd		*+
 14750  010118  CFF5 F02A          	movff	tablat,??_Audit
 14751  01011C  0009               	tblrd		*+
 14752  01011E  CFF5 F02B          	movff	tablat,??_Audit+1
 14753  010122  5030               	movf	_channel,w,c	;volatile
 14754  010124  242A               	addwf	??_Audit,w,c
 14755  010126  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 14756  010128  0E00               	movlw	0
 14757  01012A  202B               	addwfc	??_Audit+1,w,c
 14758  01012C  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 14759  01012E  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 14760  010132  6E2C               	movwf	Audit@vends,c
 14761                           
 14762                           ;vend.c: 214: lcd_string(totalvendsm, line4);
 14763  010134  0EEB               	movlw	low _totalvendsm
 14764  010136  6E24               	movwf	lcd_string@lcdstring,c
 14765  010138  0EFF               	movlw	high _totalvendsm
 14766  01013A  6E25               	movwf	lcd_string@lcdstring+1,c
 14767  01013C  0E47               	movlw	low _line4
 14768  01013E  6EF6               	movwf	tblptrl,c
 14769  010140                     	if	1	;There is more than 1 active tblptr byte
 14770  010140  0EFC               	movlw	high _line4
 14771  010142  6EF7               	movwf	tblptrh,c
 14772  010144                     	endif
 14773  010144                     	if	1	;There are 3 active tblptr bytes
 14774  010144  0E00               	movlw	low (_line4 shr (0+16))
 14775  010146  6EF8               	movwf	tblptru,c
 14776  010148                     	endif
 14777  010148  0008               	tblrd		*
 14778  01014A  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14779  01014E  EC78  F08A         	call	_lcd_string	;wreg free
 14780                           
 14781                           ;vend.c: 215: displ_hex((uint24_t)vends);
 14782  010152  502C               	movf	Audit@vends,w,c
 14783  010154  6E27               	movwf	displ_hex@hexnum,c
 14784  010156  6A28               	clrf	displ_hex@hexnum+1,c
 14785  010158  6A29               	clrf	displ_hex@hexnum+2,c
 14786  01015A  ECC3  F089         	call	_displ_hex	;wreg free
 14787  01015E  ECEA  F091         	call	_butin	;wreg free
 14788  010162  0900               	iorlw	0
 14789  010164  A4D8               	btfss	status,2,c
 14790  010166  D7FB               	goto	l2238
 14791                           
 14792                           ;vend.c: 217: lcd_string(clrline, line4);
 14793  010168  0E03               	movlw	low _clrline
 14794  01016A  6E24               	movwf	lcd_string@lcdstring,c
 14795  01016C  0EFF               	movlw	high _clrline
 14796  01016E  6E25               	movwf	lcd_string@lcdstring+1,c
 14797  010170  0E47               	movlw	low _line4
 14798  010172  6EF6               	movwf	tblptrl,c
 14799  010174                     	if	1	;There is more than 1 active tblptr byte
 14800  010174  0EFC               	movlw	high _line4
 14801  010176  6EF7               	movwf	tblptrh,c
 14802  010178                     	endif
 14803  010178                     	if	1	;There are 3 active tblptr bytes
 14804  010178  0E00               	movlw	low (_line4 shr (0+16))
 14805  01017A  6EF8               	movwf	tblptru,c
 14806  01017C                     	endif
 14807  01017C  0008               	tblrd		*
 14808  01017E  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14809  010182  EC78  F08A         	call	_lcd_string	;wreg free
 14810  010186                     l2236:
 14811                           
 14812                           ;vend.c: 218: }
 14813                           ;vend.c: 219: if(!CMP1_GetOutputStatus())
 14814  010186  EC0E  F096         	call	_CMP1_GetOutputStatus	;wreg free
 14815  01018A  0900               	iorlw	0
 14816  01018C  A4D8               	btfss	status,2,c
 14817  01018E  D012               	goto	l2240
 14818                           
 14819                           ;vend.c: 220: {
 14820                           ;vend.c: 221: DAC1CON1 = sensorval;
 14821  010190  C036  FF34         	movff	_sensorval,3892	;volatile
 14822                           
 14823                           ;vend.c: 222: venflags.audit = 0;
 14824  010194  962F               	bcf	_venflags+2,3,c
 14825                           
 14826                           ;vend.c: 223: lcd_string(servmsg, line1);
 14827  010196  0E59               	movlw	low _servmsg
 14828  010198  6E24               	movwf	lcd_string@lcdstring,c
 14829  01019A  0EFC               	movlw	high _servmsg
 14830  01019C  6E25               	movwf	lcd_string@lcdstring+1,c
 14831  01019E  0E4A               	movlw	low _line1
 14832  0101A0  6EF6               	movwf	tblptrl,c
 14833  0101A2                     	if	1	;There is more than 1 active tblptr byte
 14834  0101A2  0EFC               	movlw	high _line1
 14835  0101A4  6EF7               	movwf	tblptrh,c
 14836  0101A6                     	endif
 14837  0101A6                     	if	1	;There are 3 active tblptr bytes
 14838  0101A6  0E00               	movlw	low (_line1 shr (0+16))
 14839  0101A8  6EF8               	movwf	tblptru,c
 14840  0101AA                     	endif
 14841  0101AA  0008               	tblrd		*
 14842  0101AC  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14843  0101B0  EC78  F08A         	call	_lcd_string	;wreg free
 14844  0101B4                     l2240:
 14845  0101B4  A62F               	btfss	_venflags+2,3,c
 14846  0101B6  0012               	return	
 14847  0101B8  D78C               	goto	l2235
 14848  0101BA                     __end_of_Audit:
 14849                           	opt stack 0
 14850                           tblptru	equ	0xFF8
 14851                           tblptrh	equ	0xFF7
 14852                           tblptrl	equ	0xFF6
 14853                           tablat	equ	0xFF5
 14854                           prodh	equ	0xFF4
 14855                           prodl	equ	0xFF3
 14856                           intcon	equ	0xFF2
 14857                           postinc0	equ	0xFEE
 14858                           wreg	equ	0xFE8
 14859                           indf2	equ	0xFDF
 14860                           postinc2	equ	0xFDE
 14861                           fsr2h	equ	0xFDA
 14862                           fsr2l	equ	0xFD9
 14863                           status	equ	0xFD8
 14864                           
 14865 ;; *************** function _get_channel *****************
 14866 ;; Defined at:
 14867 ;;		line 379 in file "vend.c"
 14868 ;; Parameters:    Size  Location     Type
 14869 ;;  butons          1    wreg     unsigned char 
 14870 ;; Auto vars:     Size  Location     Type
 14871 ;;  butons          1   18[COMRAM] unsigned char 
 14872 ;; Return value:  Size  Location     Type
 14873 ;;                  1    wreg      unsigned char 
 14874 ;; Registers used:
 14875 ;;		wreg, status,2, status,0
 14876 ;; Tracked objects:
 14877 ;;		On entry : 0/0
 14878 ;;		On exit  : 0/0
 14879 ;;		Unchanged: 0/0
 14880 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14884 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14885 ;;Total ram usage:        1 bytes
 14886 ;; Hardware stack levels used:    1
 14887 ;; Hardware stack levels required when called:    2
 14888 ;; This function calls:
 14889 ;;		Nothing
 14890 ;; This function is called by:
 14891 ;;		_main
 14892 ;;		_Audit
 14893 ;;		_set_price
 14894 ;;		_Vend_settime
 14895 ;;		_Chan_link
 14896 ;;		_Sens_off
 14897 ;;		_price_check
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           	psect	text87
 14902  012A7C                     __ptext87:
 14903                           	opt stack 0
 14904  012A7C                     _get_channel:
 14905                           	opt stack 27
 14906                           
 14907                           ;incstack = 0
 14908                           ;get_channel@butons stored from wreg
 14909  012A7C  6E1D               	movwf	get_channel@butons,c
 14910                           
 14911                           ;vend.c: 382: channel = 0x00;
 14912  012A7E  0E00               	movlw	0
 14913  012A80  6E30               	movwf	_channel,c	;volatile
 14914                           
 14915                           ;vend.c: 383: while(butons != 0)
 14916  012A82  D004               	goto	l2303
 14917  012A84                     
 14918                           ;vend.c: 384: {
 14919                           ;vend.c: 385: channel++;
 14920  012A84  2A30               	incf	_channel,f,c	;volatile
 14921                           
 14922                           ;vend.c: 386: butons = butons >> 1;
 14923  012A86  90D8               	bcf	status,0,c
 14924  012A88  301D               	rrcf	get_channel@butons,w,c
 14925  012A8A  6E1D               	movwf	get_channel@butons,c
 14926  012A8C                     l2303:
 14927  012A8C  501D               	movf	get_channel@butons,w,c
 14928  012A8E  A4D8               	btfss	status,2,c
 14929  012A90  D7F9               	goto	l2304
 14930                           
 14931                           ;vend.c: 387: }
 14932                           ;vend.c: 388: channel--;
 14933  012A92  0630               	decf	_channel,f,c	;volatile
 14934                           
 14935                           ;vend.c: 389: return channel;
 14936  012A94  5030               	movf	_channel,w,c	;volatile
 14937  012A96  0012               	return	
 14938  012A98                     __end_of_get_channel:
 14939                           	opt stack 0
 14940                           tblptru	equ	0xFF8
 14941                           tblptrh	equ	0xFF7
 14942                           tblptrl	equ	0xFF6
 14943                           tablat	equ	0xFF5
 14944                           prodh	equ	0xFF4
 14945                           prodl	equ	0xFF3
 14946                           intcon	equ	0xFF2
 14947                           postinc0	equ	0xFEE
 14948                           wreg	equ	0xFE8
 14949                           indf2	equ	0xFDF
 14950                           postinc2	equ	0xFDE
 14951                           fsr2h	equ	0xFDA
 14952                           fsr2l	equ	0xFD9
 14953                           status	equ	0xFD8
 14954                           
 14955 ;; *************** function _butin *****************
 14956 ;; Defined at:
 14957 ;;		line 172 in file "vend.c"
 14958 ;; Parameters:    Size  Location     Type
 14959 ;;		None
 14960 ;; Auto vars:     Size  Location     Type
 14961 ;;  butons          1   19[COMRAM] unsigned char 
 14962 ;; Return value:  Size  Location     Type
 14963 ;;                  1    wreg      unsigned char 
 14964 ;; Registers used:
 14965 ;;		wreg, status,2, status,0
 14966 ;; Tracked objects:
 14967 ;;		On entry : 0/0
 14968 ;;		On exit  : 0/0
 14969 ;;		Unchanged: 0/0
 14970 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14975 ;;Total ram usage:        2 bytes
 14976 ;; Hardware stack levels used:    1
 14977 ;; Hardware stack levels required when called:    2
 14978 ;; This function calls:
 14979 ;;		Nothing
 14980 ;; This function is called by:
 14981 ;;		_main
 14982 ;;		_butindb
 14983 ;;		_Audit
 14984 ;;		_price_check
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text88
 14989  0123D4                     __ptext88:
 14990                           	opt stack 0
 14991  0123D4                     _butin:
 14992                           	opt stack 27
 14993                           
 14994                           ;vend.c: 174: LATA7 = 0;
 14995                           
 14996                           ;incstack = 0
 14997  0123D4  9E83               	bcf	3971,7,c	;volatile
 14998                           
 14999                           ;vend.c: 175: LATA6 = 1;
 15000  0123D6  8C83               	bsf	3971,6,c	;volatile
 15001                           
 15002                           ;vend.c: 176: _delay((unsigned long)((15)*(12000000/4000.0)));
 15003  0123D8  0E3B               	movlw	59
 15004  0123DA  6E1D               	movwf	??_butin& (0+255),c
 15005  0123DC  0E70               	movlw	112
 15006  0123DE                     u5897:
 15007  0123DE  2EE8               	decfsz	wreg,f,c
 15008  0123E0  D7FE               	bra	u5897
 15009  0123E2  2E1D               	decfsz	??_butin& (0+255),f,c
 15010  0123E4  D7FC               	bra	u5897
 15011                           
 15012                           ;vend.c: 178: uint8_t butons = ((PORTA >> 1) & 0x0F) << 4;
 15013  0123E6  CF8D F01D          	movff	3981,??_butin	;volatile
 15014  0123EA  90D8               	bcf	status,0,c
 15015  0123EC  321D               	rrcf	??_butin,f,c
 15016  0123EE  0E0F               	movlw	15
 15017  0123F0  161D               	andwf	??_butin,f,c
 15018  0123F2  381D               	swapf	??_butin,w,c
 15019  0123F4  0BF0               	andlw	240
 15020  0123F6  6E1E               	movwf	butin@butons,c
 15021                           
 15022                           ;vend.c: 179: LATA7 = 1;
 15023  0123F8  8E83               	bsf	3971,7,c	;volatile
 15024                           
 15025                           ;vend.c: 180: LATA6 = 0;
 15026  0123FA  9C83               	bcf	3971,6,c	;volatile
 15027                           
 15028                           ;vend.c: 181: _delay((unsigned long)((15)*(12000000/4000.0)));
 15029  0123FC  0E3B               	movlw	59
 15030  0123FE  6E1D               	movwf	??_butin& (0+255),c
 15031  012400  0E70               	movlw	112
 15032  012402                     u5907:
 15033  012402  2EE8               	decfsz	wreg,f,c
 15034  012404  D7FE               	bra	u5907
 15035  012406  2E1D               	decfsz	??_butin& (0+255),f,c
 15036  012408  D7FC               	bra	u5907
 15037                           
 15038                           ;vend.c: 183: butons = ((PORTA >> 1) & 0x0F) | butons;
 15039  01240A  90D8               	bcf	status,0,c
 15040  01240C  308D               	rrcf	3981,w,c	;volatile
 15041  01240E  0B0F               	andlw	15
 15042  012410  101E               	iorwf	butin@butons,w,c
 15043  012412  6E1E               	movwf	butin@butons,c
 15044                           
 15045                           ;vend.c: 184: LATA7 = 1;
 15046  012414  8E83               	bsf	3971,7,c	;volatile
 15047                           
 15048                           ;vend.c: 185: LATA6 = 1;
 15049  012416  8C83               	bsf	3971,6,c	;volatile
 15050                           
 15051                           ;vend.c: 186: return ~butons;
 15052  012418  501E               	movf	butin@butons,w,c
 15053  01241A  0AFF               	xorlw	255
 15054  01241C  0012               	return	
 15055  01241E                     __end_of_butin:
 15056                           	opt stack 0
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           intcon	equ	0xFF2
 15064                           postinc0	equ	0xFEE
 15065                           wreg	equ	0xFE8
 15066                           indf2	equ	0xFDF
 15067                           postinc2	equ	0xFDE
 15068                           fsr2h	equ	0xFDA
 15069                           fsr2l	equ	0xFD9
 15070                           status	equ	0xFD8
 15071                           
 15072 ;; *************** function _Read_NVstore *****************
 15073 ;; Defined at:
 15074 ;;		line 96 in file "vend.c"
 15075 ;; Parameters:    Size  Location     Type
 15076 ;;  storeadd        2   20[COMRAM] unsigned int 
 15077 ;;  storemem        2   22[COMRAM] PTR unsigned char 
 15078 ;;		 -> pnvcash(3), pvcash(2), 
 15079 ;;  storesize       1   24[COMRAM] unsigned char 
 15080 ;; Auto vars:     Size  Location     Type
 15081 ;;  i               1   25[COMRAM] unsigned char 
 15082 ;; Return value:  Size  Location     Type
 15083 ;;                  1    wreg      void 
 15084 ;; Registers used:
 15085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15086 ;; Tracked objects:
 15087 ;;		On entry : 0/0
 15088 ;;		On exit  : 0/0
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15091 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15094 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15095 ;;Total ram usage:        6 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; Hardware stack levels required when called:    3
 15098 ;; This function calls:
 15099 ;;		_DATAEE_ReadByte
 15100 ;; This function is called by:
 15101 ;;		_Update_cashaudit
 15102 ;;		_Audit
 15103 ;;		_Update_coinsout
 15104 ;; This function uses a non-reentrant model
 15105 ;;
 15106                           
 15107                           	psect	text89
 15108  012822                     __ptext89:
 15109                           	opt stack 0
 15110  012822                     _Read_NVstore:
 15111                           	opt stack 23
 15112                           
 15113                           ;vend.c: 98: uint8_t i = 0;
 15114                           
 15115                           ;incstack = 0
 15116  012822  0E00               	movlw	0
 15117  012824  6E24               	movwf	Read_NVstore@i,c
 15118                           
 15119                           ;vend.c: 99: while(i < storesize)
 15120  012826  D012               	goto	l2201
 15121  012828                     
 15122                           ;vend.c: 100: {
 15123                           ;vend.c: 101: storemem[i] = DATAEE_ReadByte(storeadd + i);
 15124  012828  5024               	movf	Read_NVstore@i,w,c
 15125  01282A  0D01               	mullw	1
 15126  01282C  50F3               	movf	prodl,w,c
 15127  01282E  2421               	addwf	Read_NVstore@storemem,w,c
 15128  012830  6ED9               	movwf	fsr2l,c
 15129  012832  50F4               	movf	prodh,w,c
 15130  012834  2022               	addwfc	Read_NVstore@storemem+1,w,c
 15131  012836  6EDA               	movwf	fsr2h,c
 15132  012838  5024               	movf	Read_NVstore@i,w,c
 15133  01283A  241F               	addwf	Read_NVstore@storeadd,w,c
 15134  01283C  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 15135  01283E  0E00               	movlw	0
 15136  012840  2020               	addwfc	Read_NVstore@storeadd+1,w,c
 15137  012842  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 15138  012844  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 15139  012848  6EDF               	movwf	indf2,c
 15140                           
 15141                           ;vend.c: 102: i++;
 15142  01284A  2A24               	incf	Read_NVstore@i,f,c
 15143  01284C                     l2201:
 15144  01284C  5023               	movf	Read_NVstore@storesize,w,c
 15145  01284E  5C24               	subwf	Read_NVstore@i,w,c
 15146  012850  B0D8               	btfsc	status,0,c
 15147  012852  0012               	return	
 15148  012854  D7E9               	goto	l2202
 15149  012856                     __end_of_Read_NVstore:
 15150                           	opt stack 0
 15151                           tblptru	equ	0xFF8
 15152                           tblptrh	equ	0xFF7
 15153                           tblptrl	equ	0xFF6
 15154                           tablat	equ	0xFF5
 15155                           prodh	equ	0xFF4
 15156                           prodl	equ	0xFF3
 15157                           intcon	equ	0xFF2
 15158                           postinc0	equ	0xFEE
 15159                           wreg	equ	0xFE8
 15160                           indf2	equ	0xFDF
 15161                           postinc2	equ	0xFDE
 15162                           fsr2h	equ	0xFDA
 15163                           fsr2l	equ	0xFD9
 15164                           status	equ	0xFD8
 15165                           
 15166 ;; *************** function _CMP1_GetOutputStatus *****************
 15167 ;; Defined at:
 15168 ;;		line 75 in file "mcc_generated_files/cmp1.c"
 15169 ;; Parameters:    Size  Location     Type
 15170 ;;		None
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;		None
 15173 ;; Return value:  Size  Location     Type
 15174 ;;                  1    wreg      unsigned char 
 15175 ;; Registers used:
 15176 ;;		wreg
 15177 ;; Tracked objects:
 15178 ;;		On entry : 0/0
 15179 ;;		On exit  : 0/0
 15180 ;;		Unchanged: 0/0
 15181 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15186 ;;Total ram usage:        0 bytes
 15187 ;; Hardware stack levels used:    1
 15188 ;; Hardware stack levels required when called:    2
 15189 ;; This function calls:
 15190 ;;		Nothing
 15191 ;; This function is called by:
 15192 ;;		_main
 15193 ;;		_displ_sens
 15194 ;;		_Audit
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text90
 15199  012C1C                     __ptext90:
 15200                           	opt stack 0
 15201  012C1C                     _CMP1_GetOutputStatus:
 15202                           	opt stack 25
 15203                           
 15204                           ;cmp1.c: 77: return (CMOUTbits.MC1OUT);
 15205                           
 15206                           ;incstack = 0
 15207  012C1C  010F               	movlb	15	; () banked
 15208  012C1E  A13D               	btfss	61,0,b	;volatile
 15209  012C20  D002               	goto	u4240
 15210  012C22  0E01               	movlw	1
 15211  012C24  0012               	return	
 15212  012C26                     u4240:
 15213  012C26  0E00               	movlw	0
 15214  012C28  0012               	return	
 15215  012C2A                     __end_of_CMP1_GetOutputStatus:
 15216                           	opt stack 0
 15217                           tblptru	equ	0xFF8
 15218                           tblptrh	equ	0xFF7
 15219                           tblptrl	equ	0xFF6
 15220                           tablat	equ	0xFF5
 15221                           prodh	equ	0xFF4
 15222                           prodl	equ	0xFF3
 15223                           intcon	equ	0xFF2
 15224                           postinc0	equ	0xFEE
 15225                           wreg	equ	0xFE8
 15226                           indf2	equ	0xFDF
 15227                           postinc2	equ	0xFDE
 15228                           fsr2h	equ	0xFDA
 15229                           fsr2l	equ	0xFD9
 15230                           status	equ	0xFD8
 15231                           
 15232 ;; *************** function _displ_noteer *****************
 15233 ;; Defined at:
 15234 ;;		line 182 in file "lcd.c"
 15235 ;; Parameters:    Size  Location     Type
 15236 ;;		None
 15237 ;; Auto vars:     Size  Location     Type
 15238 ;;		None
 15239 ;; Return value:  Size  Location     Type
 15240 ;;                  1    wreg      void 
 15241 ;; Registers used:
 15242 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15243 ;; Tracked objects:
 15244 ;;		On entry : 0/0
 15245 ;;		On exit  : 0/0
 15246 ;;		Unchanged: 0/0
 15247 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15252 ;;Total ram usage:        0 bytes
 15253 ;; Hardware stack levels used:    1
 15254 ;; Hardware stack levels required when called:    8
 15255 ;; This function calls:
 15256 ;;		_displ_code
 15257 ;;		_lcd_string
 15258 ;; This function is called by:
 15259 ;;		_main
 15260 ;; This function uses a non-reentrant model
 15261 ;;
 15262                           
 15263                           	psect	text91
 15264  012922                     __ptext91:
 15265                           	opt stack 0
 15266  012922                     _displ_noteer:
 15267                           	opt stack 22
 15268                           
 15269                           ;lcd.c: 184: lcd_string(noteerr, line1);
 15270                           
 15271                           ; BSR set to: 15
 15272                           ;incstack = 0
 15273  012922  0ED2               	movlw	low _noteerr
 15274  012924  6E24               	movwf	lcd_string@lcdstring,c
 15275  012926  0EFE               	movlw	high _noteerr
 15276  012928  6E25               	movwf	lcd_string@lcdstring+1,c
 15277  01292A  0E4A               	movlw	low _line1
 15278  01292C  6EF6               	movwf	tblptrl,c
 15279  01292E                     	if	1	;There is more than 1 active tblptr byte
 15280  01292E  0EFC               	movlw	high _line1
 15281  012930  6EF7               	movwf	tblptrh,c
 15282  012932                     	endif
 15283  012932                     	if	1	;There are 3 active tblptr bytes
 15284  012932  0E00               	movlw	low (_line1 shr (0+16))
 15285  012934  6EF8               	movwf	tblptru,c
 15286  012936                     	endif
 15287  012936  0008               	tblrd		*
 15288  012938  CFF5 F026          	movff	tablat,lcd_string@lcdline
 15289  01293C  EC78  F08A         	call	_lcd_string	;wreg free
 15290                           
 15291                           ;lcd.c: 185: ercode = mdbdata[0];
 15292  012940  C060  F044         	movff	_mdbdata,_ercode
 15293                           
 15294                           ;lcd.c: 186: displ_code(ercode);
 15295  012944  5044               	movf	_ercode,w,c
 15296  012946  EC80  F084         	call	_displ_code
 15297                           
 15298                           ;lcd.c: 187: mdbflags.noteerr = 0;
 15299  01294A  923F               	bcf	_mdbflags,1,c
 15300                           
 15301                           ;lcd.c: 188: venflags.noterr = 0;
 15302  01294C  9C2D               	bcf	_venflags,6,c
 15303  01294E  0012               	return		;funcret
 15304  012950                     __end_of_displ_noteer:
 15305                           	opt stack 0
 15306                           tblptru	equ	0xFF8
 15307                           tblptrh	equ	0xFF7
 15308                           tblptrl	equ	0xFF6
 15309                           tablat	equ	0xFF5
 15310                           prodh	equ	0xFF4
 15311                           prodl	equ	0xFF3
 15312                           intcon	equ	0xFF2
 15313                           postinc0	equ	0xFEE
 15314                           wreg	equ	0xFE8
 15315                           indf2	equ	0xFDF
 15316                           postinc2	equ	0xFDE
 15317                           fsr2h	equ	0xFDA
 15318                           fsr2l	equ	0xFD9
 15319                           status	equ	0xFD8
 15320                           
 15321 ;; *************** function _displ_code *****************
 15322 ;; Defined at:
 15323 ;;		line 135 in file "lcd.c"
 15324 ;; Parameters:    Size  Location     Type
 15325 ;;  ercode          1    wreg     unsigned char 
 15326 ;; Auto vars:     Size  Location     Type
 15327 ;;  ercode          1   27[COMRAM] unsigned char 
 15328 ;; Return value:  Size  Location     Type
 15329 ;;                  1    wreg      void 
 15330 ;; Registers used:
 15331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15332 ;; Tracked objects:
 15333 ;;		On entry : 0/0
 15334 ;;		On exit  : 0/0
 15335 ;;		Unchanged: 0/0
 15336 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15341 ;;Total ram usage:        3 bytes
 15342 ;; Hardware stack levels used:    1
 15343 ;; Hardware stack levels required when called:    7
 15344 ;; This function calls:
 15345 ;;		_lcd_writeC
 15346 ;; This function is called by:
 15347 ;;		_displ_noteer
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text92
 15352  010900                     __ptext92:
 15353                           	opt stack 0
 15354  010900                     _displ_code:
 15355                           	opt stack 22
 15356                           
 15357                           ;incstack = 0
 15358                           ;displ_code@ercode stored from wreg
 15359  010900  6E26               	movwf	displ_code@ercode,c
 15360                           
 15361                           ;lcd.c: 137: if((ercode >> 4) < 0x0A)
 15362  010902  C026  F024         	movff	displ_code@ercode,??_displ_code
 15363  010906  3A24               	swapf	??_displ_code,f,c
 15364  010908  0E0F               	movlw	15
 15365  01090A  1624               	andwf	??_displ_code,f,c
 15366  01090C  0E0A               	movlw	10
 15367  01090E  6024               	cpfslt	??_displ_code,c
 15368  010910  D01E               	goto	l1632
 15369                           
 15370                           ;lcd.c: 138: {
 15371                           ;lcd.c: 139: lcd_writeC((ercode >> 4) | 0x30);
 15372  010912  3826               	swapf	displ_code@ercode,w,c
 15373  010914  0B0F               	andlw	15
 15374  010916  0930               	iorlw	48
 15375  010918  EC84  F08F         	call	_lcd_writeC
 15376                           
 15377                           ;lcd.c: 140: }
 15378  01091C  D033               	goto	l1634
 15379  01091E  0E41               	movlw	65
 15380  010920  EC84  F08F         	call	_lcd_writeC
 15381                           
 15382                           ;lcd.c: 146: break;
 15383  010924  D02F               	goto	l1634
 15384  010926  0E42               	movlw	66
 15385  010928  EC84  F08F         	call	_lcd_writeC
 15386                           
 15387                           ;lcd.c: 148: break;
 15388  01092C  D02B               	goto	l1634
 15389  01092E  0E43               	movlw	67
 15390  010930  EC84  F08F         	call	_lcd_writeC
 15391                           
 15392                           ;lcd.c: 150: break;
 15393  010934  D027               	goto	l1634
 15394  010936  0E44               	movlw	68
 15395  010938  EC84  F08F         	call	_lcd_writeC
 15396                           
 15397                           ;lcd.c: 152: break;
 15398  01093C  D023               	goto	l1634
 15399  01093E  0E45               	movlw	69
 15400  010940  EC84  F08F         	call	_lcd_writeC
 15401                           
 15402                           ;lcd.c: 154: break;
 15403  010944  D01F               	goto	l1634
 15404  010946  0E46               	movlw	70
 15405  010948  EC84  F08F         	call	_lcd_writeC
 15406                           
 15407                           ;lcd.c: 156: }
 15408  01094C  D01B               	goto	l1634
 15409  01094E                     l1632:
 15410  01094E  3826               	swapf	displ_code@ercode,w,c
 15411  010950  0B0F               	andlw	15
 15412  010952  6E24               	movwf	??_displ_code& (0+255),c
 15413  010954  6A25               	clrf	(??_displ_code+1)& (0+255),c
 15414                           
 15415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15416                           ; Switch size 1, requested type "space"
 15417                           ; Number of cases is 1, Range of values is 0 to 0
 15418                           ; switch strategies available:
 15419                           ; Name         Instructions Cycles
 15420                           ; simple_byte            4     3 (average)
 15421                           ;	Chosen strategy is simple_byte
 15422  010956  5025               	movf	??_displ_code+1,w,c
 15423  010958  0A00               	xorlw	0	; case 0
 15424  01095A  A4D8               	btfss	status,2,c
 15425  01095C  D013               	goto	l1634
 15426                           
 15427                           ; Switch size 1, requested type "space"
 15428                           ; Number of cases is 6, Range of values is 10 to 15
 15429                           ; switch strategies available:
 15430                           ; Name         Instructions Cycles
 15431                           ; simple_byte           19    10 (average)
 15432                           ;	Chosen strategy is simple_byte
 15433  01095E  5024               	movf	??_displ_code,w,c
 15434  010960  0A0A               	xorlw	10	; case 10
 15435  010962  B4D8               	btfsc	status,2,c
 15436  010964  D7DC               	goto	l1633
 15437  010966  0A01               	xorlw	1	; case 11
 15438  010968  B4D8               	btfsc	status,2,c
 15439  01096A  D7DD               	goto	l1635
 15440  01096C  0A07               	xorlw	7	; case 12
 15441  01096E  B4D8               	btfsc	status,2,c
 15442  010970  D7DE               	goto	l1636
 15443  010972  0A01               	xorlw	1	; case 13
 15444  010974  B4D8               	btfsc	status,2,c
 15445  010976  D7DF               	goto	l1637
 15446  010978  0A03               	xorlw	3	; case 14
 15447  01097A  B4D8               	btfsc	status,2,c
 15448  01097C  D7E0               	goto	l1638
 15449  01097E  0A01               	xorlw	1	; case 15
 15450  010980  B4D8               	btfsc	status,2,c
 15451  010982  D7E1               	goto	l1639
 15452  010984                     l1634:
 15453                           
 15454                           ;lcd.c: 157: }
 15455                           ;lcd.c: 158: if((ercode & 0x0F) < 0x0A)
 15456  010984  C026  F024         	movff	displ_code@ercode,??_displ_code
 15457  010988  0E0F               	movlw	15
 15458  01098A  1624               	andwf	??_displ_code,f,c
 15459  01098C  0E0A               	movlw	10
 15460  01098E  6024               	cpfslt	??_displ_code,c
 15461  010990  D01E               	goto	l1642
 15462                           
 15463                           ;lcd.c: 159: {
 15464                           ;lcd.c: 160: lcd_writeC((ercode & 0x0F) | 0x30);
 15465  010992  5026               	movf	displ_code@ercode,w,c
 15466  010994  0B0F               	andlw	15
 15467  010996  0930               	iorlw	48
 15468  010998  EC84  F08F         	call	_lcd_writeC
 15469                           
 15470                           ;lcd.c: 161: }
 15471  01099C  0012               	return	
 15472  01099E  0E41               	movlw	65
 15473  0109A0  EC84  F08F         	call	_lcd_writeC
 15474                           
 15475                           ;lcd.c: 167: break;
 15476  0109A4  0012               	return	
 15477  0109A6  0E42               	movlw	66
 15478  0109A8  EC84  F08F         	call	_lcd_writeC
 15479                           
 15480                           ;lcd.c: 169: break;
 15481  0109AC  0012               	return	
 15482  0109AE  0E43               	movlw	67
 15483  0109B0  EC84  F08F         	call	_lcd_writeC
 15484                           
 15485                           ;lcd.c: 171: break;
 15486  0109B4  0012               	return	
 15487  0109B6  0E44               	movlw	68
 15488  0109B8  EC84  F08F         	call	_lcd_writeC
 15489                           
 15490                           ;lcd.c: 173: break;
 15491  0109BC  0012               	return	
 15492  0109BE  0E45               	movlw	69
 15493  0109C0  EC84  F08F         	call	_lcd_writeC
 15494                           
 15495                           ;lcd.c: 175: break;
 15496  0109C4  0012               	return	
 15497  0109C6  0E46               	movlw	70
 15498  0109C8  EC84  F08F         	call	_lcd_writeC
 15499                           
 15500                           ;lcd.c: 177: }
 15501  0109CC  0012               	return	
 15502  0109CE                     l1642:
 15503  0109CE  5026               	movf	displ_code@ercode,w,c
 15504  0109D0  0B0F               	andlw	15
 15505  0109D2  6E24               	movwf	??_displ_code& (0+255),c
 15506  0109D4  6A25               	clrf	(??_displ_code+1)& (0+255),c
 15507                           
 15508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15509                           ; Switch size 1, requested type "space"
 15510                           ; Number of cases is 1, Range of values is 0 to 0
 15511                           ; switch strategies available:
 15512                           ; Name         Instructions Cycles
 15513                           ; simple_byte            4     3 (average)
 15514                           ;	Chosen strategy is simple_byte
 15515  0109D6  5025               	movf	??_displ_code+1,w,c
 15516  0109D8  0A00               	xorlw	0	; case 0
 15517  0109DA  A4D8               	btfss	status,2,c
 15518  0109DC  0012               	return	
 15519                           
 15520                           ; Switch size 1, requested type "space"
 15521                           ; Number of cases is 6, Range of values is 10 to 15
 15522                           ; switch strategies available:
 15523                           ; Name         Instructions Cycles
 15524                           ; simple_byte           19    10 (average)
 15525                           ;	Chosen strategy is simple_byte
 15526  0109DE  5024               	movf	??_displ_code,w,c
 15527  0109E0  0A0A               	xorlw	10	; case 10
 15528  0109E2  B4D8               	btfsc	status,2,c
 15529  0109E4  D7DC               	goto	l1643
 15530  0109E6  0A01               	xorlw	1	; case 11
 15531  0109E8  B4D8               	btfsc	status,2,c
 15532  0109EA  D7DD               	goto	l1645
 15533  0109EC  0A07               	xorlw	7	; case 12
 15534  0109EE  B4D8               	btfsc	status,2,c
 15535  0109F0  D7DE               	goto	l1646
 15536  0109F2  0A01               	xorlw	1	; case 13
 15537  0109F4  B4D8               	btfsc	status,2,c
 15538  0109F6  D7DF               	goto	l1647
 15539  0109F8  0A03               	xorlw	3	; case 14
 15540  0109FA  B4D8               	btfsc	status,2,c
 15541  0109FC  D7E0               	goto	l1648
 15542  0109FE  0A01               	xorlw	1	; case 15
 15543  010A00  A4D8               	btfss	status,2,c
 15544  010A02  0012               	return	
 15545  010A04  D7E0               	goto	l1649
 15546  010A06                     __end_of_displ_code:
 15547                           	opt stack 0
 15548                           tblptru	equ	0xFF8
 15549                           tblptrh	equ	0xFF7
 15550                           tblptrl	equ	0xFF6
 15551                           tablat	equ	0xFF5
 15552                           prodh	equ	0xFF4
 15553                           prodl	equ	0xFF3
 15554                           intcon	equ	0xFF2
 15555                           postinc0	equ	0xFEE
 15556                           wreg	equ	0xFE8
 15557                           indf2	equ	0xFDF
 15558                           postinc2	equ	0xFDE
 15559                           fsr2h	equ	0xFDA
 15560                           fsr2l	equ	0xFD9
 15561                           status	equ	0xFD8
 15562                           
 15563 ;; *************** function _displ_nochange *****************
 15564 ;; Defined at:
 15565 ;;		line 242 in file "lcd.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;		None
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      void 
 15572 ;; Registers used:
 15573 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15583 ;;Total ram usage:        0 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:    8
 15586 ;; This function calls:
 15587 ;;		_lcd_dispadd
 15588 ;;		_lcd_string
 15589 ;; This function is called by:
 15590 ;;		_main
 15591 ;; This function uses a non-reentrant model
 15592 ;;
 15593                           
 15594                           	psect	text93
 15595  012856                     __ptext93:
 15596                           	opt stack 0
 15597  012856                     _displ_nochange:
 15598                           	opt stack 22
 15599                           
 15600                           ;lcd.c: 244: lcd_dispadd(line3);
 15601                           
 15602                           ;incstack = 0
 15603  012856  0E48               	movlw	low _line3
 15604  012858  6EF6               	movwf	tblptrl,c
 15605  01285A                     	if	1	;There is more than 1 active tblptr byte
 15606  01285A  0EFC               	movlw	high _line3
 15607  01285C  6EF7               	movwf	tblptrh,c
 15608  01285E                     	endif
 15609  01285E                     	if	1	;There are 3 active tblptr bytes
 15610  01285E  0E00               	movlw	low (_line3 shr (0+16))
 15611  012860  6EF8               	movwf	tblptru,c
 15612  012862                     	endif
 15613  012862  0008               	tblrd		*
 15614  012864  50F5               	movf	tablat,w,c
 15615  012866  EC74  F095         	call	_lcd_dispadd
 15616                           
 15617                           ;lcd.c: 245: lcd_string(nochange, line3);
 15618  01286A  0E72               	movlw	low _nochange
 15619  01286C  6E24               	movwf	lcd_string@lcdstring,c
 15620  01286E  0EFE               	movlw	high _nochange
 15621  012870  6E25               	movwf	lcd_string@lcdstring+1,c
 15622  012872  0E48               	movlw	low _line3
 15623  012874  6EF6               	movwf	tblptrl,c
 15624  012876                     	if	1	;There is more than 1 active tblptr byte
 15625  012876  0EFC               	movlw	high _line3
 15626  012878  6EF7               	movwf	tblptrh,c
 15627  01287A                     	endif
 15628  01287A                     	if	1	;There are 3 active tblptr bytes
 15629  01287A  0E00               	movlw	low (_line3 shr (0+16))
 15630  01287C  6EF8               	movwf	tblptru,c
 15631  01287E                     	endif
 15632  01287E  0008               	tblrd		*
 15633  012880  CFF5 F026          	movff	tablat,lcd_string@lcdline
 15634  012884  EC78  F08A         	call	_lcd_string	;wreg free
 15635  012888  0012               	return		;funcret
 15636  01288A                     __end_of_displ_nochange:
 15637                           	opt stack 0
 15638                           tblptru	equ	0xFF8
 15639                           tblptrh	equ	0xFF7
 15640                           tblptrl	equ	0xFF6
 15641                           tablat	equ	0xFF5
 15642                           prodh	equ	0xFF4
 15643                           prodl	equ	0xFF3
 15644                           intcon	equ	0xFF2
 15645                           postinc0	equ	0xFEE
 15646                           wreg	equ	0xFE8
 15647                           indf2	equ	0xFDF
 15648                           postinc2	equ	0xFDE
 15649                           fsr2h	equ	0xFDA
 15650                           fsr2l	equ	0xFD9
 15651                           status	equ	0xFD8
 15652                           
 15653 ;; *************** function _displ_credit *****************
 15654 ;; Defined at:
 15655 ;;		line 127 in file "lcd.c"
 15656 ;; Parameters:    Size  Location     Type
 15657 ;;		None
 15658 ;; Auto vars:     Size  Location     Type
 15659 ;;  cash            1   31[COMRAM] unsigned char 
 15660 ;; Return value:  Size  Location     Type
 15661 ;;                  1    wreg      void 
 15662 ;; Registers used:
 15663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15664 ;; Tracked objects:
 15665 ;;		On entry : 0/0
 15666 ;;		On exit  : 0/0
 15667 ;;		Unchanged: 0/0
 15668 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15672 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15673 ;;Total ram usage:        1 bytes
 15674 ;; Hardware stack levels used:    1
 15675 ;; Hardware stack levels required when called:    8
 15676 ;; This function calls:
 15677 ;;		_credit_check
 15678 ;;		_displ_hex
 15679 ;;		_lcd_string
 15680 ;; This function is called by:
 15681 ;;		_main
 15682 ;; This function uses a non-reentrant model
 15683 ;;
 15684                           
 15685                           	psect	text94
 15686  01288A                     __ptext94:
 15687                           	opt stack 0
 15688  01288A                     _displ_credit:
 15689                           	opt stack 22
 15690                           
 15691                           ;lcd.c: 129: lcd_string(credits, line1);
 15692                           
 15693                           ;incstack = 0
 15694  01288A  0E59               	movlw	low _credits
 15695  01288C  6E24               	movwf	lcd_string@lcdstring,c
 15696  01288E  0EFF               	movlw	high _credits
 15697  012890  6E25               	movwf	lcd_string@lcdstring+1,c
 15698  012892  0E4A               	movlw	low _line1
 15699  012894  6EF6               	movwf	tblptrl,c
 15700  012896                     	if	1	;There is more than 1 active tblptr byte
 15701  012896  0EFC               	movlw	high _line1
 15702  012898  6EF7               	movwf	tblptrh,c
 15703  01289A                     	endif
 15704  01289A                     	if	1	;There are 3 active tblptr bytes
 15705  01289A  0E00               	movlw	low (_line1 shr (0+16))
 15706  01289C  6EF8               	movwf	tblptru,c
 15707  01289E                     	endif
 15708  01289E  0008               	tblrd		*
 15709  0128A0  CFF5 F026          	movff	tablat,lcd_string@lcdline
 15710  0128A4  EC78  F08A         	call	_lcd_string	;wreg free
 15711                           
 15712                           ;lcd.c: 130: uint8_t cash = credit_check();
 15713  0128A8  EC0E  F095         	call	_credit_check	;wreg free
 15714  0128AC  6E2A               	movwf	displ_credit@cash,c
 15715                           
 15716                           ;lcd.c: 131: displ_hex((uint8_t) cash);
 15717  0128AE  502A               	movf	displ_credit@cash,w,c
 15718  0128B0  6E27               	movwf	displ_hex@hexnum,c
 15719  0128B2  6A28               	clrf	displ_hex@hexnum+1,c
 15720  0128B4  6A29               	clrf	displ_hex@hexnum+2,c
 15721  0128B6  ECC3  F089         	call	_displ_hex	;wreg free
 15722                           
 15723                           ;lcd.c: 132: venflags.credisplay = 0;
 15724  0128BA  982D               	bcf	_venflags,4,c
 15725  0128BC  0012               	return		;funcret
 15726  0128BE                     __end_of_displ_credit:
 15727                           	opt stack 0
 15728                           tblptru	equ	0xFF8
 15729                           tblptrh	equ	0xFF7
 15730                           tblptrl	equ	0xFF6
 15731                           tablat	equ	0xFF5
 15732                           prodh	equ	0xFF4
 15733                           prodl	equ	0xFF3
 15734                           intcon	equ	0xFF2
 15735                           postinc0	equ	0xFEE
 15736                           wreg	equ	0xFE8
 15737                           indf2	equ	0xFDF
 15738                           postinc2	equ	0xFDE
 15739                           fsr2h	equ	0xFDA
 15740                           fsr2l	equ	0xFD9
 15741                           status	equ	0xFD8
 15742                           
 15743 ;; *************** function _lcd_string *****************
 15744 ;; Defined at:
 15745 ;;		line 216 in file "lcd.c"
 15746 ;; Parameters:    Size  Location     Type
 15747 ;;  lcdstring       2   25[COMRAM] PTR unsigned char 
 15748 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
 15749 ;;		 -> tenrand(9), setnotes(69), chanresetmsg(32), chanlinkm(55), 
 15750 ;;		 -> vendtimem(41), setimemsg(41), vendsetup(67), pricesetm2(57), 
 15751 ;;		 -> pricesetmsg(18), creditclr(16), dacmsg(13), hoppcoin(51), 
 15752 ;;		 -> totalvendsm(7), vendispmsg(21), totalmsg(8), cashinmsg(10), 
 15753 ;;		 -> initnote(37), nochange(33), noteerr(28), credits(13), 
 15754 ;;		 -> timemsg(18), clrline(21), enabled(10), disabled(10), 
 15755 ;;		 -> sensoffmsg(31), sensmsg(11), linkmsg(12), chanmsg(12), 
 15756 ;;		 -> clrmsg(10), onmsg(4), offmsg(4), servmsg(80), 
 15757 ;;		 -> emptymsg(9), inscoin(39), 
 15758 ;;  lcdline         1   27[COMRAM] unsigned char 
 15759 ;; Auto vars:     Size  Location     Type
 15760 ;;		None
 15761 ;; Return value:  Size  Location     Type
 15762 ;;                  1    wreg      void 
 15763 ;; Registers used:
 15764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15765 ;; Tracked objects:
 15766 ;;		On entry : 0/0
 15767 ;;		On exit  : 0/0
 15768 ;;		Unchanged: 0/0
 15769 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15770 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15773 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15774 ;;Total ram usage:        5 bytes
 15775 ;; Hardware stack levels used:    1
 15776 ;; Hardware stack levels required when called:    7
 15777 ;; This function calls:
 15778 ;;		_lcd_dispadd
 15779 ;;		_lcd_write
 15780 ;;		_lcd_writeC
 15781 ;; This function is called by:
 15782 ;;		_main
 15783 ;;		_enter_service
 15784 ;;		_displ_sens
 15785 ;;		_displ_lflags
 15786 ;;		_displ_sflags
 15787 ;;		_displ_time
 15788 ;;		_displ_note
 15789 ;;		_displ_nendis
 15790 ;;		_displ_credit
 15791 ;;		_displ_noteer
 15792 ;;		_displ_nochange
 15793 ;;		_vend_init
 15794 ;;		_Audit
 15795 ;;		_Hopper_coin
 15796 ;;		_Update_Hopcoin
 15797 ;;		_Sensor_set
 15798 ;;		_Clear_cred
 15799 ;;		_price_set
 15800 ;;		_set_price
 15801 ;;		_Vend_setup
 15802 ;;		_Vend_settime
 15803 ;;		_Vend_timeset
 15804 ;;		_Chan_link
 15805 ;;		_Link_chan
 15806 ;;		_Sens_off
 15807 ;;		_off_sens
 15808 ;;		_Reset_settings
 15809 ;;		_set_notes
 15810 ;;		_enable_notes
 15811 ;;		_price_check
 15812 ;; This function uses a non-reentrant model
 15813 ;;
 15814                           
 15815                           	psect	text95
 15816  0114F0                     __ptext95:
 15817                           	opt stack 0
 15818  0114F0                     _lcd_string:
 15819                           	opt stack 22
 15820                           
 15821                           ;lcd.c: 218: if(lcdline == line1)
 15822                           
 15823                           ;incstack = 0
 15824  0114F0  0E4A               	movlw	low _line1
 15825  0114F2  6EF6               	movwf	tblptrl,c
 15826  0114F4                     	if	1	;There is more than 1 active tblptr byte
 15827  0114F4  0EFC               	movlw	high _line1
 15828  0114F6  6EF7               	movwf	tblptrh,c
 15829  0114F8                     	endif
 15830  0114F8                     	if	1	;There are 3 active tblptr bytes
 15831  0114F8  0E00               	movlw	low (_line1 shr (0+16))
 15832  0114FA  6EF8               	movwf	tblptru,c
 15833  0114FC                     	endif
 15834  0114FC  0008               	tblrd		*
 15835  0114FE  50F5               	movf	tablat,w,c
 15836  011500  6226               	cpfseq	lcd_string@lcdline,c
 15837  011502  D00B               	goto	l1666
 15838                           
 15839                           ;lcd.c: 219: {
 15840                           ;lcd.c: 220: lcd_write(dispclr);
 15841  011504  0E54               	movlw	low _dispclr
 15842  011506  6EF6               	movwf	tblptrl,c
 15843  011508                     	if	1	;There is more than 1 active tblptr byte
 15844  011508  0EFC               	movlw	high _dispclr
 15845  01150A  6EF7               	movwf	tblptrh,c
 15846  01150C                     	endif
 15847  01150C                     	if	1	;There are 3 active tblptr bytes
 15848  01150C  0E00               	movlw	low (_dispclr shr (0+16))
 15849  01150E  6EF8               	movwf	tblptru,c
 15850  011510                     	endif
 15851  011510  0008               	tblrd		*
 15852  011512  50F5               	movf	tablat,w,c
 15853  011514  EC78  F094         	call	_lcd_write
 15854                           
 15855                           ;lcd.c: 221: }
 15856  011518  D004               	goto	l1667
 15857  01151A                     l1666:
 15858                           
 15859                           ;lcd.c: 222: else
 15860                           ;lcd.c: 223: {
 15861                           ;lcd.c: 225: lcd_dispadd(lcdline | 0x80);
 15862  01151A  5026               	movf	lcd_string@lcdline,w,c
 15863  01151C  0980               	iorlw	128
 15864  01151E  EC74  F095         	call	_lcd_dispadd
 15865  011522                     l1667:
 15866                           
 15867                           ;lcd.c: 226: }
 15868                           ;lcd.c: 227: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
 15869  011522  0E00               	movlw	0
 15870  011524  6E45               	movwf	_stradd,c
 15871  011526  D028               	goto	l1668
 15872  011528                     
 15873                           ;lcd.c: 228: {
 15874                           ;lcd.c: 229: lcdata = lcdstring[stradd];
 15875  011528  5045               	movf	_stradd,w,c
 15876  01152A  0D01               	mullw	1
 15877  01152C  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 15878  011530  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 15879  011534  50F3               	movf	prodl,w,c
 15880  011536  2627               	addwf	??_lcd_string,f,c
 15881  011538  50F4               	movf	prodh,w,c
 15882  01153A  2228               	addwfc	??_lcd_string+1,f,c
 15883  01153C  C027  FFF6         	movff	??_lcd_string,tblptrl
 15884  011540  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 15885  011544                     	if	0	;tblptru may be non-zero
 15886  011544                     	endif
 15887  011544                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15888  011544  0E00               	movlw	low (__mediumconst shr (0+16))
 15889  011546  6EF8               	movwf	tblptru,c
 15890  011548                     	endif
 15891  011548  0008               	tblrd		*
 15892  01154A  CFF5 F046          	movff	tablat,_lcdata
 15893                           
 15894                           ;lcd.c: 230: lcd_writeC(lcdstring[stradd]);
 15895  01154E  5045               	movf	_stradd,w,c
 15896  011550  0D01               	mullw	1
 15897  011552  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 15898  011556  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 15899  01155A  50F3               	movf	prodl,w,c
 15900  01155C  2627               	addwf	??_lcd_string,f,c
 15901  01155E  50F4               	movf	prodh,w,c
 15902  011560  2228               	addwfc	??_lcd_string+1,f,c
 15903  011562  C027  FFF6         	movff	??_lcd_string,tblptrl
 15904  011566  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 15905  01156A                     	if	0	;tblptru may be non-zero
 15906  01156A                     	endif
 15907  01156A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15908  01156A  0E00               	movlw	low (__mediumconst shr (0+16))
 15909  01156C  6EF8               	movwf	tblptru,c
 15910  01156E                     	endif
 15911  01156E  0008               	tblrd		*
 15912  011570  50F5               	movf	tablat,w,c
 15913  011572  EC84  F08F         	call	_lcd_writeC
 15914  011576  2A45               	incf	_stradd,f,c
 15915  011578                     l1668:
 15916  011578  5045               	movf	_stradd,w,c
 15917  01157A  0D01               	mullw	1
 15918  01157C  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 15919  011580  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 15920  011584  50F3               	movf	prodl,w,c
 15921  011586  2627               	addwf	??_lcd_string,f,c
 15922  011588  50F4               	movf	prodh,w,c
 15923  01158A  2228               	addwfc	??_lcd_string+1,f,c
 15924  01158C  C027  FFF6         	movff	??_lcd_string,tblptrl
 15925  011590  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 15926  011594                     	if	0	;tblptru may be non-zero
 15927  011594                     	endif
 15928  011594                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15929  011594  0E00               	movlw	low (__mediumconst shr (0+16))
 15930  011596  6EF8               	movwf	tblptru,c
 15931  011598                     	endif
 15932  011598  0008               	tblrd		*
 15933  01159A  50F5               	movf	tablat,w,c
 15934  01159C  0900               	iorlw	0
 15935  01159E  B4D8               	btfsc	status,2,c
 15936  0115A0  0012               	return	
 15937  0115A2  D7C2               	goto	l1669
 15938  0115A4                     __end_of_lcd_string:
 15939                           	opt stack 0
 15940                           tblptru	equ	0xFF8
 15941                           tblptrh	equ	0xFF7
 15942                           tblptrl	equ	0xFF6
 15943                           tablat	equ	0xFF5
 15944                           prodh	equ	0xFF4
 15945                           prodl	equ	0xFF3
 15946                           intcon	equ	0xFF2
 15947                           postinc0	equ	0xFEE
 15948                           wreg	equ	0xFE8
 15949                           indf2	equ	0xFDF
 15950                           postinc2	equ	0xFDE
 15951                           fsr2h	equ	0xFDA
 15952                           fsr2l	equ	0xFD9
 15953                           status	equ	0xFD8
 15954                           
 15955 ;; *************** function _displ_hex *****************
 15956 ;; Defined at:
 15957 ;;		line 191 in file "lcd.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;  hexnum          3   28[COMRAM] unsigned um
 15960 ;; Auto vars:     Size  Location     Type
 15961 ;;  value           8    0[BANK0 ] unsigned char [8]
 15962 ;;  hexnumsave      3    8[BANK0 ] unsigned um
 15963 ;;  i               1   11[BANK0 ] char 
 15964 ;; Return value:  Size  Location     Type
 15965 ;;                  1    wreg      void 
 15966 ;; Registers used:
 15967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15968 ;; Tracked objects:
 15969 ;;		On entry : 0/0
 15970 ;;		On exit  : 0/0
 15971 ;;		Unchanged: 0/0
 15972 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15973 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15974 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15976 ;;      Totals:         3       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15977 ;;Total ram usage:       15 bytes
 15978 ;; Hardware stack levels used:    1
 15979 ;; Hardware stack levels required when called:    7
 15980 ;; This function calls:
 15981 ;;		___ltdiv
 15982 ;;		___ltmod
 15983 ;;		_lcd_writeC
 15984 ;; This function is called by:
 15985 ;;		_displ_sens
 15986 ;;		_displ_time
 15987 ;;		_displ_credit
 15988 ;;		_displ_price
 15989 ;;		_Audit
 15990 ;;		_Hopper_coin
 15991 ;;		_Update_Hopcoin
 15992 ;; This function uses a non-reentrant model
 15993 ;;
 15994                           
 15995                           	psect	text96
 15996  011386                     __ptext96:
 15997                           	opt stack 0
 15998  011386                     _displ_hex:
 15999                           	opt stack 19
 16000                           
 16001                           ;lcd.c: 193: signed char i = 0;
 16002                           
 16003                           ;incstack = 0
 16004  011386  0E00               	movlw	0
 16005  011388  0100               	movlb	0	; () banked
 16006  01138A  6FBD               	movwf	displ_hex@i& (0+255),b
 16007                           
 16008                           ; BSR set to: 0
 16009                           ;lcd.c: 194: uint8_t value[8];
 16010                           ;lcd.c: 195: uint24_t hexnumsave = hexnum;
 16011  01138C  C027  F0BA         	movff	displ_hex@hexnum,displ_hex@hexnumsave
 16012  011390  C028  F0BB         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
 16013  011394  C029  F0BC         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
 16014                           
 16015                           ;lcd.c: 196: while(hexnum > 0)
 16016  011398  D02F               	goto	l1656
 16017  01139A                     
 16018                           ; BSR set to: 0
 16019                           ;lcd.c: 197: {
 16020                           ;lcd.c: 198: value[i] = hexnum % 10;
 16021                           
 16022                           ; BSR set to: 0
 16023  01139A  51BD               	movf	displ_hex@i& (0+255),w,b
 16024  01139C  0D01               	mullw	1
 16025  01139E  0EB2               	movlw	low displ_hex@value
 16026  0113A0  24F3               	addwf	prodl,w,c
 16027  0113A2  6ED9               	movwf	fsr2l,c
 16028  0113A4  0E00               	movlw	high displ_hex@value
 16029  0113A6  20F4               	addwfc	prodh,w,c
 16030  0113A8  6EDA               	movwf	fsr2h,c
 16031  0113AA  C027  F01D         	movff	displ_hex@hexnum,___ltmod@dividend
 16032  0113AE  C028  F01E         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
 16033  0113B2  C029  F01F         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
 16034  0113B6  0E0A               	movlw	10
 16035  0113B8  6E20               	movwf	___ltmod@divisor,c
 16036  0113BA  0E00               	movlw	0
 16037  0113BC  6E21               	movwf	___ltmod@divisor+1,c
 16038  0113BE  0E00               	movlw	0
 16039  0113C0  6E22               	movwf	___ltmod@divisor+2,c
 16040  0113C2  EC25  F091         	call	___ltmod	;wreg free
 16041  0113C6  501D               	movf	?___ltmod,w,c
 16042  0113C8  6EDF               	movwf	indf2,c
 16043                           
 16044                           ;lcd.c: 199: hexnum /= 10;
 16045  0113CA  C027  F01D         	movff	displ_hex@hexnum,___ltdiv@dividend
 16046  0113CE  C028  F01E         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
 16047  0113D2  C029  F01F         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
 16048  0113D6  0E0A               	movlw	10
 16049  0113D8  6E20               	movwf	___ltdiv@divisor,c
 16050  0113DA  0E00               	movlw	0
 16051  0113DC  6E21               	movwf	___ltdiv@divisor+1,c
 16052  0113DE  0E00               	movlw	0
 16053  0113E0  6E22               	movwf	___ltdiv@divisor+2,c
 16054  0113E2  EC1B  F08F         	call	___ltdiv	;wreg free
 16055  0113E6  C01D  F027         	movff	?___ltdiv,displ_hex@hexnum
 16056  0113EA  C01E  F028         	movff	?___ltdiv+1,displ_hex@hexnum+1
 16057  0113EE  C01F  F029         	movff	?___ltdiv+2,displ_hex@hexnum+2
 16058                           
 16059                           ;lcd.c: 200: i = i + 1;
 16060  0113F2  0100               	movlb	0	; () banked
 16061  0113F4  29BD               	incf	displ_hex@i& (0+255),w,b
 16062  0113F6  6FBD               	movwf	displ_hex@i& (0+255),b
 16063  0113F8                     l1656:
 16064                           
 16065                           ; BSR set to: 0
 16066                           
 16067                           ; BSR set to: 0
 16068  0113F8  5027               	movf	displ_hex@hexnum,w,c
 16069  0113FA  1028               	iorwf	displ_hex@hexnum+1,w,c
 16070  0113FC  1029               	iorwf	displ_hex@hexnum+2,w,c
 16071  0113FE  B4D8               	btfsc	status,2,c
 16072  011400  D00E               	goto	l1659
 16073  011402  D7CB               	goto	l1657
 16074  011404                     
 16075                           ; BSR set to: 0
 16076                           ;lcd.c: 204: {
 16077                           ;lcd.c: 205: i--;
 16078                           
 16079                           ; BSR set to: 0
 16080  011404  07BD               	decf	displ_hex@i& (0+255),f,b
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;lcd.c: 206: lcd_writeC(value[i] | 0x30);
 16084  011406  51BD               	movf	displ_hex@i& (0+255),w,b
 16085  011408  0D01               	mullw	1
 16086  01140A  0EB2               	movlw	low displ_hex@value
 16087  01140C  24F3               	addwf	prodl,w,c
 16088  01140E  6ED9               	movwf	fsr2l,c
 16089  011410  0E00               	movlw	high displ_hex@value
 16090  011412  20F4               	addwfc	prodh,w,c
 16091  011414  6EDA               	movwf	fsr2h,c
 16092  011416  50DF               	movf	indf2,w,c
 16093  011418  0930               	iorlw	48
 16094  01141A  EC84  F08F         	call	_lcd_writeC
 16095  01141E                     l1659:
 16096  01141E  0100               	movlb	0	; () banked
 16097  011420  51BD               	movf	displ_hex@i& (0+255),w,b
 16098  011422  0A80               	xorlw	128
 16099  011424  0F7F               	addlw	-129
 16100  011426  B0D8               	btfsc	status,0,c
 16101  011428  D7ED               	goto	l1660
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;lcd.c: 207: }
 16105                           ;lcd.c: 209: if(hexnumsave == 0)
 16106                           
 16107                           ; BSR set to: 0
 16108  01142A  51BA               	movf	displ_hex@hexnumsave& (0+255),w,b
 16109  01142C  11BB               	iorwf	(displ_hex@hexnumsave+1)& (0+255),w,b
 16110  01142E  11BC               	iorwf	(displ_hex@hexnumsave+2)& (0+255),w,b
 16111  011430  A4D8               	btfss	status,2,c
 16112  011432  0012               	return	
 16113                           
 16114                           ; BSR set to: 0
 16115                           ;lcd.c: 210: {
 16116                           ;lcd.c: 211: lcd_writeC(0x30);
 16117  011434  0E30               	movlw	48
 16118  011436  EC84  F08F         	call	_lcd_writeC
 16119  01143A  0012               	return	
 16120  01143C                     __end_of_displ_hex:
 16121                           	opt stack 0
 16122                           tblptru	equ	0xFF8
 16123                           tblptrh	equ	0xFF7
 16124                           tblptrl	equ	0xFF6
 16125                           tablat	equ	0xFF5
 16126                           prodh	equ	0xFF4
 16127                           prodl	equ	0xFF3
 16128                           intcon	equ	0xFF2
 16129                           postinc0	equ	0xFEE
 16130                           wreg	equ	0xFE8
 16131                           indf2	equ	0xFDF
 16132                           postinc2	equ	0xFDE
 16133                           fsr2h	equ	0xFDA
 16134                           fsr2l	equ	0xFD9
 16135                           status	equ	0xFD8
 16136                           
 16137 ;; *************** function _lcd_writeC *****************
 16138 ;; Defined at:
 16139 ;;		line 249 in file "lcd.c"
 16140 ;; Parameters:    Size  Location     Type
 16141 ;;  lcdata          1    wreg     unsigned char 
 16142 ;; Auto vars:     Size  Location     Type
 16143 ;;  lcdata          1   24[COMRAM] unsigned char 
 16144 ;; Return value:  Size  Location     Type
 16145 ;;                  1    wreg      void 
 16146 ;; Registers used:
 16147 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16148 ;; Tracked objects:
 16149 ;;		On entry : 0/0
 16150 ;;		On exit  : 0/0
 16151 ;;		Unchanged: 0/0
 16152 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16157 ;;Total ram usage:        1 bytes
 16158 ;; Hardware stack levels used:    1
 16159 ;; Hardware stack levels required when called:    6
 16160 ;; This function calls:
 16161 ;;		_lcd_dispadd
 16162 ;;		_lcd_write
 16163 ;; This function is called by:
 16164 ;;		_displ_lflags
 16165 ;;		_displ_sflags
 16166 ;;		_displ_time
 16167 ;;		_displ_code
 16168 ;;		_displ_hex
 16169 ;;		_lcd_string
 16170 ;;		_displ_price
 16171 ;;		_lcd_test
 16172 ;; This function uses a non-reentrant model
 16173 ;;
 16174                           
 16175                           	psect	text97
 16176  011F08                     __ptext97:
 16177                           	opt stack 0
 16178  011F08                     _lcd_writeC:
 16179                           	opt stack 22
 16180                           
 16181                           ;incstack = 0
 16182                           ;lcd_writeC@lcdata stored from wreg
 16183  011F08  6E23               	movwf	lcd_writeC@lcdata,c
 16184  011F0A  8487               	bsf	3975,2,c	;# 
 16185                           
 16186                           ;lcd.c: 254: lcd_write(lcdata);
 16187  011F0C  5023               	movf	lcd_writeC@lcdata,w,c
 16188  011F0E  EC78  F094         	call	_lcd_write
 16189                           
 16190                           ;lcd.c: 258: switch(bflag)
 16191  011F12  D021               	goto	l1680
 16192  011F14  0E49               	movlw	low _line2
 16193  011F16  6EF6               	movwf	tblptrl,c
 16194  011F18                     	if	1	;There is more than 1 active tblptr byte
 16195  011F18  0EFC               	movlw	high _line2
 16196  011F1A  6EF7               	movwf	tblptrh,c
 16197  011F1C                     	endif
 16198  011F1C                     	if	1	;There are 3 active tblptr bytes
 16199  011F1C  0E00               	movlw	low (_line2 shr (0+16))
 16200  011F1E  6EF8               	movwf	tblptru,c
 16201  011F20                     	endif
 16202  011F20  0008               	tblrd		*
 16203  011F22  50F5               	movf	tablat,w,c
 16204  011F24  EC74  F095         	call	_lcd_dispadd
 16205                           
 16206                           ;lcd.c: 261: break;
 16207  011F28  D020               	goto	l1682
 16208  011F2A  0E48               	movlw	low _line3
 16209  011F2C  6EF6               	movwf	tblptrl,c
 16210  011F2E                     	if	1	;There is more than 1 active tblptr byte
 16211  011F2E  0EFC               	movlw	high _line3
 16212  011F30  6EF7               	movwf	tblptrh,c
 16213  011F32                     	endif
 16214  011F32                     	if	1	;There are 3 active tblptr bytes
 16215  011F32  0E00               	movlw	low (_line3 shr (0+16))
 16216  011F34  6EF8               	movwf	tblptru,c
 16217  011F36                     	endif
 16218  011F36  0008               	tblrd		*
 16219  011F38  50F5               	movf	tablat,w,c
 16220  011F3A  EC74  F095         	call	_lcd_dispadd
 16221                           
 16222                           ;lcd.c: 263: break;
 16223  011F3E  D015               	goto	l1682
 16224  011F40  0E47               	movlw	low _line4
 16225  011F42  6EF6               	movwf	tblptrl,c
 16226  011F44                     	if	1	;There is more than 1 active tblptr byte
 16227  011F44  0EFC               	movlw	high _line4
 16228  011F46  6EF7               	movwf	tblptrh,c
 16229  011F48                     	endif
 16230  011F48                     	if	1	;There are 3 active tblptr bytes
 16231  011F48  0E00               	movlw	low (_line4 shr (0+16))
 16232  011F4A  6EF8               	movwf	tblptru,c
 16233  011F4C                     	endif
 16234  011F4C  0008               	tblrd		*
 16235  011F4E  50F5               	movf	tablat,w,c
 16236  011F50  EC74  F095         	call	_lcd_dispadd
 16237                           
 16238                           ;lcd.c: 265: }
 16239  011F54  D00A               	goto	l1682
 16240  011F56                     l1680:
 16241  011F56  5047               	movf	_bflag,w,c
 16242                           
 16243                           ; Switch size 1, requested type "space"
 16244                           ; Number of cases is 3, Range of values is 19 to 83
 16245                           ; switch strategies available:
 16246                           ; Name         Instructions Cycles
 16247                           ; simple_byte           10     6 (average)
 16248                           ;	Chosen strategy is simple_byte
 16249  011F58  0A13               	xorlw	19	; case 19
 16250  011F5A  B4D8               	btfsc	status,2,c
 16251  011F5C  D7DB               	goto	l1681
 16252  011F5E  0A34               	xorlw	52	; case 39
 16253  011F60  B4D8               	btfsc	status,2,c
 16254  011F62  D7EE               	goto	l1684
 16255  011F64  0A74               	xorlw	116	; case 83
 16256  011F66  B4D8               	btfsc	status,2,c
 16257  011F68  D7E0               	goto	l1683
 16258  011F6A                     l1682:
 16259  011F6A  9487               	bcf	3975,2,c	;# 
 16260  011F6C  0012               	return		;funcret
 16261  011F6E                     __end_of_lcd_writeC:
 16262                           	opt stack 0
 16263                           tblptru	equ	0xFF8
 16264                           tblptrh	equ	0xFF7
 16265                           tblptrl	equ	0xFF6
 16266                           tablat	equ	0xFF5
 16267                           prodh	equ	0xFF4
 16268                           prodl	equ	0xFF3
 16269                           intcon	equ	0xFF2
 16270                           postinc0	equ	0xFEE
 16271                           wreg	equ	0xFE8
 16272                           indf2	equ	0xFDF
 16273                           postinc2	equ	0xFDE
 16274                           fsr2h	equ	0xFDA
 16275                           fsr2l	equ	0xFD9
 16276                           status	equ	0xFD8
 16277                           
 16278 ;; *************** function _lcd_dispadd *****************
 16279 ;; Defined at:
 16280 ;;		line 269 in file "lcd.c"
 16281 ;; Parameters:    Size  Location     Type
 16282 ;;  lcdaddress      1    wreg     unsigned char 
 16283 ;; Auto vars:     Size  Location     Type
 16284 ;;  lcdaddress      1   22[COMRAM] unsigned char 
 16285 ;;  lcdatasave      1   23[COMRAM] unsigned char 
 16286 ;; Return value:  Size  Location     Type
 16287 ;;                  1    wreg      void 
 16288 ;; Registers used:
 16289 ;;		wreg, status,2, status,0, cstack
 16290 ;; Tracked objects:
 16291 ;;		On entry : 0/0
 16292 ;;		On exit  : 0/0
 16293 ;;		Unchanged: 0/0
 16294 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16299 ;;Total ram usage:        2 bytes
 16300 ;; Hardware stack levels used:    1
 16301 ;; Hardware stack levels required when called:    5
 16302 ;; This function calls:
 16303 ;;		_lcd_write
 16304 ;; This function is called by:
 16305 ;;		_displ_sens
 16306 ;;		_displ_lflags
 16307 ;;		_lcd_string
 16308 ;;		_displ_price
 16309 ;;		_displ_nochange
 16310 ;;		_lcd_writeC
 16311 ;;		_Hopper_coin
 16312 ;;		_Update_Hopcoin
 16313 ;; This function uses a non-reentrant model
 16314 ;;
 16315                           
 16316                           	psect	text98
 16317  012AE8                     __ptext98:
 16318                           	opt stack 0
 16319  012AE8                     _lcd_dispadd:
 16320                           	opt stack 22
 16321                           
 16322                           ;incstack = 0
 16323                           ;lcd_dispadd@lcdaddress stored from wreg
 16324  012AE8  6E21               	movwf	lcd_dispadd@lcdaddress,c
 16325                           
 16326                           ;lcd.c: 271: uint8_t lcdatasave = lcdata;
 16327  012AEA  C046  F022         	movff	_lcdata,lcd_dispadd@lcdatasave
 16328  012AEE  9487               	bcf	3975,2,c	;# 
 16329                           
 16330                           ;lcd.c: 274: lcd_write(lcdaddress | 0x80);
 16331  012AF0  5021               	movf	lcd_dispadd@lcdaddress,w,c
 16332  012AF2  0980               	iorlw	128
 16333  012AF4  EC78  F094         	call	_lcd_write
 16334  012AF8  8487               	bsf	3975,2,c	;# 
 16335                           
 16336                           ;lcd.c: 276: lcdata = lcdatasave;
 16337  012AFA  C022  F046         	movff	lcd_dispadd@lcdatasave,_lcdata
 16338  012AFE  0012               	return		;funcret
 16339  012B00                     __end_of_lcd_dispadd:
 16340                           	opt stack 0
 16341                           tblptru	equ	0xFF8
 16342                           tblptrh	equ	0xFF7
 16343                           tblptrl	equ	0xFF6
 16344                           tablat	equ	0xFF5
 16345                           prodh	equ	0xFF4
 16346                           prodl	equ	0xFF3
 16347                           intcon	equ	0xFF2
 16348                           postinc0	equ	0xFEE
 16349                           wreg	equ	0xFE8
 16350                           indf2	equ	0xFDF
 16351                           postinc2	equ	0xFDE
 16352                           fsr2h	equ	0xFDA
 16353                           fsr2l	equ	0xFD9
 16354                           status	equ	0xFD8
 16355                           
 16356 ;; *************** function _lcd_write *****************
 16357 ;; Defined at:
 16358 ;;		line 281 in file "lcd.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;  lcdata          1    wreg     unsigned char 
 16361 ;; Auto vars:     Size  Location     Type
 16362 ;;  lcdata          1   21[COMRAM] unsigned char 
 16363 ;;  savelatd        1   20[COMRAM] unsigned char 
 16364 ;; Return value:  Size  Location     Type
 16365 ;;                  1    wreg      void 
 16366 ;; Registers used:
 16367 ;;		wreg, status,2, status,0, cstack
 16368 ;; Tracked objects:
 16369 ;;		On entry : 0/0
 16370 ;;		On exit  : 0/0
 16371 ;;		Unchanged: 0/0
 16372 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16377 ;;Total ram usage:        2 bytes
 16378 ;; Hardware stack levels used:    1
 16379 ;; Hardware stack levels required when called:    4
 16380 ;; This function calls:
 16381 ;;		_lcd_clockE
 16382 ;;		_read_busy
 16383 ;; This function is called by:
 16384 ;;		_lcd_init
 16385 ;;		_displ_note
 16386 ;;		_lcd_string
 16387 ;;		_displ_price
 16388 ;;		_lcd_writeC
 16389 ;;		_lcd_dispadd
 16390 ;; This function uses a non-reentrant model
 16391 ;;
 16392                           
 16393                           	psect	text99
 16394  0128F0                     __ptext99:
 16395                           	opt stack 0
 16396  0128F0                     _lcd_write:
 16397                           	opt stack 23
 16398                           
 16399                           ;incstack = 0
 16400                           ;lcd_write@lcdata stored from wreg
 16401  0128F0  6E20               	movwf	lcd_write@lcdata,c
 16402                           
 16403                           ;lcd.c: 283: uint8_t savelatd = LATD;
 16404  0128F2  CF86 F01F          	movff	3974,lcd_write@savelatd	;volatile
 16405                           
 16406                           ;lcd.c: 286: bflag = read_busy();
 16407  0128F6  EC54  F092         	call	_read_busy	;wreg free
 16408  0128FA  D002               	goto	L18
 16409  0128FC                     
 16410                           ;lcd.c: 288: {
 16411                           ;lcd.c: 289: bflag = read_busy();
 16412  0128FC  EC54  F092         	call	_read_busy	;wreg free
 16413  012900                     L18:
 16414  012900  6E47               	movwf	_bflag,c
 16415  012902  BE47               	btfsc	_bflag,7,c
 16416  012904  D7FB               	goto	l1692
 16417                           
 16418                           ;lcd.c: 290: }
 16419                           ;lcd.c: 291: LATD = (lcdata >> 4) & 0x0F;
 16420  012906  3820               	swapf	lcd_write@lcdata,w,c
 16421  012908  0B0F               	andlw	15
 16422  01290A  0B0F               	andlw	15
 16423  01290C  6E86               	movwf	3974,c	;volatile
 16424                           
 16425                           ;lcd.c: 293: lcd_clockE();
 16426  01290E  EC15  F096         	call	_lcd_clockE	;wreg free
 16427                           
 16428                           ;lcd.c: 295: LATD = lcdata & 0x0F;
 16429  012912  5020               	movf	lcd_write@lcdata,w,c
 16430  012914  0B0F               	andlw	15
 16431  012916  6E86               	movwf	3974,c	;volatile
 16432                           
 16433                           ;lcd.c: 296: lcd_clockE();
 16434  012918  EC15  F096         	call	_lcd_clockE	;wreg free
 16435                           
 16436                           ;lcd.c: 297: LATD = savelatd;
 16437  01291C  C01F  FF86         	movff	lcd_write@savelatd,3974	;volatile
 16438  012920  0012               	return		;funcret
 16439  012922                     __end_of_lcd_write:
 16440                           	opt stack 0
 16441                           tblptru	equ	0xFF8
 16442                           tblptrh	equ	0xFF7
 16443                           tblptrl	equ	0xFF6
 16444                           tablat	equ	0xFF5
 16445                           prodh	equ	0xFF4
 16446                           prodl	equ	0xFF3
 16447                           intcon	equ	0xFF2
 16448                           postinc0	equ	0xFEE
 16449                           wreg	equ	0xFE8
 16450                           indf2	equ	0xFDF
 16451                           postinc2	equ	0xFDE
 16452                           fsr2h	equ	0xFDA
 16453                           fsr2l	equ	0xFD9
 16454                           status	equ	0xFD8
 16455                           
 16456 ;; *************** function _read_busy *****************
 16457 ;; Defined at:
 16458 ;;		line 312 in file "lcd.c"
 16459 ;; Parameters:    Size  Location     Type
 16460 ;;		None
 16461 ;; Auto vars:     Size  Location     Type
 16462 ;;  savelatd        1   19[COMRAM] unsigned char 
 16463 ;;  savelate        1   18[COMRAM] unsigned char 
 16464 ;; Return value:  Size  Location     Type
 16465 ;;                  1    wreg      char 
 16466 ;; Registers used:
 16467 ;;		wreg, status,2, status,0, cstack
 16468 ;; Tracked objects:
 16469 ;;		On entry : 0/0
 16470 ;;		On exit  : 0/0
 16471 ;;		Unchanged: 0/0
 16472 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16477 ;;Total ram usage:        2 bytes
 16478 ;; Hardware stack levels used:    1
 16479 ;; Hardware stack levels required when called:    3
 16480 ;; This function calls:
 16481 ;;		_lcd_clockH
 16482 ;;		_lcd_clockL
 16483 ;; This function is called by:
 16484 ;;		_lcd_write
 16485 ;; This function uses a non-reentrant model
 16486 ;;
 16487                           
 16488                           	psect	text100
 16489  0124A8                     __ptext100:
 16490                           	opt stack 0
 16491  0124A8                     _read_busy:
 16492                           	opt stack 23
 16493                           
 16494                           ;lcd.c: 314: uint8_t savelate = LATE;
 16495                           
 16496                           ;incstack = 0
 16497  0124A8  CF87 F01D          	movff	3975,read_busy@savelate	;volatile
 16498                           
 16499                           ;lcd.c: 315: uint8_t savelatd = LATD;
 16500  0124AC  CF86 F01E          	movff	3974,read_busy@savelatd	;volatile
 16501  0124B0  9487               	bcf	3975,2,c	;# 
 16502  0124B2  8287               	bsf	3975,1,c	;# 
 16503                           
 16504                           ;lcd.c: 318: TRISD = (TRISD | 0x0F);
 16505  0124B4  508B               	movf	3979,w,c	;volatile
 16506  0124B6  090F               	iorlw	15
 16507  0124B8  6E8B               	movwf	3979,c	;volatile
 16508                           
 16509                           ;lcd.c: 319: lcd_clockH();
 16510  0124BA  EC38  F096         	call	_lcd_clockH	;wreg free
 16511                           
 16512                           ;lcd.c: 320: bflag = (PORTD << 4);
 16513  0124BE  3890               	swapf	3984,w,c	;volatile
 16514  0124C0  0BF0               	andlw	240
 16515  0124C2  6E47               	movwf	_bflag,c
 16516                           
 16517                           ;lcd.c: 321: lcd_clockL();
 16518  0124C4  EC34  F096         	call	_lcd_clockL	;wreg free
 16519                           
 16520                           ;lcd.c: 322: lcd_clockH();
 16521  0124C8  EC38  F096         	call	_lcd_clockH	;wreg free
 16522                           
 16523                           ;lcd.c: 323: bflag = bflag | (PORTD & 0x0F);
 16524  0124CC  5090               	movf	3984,w,c	;volatile
 16525  0124CE  0B0F               	andlw	15
 16526  0124D0  1047               	iorwf	_bflag,w,c
 16527  0124D2  6E47               	movwf	_bflag,c
 16528  0124D4  9087               	bcf	3975,0,c	;# 
 16529                           
 16530                           ;lcd.c: 325: TRISD = (TRISD & 0xF0);
 16531  0124D6  508B               	movf	3979,w,c	;volatile
 16532  0124D8  0BF0               	andlw	240
 16533  0124DA  6E8B               	movwf	3979,c	;volatile
 16534  0124DC  9287               	bcf	3975,1,c	;# 
 16535                           
 16536                           ;lcd.c: 327: LATD = savelatd;
 16537  0124DE  C01E  FF86         	movff	read_busy@savelatd,3974	;volatile
 16538                           
 16539                           ;lcd.c: 328: LATE = savelate;
 16540  0124E2  C01D  FF87         	movff	read_busy@savelate,3975	;volatile
 16541                           
 16542                           ;lcd.c: 329: return(bflag);
 16543  0124E6  5047               	movf	_bflag,w,c
 16544  0124E8  0012               	return	
 16545  0124EA                     __end_of_read_busy:
 16546                           	opt stack 0
 16547                           tblptru	equ	0xFF8
 16548                           tblptrh	equ	0xFF7
 16549                           tblptrl	equ	0xFF6
 16550                           tablat	equ	0xFF5
 16551                           prodh	equ	0xFF4
 16552                           prodl	equ	0xFF3
 16553                           intcon	equ	0xFF2
 16554                           postinc0	equ	0xFEE
 16555                           wreg	equ	0xFE8
 16556                           indf2	equ	0xFDF
 16557                           postinc2	equ	0xFDE
 16558                           fsr2h	equ	0xFDA
 16559                           fsr2l	equ	0xFD9
 16560                           status	equ	0xFD8
 16561                           
 16562 ;; *************** function _lcd_clockL *****************
 16563 ;; Defined at:
 16564 ;;		line 344 in file "lcd.c"
 16565 ;; Parameters:    Size  Location     Type
 16566 ;;		None
 16567 ;; Auto vars:     Size  Location     Type
 16568 ;;		None
 16569 ;; Return value:  Size  Location     Type
 16570 ;;                  1    wreg      void 
 16571 ;; Registers used:
 16572 ;;		None
 16573 ;; Tracked objects:
 16574 ;;		On entry : 0/0
 16575 ;;		On exit  : 0/0
 16576 ;;		Unchanged: 0/0
 16577 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16582 ;;Total ram usage:        0 bytes
 16583 ;; Hardware stack levels used:    1
 16584 ;; Hardware stack levels required when called:    2
 16585 ;; This function calls:
 16586 ;;		Nothing
 16587 ;; This function is called by:
 16588 ;;		_read_busy
 16589 ;; This function uses a non-reentrant model
 16590 ;;
 16591                           
 16592                           	psect	text101
 16593  012C68                     __ptext101:
 16594                           	opt stack 0
 16595  012C68                     _lcd_clockL:
 16596                           	opt stack 23
 16597                           
 16598                           ;incstack = 0
 16599  012C68  9087               	bcf	3975,0,c	;# 
 16600                           
 16601                           ;lcd.c: 347: _delay((unsigned long)((1)*(12000000/4000000.0)));
 16602  012C6A  D000               	nop2		;2 cycle nop
 16603  012C6C  F000               	nop	
 16604  012C6E  0012               	return		;funcret
 16605  012C70                     __end_of_lcd_clockL:
 16606                           	opt stack 0
 16607                           tblptru	equ	0xFF8
 16608                           tblptrh	equ	0xFF7
 16609                           tblptrl	equ	0xFF6
 16610                           tablat	equ	0xFF5
 16611                           prodh	equ	0xFF4
 16612                           prodl	equ	0xFF3
 16613                           intcon	equ	0xFF2
 16614                           postinc0	equ	0xFEE
 16615                           wreg	equ	0xFE8
 16616                           indf2	equ	0xFDF
 16617                           postinc2	equ	0xFDE
 16618                           fsr2h	equ	0xFDA
 16619                           fsr2l	equ	0xFD9
 16620                           status	equ	0xFD8
 16621                           
 16622 ;; *************** function _lcd_clockH *****************
 16623 ;; Defined at:
 16624 ;;		line 336 in file "lcd.c"
 16625 ;; Parameters:    Size  Location     Type
 16626 ;;		None
 16627 ;; Auto vars:     Size  Location     Type
 16628 ;;		None
 16629 ;; Return value:  Size  Location     Type
 16630 ;;                  1    wreg      void 
 16631 ;; Registers used:
 16632 ;;		None
 16633 ;; Tracked objects:
 16634 ;;		On entry : 0/0
 16635 ;;		On exit  : 0/0
 16636 ;;		Unchanged: 0/0
 16637 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16642 ;;Total ram usage:        0 bytes
 16643 ;; Hardware stack levels used:    1
 16644 ;; Hardware stack levels required when called:    2
 16645 ;; This function calls:
 16646 ;;		Nothing
 16647 ;; This function is called by:
 16648 ;;		_read_busy
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           	psect	text102
 16653  012C70                     __ptext102:
 16654                           	opt stack 0
 16655  012C70                     _lcd_clockH:
 16656                           	opt stack 23
 16657                           
 16658                           ;incstack = 0
 16659  012C70  8087               	bsf	3975,0,c	;# 
 16660                           
 16661                           ;lcd.c: 339: _delay((unsigned long)((1)*(12000000/4000000.0)));
 16662  012C72  D000               	nop2		;2 cycle nop
 16663  012C74  F000               	nop	
 16664  012C76  0012               	return		;funcret
 16665  012C78                     __end_of_lcd_clockH:
 16666                           	opt stack 0
 16667                           tblptru	equ	0xFF8
 16668                           tblptrh	equ	0xFF7
 16669                           tblptrl	equ	0xFF6
 16670                           tablat	equ	0xFF5
 16671                           prodh	equ	0xFF4
 16672                           prodl	equ	0xFF3
 16673                           intcon	equ	0xFF2
 16674                           postinc0	equ	0xFEE
 16675                           wreg	equ	0xFE8
 16676                           indf2	equ	0xFDF
 16677                           postinc2	equ	0xFDE
 16678                           fsr2h	equ	0xFDA
 16679                           fsr2l	equ	0xFD9
 16680                           status	equ	0xFD8
 16681                           
 16682 ;; *************** function _lcd_clockE *****************
 16683 ;; Defined at:
 16684 ;;		line 352 in file "lcd.c"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;		None
 16687 ;; Auto vars:     Size  Location     Type
 16688 ;;		None
 16689 ;; Return value:  Size  Location     Type
 16690 ;;                  1    wreg      void 
 16691 ;; Registers used:
 16692 ;;		None
 16693 ;; Tracked objects:
 16694 ;;		On entry : 0/0
 16695 ;;		On exit  : 0/0
 16696 ;;		Unchanged: 0/0
 16697 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;Total ram usage:        0 bytes
 16703 ;; Hardware stack levels used:    1
 16704 ;; Hardware stack levels required when called:    2
 16705 ;; This function calls:
 16706 ;;		Nothing
 16707 ;; This function is called by:
 16708 ;;		_lcd_init
 16709 ;;		_lcd_write
 16710 ;; This function uses a non-reentrant model
 16711 ;;
 16712                           
 16713                           	psect	text103
 16714  012C2A                     __ptext103:
 16715                           	opt stack 0
 16716  012C2A                     _lcd_clockE:
 16717                           	opt stack 24
 16718                           
 16719                           ;incstack = 0
 16720  012C2A  8087               	bsf	3975,0,c	;# 
 16721                           
 16722                           ;lcd.c: 355: _delay((unsigned long)((1)*(12000000/4000000.0)));
 16723  012C2C  D000               	nop2		;2 cycle nop
 16724  012C2E  F000               	nop	
 16725  012C30  9087               	bcf	3975,0,c	;# 
 16726                           
 16727                           ;lcd.c: 357: _delay((unsigned long)((1)*(12000000/4000000.0)));
 16728  012C32  D000               	nop2		;2 cycle nop
 16729  012C34  F000               	nop	
 16730  012C36  0012               	return		;funcret
 16731  012C38                     __end_of_lcd_clockE:
 16732                           	opt stack 0
 16733                           tblptru	equ	0xFF8
 16734                           tblptrh	equ	0xFF7
 16735                           tblptrl	equ	0xFF6
 16736                           tablat	equ	0xFF5
 16737                           prodh	equ	0xFF4
 16738                           prodl	equ	0xFF3
 16739                           intcon	equ	0xFF2
 16740                           postinc0	equ	0xFEE
 16741                           wreg	equ	0xFE8
 16742                           indf2	equ	0xFDF
 16743                           postinc2	equ	0xFDE
 16744                           fsr2h	equ	0xFDA
 16745                           fsr2l	equ	0xFD9
 16746                           status	equ	0xFD8
 16747                           
 16748 ;; *************** function ___ltmod *****************
 16749 ;; Defined at:
 16750 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/ltmod.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;  dividend        3   18[COMRAM] unsigned um
 16753 ;;  divisor         3   21[COMRAM] unsigned um
 16754 ;; Auto vars:     Size  Location     Type
 16755 ;;  counter         1   24[COMRAM] unsigned char 
 16756 ;; Return value:  Size  Location     Type
 16757 ;;                  3   18[COMRAM] unsigned um
 16758 ;; Registers used:
 16759 ;;		wreg, status,2, status,0
 16760 ;; Tracked objects:
 16761 ;;		On entry : 0/0
 16762 ;;		On exit  : 0/0
 16763 ;;		Unchanged: 0/0
 16764 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16765 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16768 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16769 ;;Total ram usage:        7 bytes
 16770 ;; Hardware stack levels used:    1
 16771 ;; Hardware stack levels required when called:    2
 16772 ;; This function calls:
 16773 ;;		Nothing
 16774 ;; This function is called by:
 16775 ;;		_displ_hex
 16776 ;; This function uses a non-reentrant model
 16777 ;;
 16778                           
 16779                           	psect	text104
 16780  01224A                     __ptext104:
 16781                           	opt stack 0
 16782  01224A                     ___ltmod:
 16783                           	opt stack 23
 16784                           
 16785                           ;incstack = 0
 16786  01224A  5020               	movf	___ltmod@divisor,w,c
 16787  01224C  1021               	iorwf	___ltmod@divisor+1,w,c
 16788  01224E  1022               	iorwf	___ltmod@divisor+2,w,c
 16789  012250  B4D8               	btfsc	status,2,c
 16790  012252  D01E               	goto	l5373
 16791  012254  0E01               	movlw	1
 16792  012256  6E23               	movwf	___ltmod@counter,c
 16793  012258  D005               	goto	l5368
 16794  01225A  90D8               	bcf	status,0,c
 16795  01225C  3620               	rlcf	___ltmod@divisor,f,c
 16796  01225E  3621               	rlcf	___ltmod@divisor+1,f,c
 16797  012260  3622               	rlcf	___ltmod@divisor+2,f,c
 16798  012262  2A23               	incf	___ltmod@counter,f,c
 16799  012264                     l5368:
 16800  012264  AE22               	btfss	___ltmod@divisor+2,7,c
 16801  012266  D7F9               	goto	l5369
 16802  012268                     u3950:
 16803  012268  5020               	movf	___ltmod@divisor,w,c
 16804  01226A  5C1D               	subwf	___ltmod@dividend,w,c
 16805  01226C  5021               	movf	___ltmod@divisor+1,w,c
 16806  01226E  581E               	subwfb	___ltmod@dividend+1,w,c
 16807  012270  5022               	movf	___ltmod@divisor+2,w,c
 16808  012272  581F               	subwfb	___ltmod@dividend+2,w,c
 16809  012274  A0D8               	btfss	status,0,c
 16810  012276  D006               	goto	l5372
 16811  012278  5020               	movf	___ltmod@divisor,w,c
 16812  01227A  5E1D               	subwf	___ltmod@dividend,f,c
 16813  01227C  5021               	movf	___ltmod@divisor+1,w,c
 16814  01227E  5A1E               	subwfb	___ltmod@dividend+1,f,c
 16815  012280  5022               	movf	___ltmod@divisor+2,w,c
 16816  012282  5A1F               	subwfb	___ltmod@dividend+2,f,c
 16817  012284                     l5372:
 16818  012284  90D8               	bcf	status,0,c
 16819  012286  3222               	rrcf	___ltmod@divisor+2,f,c
 16820  012288  3221               	rrcf	___ltmod@divisor+1,f,c
 16821  01228A  3220               	rrcf	___ltmod@divisor,f,c
 16822  01228C  2E23               	decfsz	___ltmod@counter,f,c
 16823  01228E  D7EC               	goto	u3950
 16824  012290                     l5373:
 16825  012290  C01D  F01D         	movff	___ltmod@dividend,?___ltmod
 16826  012294  C01E  F01E         	movff	___ltmod@dividend+1,?___ltmod+1
 16827  012298  C01F  F01F         	movff	___ltmod@dividend+2,?___ltmod+2
 16828  01229C  0012               	return		;funcret
 16829  01229E                     __end_of___ltmod:
 16830                           	opt stack 0
 16831                           tblptru	equ	0xFF8
 16832                           tblptrh	equ	0xFF7
 16833                           tblptrl	equ	0xFF6
 16834                           tablat	equ	0xFF5
 16835                           prodh	equ	0xFF4
 16836                           prodl	equ	0xFF3
 16837                           intcon	equ	0xFF2
 16838                           postinc0	equ	0xFEE
 16839                           wreg	equ	0xFE8
 16840                           indf2	equ	0xFDF
 16841                           postinc2	equ	0xFDE
 16842                           fsr2h	equ	0xFDA
 16843                           fsr2l	equ	0xFD9
 16844                           status	equ	0xFD8
 16845                           
 16846 ;; *************** function ___ltdiv *****************
 16847 ;; Defined at:
 16848 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/ltdiv.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;  dividend        3   18[COMRAM] unsigned um
 16851 ;;  divisor         3   21[COMRAM] unsigned um
 16852 ;; Auto vars:     Size  Location     Type
 16853 ;;  quotient        3   24[COMRAM] unsigned um
 16854 ;;  counter         1   27[COMRAM] unsigned char 
 16855 ;; Return value:  Size  Location     Type
 16856 ;;                  3   18[COMRAM] unsigned um
 16857 ;; Registers used:
 16858 ;;		wreg, status,2, status,0
 16859 ;; Tracked objects:
 16860 ;;		On entry : 0/0
 16861 ;;		On exit  : 0/0
 16862 ;;		Unchanged: 0/0
 16863 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16864 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16865 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16867 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16868 ;;Total ram usage:       10 bytes
 16869 ;; Hardware stack levels used:    1
 16870 ;; Hardware stack levels required when called:    2
 16871 ;; This function calls:
 16872 ;;		Nothing
 16873 ;; This function is called by:
 16874 ;;		_displ_hex
 16875 ;; This function uses a non-reentrant model
 16876 ;;
 16877                           
 16878                           	psect	text105
 16879  011E36                     __ptext105:
 16880                           	opt stack 0
 16881  011E36                     ___ltdiv:
 16882                           	opt stack 23
 16883                           
 16884                           ;incstack = 0
 16885  011E36  0E00               	movlw	0
 16886  011E38  6E23               	movwf	___ltdiv@quotient,c
 16887  011E3A  0E00               	movlw	0
 16888  011E3C  6E24               	movwf	___ltdiv@quotient+1,c
 16889  011E3E  0E00               	movlw	0
 16890  011E40  6E25               	movwf	___ltdiv@quotient+2,c
 16891  011E42  5020               	movf	___ltdiv@divisor,w,c
 16892  011E44  1021               	iorwf	___ltdiv@divisor+1,w,c
 16893  011E46  1022               	iorwf	___ltdiv@divisor+2,w,c
 16894  011E48  B4D8               	btfsc	status,2,c
 16895  011E4A  D023               	goto	l5363
 16896  011E4C  0E01               	movlw	1
 16897  011E4E  6E26               	movwf	___ltdiv@counter,c
 16898  011E50  D005               	goto	l5358
 16899  011E52  90D8               	bcf	status,0,c
 16900  011E54  3620               	rlcf	___ltdiv@divisor,f,c
 16901  011E56  3621               	rlcf	___ltdiv@divisor+1,f,c
 16902  011E58  3622               	rlcf	___ltdiv@divisor+2,f,c
 16903  011E5A  2A26               	incf	___ltdiv@counter,f,c
 16904  011E5C                     l5358:
 16905  011E5C  AE22               	btfss	___ltdiv@divisor+2,7,c
 16906  011E5E  D7F9               	goto	l5359
 16907  011E60                     u3920:
 16908  011E60  90D8               	bcf	status,0,c
 16909  011E62  3623               	rlcf	___ltdiv@quotient,f,c
 16910  011E64  3624               	rlcf	___ltdiv@quotient+1,f,c
 16911  011E66  3625               	rlcf	___ltdiv@quotient+2,f,c
 16912  011E68  5020               	movf	___ltdiv@divisor,w,c
 16913  011E6A  5C1D               	subwf	___ltdiv@dividend,w,c
 16914  011E6C  5021               	movf	___ltdiv@divisor+1,w,c
 16915  011E6E  581E               	subwfb	___ltdiv@dividend+1,w,c
 16916  011E70  5022               	movf	___ltdiv@divisor+2,w,c
 16917  011E72  581F               	subwfb	___ltdiv@dividend+2,w,c
 16918  011E74  A0D8               	btfss	status,0,c
 16919  011E76  D007               	goto	l5362
 16920  011E78  5020               	movf	___ltdiv@divisor,w,c
 16921  011E7A  5E1D               	subwf	___ltdiv@dividend,f,c
 16922  011E7C  5021               	movf	___ltdiv@divisor+1,w,c
 16923  011E7E  5A1E               	subwfb	___ltdiv@dividend+1,f,c
 16924  011E80  5022               	movf	___ltdiv@divisor+2,w,c
 16925  011E82  5A1F               	subwfb	___ltdiv@dividend+2,f,c
 16926  011E84  8023               	bsf	___ltdiv@quotient,0,c
 16927  011E86                     l5362:
 16928  011E86  90D8               	bcf	status,0,c
 16929  011E88  3222               	rrcf	___ltdiv@divisor+2,f,c
 16930  011E8A  3221               	rrcf	___ltdiv@divisor+1,f,c
 16931  011E8C  3220               	rrcf	___ltdiv@divisor,f,c
 16932  011E8E  2E26               	decfsz	___ltdiv@counter,f,c
 16933  011E90  D7E7               	goto	u3920
 16934  011E92                     l5363:
 16935  011E92  C023  F01D         	movff	___ltdiv@quotient,?___ltdiv
 16936  011E96  C024  F01E         	movff	___ltdiv@quotient+1,?___ltdiv+1
 16937  011E9A  C025  F01F         	movff	___ltdiv@quotient+2,?___ltdiv+2
 16938  011E9E  0012               	return		;funcret
 16939  011EA0                     __end_of___ltdiv:
 16940                           	opt stack 0
 16941                           tblptru	equ	0xFF8
 16942                           tblptrh	equ	0xFF7
 16943                           tblptrl	equ	0xFF6
 16944                           tablat	equ	0xFF5
 16945                           prodh	equ	0xFF4
 16946                           prodl	equ	0xFF3
 16947                           intcon	equ	0xFF2
 16948                           postinc0	equ	0xFEE
 16949                           wreg	equ	0xFE8
 16950                           indf2	equ	0xFDF
 16951                           postinc2	equ	0xFDE
 16952                           fsr2h	equ	0xFDA
 16953                           fsr2l	equ	0xFD9
 16954                           status	equ	0xFD8
 16955                           
 16956 ;; *************** function _credit_check *****************
 16957 ;; Defined at:
 16958 ;;		line 149 in file "vend.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;		None
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;		None
 16963 ;; Return value:  Size  Location     Type
 16964 ;;                  1    wreg      unsigned char 
 16965 ;; Registers used:
 16966 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16967 ;; Tracked objects:
 16968 ;;		On entry : 0/0
 16969 ;;		On exit  : 0/0
 16970 ;;		Unchanged: 0/0
 16971 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16976 ;;Total ram usage:        0 bytes
 16977 ;; Hardware stack levels used:    1
 16978 ;; Hardware stack levels required when called:    3
 16979 ;; This function calls:
 16980 ;;		_DATAEE_ReadByte
 16981 ;; This function is called by:
 16982 ;;		_displ_credit
 16983 ;;		_vend_init
 16984 ;;		_price_check
 16985 ;; This function uses a non-reentrant model
 16986 ;;
 16987                           
 16988                           	psect	text106
 16989  012A1C                     __ptext106:
 16990                           	opt stack 0
 16991  012A1C                     _credit_check:
 16992                           	opt stack 26
 16993                           
 16994                           ;vend.c: 151: cash = DATAEE_ReadByte(credmem);
 16995                           
 16996                           ;incstack = 0
 16997  012A1C  0E1B               	movlw	low _credmem
 16998  012A1E  6EF6               	movwf	tblptrl,c
 16999  012A20                     	if	1	;There is more than 1 active tblptr byte
 17000  012A20  0EFC               	movlw	high _credmem
 17001  012A22  6EF7               	movwf	tblptrh,c
 17002  012A24                     	endif
 17003  012A24                     	if	1	;There are 3 active tblptr bytes
 17004  012A24  0E00               	movlw	low (_credmem shr (0+16))
 17005  012A26  6EF8               	movwf	tblptru,c
 17006  012A28                     	endif
 17007  012A28  0009               	tblrd		*+
 17008  012A2A  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 17009  012A2E  000A               	tblrd		*-
 17010  012A30  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 17011  012A34  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 17012  012A38  6E39               	movwf	_cash,c	;volatile
 17013                           
 17014                           ;vend.c: 152: return(cash);
 17015  012A3A  5039               	movf	_cash,w,c	;volatile
 17016  012A3C  0012               	return	
 17017  012A3E                     __end_of_credit_check:
 17018                           	opt stack 0
 17019                           tblptru	equ	0xFF8
 17020                           tblptrh	equ	0xFF7
 17021                           tblptrl	equ	0xFF6
 17022                           tablat	equ	0xFF5
 17023                           prodh	equ	0xFF4
 17024                           prodl	equ	0xFF3
 17025                           intcon	equ	0xFF2
 17026                           postinc0	equ	0xFEE
 17027                           wreg	equ	0xFE8
 17028                           indf2	equ	0xFDF
 17029                           postinc2	equ	0xFDE
 17030                           fsr2h	equ	0xFDA
 17031                           fsr2l	equ	0xFD9
 17032                           status	equ	0xFD8
 17033                           
 17034 ;; *************** function _DATAEE_ReadByte *****************
 17035 ;; Defined at:
 17036 ;;		line 192 in file "mcc_generated_files/memory.c"
 17037 ;; Parameters:    Size  Location     Type
 17038 ;;  bAdd            2   18[COMRAM] unsigned int 
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;		None
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  1    wreg      unsigned char 
 17043 ;; Registers used:
 17044 ;;		wreg, status,2, status,0
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 0/0
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17054 ;;Total ram usage:        2 bytes
 17055 ;; Hardware stack levels used:    1
 17056 ;; Hardware stack levels required when called:    2
 17057 ;; This function calls:
 17058 ;;		Nothing
 17059 ;; This function is called by:
 17060 ;;		_main
 17061 ;;		_Init_vendmem
 17062 ;;		_vend_init
 17063 ;;		_Read_NVstore
 17064 ;;		_credit_add
 17065 ;;		_credit_subtract
 17066 ;;		_credit_check
 17067 ;;		_Audit
 17068 ;;		_Hopper_coin
 17069 ;;		_set_price
 17070 ;;		_Vend_timeset
 17071 ;;		_Link_chan
 17072 ;;		_off_sens
 17073 ;;		_mdb_init
 17074 ;;		_give_change
 17075 ;;		_price_check
 17076 ;;		_dispense
 17077 ;;		_set_motortime
 17078 ;;		_init_pricestore
 17079 ;;		_disable_channel
 17080 ;;		_update_vends
 17081 ;; This function uses a non-reentrant model
 17082 ;;
 17083                           
 17084                           	psect	text107
 17085  012B00                     __ptext107:
 17086                           	opt stack 0
 17087  012B00                     _DATAEE_ReadByte:
 17088                           	opt stack 22
 17089                           
 17090                           ;memory.c: 194: NVMADRH = ((bAdd >> 8) & 0x03);
 17091                           
 17092                           ;incstack = 0
 17093  012B00  501E               	movf	DATAEE_ReadByte@bAdd+1,w,c
 17094  012B02  0B03               	andlw	3
 17095  012B04  6E7F               	movwf	3967,c	;volatile
 17096                           
 17097                           ;memory.c: 195: NVMADRL = (bAdd & 0xFF);
 17098  012B06  C01D  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
 17099                           
 17100                           ;memory.c: 196: NVMCON1bits.NVMREG = 0;
 17101  012B0A  0E3F               	movlw	-193
 17102  012B0C  1681               	andwf	3969,f,c	;volsfr
 17103                           
 17104                           ;memory.c: 197: NVMCON1bits.RD = 1;
 17105  012B0E  8081               	bsf	3969,0,c	;volsfr
 17106                           
 17107                           ;memory.c: 198: __nop();
 17108  012B10  F000               	nop	
 17109                           
 17110                           ;memory.c: 199: __nop();
 17111  012B12  F000               	nop	
 17112                           
 17113                           ;memory.c: 201: return (NVMDAT);
 17114  012B14  5080               	movf	3968,w,c	;volatile
 17115  012B16  0012               	return	
 17116  012B18                     __end_of_DATAEE_ReadByte:
 17117                           	opt stack 0
 17118                           tblptru	equ	0xFF8
 17119                           tblptrh	equ	0xFF7
 17120                           tblptrl	equ	0xFF6
 17121                           tablat	equ	0xFF5
 17122                           prodh	equ	0xFF4
 17123                           prodl	equ	0xFF3
 17124                           intcon	equ	0xFF2
 17125                           postinc0	equ	0xFEE
 17126                           wreg	equ	0xFE8
 17127                           indf2	equ	0xFDF
 17128                           postinc2	equ	0xFDE
 17129                           fsr2h	equ	0xFDA
 17130                           fsr2l	equ	0xFD9
 17131                           status	equ	0xFD8
 17132                           
 17133 ;; *************** function _SYSTEM_Initialize *****************
 17134 ;; Defined at:
 17135 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17136 ;; Parameters:    Size  Location     Type
 17137 ;;		None
 17138 ;; Auto vars:     Size  Location     Type
 17139 ;;		None
 17140 ;; Return value:  Size  Location     Type
 17141 ;;                  1    wreg      void 
 17142 ;; Registers used:
 17143 ;;		wreg, status,2, status,0, cstack
 17144 ;; Tracked objects:
 17145 ;;		On entry : 0/0
 17146 ;;		On exit  : 0/0
 17147 ;;		Unchanged: 0/0
 17148 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17153 ;;Total ram usage:        0 bytes
 17154 ;; Hardware stack levels used:    1
 17155 ;; Hardware stack levels required when called:    3
 17156 ;; This function calls:
 17157 ;;		_CMP1_Initialize
 17158 ;;		_DAC1_Initialize
 17159 ;;		_EUSART1_Initialize
 17160 ;;		_EUSART2_Initialize
 17161 ;;		_INTERRUPT_Initialize
 17162 ;;		_OSCILLATOR_Initialize
 17163 ;;		_PIN_MANAGER_Initialize
 17164 ;;		_PMD_Initialize
 17165 ;;		_TMR0_Initialize
 17166 ;;		_TMR1_Initialize
 17167 ;;		_TMR2_Initialize
 17168 ;;		_TMR3_Initialize
 17169 ;;		_TMR4_Initialize
 17170 ;;		_TMR5_Initialize
 17171 ;; This function is called by:
 17172 ;;		_main
 17173 ;; This function uses a non-reentrant model
 17174 ;;
 17175                           
 17176                           	psect	text108
 17177  0126D8                     __ptext108:
 17178                           	opt stack 0
 17179  0126D8                     _SYSTEM_Initialize:
 17180                           	opt stack 27
 17181                           
 17182                           ;mcc.c: 52: INTERRUPT_Initialize();
 17183                           
 17184                           ;incstack = 0
 17185  0126D8  EC3C  F096         	call	_INTERRUPT_Initialize	;wreg free
 17186                           
 17187                           ;mcc.c: 53: PMD_Initialize();
 17188  0126DC  EC5A  F095         	call	_PMD_Initialize	;wreg free
 17189                           
 17190                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 17191  0126E0  ECE2  F08C         	call	_PIN_MANAGER_Initialize	;wreg free
 17192                           
 17193                           ;mcc.c: 55: OSCILLATOR_Initialize();
 17194  0126E4  EC8C  F095         	call	_OSCILLATOR_Initialize	;wreg free
 17195                           
 17196                           ;mcc.c: 56: TMR4_Initialize();
 17197  0126E8  EC4C  F095         	call	_TMR4_Initialize	;wreg free
 17198                           
 17199                           ;mcc.c: 57: TMR2_Initialize();
 17200  0126EC  EC2F  F095         	call	_TMR2_Initialize	;wreg free
 17201                           
 17202                           ;mcc.c: 58: TMR0_Initialize();
 17203  0126F0  ECA8  F094         	call	_TMR0_Initialize	;wreg free
 17204                           
 17205                           ;mcc.c: 59: CMP1_Initialize();
 17206  0126F4  ECCF  F095         	call	_CMP1_Initialize	;wreg free
 17207                           
 17208                           ;mcc.c: 60: TMR3_Initialize();
 17209  0126F8  ECDB  F093         	call	_TMR3_Initialize	;wreg free
 17210                           
 17211                           ;mcc.c: 61: DAC1_Initialize();
 17212  0126FC  EC1C  F096         	call	_DAC1_Initialize	;wreg free
 17213                           
 17214                           ;mcc.c: 62: TMR5_Initialize();
 17215  012700  ECC0  F093         	call	_TMR5_Initialize	;wreg free
 17216                           
 17217                           ;mcc.c: 63: TMR1_Initialize();
 17218  012704  ECF6  F093         	call	_TMR1_Initialize	;wreg free
 17219                           
 17220                           ;mcc.c: 64: EUSART1_Initialize();
 17221  012708  ECBA  F095         	call	_EUSART1_Initialize	;wreg free
 17222                           
 17223                           ;mcc.c: 65: EUSART2_Initialize();
 17224  01270C  EC98  F095         	call	_EUSART2_Initialize	;wreg free
 17225  012710  0012               	return		;funcret
 17226  012712                     __end_of_SYSTEM_Initialize:
 17227                           	opt stack 0
 17228                           tblptru	equ	0xFF8
 17229                           tblptrh	equ	0xFF7
 17230                           tblptrl	equ	0xFF6
 17231                           tablat	equ	0xFF5
 17232                           prodh	equ	0xFF4
 17233                           prodl	equ	0xFF3
 17234                           intcon	equ	0xFF2
 17235                           postinc0	equ	0xFEE
 17236                           wreg	equ	0xFE8
 17237                           indf2	equ	0xFDF
 17238                           postinc2	equ	0xFDE
 17239                           fsr2h	equ	0xFDA
 17240                           fsr2l	equ	0xFD9
 17241                           status	equ	0xFD8
 17242                           
 17243 ;; *************** function _TMR5_Initialize *****************
 17244 ;; Defined at:
 17245 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 17246 ;; Parameters:    Size  Location     Type
 17247 ;;		None
 17248 ;; Auto vars:     Size  Location     Type
 17249 ;;		None
 17250 ;; Return value:  Size  Location     Type
 17251 ;;                  1    wreg      void 
 17252 ;; Registers used:
 17253 ;;		wreg, status,2, status,0
 17254 ;; Tracked objects:
 17255 ;;		On entry : 0/0
 17256 ;;		On exit  : 0/0
 17257 ;;		Unchanged: 0/0
 17258 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17263 ;;Total ram usage:        2 bytes
 17264 ;; Hardware stack levels used:    1
 17265 ;; Hardware stack levels required when called:    2
 17266 ;; This function calls:
 17267 ;;		Nothing
 17268 ;; This function is called by:
 17269 ;;		_SYSTEM_Initialize
 17270 ;;		_mdb_unlock
 17271 ;; This function uses a non-reentrant model
 17272 ;;
 17273                           
 17274                           	psect	text109
 17275  012780                     __ptext109:
 17276                           	opt stack 0
 17277  012780                     _TMR5_Initialize:
 17278                           	opt stack 24
 17279                           
 17280                           ;tmr5.c: 68: T5GCON = 0x00;
 17281                           
 17282                           ;incstack = 0
 17283  012780  0E00               	movlw	0
 17284  012782  6EC4               	movwf	4036,c	;volatile
 17285                           
 17286                           ;tmr5.c: 71: T5GATE = 0x00;
 17287  012784  0E00               	movlw	0
 17288  012786  6EC5               	movwf	4037,c	;volatile
 17289                           
 17290                           ;tmr5.c: 74: T5CLK = 0x04;
 17291  012788  0E04               	movlw	4
 17292  01278A  6EC6               	movwf	4038,c	;volatile
 17293                           
 17294                           ;tmr5.c: 77: TMR5H = 0xE1;
 17295  01278C  0EE1               	movlw	225
 17296  01278E  6EC2               	movwf	4034,c	;volatile
 17297                           
 17298                           ;tmr5.c: 80: TMR5L = 0xBA;
 17299  012790  0EBA               	movlw	186
 17300  012792  6EC1               	movwf	4033,c	;volatile
 17301                           
 17302                           ;tmr5.c: 83: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 17303  012794  50C1               	movf	4033,w,c	;volatile
 17304  012796  CFC2 F01D          	movff	4034,??_TMR5_Initialize	;volatile
 17305  01279A  6A1E               	clrf	(??_TMR5_Initialize+1)& (0+255),c
 17306  01279C  C01D  F01E         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 17307  0127A0  6A1D               	clrf	??_TMR5_Initialize,c
 17308  0127A2  101D               	iorwf	??_TMR5_Initialize,w,c
 17309  0127A4  0100               	movlb	0	; () banked
 17310  0127A6  6FC7               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 17311  0127A8  501E               	movf	??_TMR5_Initialize+1,w,c
 17312  0127AA  6FC8               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;tmr5.c: 86: PIR4bits.TMR5IF = 0;
 17316  0127AC  010E               	movlb	14	; () banked
 17317  0127AE  99CE               	bcf	206,4,b	;volatile
 17318                           
 17319                           ; BSR set to: 14
 17320                           ;tmr5.c: 89: T5CON = 0x01;
 17321  0127B0  0E01               	movlw	1
 17322  0127B2  6EC3               	movwf	4035,c	;volatile
 17323                           
 17324                           ; BSR set to: 14
 17325  0127B4  0012               	return		;funcret
 17326  0127B6                     __end_of_TMR5_Initialize:
 17327                           	opt stack 0
 17328                           tblptru	equ	0xFF8
 17329                           tblptrh	equ	0xFF7
 17330                           tblptrl	equ	0xFF6
 17331                           tablat	equ	0xFF5
 17332                           prodh	equ	0xFF4
 17333                           prodl	equ	0xFF3
 17334                           intcon	equ	0xFF2
 17335                           postinc0	equ	0xFEE
 17336                           wreg	equ	0xFE8
 17337                           indf2	equ	0xFDF
 17338                           postinc2	equ	0xFDE
 17339                           fsr2h	equ	0xFDA
 17340                           fsr2l	equ	0xFD9
 17341                           status	equ	0xFD8
 17342                           
 17343 ;; *************** function _TMR4_Initialize *****************
 17344 ;; Defined at:
 17345 ;;		line 62 in file "mcc_generated_files/tmr4.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;		None
 17348 ;; Auto vars:     Size  Location     Type
 17349 ;;		None
 17350 ;; Return value:  Size  Location     Type
 17351 ;;                  1    wreg      void 
 17352 ;; Registers used:
 17353 ;;		wreg, status,2
 17354 ;; Tracked objects:
 17355 ;;		On entry : 0/0
 17356 ;;		On exit  : 0/0
 17357 ;;		Unchanged: 0/0
 17358 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17363 ;;Total ram usage:        0 bytes
 17364 ;; Hardware stack levels used:    1
 17365 ;; Hardware stack levels required when called:    2
 17366 ;; This function calls:
 17367 ;;		Nothing
 17368 ;; This function is called by:
 17369 ;;		_SYSTEM_Initialize
 17370 ;;		_Reset_hopper
 17371 ;;		_pay_coin
 17372 ;; This function uses a non-reentrant model
 17373 ;;
 17374                           
 17375                           	psect	text110
 17376  012A98                     __ptext110:
 17377                           	opt stack 0
 17378  012A98                     _TMR4_Initialize:
 17379                           	opt stack 24
 17380                           
 17381                           ;tmr4.c: 67: T4CLKCON = 0x04;
 17382                           
 17383                           ; BSR set to: 14
 17384                           ;incstack = 0
 17385  012A98  0E04               	movlw	4
 17386  012A9A  6EB9               	movwf	4025,c	;volatile
 17387                           
 17388                           ;tmr4.c: 70: T4HLT = 0x00;
 17389  012A9C  0E00               	movlw	0
 17390  012A9E  6EB8               	movwf	4024,c	;volatile
 17391                           
 17392                           ;tmr4.c: 73: T4RST = 0x00;
 17393  012AA0  0E00               	movlw	0
 17394  012AA2  6EBA               	movwf	4026,c	;volatile
 17395                           
 17396                           ;tmr4.c: 76: T4PR = 0x4B;
 17397  012AA4  0E4B               	movlw	75
 17398  012AA6  6EB6               	movwf	4022,c	;volatile
 17399                           
 17400                           ;tmr4.c: 79: T4TMR = 0x00;
 17401  012AA8  0E00               	movlw	0
 17402  012AAA  6EB5               	movwf	4021,c	;volatile
 17403                           
 17404                           ;tmr4.c: 82: PIR4bits.TMR4IF = 0;
 17405  012AAC  010E               	movlb	14	; () banked
 17406  012AAE  97CE               	bcf	206,3,b	;volatile
 17407                           
 17408                           ; BSR set to: 14
 17409                           ;tmr4.c: 85: T4CON = 0xFF;
 17410  012AB0  68B7               	setf	4023,c	;volatile
 17411                           
 17412                           ; BSR set to: 14
 17413  012AB2  0012               	return		;funcret
 17414  012AB4                     __end_of_TMR4_Initialize:
 17415                           	opt stack 0
 17416                           tblptru	equ	0xFF8
 17417                           tblptrh	equ	0xFF7
 17418                           tblptrl	equ	0xFF6
 17419                           tablat	equ	0xFF5
 17420                           prodh	equ	0xFF4
 17421                           prodl	equ	0xFF3
 17422                           intcon	equ	0xFF2
 17423                           postinc0	equ	0xFEE
 17424                           wreg	equ	0xFE8
 17425                           indf2	equ	0xFDF
 17426                           postinc2	equ	0xFDE
 17427                           fsr2h	equ	0xFDA
 17428                           fsr2l	equ	0xFD9
 17429                           status	equ	0xFD8
 17430                           
 17431 ;; *************** function _TMR3_Initialize *****************
 17432 ;; Defined at:
 17433 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;		None
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;		None
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      void 
 17440 ;; Registers used:
 17441 ;;		wreg, status,2, status,0
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17451 ;;Total ram usage:        2 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; Hardware stack levels required when called:    2
 17454 ;; This function calls:
 17455 ;;		Nothing
 17456 ;; This function is called by:
 17457 ;;		_SYSTEM_Initialize
 17458 ;;		_mdb_poll
 17459 ;;		_mdb_unlock
 17460 ;;		_cctalk_comm
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464                           	psect	text111
 17465  0127B6                     __ptext111:
 17466                           	opt stack 0
 17467  0127B6                     _TMR3_Initialize:
 17468                           	opt stack 24
 17469                           
 17470                           ;tmr3.c: 68: T3GCON = 0x00;
 17471                           
 17472                           ; BSR set to: 14
 17473                           ;incstack = 0
 17474  0127B6  0E00               	movlw	0
 17475  0127B8  6ECA               	movwf	4042,c	;volatile
 17476                           
 17477                           ;tmr3.c: 71: T3GATE = 0x00;
 17478  0127BA  0E00               	movlw	0
 17479  0127BC  6ECB               	movwf	4043,c	;volatile
 17480                           
 17481                           ;tmr3.c: 74: T3CLK = 0x05;
 17482  0127BE  0E05               	movlw	5
 17483  0127C0  6ECC               	movwf	4044,c	;volatile
 17484                           
 17485                           ;tmr3.c: 77: TMR3H = 0x9E;
 17486  0127C2  0E9E               	movlw	158
 17487  0127C4  6EC8               	movwf	4040,c	;volatile
 17488                           
 17489                           ;tmr3.c: 80: TMR3L = 0x58;
 17490  0127C6  0E58               	movlw	88
 17491  0127C8  6EC7               	movwf	4039,c	;volatile
 17492                           
 17493                           ;tmr3.c: 83: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 17494  0127CA  50C7               	movf	4039,w,c	;volatile
 17495  0127CC  CFC8 F01D          	movff	4040,??_TMR3_Initialize	;volatile
 17496  0127D0  6A1E               	clrf	(??_TMR3_Initialize+1)& (0+255),c
 17497  0127D2  C01D  F01E         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 17498  0127D6  6A1D               	clrf	??_TMR3_Initialize,c
 17499  0127D8  101D               	iorwf	??_TMR3_Initialize,w,c
 17500  0127DA  0100               	movlb	0	; () banked
 17501  0127DC  6FC9               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 17502  0127DE  501E               	movf	??_TMR3_Initialize+1,w,c
 17503  0127E0  6FCA               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;tmr3.c: 86: PIR4bits.TMR3IF = 0;
 17507  0127E2  010E               	movlb	14	; () banked
 17508  0127E4  95CE               	bcf	206,2,b	;volatile
 17509                           
 17510                           ; BSR set to: 14
 17511                           ;tmr3.c: 89: T3CON = 0x01;
 17512  0127E6  0E01               	movlw	1
 17513  0127E8  6EC9               	movwf	4041,c	;volatile
 17514                           
 17515                           ; BSR set to: 14
 17516  0127EA  0012               	return		;funcret
 17517  0127EC                     __end_of_TMR3_Initialize:
 17518                           	opt stack 0
 17519                           tblptru	equ	0xFF8
 17520                           tblptrh	equ	0xFF7
 17521                           tblptrl	equ	0xFF6
 17522                           tablat	equ	0xFF5
 17523                           prodh	equ	0xFF4
 17524                           prodl	equ	0xFF3
 17525                           intcon	equ	0xFF2
 17526                           postinc0	equ	0xFEE
 17527                           wreg	equ	0xFE8
 17528                           indf2	equ	0xFDF
 17529                           postinc2	equ	0xFDE
 17530                           fsr2h	equ	0xFDA
 17531                           fsr2l	equ	0xFD9
 17532                           status	equ	0xFD8
 17533                           
 17534 ;; *************** function _TMR2_Initialize *****************
 17535 ;; Defined at:
 17536 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;		None
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;		None
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  1    wreg      void 
 17543 ;; Registers used:
 17544 ;;		wreg, status,2
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17554 ;;Total ram usage:        0 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; Hardware stack levels required when called:    2
 17557 ;; This function calls:
 17558 ;;		Nothing
 17559 ;; This function is called by:
 17560 ;;		_SYSTEM_Initialize
 17561 ;;		_pay_coin
 17562 ;; This function uses a non-reentrant model
 17563 ;;
 17564                           
 17565                           	psect	text112
 17566  012A5E                     __ptext112:
 17567                           	opt stack 0
 17568  012A5E                     _TMR2_Initialize:
 17569                           	opt stack 24
 17570                           
 17571                           ;tmr2.c: 67: T2CLKCON = 0x05;
 17572                           
 17573                           ; BSR set to: 14
 17574                           ;incstack = 0
 17575  012A5E  0E05               	movlw	5
 17576  012A60  6EBF               	movwf	4031,c	;volatile
 17577                           
 17578                           ;tmr2.c: 70: T2HLT = 0x20;
 17579  012A62  0E20               	movlw	32
 17580  012A64  6EBE               	movwf	4030,c	;volatile
 17581                           
 17582                           ;tmr2.c: 73: T2RST = 0x00;
 17583  012A66  0E00               	movlw	0
 17584  012A68  6EC0               	movwf	4032,c	;volatile
 17585                           
 17586                           ;tmr2.c: 76: T2PR = 0x85;
 17587  012A6A  0E85               	movlw	133
 17588  012A6C  6EBC               	movwf	4028,c	;volatile
 17589                           
 17590                           ;tmr2.c: 79: T2TMR = 0x00;
 17591  012A6E  0E00               	movlw	0
 17592  012A70  6EBB               	movwf	4027,c	;volatile
 17593                           
 17594                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 17595  012A72  010E               	movlb	14	; () banked
 17596  012A74  93CE               	bcf	206,1,b	;volatile
 17597                           
 17598                           ;tmr2.c: 85: T2CON = 0xF1;
 17599  012A76  0EF1               	movlw	241
 17600  012A78  6EBD               	movwf	4029,c	;volatile
 17601                           
 17602                           ; BSR set to: 14
 17603  012A7A  0012               	return		;funcret
 17604  012A7C                     __end_of_TMR2_Initialize:
 17605                           	opt stack 0
 17606                           tblptru	equ	0xFF8
 17607                           tblptrh	equ	0xFF7
 17608                           tblptrl	equ	0xFF6
 17609                           tablat	equ	0xFF5
 17610                           prodh	equ	0xFF4
 17611                           prodl	equ	0xFF3
 17612                           intcon	equ	0xFF2
 17613                           postinc0	equ	0xFEE
 17614                           wreg	equ	0xFE8
 17615                           indf2	equ	0xFDF
 17616                           postinc2	equ	0xFDE
 17617                           fsr2h	equ	0xFDA
 17618                           fsr2l	equ	0xFD9
 17619                           status	equ	0xFD8
 17620                           
 17621 ;; *************** function _TMR1_Initialize *****************
 17622 ;; Defined at:
 17623 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17624 ;; Parameters:    Size  Location     Type
 17625 ;;		None
 17626 ;; Auto vars:     Size  Location     Type
 17627 ;;		None
 17628 ;; Return value:  Size  Location     Type
 17629 ;;                  1    wreg      void 
 17630 ;; Registers used:
 17631 ;;		wreg, status,2, status,0
 17632 ;; Tracked objects:
 17633 ;;		On entry : 0/0
 17634 ;;		On exit  : 0/0
 17635 ;;		Unchanged: 0/0
 17636 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17641 ;;Total ram usage:        2 bytes
 17642 ;; Hardware stack levels used:    1
 17643 ;; Hardware stack levels required when called:    2
 17644 ;; This function calls:
 17645 ;;		Nothing
 17646 ;; This function is called by:
 17647 ;;		_SYSTEM_Initialize
 17648 ;;		_mdb_comm
 17649 ;;		_mdb_unlock
 17650 ;; This function uses a non-reentrant model
 17651 ;;
 17652                           
 17653                           	psect	text113
 17654  0127EC                     __ptext113:
 17655                           	opt stack 0
 17656  0127EC                     _TMR1_Initialize:
 17657                           	opt stack 24
 17658                           
 17659                           ;tmr1.c: 68: T1GCON = 0x00;
 17660                           
 17661                           ; BSR set to: 14
 17662                           ;incstack = 0
 17663  0127EC  0E00               	movlw	0
 17664  0127EE  6ED0               	movwf	4048,c	;volatile
 17665                           
 17666                           ;tmr1.c: 71: T1GATE = 0x00;
 17667  0127F0  0E00               	movlw	0
 17668  0127F2  6ED1               	movwf	4049,c	;volatile
 17669                           
 17670                           ;tmr1.c: 74: T1CLK = 0x05;
 17671  0127F4  0E05               	movlw	5
 17672  0127F6  6ED2               	movwf	4050,c	;volatile
 17673                           
 17674                           ;tmr1.c: 77: TMR1H = 0xF6;
 17675  0127F8  0EF6               	movlw	246
 17676  0127FA  6ECE               	movwf	4046,c	;volatile
 17677                           
 17678                           ;tmr1.c: 80: TMR1L = 0x3C;
 17679  0127FC  0E3C               	movlw	60
 17680  0127FE  6ECD               	movwf	4045,c	;volatile
 17681                           
 17682                           ;tmr1.c: 83: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17683  012800  50CD               	movf	4045,w,c	;volatile
 17684  012802  CFCE F01D          	movff	4046,??_TMR1_Initialize	;volatile
 17685  012806  6A1E               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 17686  012808  C01D  F01E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17687  01280C  6A1D               	clrf	??_TMR1_Initialize,c
 17688  01280E  101D               	iorwf	??_TMR1_Initialize,w,c
 17689  012810  0100               	movlb	0	; () banked
 17690  012812  6FCB               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17691  012814  501E               	movf	??_TMR1_Initialize+1,w,c
 17692  012816  6FCC               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;tmr1.c: 86: PIR4bits.TMR1IF = 0;
 17696  012818  010E               	movlb	14	; () banked
 17697  01281A  91CE               	bcf	206,0,b	;volatile
 17698                           
 17699                           ; BSR set to: 14
 17700                           ;tmr1.c: 89: T1CON = 0x01;
 17701  01281C  0E01               	movlw	1
 17702  01281E  6ECF               	movwf	4047,c	;volatile
 17703                           
 17704                           ; BSR set to: 14
 17705  012820  0012               	return		;funcret
 17706  012822                     __end_of_TMR1_Initialize:
 17707                           	opt stack 0
 17708                           tblptru	equ	0xFF8
 17709                           tblptrh	equ	0xFF7
 17710                           tblptrl	equ	0xFF6
 17711                           tablat	equ	0xFF5
 17712                           prodh	equ	0xFF4
 17713                           prodl	equ	0xFF3
 17714                           intcon	equ	0xFF2
 17715                           postinc0	equ	0xFEE
 17716                           wreg	equ	0xFE8
 17717                           indf2	equ	0xFDF
 17718                           postinc2	equ	0xFDE
 17719                           fsr2h	equ	0xFDA
 17720                           fsr2l	equ	0xFD9
 17721                           status	equ	0xFD8
 17722                           
 17723 ;; *************** function _TMR0_Initialize *****************
 17724 ;; Defined at:
 17725 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;		None
 17728 ;; Auto vars:     Size  Location     Type
 17729 ;;		None
 17730 ;; Return value:  Size  Location     Type
 17731 ;;                  1    wreg      void 
 17732 ;; Registers used:
 17733 ;;		wreg, status,2, status,0
 17734 ;; Tracked objects:
 17735 ;;		On entry : 0/0
 17736 ;;		On exit  : 0/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17743 ;;Total ram usage:        2 bytes
 17744 ;; Hardware stack levels used:    1
 17745 ;; Hardware stack levels required when called:    2
 17746 ;; This function calls:
 17747 ;;		Nothing
 17748 ;; This function is called by:
 17749 ;;		_SYSTEM_Initialize
 17750 ;; This function uses a non-reentrant model
 17751 ;;
 17752                           
 17753                           	psect	text114
 17754  012950                     __ptext114:
 17755                           	opt stack 0
 17756  012950                     _TMR0_Initialize:
 17757                           	opt stack 27
 17758                           
 17759                           ;tmr0.c: 70: T0CON1 = 0x82;
 17760                           
 17761                           ; BSR set to: 14
 17762                           ;incstack = 0
 17763  012950  0E82               	movlw	130
 17764  012952  6ED6               	movwf	4054,c	;volatile
 17765                           
 17766                           ;tmr0.c: 73: TMR0H = 0xA5;
 17767  012954  0EA5               	movlw	165
 17768  012956  6ED4               	movwf	4052,c	;volatile
 17769                           
 17770                           ;tmr0.c: 76: TMR0L = 0x2E;
 17771  012958  0E2E               	movlw	46
 17772  01295A  6ED3               	movwf	4051,c	;volatile
 17773                           
 17774                           ;tmr0.c: 79: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 17775  01295C  50D3               	movf	4051,w,c	;volatile
 17776  01295E  CFD4 F01D          	movff	4052,??_TMR0_Initialize	;volatile
 17777  012962  6A1E               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 17778  012964  C01D  F01E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 17779  012968  6A1D               	clrf	??_TMR0_Initialize,c
 17780  01296A  101D               	iorwf	??_TMR0_Initialize,w,c
 17781  01296C  0100               	movlb	0	; () banked
 17782  01296E  6FC5               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 17783  012970  501E               	movf	??_TMR0_Initialize+1,w,c
 17784  012972  6FC6               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;tmr0.c: 82: PIR0bits.TMR0IF = 0;
 17788  012974  010E               	movlb	14	; () banked
 17789  012976  9BCA               	bcf	202,5,b	;volatile
 17790                           
 17791                           ; BSR set to: 14
 17792                           ;tmr0.c: 85: T0CON0 = 0x90;
 17793  012978  0E90               	movlw	144
 17794  01297A  6ED5               	movwf	4053,c	;volatile
 17795                           
 17796                           ; BSR set to: 14
 17797  01297C  0012               	return		;funcret
 17798  01297E                     __end_of_TMR0_Initialize:
 17799                           	opt stack 0
 17800                           tblptru	equ	0xFF8
 17801                           tblptrh	equ	0xFF7
 17802                           tblptrl	equ	0xFF6
 17803                           tablat	equ	0xFF5
 17804                           prodh	equ	0xFF4
 17805                           prodl	equ	0xFF3
 17806                           intcon	equ	0xFF2
 17807                           postinc0	equ	0xFEE
 17808                           wreg	equ	0xFE8
 17809                           indf2	equ	0xFDF
 17810                           postinc2	equ	0xFDE
 17811                           fsr2h	equ	0xFDA
 17812                           fsr2l	equ	0xFD9
 17813                           status	equ	0xFD8
 17814                           
 17815 ;; *************** function _PMD_Initialize *****************
 17816 ;; Defined at:
 17817 ;;		line 82 in file "mcc_generated_files/mcc.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;		None
 17820 ;; Auto vars:     Size  Location     Type
 17821 ;;		None
 17822 ;; Return value:  Size  Location     Type
 17823 ;;                  1    wreg      void 
 17824 ;; Registers used:
 17825 ;;		wreg, status,2
 17826 ;; Tracked objects:
 17827 ;;		On entry : 0/0
 17828 ;;		On exit  : 0/0
 17829 ;;		Unchanged: 0/0
 17830 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17835 ;;Total ram usage:        0 bytes
 17836 ;; Hardware stack levels used:    1
 17837 ;; Hardware stack levels required when called:    2
 17838 ;; This function calls:
 17839 ;;		Nothing
 17840 ;; This function is called by:
 17841 ;;		_SYSTEM_Initialize
 17842 ;; This function uses a non-reentrant model
 17843 ;;
 17844                           
 17845                           	psect	text115
 17846  012AB4                     __ptext115:
 17847                           	opt stack 0
 17848  012AB4                     _PMD_Initialize:
 17849                           	opt stack 27
 17850                           
 17851                           ;mcc.c: 85: PMD0 = 0x00;
 17852                           
 17853                           ; BSR set to: 14
 17854                           ;incstack = 0
 17855  012AB4  0E00               	movlw	0
 17856  012AB6  010E               	movlb	14	; () banked
 17857  012AB8  6FE1               	movwf	225,b	;volatile
 17858                           
 17859                           ;mcc.c: 87: PMD1 = 0x00;
 17860  012ABA  0E00               	movlw	0
 17861  012ABC  6FE2               	movwf	226,b	;volatile
 17862                           
 17863                           ;mcc.c: 89: PMD2 = 0x00;
 17864  012ABE  0E00               	movlw	0
 17865  012AC0  6FE3               	movwf	227,b	;volatile
 17866                           
 17867                           ;mcc.c: 91: PMD3 = 0x00;
 17868  012AC2  0E00               	movlw	0
 17869  012AC4  6FE4               	movwf	228,b	;volatile
 17870                           
 17871                           ;mcc.c: 93: PMD4 = 0x00;
 17872  012AC6  0E00               	movlw	0
 17873  012AC8  6FE5               	movwf	229,b	;volatile
 17874                           
 17875                           ;mcc.c: 95: PMD5 = 0x00;
 17876  012ACA  0E00               	movlw	0
 17877  012ACC  6FE6               	movwf	230,b	;volatile
 17878                           
 17879                           ; BSR set to: 14
 17880  012ACE  0012               	return		;funcret
 17881  012AD0                     __end_of_PMD_Initialize:
 17882                           	opt stack 0
 17883                           tblptru	equ	0xFF8
 17884                           tblptrh	equ	0xFF7
 17885                           tblptrl	equ	0xFF6
 17886                           tablat	equ	0xFF5
 17887                           prodh	equ	0xFF4
 17888                           prodl	equ	0xFF3
 17889                           intcon	equ	0xFF2
 17890                           postinc0	equ	0xFEE
 17891                           wreg	equ	0xFE8
 17892                           indf2	equ	0xFDF
 17893                           postinc2	equ	0xFDE
 17894                           fsr2h	equ	0xFDA
 17895                           fsr2l	equ	0xFD9
 17896                           status	equ	0xFD8
 17897                           
 17898 ;; *************** function _PIN_MANAGER_Initialize *****************
 17899 ;; Defined at:
 17900 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 17901 ;; Parameters:    Size  Location     Type
 17902 ;;		None
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;		None
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      void 
 17907 ;; Registers used:
 17908 ;;		wreg, status,2
 17909 ;; Tracked objects:
 17910 ;;		On entry : 0/0
 17911 ;;		On exit  : 0/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17918 ;;Total ram usage:        0 bytes
 17919 ;; Hardware stack levels used:    1
 17920 ;; Hardware stack levels required when called:    2
 17921 ;; This function calls:
 17922 ;;		Nothing
 17923 ;; This function is called by:
 17924 ;;		_SYSTEM_Initialize
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928                           	psect	text116
 17929  0119C4                     __ptext116:
 17930                           	opt stack 0
 17931  0119C4                     _PIN_MANAGER_Initialize:
 17932                           	opt stack 27
 17933                           
 17934                           ;pin_manager.c: 57: LATE = 0x00;
 17935                           
 17936                           ; BSR set to: 14
 17937                           ;incstack = 0
 17938  0119C4  0E00               	movlw	0
 17939  0119C6  6E87               	movwf	3975,c	;volatile
 17940                           
 17941                           ;pin_manager.c: 58: LATD = 0x00;
 17942  0119C8  0E00               	movlw	0
 17943  0119CA  6E86               	movwf	3974,c	;volatile
 17944                           
 17945                           ;pin_manager.c: 59: LATA = 0xC0;
 17946  0119CC  0EC0               	movlw	192
 17947  0119CE  6E83               	movwf	3971,c	;volatile
 17948                           
 17949                           ;pin_manager.c: 60: LATB = 0x00;
 17950  0119D0  0E00               	movlw	0
 17951  0119D2  6E84               	movwf	3972,c	;volatile
 17952                           
 17953                           ;pin_manager.c: 61: LATC = 0x40;
 17954  0119D4  0E40               	movlw	64
 17955  0119D6  6E85               	movwf	3973,c	;volatile
 17956                           
 17957                           ;pin_manager.c: 66: TRISE = 0x00;
 17958  0119D8  0E00               	movlw	0
 17959  0119DA  6E8C               	movwf	3980,c	;volatile
 17960                           
 17961                           ;pin_manager.c: 67: TRISA = 0x1F;
 17962  0119DC  0E1F               	movlw	31
 17963  0119DE  6E88               	movwf	3976,c	;volatile
 17964                           
 17965                           ;pin_manager.c: 68: TRISB = 0xD0;
 17966  0119E0  0ED0               	movlw	208
 17967  0119E2  6E89               	movwf	3977,c	;volatile
 17968                           
 17969                           ;pin_manager.c: 69: TRISC = 0x90;
 17970  0119E4  0E90               	movlw	144
 17971  0119E6  6E8A               	movwf	3978,c	;volatile
 17972                           
 17973                           ;pin_manager.c: 70: TRISD = 0x00;
 17974  0119E8  0E00               	movlw	0
 17975  0119EA  6E8B               	movwf	3979,c	;volatile
 17976                           
 17977                           ;pin_manager.c: 75: ANSELC = 0x00;
 17978  0119EC  0E00               	movlw	0
 17979  0119EE  010F               	movlb	15	; () banked
 17980  0119F0  6F21               	movwf	33,b	;volatile
 17981                           
 17982                           ;pin_manager.c: 76: ANSELB = 0xC0;
 17983  0119F2  0EC0               	movlw	192
 17984  0119F4  6F19               	movwf	25,b	;volatile
 17985                           
 17986                           ;pin_manager.c: 77: ANSELD = 0x00;
 17987  0119F6  0E00               	movlw	0
 17988  0119F8  6F26               	movwf	38,b	;volatile
 17989                           
 17990                           ;pin_manager.c: 78: ANSELE = 0x00;
 17991  0119FA  0E00               	movlw	0
 17992  0119FC  6F2E               	movwf	46,b	;volatile
 17993                           
 17994                           ;pin_manager.c: 79: ANSELA = 0x01;
 17995  0119FE  0E01               	movlw	1
 17996  011A00  6F11               	movwf	17,b	;volatile
 17997                           
 17998                           ;pin_manager.c: 84: WPUD = 0x00;
 17999  011A02  0E00               	movlw	0
 18000  011A04  6F25               	movwf	37,b	;volatile
 18001                           
 18002                           ;pin_manager.c: 85: WPUE = 0x00;
 18003  011A06  0E00               	movlw	0
 18004  011A08  6F2D               	movwf	45,b	;volatile
 18005                           
 18006                           ;pin_manager.c: 86: WPUB = 0x00;
 18007  011A0A  0E00               	movlw	0
 18008  011A0C  6F18               	movwf	24,b	;volatile
 18009                           
 18010                           ;pin_manager.c: 87: WPUA = 0x00;
 18011  011A0E  0E00               	movlw	0
 18012  011A10  6F10               	movwf	16,b	;volatile
 18013                           
 18014                           ;pin_manager.c: 88: WPUC = 0x00;
 18015  011A12  0E00               	movlw	0
 18016  011A14  6F20               	movwf	32,b	;volatile
 18017                           
 18018                           ;pin_manager.c: 93: ODCONE = 0x00;
 18019  011A16  0E00               	movlw	0
 18020  011A18  6F2C               	movwf	44,b	;volatile
 18021                           
 18022                           ;pin_manager.c: 94: ODCONA = 0x00;
 18023  011A1A  0E00               	movlw	0
 18024  011A1C  6F0F               	movwf	15,b	;volatile
 18025                           
 18026                           ;pin_manager.c: 95: ODCONB = 0x20;
 18027  011A1E  0E20               	movlw	32
 18028  011A20  6F17               	movwf	23,b	;volatile
 18029                           
 18030                           ;pin_manager.c: 96: ODCONC = 0x08;
 18031  011A22  0E08               	movlw	8
 18032  011A24  6F1F               	movwf	31,b	;volatile
 18033                           
 18034                           ;pin_manager.c: 97: ODCOND = 0x00;
 18035  011A26  0E00               	movlw	0
 18036  011A28  6F24               	movwf	36,b	;volatile
 18037                           
 18038                           ; BSR set to: 15
 18039                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
 18040  011A2A  010E               	movlb	14	; () banked
 18041  011A2C  89C2               	bsf	194,4,b	;volatile
 18042                           
 18043                           ; BSR set to: 14
 18044                           ;pin_manager.c: 106: RX1PPSbits.RXPPS = 0x17;
 18045  011A2E  81B5               	bsf	181,0,b	;volatile
 18046  011A30  83B5               	bsf	181,1,b	;volatile
 18047  011A32  85B5               	bsf	181,2,b	;volatile
 18048  011A34  97B5               	bcf	181,3,b	;volatile
 18049  011A36  89B5               	bsf	181,4,b	;volatile
 18050                           
 18051                           ;pin_manager.c: 107: RC6PPS = 0x09;
 18052  011A38  0E09               	movlw	9
 18053  011A3A  6FFD               	movwf	253,b	;volatile
 18054                           
 18055                           ;pin_manager.c: 108: RB5PPS = 0x0B;
 18056  011A3C  0E0B               	movlw	11
 18057  011A3E  6FF4               	movwf	244,b	;volatile
 18058                           
 18059                           ; BSR set to: 14
 18060                           ;pin_manager.c: 109: RX2PPSbits.RXPPS = 0x0C;
 18061  011A40  918D               	bcf	141,0,b	;volatile
 18062  011A42  938D               	bcf	141,1,b	;volatile
 18063  011A44  858D               	bsf	141,2,b	;volatile
 18064  011A46  878D               	bsf	141,3,b	;volatile
 18065  011A48  998D               	bcf	141,4,b	;volatile
 18066                           
 18067                           ; BSR set to: 14
 18068  011A4A  0012               	return		;funcret
 18069  011A4C                     __end_of_PIN_MANAGER_Initialize:
 18070                           	opt stack 0
 18071                           tblptru	equ	0xFF8
 18072                           tblptrh	equ	0xFF7
 18073                           tblptrl	equ	0xFF6
 18074                           tablat	equ	0xFF5
 18075                           prodh	equ	0xFF4
 18076                           prodl	equ	0xFF3
 18077                           intcon	equ	0xFF2
 18078                           postinc0	equ	0xFEE
 18079                           wreg	equ	0xFE8
 18080                           indf2	equ	0xFDF
 18081                           postinc2	equ	0xFDE
 18082                           fsr2h	equ	0xFDA
 18083                           fsr2l	equ	0xFD9
 18084                           status	equ	0xFD8
 18085                           
 18086 ;; *************** function _OSCILLATOR_Initialize *****************
 18087 ;; Defined at:
 18088 ;;		line 68 in file "mcc_generated_files/mcc.c"
 18089 ;; Parameters:    Size  Location     Type
 18090 ;;		None
 18091 ;; Auto vars:     Size  Location     Type
 18092 ;;		None
 18093 ;; Return value:  Size  Location     Type
 18094 ;;                  1    wreg      void 
 18095 ;; Registers used:
 18096 ;;		wreg, status,2
 18097 ;; Tracked objects:
 18098 ;;		On entry : 0/0
 18099 ;;		On exit  : 0/0
 18100 ;;		Unchanged: 0/0
 18101 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18106 ;;Total ram usage:        0 bytes
 18107 ;; Hardware stack levels used:    1
 18108 ;; Hardware stack levels required when called:    2
 18109 ;; This function calls:
 18110 ;;		Nothing
 18111 ;; This function is called by:
 18112 ;;		_SYSTEM_Initialize
 18113 ;; This function uses a non-reentrant model
 18114 ;;
 18115                           
 18116                           	psect	text117
 18117  012B18                     __ptext117:
 18118                           	opt stack 0
 18119  012B18                     _OSCILLATOR_Initialize:
 18120                           	opt stack 27
 18121                           
 18122                           ;mcc.c: 71: OSCCON1 = 0x60;
 18123                           
 18124                           ; BSR set to: 14
 18125                           ;incstack = 0
 18126  012B18  0E60               	movlw	96
 18127  012B1A  010E               	movlb	14	; () banked
 18128  012B1C  6FD8               	movwf	216,b	;volatile
 18129                           
 18130                           ;mcc.c: 73: OSCCON3 = 0x00;
 18131  012B1E  0E00               	movlw	0
 18132  012B20  6FDA               	movwf	218,b	;volatile
 18133                           
 18134                           ;mcc.c: 75: OSCEN = 0x00;
 18135  012B22  0E00               	movlw	0
 18136  012B24  6FDC               	movwf	220,b	;volatile
 18137                           
 18138                           ;mcc.c: 77: OSCFRQ = 0x04;
 18139  012B26  0E04               	movlw	4
 18140  012B28  6FDE               	movwf	222,b	;volatile
 18141                           
 18142                           ;mcc.c: 79: OSCTUNE = 0x00;
 18143  012B2A  0E00               	movlw	0
 18144  012B2C  6FDD               	movwf	221,b	;volatile
 18145                           
 18146                           ; BSR set to: 14
 18147  012B2E  0012               	return		;funcret
 18148  012B30                     __end_of_OSCILLATOR_Initialize:
 18149                           	opt stack 0
 18150                           tblptru	equ	0xFF8
 18151                           tblptrh	equ	0xFF7
 18152                           tblptrl	equ	0xFF6
 18153                           tablat	equ	0xFF5
 18154                           prodh	equ	0xFF4
 18155                           prodl	equ	0xFF3
 18156                           intcon	equ	0xFF2
 18157                           postinc0	equ	0xFEE
 18158                           wreg	equ	0xFE8
 18159                           indf2	equ	0xFDF
 18160                           postinc2	equ	0xFDE
 18161                           fsr2h	equ	0xFDA
 18162                           fsr2l	equ	0xFD9
 18163                           status	equ	0xFD8
 18164                           
 18165 ;; *************** function _INTERRUPT_Initialize *****************
 18166 ;; Defined at:
 18167 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18168 ;; Parameters:    Size  Location     Type
 18169 ;;		None
 18170 ;; Auto vars:     Size  Location     Type
 18171 ;;		None
 18172 ;; Return value:  Size  Location     Type
 18173 ;;                  1    wreg      void 
 18174 ;; Registers used:
 18175 ;;		None
 18176 ;; Tracked objects:
 18177 ;;		On entry : 0/0
 18178 ;;		On exit  : 0/0
 18179 ;;		Unchanged: 0/0
 18180 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18185 ;;Total ram usage:        0 bytes
 18186 ;; Hardware stack levels used:    1
 18187 ;; Hardware stack levels required when called:    2
 18188 ;; This function calls:
 18189 ;;		Nothing
 18190 ;; This function is called by:
 18191 ;;		_SYSTEM_Initialize
 18192 ;; This function uses a non-reentrant model
 18193 ;;
 18194                           
 18195                           	psect	text118
 18196  012C78                     __ptext118:
 18197                           	opt stack 0
 18198  012C78                     _INTERRUPT_Initialize:
 18199                           	opt stack 27
 18200                           
 18201                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 18202                           
 18203                           ; BSR set to: 14
 18204                           ;incstack = 0
 18205  012C78  8AF2               	bsf	intcon,5,c	;volatile
 18206                           
 18207                           ;interrupt_manager.c: 60: IPR0bits.IOCIP = 1;
 18208  012C7A  010E               	movlb	14	; () banked
 18209  012C7C  89BA               	bsf	186,4,b	;volatile
 18210                           
 18211                           ; BSR set to: 14
 18212  012C7E  0012               	return		;funcret
 18213  012C80                     __end_of_INTERRUPT_Initialize:
 18214                           	opt stack 0
 18215                           tblptru	equ	0xFF8
 18216                           tblptrh	equ	0xFF7
 18217                           tblptrl	equ	0xFF6
 18218                           tablat	equ	0xFF5
 18219                           prodh	equ	0xFF4
 18220                           prodl	equ	0xFF3
 18221                           intcon	equ	0xFF2
 18222                           postinc0	equ	0xFEE
 18223                           wreg	equ	0xFE8
 18224                           indf2	equ	0xFDF
 18225                           postinc2	equ	0xFDE
 18226                           fsr2h	equ	0xFDA
 18227                           fsr2l	equ	0xFD9
 18228                           status	equ	0xFD8
 18229                           
 18230 ;; *************** function _EUSART2_Initialize *****************
 18231 ;; Defined at:
 18232 ;;		line 56 in file "mcc_generated_files/eusart2.c"
 18233 ;; Parameters:    Size  Location     Type
 18234 ;;		None
 18235 ;; Auto vars:     Size  Location     Type
 18236 ;;		None
 18237 ;; Return value:  Size  Location     Type
 18238 ;;                  1    wreg      void 
 18239 ;; Registers used:
 18240 ;;		wreg, status,2
 18241 ;; Tracked objects:
 18242 ;;		On entry : 0/0
 18243 ;;		On exit  : 0/0
 18244 ;;		Unchanged: 0/0
 18245 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18250 ;;Total ram usage:        0 bytes
 18251 ;; Hardware stack levels used:    1
 18252 ;; Hardware stack levels required when called:    2
 18253 ;; This function calls:
 18254 ;;		Nothing
 18255 ;; This function is called by:
 18256 ;;		_SYSTEM_Initialize
 18257 ;; This function uses a non-reentrant model
 18258 ;;
 18259                           
 18260                           	psect	text119
 18261  012B30                     __ptext119:
 18262                           	opt stack 0
 18263  012B30                     _EUSART2_Initialize:
 18264                           	opt stack 27
 18265                           
 18266                           ;eusart2.c: 61: BAUD2CON = 0x08;
 18267                           
 18268                           ; BSR set to: 14
 18269                           ;incstack = 0
 18270  012B30  0E08               	movlw	8
 18271  012B32  010E               	movlb	14	; () banked
 18272  012B34  6F9F               	movwf	159,b	;volatile
 18273                           
 18274                           ;eusart2.c: 64: RC2STA = 0x90;
 18275  012B36  0E90               	movlw	144
 18276  012B38  6F9D               	movwf	157,b	;volatile
 18277                           
 18278                           ;eusart2.c: 67: TX2STA = 0x24;
 18279  012B3A  0E24               	movlw	36
 18280  012B3C  6F9E               	movwf	158,b	;volatile
 18281                           
 18282                           ;eusart2.c: 70: SP2BRGL = 0x19;
 18283  012B3E  0E19               	movlw	25
 18284  012B40  6F9B               	movwf	155,b	;volatile
 18285                           
 18286                           ;eusart2.c: 73: SP2BRGH = 0x00;
 18287  012B42  0E00               	movlw	0
 18288  012B44  6F9C               	movwf	156,b	;volatile
 18289                           
 18290                           ; BSR set to: 14
 18291  012B46  0012               	return		;funcret
 18292  012B48                     __end_of_EUSART2_Initialize:
 18293                           	opt stack 0
 18294                           tblptru	equ	0xFF8
 18295                           tblptrh	equ	0xFF7
 18296                           tblptrl	equ	0xFF6
 18297                           tablat	equ	0xFF5
 18298                           prodh	equ	0xFF4
 18299                           prodl	equ	0xFF3
 18300                           intcon	equ	0xFF2
 18301                           postinc0	equ	0xFEE
 18302                           wreg	equ	0xFE8
 18303                           indf2	equ	0xFDF
 18304                           postinc2	equ	0xFDE
 18305                           fsr2h	equ	0xFDA
 18306                           fsr2l	equ	0xFD9
 18307                           status	equ	0xFD8
 18308                           
 18309 ;; *************** function _EUSART1_Initialize *****************
 18310 ;; Defined at:
 18311 ;;		line 56 in file "mcc_generated_files/eusart1.c"
 18312 ;; Parameters:    Size  Location     Type
 18313 ;;		None
 18314 ;; Auto vars:     Size  Location     Type
 18315 ;;		None
 18316 ;; Return value:  Size  Location     Type
 18317 ;;                  1    wreg      void 
 18318 ;; Registers used:
 18319 ;;		wreg, status,2
 18320 ;; Tracked objects:
 18321 ;;		On entry : 0/0
 18322 ;;		On exit  : 0/0
 18323 ;;		Unchanged: 0/0
 18324 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18329 ;;Total ram usage:        0 bytes
 18330 ;; Hardware stack levels used:    1
 18331 ;; Hardware stack levels required when called:    2
 18332 ;; This function calls:
 18333 ;;		Nothing
 18334 ;; This function is called by:
 18335 ;;		_SYSTEM_Initialize
 18336 ;; This function uses a non-reentrant model
 18337 ;;
 18338                           
 18339                           	psect	text120
 18340  012B74                     __ptext120:
 18341                           	opt stack 0
 18342  012B74                     _EUSART1_Initialize:
 18343                           	opt stack 27
 18344                           
 18345                           ;eusart1.c: 61: BAUD1CON = 0x08;
 18346                           
 18347                           ; BSR set to: 14
 18348                           ;incstack = 0
 18349  012B74  0E08               	movlw	8
 18350  012B76  6E9F               	movwf	3999,c	;volatile
 18351                           
 18352                           ;eusart1.c: 64: RC1STA = 0xD0;
 18353  012B78  0ED0               	movlw	208
 18354  012B7A  6E9D               	movwf	3997,c	;volatile
 18355                           
 18356                           ;eusart1.c: 67: TX1STA = 0xEC;
 18357  012B7C  0EEC               	movlw	236
 18358  012B7E  6E9E               	movwf	3998,c	;volatile
 18359                           
 18360                           ;eusart1.c: 70: SP1BRGL = 0x38;
 18361  012B80  0E38               	movlw	56
 18362  012B82  6E9B               	movwf	3995,c	;volatile
 18363                           
 18364                           ;eusart1.c: 73: SP1BRGH = 0x01;
 18365  012B84  0E01               	movlw	1
 18366  012B86  6E9C               	movwf	3996,c	;volatile
 18367  012B88  0012               	return		;funcret
 18368  012B8A                     __end_of_EUSART1_Initialize:
 18369                           	opt stack 0
 18370                           tblptru	equ	0xFF8
 18371                           tblptrh	equ	0xFF7
 18372                           tblptrl	equ	0xFF6
 18373                           tablat	equ	0xFF5
 18374                           prodh	equ	0xFF4
 18375                           prodl	equ	0xFF3
 18376                           intcon	equ	0xFF2
 18377                           postinc0	equ	0xFEE
 18378                           wreg	equ	0xFE8
 18379                           indf2	equ	0xFDF
 18380                           postinc2	equ	0xFDE
 18381                           fsr2h	equ	0xFDA
 18382                           fsr2l	equ	0xFD9
 18383                           status	equ	0xFD8
 18384                           
 18385 ;; *************** function _DAC1_Initialize *****************
 18386 ;; Defined at:
 18387 ;;		line 58 in file "mcc_generated_files/dac1.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;		None
 18390 ;; Auto vars:     Size  Location     Type
 18391 ;;		None
 18392 ;; Return value:  Size  Location     Type
 18393 ;;                  1    wreg      void 
 18394 ;; Registers used:
 18395 ;;		wreg, status,2
 18396 ;; Tracked objects:
 18397 ;;		On entry : 0/0
 18398 ;;		On exit  : 0/0
 18399 ;;		Unchanged: 0/0
 18400 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18405 ;;Total ram usage:        0 bytes
 18406 ;; Hardware stack levels used:    1
 18407 ;; Hardware stack levels required when called:    2
 18408 ;; This function calls:
 18409 ;;		Nothing
 18410 ;; This function is called by:
 18411 ;;		_SYSTEM_Initialize
 18412 ;;		_mdb_unlock
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text121
 18417  012C38                     __ptext121:
 18418                           	opt stack 0
 18419  012C38                     _DAC1_Initialize:
 18420                           	opt stack 24
 18421                           
 18422                           ;dac1.c: 61: DAC1CON0 = 0x80;
 18423                           
 18424                           ;incstack = 0
 18425  012C38  0E80               	movlw	128
 18426  012C3A  010F               	movlb	15	; () banked
 18427  012C3C  6F33               	movwf	51,b	;volatile
 18428                           
 18429                           ;dac1.c: 63: DAC1CON1 = 0x0E;
 18430  012C3E  0E0E               	movlw	14
 18431  012C40  6F34               	movwf	52,b	;volatile
 18432                           
 18433                           ; BSR set to: 15
 18434  012C42  0012               	return		;funcret
 18435  012C44                     __end_of_DAC1_Initialize:
 18436                           	opt stack 0
 18437                           tblptru	equ	0xFF8
 18438                           tblptrh	equ	0xFF7
 18439                           tblptrl	equ	0xFF6
 18440                           tablat	equ	0xFF5
 18441                           prodh	equ	0xFF4
 18442                           prodl	equ	0xFF3
 18443                           intcon	equ	0xFF2
 18444                           postinc0	equ	0xFEE
 18445                           wreg	equ	0xFE8
 18446                           indf2	equ	0xFDF
 18447                           postinc2	equ	0xFDE
 18448                           fsr2h	equ	0xFDA
 18449                           fsr2l	equ	0xFD9
 18450                           status	equ	0xFD8
 18451                           
 18452 ;; *************** function _CMP1_Initialize *****************
 18453 ;; Defined at:
 18454 ;;		line 58 in file "mcc_generated_files/cmp1.c"
 18455 ;; Parameters:    Size  Location     Type
 18456 ;;		None
 18457 ;; Auto vars:     Size  Location     Type
 18458 ;;		None
 18459 ;; Return value:  Size  Location     Type
 18460 ;;                  1    wreg      void 
 18461 ;; Registers used:
 18462 ;;		wreg, status,2
 18463 ;; Tracked objects:
 18464 ;;		On entry : 0/0
 18465 ;;		On exit  : 0/0
 18466 ;;		Unchanged: 0/0
 18467 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18472 ;;Total ram usage:        0 bytes
 18473 ;; Hardware stack levels used:    1
 18474 ;; Hardware stack levels required when called:    2
 18475 ;; This function calls:
 18476 ;;		Nothing
 18477 ;; This function is called by:
 18478 ;;		_SYSTEM_Initialize
 18479 ;;		_mdb_unlock
 18480 ;; This function uses a non-reentrant model
 18481 ;;
 18482                           
 18483                           	psect	text122
 18484  012B9E                     __ptext122:
 18485                           	opt stack 0
 18486  012B9E                     _CMP1_Initialize:
 18487                           	opt stack 24
 18488                           
 18489                           ;cmp1.c: 62: CM1CON0 = 0x90;
 18490                           
 18491                           ; BSR set to: 15
 18492                           ;incstack = 0
 18493  012B9E  0E90               	movlw	144
 18494  012BA0  010F               	movlb	15	; () banked
 18495  012BA2  6F39               	movwf	57,b	;volatile
 18496                           
 18497                           ;cmp1.c: 65: CM1CON1 = 0x00;
 18498  012BA4  0E00               	movlw	0
 18499  012BA6  6F3A               	movwf	58,b	;volatile
 18500                           
 18501                           ;cmp1.c: 68: CM1NCH = 0x00;
 18502  012BA8  0E00               	movlw	0
 18503  012BAA  6F3B               	movwf	59,b	;volatile
 18504                           
 18505                           ;cmp1.c: 71: CM1PCH = 0x05;
 18506  012BAC  0E05               	movlw	5
 18507  012BAE  6F3C               	movwf	60,b	;volatile
 18508                           
 18509                           ; BSR set to: 15
 18510  012BB0  0012               	return		;funcret
 18511  012BB2                     __end_of_CMP1_Initialize:
 18512                           	opt stack 0
 18513                           tblptru	equ	0xFF8
 18514                           tblptrh	equ	0xFF7
 18515                           tblptrl	equ	0xFF6
 18516                           tablat	equ	0xFF5
 18517                           prodh	equ	0xFF4
 18518                           prodl	equ	0xFF3
 18519                           intcon	equ	0xFF2
 18520                           postinc0	equ	0xFEE
 18521                           wreg	equ	0xFE8
 18522                           indf2	equ	0xFDF
 18523                           postinc2	equ	0xFDE
 18524                           fsr2h	equ	0xFDA
 18525                           fsr2l	equ	0xFD9
 18526                           status	equ	0xFD8
 18527                           
 18528 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 18529 ;; Defined at:
 18530 ;;		line 65 in file "mcc_generated_files/interrupt_manager.c"
 18531 ;; Parameters:    Size  Location     Type
 18532 ;;		None
 18533 ;; Auto vars:     Size  Location     Type
 18534 ;;		None
 18535 ;; Return value:  Size  Location     Type
 18536 ;;                  1    wreg      void 
 18537 ;; Registers used:
 18538 ;;		cstack
 18539 ;; Tracked objects:
 18540 ;;		On entry : 0/0
 18541 ;;		On exit  : 0/0
 18542 ;;		Unchanged: 0/0
 18543 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18546 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18547 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18548 ;;Total ram usage:       18 bytes
 18549 ;; Hardware stack levels used:    1
 18550 ;; Hardware stack levels required when called:    1
 18551 ;; This function calls:
 18552 ;;		_PIN_MANAGER_IOC
 18553 ;; This function is called by:
 18554 ;;		Interrupt level 2
 18555 ;; This function uses a non-reentrant model
 18556 ;;
 18557                           
 18558                           	psect	intcode
 18559  000008                     __pintcode:
 18560                           	opt stack 0
 18561  000008                     _INTERRUPT_InterruptManagerHigh:
 18562                           	opt stack 18
 18563                           
 18564                           ; BSR set to: 15
 18565                           ;incstack = 0
 18566  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18567  00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 18568  00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 18569  000012  CFE9 F00D          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 18570  000016  CFEA F00E          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 18571  00001A  CFE1 F00F          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 18572  00001E  CFE2 F010          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 18573  000022  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 18574  000026  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 18575  00002A  CFF3 F013          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 18576  00002E  CFF4 F014          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 18577  000032  CFF6 F015          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 18578  000036  CFF7 F016          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 18579  00003A  CFF8 F017          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 18580  00003E  CFF5 F018          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 18581  000042  C04F  F019         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 18582  000046  C050  F01A         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 18583  00004A  C051  F01B         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 18584  00004E  C052  F01C         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 18585                           
 18586                           ;interrupt_manager.c: 68: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 18587  000052  010E               	movlb	14	; () banked
 18588  000054  B9C2               	btfsc	194,4,b	;volatile
 18589                           
 18590                           ; BSR set to: 14
 18591  000056  A9CA               	btfss	202,4,b	;volatile
 18592  000058  D002               	goto	i2l208
 18593                           
 18594                           ; BSR set to: 14
 18595                           ;interrupt_manager.c: 69: {
 18596                           ;interrupt_manager.c: 70: PIN_MANAGER_IOC();
 18597  00005A  EC46  F096         	call	_PIN_MANAGER_IOC	;wreg free
 18598  00005E                     i2l208:
 18599                           
 18600                           ;interrupt_manager.c: 72: else
 18601                           ;interrupt_manager.c: 73: {
 18602  00005E  C01C  F052         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 18603  000062  C01B  F051         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 18604  000066  C01A  F050         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 18605  00006A  C019  F04F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 18606  00006E  C018  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 18607  000072  C017  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 18608  000076  C016  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 18609  00007A  C015  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 18610  00007E  C014  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 18611  000082  C013  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 18612  000086  C012  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 18613  00008A  C011  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 18614  00008E  C010  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 18615  000092  C00F  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 18616  000096  C00E  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 18617  00009A  C00D  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 18618  00009E  C00C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 18619  0000A2  C00B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 18620  0000A6  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18621  0000A8  0011               	retfie		f
 18622  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
 18623                           	opt stack 0
 18624                           pclatu	equ	0xFFB
 18625                           pclath	equ	0xFFA
 18626                           tblptru	equ	0xFF8
 18627                           tblptrh	equ	0xFF7
 18628                           tblptrl	equ	0xFF6
 18629                           tablat	equ	0xFF5
 18630                           prodh	equ	0xFF4
 18631                           prodl	equ	0xFF3
 18632                           intcon	equ	0xFF2
 18633                           postinc0	equ	0xFEE
 18634                           fsr0h	equ	0xFEA
 18635                           fsr0l	equ	0xFE9
 18636                           wreg	equ	0xFE8
 18637                           fsr1h	equ	0xFE2
 18638                           fsr1l	equ	0xFE1
 18639                           indf2	equ	0xFDF
 18640                           postinc2	equ	0xFDE
 18641                           fsr2h	equ	0xFDA
 18642                           fsr2l	equ	0xFD9
 18643                           status	equ	0xFD8
 18644                           
 18645 ;; *************** function _PIN_MANAGER_IOC *****************
 18646 ;; Defined at:
 18647 ;;		line 113 in file "mcc_generated_files/pin_manager.c"
 18648 ;; Parameters:    Size  Location     Type
 18649 ;;		None
 18650 ;; Auto vars:     Size  Location     Type
 18651 ;;		None
 18652 ;; Return value:  Size  Location     Type
 18653 ;;                  1    wreg      void 
 18654 ;; Registers used:
 18655 ;;		None
 18656 ;; Tracked objects:
 18657 ;;		On entry : 0/0
 18658 ;;		On exit  : 0/0
 18659 ;;		Unchanged: 0/0
 18660 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18665 ;;Total ram usage:        0 bytes
 18666 ;; Hardware stack levels used:    1
 18667 ;; This function calls:
 18668 ;;		Nothing
 18669 ;; This function is called by:
 18670 ;;		_INTERRUPT_InterruptManagerHigh
 18671 ;; This function uses a non-reentrant model
 18672 ;;
 18673                           
 18674                           	psect	text124
 18675  012C8C                     __ptext124:
 18676                           	opt stack 0
 18677  012C8C                     _PIN_MANAGER_IOC:
 18678                           	opt stack 18
 18679                           
 18680                           ;pin_manager.c: 117: PIR0bits.IOCIF = 0;
 18681                           
 18682                           ;incstack = 0
 18683  012C8C  010E               	movlb	14	; () banked
 18684  012C8E  99CA               	bcf	202,4,b	;volatile
 18685                           
 18686                           ; BSR set to: 14
 18687  012C90  0012               	return		;funcret
 18688  012C92                     __end_of_PIN_MANAGER_IOC:
 18689                           	opt stack 0
 18690                           pclatu	equ	0xFFB
 18691                           pclath	equ	0xFFA
 18692                           tblptru	equ	0xFF8
 18693                           tblptrh	equ	0xFF7
 18694                           tblptrl	equ	0xFF6
 18695                           tablat	equ	0xFF5
 18696                           prodh	equ	0xFF4
 18697                           prodl	equ	0xFF3
 18698                           intcon	equ	0xFF2
 18699                           postinc0	equ	0xFEE
 18700                           fsr0h	equ	0xFEA
 18701                           fsr0l	equ	0xFE9
 18702                           wreg	equ	0xFE8
 18703                           fsr1h	equ	0xFE2
 18704                           fsr1l	equ	0xFE1
 18705                           indf2	equ	0xFDF
 18706                           postinc2	equ	0xFDE
 18707                           fsr2h	equ	0xFDA
 18708                           fsr2l	equ	0xFD9
 18709                           status	equ	0xFD8
 18710                           pclatu	equ	0xFFB
 18711                           pclath	equ	0xFFA
 18712                           tblptru	equ	0xFF8
 18713                           tblptrh	equ	0xFF7
 18714                           tblptrl	equ	0xFF6
 18715                           tablat	equ	0xFF5
 18716                           prodh	equ	0xFF4
 18717                           prodl	equ	0xFF3
 18718                           intcon	equ	0xFF2
 18719                           postinc0	equ	0xFEE
 18720                           fsr0h	equ	0xFEA
 18721                           fsr0l	equ	0xFE9
 18722                           wreg	equ	0xFE8
 18723                           fsr1h	equ	0xFE2
 18724                           fsr1l	equ	0xFE1
 18725                           indf2	equ	0xFDF
 18726                           postinc2	equ	0xFDE
 18727                           fsr2h	equ	0xFDA
 18728                           fsr2l	equ	0xFD9
 18729                           status	equ	0xFD8
 18730                           
 18731                           	psect	rparam
 18732  0000                     pclatu	equ	0xFFB
 18733                           pclath	equ	0xFFA
 18734                           tblptru	equ	0xFF8
 18735                           tblptrh	equ	0xFF7
 18736                           tblptrl	equ	0xFF6
 18737                           tablat	equ	0xFF5
 18738                           prodh	equ	0xFF4
 18739                           prodl	equ	0xFF3
 18740                           intcon	equ	0xFF2
 18741                           postinc0	equ	0xFEE
 18742                           fsr0h	equ	0xFEA
 18743                           fsr0l	equ	0xFE9
 18744                           wreg	equ	0xFE8
 18745                           fsr1h	equ	0xFE2
 18746                           fsr1l	equ	0xFE1
 18747                           indf2	equ	0xFDF
 18748                           postinc2	equ	0xFDE
 18749                           fsr2h	equ	0xFDA
 18750                           fsr2l	equ	0xFD9
 18751                           status	equ	0xFD8
 18752                           
 18753                           	psect	temp
 18754  00004F                     btemp:
 18755                           	opt stack 0
 18756  00004F                     	ds	1
 18757  0000                     int$flags	set	btemp
 18758  0000                     wtemp6	set	btemp+1
 18759                           pclatu	equ	0xFFB
 18760                           pclath	equ	0xFFA
 18761                           tblptru	equ	0xFF8
 18762                           tblptrh	equ	0xFF7
 18763                           tblptrl	equ	0xFF6
 18764                           tablat	equ	0xFF5
 18765                           prodh	equ	0xFF4
 18766                           prodl	equ	0xFF3
 18767                           intcon	equ	0xFF2
 18768                           postinc0	equ	0xFEE
 18769                           fsr0h	equ	0xFEA
 18770                           fsr0l	equ	0xFE9
 18771                           wreg	equ	0xFE8
 18772                           fsr1h	equ	0xFE2
 18773                           fsr1l	equ	0xFE1
 18774                           indf2	equ	0xFDF
 18775                           postinc2	equ	0xFDE
 18776                           fsr2h	equ	0xFDA
 18777                           fsr2l	equ	0xFD9
 18778                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    1413
    Data        2
    BSS         115
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          85     34      67
    COMRAMl           1      0       1
    BANK0           160     19     111
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Read_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Write_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Init_vendmem@chanlink	PTR unsigned char  size(2) Largest target is 1
		 -> chanlink1(BIGRAMl[1]), 

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 80
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), setnotes(CODE[69]), chanresetmsg(CODE[32]), chanlinkm(CODE[55]), 
		 -> vendtimem(CODE[41]), setimemsg(CODE[41]), vendsetup(CODE[67]), pricesetm2(CODE[57]), 
		 -> pricesetmsg(CODE[18]), creditclr(CODE[16]), dacmsg(CODE[13]), hoppcoin(CODE[51]), 
		 -> totalvendsm(CODE[7]), vendispmsg(CODE[21]), totalmsg(CODE[8]), cashinmsg(CODE[10]), 
		 -> initnote(CODE[37]), nochange(CODE[33]), noteerr(CODE[28]), credits(CODE[13]), 
		 -> timemsg(CODE[18]), clrline(CODE[21]), enabled(CODE[10]), disabled(CODE[10]), 
		 -> sensoffmsg(CODE[31]), sensmsg(CODE[11]), linkmsg(CODE[12]), chanmsg(CODE[12]), 
		 -> clrmsg(CODE[10]), onmsg(CODE[4]), offmsg(CODE[4]), servmsg(CODE[80]), 
		 -> emptymsg(CODE[9]), inscoin(CODE[39]), 

    displ_note@notestring	PTR unsigned char  size(2) Largest target is 9
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), 


Critical Paths under _main in COMRAMh

    _main->_mdb_init
    _vend_init->_mdb_init
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_reset->_mdb_comm
    _price_check->_give_change
    _mdb_noten->_mdb_comm
    _give_change->_hopper_pay
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_Update_cashaudit
    _Update_cashaudit->_Write_NVstore
    _dispense->_vend_dispense
    _vend_nosense->_mdb_unlock
    _vend_dispense->_set_motortime
    _set_motortime->___wmul
    _disable_channel->_DATAEE_WriteByte
    _update_vends->_DATAEE_WriteByte
    _mdb_poll->_mdb_comm
    _mdb_comm->_init_mdbdata
    _mdb_transmit->_EUSART1_Write
    _init_mdbdata->_init_pricestore
    _init_pricestore->_DATAEE_ReadByte
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _gsm_txAT->_gsm_transmit
    _gsm_transmit->_EUSART2_Write
    _enter_service->_Audit
    _enter_service->_Hopper_coin
    _enter_service->_Sensor_set
    _set_notes->_enable_notes
    _enable_notes->_displ_nendis
    _save_notes->_DATAEE_WriteByte
    _displ_nendis->_lcd_string
    _displ_note->_lcd_string
    _price_set->_set_price
    _set_price->_displ_price
    _displ_price->_displ_hex
    _mdb_unlock->_TMR1_Initialize
    _mdb_unlock->_TMR3_Initialize
    _mdb_unlock->_TMR5_Initialize
    _hopper_test->_hopper_pay
    _hopper_pay->_Update_coinsout
    _pay_coin->_Reset_hopper
    _Update_coinsout->_Write_NVstore
    _Write_NVstore->_DATAEE_WriteByte
    _Vend_timeset->_displ_time
    _displ_time->_displ_hex
    _off_sens->_displ_sflags
    _displ_sflags->_lcd_string
    _Reset_settings->_lcd_string
    _Init_vendmem->_DATAEE_ReadByte
    _Clear_Totals->_DATAEE_WriteByte
    _Link_chan->_displ_lflags
    _displ_lflags->_lcd_string
    _Sensor_set->_displ_sens
    _displ_sens->_displ_hex
    _Hopper_coin->_Update_Hopcoin
    _butindb->_butin
    _Update_Hopcoin->_displ_hex
    _Clear_cred->_lcd_string
    _Audit->_displ_hex
    _Read_NVstore->_DATAEE_ReadByte
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_nochange->_lcd_string
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMh

    None.

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMl

    None.

Critical Paths under _main in BANK0

    _price_check->_dispense
    _price_set->_set_price
    _displ_price->_displ_hex
    _Vend_settime->_Vend_timeset
    _displ_time->_displ_hex
    _Sens_off->_off_sens
    _Chan_link->_Link_chan
    _displ_sens->_displ_hex
    _Hopper_coin->_displ_hex
    _Update_Hopcoin->_displ_hex
    _Audit->_displ_hex
    _displ_credit->_displ_hex

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  625817
                                             16 BANK0      3     3      0
               _CMP1_GetOutputStatus
                    _DATAEE_ReadByte
                  _SYSTEM_Initialize
                              _butin
                         _credit_add
                       _displ_credit
                     _displ_nochange
                       _displ_noteer
                        _displ_price
                      _enter_service
                        _get_channel
                           _gsm_init
                           _lcd_init
                         _lcd_string
                           _mdb_init
                           _mdb_poll
                        _price_check
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   42697
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                       _Init_vendmem
                       _credit_check
                     _find_highprice
                      _find_lowprice
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             3     3      0   22774
                                             31 COMRAMh    3     3      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0    6403
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0    3760
                                             28 COMRAMh    3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _find_lowprice                                        2     2      0      99
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _find_highprice                                       2     2      0      99
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      31
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _price_check                                          6     6      0   89799
                                              2 BANK0      6     6      0
                    _DATAEE_ReadByte
                              _butin
                       _credit_check
                    _credit_subtract
                           _dispense
                        _get_channel
                        _give_change
                         _lcd_string
                       _note_disable
 ---------------------------------------------------------------------------------
 (2) _note_disable                                         0     0      0    6403
                          _mdb_noten
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0    6403
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (2) _give_change                                          2     2      0   39623
                                             31 COMRAMh    2     2      0
                    _DATAEE_ReadByte
                            ___lbdiv
                         _credit_add
                    _credit_subtract
                         _hopper_pay
 ---------------------------------------------------------------------------------
 (3) _credit_subtract                                      1     1      0    6790
                                             22 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _credit_add                                           1     1      0   16186
                                             29 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                   _Update_cashaudit
 ---------------------------------------------------------------------------------
 (4) _Update_cashaudit                                     1     1      0    9365
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     331
                                             18 COMRAMh    4     3      1
 ---------------------------------------------------------------------------------
 (2) _dispense                                             2     2      0   19713
                                              0 BANK0      2     2      0
                    _DATAEE_ReadByte
                       _update_vends
                      _vend_dispense
                       _vend_nosense
 ---------------------------------------------------------------------------------
 (3) _vend_nosense                                         3     3      0      31
                                             21 COMRAMh    3     3      0
                         _mdb_unlock
 ---------------------------------------------------------------------------------
 (3) _vend_dispense                                        3     3      0   10205
                                             30 COMRAMh    3     3      0
                     _TMR0_StopTimer
                    _disable_channel
                         _mdb_unlock
                      _set_motortime
 ---------------------------------------------------------------------------------
 (4) _set_motortime                                        6     6      0    3189
                                             24 COMRAMh    6     6      0
                    _DATAEE_ReadByte
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR0_WriteTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             18 COMRAMh    6     2      4
 ---------------------------------------------------------------------------------
 (5) _TMR0_WriteTimer                                      2     0      2     152
                                             18 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _disable_channel                                      4     4      0    6892
                                             22 COMRAMh    4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _update_vends                                         4     4      0    6858
                                             22 COMRAMh    4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             1     1      0    3716
                                             28 COMRAMh    1     1      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1    3713
                                             25 COMRAMh    3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      62
                                             19 COMRAMh    1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0    2690
                                             23 COMRAMh    2     2      0
                    _init_pricestore
 ---------------------------------------------------------------------------------
 (6) _init_pricestore                                      3     3      0    2591
                                             20 COMRAMh    3     3      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     687
                                             26 COMRAMh    2     2      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     523
                                             25 COMRAMh    1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _gsm_init                                             1     1      0      62
                                             20 COMRAMh    1     1      0
                       _EUSART2_Read
                             _gsm_on
                           _gsm_txAT
 ---------------------------------------------------------------------------------
 (2) _gsm_txAT                                             0     0      0      62
                       _gsm_transmit
 ---------------------------------------------------------------------------------
 (3) _gsm_transmit                                         1     1      0      62
                                             19 COMRAMh    1     1      0
                      _EUSART2_Write
                          _gsm_waitx
 ---------------------------------------------------------------------------------
 (4) _gsm_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Write                                        1     1      0      31
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _gsm_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        0     0      0  390352
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                         _Sensor_set
                         _Vend_setup
                            _butindb
                        _hopper_test
                         _lcd_string
                         _mdb_unlock
                          _price_set
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            0     0      0   53280
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         1     1      0   28561
                                             32 COMRAMh    1     1      0
                            _butindb
                       _displ_nendis
                         _lcd_string
                         _save_notes
 ---------------------------------------------------------------------------------
 (4) _save_notes                                           0     0      0    4267
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         2     2      0   12017
                                             30 COMRAMh    2     2      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           2     0      2   12597
                                             30 COMRAMh    2     0      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _price_set                                            0     0      0   34543
                       _Read_Service
                            _butindb
                         _lcd_string
                          _set_price
 ---------------------------------------------------------------------------------
 (3) _set_price                                            4     4      0   22387
                                             32 COMRAMh    2     2      0
                                             12 BANK0      2     2      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                        _displ_price
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _displ_price                                          1     1      0    3280
                                             31 COMRAMh    1     1      0
                          _displ_hex
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (4) _mdb_unlock                                           1     1      0       0
                                             20 COMRAMh    1     1      0
                    _CMP1_Initialize
                    _DAC1_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _hopper_test                                          0     0      0   13697
                         _hopper_pay
 ---------------------------------------------------------------------------------
 (3) _hopper_pay                                           2     2      0   13697
                                             29 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                    _Update_coinsout
                         _cctalk_off
                          _cctalk_on
                           _pay_coin
 ---------------------------------------------------------------------------------
 (4) _pay_coin                                             0     0      0       0
                       _Reset_hopper
                    _TMR2_Initialize
                    _TMR4_Initialize
                         _cctalk_off
                          _cctalk_on
                        _switch_read
 ---------------------------------------------------------------------------------
 (5) _switch_read                                          1     1      0       0
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _Reset_hopper                                         2     2      0       0
                                             18 COMRAMh    2     2      0
                    _TMR4_Initialize
                         _cctalk_off
                          _cctalk_on
 ---------------------------------------------------------------------------------
 (5) _cctalk_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _cctalk_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Update_coinsout                                      1     1      0    9334
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (5) _Write_NVstore                                        6     1      5    5269
                                             22 COMRAMh    6     1      5
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _Vend_setup                                           0     0      0  171160
                          _Chan_link
                       _Clear_Totals
                       _Init_vendmem
                     _Reset_settings
                           _Sens_off
                       _Vend_settime
                            _butindb
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _Vend_settime                                         0     0      0   46595
                       _Read_Service
                       _Vend_timeset
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Vend_timeset                                         4     4      0   34374
                                             12 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                         _displ_time
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_time                                           2     1      1   15143
                                             31 COMRAMh    2     1      1
                          _displ_hex
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Sens_off                                             2     2      0   44588
                                              3 BANK0      2     2      0
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
                           _off_sens
 ---------------------------------------------------------------------------------
 (4) _off_sens                                             3     3      0   32367
                                              0 BANK0      3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                       _displ_sflags
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_sflags                                         3     1      2   13009
                                             30 COMRAMh    3     1      2
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Reset_settings                                       6     6      0   16355
                                             30 COMRAMh    2     2      0
                                              0 BANK0      4     4      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Init_vendmem                                         7     7      0    2758
                                             20 COMRAMh    7     7      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _Clear_Totals                                         2     2      0    4335
                                             22 COMRAMh    2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _Chan_link                                            2     2      0   44407
                                              5 BANK0      2     2      0
                          _Link_chan
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Link_chan                                            5     5      0   32186
                                              0 BANK0      5     5      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _Read_Service
                            _butindb
                       _displ_lflags
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_lflags                                         3     2      1   12949
                                             30 COMRAMh    3     2      1
                        _lcd_dispadd
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Read_Service                                         1     1      0      34
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           1     1      0   31613
                                             33 COMRAMh    1     1      0
                            _butindb
                         _displ_sens
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_sens                                           2     1      1   19364
                                             31 COMRAMh    2     1      1
               _CMP1_GetOutputStatus
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          1     1      0   36641
                                             33 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                     _Update_Hopcoin
                            _butindb
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              4     4      0     170
                                             20 COMRAMh    4     4      0
                              _butin
 ---------------------------------------------------------------------------------
 (3) _Update_Hopcoin                                       2     1      1   19267
                                             31 COMRAMh    2     1      1
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           2     2      0   16219
                                             30 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (6) _DATAEE_WriteByte                                     4     1      3    4267
                                             18 COMRAMh    4     1      3
 ---------------------------------------------------------------------------------
 (2) _Audit                                                3     3      0   21077
                                             31 COMRAMh    3     3      0
               _CMP1_GetOutputStatus
                    _DATAEE_ReadByte
                       _Read_NVstore
                              _butin
                          _displ_hex
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _get_channel                                          1     1      0      65
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _butin                                                2     2      0      68
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _Read_NVstore                                         6     1      5    4034
                                             20 COMRAMh    6     1      5
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0   12562
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     610
                                             25 COMRAMh    3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_nochange                                       0     0      0   12181
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0   16910
                                             31 COMRAMh    1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3   11952
                                             25 COMRAMh    5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (5) _displ_hex                                           15    12      3    2432
                                             28 COMRAMh    3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           1     1      0     424
                                             24 COMRAMh    1     1      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     229
                                             22 COMRAMh    2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     164
                                             20 COMRAMh    2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      68
                                             18 COMRAMh    2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___ltmod                                              7     1      6     412
                                             18 COMRAMh    7     1      6
 ---------------------------------------------------------------------------------
 (6) ___ltdiv                                             10     4      6     421
                                             18 COMRAMh   10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0    2492
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (7) _DATAEE_ReadByte                                      2     0      2    2492
                                             18 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (5) _TMR5_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0       0
                                              0 COMRAMh   18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (13) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _DATAEE_ReadByte
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
   _butin
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _Update_cashaudit
       _Read_NVstore
         _DATAEE_ReadByte
       _Write_NVstore
         _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_nochange
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_price
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _enter_service
     _Audit
       _CMP1_GetOutputStatus
       _DATAEE_ReadByte
       _Read_NVstore
         _DATAEE_ReadByte
       _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _get_channel
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Clear_cred
       _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Hopper_coin
       _DATAEE_ReadByte
       _Update_Hopcoin
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Sensor_set
       _butindb
         _butin
       _displ_sens
         _CMP1_GetOutputStatus
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Vend_setup
       _Chan_link
         _Link_chan
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _Read_Service
           _butindb
             _butin
           _displ_lflags
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Clear_Totals
         _DATAEE_WriteByte
       _Init_vendmem
         _DATAEE_ReadByte
       _Reset_settings
         _DATAEE_WriteByte
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Sens_off
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _off_sens
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_sflags
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
       _Vend_settime
         _Read_Service
         _Vend_timeset
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_time
             _displ_hex
               ___ltdiv
               ___ltmod
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _butindb
       _butin
     _hopper_test
       _hopper_pay
         _DATAEE_WriteByte
         _Update_coinsout
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
         _cctalk_off
         _cctalk_on
         _pay_coin
           _Reset_hopper
             _TMR4_Initialize
             _cctalk_off
             _cctalk_on
           _TMR2_Initialize
           _TMR4_Initialize
           _cctalk_off
           _cctalk_on
           _switch_read
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_unlock
       _CMP1_Initialize
       _DAC1_Initialize
       _TMR1_Initialize
       _TMR3_Initialize
       _TMR5_Initialize
     _price_set
       _Read_Service
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _set_price
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _butindb
           _butin
         _displ_price
           _displ_hex
             ___ltdiv
             ___ltmod
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _save_notes
           _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _get_channel
   _gsm_init
     _EUSART2_Read
     _gsm_on
     _gsm_txAT
       _gsm_transmit
         _EUSART2_Write
         _gsm_waitx
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
         _init_pricestore
           _DATAEE_ReadByte
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
         _init_pricestore
           _DATAEE_ReadByte
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
         _init_pricestore
           _DATAEE_ReadByte
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
         _init_pricestore
           _DATAEE_ReadByte
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _price_check
     _DATAEE_ReadByte
     _butin
     _credit_check
       _DATAEE_ReadByte
     _credit_subtract
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _dispense
       _DATAEE_ReadByte
       _update_vends
         _DATAEE_ReadByte
         _DATAEE_WriteByte
       _vend_dispense
         _TMR0_StopTimer
         _disable_channel
           _DATAEE_ReadByte
           _DATAEE_WriteByte
         _mdb_unlock
           _CMP1_Initialize
           _DAC1_Initialize
           _TMR1_Initialize
           _TMR3_Initialize
           _TMR5_Initialize
         _set_motortime
           _DATAEE_ReadByte
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_WriteTimer
           ___wmul
       _vend_nosense
         _mdb_unlock
           _CMP1_Initialize
           _DAC1_Initialize
           _TMR1_Initialize
           _TMR3_Initialize
           _TMR5_Initialize
     _get_channel
     _give_change
       _DATAEE_ReadByte
       ___lbdiv
       _credit_add
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _Update_cashaudit
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
       _credit_subtract
         _DATAEE_ReadByte
         _DATAEE_WriteByte
       _hopper_pay
         _DATAEE_WriteByte
         _Update_coinsout
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
         _cctalk_off
         _cctalk_on
         _pay_coin
           _Reset_hopper
             _TMR4_Initialize
             _cctalk_off
             _cctalk_on
           _TMR2_Initialize
           _TMR4_Initialize
           _cctalk_off
           _cctalk_on
           _switch_read
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _note_disable
       _mdb_noten
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
             _init_pricestore
               _DATAEE_ReadByte
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
   _vend_init
     _DAC1_SetOutput
     _DATAEE_ReadByte
     _Init_vendmem
       _DATAEE_ReadByte
     _credit_check
       _DATAEE_ReadByte
     _find_highprice
     _find_lowprice
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
             _init_pricestore
               _DATAEE_ReadByte
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
             _init_pricestore
               _DATAEE_ReadByte
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
             _init_pricestore
               _DATAEE_ReadByte
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            E7D      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      33        0.0%
BANK13             100      0       0      34        0.0%
BITBANK12          100      0       0      31        0.0%
BANK12             100      0       0      32        0.0%
BITBANK11          100      0       0      29        0.0%
BANK11             100      0       0      30        0.0%
BITBANK10          100      0       0      27        0.0%
BANK10             100      0       0      28        0.0%
BITBANK9           100      0       0      24        0.0%
BANK9              100      0       0      25        0.0%
BITBANK8           100      0       0      22        0.0%
BANK8              100      0       0      23        0.0%
BITBANK7           100      0       0      20        0.0%
BANK7              100      0       0      21        0.0%
BITBANK6           100      0       0      18        0.0%
BANK6              100      0       0      19        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       9        0.0%
BITBANK0            A0      0       0       6        0.0%
BANK0               A0     13      6F       7       69.4%
BITBANK14           88      0       0      35        0.0%
BANK14              88      0       0      36        0.0%
COMRAMh             55     22      43       2       78.8%
BITCOMRAMh          55      0       0       0        0.0%
BIGRAMl              2      0       0      38        0.0%
BITCOMRAMl           1      0       0       1        0.0%
COMRAMl              1      0       1       3      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3      26        0.0%
DATA                 0      0      B3       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Sep 29 13:06:27 2018

                       lcd_writeC@lcdata 0023                   __end_of_displ_nochange 288A  
                   __end_of_Clear_Totals 2628                   disable_channel@channel 0023  
                      ??_disable_channel 0021                             _update_vends 2090  
                           ?_displ_price 0000                              __CFG_CP$OFF 000000  
                      ??_CMP1_Initialize 001D                            ?_displ_credit 0000  
                    ___wmul@multiplicand 001F                          ??_vend_dispense 0029  
                          ?_displ_lflags 0029                            ?_displ_nendis 000B  
                          ?_displ_sflags 0029                          lcd_write@lcdata 0020  
                          ?_displ_noteer 0000                              __CFG_LVP$ON 000000  
                                    LATE 000F87                          _DAC1_Initialize 2C38  
                                    l108 2BC0                                      l264 26C6  
                                    l641 2BD2                                      _PR2 000FBC  
                                    _PR4 000FB6                             __CFG_CPD$OFF 000000  
                        _timer1ReloadVal 00CB                  __size_of_PMD_Initialize 001C  
                        _TMR2_Initialize 2A5E                                      prod 000FF3  
                                    wreg 000FE8                         ??_Update_Hopcoin 002B  
                         _DAC1_SetOutput 2C58                             ?_give_change 000B  
                         ??_credit_check 001F                              main@channel 00C4  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                          ?_mdb_security 0000                                     l1112 0346  
                                   l1121 03F4                                     l1122 03EA  
                                   l1123 03CE                                     l1131 03C8  
                                   l1124 03B6                                     l1116 038C  
                                   l1150 167C                                     l1134 03FA  
                                   l1126 03BC                                     l1151 16EC  
                                   l1135 040C                                     l1119 039E  
                                   l1152 1682                                     l3000 0540  
                                   l2201 284C                                     l1153 1688  
                                   l3001 0544                                     l1129 03C2  
                                   l2202 2828                                     l1154 168E  
                                   l3010 0A5A                                     l3002 0548  
                                   l2210 213E                                     l1138 048C  
                                   l1155 1694                                     l3011 0A2A  
                                   l3003 054C                                     l1139 044A  
                                   l1156 169C                                     l1148 1674  
                                   l3004 0550                                     l2221 25B8  
                                   l1149 16B4                                     l1157 16A2  
                                   l3005 0554                                     l2310 071A  
                                   l1158 16A8                                     l3014 0A82  
                                   l3006 0558                                     l2303 2A8C  
                                   l2223 25CA                                     l2311 07D2  
                                   l1159 16AE                                     l3023 0AFC  
                                   l3015 0AB6                                     l2304 2A84  
                                   l2240 01B4                                     l2224 25C4  
                                   l1600 1D82                                     l2312 0724  
                                   l3016 0A8C                                     l2321 0810  
                                   l4001 1902                                     l2313 07E8  
                                   l2322 08D4                                     l2314 075A  
                                   l2235 00D2                                     l2251 113A  
                                   l1611 14CE                                     l2323 0818  
                                   l2315 0792                          _timer3ReloadVal 00C9  
                                   l2236 0186                                     l2252 10C2  
                                   l1604 19BC                                     l2180 1312  
                                   l2324 08FA                                     l4004 1918  
                                   l2253 1108                                     l1605 199C  
                                   l2245 2618                                     l2325 083C  
                                   l4013 22CE                                     l2238 015E  
                                   l2262 1B84                                     l2270 1B74  
                                   l2254 10CA                                     l1606 19B4  
                                   l2246 2604                                     l2182 137E  
                                   l2326 0860                                     l4014 22DE  
                                   l1622 28DE                                     l2190 0EAE  
                                   l2263 1B5C                                     l2255 111C  
                                   l2183 1342                                     l2343 0616  
                                   l2335 2364                                     l2327 0884  
                                   l4015 22E8                                     l1632 094E  
                                   l2256 10D6                                     l2344 06BC  
                                   l2336 237A                                     l2328 088A  
                                   l4008 1936                                     l1633 091E  
                                   l2273 1B80                                     l2257 10E2  
                                   l2281 0FEA                                     l2345 061E  
                                   l2337 2384                                     l2329 08AE  
                                   l1642 09CE                                     l1634 0984  
                                   l2266 1B9A                                     l2282 1040  
                                   l2362 0F00                                     l2354 1F90  
                                   l2346 06D0                                     l1643 099E  
                                   l1635 0926                                     l2267 1B66  
                                   l2283 0FF2                                     l2355 1FC0  
                                   l2179 1336                                     l2347 065C  
                                   l2195 2776                                     l1660 1404  
                                   l1636 092E                                     l2268 1B70  
                                   l2284 1054                                     l2364 0F22  
                                   l2356 1FCA                                     l2348 069A  
                                   l2196 2750                                     l2188 0E24  
                                   l1645 09A6                                     l1637 0936  
                                   l2285 1008                                     l2189 0E26  
                                   l1646 09AE                                     l1638 093E  
                                   l2286 101E                                     l2366 0F84  
                                   l2390 0BBC                                     l2374 1C7E  
                                   l1647 09B6                                     l1639 0946  
                                   l2287 1064                                     l2367 0F64  
                                   l1680 1F56                                     l1656 13F8  
                                   l1648 09BE                                     l2296 1C1E  
                                   l1681 1F14                                     l1657 139A  
                                   l1649 09C6                                     l2385 0B3E  
                                   l2377 1CB4                                     l2297 1C30  
                                   l1682 1F6A                                     l1666 151A  
                                   l2386 0BDE                                     l2378 1CCA  
                                   l2298 1C3A                                     l1683 1F2A  
                                   l1659 141E                                     l1667 1522  
                                   l2395 0D38                                     l2387 0B46  
                                   l2379 1CD4                                     l1692 28FC  
                                   l1684 1F40                                     l1668 1578  
                                   l2396 0D22                                     l2388 0BF2  
                                   l4500 1B38                                     l1669 1528  
                                   l2389 0B82                                     l2398 0D86  
                                   l5310 2676                                     l1599 1D72  
                                   l2399 0D70                                     l4511 2562  
                                   l4512 2534                                     l4520 2520  
                                   l5313 2692                                     l4513 2560  
                                   l1698 2B62                                     l5314 269A  
                                   l2940 0CE4                                     l2924 29C8  
                                   l2941 0C1C                                     l2925 29B2  
                                   l5309 267C                                     l2933 1A6A  
                                   l2942 0CB8                                     l4470 0212  
                                   l4518 2522                                     l2934 1A50  
                                   l2943 0C28                                     l4471 01EC  
                                   l4519 24F4                                     l2960 1D00  
                                   l2944 0CDE                                     l4528 23CC  
                                   l4480 0326                                     l4472 020A  
                                   l2961 1D14                                     l2945 0C3E  
                                   l4529 2390                                     l5362 1E86  
                                   l2946 0C54                                     l4474 0226  
                                   l5363 1E92                                     l2947 0C6A  
                                   l4475 0276                                     l4467 01D0  
                                   l5372 2284                                     l2956 1CE6  
                                   l2948 0C80                                     l4484 2328  
                                   l4476 0272                                     l5373 2290  
                                   l2957 1D3A                                     l2949 0C96  
                                   l2981 04F8                                     l4493 1B14  
                                   l4485 2330                                     l2973 246E  
                                   l4477 032E                                     l4469 01E0  
                                   l5358 1E5C                                     l2958 1CEE  
                                   l2982 04C6                                     l4494 1B08  
                                   l4478 02B4                                     l5359 1E52  
                                   l2959 1D4E                                     l2991 055E  
                                   l4479 0306                                     l5368 2264  
                                   l2992 051A                                     l2984 04CE  
                                   l5369 225A                                     l2993 0522  
                                   l2985 04D6                                     l2994 05B2  
                                   l2986 04DE                                     l2995 0526  
                                   l2987 04E6                                     l2996 052A  
                                   l2988 04EE                                     l2997 0534  
                                   l3990 18C2                                     l2998 0538  
                                   l3983 2660                                     l3967 2B9A  
                                   l2999 053C                                     l3976 1E22  
                                   l3977 1DD4                                     l3994 18DC  
                                   l3978 1E1E                                     l3988 18E0  
                                   l3999 18EA                                     l4967 2998  
                                   l4968 2984                                     STR_1 FFFA  
                                   STR_2 FFFA                                     _LATA 000F83  
                                   _LATB 000F84                                     _LATC 000F85  
                                   _LATD 000F86                                     _LATE 000F87  
                                   u4200 22B2                                     u4202 22B4  
                                   _T2PR 000FBC                                     u4240 2C26  
                                   u4320 0F8E                                     u4410 0ACA  
                                   _T4PR 000FB6                                     u5220 15D4  
                                   u4190 22A6                                     u4192 22A8  
                                   u4360 0A60                                     u4425 0AD4  
                                   u4530 1928                                     u4427 0AD6  
                                   u4620 2624                                     _PMD0 000EE1  
                                   _PMD1 000EE2                                     u4470 18D2  
                                   u4390 0AC0                                     _PMD2 000EE3  
                                   u4375 0AAE                                     _PMD3 000EE4  
                                   u3920 1E60                                     u4640 1B6C  
                                   _PMD4 000EE5                                     u4377 0AB0  
                                   _PMD5 000EE6                                     u4554 1FE6  
                                   u4555 1FE2                                     u3950 2268  
                                   u4910 1B44                                     u4940 2680  
                                   u4854 2166                                     u5807 22C4  
                                   u4855 2162                                     u4880 1B20  
                                   u4864 1AF8                                     u5817 22D4  
                                   u4865 1AF4                                     u5737 1EAA  
                                   u5907 2402                                     u3995 26D4  
                                   u5827 263A                                     u5747 218A  
                                   u3996 26D6                                     u5837 1C6A  
                                   u5757 15C6                                     u5847 0DCC  
                                   u5767 15D6                                     u5857 1FB2  
                                   u5777 1640                                     u5867 2AD8  
                                   u5787 298E                                     u5877 25DA  
                                   u5797 1146                                     u5887 177A  
                                   u5897 23DE                                     _TMR2 000FBB  
                                   _TMR4 000FB5            __size_of_eusartmdb_Initialize 0016  
                            _totalvendsm FFEB                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                          _EUSART1_Write 2BE4                            __CFG_FCMEN$ON 000000  
                          _EUSART2_Write 2C0E                                     _cash 0039  
                                   _dest 00AB                                     _main 0336  
                                   _exit FBDE                            ?_EUSART1_Read 000B  
                        _TMR0_StartTimer 2C96                            ?_mdb_transmit 0000  
                          ?_EUSART2_Read 000B                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 004F                                     prodh 000FF4  
                                   prodl 000FF3                                     start 00AA  
                        _timer5ReloadVal 00C7                     __end_of_chanresetmsg FEB3  
                             _Clear_cred 16F2                          _TMR3_Initialize 27B6  
               disable_channel@errormask 0024                   __size_of_enter_service 00A2  
                          __CFG_CSWEN$ON 000000                        ??_init_pricestore 001F  
                           ___param_bank 000000                          ?_displ_nochange 0000  
                          __CFG_SCANE$ON 000000                              _switch_read 229E  
                         ??_displ_credit 002A                __size_of_DATAEE_WriteByte 003A  
                     vend_nosense@chanel 0022                           ??_displ_lflags 002A  
                __end_of_TMR0_Initialize 297E                           ??_displ_nendis 0029  
                         ??_displ_sflags 002B           __size_of_OSCILLATOR_Initialize 0018  
                         ??_displ_noteer 0029                            ?_Read_NVstore 001F  
          __end_of_OSCILLATOR_Initialize 2B30                                    l10479 2BE6  
                                  l10789 2C10                                    l11955 15B2  
                                  ?_main 000B                          __end_of___lbdiv 269E  
                          __CFG_WDTE$OFF 000000                                    _T1CLK 000FD2  
                                  _T1CON 000FCF                                    _T3CLK 000FCC  
                                  _T2CON 000FBD                                    _LATA6 007C1E  
                                  _T3CON 000FC9                                    _LATA7 007C1F  
                                  _CMOUT 000F3D                                    _T5CLK 000FC6  
                                  _T4CON 000FB7                                    _T2HLT 000FBE  
                                  _T5CON 000FC3                          __end_of___ltdiv 1EA0  
                                  _T4HLT 000FB8                           __CFG_DEBUG$OFF 000000  
                        __end_of___ltmod 229E                                    _T2TMR 000FBB  
                                  _T2RST 000FC0                                    _T4TMR 000FB5  
                                  i2l208 005E                                    _T4RST 000FBA  
                        _TMR0_WriteTimer 2C4E                   __end_of_DAC1_SetOutput 2C60  
                    price_check@savechan 00B6                                    _OSCEN 000EDC  
                 __size_of_Write_NVstore 0036                                    _TMR0H 000FD4  
                                  _TMR1H 000FCE                          __end_of_cc_poll FC25  
                                  _TMR0L 000FD3                                    _TMR1L 000FCD  
                                  _TMR3H 000FC8                                    _TMR3L 000FC7  
                                  _TMR5H 000FC2                                    _TMR5L 000FC1  
                        ??_find_lowprice 001D                                    _PORTA 000F8D  
                        __end_of_cc_test FC30                                    _PORTD 000F90  
                        __end_of_cc_stop FC2B                                    _TRISA 000F88  
                                  _TRISB 000F89                                    _TRISC 000F8A  
                                  _TRISD 000F8B                                    _TRISE 000F8C  
                        __end_of_chanmsg FF72                            ?_Read_Service 000B  
                        __end_of_cashint FC17                          __end_of_cashinv FC1B  
                     off_sens@senseflags 00B4                                    _Audit 0000  
                          __CFG_WRT0$OFF 000000                          _TMR4_Initialize 2A98  
                          __CFG_WRT1$OFF 000000                           __pidataCOMRAMh 2CAB  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                          __CFG_WRT4$OFF 000000                            __CFG_WRT5$OFF 000000  
                          __CFG_WRT6$OFF 000000                            __CFG_WRT7$OFF 000000  
                        __end_of_enabled FFB1                           __CFG_EBTR0$OFF 000000  
                      lcd_write@savelatd 001F                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                        __end_of_credclr FB43                           __CFG_EBTR4$OFF 000000  
                        __end_of_credmem FC1D                           __CFG_EBTR5$OFF 000000  
                        __end_of_credits FF66                           __CFG_EBTR6$OFF 000000  
                         __CFG_EBTR7$OFF 000000                          __end_of_clrline FF18  
                        __end_of_dispclr FC55                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                          __end_of_dispoff FC4E  
                          __CFG_WRTD$OFF 000000                            ??_Hopper_coin 002C  
                                  _bflag 0047                          _DATAEE_ReadByte 2B00  
                         __CFG_EBTRB$OFF 000000                           ??_mdb_security 0027  
                __end_of_PIN_MANAGER_IOC 2C92                          __end_of_butindb 25EA  
                        __end_of_dsphome FC53                                    _line1 FC4A  
                                  _line2 FC49                                    _line3 FC48  
                                  _line4 FC47                                    _count 00CD  
                                  _butin 23D4                          __end_of_mastadd FC32  
                                  _dummy 0087                          __end_of_hopcoin FC0B  
                        __end_of_inithop FBAC                                    _vcash 00A2  
                        __end_of_inscoin FE4D                                    _onmsg FFF6  
                     __CFG_MCLRE$EXTMCLR 000000                          __end_of_linkmsg FF7E  
                        __end_of_second1 FC23                          find_highprice@i 001E  
                         ?_EUSART1_Write 000B                  __end_of_TMR1_Initialize 2822  
                          ?_Init_vendmem 000B                           ?_EUSART2_Write 000B  
                                  pclath 000FFA                                    tablat 000FF5  
                        __end_of_noteerr FEEE                             ?_hopper_test 0000  
                        __end_of_tenrand FFBA                          __end_of_sensmsg FF89  
                        __end_of_sensval FC0F                          __end_of_timemsg FF2A  
                        __end_of_servmsg FCA9                           ??_EUSART1_Read 001D  
                         ??_mdb_transmit 001E                           ??_EUSART2_Read 001D  
                                  status 000FD8                                    wtemp6 0050  
                      ??_Update_coinsout 0027                          ___lbdiv@divisor 001D  
                        ___lbdiv@counter 001F                           _Reset_settings 0CEA  
                        _TMR5_Initialize 2780             __end_of_CMP1_GetOutputStatus 2C2A  
                        __initialization 241E                        set_motortime@time 0027  
                       ??_find_highprice 001D                              butin@butons 001E  
             __end_of_EUSART1_Initialize 2B8A                             __end_of_main 0496  
                __end_of_DAC1_Initialize 2C44                             __end_of_exit FBE3  
                     __size_of_Chan_link 0062                      displ_time@motortime 002B  
                __end_of_TMR2_Initialize 2A7C                           ??_Read_NVstore 0024  
                                 ??_main 00C2                           find_lowprice@i 001E  
                          __activetblptr 000003                          ?_DAC1_SetOutput 000B  
                   __end_of_enable_notes 1D54                           ??_Read_Service 001D  
                            butindb@butt 0022                         __end_of_Sens_off 1CDA  
                                 ?_Audit 0000                            _enter_service 1650  
                __end_of_TMR0_StartTimer 2C9A               __end_of_EUSART2_Initialize 2B48  
                                 ?_butin 0000                                   _CM1NCH 000F3B  
                                 _CM1PCH 000F3C                           ??_Init_vendmem 001F  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                                   _T0CON0 000FD5  
                                 _T0CON1 000FD6                                   _T1GATE 000FD1  
                                 _T1GCON 000FD0                                   _T3GATE 000FCB  
                                 _T3GCON 000FCA                                   _T5GATE 000FC5  
                                 _T5GCON 000FC4                                   _RC1REG 000F99  
                                 _RC2REG 000E99                                   _RC1STA 000F9D  
                                 _RC2STA 000E9D                                   _RB5PPS 000EF4  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _RC6PPS 000EFD  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
               __size_of_credit_subtract 0056                         credit_add@credit 0028  
                __end_of_TMR3_Initialize 27EC                           __CFG_WDTCCS$SC 000000  
                                 _TABLAT 000FF5                            ?_init_mdbdata 000B  
                       __end_of_cc_level FC2A                                   _OSCFRQ 000EDE  
                                 _NVMDAT 000F80                         __end_of_cc_reset FC31  
                                 _TX1REG 000F9A                                   _TX2REG 000E9A  
                                 _TX1STA 000F9E                                   _TX2STA 000E9E  
                    __end_of_Hopper_coin 1140                   __end_of_Reset_settings 0DDC  
                  __size_of_Clear_Totals 003E                            _Write_NVstore 274A  
                     __size_of_Link_chan 00D8                         __end_of_cashoutv FC0D  
                            ?_Clear_cred 0000                           __CFG_PWRTE$OFF 000000  
                DAC1_SetOutput@inputData 001D                     __size_of_get_channel 001C  
                         __CFG_XINST$OFF 000000                            ?_gsm_transmit 000B  
                       __end_of_disabled FFA7                     __size_of_lcd_dispadd 0018  
                       __end_of_auditmsg FBD6                         __end_of_dispaddr FC54  
                       __end_of_lcd_init 1650                         __end_of_lcd_test 2B74  
                       __end_of_mdb_comm 0B04                         __end_of_dispense 233C  
                       __end_of_mdb_init 1F08                         __end_of_mdb_poll 05B8  
                   __end_of_credit_check 2A3E                                   _cc_pay FC2C  
                                 _cc_pin FC28                                   ___wmul 29D4  
                                 _dacmsg FF4C                                ??___lbdiv 001E  
                           ?_price_check 0000                           __CFG_STVREN$ON 000000  
                                 _change 003C                        ?_Update_cashaudit 000B  
                __end_of_TMR0_WriteTimer 2C58                               _Sensor_set 0F94  
                          displ_nendis@x 002A                             give_change@i 002B  
                              ??___ltdiv 0023                          mdb_reset@i_4062 0029  
                              ??___ltmod 0023                                   _credit 003A  
                                 _lcdata 0046                                   _clrmsg FF93  
                                 _dispon FC55                                   _mdb_on 2C9A  
                                 _dispsl FC4B                               _Vend_setup 07EE  
                                 _dispsr FC4C                                   _ercode 0044  
                       __end_of_emptymsg FFC3                                   _hexnum 009D  
                                 _hopadd FC32                         __end_of_gsm_init 29AA  
                       __end_of_gsm_txAT 2C00                                   _gsm_on 2C9E  
                       __end_of_off_sens 0BF8                         ?_TMR0_Initialize 0000  
                __end_of_TMR4_Initialize 2AB4                                   _mcount 0042  
                                 _offmsg FFF2                                   clear_0 2448  
                                 clear_1 2454                                   _noecho FC23  
                     ??_Update_cashaudit 0027                         __end_of_hoperror FBE5  
                       __end_of_hoppcoin FDD4                         __end_of_initnote FE72  
                                 _nvcash 0097                                   _noteen 003E  
                                 _senset FBAC                                   _pvcash 004B  
                       __end_of_pay_coin 193A                                   _slvadd 00AE  
                       __end_of_nochange FE93                     __size_of_displ_price 0040  
                                 _stradd 0045                                   _tvends 008F  
                      read_busy@savelatd 001E                        read_busy@savelate 001D  
                __end_of_DATAEE_ReadByte 2B18                         __end_of_second_5 FC21  
                              ??_butindb 001F                           _PMD_Initialize 2AB4  
                         ?_enter_service 0000                         __end_of_notebits FC11  
                       __end_of_pricemsg FBDE                         __end_of_notetest FBC9  
                           __mediumconst FA74                         __end_of_setnotes FCEE  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                       __end_of_vendtest FB82                                   tblptru 000FF8  
                   Update_Hopcoin@newval 002B                          ??_EUSART1_Write 001D  
                           _Clear_Totals 25EA                          ??_EUSART2_Write 001D  
                       ?_PIN_MANAGER_IOC 000B                         __end_of_totalmsg FFCB  
                      __end_of_Chan_link 1FD0                         ___lbdiv@dividend 001E  
                   __size_of_give_change 0054            __size_of_INTERRUPT_Initialize 0008  
                         ??_init_mdbdata 0022                     __end_of_displ_credit 28BE  
                       ?_TMR1_Initialize 0000                  __end_of_TMR5_Initialize 27B6  
                   __end_of_displ_lflags 19C4                        displ_lflags@lchan 002B  
       ??_INTERRUPT_InterruptManagerHigh 000B          ?_INTERRUPT_InterruptManagerHigh 000B  
                      _SYSTEM_Initialize 26D8                          _disable_channel 1FD0  
                   __end_of_displ_nendis 28F0                      Vend_timeset@channel 00C1  
                             __accesstop 0060                  __end_of__initialization 245C  
                   __end_of_displ_sflags 14F0                     __end_of_displ_noteer 2950  
             Reset_settings@chanlinkbits 00B2                           ?_Write_NVstore 0021  
                  __end_of_note_features FC40                          _CMP1_Initialize 2B9E  
                        ?_Reset_settings 0000                       ?_SYSTEM_Initialize 000B  
                  __end_of_theft_attempt FC34                             __pbssCOMRAMh 002D  
                          ___rparam_used 000001                             __pbssCOMRAMl 004E  
                  Clear_Totals@eeaddress 0021                           ??_gsm_transmit 001E  
                          __end_of_Audit 01BA               Reset_settings@chantimebits 00B4  
                           __pidataBANK0 2CAA                      ??_SYSTEM_Initialize 001F  
                       ?_DAC1_Initialize 0000                     __end_of_mdb_security 2A5E  
                       _DATAEE_WriteByte 269E                            __end_of_line1 FC4B  
                          __end_of_line2 FC4A                            __end_of_line3 FC49  
                          __end_of_line4 FC48                            __end_of_butin 241E  
                          __end_of_onmsg FFFA                    __end_of_note_rejected FC35  
                       ?_TMR2_Initialize 0000                       __size_of_cctalk_on 0004  
                       ___lbdiv@quotient 0020                    __end_of_note_security FC45  
                 __end_of_PMD_Initialize 2AD0                     __end_of_EUSART1_Read 2BC4  
                   __end_of_mdb_transmit 2BE4                     __end_of_EUSART2_Read 2BD6  
                             _cc_countrq FC2B                        __end_of_Link_chan 0F94  
                           _chanresetmsg FE93                                  ??_Audit 002A  
                    __size_of_Clear_cred 0096                            update_vends@x 0023  
                   _CMP1_GetOutputStatus 2C1C                           Write_NVstore@i 0026  
                     __size_of_displ_hex 00B6                    __end_of_set_motortime 181C  
                            _Hopper_coin 106A                         ?_TMR0_StartTimer 000B  
                     __size_of_lcd_write 0032                                  ??_butin 001D  
              __end_of_SYSTEM_Initialize 2712                       __size_of_mdb_reset 0086  
                     __size_of_mdb_noten 0042                       __size_of_mdb_waitr 0006  
                     __size_of_mdb_waitx 0006                            ?_Reset_hopper 000B  
                        _init_pricestore 238A                               __pbssBANK0 0060  
                    displ_hex@hexnumsave 00BA                         ?_TMR3_Initialize 0000  
                   __end_of_Read_NVstore 2856                     displ_price@vendprice 002A  
                       ??_displ_nochange 0029                            _chan1linkbits FC07  
                   __size_of_hopper_test 0014                               _cctalk_off 2CA6  
                     __size_of_gsm_waitx 0008                            _chan2linkbits FC05  
                     __size_of_read_busy 0042                     __end_of_Read_Service 2AE8  
                      ??_credit_subtract 0021                            _chan3linkbits FC03  
                              ?_Sens_off 0000                            _chan4linkbits FC01  
                __size_of_TMR0_StopTimer 0004                             ?_switch_read 0000  
                                ?___wmul 001D                            _chan5linkbits FBFF  
                            ?_Sensor_set 0000                         ?_TMR0_WriteTimer 001D  
           __end_of_eusartmdb_Initialize 2B5E                              ?_Vend_setup 0000  
                          _chan6linkbits FBFD                    __size_of_enable_notes 007A  
                                ?_mdb_on 0000                                  _CM1CON0 000F39  
                                _CM1CON1 000F3A                     __end_of_Init_vendmem 1386  
                                ?_gsm_on 0000                            _chan7linkbits FBFB  
                       ?_TMR4_Initialize 0000                          ?_PMD_Initialize 0000  
                          _chan8linkbits FBF9                          ??_enter_service 002D  
                     __size_of_set_price 0118                       __size_of_set_notes 00F2  
                  __end_of_vend_dispense 1B58                       __size_of_price_set 0080  
                       ?_DATAEE_ReadByte 001D                       __size_of_vend_init 00E0  
                  displ_nendis@note2disp 0029                               _credit_add 20EC  
                      __end_of_cc_adpoll FC26                               _lcd_clockE 2C2A  
                             _lcd_clockH 2C70                               _lcd_clockL 2C68  
                      __end_of_cc_enable FC2F                                  _SP1BRGH 000F9C  
                                _SP1BRGL 000F9B                                  _SP2BRGH 000E9C  
                                _SP2BRGL 000E9B                               _lcdaddress 00AF  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                        _Update_coinsout 2030                  __end_of_disable_channel 2030  
                                _TBLPTRH 000FF7                        __end_of_chan1time FBF7  
                                _TBLPTRL 000FF6                                  _TBLPTRU 000FF8  
                      __end_of_chan2time FBF5                    ?_CMP1_GetOutputStatus 000B  
                      __end_of_chan3time FBF3                        __end_of_chan4time FBF1  
                        off_sens@chanbit 00B3                        __end_of_chan5time FBEF  
                      __end_of_chan6time FBED                                  _NVMADRH 000F7F  
                        off_sens@channel 00B2                                  _NVMADRL 000F7E  
                             _jammed_err FC3A                        __end_of_chan7time FBEB  
                                _OSCTUNE 000EDD                        __end_of_chan8time FBE9  
                                _NVMCON2 000F82                        __end_of_cc_newpin FC28  
                      __end_of_cc_serial FC27                               _displ_code 0900  
                                _PPSLOCK 000EA0                               _displ_note 2712  
                             _displ_sens 1D54                               _displ_time 181C  
                __end_of_CMP1_Initialize 2BB2                           ??_Reset_hopper 001D  
                      __end_of_cc_status FC2E                               _lcd_string 14F0  
                             _dispcursor FC50                               _lcd_writeC 1F08  
                              ?_lcd_init 0000                            ?_Vend_timeset 0000  
                          ?_Vend_settime 0000                                ?_lcd_test 0000  
                              ?_dispense 0000                                ?_mdb_comm 0024  
                              ?_mdb_init 0000                               _dispshleft FC4E  
                             _dispnormal FC51                                ?_mdb_poll 0000  
                        ??_Write_NVstore 0026                               _mdb_unlock 1140  
                      __end_of_chanlinkm FDA1                        __end_of_cashinmsg FF93  
                       ?_TMR5_Initialize 0000                        __end_of_cctalk_on 2CA6  
                   DATAEE_WriteByte@bAdd 001D                                ?_gsm_init 0000  
                              ?_gsm_txAT 0000                                ?_off_sens 0000  
                         displ_hex@value 00B2                       give_change@paycash 002A  
                  __size_of_credit_check 0022                                ?_pay_coin 0000  
                       hopper_pay@change 0029                             _enable_notes 1CDA  
                          ?_note_disable 000B                                  __Hparam 0000  
                         dispense@chanel 00B3                                  __Lparam 0000  
                             ??_Sens_off 00B5                         init_pricestore@i 0021  
             __CFG_RSTOSC$HFINTOSC_64MHZ 000000                        __end_of_creditclr FF4C  
                         mdb_comm@mcount 0024                        __end_of_displ_hex 143C  
                      __end_of_dispfunc1 FC59                        __end_of_dispfunc2 FC58  
                      __end_of_dispfunc3 FC57                                  ___lbdiv 2664  
                      __end_of_lcd_write 2922                        __end_of_fiftyrand FFE3  
                        __size_of___wmul 0026                           mdb_comm@slvadd 0025  
                                ___ltdiv 1E36                        __end_of_mdb_reset 1AD2  
                      __end_of_mdb_noten 24A8                                  ___ltmod 224A  
                      __end_of_mdb_waitr 2C86                         ??_DAC1_SetOutput 001D  
                      __end_of_mdb_waitx 2C8C                                  _cc_poll FC24  
                                _cc_test FC2F                                  _cc_stop FC2A  
                        __size_of_mdb_on 0004                                  _dbcount 00A4  
                       set_price@channel 00BF                                  _channel 0030  
                                __pcinit 241E                                  _chanmsg FF66  
                                _cashint FC15                     __end_of_init_mdbdata 29D4  
                                _cashinv FC19                          __size_of_gsm_on 0004  
                   __size_of_price_check 017C                                  __ramtop 0F00  
                                _chkbyte 0040                               _hopercount 00CE  
                                _enabled FFA7                               _errorflags 00AD  
                                __ptext0 0336                                  __ptext1 0DDC  
                                __ptext2 1EA0                                  __ptext3 2A3E  
                                __ptext4 1A4C                                  __ptext5 2B48  
                                __ptext6 24EA                                  __ptext7 252A  
                                __ptext8 2C58                                  __ptext9 01BA  
                                _credclr FB19                                  _credmem FC1B  
                                _credits FF59                                  _command 00A9  
                                _clrline FF03                                  _dispclr FC54  
                                _dispoff FC4D                                  _mdbdata 0060  
                                _lcdfunc 00B1                                  _lcdline 00B0  
                              _T1CONbits 000FCF                               _hopper_pay 1DC8  
                                _butindb 25AA                                  _dsphome FC52  
                  _OSCILLATOR_Initialize 2B18                                _T2CONbits 000FBD  
                                _mastadd FC31                                  _hopcoin FC09  
                       set_price@buttons 00BE                                  _buttons 0038  
                __end_of_init_pricestore 23D4                                  _inithop FB98  
                                _gsmbyte 00A6                                _T3CONbits 000FC9  
                                _inscoin FE26                        __end_of_gsm_waitx 2C68  
                                _linkmsg FF72                                _CMOUTbits 000F3D  
                      __end_of_read_busy 24EA                                  _second1 FC21  
                              _T4CONbits 000FB7                       _EUSART1_Initialize 2B74  
               ??_PIN_MANAGER_Initialize 001D                                _T2HLTbits 000FBE  
                   __end_of_gsm_transmit 2C0E                    __size_of_displ_credit 0034  
                              _T5CONbits 000FC3                                  _nobytes 00AA  
                  __end_of_find_lowprice 252A                                  _senschk 00A8  
                                _noteerr FED2                    __size_of_displ_lflags 008A  
                                _tenrand FFB1                                  _notenum 004D  
                                _sensmsg FF7E                                  _sensval FC0D  
                                _senspos 0035                                _T4HLTbits 000FB8  
                  __size_of_displ_nendis 0032                                  _pnvcash 0048  
                                _venderr 00A7                                  _timemsg FF18  
                                _servmsg FC59                    __size_of_displ_sflags 00B4  
                         ??_Vend_timeset 00BE                           ??_Vend_settime 002C  
                  __size_of_displ_noteer 002E               __size_of_SYSTEM_Initialize 003A  
                           _credit_check 2A1C                               ??_lcd_init 0025  
                             ??_lcd_test 0024                               ??_dispense 002C  
                             ??_mdb_comm 0025                               ??_mdb_init 002A  
                   end_of_initialization 245C                        __end_of_secondadd FC1F  
                             ??_mdb_poll 0027                                _T2RSTbits 000FC0  
                    __size_of_Sensor_set 00D6                      ?_EUSART1_Initialize 000B  
                    __size_of_Vend_setup 0112                                _T4RSTbits 000FBA  
                             ??_gsm_init 001F                               ??_gsm_txAT 001F  
                             ??_off_sens 002C                            __pdataCOMRAMh 004D  
                      __end_of_note_poll FC44                        __end_of_motimemsg FAEC  
                      __end_of_set_price 07EE                        __end_of_set_notes 0CEA  
                __size_of_Update_Hopcoin 0086                        __end_of_note_type FC43  
                          ?_vend_nosense 0000                        __end_of_price_set 1C5E  
                             _save_notes 29FA                        __end_of_just_busy FC3D  
                             ??_pay_coin 001F                              ?_cctalk_off 000B  
                         ??_note_disable 0027                        __end_of_priceexit FB98  
                      __end_of_nosentime FBE7                        __end_of_sensoffms FB19  
                      __end_of_setimemsg FE26                             ??_Clear_cred 0029  
                      __end_of_vend_init 0EBC                   price_check@chanlinkbit 00B8  
                  __size_of_mdb_security 0020                         ___ltdiv@dividend 001D  
                      __end_of_rom_error FC3C                       _EUSART2_Initialize 2B30  
                      __end_of_vendtimem FDFD                        __end_of_vendsetup FD31  
                      __end_of_vendstore FC19                               _note_reset FC46  
                             _sens_error FC3D                               _note_setup FC45  
                                postinc0 000FEE                                  postinc2 000FDE  
                  __size_of_EUSART1_Read 0012                               _motr_error FC3E  
                  __size_of_mdb_transmit 000E                    __size_of_EUSART2_Read 0012  
                             _just_reset FC39                            Read_NVstore@i 0024  
                             _pricesetm2 FD31                               _sensoffmsg FEB3  
                   ??_EUSART1_Initialize 001D                               _pricestore FC13  
                  __CFG_WDTCPS$WDTCPS_31 000000                      ?_EUSART2_Initialize 0000  
               Init_vendmem@chanlinkbits 0021                             _displ_credit 288A  
                __end_of_Update_coinsout 2090                             _displ_lflags 193A  
                           _displ_nendis 28BE                                _PORTBbits 000F8E  
                             _venderrors FC11                         displ_code@ercode 0026  
                           _displ_sflags 143C                               _vendispmsg FEEE  
                           _displ_noteer 2922                               _settimemsg FB43  
                      displ_sens@dmsgpos 002A                              ?_credit_add 0000  
                     displ_lflags@chanel 002A                              ?_lcd_clockE 0000  
                            ?_lcd_clockH 0000                              ?_lcd_clockL 0000  
                 ??_CMP1_GetOutputStatus 001D                     Vend_timeset@chantime 00C0  
                       ?_disable_channel 0000                         ___ltdiv@quotient 0023  
                  __size_of_Read_NVstore 0034                       __end_of_Clear_cred 1788  
                            ?_displ_code 000B                __size_of_Update_cashaudit 00C4  
                            ?_displ_note 0029                              ?_displ_sens 002A  
                            ?_displ_time 002A                        displ_sens@smsgpos 002B  
                            ?_lcd_string 0024                              ?_lcd_writeC 0000  
                    EUSART1_Write@txData 001D                         ?_CMP1_Initialize 000B  
                       ??_Reset_settings 0029                         __CFG_FEXTOSC$OFF 000000  
               __end_of_DATAEE_WriteByte 26D8                             _mdb_security 2A3E  
                   ??_EUSART2_Initialize 001D                              ?_mdb_unlock 0000  
                   _eusartmdb_Initialize 2B48                    __size_of_Read_Service 0018  
                      displ_time@channel 002A                            ??_get_channel 001D  
                      get_channel@butons 001D                           ??_vend_nosense 0020  
                              _Chan_link 1F6E                             _EUSART1_Read 2BB2  
                    __end_of_cashbox_err FC38                             _mdb_transmit 2BD6  
                           _EUSART2_Read 2BC4                            ??_lcd_dispadd 0021  
                             displ_hex@i 00BD                      __end_of_chanlinkmsg FAB2  
                    set_motortime@chanel 0025                    __size_of_Init_vendmem 00BA  
                   _timer0ReloadVal16bit 00C5                           _TMR0_StopTimer 2C92  
                        __pcstackCOMRAMh 000B                          __pcstackCOMRAMl 0000  
                Update_coinsout@coinsout 0027                               mdb_reset@i 0028  
                          ?_update_vends 0000             __end_of_INTERRUPT_Initialize 2C80  
                          ??_displ_price 002A                     __end_of_Reset_hopper 2664  
                     mdb_transmit@txbyte 001E                               _twentyrand FFE3  
                         __end_of_cc_pay FC2D                           __end_of_cc_pin FC29  
                     price_check@savebut 00B7                           __end_of___wmul 29FA  
                         __end_of_dacmsg FF59                     __size_of_switch_read 0050  
                         __end_of_clrmsg FF9D                           __end_of_dispon FC56  
                         __end_of_mdb_on 2C9E                           __end_of_dispsl FC4C  
                         __end_of_dispsr FC4D                             _Read_NVstore 2822  
                       displ_credit@cash 002A                           __end_of_hopadd FC33  
                 ?_OSCILLATOR_Initialize 0000                           __end_of_gsm_on 2CA2  
                         __end_of_offmsg FFF6                           __end_of_noecho FC24  
                            ?_hopper_pay 0000                           __end_of_senset FBBB  
                __size_of_find_highprice 0040                         ?_init_pricestore 0000  
                    __size_of_cctalk_off 0004                      start_initialization 241E  
                           _Read_Service 2AD0                            ??_give_change 002A  
               __size_of_TMR0_Initialize 002E          __size_of_PIN_MANAGER_Initialize 0088  
                           ?_Hopper_coin 0000                       update_vends@chanel 0024  
                              _Link_chan 0EBC                          _credit_subtract 21A0  
                Update_cashaudit@addcash 0027                    ?_eusartmdb_Initialize 0000  
                  __end_of_EUSART1_Write 2BF2                    __end_of_EUSART2_Write 2C1C  
                           _Init_vendmem 12CC                               ?_Chan_link 0000  
                            ?_save_notes 0000                      DATAEE_ReadByte@bAdd 001D  
               __size_of_PIN_MANAGER_IOC 0006                            Init_vendmem@i 0025  
                 __end_of_TMR0_StopTimer 2C96                      __size_of_credit_add 005A  
                       __CFG_LPBOREN$OFF 000000                      __size_of_lcd_clockE 000E  
                    __size_of_lcd_clockH 0008                      __size_of_lcd_clockL 0008  
               __size_of_TMR1_Initialize 0036                    __size_of_init_mdbdata 002A  
                         ??_update_vends 0021                      __end_of_get_channel 2A98  
                       ??_PMD_Initialize 001D                                 ??___wmul 0021  
                           ??_Sensor_set 002C                      __size_of_displ_code 0106  
                    __end_of_lcd_dispadd 2B00                     __end_of_Vend_timeset 06D6  
                   __end_of_Vend_settime 238A                        __size_of_Sens_off 007C  
                    __size_of_displ_note 0038                      __size_of_displ_sens 0074  
                           ??_Vend_setup 002C                      __size_of_displ_time 0092  
                               ??_mdb_on 001D                              __pdataBANK0 00CE  
                    __size_of_lcd_string 00B4                      __size_of_lcd_writeC 0066  
                               ??_gsm_on 001D                    __size_of_gsm_transmit 000E  
                       ?_Update_coinsout 0000                      __size_of_mdb_unlock 00C8  
                 displ_sflags@senseflags 002B                 __size_of_DAC1_Initialize 000C  
                    __end_of_displ_price 25AA                     __end_of_note_disable 2C4E  
                       dispense@sensmask 00B2                            __pcstackBANK0 00B2  
               __size_of_TMR2_Initialize 001E                      __end_of_dispshright FC50  
                             ?_Link_chan 0000                            butindb@butval 0021  
                              _cc_adpoll FC25                              _cashbox_err FC37  
                         set_motortime@i 0026                                _cc_enable FC2E  
                   __end_of_note_removed FC39                      EUSART2_Write@txData 001D  
                            _chanlinkmsg FA75                                _chan1time FBF5  
                          ??_hopper_test 002A                    credit_subtract@credit 0021  
                   __end_of_note_stacker FC41                                _chan2time FBF3  
                              _chan3time FBF1                                _chan4time FBEF  
                              _chan5time FBED                                _chan6time FBEB  
                              _chan7time FBE9                                _chan8time FBE7  
                              _cc_newpin FC27                     init_mdbdata@initdata 0022  
                              _cc_serial FC26                       __end_of_Sensor_set 106A  
                           _init_mdbdata 29AA                        __size_of_lcd_init 00AC  
                    __end_of_give_change 224A                        __size_of_lcd_test 0016  
                     __end_of_Vend_setup 0900                        __size_of_mdb_comm 00FE  
                      __size_of_dispense 004E                                _cc_status FC2D  
                      __size_of_mdb_init 0068                           _Update_Hopcoin 1B58  
                      __size_of_mdb_poll 0122                                __pnvBANK0 00C5  
               __size_of_TMR0_StartTimer 0004                                _chanlink1 000003  
                              _chanlink2 000004                                _chanlink3 000005  
                              _chanlink4 000006                                _chanlink5 000007  
                              _chanlink6 000008                                _chanlink7 000009  
                              _chanlink8 00000A                                _chanlinkm FD6A  
                        ?_TMR0_StopTimer 000B                                _cashinmsg FF89  
                    __size_of_hopper_pay 006E                        __size_of_gsm_init 002C  
                      __size_of_gsm_txAT 000E                        __size_of_off_sens 00F4  
                              _cctalk_on 2CA2                   _PIN_MANAGER_Initialize 19C4  
                           _gsm_transmit 2C00                        __size_of_pay_coin 008C  
               __size_of_TMR3_Initialize 0036                                __pintcode 0008  
                          __pmediumconst FA74                                __ptext100 24A8  
                              __ptext101 2C68                                 ?___lbdiv 001D  
                              __ptext110 2A98                                __ptext102 2C70  
                              __ptext111 27B6                                __ptext103 2C2A  
                              __ptext120 2B74                                __ptext112 2A5E  
                              __ptext104 224A                                __ptext121 2C38  
                              __ptext113 27EC                                __ptext105 1E36  
                              __ptext122 2B9E                                __ptext114 2950  
                              __ptext106 2A1C                                __ptext115 2AB4  
                              __ptext107 2B00                                __ptext124 2C8C  
                              __ptext116 19C4                                __ptext108 26D8  
                              __ptext117 2B18                                __ptext109 2780  
                              __ptext118 2C78                                __ptext119 2B30  
                       Link_chan@chanbit 00B4                         Link_chan@channel 00B5  
                               ?___ltdiv 001D                                 ?___ltmod 001D  
                 __size_of_set_motortime 0094                         __CFG_PPS1WAY$OFF 000000  
                              _creditclr FF3C                                 _DAC1CON0 000F33  
                               _DAC1CON1 000F34                                _displ_hex 1386  
                              _dispfunc1 FC58                                _dispfunc2 FC57  
                              _dispfunc3 FC56                                _lcd_write 28F0  
                     Hopper_coin@coinval 002C                                _fiftyrand FFDB  
                              _highprice 0034                                _mdb_reset 1A4C  
                              _mdb_noten 2466                                _mdb_waitr 2C80  
                              _mdb_waitx 2C86                                 _BAUD1CON 000F9F  
                               _BAUD2CON 000E9F                     __end_of_vend_nosense 21A0  
                __end_of_credit_subtract 21F6                                 ?_butindb 0000  
                  __end_of_enter_service 16F2                      __size_of_save_notes 0022  
               __size_of_TMR0_WriteTimer 000A                           __size_of_Audit 01BA  
                              _mdbtxbyte 00AC                 __size_of_TMR4_Initialize 001C  
                       _Update_cashaudit 1208                           _acept_disabled FC36  
                 ??_eusartmdb_Initialize 001D                           __size_of_butin 004A  
                              _gsm_waitx 2C60                                 _T2CLKCON 000FBF  
               __size_of_DATAEE_ReadByte 0018                                _read_busy 24A8  
                               _T4CLKCON 000FB9                                _errormask 0031  
                   _INTERRUPT_Initialize 2C78                   __end_of_Update_Hopcoin 1BDE  
                       ___ltmod@dividend 001D                    lcd_dispadd@lcdaddress 0021  
                      ??_TMR0_Initialize 001D                           ___wmul@product 0021  
                  __end_of_Write_NVstore 2780                                 _LATAbits 000F83  
                            _get_channel 2A7C                                 _LATCbits 000F85  
                            ??_Chan_link 00B7                                _secondadd FC1D  
                  lcd_dispadd@lcdatasave 0022                             ??_cctalk_off 001D  
                               _IPR0bits 000EBA                                 _PIE0bits 000EC2  
                          _note_features FC3F                              _lcd_dispadd 2AE8  
                 __size_of_vend_dispense 0086                      __CFG_BORV$VBOR_2P45 000000  
                          _theft_attempt FC33                               ?_cctalk_on 0000  
                  __size_of_Reset_hopper 003C                       __end_of_cc_countrq FC2C  
                    __end_of_hopper_test 2B9E                                 _PIR0bits 000ECA  
                        ___ltdiv@divisor 0020                                 _PIR3bits 000ECD  
                               _PIR4bits 000ECE                                 _PIR7bits 000ED1  
                        ___ltdiv@counter 0026                                _note_poll FC43  
                              _motimemsg FAB2                                _set_price 06D6  
                              _set_notes 0BF8                 __size_of_TMR5_Initialize 0036  
                              _note_type FC42                                _price_set 1BDE  
                              _just_busy FC3C                                _priceexit FB82  
                              _nosentime FBE5                                _sensoffms FAEC  
                          ??_price_check 00B4                                _pricevend 007F  
                              _setimemsg FDFD                                _vend_init 0DDC  
                              _sensorval 0036                                _rom_error FC3B  
                      ??_PIN_MANAGER_IOC 000B                              _displ_price 256A  
                              _vendprice 0037                                _vendtimem FDD4  
                              _vendsetup FCEE                  __size_of_displ_nochange 0034  
                              _vendstore FC17                            _note_rejected FC34  
                      ??_TMR1_Initialize 001D                               ?_displ_hex 0027  
                     Link_chan@linkflags 00B6                               ?_lcd_write 0000  
                      ___wmul@multiplier 001D                            _note_security FC44  
                    __end_of_hundredrand FFDB                               ?_mdb_reset 0000  
                             ?_mdb_noten 0000                              _dispshright FC4F  
                             ?_mdb_waitr 0000                               ?_mdb_waitx 000B  
                         _find_highprice 252A                             ??_credit_add 0028  
                           ??_lcd_clockE 001D                             ??_lcd_clockH 001D  
                           ??_lcd_clockL 001D                   Write_NVstore@storesize 0025  
                              mdb_comm@i 0026                   __end_of_acept_disabled FC37  
                              mdb_init@i 002C                       __end_of_cctalk_off 2CAA  
                  DATAEE_WriteByte@bData 001F                             ??_displ_code 0024  
                            _give_change 21F6                                mdb_poll@i 0027  
                        displ_hex@hexnum 0027                            ?_Clear_Totals 000B  
                           ??_displ_note 002B                             ??_displ_sens 002B  
                           ??_displ_time 002B                              ??_Link_chan 00B2  
                   __end_of_update_vends 20EC                             ??_lcd_string 0027  
                           ??_lcd_writeC 0023                               ?_gsm_waitx 000B  
                             ?_read_busy 0000                            _set_motortime 1788  
                  ?_INTERRUPT_Initialize 0000                        ??_DAC1_Initialize 001D  
                           _Reset_hopper 2628                             ??_mdb_unlock 001F  
                      ?_DATAEE_WriteByte 001D                          ?_Update_Hopcoin 002A  
                   __size_of_Hopper_coin 00D6                        ??_TMR2_Initialize 001D  
                     ??_DATAEE_WriteByte 0020                      lcd_string@lcdstring 0024  
                  __size_of_Vend_timeset 011E                    __size_of_Vend_settime 004E  
                               __Hrparam 0000                         Sensor_set@dacpos 002C  
                               _Sens_off 1C5E                                 __Lrparam 0000  
                     __end_of_credit_add 2146                               ?_set_price 0000  
                     __CFG_BOREN$SBORDIS 000000                               ?_set_notes 0000  
                     __end_of_lcd_clockE 2C38                               ?_price_set 0000  
                     __end_of_lcd_clockH 2C78                       __end_of_lcd_clockL 2C70  
                 __size_of_find_lowprice 0040                               ?_vend_init 0000  
                ??_OSCILLATOR_Initialize 001D                       Read_Service@senval 001D  
                     __end_of_jammed_err FC3B                        ??_TMR0_StartTimer 001D  
                     __end_of_displ_code 0A06                         __size_of___lbdiv 003A  
                     __end_of_displ_note 274A                       __end_of_displ_sens 1DC8  
                     __end_of_displ_time 18AE              __size_of_EUSART1_Initialize 0016  
                       __size_of___ltdiv 006A                    __size_of_note_disable 000A  
                       __size_of___ltmod 0054                       __end_of_lcd_string 15A4  
                     __end_of_dispcursor FC51                       __end_of_lcd_writeC 1F6E  
                 __end_of_find_highprice 256A                           _invalid_escrow FC35  
                    __end_of_note_escrow FC42                       __end_of_dispshleft FC4F  
                     __end_of_dispnormal FC52                        ??_TMR3_Initialize 001D  
                     __end_of_mdb_unlock 1208                             ??_hopper_pay 0028  
                               _cc_level FC29                  Update_Hopcoin@direction 002A  
                    __end_of_price_check 0336                                 _cc_reset FC30  
                          _vend_dispense 1AD2                         ?_credit_subtract 000B  
                            _dspposition 0043                               _T0CON0bits 000FD5  
                       __size_of_butindb 0040                                 _chanmask 0032  
                               _cctflags 004E                                 _cashoutv FC0B  
                         ??_Clear_Totals 0021                  __size_of_DAC1_SetOutput 0008  
          __size_of_CMP1_GetOutputStatus 000E                                 __ptext10 2C44  
                               __ptext11 2466                                 __ptext20 1788  
                               __ptext12 21F6                      __end_of_pricesetmsg FF3C  
                               __ptext21 29D4                                 __ptext13 21A0  
                             _T1GCONbits 000FD0                                 __ptext30 2BD6  
                               __ptext22 2C4E                                 __ptext14 20EC  
                               __ptext31 2C86                                 __ptext23 2C92  
                               __ptext15 1208                                 __ptext40 2BF2  
                               __ptext32 2BE4                                 __ptext24 2C96  
                               __ptext16 2664                                 __ptext41 2C00  
                               __ptext33 2C9A                                 __ptext25 1FD0  
                               __ptext17 22EE                                 __ptext50 28BE  
                               __ptext42 2C60                                 __ptext34 29AA  
                               __ptext26 2090                                 __ptext18 2146  
                               __ptext51 2712                                 __ptext43 2C0E  
                               __ptext35 238A                                 __ptext27 0496  
                               __ptext19 1AD2                                 __ptext60 2628  
                               __ptext52 1BDE                                 __ptext44 2C9E  
                               __ptext36 2BB2                                 __ptext28 0A06  
                               __ptext61 2CA2                                 __ptext53 06D6  
                               __ptext45 2BC4                                 __ptext37 15A4  
                               __ptext29 2C80                                 __ptext70 0B04  
                               __ptext62 2CA6                                 __ptext54 256A  
                               __ptext46 1650                                 __ptext38 2B5E  
                               __ptext71 143C                                 __ptext63 2030  
                               __ptext55 1140                                 __ptext47 0BF8  
                               __ptext39 297E                                 __ptext80 1D54  
                               __ptext72 0CEA                                 __ptext64 274A  
                               __ptext56 2B8A                                 __ptext48 1CDA  
                               __ptext81 106A                                 __ptext73 12CC  
                               __ptext65 07EE                                 __ptext57 1DC8  
                               __ptext49 29FA                                 __ptext90 2C1C  
                               __ptext82 25AA                                 __ptext74 25EA  
                               __ptext66 233C                                 __ptext58 18AE  
                               __ptext91 2922                                 __ptext83 1B58  
                               __ptext75 1F6E                                 __ptext67 05B8  
                               __ptext59 229E                                 __ptext92 0900  
                               __ptext84 16F2                                 __ptext76 0EBC  
                               __ptext68 181C                                 __ptext93 2856  
                               __ptext85 269E                                 __ptext77 193A  
                               __ptext69 1C5E                                 __ptext94 288A  
                               __ptext86 0000                                 __ptext78 2AD0  
                               __ptext95 14F0                                 __ptext87 2A7C  
                               __ptext79 0F94                                 __ptext96 1386  
                               __ptext88 23D4                                 __ptext97 1F08  
                               __ptext89 2822                                 __ptext98 2AE8  
                               __ptext99 28F0                                 _disabled FF9D  
                         ?_set_motortime 0000                      __end_of_sensorflags FBF9  
                               _auditmsg FBC9                                 _dispaddr FC53  
                               _lcd_init 15A4                                 _lcd_test 2B5E  
                               _dispense 22EE                                 _mdb_comm 0A06  
                               _mdb_init 1EA0                             _Vend_timeset 05B8  
                           _Vend_settime 233C                                 _mdb_poll 0496  
                               _mdbflags 003F                  TMR0_WriteTimer@timerVal 001D  
                             _T3GCONbits 000FCA              DATAEE_WriteByte@GIEBitValue 0020  
                      ??_TMR0_WriteTimer 001F              __size_of_EUSART2_Initialize 0018  
                            _hopper_test 2B8A                                 _emptymsg FFBA  
                  __end_of_chan1linkbits FC09                                 _gsm_init 297E  
                      ??_TMR4_Initialize 001D                                 _gsm_txAT 2BF2  
                               _off_sens 0B04                            __size_of_main 0160  
                             _T5GCONbits 000FC4                 __size_of_disable_channel 0060  
                               _hoperror FBE3                             ??_save_notes 0021  
                               _hoppcoin FDA1                                 _initnote FE4D  
                  __end_of_chan2linkbits FC07                                 _hpserial 009A  
                               _pay_coin 18AE                                 _nochange FE72  
                        ___ltmod@divisor 0020                        ??_DATAEE_ReadByte 001F  
                   __CFG_WDTCWS$WDTCWS_7 000000                    __end_of_chan3linkbits FC05  
               __size_of_CMP1_Initialize 0014                                 _second_5 FC1F  
                        ___ltmod@counter 0023                              ??_cctalk_on 001D  
                           _note_disable 2C44                    __end_of_chan4linkbits FC03  
                     __end_of_hopper_pay 1E36                               _RC1STAbits 000F9D  
                               _vcashout 00A0                                 _notebits FC0F  
                             _RC2STAbits 000E9D                                 _notebyte 0041  
                               _pricemsg FBD6                    __end_of_chan5linkbits FC01  
                               _lowprice 0033                                 _notetest FBBB  
                          ??_switch_read 001D                                 _venflags 002D  
                               _setnotes FCA9                            init_mdbdata@i 0023  
                               _vendtest FB69                              _hundredrand FFD3  
                  __end_of_chan6linkbits FBFF                                 int$flags 004F  
                 __end_of_invalid_escrow FC36                    __size_of_vend_nosense 005A  
                               _outcoins 003B                    __end_of_chan7linkbits FBFD  
                           _note_removed FC38                    Write_NVstore@storeadd 0021  
                  Read_NVstore@storesize 0023                    Write_NVstore@storemem 0023  
                               _totalmsg FFC3                             _note_stacker FC40  
                  __end_of_chan8linkbits FBFB                          ?_find_highprice 0000  
                            ??_displ_hex 002A                              ??_lcd_write 001F  
                      ??_TMR5_Initialize 001D                              ??_mdb_reset 0027  
                            ??_mdb_noten 0027                           ?_vend_dispense 0000  
                            ??_mdb_waitr 001D                              ??_mdb_waitx 001D  
                             _INTCONbits 000FF2                              _NVMCON1bits 000F81  
                     __end_of_save_notes 2A1C                             price_check@i 00B9  
                 ??_INTERRUPT_Initialize 001D                            _find_lowprice 24EA  
                            ??_gsm_waitx 001D                              ??_read_busy 001D  
                    vend_dispense@chanel 002B                       __end_of_note_reset FC47  
                         _twohundredrand FFCB                       __end_of_sens_error FC3E  
                     __end_of_note_setup FC46                                 intlevel2 0000  
                       ??_TMR0_StopTimer 001D                       __end_of_motr_error FC3F  
               __size_of_init_pricestore 004A                       __end_of_just_reset FC3A  
                     __end_of_pricesetm2 FD6A                       __end_of_sensoffmsg FED2  
                ?_PIN_MANAGER_Initialize 000B                       __end_of_pricestore FC15  
                      __CFG_CLKOUTEN$OFF 000000                            ?_enable_notes 0000  
                           _vend_nosense 2146                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors FC13                       __end_of_vendispmsg FF03  
                    __end_of_totalvendsm FFF2                       __end_of_settimemsg FB69  
                __size_of_Reset_settings 00F2                      displ_sflags@chanbit 002A  
                            _note_escrow FC41                              ??_set_price 002B  
                            ??_set_notes 002C                              ??_price_set 002D  
               __end_of_Update_cashaudit 12CC                     Read_NVstore@storeadd 001F  
                            ??_vend_init 002D                     Read_NVstore@storemem 0021  
                            _noteen_byte 003D                              _price_check 01BA  
                         _displ_nochange 2856                        lcd_string@lcdline 0026  
                 __size_of_EUSART1_Write 000E                     displ_note@notestring 0029  
                 __size_of_EUSART2_Write 000E                               Audit@vends 002C  
 __end_of_INTERRUPT_InterruptManagerHigh 00AA  __size_of_INTERRUPT_InterruptManagerHigh 00A2  
         _INTERRUPT_InterruptManagerHigh 0008                               _RX1PPSbits 000EB5  
                            _pricesetmsg FF2A                      __end_of_switch_read 22EE  
                             _RX2PPSbits 000E8D                    __size_of_update_vends 005C  
                            _sensorflags FBF7                        lcd_test@character 0024  
                        _TMR0_Initialize 2950                       gsm_transmit@txbyte 001E  
                        ??_set_motortime 0023                       displ_sflags@chanel 0029  
                         ?_find_lowprice 0000                     Init_vendmem@chanlink 0023  
                 __end_of_twohundredrand FFD3                 __size_of_Update_coinsout 0060  
                          ?_credit_check 0000                               _TX1STAbits 000F9E  
                             _TX2STAbits 000E9E           __end_of_PIN_MANAGER_Initialize 1A4C  
                    enable_notes@notenum 002B                             ?_get_channel 0000  
                     __end_of_twentyrand FFEB                          _PIN_MANAGER_IOC 2C8C  
                         ??_enable_notes 002B                             ?_lcd_dispadd 0000  
                        _TMR1_Initialize 27EC                     displ_lflags@linkflgs 0029  
