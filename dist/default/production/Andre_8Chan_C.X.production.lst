

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Sep 28 14:18:23 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataCOMRAMh,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	text117,global,reloc=2,class=CODE,delta=1
   136                           	psect	text118,global,reloc=2,class=CODE,delta=1
   137                           	psect	text119,global,reloc=2,class=CODE,delta=1
   138                           	psect	text120,global,reloc=2,class=CODE,delta=1
   139                           	psect	text121,global,reloc=2,class=CODE,delta=1
   140                           	psect	text122,global,reloc=2,class=CODE,delta=1
   141                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   142                           	psect	text124,global,reloc=2,class=CODE,delta=1
   143                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   144                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   145                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   146                           	dabs	1,0x3,1,_chanlink1
   147                           	dabs	1,0xA,1,_chanlink8
   148                           	dabs	1,0x9,1,_chanlink7
   149                           	dabs	1,0x8,1,_chanlink6
   150                           	dabs	1,0x7,1,_chanlink5
   151                           	dabs	1,0x6,1,_chanlink4
   152                           	dabs	1,0x5,1,_chanlink3
   153                           	dabs	1,0x4,1,_chanlink2
   154  0000                     
   155                           ; Version 1.45
   156                           ; Generated 16/11/2017 GMT
   157                           ; 
   158                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   159                           ; All rights reserved.
   160                           ; 
   161                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   162                           ; 
   163                           ; Redistribution and use in source and binary forms, with or without modification, are
   164                           ; permitted provided that the following conditions are met:
   165                           ; 
   166                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   167                           ;        conditions and the following disclaimer.
   168                           ; 
   169                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   170                           ;        of conditions and the following disclaimer in the documentation and/or other
   171                           ;        materials provided with the distribution.
   172                           ; 
   173                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   174                           ;        software without specific prior written permission.
   175                           ; 
   176                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   177                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   178                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   179                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   180                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   181                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   182                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   183                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   184                           ; 
   185                           ; 
   186                           ; Code-generator required, PIC18F47K40 Definitions
   187                           ; 
   188                           ; SFR Addresses
   189  0000                     
   190                           	psect	idataBANK0
   191  012CAA                     __pidataBANK0:
   192                           	opt stack 0
   193                           
   194                           ;initializer for _hopercount
   195  012CAA  03                 	db	3
   196                           
   197                           	psect	idataCOMRAMh
   198  012CAB                     __pidataCOMRAMh:
   199                           	opt stack 0
   200                           
   201                           ;initializer for _notenum
   202  012CAB  FF                 	db	255
   203                           
   204                           	psect	mediumconst
   205  00FA74                     __pmediumconst:
   206                           	opt stack 0
   207  00FA74  00                 	db	0
   208  00FA75                     _chanlinkmsg:
   209                           	opt stack 0
   210  00FA75  50                 	db	80
   211  00FA76  75                 	db	117
   212  00FA77  73                 	db	115
   213  00FA78  68                 	db	104
   214  00FA79  20                 	db	32
   215  00FA7A  42                 	db	66
   216  00FA7B  75                 	db	117
   217  00FA7C  74                 	db	116
   218  00FA7D  74                 	db	116
   219  00FA7E  6F                 	db	111
   220  00FA7F  6E                 	db	110
   221  00FA80  20                 	db	32
   222  00FA81  74                 	db	116
   223  00FA82  6F                 	db	111
   224  00FA83  20                 	db	32
   225  00FA84  4C                 	db	76
   226  00FA85  69                 	db	105
   227  00FA86  6E                 	db	110
   228  00FA87  6B                 	db	107
   229  00FA88  20                 	db	32
   230  00FA89  50                 	db	80
   231  00FA8A  75                 	db	117
   232  00FA8B  73                 	db	115
   233  00FA8C  68                 	db	104
   234  00FA8D  20                 	db	32
   235  00FA8E  61                 	db	97
   236  00FA8F  67                 	db	103
   237  00FA90  61                 	db	97
   238  00FA91  69                 	db	105
   239  00FA92  6E                 	db	110
   240  00FA93  20                 	db	32
   241  00FA94  74                 	db	116
   242  00FA95  6F                 	db	111
   243  00FA96  20                 	db	32
   244  00FA97  55                 	db	85
   245  00FA98  6E                 	db	110
   246  00FA99  6C                 	db	108
   247  00FA9A  69                 	db	105
   248  00FA9B  6E                 	db	110
   249  00FA9C  6B                 	db	107
   250  00FA9D  50                 	db	80
   251  00FA9E  75                 	db	117
   252  00FA9F  73                 	db	115
   253  00FAA0  68                 	db	104
   254  00FAA1  20                 	db	32
   255  00FAA2  53                 	db	83
   256  00FAA3  65                 	db	101
   257  00FAA4  72                 	db	114
   258  00FAA5  76                 	db	118
   259  00FAA6  69                 	db	105
   260  00FAA7  63                 	db	99
   261  00FAA8  65                 	db	101
   262  00FAA9  20                 	db	32
   263  00FAAA  74                 	db	116
   264  00FAAB  6F                 	db	111
   265  00FAAC  20                 	db	32
   266  00FAAD  45                 	db	69
   267  00FAAE  78                 	db	120
   268  00FAAF  69                 	db	105
   269  00FAB0  74                 	db	116
   270  00FAB1  00                 	db	0
   271  00FAB2                     __end_of_chanlinkmsg:
   272                           	opt stack 0
   273  00FAB2                     _motimemsg:
   274                           	opt stack 0
   275  00FAB2  20                 	db	32
   276  00FAB3  50                 	db	80
   277  00FAB4  72                 	db	114
   278  00FAB5  65                 	db	101
   279  00FAB6  73                 	db	115
   280  00FAB7  73                 	db	115
   281  00FAB8  20                 	db	32
   282  00FAB9  43                 	db	67
   283  00FABA  68                 	db	104
   284  00FABB  61                 	db	97
   285  00FABC  6E                 	db	110
   286  00FABD  6E                 	db	110
   287  00FABE  65                 	db	101
   288  00FABF  6C                 	db	108
   289  00FAC0  20                 	db	32
   290  00FAC1  56                 	db	86
   291  00FAC2  65                 	db	101
   292  00FAC3  6E                 	db	110
   293  00FAC4  64                 	db	100
   294  00FAC5  20                 	db	32
   295  00FAC6  42                 	db	66
   296  00FAC7  75                 	db	117
   297  00FAC8  74                 	db	116
   298  00FAC9  74                 	db	116
   299  00FACA  6F                 	db	111
   300  00FACB  6E                 	db	110
   301  00FACC  20                 	db	32
   302  00FACD  6F                 	db	111
   303  00FACE  72                 	db	114
   304  00FACF  20                 	db	32
   305  00FAD0  50                 	db	80
   306  00FAD1  72                 	db	114
   307  00FAD2  65                 	db	101
   308  00FAD3  73                 	db	115
   309  00FAD4  73                 	db	115
   310  00FAD5  20                 	db	32
   311  00FAD6  20                 	db	32
   312  00FAD7  20                 	db	32
   313  00FAD8  20                 	db	32
   314  00FAD9  20                 	db	32
   315  00FADA  20                 	db	32
   316  00FADB  20                 	db	32
   317  00FADC  53                 	db	83
   318  00FADD  65                 	db	101
   319  00FADE  72                 	db	114
   320  00FADF  76                 	db	118
   321  00FAE0  69                 	db	105
   322  00FAE1  63                 	db	99
   323  00FAE2  65                 	db	101
   324  00FAE3  20                 	db	32
   325  00FAE4  74                 	db	116
   326  00FAE5  6F                 	db	111
   327  00FAE6  20                 	db	32
   328  00FAE7  45                 	db	69
   329  00FAE8  78                 	db	120
   330  00FAE9  69                 	db	105
   331  00FAEA  74                 	db	116
   332  00FAEB  00                 	db	0
   333  00FAEC                     __end_of_motimemsg:
   334                           	opt stack 0
   335  00FAEC                     _sensoffms:
   336                           	opt stack 0
   337  00FAEC  48                 	db	72
   338  00FAED  6F                 	db	111
   339  00FAEE  6C                 	db	108
   340  00FAEF  64                 	db	100
   341  00FAF0  20                 	db	32
   342  00FAF1  63                 	db	99
   343  00FAF2  68                 	db	104
   344  00FAF3  61                 	db	97
   345  00FAF4  6E                 	db	110
   346  00FAF5  6E                 	db	110
   347  00FAF6  65                 	db	101
   348  00FAF7  6C                 	db	108
   349  00FAF8  20                 	db	32
   350  00FAF9  62                 	db	98
   351  00FAFA  75                 	db	117
   352  00FAFB  74                 	db	116
   353  00FAFC  74                 	db	116
   354  00FAFD  6F                 	db	111
   355  00FAFE  6E                 	db	110
   356  00FAFF  20                 	db	32
   357  00FB00  6F                 	db	111
   358  00FB01  72                 	db	114
   359  00FB02  20                 	db	32
   360  00FB03  50                 	db	80
   361  00FB04  75                 	db	117
   362  00FB05  73                 	db	115
   363  00FB06  68                 	db	104
   364  00FB07  20                 	db	32
   365  00FB08  73                 	db	115
   366  00FB09  65                 	db	101
   367  00FB0A  72                 	db	114
   368  00FB0B  76                 	db	118
   369  00FB0C  69                 	db	105
   370  00FB0D  63                 	db	99
   371  00FB0E  65                 	db	101
   372  00FB0F  20                 	db	32
   373  00FB10  74                 	db	116
   374  00FB11  6F                 	db	111
   375  00FB12  20                 	db	32
   376  00FB13  20                 	db	32
   377  00FB14  65                 	db	101
   378  00FB15  78                 	db	120
   379  00FB16  69                 	db	105
   380  00FB17  74                 	db	116
   381  00FB18  00                 	db	0
   382  00FB19                     __end_of_sensoffms:
   383                           	opt stack 0
   384  00FB19                     _credclr:
   385                           	opt stack 0
   386  00FB19  50                 	db	80
   387  00FB1A  75                 	db	117
   388  00FB1B  73                 	db	115
   389  00FB1C  68                 	db	104
   390  00FB1D  20                 	db	32
   391  00FB1E  62                 	db	98
   392  00FB1F  75                 	db	117
   393  00FB20  74                 	db	116
   394  00FB21  74                 	db	116
   395  00FB22  6F                 	db	111
   396  00FB23  6E                 	db	110
   397  00FB24  20                 	db	32
   398  00FB25  31                 	db	49
   399  00FB26  20                 	db	32
   400  00FB27  74                 	db	116
   401  00FB28  6F                 	db	111
   402  00FB29  20                 	db	32
   403  00FB2A  63                 	db	99
   404  00FB2B  6C                 	db	108
   405  00FB2C  65                 	db	101
   406  00FB2D  61                 	db	97
   407  00FB2E  72                 	db	114
   408  00FB2F  20                 	db	32
   409  00FB30  63                 	db	99
   410  00FB31  72                 	db	114
   411  00FB32  65                 	db	101
   412  00FB33  64                 	db	100
   413  00FB34  69                 	db	105
   414  00FB35  74                 	db	116
   415  00FB36  73                 	db	115
   416  00FB37  20                 	db	32
   417  00FB38  20                 	db	32
   418  00FB39  20                 	db	32
   419  00FB3A  61                 	db	97
   420  00FB3B  6E                 	db	110
   421  00FB3C  64                 	db	100
   422  00FB3D  20                 	db	32
   423  00FB3E  65                 	db	101
   424  00FB3F  78                 	db	120
   425  00FB40  69                 	db	105
   426  00FB41  74                 	db	116
   427  00FB42  00                 	db	0
   428  00FB43                     __end_of_credclr:
   429                           	opt stack 0
   430  00FB43                     _settimemsg:
   431                           	opt stack 0
   432  00FB43  50                 	db	80
   433  00FB44  72                 	db	114
   434  00FB45  65                 	db	101
   435  00FB46  73                 	db	115
   436  00FB47  73                 	db	115
   437  00FB48  20                 	db	32
   438  00FB49  31                 	db	49
   439  00FB4A  20                 	db	32
   440  00FB4B  3D                 	db	61
   441  00FB4C  20                 	db	32
   442  00FB4D  2B                 	db	43
   443  00FB4E  20                 	db	32
   444  00FB4F  6F                 	db	111
   445  00FB50  72                 	db	114
   446  00FB51  20                 	db	32
   447  00FB52  32                 	db	50
   448  00FB53  20                 	db	32
   449  00FB54  3D                 	db	61
   450  00FB55  20                 	db	32
   451  00FB56  2D                 	db	45
   452  00FB57  20                 	db	32
   453  00FB58  20                 	db	32
   454  00FB59  50                 	db	80
   455  00FB5A  72                 	db	114
   456  00FB5B  65                 	db	101
   457  00FB5C  73                 	db	115
   458  00FB5D  73                 	db	115
   459  00FB5E  20                 	db	32
   460  00FB5F  38                 	db	56
   461  00FB60  20                 	db	32
   462  00FB61  74                 	db	116
   463  00FB62  6F                 	db	111
   464  00FB63  20                 	db	32
   465  00FB64  45                 	db	69
   466  00FB65  78                 	db	120
   467  00FB66  69                 	db	105
   468  00FB67  74                 	db	116
   469  00FB68  00                 	db	0
   470  00FB69                     __end_of_settimemsg:
   471                           	opt stack 0
   472  00FB69                     _vendtest:
   473                           	opt stack 0
   474  00FB69  20                 	db	32
   475  00FB6A  50                 	db	80
   476  00FB6B  75                 	db	117
   477  00FB6C  73                 	db	115
   478  00FB6D  68                 	db	104
   479  00FB6E  20                 	db	32
   480  00FB6F  62                 	db	98
   481  00FB70  75                 	db	117
   482  00FB71  74                 	db	116
   483  00FB72  74                 	db	116
   484  00FB73  6F                 	db	111
   485  00FB74  6E                 	db	110
   486  00FB75  20                 	db	32
   487  00FB76  74                 	db	116
   488  00FB77  6F                 	db	111
   489  00FB78  20                 	db	32
   490  00FB79  20                 	db	32
   491  00FB7A  20                 	db	32
   492  00FB7B  20                 	db	32
   493  00FB7C  20                 	db	32
   494  00FB7D  76                 	db	118
   495  00FB7E  65                 	db	101
   496  00FB7F  6E                 	db	110
   497  00FB80  64                 	db	100
   498  00FB81  00                 	db	0
   499  00FB82                     __end_of_vendtest:
   500                           	opt stack 0
   501  00FB82                     _priceexit:
   502                           	opt stack 0
   503  00FB82  50                 	db	80
   504  00FB83  72                 	db	114
   505  00FB84  65                 	db	101
   506  00FB85  73                 	db	115
   507  00FB86  73                 	db	115
   508  00FB87  20                 	db	32
   509  00FB88  73                 	db	115
   510  00FB89  65                 	db	101
   511  00FB8A  72                 	db	114
   512  00FB8B  76                 	db	118
   513  00FB8C  69                 	db	105
   514  00FB8D  63                 	db	99
   515  00FB8E  65                 	db	101
   516  00FB8F  20                 	db	32
   517  00FB90  74                 	db	116
   518  00FB91  6F                 	db	111
   519  00FB92  20                 	db	32
   520  00FB93  65                 	db	101
   521  00FB94  78                 	db	120
   522  00FB95  69                 	db	105
   523  00FB96  74                 	db	116
   524  00FB97  00                 	db	0
   525  00FB98                     __end_of_priceexit:
   526                           	opt stack 0
   527  00FB98                     _inithop:
   528                           	opt stack 0
   529  00FB98  20                 	db	32
   530  00FB99  20                 	db	32
   531  00FB9A  49                 	db	73
   532  00FB9B  6E                 	db	110
   533  00FB9C  69                 	db	105
   534  00FB9D  74                 	db	116
   535  00FB9E  69                 	db	105
   536  00FB9F  61                 	db	97
   537  00FBA0  6C                 	db	108
   538  00FBA1  69                 	db	105
   539  00FBA2  7A                 	db	122
   540  00FBA3  65                 	db	101
   541  00FBA4  20                 	db	32
   542  00FBA5  48                 	db	72
   543  00FBA6  6F                 	db	111
   544  00FBA7  70                 	db	112
   545  00FBA8  70                 	db	112
   546  00FBA9  65                 	db	101
   547  00FBAA  72                 	db	114
   548  00FBAB  00                 	db	0
   549  00FBAC                     __end_of_inithop:
   550                           	opt stack 0
   551  00FBAC                     _senset:
   552                           	opt stack 0
   553  00FBAC  20                 	db	32
   554  00FBAD  20                 	db	32
   555  00FBAE  53                 	db	83
   556  00FBAF  65                 	db	101
   557  00FBB0  74                 	db	116
   558  00FBB1  75                 	db	117
   559  00FBB2  70                 	db	112
   560  00FBB3  20                 	db	32
   561  00FBB4  53                 	db	83
   562  00FBB5  65                 	db	101
   563  00FBB6  6E                 	db	110
   564  00FBB7  73                 	db	115
   565  00FBB8  6F                 	db	111
   566  00FBB9  72                 	db	114
   567  00FBBA  00                 	db	0
   568  00FBBB                     __end_of_senset:
   569                           	opt stack 0
   570  00FBBB                     _notetest:
   571                           	opt stack 0
   572  00FBBB  20                 	db	32
   573  00FBBC  20                 	db	32
   574  00FBBD  49                 	db	73
   575  00FBBE  6E                 	db	110
   576  00FBBF  73                 	db	115
   577  00FBC0  65                 	db	101
   578  00FBC1  72                 	db	114
   579  00FBC2  74                 	db	116
   580  00FBC3  20                 	db	32
   581  00FBC4  4E                 	db	78
   582  00FBC5  6F                 	db	111
   583  00FBC6  74                 	db	116
   584  00FBC7  65                 	db	101
   585  00FBC8  00                 	db	0
   586  00FBC9                     __end_of_notetest:
   587                           	opt stack 0
   588  00FBC9                     _auditmsg:
   589                           	opt stack 0
   590  00FBC9  20                 	db	32
   591  00FBCA  20                 	db	32
   592  00FBCB  41                 	db	65
   593  00FBCC  75                 	db	117
   594  00FBCD  64                 	db	100
   595  00FBCE  69                 	db	105
   596  00FBCF  74                 	db	116
   597  00FBD0  20                 	db	32
   598  00FBD1  4D                 	db	77
   599  00FBD2  6F                 	db	111
   600  00FBD3  64                 	db	100
   601  00FBD4  65                 	db	101
   602  00FBD5  00                 	db	0
   603  00FBD6                     __end_of_auditmsg:
   604                           	opt stack 0
   605  00FBD6                     _pricemsg:
   606                           	opt stack 0
   607  00FBD6  50                 	db	80
   608  00FBD7  72                 	db	114
   609  00FBD8  69                 	db	105
   610  00FBD9  63                 	db	99
   611  00FBDA  65                 	db	101
   612  00FBDB  20                 	db	32
   613  00FBDC  52                 	db	82
   614  00FBDD  00                 	db	0
   615  00FBDE                     __end_of_pricemsg:
   616                           	opt stack 0
   617  00FBDE                     _exit:
   618                           	opt stack 0
   619  00FBDE  45                 	db	69
   620  00FBDF  78                 	db	120
   621  00FBE0  69                 	db	105
   622  00FBE1  74                 	db	116
   623  00FBE2  00                 	db	0
   624  00FBE3                     __end_of_exit:
   625                           	opt stack 0
   626  00FBE3                     _hoperror:
   627                           	opt stack 0
   628  00FBE3  002F               	dw	47
   629  00FBE5                     __end_of_hoperror:
   630                           	opt stack 0
   631  00FBE5                     _nosentime:
   632                           	opt stack 0
   633  00FBE5  002E               	dw	46
   634  00FBE7                     __end_of_nosentime:
   635                           	opt stack 0
   636  00FBE7                     _chan8time:
   637                           	opt stack 0
   638  00FBE7  002D               	dw	45
   639  00FBE9                     __end_of_chan8time:
   640                           	opt stack 0
   641  00FBE9                     _chan7time:
   642                           	opt stack 0
   643  00FBE9  002C               	dw	44
   644  00FBEB                     __end_of_chan7time:
   645                           	opt stack 0
   646  00FBEB                     _chan6time:
   647                           	opt stack 0
   648  00FBEB  002B               	dw	43
   649  00FBED                     __end_of_chan6time:
   650                           	opt stack 0
   651  00FBED                     _chan5time:
   652                           	opt stack 0
   653  00FBED  002A               	dw	42
   654  00FBEF                     __end_of_chan5time:
   655                           	opt stack 0
   656  00FBEF                     _chan4time:
   657                           	opt stack 0
   658  00FBEF  0029               	dw	41
   659  00FBF1                     __end_of_chan4time:
   660                           	opt stack 0
   661  00FBF1                     _chan3time:
   662                           	opt stack 0
   663  00FBF1  0028               	dw	40
   664  00FBF3                     __end_of_chan3time:
   665                           	opt stack 0
   666  00FBF3                     _chan2time:
   667                           	opt stack 0
   668  00FBF3  0027               	dw	39
   669  00FBF5                     __end_of_chan2time:
   670                           	opt stack 0
   671  00FBF5                     _chan1time:
   672                           	opt stack 0
   673  00FBF5  0026               	dw	38
   674  00FBF7                     __end_of_chan1time:
   675                           	opt stack 0
   676  00FBF7                     _sensorflags:
   677                           	opt stack 0
   678  00FBF7  0025               	dw	37
   679  00FBF9                     __end_of_sensorflags:
   680                           	opt stack 0
   681  00FBF9                     _chan8linkbits:
   682                           	opt stack 0
   683  00FBF9  0024               	dw	36
   684  00FBFB                     __end_of_chan8linkbits:
   685                           	opt stack 0
   686  00FBFB                     _chan7linkbits:
   687                           	opt stack 0
   688  00FBFB  0023               	dw	35
   689  00FBFD                     __end_of_chan7linkbits:
   690                           	opt stack 0
   691  00FBFD                     _chan6linkbits:
   692                           	opt stack 0
   693  00FBFD  0022               	dw	34
   694  00FBFF                     __end_of_chan6linkbits:
   695                           	opt stack 0
   696  00FBFF                     _chan5linkbits:
   697                           	opt stack 0
   698  00FBFF  0021               	dw	33
   699  00FC01                     __end_of_chan5linkbits:
   700                           	opt stack 0
   701  00FC01                     _chan4linkbits:
   702                           	opt stack 0
   703  00FC01  0020               	dw	32
   704  00FC03                     __end_of_chan4linkbits:
   705                           	opt stack 0
   706  00FC03                     _chan3linkbits:
   707                           	opt stack 0
   708  00FC03  001F               	dw	31
   709  00FC05                     __end_of_chan3linkbits:
   710                           	opt stack 0
   711  00FC05                     _chan2linkbits:
   712                           	opt stack 0
   713  00FC05  001E               	dw	30
   714  00FC07                     __end_of_chan2linkbits:
   715                           	opt stack 0
   716  00FC07                     _chan1linkbits:
   717                           	opt stack 0
   718  00FC07  001D               	dw	29
   719  00FC09                     __end_of_chan1linkbits:
   720                           	opt stack 0
   721  00FC09                     _hopcoin:
   722                           	opt stack 0
   723  00FC09  001C               	dw	28
   724  00FC0B                     __end_of_hopcoin:
   725                           	opt stack 0
   726  00FC0B                     _cashoutv:
   727                           	opt stack 0
   728  00FC0B  001A               	dw	26
   729  00FC0D                     __end_of_cashoutv:
   730                           	opt stack 0
   731  00FC0D                     _sensval:
   732                           	opt stack 0
   733  00FC0D  0019               	dw	25
   734  00FC0F                     __end_of_sensval:
   735                           	opt stack 0
   736  00FC0F                     _notebits:
   737                           	opt stack 0
   738  00FC0F  0018               	dw	24
   739  00FC11                     __end_of_notebits:
   740                           	opt stack 0
   741  00FC11                     _venderrors:
   742                           	opt stack 0
   743  00FC11  0017               	dw	23
   744  00FC13                     __end_of_venderrors:
   745                           	opt stack 0
   746  00FC13                     _pricestore:
   747                           	opt stack 0
   748  00FC13  000F               	dw	15
   749  00FC15                     __end_of_pricestore:
   750                           	opt stack 0
   751  00FC15                     _cashint:
   752                           	opt stack 0
   753  00FC15  000C               	dw	12
   754  00FC17                     __end_of_cashint:
   755                           	opt stack 0
   756  00FC17                     _vendstore:
   757                           	opt stack 0
   758  00FC17  0004               	dw	4
   759  00FC19                     __end_of_vendstore:
   760                           	opt stack 0
   761  00FC19                     _cashinv:
   762                           	opt stack 0
   763  00FC19  0002               	dw	2
   764  00FC1B                     __end_of_cashinv:
   765                           	opt stack 0
   766  00FC1B                     _credmem:
   767                           	opt stack 0
   768  00FC1B  0000               	dw	0
   769  00FC1D                     __end_of_credmem:
   770                           	opt stack 0
   771  00FC1D                     _secondadd:
   772                           	opt stack 0
   773  00FC1D  1E46               	dw	7750
   774  00FC1F                     __end_of_secondadd:
   775                           	opt stack 0
   776  00FC1F                     _second_5:
   777                           	opt stack 0
   778  00FC1F  0F23               	dw	3875
   779  00FC21                     __end_of_second_5:
   780                           	opt stack 0
   781  00FC21                     _second1:
   782                           	opt stack 0
   783  00FC21  E1BA               	dw	57786
   784  00FC23                     __end_of_second1:
   785                           	opt stack 0
   786  00FC23                     _setupmsg:
   787                           	opt stack 0
   788  00FC23  FA                 	db	low STR_1
   789  00FC24                     __end_of_setupmsg:
   790                           	opt stack 0
   791  00FC24                     _cc_poll:
   792                           	opt stack 0
   793  00FC24  FE                 	db	254
   794  00FC25                     __end_of_cc_poll:
   795                           	opt stack 0
   796  00FC25                     _cc_adpoll:
   797                           	opt stack 0
   798  00FC25  FD                 	db	253
   799  00FC26                     __end_of_cc_adpoll:
   800                           	opt stack 0
   801  00FC26                     _cc_serial:
   802                           	opt stack 0
   803  00FC26  F2                 	db	242
   804  00FC27                     __end_of_cc_serial:
   805                           	opt stack 0
   806  00FC27                     _cc_newpin:
   807                           	opt stack 0
   808  00FC27  DB                 	db	219
   809  00FC28                     __end_of_cc_newpin:
   810                           	opt stack 0
   811  00FC28                     _cc_pin:
   812                           	opt stack 0
   813  00FC28  DA                 	db	218
   814  00FC29                     __end_of_cc_pin:
   815                           	opt stack 0
   816  00FC29                     _cc_level:
   817                           	opt stack 0
   818  00FC29  EC                 	db	236
   819  00FC2A                     __end_of_cc_level:
   820                           	opt stack 0
   821  00FC2A                     _cc_stop:
   822                           	opt stack 0
   823  00FC2A  AC                 	db	172
   824  00FC2B                     __end_of_cc_stop:
   825                           	opt stack 0
   826  00FC2B                     _cc_countrq:
   827                           	opt stack 0
   828  00FC2B  A8                 	db	168
   829  00FC2C                     __end_of_cc_countrq:
   830                           	opt stack 0
   831  00FC2C                     _cc_pay:
   832                           	opt stack 0
   833  00FC2C  A7                 	db	167
   834  00FC2D                     __end_of_cc_pay:
   835                           	opt stack 0
   836  00FC2D                     _cc_status:
   837                           	opt stack 0
   838  00FC2D  A6                 	db	166
   839  00FC2E                     __end_of_cc_status:
   840                           	opt stack 0
   841  00FC2E                     _cc_enable:
   842                           	opt stack 0
   843  00FC2E  A4                 	db	164
   844  00FC2F                     __end_of_cc_enable:
   845                           	opt stack 0
   846  00FC2F                     _cc_test:
   847                           	opt stack 0
   848  00FC2F  A3                 	db	163
   849  00FC30                     __end_of_cc_test:
   850                           	opt stack 0
   851  00FC30                     _cc_reset:
   852                           	opt stack 0
   853  00FC30  01                 	db	1
   854  00FC31                     __end_of_cc_reset:
   855                           	opt stack 0
   856  00FC31                     _mastadd:
   857                           	opt stack 0
   858  00FC31  01                 	db	1
   859  00FC32                     __end_of_mastadd:
   860                           	opt stack 0
   861  00FC32                     _hopadd:
   862                           	opt stack 0
   863  00FC32  03                 	db	3
   864  00FC33                     __end_of_hopadd:
   865                           	opt stack 0
   866  00FC33                     _theft_attempt:
   867                           	opt stack 0
   868  00FC33  0C                 	db	12
   869  00FC34                     __end_of_theft_attempt:
   870                           	opt stack 0
   871  00FC34                     _note_rejected:
   872                           	opt stack 0
   873  00FC34  0B                 	db	11
   874  00FC35                     __end_of_note_rejected:
   875                           	opt stack 0
   876  00FC35                     _invalid_escrow:
   877                           	opt stack 0
   878  00FC35  0A                 	db	10
   879  00FC36                     __end_of_invalid_escrow:
   880                           	opt stack 0
   881  00FC36                     _acept_disabled:
   882                           	opt stack 0
   883  00FC36  09                 	db	9
   884  00FC37                     __end_of_acept_disabled:
   885                           	opt stack 0
   886  00FC37                     _cashbox_err:
   887                           	opt stack 0
   888  00FC37  08                 	db	8
   889  00FC38                     __end_of_cashbox_err:
   890                           	opt stack 0
   891  00FC38                     _note_removed:
   892                           	opt stack 0
   893  00FC38  07                 	db	7
   894  00FC39                     __end_of_note_removed:
   895                           	opt stack 0
   896  00FC39                     _just_reset:
   897                           	opt stack 0
   898  00FC39  06                 	db	6
   899  00FC3A                     __end_of_just_reset:
   900                           	opt stack 0
   901  00FC3A                     _jammed_err:
   902                           	opt stack 0
   903  00FC3A  05                 	db	5
   904  00FC3B                     __end_of_jammed_err:
   905                           	opt stack 0
   906  00FC3B                     _rom_error:
   907                           	opt stack 0
   908  00FC3B  04                 	db	4
   909  00FC3C                     __end_of_rom_error:
   910                           	opt stack 0
   911  00FC3C                     _just_busy:
   912                           	opt stack 0
   913  00FC3C  03                 	db	3
   914  00FC3D                     __end_of_just_busy:
   915                           	opt stack 0
   916  00FC3D                     _sens_error:
   917                           	opt stack 0
   918  00FC3D  02                 	db	2
   919  00FC3E                     __end_of_sens_error:
   920                           	opt stack 0
   921  00FC3E                     _motr_error:
   922                           	opt stack 0
   923  00FC3E  01                 	db	1
   924  00FC3F                     __end_of_motr_error:
   925                           	opt stack 0
   926  00FC3F                     _note_features:
   927                           	opt stack 0
   928  00FC3F  33                 	db	51
   929  00FC40                     __end_of_note_features:
   930                           	opt stack 0
   931  00FC40                     _note_stacker:
   932                           	opt stack 0
   933  00FC40  36                 	db	54
   934  00FC41                     __end_of_note_stacker:
   935                           	opt stack 0
   936  00FC41                     _note_escrow:
   937                           	opt stack 0
   938  00FC41  35                 	db	53
   939  00FC42                     __end_of_note_escrow:
   940                           	opt stack 0
   941  00FC42                     _note_type:
   942                           	opt stack 0
   943  00FC42  34                 	db	52
   944  00FC43                     __end_of_note_type:
   945                           	opt stack 0
   946  00FC43                     _note_poll:
   947                           	opt stack 0
   948  00FC43  33                 	db	51
   949  00FC44                     __end_of_note_poll:
   950                           	opt stack 0
   951  00FC44                     _note_security:
   952                           	opt stack 0
   953  00FC44  32                 	db	50
   954  00FC45                     __end_of_note_security:
   955                           	opt stack 0
   956  00FC45                     _note_setup:
   957                           	opt stack 0
   958  00FC45  31                 	db	49
   959  00FC46                     __end_of_note_setup:
   960                           	opt stack 0
   961  00FC46                     _note_reset:
   962                           	opt stack 0
   963  00FC46  30                 	db	48
   964  00FC47                     __end_of_note_reset:
   965                           	opt stack 0
   966  00FC47                     _line4:
   967                           	opt stack 0
   968  00FC47  54                 	db	84
   969  00FC48                     __end_of_line4:
   970                           	opt stack 0
   971  00FC48                     _line3:
   972                           	opt stack 0
   973  00FC48  14                 	db	20
   974  00FC49                     __end_of_line3:
   975                           	opt stack 0
   976  00FC49                     _line2:
   977                           	opt stack 0
   978  00FC49  40                 	db	64
   979  00FC4A                     __end_of_line2:
   980                           	opt stack 0
   981  00FC4A                     _line1:
   982                           	opt stack 0
   983  00FC4A  00                 	db	0
   984  00FC4B                     __end_of_line1:
   985                           	opt stack 0
   986  00FC4B                     _dispsl:
   987                           	opt stack 0
   988  00FC4B  18                 	db	24
   989  00FC4C                     __end_of_dispsl:
   990                           	opt stack 0
   991  00FC4C                     _dispsr:
   992                           	opt stack 0
   993  00FC4C  1B                 	db	27
   994  00FC4D                     __end_of_dispsr:
   995                           	opt stack 0
   996  00FC4D                     _dispoff:
   997                           	opt stack 0
   998  00FC4D  08                 	db	8
   999  00FC4E                     __end_of_dispoff:
  1000                           	opt stack 0
  1001  00FC4E                     _dispshleft:
  1002                           	opt stack 0
  1003  00FC4E  07                 	db	7
  1004  00FC4F                     __end_of_dispshleft:
  1005                           	opt stack 0
  1006  00FC4F                     _dispshright:
  1007                           	opt stack 0
  1008  00FC4F  05                 	db	5
  1009  00FC50                     __end_of_dispshright:
  1010                           	opt stack 0
  1011  00FC50                     _dispcursor:
  1012                           	opt stack 0
  1013  00FC50  04                 	db	4
  1014  00FC51                     __end_of_dispcursor:
  1015                           	opt stack 0
  1016  00FC51                     _dispnormal:
  1017                           	opt stack 0
  1018  00FC51  06                 	db	6
  1019  00FC52                     __end_of_dispnormal:
  1020                           	opt stack 0
  1021  00FC52                     _dsphome:
  1022                           	opt stack 0
  1023  00FC52  02                 	db	2
  1024  00FC53                     __end_of_dsphome:
  1025                           	opt stack 0
  1026  00FC53                     _dispaddr:
  1027                           	opt stack 0
  1028  00FC53  A8                 	db	168
  1029  00FC54                     __end_of_dispaddr:
  1030                           	opt stack 0
  1031  00FC54                     _dispclr:
  1032                           	opt stack 0
  1033  00FC54  01                 	db	1
  1034  00FC55                     __end_of_dispclr:
  1035                           	opt stack 0
  1036  00FC55                     _dispon:
  1037                           	opt stack 0
  1038  00FC55  0C                 	db	12
  1039  00FC56                     __end_of_dispon:
  1040                           	opt stack 0
  1041  00FC56                     _dispfunc3:
  1042                           	opt stack 0
  1043  00FC56  2C                 	db	44
  1044  00FC57                     __end_of_dispfunc3:
  1045                           	opt stack 0
  1046  00FC57                     _dispfunc2:
  1047                           	opt stack 0
  1048  00FC57  28                 	db	40
  1049  00FC58                     __end_of_dispfunc2:
  1050                           	opt stack 0
  1051  00FC58                     _dispfunc1:
  1052                           	opt stack 0
  1053  00FC58  24                 	db	36
  1054  00FC59                     __end_of_dispfunc1:
  1055                           	opt stack 0
  1056  00FC59                     _servmsg:
  1057                           	opt stack 0
  1058  00FC59  31                 	db	49
  1059  00FC5A  20                 	db	32
  1060  00FC5B  3D                 	db	61
  1061  00FC5C  20                 	db	32
  1062  00FC5D  41                 	db	65
  1063  00FC5E  75                 	db	117
  1064  00FC5F  64                 	db	100
  1065  00FC60  69                 	db	105
  1066  00FC61  74                 	db	116
  1067  00FC62  20                 	db	32
  1068  00FC63  32                 	db	50
  1069  00FC64  20                 	db	32
  1070  00FC65  3D                 	db	61
  1071  00FC66  20                 	db	32
  1072  00FC67  53                 	db	83
  1073  00FC68  65                 	db	101
  1074  00FC69  6E                 	db	110
  1075  00FC6A  73                 	db	115
  1076  00FC6B  6F                 	db	111
  1077  00FC6C  72                 	db	114
  1078  00FC6D  33                 	db	51
  1079  00FC6E  3D                 	db	61
  1080  00FC6F  48                 	db	72
  1081  00FC70  6F                 	db	111
  1082  00FC71  70                 	db	112
  1083  00FC72  2D                 	db	45
  1084  00FC73  43                 	db	67
  1085  00FC74  6F                 	db	111
  1086  00FC75  69                 	db	105
  1087  00FC76  6E                 	db	110
  1088  00FC77  20                 	db	32
  1089  00FC78  34                 	db	52
  1090  00FC79  3D                 	db	61
  1091  00FC7A  4E                 	db	78
  1092  00FC7B  6F                 	db	111
  1093  00FC7C  74                 	db	116
  1094  00FC7D  65                 	db	101
  1095  00FC7E  2D                 	db	45
  1096  00FC7F  65                 	db	101
  1097  00FC80  6E                 	db	110
  1098  00FC81  35                 	db	53
  1099  00FC82  3D                 	db	61
  1100  00FC83  43                 	db	67
  1101  00FC84  72                 	db	114
  1102  00FC85  65                 	db	101
  1103  00FC86  64                 	db	100
  1104  00FC87  2D                 	db	45
  1105  00FC88  63                 	db	99
  1106  00FC89  6C                 	db	108
  1107  00FC8A  72                 	db	114
  1108  00FC8B  20                 	db	32
  1109  00FC8C  36                 	db	54
  1110  00FC8D  3D                 	db	61
  1111  00FC8E  50                 	db	80
  1112  00FC8F  72                 	db	114
  1113  00FC90  69                 	db	105
  1114  00FC91  63                 	db	99
  1115  00FC92  65                 	db	101
  1116  00FC93  73                 	db	115
  1117  00FC94  20                 	db	32
  1118  00FC95  37                 	db	55
  1119  00FC96  3D                 	db	61
  1120  00FC97  56                 	db	86
  1121  00FC98  65                 	db	101
  1122  00FC99  6E                 	db	110
  1123  00FC9A  64                 	db	100
  1124  00FC9B  20                 	db	32
  1125  00FC9C  73                 	db	115
  1126  00FC9D  65                 	db	101
  1127  00FC9E  74                 	db	116
  1128  00FC9F  75                 	db	117
  1129  00FCA0  70                 	db	112
  1130  00FCA1  20                 	db	32
  1131  00FCA2  38                 	db	56
  1132  00FCA3  3D                 	db	61
  1133  00FCA4  45                 	db	69
  1134  00FCA5  78                 	db	120
  1135  00FCA6  69                 	db	105
  1136  00FCA7  74                 	db	116
  1137  00FCA8  00                 	db	0
  1138  00FCA9                     __end_of_servmsg:
  1139                           	opt stack 0
  1140  00FCA9                     _setnotes:
  1141                           	opt stack 0
  1142  00FCA9  45                 	db	69
  1143  00FCAA  6E                 	db	110
  1144  00FCAB  61                 	db	97
  1145  00FCAC  62                 	db	98
  1146  00FCAD  6C                 	db	108
  1147  00FCAE  65                 	db	101
  1148  00FCAF  20                 	db	32
  1149  00FCB0  2F                 	db	47
  1150  00FCB1  20                 	db	32
  1151  00FCB2  44                 	db	68
  1152  00FCB3  69                 	db	105
  1153  00FCB4  73                 	db	115
  1154  00FCB5  61                 	db	97
  1155  00FCB6  62                 	db	98
  1156  00FCB7  6C                 	db	108
  1157  00FCB8  65                 	db	101
  1158  00FCB9  20                 	db	32
  1159  00FCBA  20                 	db	32
  1160  00FCBB  20                 	db	32
  1161  00FCBC  20                 	db	32
  1162  00FCBD  31                 	db	49
  1163  00FCBE  20                 	db	32
  1164  00FCBF  3D                 	db	61
  1165  00FCC0  20                 	db	32
  1166  00FCC1  52                 	db	82
  1167  00FCC2  31                 	db	49
  1168  00FCC3  30                 	db	48
  1169  00FCC4  2C                 	db	44
  1170  00FCC5  20                 	db	32
  1171  00FCC6  32                 	db	50
  1172  00FCC7  20                 	db	32
  1173  00FCC8  3D                 	db	61
  1174  00FCC9  20                 	db	32
  1175  00FCCA  52                 	db	82
  1176  00FCCB  32                 	db	50
  1177  00FCCC  30                 	db	48
  1178  00FCCD  20                 	db	32
  1179  00FCCE  20                 	db	32
  1180  00FCCF  20                 	db	32
  1181  00FCD0  20                 	db	32
  1182  00FCD1  33                 	db	51
  1183  00FCD2  20                 	db	32
  1184  00FCD3  3D                 	db	61
  1185  00FCD4  20                 	db	32
  1186  00FCD5  52                 	db	82
  1187  00FCD6  35                 	db	53
  1188  00FCD7  30                 	db	48
  1189  00FCD8  2C                 	db	44
  1190  00FCD9  20                 	db	32
  1191  00FCDA  34                 	db	52
  1192  00FCDB  20                 	db	32
  1193  00FCDC  3D                 	db	61
  1194  00FCDD  20                 	db	32
  1195  00FCDE  52                 	db	82
  1196  00FCDF  31                 	db	49
  1197  00FCE0  30                 	db	48
  1198  00FCE1  30                 	db	48
  1199  00FCE2  20                 	db	32
  1200  00FCE3  20                 	db	32
  1201  00FCE4  20                 	db	32
  1202  00FCE5  35                 	db	53
  1203  00FCE6  20                 	db	32
  1204  00FCE7  3D                 	db	61
  1205  00FCE8  20                 	db	32
  1206  00FCE9  52                 	db	82
  1207  00FCEA  32                 	db	50
  1208  00FCEB  30                 	db	48
  1209  00FCEC  30                 	db	48
  1210  00FCED  00                 	db	0
  1211  00FCEE                     __end_of_setnotes:
  1212                           	opt stack 0
  1213  00FCEE                     _vendsetup:
  1214                           	opt stack 0
  1215  00FCEE  50                 	db	80
  1216  00FCEF  75                 	db	117
  1217  00FCF0  73                 	db	115
  1218  00FCF1  68                 	db	104
  1219  00FCF2  20                 	db	32
  1220  00FCF3  31                 	db	49
  1221  00FCF4  20                 	db	32
  1222  00FCF5  56                 	db	86
  1223  00FCF6  65                 	db	101
  1224  00FCF7  6E                 	db	110
  1225  00FCF8  64                 	db	100
  1226  00FCF9  20                 	db	32
  1227  00FCFA  54                 	db	84
  1228  00FCFB  69                 	db	105
  1229  00FCFC  6D                 	db	109
  1230  00FCFD  65                 	db	101
  1231  00FCFE  2C                 	db	44
  1232  00FCFF  20                 	db	32
  1233  00FD00  20                 	db	32
  1234  00FD01  20                 	db	32
  1235  00FD02  32                 	db	50
  1236  00FD03  20                 	db	32
  1237  00FD04  43                 	db	67
  1238  00FD05  68                 	db	104
  1239  00FD06  61                 	db	97
  1240  00FD07  6E                 	db	110
  1241  00FD08  4C                 	db	76
  1242  00FD09  69                 	db	105
  1243  00FD0A  6E                 	db	110
  1244  00FD0B  6B                 	db	107
  1245  00FD0C  20                 	db	32
  1246  00FD0D  33                 	db	51
  1247  00FD0E  20                 	db	32
  1248  00FD0F  53                 	db	83
  1249  00FD10  65                 	db	101
  1250  00FD11  6E                 	db	110
  1251  00FD12  73                 	db	115
  1252  00FD13  4F                 	db	79
  1253  00FD14  66                 	db	102
  1254  00FD15  66                 	db	102
  1255  00FD16  34                 	db	52
  1256  00FD17  20                 	db	32
  1257  00FD18  43                 	db	67
  1258  00FD19  6C                 	db	108
  1259  00FD1A  72                 	db	114
  1260  00FD1B  54                 	db	84
  1261  00FD1C  6F                 	db	111
  1262  00FD1D  74                 	db	116
  1263  00FD1E  20                 	db	32
  1264  00FD1F  35                 	db	53
  1265  00FD20  20                 	db	32
  1266  00FD21  46                 	db	70
  1267  00FD22  61                 	db	97
  1268  00FD23  63                 	db	99
  1269  00FD24  52                 	db	82
  1270  00FD25  65                 	db	101
  1271  00FD26  73                 	db	115
  1272  00FD27  65                 	db	101
  1273  00FD28  74                 	db	116
  1274  00FD29  20                 	db	32
  1275  00FD2A  38                 	db	56
  1276  00FD2B  20                 	db	32
  1277  00FD2C  65                 	db	101
  1278  00FD2D  78                 	db	120
  1279  00FD2E  69                 	db	105
  1280  00FD2F  74                 	db	116
  1281  00FD30  00                 	db	0
  1282  00FD31                     __end_of_vendsetup:
  1283                           	opt stack 0
  1284  00FD31                     _pricesetm2:
  1285                           	opt stack 0
  1286  00FD31  50                 	db	80
  1287  00FD32  72                 	db	114
  1288  00FD33  65                 	db	101
  1289  00FD34  73                 	db	115
  1290  00FD35  73                 	db	115
  1291  00FD36  20                 	db	32
  1292  00FD37  63                 	db	99
  1293  00FD38  68                 	db	104
  1294  00FD39  61                 	db	97
  1295  00FD3A  6E                 	db	110
  1296  00FD3B  6E                 	db	110
  1297  00FD3C  65                 	db	101
  1298  00FD3D  6C                 	db	108
  1299  00FD3E  20                 	db	32
  1300  00FD3F  62                 	db	98
  1301  00FD40  75                 	db	117
  1302  00FD41  74                 	db	116
  1303  00FD42  74                 	db	116
  1304  00FD43  6F                 	db	111
  1305  00FD44  6E                 	db	110
  1306  00FD45  20                 	db	32
  1307  00FD46  20                 	db	32
  1308  00FD47  20                 	db	32
  1309  00FD48  20                 	db	32
  1310  00FD49  74                 	db	116
  1311  00FD4A  6F                 	db	111
  1312  00FD4B  20                 	db	32
  1313  00FD4C  73                 	db	115
  1314  00FD4D  65                 	db	101
  1315  00FD4E  74                 	db	116
  1316  00FD4F  20                 	db	32
  1317  00FD50  70                 	db	112
  1318  00FD51  72                 	db	114
  1319  00FD52  69                 	db	105
  1320  00FD53  63                 	db	99
  1321  00FD54  65                 	db	101
  1322  00FD55  20                 	db	32
  1323  00FD56  20                 	db	32
  1324  00FD57  20                 	db	32
  1325  00FD58  20                 	db	32
  1326  00FD59  20                 	db	32
  1327  00FD5A  20                 	db	32
  1328  00FD5B  53                 	db	83
  1329  00FD5C  65                 	db	101
  1330  00FD5D  72                 	db	114
  1331  00FD5E  76                 	db	118
  1332  00FD5F  69                 	db	105
  1333  00FD60  63                 	db	99
  1334  00FD61  65                 	db	101
  1335  00FD62  20                 	db	32
  1336  00FD63  3D                 	db	61
  1337  00FD64  20                 	db	32
  1338  00FD65  45                 	db	69
  1339  00FD66  78                 	db	120
  1340  00FD67  69                 	db	105
  1341  00FD68  74                 	db	116
  1342  00FD69  00                 	db	0
  1343  00FD6A                     __end_of_pricesetm2:
  1344                           	opt stack 0
  1345  00FD6A                     _chanlinkm:
  1346                           	opt stack 0
  1347  00FD6A  50                 	db	80
  1348  00FD6B  72                 	db	114
  1349  00FD6C  65                 	db	101
  1350  00FD6D  73                 	db	115
  1351  00FD6E  73                 	db	115
  1352  00FD6F  20                 	db	32
  1353  00FD70  63                 	db	99
  1354  00FD71  68                 	db	104
  1355  00FD72  61                 	db	97
  1356  00FD73  6E                 	db	110
  1357  00FD74  6E                 	db	110
  1358  00FD75  65                 	db	101
  1359  00FD76  6C                 	db	108
  1360  00FD77  20                 	db	32
  1361  00FD78  62                 	db	98
  1362  00FD79  75                 	db	117
  1363  00FD7A  74                 	db	116
  1364  00FD7B  74                 	db	116
  1365  00FD7C  6F                 	db	111
  1366  00FD7D  6E                 	db	110
  1367  00FD7E  20                 	db	32
  1368  00FD7F  20                 	db	32
  1369  00FD80  20                 	db	32
  1370  00FD81  20                 	db	32
  1371  00FD82  74                 	db	116
  1372  00FD83  6F                 	db	111
  1373  00FD84  20                 	db	32
  1374  00FD85  6C                 	db	108
  1375  00FD86  69                 	db	105
  1376  00FD87  6E                 	db	110
  1377  00FD88  6B                 	db	107
  1378  00FD89  20                 	db	32
  1379  00FD8A  74                 	db	116
  1380  00FD8B  6F                 	db	111
  1381  00FD8C  20                 	db	32
  1382  00FD8D  20                 	db	32
  1383  00FD8E  20                 	db	32
  1384  00FD8F  20                 	db	32
  1385  00FD90  20                 	db	32
  1386  00FD91  20                 	db	32
  1387  00FD92  53                 	db	83
  1388  00FD93  65                 	db	101
  1389  00FD94  72                 	db	114
  1390  00FD95  76                 	db	118
  1391  00FD96  69                 	db	105
  1392  00FD97  63                 	db	99
  1393  00FD98  65                 	db	101
  1394  00FD99  20                 	db	32
  1395  00FD9A  3D                 	db	61
  1396  00FD9B  20                 	db	32
  1397  00FD9C  45                 	db	69
  1398  00FD9D  78                 	db	120
  1399  00FD9E  69                 	db	105
  1400  00FD9F  74                 	db	116
  1401  00FDA0  00                 	db	0
  1402  00FDA1                     __end_of_chanlinkm:
  1403                           	opt stack 0
  1404  00FDA1                     _hoppcoin:
  1405                           	opt stack 0
  1406  00FDA1  48                 	db	72
  1407  00FDA2  6F                 	db	111
  1408  00FDA3  70                 	db	112
  1409  00FDA4  70                 	db	112
  1410  00FDA5  65                 	db	101
  1411  00FDA6  72                 	db	114
  1412  00FDA7  20                 	db	32
  1413  00FDA8  43                 	db	67
  1414  00FDA9  6F                 	db	111
  1415  00FDAA  69                 	db	105
  1416  00FDAB  6E                 	db	110
  1417  00FDAC  20                 	db	32
  1418  00FDAD  20                 	db	32
  1419  00FDAE  20                 	db	32
  1420  00FDAF  20                 	db	32
  1421  00FDB0  20                 	db	32
  1422  00FDB1  20                 	db	32
  1423  00FDB2  20                 	db	32
  1424  00FDB3  20                 	db	32
  1425  00FDB4  20                 	db	32
  1426  00FDB5  42                 	db	66
  1427  00FDB6  75                 	db	117
  1428  00FDB7  74                 	db	116
  1429  00FDB8  74                 	db	116
  1430  00FDB9  6F                 	db	111
  1431  00FDBA  6E                 	db	110
  1432  00FDBB  20                 	db	32
  1433  00FDBC  31                 	db	49
  1434  00FDBD  20                 	db	32
  1435  00FDBE  3D                 	db	61
  1436  00FDBF  20                 	db	32
  1437  00FDC0  2B                 	db	43
  1438  00FDC1  20                 	db	32
  1439  00FDC2  26                 	db	38
  1440  00FDC3  20                 	db	32
  1441  00FDC4  32                 	db	50
  1442  00FDC5  20                 	db	32
  1443  00FDC6  3D                 	db	61
  1444  00FDC7  20                 	db	32
  1445  00FDC8  2D                 	db	45
  1446  00FDC9  20                 	db	32
  1447  00FDCA  56                 	db	86
  1448  00FDCB  61                 	db	97
  1449  00FDCC  6C                 	db	108
  1450  00FDCD  75                 	db	117
  1451  00FDCE  65                 	db	101
  1452  00FDCF  20                 	db	32
  1453  00FDD0  3D                 	db	61
  1454  00FDD1  20                 	db	32
  1455  00FDD2  52                 	db	82
  1456  00FDD3  00                 	db	0
  1457  00FDD4                     __end_of_hoppcoin:
  1458                           	opt stack 0
  1459  00FDD4                     _vendtimem:
  1460                           	opt stack 0
  1461  00FDD4  50                 	db	80
  1462  00FDD5  75                 	db	117
  1463  00FDD6  73                 	db	115
  1464  00FDD7  68                 	db	104
  1465  00FDD8  20                 	db	32
  1466  00FDD9  31                 	db	49
  1467  00FDDA  20                 	db	32
  1468  00FDDB  3D                 	db	61
  1469  00FDDC  20                 	db	32
  1470  00FDDD  2B                 	db	43
  1471  00FDDE  2E                 	db	46
  1472  00FDDF  35                 	db	53
  1473  00FDE0  20                 	db	32
  1474  00FDE1  73                 	db	115
  1475  00FDE2  65                 	db	101
  1476  00FDE3  63                 	db	99
  1477  00FDE4  6F                 	db	111
  1478  00FDE5  6E                 	db	110
  1479  00FDE6  64                 	db	100
  1480  00FDE7  20                 	db	32
  1481  00FDE8  50                 	db	80
  1482  00FDE9  75                 	db	117
  1483  00FDEA  73                 	db	115
  1484  00FDEB  68                 	db	104
  1485  00FDEC  20                 	db	32
  1486  00FDED  32                 	db	50
  1487  00FDEE  20                 	db	32
  1488  00FDEF  3D                 	db	61
  1489  00FDF0  20                 	db	32
  1490  00FDF1  2D                 	db	45
  1491  00FDF2  2E                 	db	46
  1492  00FDF3  35                 	db	53
  1493  00FDF4  20                 	db	32
  1494  00FDF5  73                 	db	115
  1495  00FDF6  65                 	db	101
  1496  00FDF7  63                 	db	99
  1497  00FDF8  6F                 	db	111
  1498  00FDF9  6E                 	db	110
  1499  00FDFA  64                 	db	100
  1500  00FDFB  20                 	db	32
  1501  00FDFC  00                 	db	0
  1502  00FDFD                     __end_of_vendtimem:
  1503                           	opt stack 0
  1504  00FDFD                     _setimemsg:
  1505                           	opt stack 0
  1506  00FDFD  50                 	db	80
  1507  00FDFE  75                 	db	117
  1508  00FDFF  73                 	db	115
  1509  00FE00  68                 	db	104
  1510  00FE01  20                 	db	32
  1511  00FE02  63                 	db	99
  1512  00FE03  68                 	db	104
  1513  00FE04  61                 	db	97
  1514  00FE05  6E                 	db	110
  1515  00FE06  6E                 	db	110
  1516  00FE07  65                 	db	101
  1517  00FE08  6C                 	db	108
  1518  00FE09  20                 	db	32
  1519  00FE0A  62                 	db	98
  1520  00FE0B  75                 	db	117
  1521  00FE0C  74                 	db	116
  1522  00FE0D  74                 	db	116
  1523  00FE0E  6F                 	db	111
  1524  00FE0F  6E                 	db	110
  1525  00FE10  20                 	db	32
  1526  00FE11  50                 	db	80
  1527  00FE12  75                 	db	117
  1528  00FE13  73                 	db	115
  1529  00FE14  68                 	db	104
  1530  00FE15  20                 	db	32
  1531  00FE16  73                 	db	115
  1532  00FE17  65                 	db	101
  1533  00FE18  72                 	db	114
  1534  00FE19  76                 	db	118
  1535  00FE1A  69                 	db	105
  1536  00FE1B  63                 	db	99
  1537  00FE1C  65                 	db	101
  1538  00FE1D  20                 	db	32
  1539  00FE1E  74                 	db	116
  1540  00FE1F  6F                 	db	111
  1541  00FE20  20                 	db	32
  1542  00FE21  65                 	db	101
  1543  00FE22  78                 	db	120
  1544  00FE23  69                 	db	105
  1545  00FE24  74                 	db	116
  1546  00FE25  00                 	db	0
  1547  00FE26                     __end_of_setimemsg:
  1548                           	opt stack 0
  1549  00FE26                     _inscoin:
  1550                           	opt stack 0
  1551  00FE26  49                 	db	73
  1552  00FE27  6E                 	db	110
  1553  00FE28  73                 	db	115
  1554  00FE29  65                 	db	101
  1555  00FE2A  72                 	db	114
  1556  00FE2B  74                 	db	116
  1557  00FE2C  20                 	db	32
  1558  00FE2D  4E                 	db	78
  1559  00FE2E  6F                 	db	111
  1560  00FE2F  74                 	db	116
  1561  00FE30  65                 	db	101
  1562  00FE31  73                 	db	115
  1563  00FE32  20                 	db	32
  1564  00FE33  26                 	db	38
  1565  00FE34  20                 	db	32
  1566  00FE35  50                 	db	80
  1567  00FE36  72                 	db	114
  1568  00FE37  65                 	db	101
  1569  00FE38  73                 	db	115
  1570  00FE39  73                 	db	115
  1571  00FE3A  4C                 	db	76
  1572  00FE3B  69                 	db	105
  1573  00FE3C  74                 	db	116
  1574  00FE3D  20                 	db	32
  1575  00FE3E  42                 	db	66
  1576  00FE3F  75                 	db	117
  1577  00FE40  74                 	db	116
  1578  00FE41  74                 	db	116
  1579  00FE42  6F                 	db	111
  1580  00FE43  6E                 	db	110
  1581  00FE44  20                 	db	32
  1582  00FE45  54                 	db	84
  1583  00FE46  6F                 	db	111
  1584  00FE47  20                 	db	32
  1585  00FE48  56                 	db	86
  1586  00FE49  65                 	db	101
  1587  00FE4A  6E                 	db	110
  1588  00FE4B  64                 	db	100
  1589  00FE4C  00                 	db	0
  1590  00FE4D                     __end_of_inscoin:
  1591                           	opt stack 0
  1592  00FE4D                     _initnote:
  1593                           	opt stack 0
  1594  00FE4D  20                 	db	32
  1595  00FE4E  20                 	db	32
  1596  00FE4F  20                 	db	32
  1597  00FE50  20                 	db	32
  1598  00FE51  20                 	db	32
  1599  00FE52  49                 	db	73
  1600  00FE53  6E                 	db	110
  1601  00FE54  69                 	db	105
  1602  00FE55  74                 	db	116
  1603  00FE56  69                 	db	105
  1604  00FE57  61                 	db	97
  1605  00FE58  6C                 	db	108
  1606  00FE59  69                 	db	105
  1607  00FE5A  7A                 	db	122
  1608  00FE5B  65                 	db	101
  1609  00FE5C  20                 	db	32
  1610  00FE5D  20                 	db	32
  1611  00FE5E  20                 	db	32
  1612  00FE5F  20                 	db	32
  1613  00FE60  20                 	db	32
  1614  00FE61  20                 	db	32
  1615  00FE62  20                 	db	32
  1616  00FE63  20                 	db	32
  1617  00FE64  20                 	db	32
  1618  00FE65  20                 	db	32
  1619  00FE66  4E                 	db	78
  1620  00FE67  6F                 	db	111
  1621  00FE68  74                 	db	116
  1622  00FE69  65                 	db	101
  1623  00FE6A  20                 	db	32
  1624  00FE6B  52                 	db	82
  1625  00FE6C  65                 	db	101
  1626  00FE6D  61                 	db	97
  1627  00FE6E  64                 	db	100
  1628  00FE6F  65                 	db	101
  1629  00FE70  72                 	db	114
  1630  00FE71  00                 	db	0
  1631  00FE72                     __end_of_initnote:
  1632                           	opt stack 0
  1633  00FE72                     _nochange:
  1634                           	opt stack 0
  1635  00FE72  4E                 	db	78
  1636  00FE73  6F                 	db	111
  1637  00FE74  20                 	db	32
  1638  00FE75  43                 	db	67
  1639  00FE76  68                 	db	104
  1640  00FE77  61                 	db	97
  1641  00FE78  6E                 	db	110
  1642  00FE79  67                 	db	103
  1643  00FE7A  65                 	db	101
  1644  00FE7B  20                 	db	32
  1645  00FE7C  55                 	db	85
  1646  00FE7D  73                 	db	115
  1647  00FE7E  65                 	db	101
  1648  00FE7F  20                 	db	32
  1649  00FE80  45                 	db	69
  1650  00FE81  78                 	db	120
  1651  00FE82  61                 	db	97
  1652  00FE83  63                 	db	99
  1653  00FE84  74                 	db	116
  1654  00FE85  20                 	db	32
  1655  00FE86  20                 	db	32
  1656  00FE87  20                 	db	32
  1657  00FE88  20                 	db	32
  1658  00FE89  20                 	db	32
  1659  00FE8A  20                 	db	32
  1660  00FE8B  41                 	db	65
  1661  00FE8C  6D                 	db	109
  1662  00FE8D  6F                 	db	111
  1663  00FE8E  75                 	db	117
  1664  00FE8F  6E                 	db	110
  1665  00FE90  74                 	db	116
  1666  00FE91  21                 	db	33
  1667  00FE92  00                 	db	0
  1668  00FE93                     __end_of_nochange:
  1669                           	opt stack 0
  1670  00FE93                     _chanresetmsg:
  1671                           	opt stack 0
  1672  00FE93  52                 	db	82
  1673  00FE94  65                 	db	101
  1674  00FE95  73                 	db	115
  1675  00FE96  65                 	db	101
  1676  00FE97  74                 	db	116
  1677  00FE98  20                 	db	32
  1678  00FE99  74                 	db	116
  1679  00FE9A  6F                 	db	111
  1680  00FE9B  20                 	db	32
  1681  00FE9C  44                 	db	68
  1682  00FE9D  65                 	db	101
  1683  00FE9E  66                 	db	102
  1684  00FE9F  61                 	db	97
  1685  00FEA0  75                 	db	117
  1686  00FEA1  6C                 	db	108
  1687  00FEA2  74                 	db	116
  1688  00FEA3  20                 	db	32
  1689  00FEA4  20                 	db	32
  1690  00FEA5  20                 	db	32
  1691  00FEA6  20                 	db	32
  1692  00FEA7  53                 	db	83
  1693  00FEA8  74                 	db	116
  1694  00FEA9  61                 	db	97
  1695  00FEAA  72                 	db	114
  1696  00FEAB  74                 	db	116
  1697  00FEAC  20                 	db	32
  1698  00FEAD  41                 	db	65
  1699  00FEAE  67                 	db	103
  1700  00FEAF  61                 	db	97
  1701  00FEB0  69                 	db	105
  1702  00FEB1  6E                 	db	110
  1703  00FEB2  00                 	db	0
  1704  00FEB3                     __end_of_chanresetmsg:
  1705                           	opt stack 0
  1706  00FEB3                     _sensoffmsg:
  1707                           	opt stack 0
  1708  00FEB3  50                 	db	80
  1709  00FEB4  75                 	db	117
  1710  00FEB5  73                 	db	115
  1711  00FEB6  68                 	db	104
  1712  00FEB7  20                 	db	32
  1713  00FEB8  31                 	db	49
  1714  00FEB9  20                 	db	32
  1715  00FEBA  3D                 	db	61
  1716  00FEBB  20                 	db	32
  1717  00FEBC  4F                 	db	79
  1718  00FEBD  6E                 	db	110
  1719  00FEBE  2C                 	db	44
  1720  00FEBF  20                 	db	32
  1721  00FEC0  32                 	db	50
  1722  00FEC1  20                 	db	32
  1723  00FEC2  3D                 	db	61
  1724  00FEC3  20                 	db	32
  1725  00FEC4  4F                 	db	79
  1726  00FEC5  66                 	db	102
  1727  00FEC6  66                 	db	102
  1728  00FEC7  2C                 	db	44
  1729  00FEC8  20                 	db	32
  1730  00FEC9  38                 	db	56
  1731  00FECA  20                 	db	32
  1732  00FECB  3D                 	db	61
  1733  00FECC  20                 	db	32
  1734  00FECD  45                 	db	69
  1735  00FECE  78                 	db	120
  1736  00FECF  69                 	db	105
  1737  00FED0  74                 	db	116
  1738  00FED1  00                 	db	0
  1739  00FED2                     __end_of_sensoffmsg:
  1740                           	opt stack 0
  1741  00FED2                     _noteerr:
  1742                           	opt stack 0
  1743  00FED2  20                 	db	32
  1744  00FED3  20                 	db	32
  1745  00FED4  20                 	db	32
  1746  00FED5  4E                 	db	78
  1747  00FED6  6F                 	db	111
  1748  00FED7  74                 	db	116
  1749  00FED8  65                 	db	101
  1750  00FED9  20                 	db	32
  1751  00FEDA  65                 	db	101
  1752  00FEDB  72                 	db	114
  1753  00FEDC  72                 	db	114
  1754  00FEDD  6F                 	db	111
  1755  00FEDE  72                 	db	114
  1756  00FEDF  20                 	db	32
  1757  00FEE0  20                 	db	32
  1758  00FEE1  20                 	db	32
  1759  00FEE2  20                 	db	32
  1760  00FEE3  20                 	db	32
  1761  00FEE4  63                 	db	99
  1762  00FEE5  6F                 	db	111
  1763  00FEE6  64                 	db	100
  1764  00FEE7  65                 	db	101
  1765  00FEE8  20                 	db	32
  1766  00FEE9  3D                 	db	61
  1767  00FEEA  20                 	db	32
  1768  00FEEB  30                 	db	48
  1769  00FEEC  78                 	db	120
  1770  00FEED  00                 	db	0
  1771  00FEEE                     __end_of_noteerr:
  1772                           	opt stack 0
  1773  00FEEE                     _vendispmsg:
  1774                           	opt stack 0
  1775  00FEEE  55                 	db	85
  1776  00FEEF  73                 	db	115
  1777  00FEF0  65                 	db	101
  1778  00FEF1  20                 	db	32
  1779  00FEF2  62                 	db	98
  1780  00FEF3  75                 	db	117
  1781  00FEF4  74                 	db	116
  1782  00FEF5  74                 	db	116
  1783  00FEF6  6F                 	db	111
  1784  00FEF7  6E                 	db	110
  1785  00FEF8  20                 	db	32
  1786  00FEF9  2F                 	db	47
  1787  00FEFA  20                 	db	32
  1788  00FEFB  53                 	db	83
  1789  00FEFC  65                 	db	101
  1790  00FEFD  72                 	db	114
  1791  00FEFE  76                 	db	118
  1792  00FEFF  69                 	db	105
  1793  00FF00  63                 	db	99
  1794  00FF01  65                 	db	101
  1795  00FF02  00                 	db	0
  1796  00FF03                     __end_of_vendispmsg:
  1797                           	opt stack 0
  1798  00FF03                     _clrline:
  1799                           	opt stack 0
  1800  00FF03  20                 	db	32
  1801  00FF04  20                 	db	32
  1802  00FF05  20                 	db	32
  1803  00FF06  20                 	db	32
  1804  00FF07  20                 	db	32
  1805  00FF08  20                 	db	32
  1806  00FF09  20                 	db	32
  1807  00FF0A  20                 	db	32
  1808  00FF0B  20                 	db	32
  1809  00FF0C  20                 	db	32
  1810  00FF0D  20                 	db	32
  1811  00FF0E  20                 	db	32
  1812  00FF0F  20                 	db	32
  1813  00FF10  20                 	db	32
  1814  00FF11  20                 	db	32
  1815  00FF12  20                 	db	32
  1816  00FF13  20                 	db	32
  1817  00FF14  20                 	db	32
  1818  00FF15  20                 	db	32
  1819  00FF16  20                 	db	32
  1820  00FF17  00                 	db	0
  1821  00FF18                     __end_of_clrline:
  1822                           	opt stack 0
  1823  00FF18                     _timemsg:
  1824                           	opt stack 0
  1825  00FF18  54                 	db	84
  1826  00FF19  69                 	db	105
  1827  00FF1A  6D                 	db	109
  1828  00FF1B  65                 	db	101
  1829  00FF1C  20                 	db	32
  1830  00FF1D  69                 	db	105
  1831  00FF1E  6E                 	db	110
  1832  00FF1F  20                 	db	32
  1833  00FF20  31                 	db	49
  1834  00FF21  2F                 	db	47
  1835  00FF22  32                 	db	50
  1836  00FF23  73                 	db	115
  1837  00FF24  65                 	db	101
  1838  00FF25  63                 	db	99
  1839  00FF26  20                 	db	32
  1840  00FF27  3D                 	db	61
  1841  00FF28  20                 	db	32
  1842  00FF29  00                 	db	0
  1843  00FF2A                     __end_of_timemsg:
  1844                           	opt stack 0
  1845  00FF2A                     _pricesetmsg:
  1846                           	opt stack 0
  1847  00FF2A  20                 	db	32
  1848  00FF2B  20                 	db	32
  1849  00FF2C  20                 	db	32
  1850  00FF2D  50                 	db	80
  1851  00FF2E  72                 	db	114
  1852  00FF2F  69                 	db	105
  1853  00FF30  63                 	db	99
  1854  00FF31  65                 	db	101
  1855  00FF32  20                 	db	32
  1856  00FF33  73                 	db	115
  1857  00FF34  65                 	db	101
  1858  00FF35  74                 	db	116
  1859  00FF36  20                 	db	32
  1860  00FF37  6D                 	db	109
  1861  00FF38  6F                 	db	111
  1862  00FF39  64                 	db	100
  1863  00FF3A  65                 	db	101
  1864  00FF3B  00                 	db	0
  1865  00FF3C                     __end_of_pricesetmsg:
  1866                           	opt stack 0
  1867  00FF3C                     _creditclr:
  1868                           	opt stack 0
  1869  00FF3C  43                 	db	67
  1870  00FF3D  72                 	db	114
  1871  00FF3E  65                 	db	101
  1872  00FF3F  64                 	db	100
  1873  00FF40  69                 	db	105
  1874  00FF41  74                 	db	116
  1875  00FF42  73                 	db	115
  1876  00FF43  20                 	db	32
  1877  00FF44  43                 	db	67
  1878  00FF45  6C                 	db	108
  1879  00FF46  65                 	db	101
  1880  00FF47  61                 	db	97
  1881  00FF48  72                 	db	114
  1882  00FF49  65                 	db	101
  1883  00FF4A  64                 	db	100
  1884  00FF4B  00                 	db	0
  1885  00FF4C                     __end_of_creditclr:
  1886                           	opt stack 0
  1887  00FF4C                     _dacmsg:
  1888                           	opt stack 0
  1889  00FF4C  53                 	db	83
  1890  00FF4D  65                 	db	101
  1891  00FF4E  6E                 	db	110
  1892  00FF4F  73                 	db	115
  1893  00FF50  69                 	db	105
  1894  00FF51  74                 	db	116
  1895  00FF52  69                 	db	105
  1896  00FF53  76                 	db	118
  1897  00FF54  69                 	db	105
  1898  00FF55  74                 	db	116
  1899  00FF56  79                 	db	121
  1900  00FF57  20                 	db	32
  1901  00FF58  00                 	db	0
  1902  00FF59                     __end_of_dacmsg:
  1903                           	opt stack 0
  1904  00FF59                     _credits:
  1905                           	opt stack 0
  1906  00FF59  20                 	db	32
  1907  00FF5A  20                 	db	32
  1908  00FF5B  43                 	db	67
  1909  00FF5C  72                 	db	114
  1910  00FF5D  65                 	db	101
  1911  00FF5E  64                 	db	100
  1912  00FF5F  69                 	db	105
  1913  00FF60  74                 	db	116
  1914  00FF61  20                 	db	32
  1915  00FF62  3D                 	db	61
  1916  00FF63  20                 	db	32
  1917  00FF64  52                 	db	82
  1918  00FF65  00                 	db	0
  1919  00FF66                     __end_of_credits:
  1920                           	opt stack 0
  1921  00FF66                     _chanmsg:
  1922                           	opt stack 0
  1923  00FF66  20                 	db	32
  1924  00FF67  20                 	db	32
  1925  00FF68  20                 	db	32
  1926  00FF69  43                 	db	67
  1927  00FF6A  68                 	db	104
  1928  00FF6B  61                 	db	97
  1929  00FF6C  6E                 	db	110
  1930  00FF6D  6E                 	db	110
  1931  00FF6E  65                 	db	101
  1932  00FF6F  6C                 	db	108
  1933  00FF70  20                 	db	32
  1934  00FF71  00                 	db	0
  1935  00FF72                     __end_of_chanmsg:
  1936                           	opt stack 0
  1937  00FF72                     _linkmsg:
  1938                           	opt stack 0
  1939  00FF72  6C                 	db	108
  1940  00FF73  69                 	db	105
  1941  00FF74  6E                 	db	110
  1942  00FF75  6B                 	db	107
  1943  00FF76  65                 	db	101
  1944  00FF77  64                 	db	100
  1945  00FF78  20                 	db	32
  1946  00FF79  74                 	db	116
  1947  00FF7A  6F                 	db	111
  1948  00FF7B  20                 	db	32
  1949  00FF7C  3A                 	db	58
  1950  00FF7D  00                 	db	0
  1951  00FF7E                     __end_of_linkmsg:
  1952                           	opt stack 0
  1953  00FF7E                     _sensmsg:
  1954                           	opt stack 0
  1955  00FF7E  53                 	db	83
  1956  00FF7F  65                 	db	101
  1957  00FF80  6E                 	db	110
  1958  00FF81  73                 	db	115
  1959  00FF82  6F                 	db	111
  1960  00FF83  72                 	db	114
  1961  00FF84  20                 	db	32
  1962  00FF85  69                 	db	105
  1963  00FF86  73                 	db	115
  1964  00FF87  20                 	db	32
  1965  00FF88  00                 	db	0
  1966  00FF89                     __end_of_sensmsg:
  1967                           	opt stack 0
  1968  00FF89                     _cashinmsg:
  1969                           	opt stack 0
  1970  00FF89  43                 	db	67
  1971  00FF8A  61                 	db	97
  1972  00FF8B  73                 	db	115
  1973  00FF8C  68                 	db	104
  1974  00FF8D  20                 	db	32
  1975  00FF8E  69                 	db	105
  1976  00FF8F  6E                 	db	110
  1977  00FF90  20                 	db	32
  1978  00FF91  52                 	db	82
  1979  00FF92  00                 	db	0
  1980  00FF93                     __end_of_cashinmsg:
  1981                           	opt stack 0
  1982  00FF93                     _clrmsg:
  1983                           	opt stack 0
  1984  00FF93  20                 	db	32
  1985  00FF94  20                 	db	32
  1986  00FF95  20                 	db	32
  1987  00FF96  20                 	db	32
  1988  00FF97  20                 	db	32
  1989  00FF98  20                 	db	32
  1990  00FF99  20                 	db	32
  1991  00FF9A  20                 	db	32
  1992  00FF9B  20                 	db	32
  1993  00FF9C  00                 	db	0
  1994  00FF9D                     __end_of_clrmsg:
  1995                           	opt stack 0
  1996  00FF9D                     _disabled:
  1997                           	opt stack 0
  1998  00FF9D  20                 	db	32
  1999  00FF9E  64                 	db	100
  2000  00FF9F  69                 	db	105
  2001  00FFA0  73                 	db	115
  2002  00FFA1  61                 	db	97
  2003  00FFA2  62                 	db	98
  2004  00FFA3  6C                 	db	108
  2005  00FFA4  65                 	db	101
  2006  00FFA5  64                 	db	100
  2007  00FFA6  00                 	db	0
  2008  00FFA7                     __end_of_disabled:
  2009                           	opt stack 0
  2010  00FFA7                     _enabled:
  2011                           	opt stack 0
  2012  00FFA7  20                 	db	32
  2013  00FFA8  65                 	db	101
  2014  00FFA9  6E                 	db	110
  2015  00FFAA  61                 	db	97
  2016  00FFAB  62                 	db	98
  2017  00FFAC  6C                 	db	108
  2018  00FFAD  65                 	db	101
  2019  00FFAE  64                 	db	100
  2020  00FFAF  20                 	db	32
  2021  00FFB0  00                 	db	0
  2022  00FFB1                     __end_of_enabled:
  2023                           	opt stack 0
  2024  00FFB1                     _tenrand:
  2025                           	opt stack 0
  2026  00FFB1  20                 	db	32
  2027  00FFB2  20                 	db	32
  2028  00FFB3  20                 	db	32
  2029  00FFB4  52                 	db	82
  2030  00FFB5  31                 	db	49
  2031  00FFB6  30                 	db	48
  2032  00FFB7  20                 	db	32
  2033  00FFB8  20                 	db	32
  2034  00FFB9  00                 	db	0
  2035  00FFBA                     __end_of_tenrand:
  2036                           	opt stack 0
  2037  00FFBA                     _emptymsg:
  2038                           	opt stack 0
  2039  00FFBA  4E                 	db	78
  2040  00FFBB  6F                 	db	111
  2041  00FFBC  20                 	db	32
  2042  00FFBD  53                 	db	83
  2043  00FFBE  74                 	db	116
  2044  00FFBF  6F                 	db	111
  2045  00FFC0  63                 	db	99
  2046  00FFC1  6B                 	db	107
  2047  00FFC2  00                 	db	0
  2048  00FFC3                     __end_of_emptymsg:
  2049                           	opt stack 0
  2050  00FFC3                     _totalmsg:
  2051                           	opt stack 0
  2052  00FFC3  54                 	db	84
  2053  00FFC4  6F                 	db	111
  2054  00FFC5  74                 	db	116
  2055  00FFC6  61                 	db	97
  2056  00FFC7  6C                 	db	108
  2057  00FFC8  20                 	db	32
  2058  00FFC9  52                 	db	82
  2059  00FFCA  00                 	db	0
  2060  00FFCB                     __end_of_totalmsg:
  2061                           	opt stack 0
  2062  00FFCB                     _twohundredrand:
  2063                           	opt stack 0
  2064  00FFCB  20                 	db	32
  2065  00FFCC  20                 	db	32
  2066  00FFCD  52                 	db	82
  2067  00FFCE  32                 	db	50
  2068  00FFCF  30                 	db	48
  2069  00FFD0  30                 	db	48
  2070  00FFD1  20                 	db	32
  2071  00FFD2  00                 	db	0
  2072  00FFD3                     __end_of_twohundredrand:
  2073                           	opt stack 0
  2074  00FFD3                     _hundredrand:
  2075                           	opt stack 0
  2076  00FFD3  20                 	db	32
  2077  00FFD4  20                 	db	32
  2078  00FFD5  52                 	db	82
  2079  00FFD6  31                 	db	49
  2080  00FFD7  30                 	db	48
  2081  00FFD8  30                 	db	48
  2082  00FFD9  20                 	db	32
  2083  00FFDA  00                 	db	0
  2084  00FFDB                     __end_of_hundredrand:
  2085                           	opt stack 0
  2086  00FFDB                     _fiftyrand:
  2087                           	opt stack 0
  2088  00FFDB  20                 	db	32
  2089  00FFDC  20                 	db	32
  2090  00FFDD  52                 	db	82
  2091  00FFDE  35                 	db	53
  2092  00FFDF  30                 	db	48
  2093  00FFE0  20                 	db	32
  2094  00FFE1  20                 	db	32
  2095  00FFE2  00                 	db	0
  2096  00FFE3                     __end_of_fiftyrand:
  2097                           	opt stack 0
  2098  00FFE3                     _twentyrand:
  2099                           	opt stack 0
  2100  00FFE3  20                 	db	32
  2101  00FFE4  20                 	db	32
  2102  00FFE5  52                 	db	82
  2103  00FFE6  32                 	db	50
  2104  00FFE7  30                 	db	48
  2105  00FFE8  20                 	db	32
  2106  00FFE9  20                 	db	32
  2107  00FFEA  00                 	db	0
  2108  00FFEB                     __end_of_twentyrand:
  2109                           	opt stack 0
  2110  00FFEB                     _totalvendsm:
  2111                           	opt stack 0
  2112  00FFEB  56                 	db	86
  2113  00FFEC  65                 	db	101
  2114  00FFED  6E                 	db	110
  2115  00FFEE  64                 	db	100
  2116  00FFEF  73                 	db	115
  2117  00FFF0  20                 	db	32
  2118  00FFF1  00                 	db	0
  2119  00FFF2                     __end_of_totalvendsm:
  2120                           	opt stack 0
  2121  00FFF2                     _offmsg:
  2122                           	opt stack 0
  2123  00FFF2  4F                 	db	79
  2124  00FFF3  66                 	db	102
  2125  00FFF4  66                 	db	102
  2126  00FFF5  00                 	db	0
  2127  00FFF6                     __end_of_offmsg:
  2128                           	opt stack 0
  2129  00FFF6                     _onmsg:
  2130                           	opt stack 0
  2131  00FFF6  4F                 	db	79
  2132  00FFF7  6E                 	db	110
  2133  00FFF8  20                 	db	32
  2134  00FFF9  00                 	db	0
  2135  00FFFA                     __end_of_onmsg:
  2136                           	opt stack 0
  2137  00FFFA                     STR_1:
  2138                           
  2139                           ; BSR set to: 14
  2140  00FFFA  41                 	db	65	;'A'
  2141  00FFFB  54                 	db	84	;'T'
  2142  00FFFC  45                 	db	69	;'E'
  2143  00FFFD  30                 	db	48	;'0'
  2144  00FFFE  00                 	db	0
  2145  0000                     
  2146                           ; #config settings
  2147  00FFFF  00                 	db	0	; dummy byte at the end
  2148  0000                     
  2149                           	psect	nvBANK0
  2150  0000C5                     __pnvBANK0:
  2151                           	opt stack 0
  2152  0000C5                     _timer0ReloadVal16bit:
  2153                           	opt stack 0
  2154  0000C5                     	ds	2
  2155  0000C7                     _timer5ReloadVal:
  2156                           	opt stack 0
  2157  0000C7                     	ds	2
  2158  0000C9                     _timer3ReloadVal:
  2159                           	opt stack 0
  2160  0000C9                     	ds	2
  2161  0000CB                     _timer1ReloadVal:
  2162                           	opt stack 0
  2163  0000CB                     	ds	2
  2164  0000CD                     _count:
  2165                           	opt stack 0
  2166  0000CD                     	ds	1
  2167  0000                     _PPSLOCKbits	set	3744
  2168  0000                     _PPSLOCK	set	3744
  2169  0000                     _TX2REG	set	3738
  2170  0000                     _RC2REG	set	3737
  2171  0000                     _RC2STAbits	set	3741
  2172  0000                     _SP2BRGH	set	3740
  2173  0000                     _SP2BRGL	set	3739
  2174  0000                     _TX2STA	set	3742
  2175  0000                     _RC2STA	set	3741
  2176  0000                     _BAUD2CON	set	3743
  2177  0000                     _PIR4bits	set	3790
  2178  0000                     _PIR7bits	set	3793
  2179  0000                     _IPR0bits	set	3770
  2180  0000                     _PMD5	set	3814
  2181  0000                     _PMD4	set	3813
  2182  0000                     _PMD3	set	3812
  2183  0000                     _PMD2	set	3811
  2184  0000                     _PMD1	set	3810
  2185  0000                     _PMD0	set	3809
  2186  0000                     _OSCTUNE	set	3805
  2187  0000                     _OSCFRQ	set	3806
  2188  0000                     _OSCEN	set	3804
  2189  0000                     _OSCCON3	set	3802
  2190  0000                     _OSCCON1	set	3800
  2191  0000                     _PIR3bits	set	3789
  2192  0000                     _PIR0bits	set	3786
  2193  0000                     _RX2PPSbits	set	3725
  2194  0000                     _RB5PPS	set	3828
  2195  0000                     _RC6PPS	set	3837
  2196  0000                     _RX1PPSbits	set	3765
  2197  0000                     _PIE0bits	set	3778
  2198  0000                     _CMOUT	set	3901
  2199  0000                     _DAC1CON1	set	3892
  2200  0000                     _DAC1CON0	set	3891
  2201  0000                     _CMOUTbits	set	3901
  2202  0000                     _CM1PCH	set	3900
  2203  0000                     _CM1NCH	set	3899
  2204  0000                     _CM1CON1	set	3898
  2205  0000                     _CM1CON0	set	3897
  2206  0000                     _ODCOND	set	3876
  2207  0000                     _ODCONC	set	3871
  2208  0000                     _ODCONB	set	3863
  2209  0000                     _ODCONA	set	3855
  2210  0000                     _ODCONE	set	3884
  2211  0000                     _WPUC	set	3872
  2212  0000                     _WPUA	set	3856
  2213  0000                     _WPUB	set	3864
  2214  0000                     _WPUE	set	3885
  2215  0000                     _WPUD	set	3877
  2216  0000                     _ANSELA	set	3857
  2217  0000                     _ANSELE	set	3886
  2218  0000                     _ANSELD	set	3878
  2219  0000                     _ANSELB	set	3865
  2220  0000                     _ANSELC	set	3873
  2221  0000                     _PORTBbits	set	3982
  2222  0000                     _BAUD1CONbits	set	3999
  2223  0000                     _TX1STAbits	set	3998
  2224  0000                     _PORTA	set	3981
  2225  0000                     _LATCbits	set	3973
  2226  0000                     _LATAbits	set	3971
  2227  0000                     _PORTD	set	3984
  2228  0000                     _PR4	set	4022
  2229  0000                     _TMR4	set	4021
  2230  0000                     _T4CONbits	set	4023
  2231  0000                     _T4RSTbits	set	4026
  2232  0000                     _T4HLTbits	set	4024
  2233  0000                     _T4CON	set	4023
  2234  0000                     _T4TMR	set	4021
  2235  0000                     _T4PR	set	4022
  2236  0000                     _T4RST	set	4026
  2237  0000                     _T4HLT	set	4024
  2238  0000                     _T4CLKCON	set	4025
  2239  0000                     _PR2	set	4028
  2240  0000                     _TMR2	set	4027
  2241  0000                     _T2CONbits	set	4029
  2242  0000                     _T2RSTbits	set	4032
  2243  0000                     _T2HLTbits	set	4030
  2244  0000                     _T2CON	set	4029
  2245  0000                     _T2TMR	set	4027
  2246  0000                     _T2PR	set	4028
  2247  0000                     _T2RST	set	4032
  2248  0000                     _T2HLT	set	4030
  2249  0000                     _T2CLKCON	set	4031
  2250  0000                     _T0CON0bits	set	4053
  2251  0000                     _T0CON0	set	4053
  2252  0000                     _TMR0L	set	4051
  2253  0000                     _TMR0H	set	4052
  2254  0000                     _T0CON1	set	4054
  2255  0000                     _T5GCONbits	set	4036
  2256  0000                     _T5CONbits	set	4035
  2257  0000                     _T5CON	set	4035
  2258  0000                     _TMR5L	set	4033
  2259  0000                     _TMR5H	set	4034
  2260  0000                     _T5CLK	set	4038
  2261  0000                     _T5GATE	set	4037
  2262  0000                     _T5GCON	set	4036
  2263  0000                     _T3GCONbits	set	4042
  2264  0000                     _T3CONbits	set	4041
  2265  0000                     _T3CON	set	4041
  2266  0000                     _TMR3L	set	4039
  2267  0000                     _TMR3H	set	4040
  2268  0000                     _T3CLK	set	4044
  2269  0000                     _T3GATE	set	4043
  2270  0000                     _T3GCON	set	4042
  2271  0000                     _T1GCONbits	set	4048
  2272  0000                     _T1CONbits	set	4047
  2273  0000                     _T1CON	set	4047
  2274  0000                     _TMR1L	set	4045
  2275  0000                     _TMR1H	set	4046
  2276  0000                     _T1CLK	set	4050
  2277  0000                     _T1GATE	set	4049
  2278  0000                     _T1GCON	set	4048
  2279  0000                     _NVMDAT	set	3968
  2280  0000                     _NVMADRL	set	3966
  2281  0000                     _NVMADRH	set	3967
  2282  0000                     _NVMCON2	set	3970
  2283  0000                     _TABLAT	set	4085
  2284  0000                     _TBLPTRL	set	4086
  2285  0000                     _TBLPTRH	set	4087
  2286  0000                     _TBLPTRU	set	4088
  2287  0000                     _NVMCON1bits	set	3969
  2288  0000                     _INTCONbits	set	4082
  2289  0000                     _TX1REG	set	3994
  2290  0000                     _RC1REG	set	3993
  2291  0000                     _RC1STAbits	set	3997
  2292  0000                     _SP1BRGH	set	3996
  2293  0000                     _SP1BRGL	set	3995
  2294  0000                     _TX1STA	set	3998
  2295  0000                     _RC1STA	set	3997
  2296  0000                     _BAUD1CON	set	3999
  2297  0000                     _TRISD	set	3979
  2298  0000                     _TRISC	set	3978
  2299  0000                     _TRISB	set	3977
  2300  0000                     _TRISA	set	3976
  2301  0000                     _TRISE	set	3980
  2302  0000                     _LATC	set	3973
  2303  0000                     _LATB	set	3972
  2304  0000                     _LATA	set	3971
  2305  0000                     _LATD	set	3974
  2306  0000                     _LATE	set	3975
  2307  0000                     _LATA6	set	31774
  2308  0000                     _LATA7	set	31775
  2309                           
  2310                           	psect	cinit
  2311  01241E                     __pcinit:
  2312                           	opt stack 0
  2313  01241E                     start_initialization:
  2314                           	opt stack 0
  2315  01241E                     __initialization:
  2316                           	opt stack 0
  2317                           
  2318                           ; Initialize objects allocated to BANK0 (1 bytes)
  2319                           ; load TBLPTR registers with __pidataBANK0
  2320  01241E  0EAA               	movlw	low __pidataBANK0
  2321  012420  6EF6               	movwf	tblptrl,c
  2322  012422  0E2C               	movlw	high __pidataBANK0
  2323  012424  6EF7               	movwf	tblptrh,c
  2324  012426  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2325  012428  6EF8               	movwf	tblptru,c
  2326  01242A  0009               	tblrd		*+	;fetch initializer
  2327  01242C  CFF5 F0CE          	movff	tablat,__pdataBANK0
  2328                           
  2329                           ; Initialize objects allocated to COMRAMh (1 bytes)
  2330                           ; load TBLPTR registers with __pidataCOMRAMh
  2331  012430  0EAB               	movlw	low __pidataCOMRAMh
  2332  012432  6EF6               	movwf	tblptrl,c
  2333  012434  0E2C               	movlw	high __pidataCOMRAMh
  2334  012436  6EF7               	movwf	tblptrh,c
  2335  012438  0E01               	movlw	low (__pidataCOMRAMh shr (0+16))
  2336  01243A  6EF8               	movwf	tblptru,c
  2337  01243C  0009               	tblrd		*+	;fetch initializer
  2338  01243E  CFF5 F04D          	movff	tablat,__pdataCOMRAMh
  2339                           
  2340                           ; Clear objects allocated to BANK0 (82 bytes)
  2341  012442  EE00  F060         	lfsr	0,__pbssBANK0
  2342  012446  0E52               	movlw	82
  2343  012448                     clear_0:
  2344  012448  6AEE               	clrf	postinc0,c
  2345  01244A  06E8               	decf	wreg,f,c
  2346  01244C  E1FD               	bnz	clear_0
  2347                           
  2348                           ; Clear objects allocated to COMRAMh (32 bytes)
  2349  01244E  EE00  F02D         	lfsr	0,__pbssCOMRAMh
  2350  012452  0E20               	movlw	32
  2351  012454                     clear_1:
  2352  012454  6AEE               	clrf	postinc0,c
  2353  012456  06E8               	decf	wreg,f,c
  2354  012458  E1FD               	bnz	clear_1
  2355                           
  2356                           ; Clear objects allocated to COMRAMl (1 bytes)
  2357  01245A  6A4E               	clrf	__pbssCOMRAMl& (0+255),c
  2358  01245C                     end_of_initialization:
  2359                           	opt stack 0
  2360  01245C                     __end_of__initialization:
  2361                           	opt stack 0
  2362  01245C  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2363  01245E  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2364  012460  0100               	movlb	0
  2365  012462  EF9B  F081         	goto	_main	;jump to C main() function
  2366                           tblptru	equ	0xFF8
  2367                           tblptrh	equ	0xFF7
  2368                           tblptrl	equ	0xFF6
  2369                           tablat	equ	0xFF5
  2370                           postinc0	equ	0xFEE
  2371                           wreg	equ	0xFE8
  2372                           
  2373                           	psect	bssCOMRAMh
  2374  00002D                     __pbssCOMRAMh:
  2375                           	opt stack 0
  2376  00002D                     _venflags:
  2377                           	opt stack 0
  2378  00002D                     	ds	3
  2379  000030                     _channel:
  2380                           	opt stack 0
  2381  000030                     	ds	1
  2382  000031                     _errormask:
  2383                           	opt stack 0
  2384  000031                     	ds	1
  2385  000032                     _chanmask:
  2386                           	opt stack 0
  2387  000032                     	ds	1
  2388  000033                     _lowprice:
  2389                           	opt stack 0
  2390  000033                     	ds	1
  2391  000034                     _highprice:
  2392                           	opt stack 0
  2393  000034                     	ds	1
  2394  000035                     _senspos:
  2395                           	opt stack 0
  2396  000035                     	ds	1
  2397  000036                     _sensorval:
  2398                           	opt stack 0
  2399  000036                     	ds	1
  2400  000037                     _vendprice:
  2401                           	opt stack 0
  2402  000037                     	ds	1
  2403  000038                     _buttons:
  2404                           	opt stack 0
  2405  000038                     	ds	1
  2406  000039                     _cash:
  2407                           	opt stack 0
  2408  000039                     	ds	1
  2409  00003A                     _credit:
  2410                           	opt stack 0
  2411  00003A                     	ds	1
  2412  00003B                     _outcoins:
  2413                           	opt stack 0
  2414  00003B                     	ds	1
  2415  00003C                     _change:
  2416                           	opt stack 0
  2417  00003C                     	ds	1
  2418  00003D                     _noteen_byte:
  2419                           	opt stack 0
  2420  00003D                     	ds	1
  2421  00003E                     _noteen:
  2422                           	opt stack 0
  2423  00003E                     	ds	1
  2424  00003F                     _mdbflags:
  2425                           	opt stack 0
  2426  00003F                     	ds	1
  2427  000040                     _chkbyte:
  2428                           	opt stack 0
  2429  000040                     	ds	1
  2430  000041                     _notebyte:
  2431                           	opt stack 0
  2432  000041                     	ds	1
  2433  000042                     _mcount:
  2434                           	opt stack 0
  2435  000042                     	ds	1
  2436  000043                     _dspposition:
  2437                           	opt stack 0
  2438  000043                     	ds	1
  2439  000044                     _ercode:
  2440                           	opt stack 0
  2441  000044                     	ds	1
  2442  000045                     _stradd:
  2443                           	opt stack 0
  2444  000045                     	ds	1
  2445  000046                     _lcdata:
  2446                           	opt stack 0
  2447  000046                     	ds	1
  2448  000047                     _bflag:
  2449                           	opt stack 0
  2450  000047                     	ds	1
  2451  000048                     _pnvcash:
  2452                           	opt stack 0
  2453  000048                     	ds	3
  2454  00004B                     _pvcash:
  2455                           	opt stack 0
  2456  00004B                     	ds	2
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           
  2464                           	psect	dataCOMRAMh
  2465  00004D                     __pdataCOMRAMh:
  2466                           	opt stack 0
  2467  00004D                     _notenum:
  2468                           	opt stack 0
  2469  00004D                     	ds	1
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           
  2477                           	psect	bssCOMRAMl
  2478  00004E                     __pbssCOMRAMl:
  2479                           	opt stack 0
  2480  00004E                     _cctflags:
  2481                           	opt stack 0
  2482  00004E                     	ds	1
  2483                           tblptru	equ	0xFF8
  2484                           tblptrh	equ	0xFF7
  2485                           tblptrl	equ	0xFF6
  2486                           tablat	equ	0xFF5
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           
  2490                           	psect	bssBANK0
  2491  000060                     __pbssBANK0:
  2492                           	opt stack 0
  2493  000060                     _mdbdata:
  2494                           	opt stack 0
  2495  000060                     	ds	31
  2496  00007F                     _pricevend:
  2497                           	opt stack 0
  2498  00007F                     	ds	8
  2499  000087                     _dummy:
  2500                           	opt stack 0
  2501  000087                     	ds	8
  2502  00008F                     _tvends:
  2503                           	opt stack 0
  2504  00008F                     	ds	8
  2505  000097                     _nvcash:
  2506                           	opt stack 0
  2507  000097                     	ds	3
  2508  00009A                     _hpserial:
  2509                           	opt stack 0
  2510  00009A                     	ds	3
  2511  00009D                     _hexnum:
  2512                           	opt stack 0
  2513  00009D                     	ds	3
  2514  0000A0                     _vcashout:
  2515                           	opt stack 0
  2516  0000A0                     	ds	2
  2517  0000A2                     _vcash:
  2518                           	opt stack 0
  2519  0000A2                     	ds	2
  2520  0000A4                     _dbcount:
  2521                           	opt stack 0
  2522  0000A4                     	ds	2
  2523  0000A6                     _gsmbyte:
  2524                           	opt stack 0
  2525  0000A6                     	ds	1
  2526  0000A7                     _venderr:
  2527                           	opt stack 0
  2528  0000A7                     	ds	1
  2529  0000A8                     _senschk:
  2530                           	opt stack 0
  2531  0000A8                     	ds	1
  2532  0000A9                     _command:
  2533                           	opt stack 0
  2534  0000A9                     	ds	1
  2535  0000AA                     _nobytes:
  2536                           	opt stack 0
  2537  0000AA                     	ds	1
  2538  0000AB                     _dest:
  2539                           	opt stack 0
  2540  0000AB                     	ds	1
  2541  0000AC                     _mdbtxbyte:
  2542                           	opt stack 0
  2543  0000AC                     	ds	1
  2544  0000AD                     _errorflags:
  2545                           	opt stack 0
  2546  0000AD                     	ds	1
  2547  0000AE                     _slvadd:
  2548                           	opt stack 0
  2549  0000AE                     	ds	1
  2550  0000AF                     _lcdaddress:
  2551                           	opt stack 0
  2552  0000AF                     	ds	1
  2553  0000B0                     _lcdline:
  2554                           	opt stack 0
  2555  0000B0                     	ds	1
  2556  0000B1                     _lcdfunc:
  2557                           	opt stack 0
  2558  0000B1                     	ds	1
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           postinc0	equ	0xFEE
  2564                           wreg	equ	0xFE8
  2565                           
  2566                           	psect	dataBANK0
  2567  0000CE                     __pdataBANK0:
  2568                           	opt stack 0
  2569  0000CE                     _hopercount:
  2570                           	opt stack 0
  2571  0000CE                     	ds	1
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           postinc0	equ	0xFEE
  2577                           wreg	equ	0xFE8
  2578                           
  2579                           	psect	cstackBANK0
  2580  0000B2                     __pcstackBANK0:
  2581                           	opt stack 0
  2582  0000B2                     ??_Link_chan:
  2583  0000B2                     off_sens@channel:
  2584                           	opt stack 0
  2585  0000B2                     dispense@sensmask:
  2586                           	opt stack 0
  2587  0000B2                     Reset_settings@chanlinkbits:
  2588                           	opt stack 0
  2589  0000B2                     displ_hex@value:
  2590                           	opt stack 0
  2591                           
  2592                           ; 8 bytes @ 0x0
  2593  0000B2                     	ds	1
  2594  0000B3                     off_sens@chanbit:
  2595                           	opt stack 0
  2596  0000B3                     dispense@chanel:
  2597                           	opt stack 0
  2598                           
  2599                           ; 1 bytes @ 0x1
  2600  0000B3                     	ds	1
  2601  0000B4                     ??_price_check:
  2602  0000B4                     Link_chan@chanbit:
  2603                           	opt stack 0
  2604  0000B4                     off_sens@senseflags:
  2605                           	opt stack 0
  2606  0000B4                     Reset_settings@chantimebits:
  2607                           	opt stack 0
  2608                           
  2609                           ; 2 bytes @ 0x2
  2610  0000B4                     	ds	1
  2611  0000B5                     ??_Sens_off:
  2612  0000B5                     Link_chan@channel:
  2613                           	opt stack 0
  2614                           
  2615                           ; 1 bytes @ 0x3
  2616  0000B5                     	ds	1
  2617  0000B6                     Link_chan@linkflags:
  2618                           	opt stack 0
  2619  0000B6                     price_check@savechan:
  2620                           	opt stack 0
  2621                           
  2622                           ; 1 bytes @ 0x4
  2623  0000B6                     	ds	1
  2624  0000B7                     ??_Chan_link:
  2625  0000B7                     price_check@savebut:
  2626                           	opt stack 0
  2627                           
  2628                           ; 1 bytes @ 0x5
  2629  0000B7                     	ds	1
  2630  0000B8                     price_check@chanlinkbit:
  2631                           	opt stack 0
  2632                           
  2633                           ; 1 bytes @ 0x6
  2634  0000B8                     	ds	1
  2635  0000B9                     price_check@i:
  2636                           	opt stack 0
  2637                           
  2638                           ; 1 bytes @ 0x7
  2639  0000B9                     	ds	1
  2640  0000BA                     displ_hex@hexnumsave:
  2641                           	opt stack 0
  2642                           
  2643                           ; 3 bytes @ 0x8
  2644  0000BA                     	ds	3
  2645  0000BD                     displ_hex@i:
  2646                           	opt stack 0
  2647                           
  2648                           ; 1 bytes @ 0xB
  2649  0000BD                     	ds	1
  2650  0000BE                     ??_Vend_timeset:
  2651  0000BE                     set_price@buttons:
  2652                           	opt stack 0
  2653                           
  2654                           ; 1 bytes @ 0xC
  2655  0000BE                     	ds	1
  2656  0000BF                     set_price@channel:
  2657                           	opt stack 0
  2658                           
  2659                           ; 1 bytes @ 0xD
  2660  0000BF                     	ds	1
  2661  0000C0                     Vend_timeset@chantime:
  2662                           	opt stack 0
  2663                           
  2664                           ; 1 bytes @ 0xE
  2665  0000C0                     	ds	1
  2666  0000C1                     Vend_timeset@channel:
  2667                           	opt stack 0
  2668                           
  2669                           ; 1 bytes @ 0xF
  2670  0000C1                     	ds	1
  2671  0000C2                     ??_main:
  2672                           
  2673                           ; 1 bytes @ 0x10
  2674  0000C2                     	ds	2
  2675  0000C4                     main@channel:
  2676                           	opt stack 0
  2677                           
  2678                           ; 1 bytes @ 0x12
  2679  0000C4                     	ds	1
  2680                           tblptru	equ	0xFF8
  2681                           tblptrh	equ	0xFF7
  2682                           tblptrl	equ	0xFF6
  2683                           tablat	equ	0xFF5
  2684                           postinc0	equ	0xFEE
  2685                           wreg	equ	0xFE8
  2686                           
  2687                           	psect	cstackCOMRAMh
  2688  00000B                     __pcstackCOMRAMh:
  2689                           	opt stack 0
  2690  00000B                     ??_INTERRUPT_InterruptManagerHigh:
  2691  00000B                     
  2692                           ; 1 bytes @ 0x0
  2693  00000B                     	ds	18
  2694  00001D                     ??_TMR0_Initialize:
  2695  00001D                     ??_TMR3_Initialize:
  2696  00001D                     ??_TMR5_Initialize:
  2697  00001D                     ??_TMR1_Initialize:
  2698  00001D                     ??_butin:
  2699  00001D                     ??_switch_read:
  2700  00001D                     ??_Reset_hopper:
  2701  00001D                     ?___wmul:
  2702                           	opt stack 0
  2703  00001D                     ?___ltdiv:
  2704                           	opt stack 0
  2705  00001D                     ?___ltmod:
  2706                           	opt stack 0
  2707  00001D                     EUSART1_Write@txData:
  2708                           	opt stack 0
  2709  00001D                     DAC1_SetOutput@inputData:
  2710                           	opt stack 0
  2711  00001D                     EUSART2_Write@txData:
  2712                           	opt stack 0
  2713  00001D                     read_busy@savelate:
  2714                           	opt stack 0
  2715  00001D                     Read_Service@senval:
  2716                           	opt stack 0
  2717  00001D                     get_channel@butons:
  2718                           	opt stack 0
  2719  00001D                     ___lbdiv@divisor:
  2720                           	opt stack 0
  2721  00001D                     DATAEE_WriteByte@bAdd:
  2722                           	opt stack 0
  2723  00001D                     DATAEE_ReadByte@bAdd:
  2724                           	opt stack 0
  2725  00001D                     TMR0_Write16bitTimer@timerVal:
  2726                           	opt stack 0
  2727  00001D                     ___wmul@multiplier:
  2728                           	opt stack 0
  2729  00001D                     ___ltdiv@dividend:
  2730                           	opt stack 0
  2731  00001D                     ___ltmod@dividend:
  2732                           	opt stack 0
  2733                           
  2734                           ; 3 bytes @ 0x12
  2735  00001D                     	ds	1
  2736  00001E                     read_busy@savelatd:
  2737                           	opt stack 0
  2738  00001E                     butin@butons:
  2739                           	opt stack 0
  2740  00001E                     mdb_transmit@txbyte:
  2741                           	opt stack 0
  2742  00001E                     find_highprice@i:
  2743                           	opt stack 0
  2744  00001E                     find_lowprice@i:
  2745                           	opt stack 0
  2746  00001E                     gsm_transmit@txbyte:
  2747                           	opt stack 0
  2748  00001E                     ___lbdiv@dividend:
  2749                           	opt stack 0
  2750                           
  2751                           ; 1 bytes @ 0x13
  2752  00001E                     	ds	1
  2753  00001F                     ??_gsm_init:
  2754  00001F                     ??_mdb_unlock:
  2755  00001F                     ??_butindb:
  2756  00001F                     ??_init_pricestore:
  2757  00001F                     ??_Init_vendmem:
  2758  00001F                     DATAEE_WriteByte@bData:
  2759                           	opt stack 0
  2760  00001F                     lcd_write@savelatd:
  2761                           	opt stack 0
  2762  00001F                     ___lbdiv@counter:
  2763                           	opt stack 0
  2764  00001F                     Read_NVstore@storeadd:
  2765                           	opt stack 0
  2766  00001F                     ___wmul@multiplicand:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x14
  2770  00001F                     	ds	1
  2771  000020                     ??_vend_nosense:
  2772  000020                     DATAEE_WriteByte@GIEBitValue:
  2773                           	opt stack 0
  2774  000020                     lcd_write@lcdata:
  2775                           	opt stack 0
  2776  000020                     ___lbdiv@quotient:
  2777                           	opt stack 0
  2778  000020                     ___ltdiv@divisor:
  2779                           	opt stack 0
  2780  000020                     ___ltmod@divisor:
  2781                           	opt stack 0
  2782                           
  2783                           ; 3 bytes @ 0x15
  2784  000020                     	ds	1
  2785  000021                     ??_update_vends:
  2786  000021                     ??_disable_channel:
  2787  000021                     lcd_dispadd@lcdaddress:
  2788                           	opt stack 0
  2789  000021                     credit_subtract@credit:
  2790                           	opt stack 0
  2791  000021                     butindb@butval:
  2792                           	opt stack 0
  2793  000021                     init_pricestore@i:
  2794                           	opt stack 0
  2795  000021                     Init_vendmem@chanlinkbits:
  2796                           	opt stack 0
  2797  000021                     Write_NVstore@storeadd:
  2798                           	opt stack 0
  2799  000021                     Read_NVstore@storemem:
  2800                           	opt stack 0
  2801  000021                     Clear_Totals@eeaddress:
  2802                           	opt stack 0
  2803  000021                     ___wmul@product:
  2804                           	opt stack 0
  2805                           
  2806                           ; 2 bytes @ 0x16
  2807  000021                     	ds	1
  2808  000022                     lcd_dispadd@lcdatasave:
  2809                           	opt stack 0
  2810  000022                     butindb@butt:
  2811                           	opt stack 0
  2812  000022                     init_mdbdata@initdata:
  2813                           	opt stack 0
  2814  000022                     vend_nosense@chanel:
  2815                           	opt stack 0
  2816                           
  2817                           ; 1 bytes @ 0x17
  2818  000022                     	ds	1
  2819  000023                     ??_set_motortime:
  2820  000023                     lcd_writeC@lcdata:
  2821                           	opt stack 0
  2822  000023                     Read_NVstore@storesize:
  2823                           	opt stack 0
  2824  000023                     init_mdbdata@i:
  2825                           	opt stack 0
  2826  000023                     disable_channel@channel:
  2827                           	opt stack 0
  2828  000023                     update_vends@x:
  2829                           	opt stack 0
  2830  000023                     ___ltmod@counter:
  2831                           	opt stack 0
  2832  000023                     Init_vendmem@chanlink:
  2833                           	opt stack 0
  2834  000023                     Write_NVstore@storemem:
  2835                           	opt stack 0
  2836  000023                     ___ltdiv@quotient:
  2837                           	opt stack 0
  2838                           
  2839                           ; 3 bytes @ 0x18
  2840  000023                     	ds	1
  2841  000024                     ??_displ_code:
  2842  000024                     lcd_test@character:
  2843                           	opt stack 0
  2844  000024                     Read_NVstore@i:
  2845                           	opt stack 0
  2846  000024                     mdb_comm@mcount:
  2847                           	opt stack 0
  2848  000024                     disable_channel@errormask:
  2849                           	opt stack 0
  2850  000024                     update_vends@chanel:
  2851                           	opt stack 0
  2852  000024                     lcd_string@lcdstring:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0x19
  2856  000024                     	ds	1
  2857  000025                     ??_lcd_init:
  2858  000025                     Init_vendmem@i:
  2859                           	opt stack 0
  2860  000025                     Write_NVstore@storesize:
  2861                           	opt stack 0
  2862  000025                     mdb_comm@slvadd:
  2863                           	opt stack 0
  2864  000025                     set_motortime@chanel:
  2865                           	opt stack 0
  2866                           
  2867                           ; 1 bytes @ 0x1A
  2868  000025                     	ds	1
  2869  000026                     displ_code@ercode:
  2870                           	opt stack 0
  2871  000026                     lcd_string@lcdline:
  2872                           	opt stack 0
  2873  000026                     Write_NVstore@i:
  2874                           	opt stack 0
  2875  000026                     mdb_comm@i:
  2876                           	opt stack 0
  2877  000026                     set_motortime@i:
  2878                           	opt stack 0
  2879  000026                     ___ltdiv@counter:
  2880                           	opt stack 0
  2881                           
  2882                           ; 1 bytes @ 0x1B
  2883  000026                     	ds	1
  2884  000027                     ??_lcd_string:
  2885  000027                     ??_mdb_reset:
  2886  000027                     Update_cashaudit@addcash:
  2887                           	opt stack 0
  2888  000027                     mdb_poll@i:
  2889                           	opt stack 0
  2890  000027                     Update_coinsout@coinsout:
  2891                           	opt stack 0
  2892  000027                     set_motortime@time:
  2893                           	opt stack 0
  2894  000027                     displ_hex@hexnum:
  2895                           	opt stack 0
  2896                           
  2897                           ; 3 bytes @ 0x1C
  2898  000027                     	ds	1
  2899  000028                     ??_hopper_pay:
  2900  000028                     credit_add@credit:
  2901                           	opt stack 0
  2902  000028                     mdb_reset@i:
  2903                           	opt stack 0
  2904                           
  2905                           ; 1 bytes @ 0x1D
  2906  000028                     	ds	1
  2907  000029                     ??_Clear_cred:
  2908  000029                     ??_Reset_settings:
  2909  000029                     ??_vend_dispense:
  2910  000029                     displ_lflags@linkflgs:
  2911                           	opt stack 0
  2912  000029                     displ_sflags@chanel:
  2913                           	opt stack 0
  2914  000029                     displ_nendis@note2disp:
  2915                           	opt stack 0
  2916  000029                     mdb_reset@i_3986:
  2917                           	opt stack 0
  2918  000029                     hopper_pay@change:
  2919                           	opt stack 0
  2920  000029                     displ_note@notestring:
  2921                           	opt stack 0
  2922                           
  2923                           ; 2 bytes @ 0x1E
  2924  000029                     	ds	1
  2925  00002A                     ??_mdb_init:
  2926  00002A                     ??_Audit:
  2927  00002A                     displ_sens@dmsgpos:
  2928                           	opt stack 0
  2929  00002A                     displ_lflags@chanel:
  2930                           	opt stack 0
  2931  00002A                     displ_sflags@chanbit:
  2932                           	opt stack 0
  2933  00002A                     displ_time@channel:
  2934                           	opt stack 0
  2935  00002A                     displ_nendis@x:
  2936                           	opt stack 0
  2937  00002A                     displ_credit@cash:
  2938                           	opt stack 0
  2939  00002A                     displ_price@vendprice:
  2940                           	opt stack 0
  2941  00002A                     Update_Hopcoin@direction:
  2942                           	opt stack 0
  2943  00002A                     give_change@paycash:
  2944                           	opt stack 0
  2945                           
  2946                           ; 1 bytes @ 0x1F
  2947  00002A                     	ds	1
  2948  00002B                     ??_set_price:
  2949  00002B                     displ_sens@smsgpos:
  2950                           	opt stack 0
  2951  00002B                     displ_lflags@lchan:
  2952                           	opt stack 0
  2953  00002B                     displ_sflags@senseflags:
  2954                           	opt stack 0
  2955  00002B                     displ_time@motortime:
  2956                           	opt stack 0
  2957  00002B                     Update_Hopcoin@newval:
  2958                           	opt stack 0
  2959  00002B                     enable_notes@notenum:
  2960                           	opt stack 0
  2961  00002B                     give_change@i:
  2962                           	opt stack 0
  2963  00002B                     vend_dispense@chanel:
  2964                           	opt stack 0
  2965                           
  2966                           ; 1 bytes @ 0x20
  2967  00002B                     	ds	1
  2968  00002C                     Audit@vends:
  2969                           	opt stack 0
  2970  00002C                     Hopper_coin@coinval:
  2971                           	opt stack 0
  2972  00002C                     Sensor_set@dacpos:
  2973                           	opt stack 0
  2974  00002C                     mdb_init@i:
  2975                           	opt stack 0
  2976                           
  2977                           ; 1 bytes @ 0x21
  2978  00002C                     	ds	1
  2979  00002D                     tblptru	equ	0xFF8
  2980                           tblptrh	equ	0xFF7
  2981                           tblptrl	equ	0xFF6
  2982                           tablat	equ	0xFF5
  2983                           postinc0	equ	0xFEE
  2984                           wreg	equ	0xFE8
  2985                           
  2986                           ; 1 bytes @ 0x22
  2987                           
  2988                           	psect	cstackCOMRAMl
  2989  000000                     __pcstackCOMRAMl:
  2990                           	opt stack 0
  2991  000000                     tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           
  2998                           ; 1 bytes @ 0x0
  2999 ;;
  3000 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3001 ;;
  3002 ;; *************** function _main *****************
  3003 ;; Defined at:
  3004 ;;		line 58 in file "main.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  channel         1   18[BANK0 ] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;Total ram usage:        3 bytes
  3023 ;; Hardware stack levels required when called:   13
  3024 ;; This function calls:
  3025 ;;		_CMP1_GetOutputStatus
  3026 ;;		_DATAEE_ReadByte
  3027 ;;		_SYSTEM_Initialize
  3028 ;;		_butin
  3029 ;;		_credit_add
  3030 ;;		_displ_credit
  3031 ;;		_displ_nochange
  3032 ;;		_displ_noteer
  3033 ;;		_displ_price
  3034 ;;		_enter_service
  3035 ;;		_get_channel
  3036 ;;		_gsm_init
  3037 ;;		_lcd_init
  3038 ;;		_lcd_string
  3039 ;;		_mdb_init
  3040 ;;		_mdb_poll
  3041 ;;		_price_check
  3042 ;;		_vend_init
  3043 ;; This function is called by:
  3044 ;;		Startup code after reset
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text0
  3049  010336                     __ptext0:
  3050                           	opt stack 0
  3051  010336                     _main:
  3052                           	opt stack 18
  3053                           
  3054                           ;main.c: 61: SYSTEM_Initialize();
  3055                           
  3056                           ;incstack = 0
  3057  010336  EC6C  F093         	call	_SYSTEM_Initialize	;wreg free
  3058                           
  3059                           ;main.c: 63: lcd_init();
  3060  01033A  ECD2  F08A         	call	_lcd_init	;wreg free
  3061                           
  3062                           ;main.c: 64: gsm_init();
  3063  01033E  ECBF  F094         	call	_gsm_init	;wreg free
  3064                           
  3065                           ;main.c: 65: vend_init();
  3066  010342  ECEE  F086         	call	_vend_init	;wreg free
  3067  010346                     l1083:
  3068  010346  F000               	nop		;# 
  3069                           
  3070                           ;main.c: 71: DAC1CON1 = 0x01;
  3071  010348  0E01               	movlw	1
  3072  01034A  010F               	movlb	15	; () banked
  3073  01034C  6F34               	movwf	52,b	;volatile
  3074                           
  3075                           ; BSR set to: 15
  3076                           ;main.c: 72: if (!CMP1_GetOutputStatus())
  3077  01034E  EC0E  F096         	call	_CMP1_GetOutputStatus	;wreg free
  3078  010352  0900               	iorlw	0
  3079  010354  B4D8               	btfsc	status,2,c
  3080                           
  3081                           ;main.c: 73: {
  3082                           ;main.c: 74: venflags.service = 1;
  3083  010356  8E2D               	bsf	_venflags,7,c
  3084                           
  3085                           ;main.c: 76: }
  3086                           ;main.c: 77: DAC1CON1 = sensorval;
  3087  010358  C036  FF34         	movff	_sensorval,3892	;volatile
  3088                           
  3089                           ;main.c: 79: if(venflags.service == 1)
  3090  01035C  BE2D               	btfsc	_venflags,7,c
  3091                           
  3092                           ;main.c: 80: {
  3093                           ;main.c: 81: enter_service();
  3094  01035E  EC28  F08B         	call	_enter_service	;wreg free
  3095                           
  3096                           ;main.c: 82: }
  3097                           ;main.c: 84: if(venflags.inscoin == 1)
  3098  010362  A42D               	btfss	_venflags,2,c
  3099  010364  D013               	goto	l1087
  3100                           
  3101                           ;main.c: 85: {
  3102                           ;main.c: 86: lcd_string(inscoin, line1);
  3103  010366  0E26               	movlw	low _inscoin
  3104  010368  6E24               	movwf	lcd_string@lcdstring,c
  3105  01036A  0EFE               	movlw	high _inscoin
  3106  01036C  6E25               	movwf	lcd_string@lcdstring+1,c
  3107  01036E  0E4A               	movlw	low _line1
  3108  010370  6EF6               	movwf	tblptrl,c
  3109  010372                     	if	1	;There is more than 1 active tblptr byte
  3110  010372  0EFC               	movlw	high _line1
  3111  010374  6EF7               	movwf	tblptrh,c
  3112  010376                     	endif
  3113  010376                     	if	1	;There are 3 active tblptr bytes
  3114  010376  0E00               	movlw	low (_line1 shr (0+16))
  3115  010378  6EF8               	movwf	tblptru,c
  3116  01037A                     	endif
  3117  01037A  0008               	tblrd		*
  3118  01037C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3119  010380  EC78  F08A         	call	_lcd_string	;wreg free
  3120                           
  3121                           ;main.c: 87: venflags.inscoin = 0;
  3122  010384  942D               	bcf	_venflags,2,c
  3123                           
  3124                           ;main.c: 88: if(venflags.nochange)
  3125  010386  B62D               	btfsc	_venflags,3,c
  3126                           
  3127                           ;main.c: 89: {
  3128                           ;main.c: 90: displ_nochange();
  3129  010388  EC2B  F094         	call	_displ_nochange	;wreg free
  3130  01038C                     l1087:
  3131                           
  3132                           ;main.c: 91: }
  3133                           ;main.c: 92: }
  3134                           ;main.c: 93: if(venflags.initialrun == 1)
  3135  01038C  BA2D               	btfsc	_venflags,5,c
  3136                           
  3137                           ;main.c: 94: {
  3138                           ;main.c: 95: venflags.initialrun = 0;
  3139  01038E  9A2D               	bcf	_venflags,5,c
  3140                           
  3141                           ;main.c: 97: }
  3142                           ;main.c: 98: if(venflags.credisplay == 1)
  3143  010390  A82D               	btfss	_venflags,4,c
  3144  010392  D005               	goto	l1090
  3145                           
  3146                           ;main.c: 99: {
  3147                           ;main.c: 100: displ_credit();
  3148  010394  EC45  F094         	call	_displ_credit	;wreg free
  3149                           
  3150                           ;main.c: 101: if(venflags.nochange)
  3151  010398  B62D               	btfsc	_venflags,3,c
  3152                           
  3153                           ;main.c: 102: {
  3154                           ;main.c: 103: displ_nochange();
  3155  01039A  EC2B  F094         	call	_displ_nochange	;wreg free
  3156  01039E                     l1090:
  3157                           
  3158                           ;main.c: 104: }
  3159                           ;main.c: 105: }
  3160                           ;main.c: 107: if(PIR4bits.TMR3IF)
  3161  01039E  010E               	movlb	14	; () banked
  3162  0103A0  A5CE               	btfss	206,2,b	;volatile
  3163  0103A2  D02B               	goto	l1105
  3164                           
  3165                           ; BSR set to: 14
  3166                           ;main.c: 108: {
  3167                           ;main.c: 109: credit = mdb_poll();
  3168  0103A4  EC4B  F082         	call	_mdb_poll	;wreg free
  3169  0103A8  6E3A               	movwf	_credit,c	;volatile
  3170                           
  3171                           ;main.c: 110: if(credit != 0x00)
  3172  0103AA  503A               	movf	_credit,w,c	;volatile
  3173  0103AC  B4D8               	btfsc	status,2,c
  3174  0103AE  D022               	goto	l1092
  3175                           
  3176                           ;main.c: 111: {
  3177                           ;main.c: 112: if(mdbflags.noteerr == 1)
  3178  0103B0  B23F               	btfsc	_mdbflags,1,c
  3179  0103B2  D00D               	goto	l1094
  3180  0103B4  D01A               	goto	l1093
  3181  0103B6  EC50  F08F         	call	_mdb_init	;wreg free
  3182  0103BA  D003               	goto	l1100
  3183  0103BC                     l1097:
  3184                           
  3185                           ;main.c: 123: if(mdbflags.vending)
  3186  0103BC  A83F               	btfss	_mdbflags,4,c
  3187                           
  3188                           ;main.c: 127: else
  3189                           ;main.c: 128: {
  3190                           ;main.c: 129: mdb_init();
  3191                           
  3192                           ;main.c: 126: }
  3193                           
  3194                           ;main.c: 124: {
  3195                           ;main.c: 125: credit = 0;
  3196  0103BE  EC50  F08F         	call	_mdb_init	;wreg free
  3197  0103C2                     l1100:
  3198                           
  3199                           ;main.c: 137: credit = 0;
  3200                           
  3201                           ;main.c: 136: case 0x0C : mdbflags.noteerr == 0;
  3202                           
  3203                           ;main.c: 135: break;
  3204                           
  3205                           ;main.c: 134: credit = 0;
  3206  0103C2  0E00               	movlw	0
  3207  0103C4  6E3A               	movwf	_credit,c	;volatile
  3208                           
  3209                           ;main.c: 138: break;
  3210  0103C6  D019               	goto	l1105
  3211  0103C8  EC91  F094         	call	_displ_noteer	;wreg free
  3212                           
  3213                           ;main.c: 140: }
  3214  0103CC  D016               	goto	l1105
  3215  0103CE                     l1094:
  3216  0103CE  503A               	movf	_credit,w,c	;volatile
  3217                           
  3218                           ; Switch size 1, requested type "space"
  3219                           ; Number of cases is 4, Range of values is 6 to 16
  3220                           ; switch strategies available:
  3221                           ; Name         Instructions Cycles
  3222                           ; simple_byte           13     7 (average)
  3223                           ;	Chosen strategy is simple_byte
  3224  0103D0  0A06               	xorlw	6	; case 6
  3225  0103D2  B4D8               	btfsc	status,2,c
  3226  0103D4  D7F0               	goto	l1095
  3227  0103D6  0A0F               	xorlw	15	; case 9
  3228  0103D8  B4D8               	btfsc	status,2,c
  3229  0103DA  D7F0               	goto	l1097
  3230  0103DC  0A05               	xorlw	5	; case 12
  3231  0103DE  B4D8               	btfsc	status,2,c
  3232  0103E0  D7F0               	goto	l1100
  3233  0103E2  0A1C               	xorlw	28	; case 16
  3234  0103E4  B4D8               	btfsc	status,2,c
  3235  0103E6  D7ED               	goto	l1100
  3236  0103E8  D7EF               	goto	l1102
  3237  0103EA                     l1093:
  3238                           
  3239                           ;main.c: 142: else
  3240                           ;main.c: 143: {
  3241                           ;main.c: 144: credit_add(credit);
  3242  0103EA  503A               	movf	_credit,w,c	;volatile
  3243  0103EC  EC76  F090         	call	_credit_add
  3244                           
  3245                           ;main.c: 145: venflags.iscredit = 1;
  3246  0103F0  802D               	bsf	_venflags,0,c
  3247                           
  3248                           ;main.c: 146: }
  3249                           ;main.c: 147: }
  3250  0103F2  D003               	goto	l1105
  3251  0103F4                     l1092:
  3252                           
  3253                           ;main.c: 148: else
  3254                           ;main.c: 149: {
  3255                           ;main.c: 150: if(mdbflags.noteerr == 1)
  3256  0103F4  B23F               	btfsc	_mdbflags,1,c
  3257                           
  3258                           ;main.c: 151: {
  3259                           ;main.c: 152: displ_noteer();
  3260  0103F6  EC91  F094         	call	_displ_noteer	;wreg free
  3261  0103FA                     l1105:
  3262                           
  3263                           ;main.c: 153: }
  3264                           ;main.c: 156: }
  3265                           ;main.c: 157: }
  3266                           ;main.c: 158: if(venflags.iscredit)
  3267  0103FA  A02D               	btfss	_venflags,0,c
  3268  0103FC  D007               	goto	l1106
  3269                           
  3270                           ;main.c: 159: {
  3271                           ;main.c: 160: if(price_check())
  3272  0103FE  ECDD  F080         	call	_price_check	;wreg free
  3273  010402  0900               	iorlw	0
  3274  010404  B4D8               	btfsc	status,2,c
  3275  010406  D79F               	goto	l1083
  3276  010408  00FF               	reset		;# 
  3277                           
  3278                           ;main.c: 163: }
  3279                           ;main.c: 164: }
  3280  01040A  D79D               	goto	l1083
  3281  01040C                     l1106:
  3282                           
  3283                           ;main.c: 165: else
  3284                           ;main.c: 166: {
  3285                           ;main.c: 167: if(butin() != 0)
  3286  01040C  ECEA  F091         	call	_butin	;wreg free
  3287  010410  0900               	iorlw	0
  3288  010412  B4D8               	btfsc	status,2,c
  3289  010414  D03B               	goto	l1109
  3290                           
  3291                           ;main.c: 168: {
  3292                           ;main.c: 170: buttons = butin();
  3293  010416  ECEA  F091         	call	_butin	;wreg free
  3294  01041A  6E38               	movwf	_buttons,c	;volatile
  3295                           
  3296                           ;main.c: 171: if(((buttons & ~errormask) == 0x00) && !venflags.pricedisplay)
  3297  01041C  5031               	movf	_errormask,w,c	;volatile
  3298  01041E  0AFF               	xorlw	255
  3299  010420  1438               	andwf	_buttons,w,c	;volatile
  3300  010422  0900               	iorlw	0
  3301  010424  B4D8               	btfsc	status,2,c
  3302  010426  B42F               	btfsc	_venflags+2,2,c
  3303  010428  D010               	goto	l1110
  3304                           
  3305                           ;main.c: 172: {
  3306                           ;main.c: 173: lcd_string(emptymsg, line1);
  3307  01042A  0EBA               	movlw	low _emptymsg
  3308  01042C  6E24               	movwf	lcd_string@lcdstring,c
  3309  01042E  0EFF               	movlw	high _emptymsg
  3310  010430  6E25               	movwf	lcd_string@lcdstring+1,c
  3311  010432  0E4A               	movlw	low _line1
  3312  010434  6EF6               	movwf	tblptrl,c
  3313  010436                     	if	1	;There is more than 1 active tblptr byte
  3314  010436  0EFC               	movlw	high _line1
  3315  010438  6EF7               	movwf	tblptrh,c
  3316  01043A                     	endif
  3317  01043A                     	if	1	;There are 3 active tblptr bytes
  3318  01043A  0E00               	movlw	low (_line1 shr (0+16))
  3319  01043C  6EF8               	movwf	tblptru,c
  3320  01043E                     	endif
  3321  01043E  0008               	tblrd		*
  3322  010440  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3323  010444  EC78  F08A         	call	_lcd_string	;wreg free
  3324                           
  3325                           ;main.c: 174: venflags.pricedisplay = 1;
  3326  010448  842F               	bsf	_venflags+2,2,c
  3327  01044A                     l1110:
  3328                           
  3329                           ;main.c: 175: }
  3330                           ;main.c: 176: if(!venflags.pricedisplay)
  3331  01044A  B42F               	btfsc	_venflags+2,2,c
  3332  01044C  D77C               	goto	l1083
  3333                           
  3334                           ;main.c: 177: {
  3335                           ;main.c: 178: uint8_t channel = get_channel(buttons);
  3336  01044E  5038               	movf	_buttons,w,c	;volatile
  3337  010450  EC3E  F095         	call	_get_channel
  3338  010454  0100               	movlb	0	; () banked
  3339  010456  6FC4               	movwf	main@channel& (0+255),b
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;main.c: 179: vendprice = DATAEE_ReadByte(pricestore + channel);
  3343  010458  0E13               	movlw	low _pricestore
  3344  01045A  6EF6               	movwf	tblptrl,c
  3345  01045C                     	if	1	;There is more than 1 active tblptr byte
  3346  01045C  0EFC               	movlw	high _pricestore
  3347  01045E  6EF7               	movwf	tblptrh,c
  3348  010460                     	endif
  3349  010460                     	if	1	;There are 3 active tblptr bytes
  3350  010460  0E00               	movlw	low (_pricestore shr (0+16))
  3351  010462  6EF8               	movwf	tblptru,c
  3352  010464                     	endif
  3353  010464  0009               	tblrd		*+
  3354  010466  CFF5 F0C2          	movff	tablat,??_main
  3355  01046A  0009               	tblrd		*+
  3356  01046C  CFF5 F0C3          	movff	tablat,??_main+1
  3357  010470  51C4               	movf	main@channel& (0+255),w,b
  3358  010472  25C2               	addwf	??_main& (0+255),w,b
  3359  010474  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  3360  010476  0E00               	movlw	0
  3361  010478  21C3               	addwfc	(??_main+1)& (0+255),w,b
  3362  01047A  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  3363  01047C  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3364  010480  6E37               	movwf	_vendprice,c	;volatile
  3365                           
  3366                           ;main.c: 180: displ_price(vendprice);
  3367  010482  5037               	movf	_vendprice,w,c	;volatile
  3368  010484  ECB5  F092         	call	_displ_price
  3369                           
  3370                           ;main.c: 181: venflags.pricedisplay = 1;
  3371  010488  842F               	bsf	_venflags+2,2,c
  3372                           
  3373                           ;main.c: 182: }
  3374                           ;main.c: 183: }
  3375  01048A  D75D               	goto	l1083
  3376  01048C                     l1109:
  3377                           
  3378                           ;main.c: 184: else
  3379                           ;main.c: 185: {
  3380                           ;main.c: 186: if(venflags.pricedisplay)
  3381  01048C  A42F               	btfss	_venflags+2,2,c
  3382  01048E  D75B               	goto	l1083
  3383                           
  3384                           ;main.c: 187: {
  3385                           ;main.c: 188: venflags.pricedisplay = 0;
  3386  010490  942F               	bcf	_venflags+2,2,c
  3387                           
  3388                           ;main.c: 189: venflags.inscoin = 1;
  3389  010492  842D               	bsf	_venflags,2,c
  3390  010494  D758               	goto	l1083
  3391  010496                     __end_of_main:
  3392                           	opt stack 0
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           postinc0	equ	0xFEE
  3398                           wreg	equ	0xFE8
  3399                           status	equ	0xFD8
  3400                           
  3401 ;; *************** function _vend_init *****************
  3402 ;; Defined at:
  3403 ;;		line 33 in file "vend.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    8
  3424 ;; This function calls:
  3425 ;;		_DAC1_SetOutput
  3426 ;;		_DATAEE_ReadByte
  3427 ;;		_Init_vendmem
  3428 ;;		_credit_check
  3429 ;;		_find_highprice
  3430 ;;		_find_lowprice
  3431 ;;		_lcd_string
  3432 ;;		_mdb_init
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text1
  3439  010DDC                     __ptext1:
  3440                           	opt stack 0
  3441  010DDC                     _vend_init:
  3442                           	opt stack 22
  3443                           
  3444                           ;vend.c: 36: ((uint8_t*) &venderr)[0] = DATAEE_ReadByte(venderrors);
  3445                           
  3446                           ;incstack = 0
  3447  010DDC  0E11               	movlw	low _venderrors
  3448  010DDE  6EF6               	movwf	tblptrl,c
  3449  010DE0                     	if	1	;There is more than 1 active tblptr byte
  3450  010DE0  0EFC               	movlw	high _venderrors
  3451  010DE2  6EF7               	movwf	tblptrh,c
  3452  010DE4                     	endif
  3453  010DE4                     	if	1	;There are 3 active tblptr bytes
  3454  010DE4  0E00               	movlw	low (_venderrors shr (0+16))
  3455  010DE6  6EF8               	movwf	tblptru,c
  3456  010DE8                     	endif
  3457  010DE8  0009               	tblrd		*+
  3458  010DEA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3459  010DEE  000A               	tblrd		*-
  3460  010DF0  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3461  010DF4  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3462  010DF8  0100               	movlb	0	; () banked
  3463  010DFA  6FA7               	movwf	_venderr& (0+255),b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;vend.c: 37: venflags.hiprice = 0;
  3467  010DFC  982F               	bcf	_venflags+2,4,c
  3468                           
  3469                           ;vend.c: 39: if(DATAEE_ReadByte(hoperror) != 0)
  3470  010DFE  0EE3               	movlw	low _hoperror
  3471  010E00  6EF6               	movwf	tblptrl,c
  3472  010E02                     	if	1	;There is more than 1 active tblptr byte
  3473  010E02  0EFB               	movlw	high _hoperror
  3474  010E04  6EF7               	movwf	tblptrh,c
  3475  010E06                     	endif
  3476  010E06                     	if	1	;There are 3 active tblptr bytes
  3477  010E06  0E00               	movlw	low (_hoperror shr (0+16))
  3478  010E08  6EF8               	movwf	tblptru,c
  3479  010E0A                     	endif
  3480  010E0A  0009               	tblrd		*+
  3481  010E0C  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3482  010E10  000A               	tblrd		*-
  3483  010E12  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3484  010E16  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3485  010E1A  0900               	iorlw	0
  3486  010E1C  B4D8               	btfsc	status,2,c
  3487  010E1E  D002               	goto	l2159
  3488                           
  3489                           ;vend.c: 40: {
  3490                           ;vend.c: 41: venflags.nochange = 1;
  3491  010E20  862D               	bsf	_venflags,3,c
  3492                           
  3493                           ;vend.c: 42: }
  3494  010E22  D001               	goto	l2160
  3495  010E24                     l2159:
  3496                           
  3497                           ;vend.c: 43: else
  3498                           ;vend.c: 44: {
  3499                           ;vend.c: 45: venflags.nochange = 0;
  3500  010E24  962D               	bcf	_venflags,3,c
  3501  010E26                     l2160:
  3502                           
  3503                           ;vend.c: 46: }
  3504                           ;vend.c: 48: Init_vendmem();
  3505  010E26  EC66  F089         	call	_Init_vendmem	;wreg free
  3506                           
  3507                           ;vend.c: 49: find_highprice();
  3508  010E2A  EC95  F092         	call	_find_highprice	;wreg free
  3509                           
  3510                           ;vend.c: 50: find_lowprice();
  3511  010E2E  EC75  F092         	call	_find_lowprice	;wreg free
  3512                           
  3513                           ;vend.c: 52: sensorval = DATAEE_ReadByte(sensval);
  3514  010E32  0E0D               	movlw	low _sensval
  3515  010E34  6EF6               	movwf	tblptrl,c
  3516  010E36                     	if	1	;There is more than 1 active tblptr byte
  3517  010E36  0EFC               	movlw	high _sensval
  3518  010E38  6EF7               	movwf	tblptrh,c
  3519  010E3A                     	endif
  3520  010E3A                     	if	1	;There are 3 active tblptr bytes
  3521  010E3A  0E00               	movlw	low (_sensval shr (0+16))
  3522  010E3C  6EF8               	movwf	tblptru,c
  3523  010E3E                     	endif
  3524  010E3E  0009               	tblrd		*+
  3525  010E40  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3526  010E44  000A               	tblrd		*-
  3527  010E46  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3528  010E4A  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3529  010E4E  6E36               	movwf	_sensorval,c	;volatile
  3530                           
  3531                           ;vend.c: 53: DAC1_SetOutput(sensorval);
  3532  010E50  5036               	movf	_sensorval,w,c	;volatile
  3533  010E52  EC2C  F096         	call	_DAC1_SetOutput
  3534                           
  3535                           ;vend.c: 54: errormask = DATAEE_ReadByte(venderrors);
  3536  010E56  0E11               	movlw	low _venderrors
  3537  010E58  6EF6               	movwf	tblptrl,c
  3538  010E5A                     	if	1	;There is more than 1 active tblptr byte
  3539  010E5A  0EFC               	movlw	high _venderrors
  3540  010E5C  6EF7               	movwf	tblptrh,c
  3541  010E5E                     	endif
  3542  010E5E                     	if	1	;There are 3 active tblptr bytes
  3543  010E5E  0E00               	movlw	low (_venderrors shr (0+16))
  3544  010E60  6EF8               	movwf	tblptru,c
  3545  010E62                     	endif
  3546  010E62  0009               	tblrd		*+
  3547  010E64  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3548  010E68  000A               	tblrd		*-
  3549  010E6A  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3550  010E6E  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3551  010E72  6E31               	movwf	_errormask,c	;volatile
  3552                           
  3553                           ;vend.c: 59: lcd_string(initnote, line1);
  3554  010E74  0E4D               	movlw	low _initnote
  3555  010E76  6E24               	movwf	lcd_string@lcdstring,c
  3556  010E78  0EFE               	movlw	high _initnote
  3557  010E7A  6E25               	movwf	lcd_string@lcdstring+1,c
  3558  010E7C  0E4A               	movlw	low _line1
  3559  010E7E  6EF6               	movwf	tblptrl,c
  3560  010E80                     	if	1	;There is more than 1 active tblptr byte
  3561  010E80  0EFC               	movlw	high _line1
  3562  010E82  6EF7               	movwf	tblptrh,c
  3563  010E84                     	endif
  3564  010E84                     	if	1	;There are 3 active tblptr bytes
  3565  010E84  0E00               	movlw	low (_line1 shr (0+16))
  3566  010E86  6EF8               	movwf	tblptru,c
  3567  010E88                     	endif
  3568  010E88  0008               	tblrd		*
  3569  010E8A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3570  010E8E  EC78  F08A         	call	_lcd_string	;wreg free
  3571                           
  3572                           ;vend.c: 60: mdb_init();
  3573  010E92  EC50  F08F         	call	_mdb_init	;wreg free
  3574                           
  3575                           ;vend.c: 62: venflags.pricedisplay = 0;
  3576  010E96  942F               	bcf	_venflags+2,2,c
  3577                           
  3578                           ;vend.c: 63: venflags.service = 0;
  3579  010E98  9E2D               	bcf	_venflags,7,c
  3580                           
  3581                           ;vend.c: 64: venflags.initialrun = 1;
  3582  010E9A  8A2D               	bsf	_venflags,5,c
  3583                           
  3584                           ;vend.c: 65: if(credit_check() == 0)
  3585  010E9C  EC0E  F095         	call	_credit_check	;wreg free
  3586  010EA0  0900               	iorlw	0
  3587  010EA2  A4D8               	btfss	status,2,c
  3588  010EA4  D004               	goto	l2161
  3589                           
  3590                           ;vend.c: 66: {
  3591                           ;vend.c: 67: venflags.iscredit = 0;
  3592  010EA6  902D               	bcf	_venflags,0,c
  3593                           
  3594                           ;vend.c: 68: venflags.inscoin = 1;
  3595  010EA8  842D               	bsf	_venflags,2,c
  3596                           
  3597                           ;vend.c: 69: venflags.credisplay = 0;
  3598  010EAA  982D               	bcf	_venflags,4,c
  3599  010EAC  D003               	goto	L1
  3600  010EAE                     l2161:
  3601                           
  3602                           ;vend.c: 72: else
  3603                           ;vend.c: 73: {
  3604                           ;vend.c: 74: venflags.iscredit = 1;
  3605  010EAE  802D               	bsf	_venflags,0,c
  3606                           
  3607                           ;vend.c: 75: venflags.inscoin = 0;
  3608  010EB0  942D               	bcf	_venflags,2,c
  3609                           
  3610                           ;vend.c: 76: venflags.credisplay = 1;
  3611  010EB2  882D               	bsf	_venflags,4,c
  3612  010EB4                     L1:
  3613                           
  3614                           ;vend.c: 77: mdbflags.noteerr = 0;
  3615  010EB4  923F               	bcf	_mdbflags,1,c
  3616                           
  3617                           ;vend.c: 78: }
  3618                           ;vend.c: 80: LATAbits.LA5 = 0;
  3619  010EB6  9A83               	bcf	3971,5,c	;volatile
  3620                           
  3621                           ;vend.c: 82: LATCbits.LC2 = 1;
  3622  010EB8  8485               	bsf	3973,2,c	;volatile
  3623  010EBA  0012               	return		;funcret
  3624  010EBC                     __end_of_vend_init:
  3625                           	opt stack 0
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           status	equ	0xFD8
  3633                           
  3634 ;; *************** function _mdb_init *****************
  3635 ;; Defined at:
  3636 ;;		line 24 in file "mdb.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  i               1   33[COMRAM] unsigned char 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;Total ram usage:        3 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    7
  3657 ;; This function calls:
  3658 ;;		_DATAEE_ReadByte
  3659 ;;		_eusartmdb_Initialize
  3660 ;;		_mdb_comm
  3661 ;;		_mdb_noten
  3662 ;;		_mdb_reset
  3663 ;;		_mdb_security
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;;		_vend_init
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text2
  3671  011EA0                     __ptext2:
  3672                           	opt stack 0
  3673  011EA0                     _mdb_init:
  3674                           	opt stack 22
  3675                           
  3676                           ;mdb.c: 26: _delay((unsigned long)((250)*(12000000/4000.0)));
  3677                           
  3678                           ;incstack = 0
  3679  011EA0  0E04               	movlw	4
  3680  011EA2  6E2B               	movwf	(??_mdb_init+1)& (0+255),c
  3681  011EA4  0ECF               	movlw	207
  3682  011EA6  6E2A               	movwf	??_mdb_init& (0+255),c
  3683  011EA8  0E02               	movlw	2
  3684  011EAA                     u5697:
  3685  011EAA  2EE8               	decfsz	wreg,f,c
  3686  011EAC  D7FE               	bra	u5697
  3687  011EAE  2E2A               	decfsz	??_mdb_init& (0+255),f,c
  3688  011EB0  D7FC               	bra	u5697
  3689  011EB2  2E2B               	decfsz	(??_mdb_init+1)& (0+255),f,c
  3690  011EB4  D7FA               	bra	u5697
  3691                           
  3692                           ;mdb.c: 27: noteen_byte = DATAEE_ReadByte(notebits);
  3693  011EB6  0E0F               	movlw	low _notebits
  3694  011EB8  6EF6               	movwf	tblptrl,c
  3695  011EBA                     	if	1	;There is more than 1 active tblptr byte
  3696  011EBA  0EFC               	movlw	high _notebits
  3697  011EBC  6EF7               	movwf	tblptrh,c
  3698  011EBE                     	endif
  3699  011EBE                     	if	1	;There are 3 active tblptr bytes
  3700  011EBE  0E00               	movlw	low (_notebits shr (0+16))
  3701  011EC0  6EF8               	movwf	tblptru,c
  3702  011EC2                     	endif
  3703  011EC2  0009               	tblrd		*+
  3704  011EC4  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3705  011EC8  000A               	tblrd		*-
  3706  011ECA  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3707  011ECE  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  3708  011ED2  6E3D               	movwf	_noteen_byte,c	;volatile
  3709                           
  3710                           ;mdb.c: 28: ((uint8_t*) &noteen)[0] = noteen_byte;
  3711  011ED4  C03D  F03E         	movff	_noteen_byte,_noteen	;volatile
  3712                           
  3713                           ;mdb.c: 29: eusartmdb_Initialize();
  3714  011ED8  ECA4  F095         	call	_eusartmdb_Initialize	;wreg free
  3715                           
  3716                           ;mdb.c: 30: mdbflags.noteerr = 0;
  3717  011EDC  923F               	bcf	_mdbflags,1,c
  3718                           
  3719                           ;mdb.c: 31: mdbflags.isdata = 0;
  3720  011EDE  903F               	bcf	_mdbflags,0,c
  3721                           
  3722                           ;mdb.c: 32: mdb_reset();
  3723  011EE0  EC26  F08D         	call	_mdb_reset	;wreg free
  3724                           
  3725                           ;mdb.c: 33: mdb_noten();
  3726  011EE4  EC33  F092         	call	_mdb_noten	;wreg free
  3727                           
  3728                           ;mdb.c: 34: mdb_security();
  3729  011EE8  EC1F  F095         	call	_mdb_security	;wreg free
  3730                           
  3731                           ;mdb.c: 35: uint8_t i = mdb_comm(note_poll, 0x00);
  3732  011EEC  0E00               	movlw	0
  3733  011EEE  6E24               	movwf	mdb_comm@mcount,c
  3734  011EF0  0E43               	movlw	low _note_poll
  3735  011EF2  6EF6               	movwf	tblptrl,c
  3736  011EF4                     	if	1	;There is more than 1 active tblptr byte
  3737  011EF4  0EFC               	movlw	high _note_poll
  3738  011EF6  6EF7               	movwf	tblptrh,c
  3739  011EF8                     	endif
  3740  011EF8                     	if	1	;There are 3 active tblptr bytes
  3741  011EF8  0E00               	movlw	low (_note_poll shr (0+16))
  3742  011EFA  6EF8               	movwf	tblptru,c
  3743  011EFC                     	endif
  3744  011EFC  0008               	tblrd		*
  3745  011EFE  50F5               	movf	tablat,w,c
  3746  011F00  EC03  F085         	call	_mdb_comm
  3747  011F04  6E2C               	movwf	mdb_init@i,c
  3748  011F06  0012               	return		;funcret
  3749  011F08                     __end_of_mdb_init:
  3750                           	opt stack 0
  3751                           tblptru	equ	0xFF8
  3752                           tblptrh	equ	0xFF7
  3753                           tblptrl	equ	0xFF6
  3754                           tablat	equ	0xFF5
  3755                           postinc0	equ	0xFEE
  3756                           wreg	equ	0xFE8
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function _mdb_security *****************
  3760 ;; Defined at:
  3761 ;;		line 158 in file "mdb.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;Total ram usage:        0 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    6
  3782 ;; This function calls:
  3783 ;;		_init_mdbdata
  3784 ;;		_mdb_comm
  3785 ;; This function is called by:
  3786 ;;		_mdb_init
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text3
  3791  012A3E                     __ptext3:
  3792                           	opt stack 0
  3793  012A3E                     _mdb_security:
  3794                           	opt stack 22
  3795                           
  3796                           ;mdb.c: 160: init_mdbdata(0x00);
  3797                           
  3798                           ;incstack = 0
  3799  012A3E  0E00               	movlw	0
  3800  012A40  ECD5  F094         	call	_init_mdbdata
  3801                           
  3802                           ;mdb.c: 161: mdb_comm(note_security, 0x01);
  3803  012A44  0E01               	movlw	1
  3804  012A46  6E24               	movwf	mdb_comm@mcount,c
  3805  012A48  0E44               	movlw	low _note_security
  3806  012A4A  6EF6               	movwf	tblptrl,c
  3807  012A4C                     	if	1	;There is more than 1 active tblptr byte
  3808  012A4C  0EFC               	movlw	high _note_security
  3809  012A4E  6EF7               	movwf	tblptrh,c
  3810  012A50                     	endif
  3811  012A50                     	if	1	;There are 3 active tblptr bytes
  3812  012A50  0E00               	movlw	low (_note_security shr (0+16))
  3813  012A52  6EF8               	movwf	tblptru,c
  3814  012A54                     	endif
  3815  012A54  0008               	tblrd		*
  3816  012A56  50F5               	movf	tablat,w,c
  3817  012A58  EC03  F085         	call	_mdb_comm
  3818  012A5C  0012               	return		;funcret
  3819  012A5E                     __end_of_mdb_security:
  3820                           	opt stack 0
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           postinc0	equ	0xFEE
  3826                           wreg	equ	0xFE8
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function _mdb_reset *****************
  3830 ;; Defined at:
  3831 ;;		line 39 in file "mdb.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  i               1   29[COMRAM] unsigned char 
  3836 ;;  i               1   30[COMRAM] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      unsigned char 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;Total ram usage:        3 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    6
  3853 ;; This function calls:
  3854 ;;		_mdb_comm
  3855 ;; This function is called by:
  3856 ;;		_mdb_init
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text4
  3861  011A4C                     __ptext4:
  3862                           	opt stack 0
  3863  011A4C                     _mdb_reset:
  3864                           	opt stack 22
  3865                           
  3866                           ;mdb.c: 44: mdbflags.timeout = 1;
  3867                           
  3868                           ;incstack = 0
  3869  011A4C  863F               	bsf	_mdbflags,3,c
  3870                           
  3871                           ;mdb.c: 45: while(mdbflags.timeout)
  3872  011A4E  D00D               	goto	l2904
  3873  011A50                     
  3874                           ;mdb.c: 46: {
  3875                           ;mdb.c: 47: uint8_t i = mdb_comm(note_reset, 0x00);
  3876  011A50  0E00               	movlw	0
  3877  011A52  6E24               	movwf	mdb_comm@mcount,c
  3878  011A54  0E46               	movlw	low _note_reset
  3879  011A56  6EF6               	movwf	tblptrl,c
  3880  011A58                     	if	1	;There is more than 1 active tblptr byte
  3881  011A58  0EFC               	movlw	high _note_reset
  3882  011A5A  6EF7               	movwf	tblptrh,c
  3883  011A5C                     	endif
  3884  011A5C                     	if	1	;There are 3 active tblptr bytes
  3885  011A5C  0E00               	movlw	low (_note_reset shr (0+16))
  3886  011A5E  6EF8               	movwf	tblptru,c
  3887  011A60                     	endif
  3888  011A60  0008               	tblrd		*
  3889  011A62  50F5               	movf	tablat,w,c
  3890  011A64  EC03  F085         	call	_mdb_comm
  3891  011A68  6E28               	movwf	mdb_reset@i,c
  3892  011A6A                     l2904:
  3893  011A6A  B63F               	btfsc	_mdbflags,3,c
  3894  011A6C  D7F1               	goto	l2905
  3895  011A6E  F000               	nop		;# 
  3896                           
  3897                           ;mdb.c: 50: uint8_t i = mdb_comm(note_poll, 0x00);
  3898  011A70  0E00               	movlw	0
  3899  011A72  6E24               	movwf	mdb_comm@mcount,c
  3900  011A74  0E43               	movlw	low _note_poll
  3901  011A76  6EF6               	movwf	tblptrl,c
  3902  011A78                     	if	1	;There is more than 1 active tblptr byte
  3903  011A78  0EFC               	movlw	high _note_poll
  3904  011A7A  6EF7               	movwf	tblptrh,c
  3905  011A7C                     	endif
  3906  011A7C                     	if	1	;There are 3 active tblptr bytes
  3907  011A7C  0E00               	movlw	low (_note_poll shr (0+16))
  3908  011A7E  6EF8               	movwf	tblptru,c
  3909  011A80                     	endif
  3910  011A80  0008               	tblrd		*
  3911  011A82  50F5               	movf	tablat,w,c
  3912  011A84  EC03  F085         	call	_mdb_comm
  3913  011A88  6E29               	movwf	mdb_reset@i_3986,c
  3914                           
  3915                           ;mdb.c: 51: if(mdbdata[--i] == just_reset)
  3916  011A8A  0629               	decf	mdb_reset@i_3986,f,c
  3917  011A8C  5029               	movf	mdb_reset@i_3986,w,c
  3918  011A8E  0D01               	mullw	1
  3919  011A90  0E60               	movlw	low _mdbdata
  3920  011A92  24F3               	addwf	prodl,w,c
  3921  011A94  6ED9               	movwf	fsr2l,c
  3922  011A96  0E00               	movlw	high _mdbdata
  3923  011A98  20F4               	addwfc	prodh,w,c
  3924  011A9A  6EDA               	movwf	fsr2h,c
  3925  011A9C  50DF               	movf	indf2,w,c
  3926  011A9E  6E27               	movwf	??_mdb_reset& (0+255),c
  3927  011AA0  0E39               	movlw	low _just_reset
  3928  011AA2  6EF6               	movwf	tblptrl,c
  3929  011AA4                     	if	1	;There is more than 1 active tblptr byte
  3930  011AA4  0EFC               	movlw	high _just_reset
  3931  011AA6  6EF7               	movwf	tblptrh,c
  3932  011AA8                     	endif
  3933  011AA8                     	if	1	;There are 3 active tblptr bytes
  3934  011AA8  0E00               	movlw	low (_just_reset shr (0+16))
  3935  011AAA  6EF8               	movwf	tblptru,c
  3936  011AAC                     	endif
  3937  011AAC  0008               	tblrd		*
  3938  011AAE  50F5               	movf	tablat,w,c
  3939  011AB0  1827               	xorwf	??_mdb_reset,w,c
  3940  011AB2  A4D8               	btfss	status,2,c
  3941  011AB4  0012               	return	
  3942                           
  3943                           ;mdb.c: 52: {
  3944                           ;mdb.c: 54: i = mdb_comm(note_poll, 0x00);
  3945  011AB6  0E00               	movlw	0
  3946  011AB8  6E24               	movwf	mdb_comm@mcount,c
  3947  011ABA  0E43               	movlw	low _note_poll
  3948  011ABC  6EF6               	movwf	tblptrl,c
  3949  011ABE                     	if	1	;There is more than 1 active tblptr byte
  3950  011ABE  0EFC               	movlw	high _note_poll
  3951  011AC0  6EF7               	movwf	tblptrh,c
  3952  011AC2                     	endif
  3953  011AC2                     	if	1	;There are 3 active tblptr bytes
  3954  011AC2  0E00               	movlw	low (_note_poll shr (0+16))
  3955  011AC4  6EF8               	movwf	tblptru,c
  3956  011AC6                     	endif
  3957  011AC6  0008               	tblrd		*
  3958  011AC8  50F5               	movf	tablat,w,c
  3959  011ACA  EC03  F085         	call	_mdb_comm
  3960  011ACE  6E29               	movwf	mdb_reset@i_3986,c
  3961  011AD0  0012               	return	
  3962  011AD2                     __end_of_mdb_reset:
  3963                           	opt stack 0
  3964                           tblptru	equ	0xFF8
  3965                           tblptrh	equ	0xFF7
  3966                           tblptrl	equ	0xFF6
  3967                           tablat	equ	0xFF5
  3968                           prodh	equ	0xFF4
  3969                           prodl	equ	0xFF3
  3970                           postinc0	equ	0xFEE
  3971                           wreg	equ	0xFE8
  3972                           indf2	equ	0xFDF
  3973                           fsr2h	equ	0xFDA
  3974                           fsr2l	equ	0xFD9
  3975                           status	equ	0xFD8
  3976                           
  3977 ;; *************** function _eusartmdb_Initialize *****************
  3978 ;; Defined at:
  3979 ;;		line 55 in file "eusart_mdb.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    2
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_mdb_init
  4004 ;;		_cctalk_init
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text5
  4009  012B48                     __ptext5:
  4010                           	opt stack 0
  4011  012B48                     _eusartmdb_Initialize:
  4012                           	opt stack 26
  4013                           
  4014                           ;eusart_mdb.c: 60: BAUD1CON = 0x08;
  4015                           
  4016                           ;incstack = 0
  4017  012B48  0E08               	movlw	8
  4018  012B4A  6E9F               	movwf	3999,c	;volatile
  4019                           
  4020                           ;eusart_mdb.c: 63: RC1STA = 0xD0;
  4021  012B4C  0ED0               	movlw	208
  4022  012B4E  6E9D               	movwf	3997,c	;volatile
  4023                           
  4024                           ;eusart_mdb.c: 66: TX1STA = 0xEC;
  4025  012B50  0EEC               	movlw	236
  4026  012B52  6E9E               	movwf	3998,c	;volatile
  4027                           
  4028                           ;eusart_mdb.c: 69: SP1BRGL = 0x38;
  4029  012B54  0E38               	movlw	56
  4030  012B56  6E9B               	movwf	3995,c	;volatile
  4031                           
  4032                           ;eusart_mdb.c: 72: SP1BRGH = 0x01;
  4033  012B58  0E01               	movlw	1
  4034  012B5A  6E9C               	movwf	3996,c	;volatile
  4035  012B5C  0012               	return		;funcret
  4036  012B5E                     __end_of_eusartmdb_Initialize:
  4037                           	opt stack 0
  4038                           tblptru	equ	0xFF8
  4039                           tblptrh	equ	0xFF7
  4040                           tblptrl	equ	0xFF6
  4041                           tablat	equ	0xFF5
  4042                           prodh	equ	0xFF4
  4043                           prodl	equ	0xFF3
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf2	equ	0xFDF
  4047                           fsr2h	equ	0xFDA
  4048                           fsr2l	equ	0xFD9
  4049                           status	equ	0xFD8
  4050                           
  4051 ;; *************** function _find_lowprice *****************
  4052 ;; Defined at:
  4053 ;;		line 201 in file "dispense.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  i               1   19[COMRAM] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;Total ram usage:        2 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    2
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_vend_init
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text6
  4082  0124EA                     __ptext6:
  4083                           	opt stack 0
  4084  0124EA                     _find_lowprice:
  4085                           	opt stack 27
  4086                           
  4087                           ;dispense.c: 203: char i = 0;
  4088                           
  4089                           ;incstack = 0
  4090  0124EA  0E00               	movlw	0
  4091  0124EC  6E1E               	movwf	find_lowprice@i,c
  4092                           
  4093                           ;dispense.c: 204: lowprice = pricevend[0];
  4094  0124EE  C07F  F033         	movff	_pricevend,_lowprice	;volatile
  4095                           
  4096                           ;dispense.c: 205: while(i < 8)
  4097  0124F2  D017               	goto	l4489
  4098  0124F4                     
  4099                           ;dispense.c: 206: {
  4100                           ;dispense.c: 207: if(lowprice > pricevend[i])
  4101  0124F4  501E               	movf	find_lowprice@i,w,c
  4102  0124F6  0D01               	mullw	1
  4103  0124F8  0E7F               	movlw	low _pricevend
  4104  0124FA  24F3               	addwf	prodl,w,c
  4105  0124FC  6ED9               	movwf	fsr2l,c
  4106  0124FE  0E00               	movlw	high _pricevend
  4107  012500  20F4               	addwfc	prodh,w,c
  4108  012502  6EDA               	movwf	fsr2h,c
  4109  012504  5033               	movf	_lowprice,w,c	;volatile
  4110  012506  5CDE               	subwf	postinc2,w,c
  4111  012508  B0D8               	btfsc	status,0,c
  4112  01250A  D00A               	goto	l4491
  4113                           
  4114                           ;dispense.c: 208: {
  4115                           ;dispense.c: 209: lowprice = pricevend[i];
  4116  01250C  501E               	movf	find_lowprice@i,w,c
  4117  01250E  0D01               	mullw	1
  4118  012510  0E7F               	movlw	low _pricevend
  4119  012512  24F3               	addwf	prodl,w,c
  4120  012514  6ED9               	movwf	fsr2l,c
  4121  012516  0E00               	movlw	high _pricevend
  4122  012518  20F4               	addwfc	prodh,w,c
  4123  01251A  6EDA               	movwf	fsr2h,c
  4124  01251C  50DF               	movf	indf2,w,c
  4125  01251E  6E33               	movwf	_lowprice,c	;volatile
  4126  012520                     l4491:
  4127                           
  4128                           ;dispense.c: 210: }
  4129                           ;dispense.c: 211: i++;
  4130  012520  2A1E               	incf	find_lowprice@i,f,c
  4131  012522                     l4489:
  4132  012522  0E07               	movlw	7
  4133  012524  641E               	cpfsgt	find_lowprice@i,c
  4134  012526  D7E6               	goto	l4490
  4135  012528  0012               	return	
  4136  01252A                     __end_of_find_lowprice:
  4137                           	opt stack 0
  4138                           tblptru	equ	0xFF8
  4139                           tblptrh	equ	0xFF7
  4140                           tblptrl	equ	0xFF6
  4141                           tablat	equ	0xFF5
  4142                           prodh	equ	0xFF4
  4143                           prodl	equ	0xFF3
  4144                           postinc0	equ	0xFEE
  4145                           wreg	equ	0xFE8
  4146                           indf2	equ	0xFDF
  4147                           postinc2	equ	0xFDE
  4148                           fsr2h	equ	0xFDA
  4149                           fsr2l	equ	0xFD9
  4150                           status	equ	0xFD8
  4151                           
  4152 ;; *************** function _find_highprice *****************
  4153 ;; Defined at:
  4154 ;;		line 187 in file "dispense.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  i               1   19[COMRAM] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;Total ram usage:        2 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    2
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_vend_init
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text7
  4183  01252A                     __ptext7:
  4184                           	opt stack 0
  4185  01252A                     _find_highprice:
  4186                           	opt stack 27
  4187                           
  4188                           ;dispense.c: 189: char i = 0;
  4189                           
  4190                           ;incstack = 0
  4191  01252A  0E00               	movlw	0
  4192  01252C  6E1E               	movwf	find_highprice@i,c
  4193                           
  4194                           ;dispense.c: 190: highprice = pricevend[0];
  4195  01252E  C07F  F034         	movff	_pricevend,_highprice	;volatile
  4196                           
  4197                           ;dispense.c: 191: while(i < 8)
  4198  012532  D017               	goto	l4482
  4199  012534                     
  4200                           ;dispense.c: 192: {
  4201                           ;dispense.c: 193: if(highprice < pricevend[i])
  4202  012534  501E               	movf	find_highprice@i,w,c
  4203  012536  0D01               	mullw	1
  4204  012538  0E7F               	movlw	low _pricevend
  4205  01253A  24F3               	addwf	prodl,w,c
  4206  01253C  6ED9               	movwf	fsr2l,c
  4207  01253E  0E00               	movlw	high _pricevend
  4208  012540  20F4               	addwfc	prodh,w,c
  4209  012542  6EDA               	movwf	fsr2h,c
  4210  012544  50DE               	movf	postinc2,w,c
  4211  012546  5C34               	subwf	_highprice,w,c	;volatile
  4212  012548  B0D8               	btfsc	status,0,c
  4213  01254A  D00A               	goto	l4484
  4214                           
  4215                           ;dispense.c: 194: {
  4216                           ;dispense.c: 195: highprice = pricevend[i];
  4217  01254C  501E               	movf	find_highprice@i,w,c
  4218  01254E  0D01               	mullw	1
  4219  012550  0E7F               	movlw	low _pricevend
  4220  012552  24F3               	addwf	prodl,w,c
  4221  012554  6ED9               	movwf	fsr2l,c
  4222  012556  0E00               	movlw	high _pricevend
  4223  012558  20F4               	addwfc	prodh,w,c
  4224  01255A  6EDA               	movwf	fsr2h,c
  4225  01255C  50DF               	movf	indf2,w,c
  4226  01255E  6E34               	movwf	_highprice,c	;volatile
  4227  012560                     l4484:
  4228                           
  4229                           ;dispense.c: 196: }
  4230                           ;dispense.c: 197: i++;
  4231  012560  2A1E               	incf	find_highprice@i,f,c
  4232  012562                     l4482:
  4233  012562  0E07               	movlw	7
  4234  012564  641E               	cpfsgt	find_highprice@i,c
  4235  012566  D7E6               	goto	l4483
  4236  012568  0012               	return	
  4237  01256A                     __end_of_find_highprice:
  4238                           	opt stack 0
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodh	equ	0xFF4
  4244                           prodl	equ	0xFF3
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           indf2	equ	0xFDF
  4248                           postinc2	equ	0xFDE
  4249                           fsr2h	equ	0xFDA
  4250                           fsr2l	equ	0xFD9
  4251                           status	equ	0xFD8
  4252                           
  4253 ;; *************** function _DAC1_SetOutput *****************
  4254 ;; Defined at:
  4255 ;;		line 65 in file "mcc_generated_files/dac1.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  inputData       1    wreg     unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  inputData       1   18[COMRAM] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:        1 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    2
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_vend_init
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text8
  4284  012C58                     __ptext8:
  4285                           	opt stack 0
  4286  012C58                     _DAC1_SetOutput:
  4287                           	opt stack 27
  4288                           
  4289                           ;incstack = 0
  4290                           ;DAC1_SetOutput@inputData stored from wreg
  4291  012C58  6E1D               	movwf	DAC1_SetOutput@inputData,c
  4292                           
  4293                           ;dac1.c: 67: DAC1CON1 = inputData;
  4294  012C5A  C01D  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  4295  012C5E  0012               	return		;funcret
  4296  012C60                     __end_of_DAC1_SetOutput:
  4297                           	opt stack 0
  4298                           tblptru	equ	0xFF8
  4299                           tblptrh	equ	0xFF7
  4300                           tblptrl	equ	0xFF6
  4301                           tablat	equ	0xFF5
  4302                           prodh	equ	0xFF4
  4303                           prodl	equ	0xFF3
  4304                           postinc0	equ	0xFEE
  4305                           wreg	equ	0xFE8
  4306                           indf2	equ	0xFDF
  4307                           postinc2	equ	0xFDE
  4308                           fsr2h	equ	0xFDA
  4309                           fsr2l	equ	0xFD9
  4310                           status	equ	0xFD8
  4311                           
  4312 ;; *************** function _price_check *****************
  4313 ;; Defined at:
  4314 ;;		line 10 in file "dispense.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  chanlinkbit     1    6[BANK0 ] unsigned char 
  4319 ;;  savebut         1    5[BANK0 ] unsigned char 
  4320 ;;  savechan        1    4[BANK0 ] unsigned char 
  4321 ;;  i               1    7[BANK0 ] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      unsigned char 
  4324 ;; Registers used:
  4325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;Total ram usage:        6 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    8
  4338 ;; This function calls:
  4339 ;;		_DATAEE_ReadByte
  4340 ;;		_butin
  4341 ;;		_credit_check
  4342 ;;		_credit_subtract
  4343 ;;		_dispense
  4344 ;;		_get_channel
  4345 ;;		_give_change
  4346 ;;		_lcd_string
  4347 ;;		_note_disable
  4348 ;; This function is called by:
  4349 ;;		_main
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text9
  4354  0101BA                     __ptext9:
  4355                           	opt stack 0
  4356  0101BA                     _price_check:
  4357                           	opt stack 22
  4358                           
  4359                           ;dispense.c: 13: channel = 0x00;
  4360                           
  4361                           ;incstack = 0
  4362  0101BA  0E00               	movlw	0
  4363  0101BC  6E30               	movwf	_channel,c	;volatile
  4364                           
  4365                           ;dispense.c: 14: cash = credit_check();
  4366  0101BE  EC0E  F095         	call	_credit_check	;wreg free
  4367  0101C2  6E39               	movwf	_cash,c	;volatile
  4368                           
  4369                           ;dispense.c: 15: if(lowprice > cash)
  4370  0101C4  5033               	movf	_lowprice,w,c	;volatile
  4371  0101C6  5C39               	subwf	_cash,w,c	;volatile
  4372  0101C8  B0D8               	btfsc	status,0,c
  4373  0101CA  D002               	goto	l4438
  4374                           
  4375                           ;dispense.c: 16: {
  4376                           ;dispense.c: 17: return 0;
  4377  0101CC  0E00               	movlw	0
  4378  0101CE  0012               	return	
  4379  0101D0                     l4438:
  4380                           
  4381                           ;dispense.c: 18: }
  4382                           ;dispense.c: 19: if(highprice <= cash && !venflags.hiprice)
  4383  0101D0  5034               	movf	_highprice,w,c	;volatile
  4384  0101D2  5C39               	subwf	_cash,w,c	;volatile
  4385  0101D4  B0D8               	btfsc	status,0,c
  4386  0101D6  B82F               	btfsc	_venflags+2,4,c
  4387  0101D8  D003               	goto	l4440
  4388                           
  4389                           ;dispense.c: 20: {
  4390                           ;dispense.c: 21: note_disable();
  4391  0101DA  EC22  F096         	call	_note_disable	;wreg free
  4392                           
  4393                           ;dispense.c: 22: venflags.hiprice = 1;
  4394  0101DE  882F               	bsf	_venflags+2,4,c
  4395  0101E0                     l4440:
  4396                           
  4397                           ;dispense.c: 23: }
  4398                           ;dispense.c: 24: chanmask = 0;
  4399  0101E0  0E00               	movlw	0
  4400  0101E2  6E32               	movwf	_chanmask,c	;volatile
  4401                           
  4402                           ;dispense.c: 25: char i = 7;
  4403  0101E4  0E07               	movlw	7
  4404  0101E6  0100               	movlb	0	; () banked
  4405  0101E8  6FB9               	movwf	price_check@i& (0+255),b
  4406                           
  4407                           ;dispense.c: 26: while(i > 0x00)
  4408  0101EA  D013               	goto	l4441
  4409  0101EC                     
  4410                           ; BSR set to: 0
  4411                           ;dispense.c: 27: {
  4412                           ;dispense.c: 28: if(pricevend[i] <= cash)
  4413                           
  4414                           ; BSR set to: 0
  4415  0101EC  51B9               	movf	price_check@i& (0+255),w,b
  4416  0101EE  0D01               	mullw	1
  4417  0101F0  0E7F               	movlw	low _pricevend
  4418  0101F2  24F3               	addwf	prodl,w,c
  4419  0101F4  6ED9               	movwf	fsr2l,c
  4420  0101F6  0E00               	movlw	high _pricevend
  4421  0101F8  20F4               	addwfc	prodh,w,c
  4422  0101FA  6EDA               	movwf	fsr2h,c
  4423  0101FC  50DE               	movf	postinc2,w,c
  4424  0101FE  5C39               	subwf	_cash,w,c	;volatile
  4425  010200  A0D8               	btfss	status,0,c
  4426  010202  D003               	goto	l4443
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;dispense.c: 29: {
  4430                           ;dispense.c: 30: chanmask = chanmask | 0x01;
  4431  010204  5032               	movf	_chanmask,w,c	;volatile
  4432  010206  0901               	iorlw	1
  4433  010208  6E32               	movwf	_chanmask,c	;volatile
  4434  01020A                     l4443:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;dispense.c: 31: }
  4438                           ;dispense.c: 32: chanmask = chanmask << 1;
  4439  01020A  5032               	movf	_chanmask,w,c	;volatile
  4440  01020C  2432               	addwf	_chanmask,w,c	;volatile
  4441  01020E  6E32               	movwf	_chanmask,c	;volatile
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;dispense.c: 33: i--;
  4445  010210  07B9               	decf	price_check@i& (0+255),f,b
  4446  010212                     l4441:
  4447                           
  4448                           ; BSR set to: 0
  4449                           
  4450                           ; BSR set to: 0
  4451  010212  51B9               	movf	price_check@i& (0+255),w,b
  4452  010214  A4D8               	btfss	status,2,c
  4453  010216  D7EA               	goto	l4442
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;dispense.c: 34: }
  4457                           ;dispense.c: 35: if(pricevend[0] <= cash)
  4458                           
  4459                           ; BSR set to: 0
  4460  010218  517F               	movf	_pricevend& (0+255),w,b	;volatile
  4461  01021A  5C39               	subwf	_cash,w,c	;volatile
  4462  01021C  A0D8               	btfss	status,0,c
  4463  01021E  D003               	goto	l4445
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;dispense.c: 36: {
  4467                           ;dispense.c: 37: chanmask = chanmask | 0x01;
  4468  010220  5032               	movf	_chanmask,w,c	;volatile
  4469  010222  0901               	iorlw	1
  4470  010224  6E32               	movwf	_chanmask,c	;volatile
  4471  010226                     l4445:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;dispense.c: 38: }
  4475                           ;dispense.c: 39: chanmask = chanmask & ~errormask;
  4476  010226  5031               	movf	_errormask,w,c	;volatile
  4477  010228  0AFF               	xorlw	255
  4478  01022A  1432               	andwf	_chanmask,w,c	;volatile
  4479  01022C  6E32               	movwf	_chanmask,c	;volatile
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;dispense.c: 40: venflags.error = 0;
  4483  01022E  922D               	bcf	_venflags,1,c
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;dispense.c: 44: LATCbits.LC2 = 1;
  4487  010230  8485               	bsf	3973,2,c	;volatile
  4488                           
  4489                           ;dispense.c: 45: LATB = chanmask & 0x0F;
  4490  010232  5032               	movf	_chanmask,w,c	;volatile
  4491  010234  0B0F               	andlw	15
  4492  010236  6E84               	movwf	3972,c	;volatile
  4493                           
  4494                           ;dispense.c: 46: LATD = chanmask & 0xF0;
  4495  010238  5032               	movf	_chanmask,w,c	;volatile
  4496  01023A  0BF0               	andlw	240
  4497  01023C  6E86               	movwf	3974,c	;volatile
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;dispense.c: 47: buttons = butin();
  4501  01023E  ECEA  F091         	call	_butin	;wreg free
  4502  010242  6E38               	movwf	_buttons,c	;volatile
  4503                           
  4504                           ;dispense.c: 48: if((buttons & errormask) != 0x00)
  4505  010244  5038               	movf	_buttons,w,c	;volatile
  4506  010246  1431               	andwf	_errormask,w,c	;volatile
  4507  010248  0900               	iorlw	0
  4508  01024A  B4D8               	btfsc	status,2,c
  4509  01024C  D014               	goto	l4446
  4510                           
  4511                           ;dispense.c: 49: {
  4512                           ;dispense.c: 50: if(!venflags.pricedisplay)
  4513  01024E  B42F               	btfsc	_venflags+2,2,c
  4514  010250  D010               	goto	l4447
  4515                           
  4516                           ;dispense.c: 51: {
  4517                           ;dispense.c: 52: lcd_string(emptymsg, line1);
  4518  010252  0EBA               	movlw	low _emptymsg
  4519  010254  6E24               	movwf	lcd_string@lcdstring,c
  4520  010256  0EFF               	movlw	high _emptymsg
  4521  010258  6E25               	movwf	lcd_string@lcdstring+1,c
  4522  01025A  0E4A               	movlw	low _line1
  4523  01025C  6EF6               	movwf	tblptrl,c
  4524  01025E                     	if	1	;There is more than 1 active tblptr byte
  4525  01025E  0EFC               	movlw	high _line1
  4526  010260  6EF7               	movwf	tblptrh,c
  4527  010262                     	endif
  4528  010262                     	if	1	;There are 3 active tblptr bytes
  4529  010262  0E00               	movlw	low (_line1 shr (0+16))
  4530  010264  6EF8               	movwf	tblptru,c
  4531  010266                     	endif
  4532  010266  0008               	tblrd		*
  4533  010268  CFF5 F026          	movff	tablat,lcd_string@lcdline
  4534  01026C  EC78  F08A         	call	_lcd_string	;wreg free
  4535                           
  4536                           ;dispense.c: 53: venflags.pricedisplay = 1;
  4537  010270  842F               	bsf	_venflags+2,2,c
  4538  010272                     l4447:
  4539                           
  4540                           ;dispense.c: 54: }
  4541                           ;dispense.c: 56: return 0;
  4542  010272  0E00               	movlw	0
  4543  010274  0012               	return	
  4544  010276                     l4446:
  4545                           
  4546                           ;dispense.c: 57: }
  4547                           ;dispense.c: 58: buttons = buttons & chanmask;
  4548  010276  5038               	movf	_buttons,w,c	;volatile
  4549  010278  1432               	andwf	_chanmask,w,c	;volatile
  4550  01027A  6E38               	movwf	_buttons,c	;volatile
  4551                           
  4552                           ;dispense.c: 59: if(buttons != 0)
  4553  01027C  5038               	movf	_buttons,w,c	;volatile
  4554  01027E  B4D8               	btfsc	status,2,c
  4555  010280  D056               	goto	l4448
  4556                           
  4557                           ;dispense.c: 60: {
  4558                           ;dispense.c: 61: channel = get_channel(buttons);
  4559  010282  5038               	movf	_buttons,w,c	;volatile
  4560  010284  EC3E  F095         	call	_get_channel
  4561  010288  6E30               	movwf	_channel,c	;volatile
  4562                           
  4563                           ;dispense.c: 62: vendprice = pricevend[channel];
  4564  01028A  5030               	movf	_channel,w,c	;volatile
  4565  01028C  0D01               	mullw	1
  4566  01028E  0E7F               	movlw	low _pricevend
  4567  010290  24F3               	addwf	prodl,w,c
  4568  010292  6ED9               	movwf	fsr2l,c
  4569  010294  0E00               	movlw	high _pricevend
  4570  010296  20F4               	addwfc	prodh,w,c
  4571  010298  6EDA               	movwf	fsr2h,c
  4572  01029A  50DF               	movf	indf2,w,c
  4573  01029C  6E37               	movwf	_vendprice,c	;volatile
  4574                           
  4575                           ;dispense.c: 63: uint8_t savechan = channel;
  4576  01029E  C030  F0B6         	movff	_channel,price_check@savechan	;volatile
  4577                           
  4578                           ;dispense.c: 64: uint8_t savebut = buttons;
  4579  0102A2  C038  F0B7         	movff	_buttons,price_check@savebut	;volatile
  4580                           
  4581                           ;dispense.c: 66: if(channel > 0x03)
  4582  0102A6  0E03               	movlw	3
  4583  0102A8  6430               	cpfsgt	_channel,c	;volatile
  4584  0102AA  D004               	goto	l4449
  4585                           
  4586                           ;dispense.c: 67: {
  4587                           ;dispense.c: 68: buttons = 0x80;
  4588  0102AC  0E80               	movlw	128
  4589  0102AE  6E38               	movwf	_buttons,c	;volatile
  4590                           
  4591                           ;dispense.c: 69: channel = 0x07;
  4592  0102B0  0E07               	movlw	7
  4593  0102B2  6E30               	movwf	_channel,c	;volatile
  4594  0102B4                     l4449:
  4595                           
  4596                           ;dispense.c: 70: }
  4597                           ;dispense.c: 71: dispense(channel);
  4598  0102B4  5030               	movf	_channel,w,c	;volatile
  4599  0102B6  EC77  F091         	call	_dispense
  4600                           
  4601                           ;dispense.c: 72: channel = savechan;
  4602  0102BA  C0B6  F030         	movff	price_check@savechan,_channel	;volatile
  4603                           
  4604                           ;dispense.c: 73: buttons = savebut;
  4605  0102BE  C0B7  F038         	movff	price_check@savebut,_buttons	;volatile
  4606                           
  4607                           ;dispense.c: 74: uint8_t chanlinkbit = DATAEE_ReadByte(chan1linkbits + channel);
  4608  0102C2  0E07               	movlw	low _chan1linkbits
  4609  0102C4  6EF6               	movwf	tblptrl,c
  4610  0102C6                     	if	1	;There is more than 1 active tblptr byte
  4611  0102C6  0EFC               	movlw	high _chan1linkbits
  4612  0102C8  6EF7               	movwf	tblptrh,c
  4613  0102CA                     	endif
  4614  0102CA                     	if	1	;There are 3 active tblptr bytes
  4615  0102CA  0E00               	movlw	low (_chan1linkbits shr (0+16))
  4616  0102CC  6EF8               	movwf	tblptru,c
  4617  0102CE                     	endif
  4618  0102CE  0009               	tblrd		*+
  4619  0102D0  CFF5 F0B4          	movff	tablat,??_price_check
  4620  0102D4  0009               	tblrd		*+
  4621  0102D6  CFF5 F0B5          	movff	tablat,??_price_check+1
  4622  0102DA  5030               	movf	_channel,w,c	;volatile
  4623  0102DC  0100               	movlb	0	; () banked
  4624  0102DE  25B4               	addwf	??_price_check& (0+255),w,b
  4625  0102E0  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  4626  0102E2  0E00               	movlw	0
  4627  0102E4  21B5               	addwfc	(??_price_check+1)& (0+255),w,b
  4628  0102E6  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  4629  0102E8  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  4630  0102EC  0100               	movlb	0	; () banked
  4631  0102EE  6FB8               	movwf	price_check@chanlinkbit& (0+255),b
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;dispense.c: 75: if(chanlinkbit != 0x00 && !venflags.error)
  4635  0102F0  51B8               	movf	price_check@chanlinkbit& (0+255),w,b
  4636  0102F2  A4D8               	btfss	status,2,c
  4637                           
  4638                           ; BSR set to: 0
  4639  0102F4  B22D               	btfsc	_venflags,1,c
  4640  0102F6  D007               	goto	l4450
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;dispense.c: 76: {
  4644                           ;dispense.c: 77: channel = get_channel(chanlinkbit);
  4645  0102F8  51B8               	movf	price_check@chanlinkbit& (0+255),w,b
  4646  0102FA  EC3E  F095         	call	_get_channel
  4647  0102FE  6E30               	movwf	_channel,c	;volatile
  4648                           
  4649                           ;dispense.c: 78: dispense(channel);
  4650  010300  5030               	movf	_channel,w,c	;volatile
  4651  010302  EC77  F091         	call	_dispense
  4652  010306                     l4450:
  4653                           
  4654                           ;dispense.c: 79: }
  4655                           ;dispense.c: 80: credit_subtract(vendprice);
  4656  010306  5037               	movf	_vendprice,w,c	;volatile
  4657  010308  ECD0  F090         	call	_credit_subtract
  4658                           
  4659                           ;dispense.c: 81: venflags.hiprice = 0;
  4660  01030C  982F               	bcf	_venflags+2,4,c
  4661                           
  4662                           ;dispense.c: 82: cash = credit_check();
  4663  01030E  EC0E  F095         	call	_credit_check	;wreg free
  4664  010312  6E39               	movwf	_cash,c	;volatile
  4665                           
  4666                           ;dispense.c: 83: if(cash > 0 && !venflags.nochange && !venflags.error)
  4667  010314  5039               	movf	_cash,w,c	;volatile
  4668  010316  A4D8               	btfss	status,2,c
  4669  010318  B62D               	btfsc	_venflags,3,c
  4670  01031A  D005               	goto	l4451
  4671  01031C  B22D               	btfsc	_venflags,1,c
  4672  01031E  D003               	goto	l4451
  4673                           
  4674                           ;dispense.c: 84: {
  4675                           ;dispense.c: 86: give_change(cash);
  4676  010320  5039               	movf	_cash,w,c	;volatile
  4677  010322  ECFB  F090         	call	_give_change
  4678  010326                     l4451:
  4679                           
  4680                           ;dispense.c: 87: }
  4681                           ;dispense.c: 88: LATAbits.LA5 = 0;
  4682  010326  9A83               	bcf	3971,5,c	;volatile
  4683                           
  4684                           ;dispense.c: 89: LATCbits.LC2 = 1;
  4685  010328  8485               	bsf	3973,2,c	;volatile
  4686                           
  4687                           ;dispense.c: 90: return 1;
  4688  01032A  0E01               	movlw	1
  4689  01032C  0012               	return	
  4690  01032E                     l4448:
  4691                           
  4692                           ;dispense.c: 92: else
  4693                           ;dispense.c: 93: {
  4694                           ;dispense.c: 94: venflags.pricedisplay = 0;
  4695  01032E  942F               	bcf	_venflags+2,2,c
  4696                           
  4697                           ;dispense.c: 95: venflags.credisplay = 1;
  4698  010330  882D               	bsf	_venflags,4,c
  4699                           
  4700                           ;dispense.c: 96: }
  4701                           ;dispense.c: 97: return 0;
  4702  010332  0E00               	movlw	0
  4703  010334  0012               	return	
  4704  010336                     __end_of_price_check:
  4705                           	opt stack 0
  4706                           tblptru	equ	0xFF8
  4707                           tblptrh	equ	0xFF7
  4708                           tblptrl	equ	0xFF6
  4709                           tablat	equ	0xFF5
  4710                           prodh	equ	0xFF4
  4711                           prodl	equ	0xFF3
  4712                           postinc0	equ	0xFEE
  4713                           wreg	equ	0xFE8
  4714                           indf2	equ	0xFDF
  4715                           postinc2	equ	0xFDE
  4716                           fsr2h	equ	0xFDA
  4717                           fsr2l	equ	0xFD9
  4718                           status	equ	0xFD8
  4719                           
  4720 ;; *************** function _note_disable *****************
  4721 ;; Defined at:
  4722 ;;		line 126 in file "mdb.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;		None
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;Total ram usage:        0 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    7
  4743 ;; This function calls:
  4744 ;;		_mdb_noten
  4745 ;; This function is called by:
  4746 ;;		_price_check
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text10
  4751  012C44                     __ptext10:
  4752                           	opt stack 0
  4753  012C44                     _note_disable:
  4754                           	opt stack 22
  4755                           
  4756                           ;mdb.c: 128: noteen_byte = 0x00;
  4757                           
  4758                           ;incstack = 0
  4759  012C44  0E00               	movlw	0
  4760  012C46  6E3D               	movwf	_noteen_byte,c	;volatile
  4761                           
  4762                           ;mdb.c: 129: mdb_noten();
  4763  012C48  EC33  F092         	call	_mdb_noten	;wreg free
  4764  012C4C  0012               	return		;funcret
  4765  012C4E                     __end_of_note_disable:
  4766                           	opt stack 0
  4767                           tblptru	equ	0xFF8
  4768                           tblptrh	equ	0xFF7
  4769                           tblptrl	equ	0xFF6
  4770                           tablat	equ	0xFF5
  4771                           prodh	equ	0xFF4
  4772                           prodl	equ	0xFF3
  4773                           postinc0	equ	0xFEE
  4774                           wreg	equ	0xFE8
  4775                           indf2	equ	0xFDF
  4776                           postinc2	equ	0xFDE
  4777                           fsr2h	equ	0xFDA
  4778                           fsr2l	equ	0xFD9
  4779                           status	equ	0xFD8
  4780                           
  4781 ;; *************** function _mdb_noten *****************
  4782 ;; Defined at:
  4783 ;;		line 138 in file "mdb.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    6
  4804 ;; This function calls:
  4805 ;;		_init_mdbdata
  4806 ;;		_mdb_comm
  4807 ;; This function is called by:
  4808 ;;		_mdb_init
  4809 ;;		_note_disable
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text11
  4814  012466                     __ptext11:
  4815                           	opt stack 0
  4816  012466                     _mdb_noten:
  4817                           	opt stack 22
  4818                           
  4819                           ;mdb.c: 140: if(venflags.hiprice)
  4820                           
  4821                           ;incstack = 0
  4822  012466  A82F               	btfss	_venflags+2,4,c
  4823  012468  D002               	goto	l2944
  4824                           
  4825                           ;mdb.c: 141: {
  4826                           ;mdb.c: 142: noteen_byte = 0x00;
  4827  01246A  0E00               	movlw	0
  4828  01246C  6E3D               	movwf	_noteen_byte,c	;volatile
  4829  01246E                     l2944:
  4830                           
  4831                           ;mdb.c: 143: }
  4832                           ;mdb.c: 145: init_mdbdata(0x00);
  4833  01246E  0E00               	movlw	0
  4834  012470  ECD5  F094         	call	_init_mdbdata
  4835                           
  4836                           ;mdb.c: 147: mcount = 3;
  4837  012474  0E03               	movlw	3
  4838  012476  6E42               	movwf	_mcount,c
  4839                           
  4840                           ;mdb.c: 149: mdbdata[0] = 0x00;
  4841  012478  0E00               	movlw	0
  4842  01247A  0100               	movlb	0	; () banked
  4843  01247C  6F60               	movwf	_mdbdata& (0+255),b
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;mdb.c: 150: mdbdata[1] = 0x00;
  4847  01247E  0E00               	movlw	0
  4848  012480  6F61               	movwf	(_mdbdata+1)& (0+255),b
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;mdb.c: 152: mdbdata[2] = noteen_byte;
  4852  012482  C03D  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;mdb.c: 154: mdbdata[3] = 0x00;
  4856  012486  0E00               	movlw	0
  4857  012488  6F63               	movwf	(_mdbdata+3)& (0+255),b
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;mdb.c: 155: mcount = mdb_comm(note_type, mcount);
  4861  01248A  C042  F024         	movff	_mcount,mdb_comm@mcount
  4862  01248E  0E42               	movlw	low _note_type
  4863  012490  6EF6               	movwf	tblptrl,c
  4864  012492                     	if	1	;There is more than 1 active tblptr byte
  4865  012492  0EFC               	movlw	high _note_type
  4866  012494  6EF7               	movwf	tblptrh,c
  4867  012496                     	endif
  4868  012496                     	if	1	;There are 3 active tblptr bytes
  4869  012496  0E00               	movlw	low (_note_type shr (0+16))
  4870  012498  6EF8               	movwf	tblptru,c
  4871  01249A                     	endif
  4872  01249A  0008               	tblrd		*
  4873  01249C  50F5               	movf	tablat,w,c
  4874  01249E  EC03  F085         	call	_mdb_comm
  4875  0124A2  6E42               	movwf	_mcount,c
  4876                           
  4877                           ;mdb.c: 156: mdbflags.vending = 0;
  4878  0124A4  983F               	bcf	_mdbflags,4,c
  4879  0124A6  0012               	return		;funcret
  4880  0124A8                     __end_of_mdb_noten:
  4881                           	opt stack 0
  4882                           tblptru	equ	0xFF8
  4883                           tblptrh	equ	0xFF7
  4884                           tblptrl	equ	0xFF6
  4885                           tablat	equ	0xFF5
  4886                           prodh	equ	0xFF4
  4887                           prodl	equ	0xFF3
  4888                           postinc0	equ	0xFEE
  4889                           wreg	equ	0xFE8
  4890                           indf2	equ	0xFDF
  4891                           postinc2	equ	0xFDE
  4892                           fsr2h	equ	0xFDA
  4893                           fsr2l	equ	0xFD9
  4894                           status	equ	0xFD8
  4895                           
  4896 ;; *************** function _give_change *****************
  4897 ;; Defined at:
  4898 ;;		line 21 in file "hopper.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  paycash         1    wreg     unsigned char 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  paycash         1   31[COMRAM] unsigned char 
  4903 ;;  i               1   32[COMRAM] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;Total ram usage:        2 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    6
  4920 ;; This function calls:
  4921 ;;		_DATAEE_ReadByte
  4922 ;;		___lbdiv
  4923 ;;		_credit_add
  4924 ;;		_credit_subtract
  4925 ;;		_hopper_pay
  4926 ;; This function is called by:
  4927 ;;		_price_check
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text12
  4932  0121F6                     __ptext12:
  4933                           	opt stack 0
  4934  0121F6                     _give_change:
  4935                           	opt stack 23
  4936                           
  4937                           ;incstack = 0
  4938                           ;give_change@paycash stored from wreg
  4939  0121F6  6E2A               	movwf	give_change@paycash,c
  4940                           
  4941                           ;hopper.c: 23: cash = paycash;
  4942  0121F8  C02A  F039         	movff	give_change@paycash,_cash	;volatile
  4943                           
  4944                           ;hopper.c: 24: credit_subtract(cash);
  4945  0121FC  5039               	movf	_cash,w,c	;volatile
  4946  0121FE  ECD0  F090         	call	_credit_subtract
  4947                           
  4948                           ;hopper.c: 25: uint8_t i = DATAEE_ReadByte(hopcoin);
  4949  012202  0E09               	movlw	low _hopcoin
  4950  012204  6EF6               	movwf	tblptrl,c
  4951  012206                     	if	1	;There is more than 1 active tblptr byte
  4952  012206  0EFC               	movlw	high _hopcoin
  4953  012208  6EF7               	movwf	tblptrh,c
  4954  01220A                     	endif
  4955  01220A                     	if	1	;There are 3 active tblptr bytes
  4956  01220A  0E00               	movlw	low (_hopcoin shr (0+16))
  4957  01220C  6EF8               	movwf	tblptru,c
  4958  01220E                     	endif
  4959  01220E  0009               	tblrd		*+
  4960  012210  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  4961  012214  000A               	tblrd		*-
  4962  012216  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  4963  01221A  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  4964  01221E  6E2B               	movwf	give_change@i,c
  4965                           
  4966                           ;hopper.c: 26: change = paycash / i;
  4967  012220  C02B  F01D         	movff	give_change@i,___lbdiv@divisor
  4968  012224  502A               	movf	give_change@paycash,w,c
  4969  012226  EC32  F093         	call	___lbdiv
  4970  01222A  6E3C               	movwf	_change,c
  4971                           
  4972                           ;hopper.c: 27: change = hopper_pay(change);
  4973  01222C  503C               	movf	_change,w,c
  4974  01222E  ECE4  F08E         	call	_hopper_pay
  4975  012232  6E3C               	movwf	_change,c
  4976                           
  4977                           ;hopper.c: 28: if(change > 0)
  4978  012234  503C               	movf	_change,w,c
  4979  012236  B4D8               	btfsc	status,2,c
  4980  012238  0012               	return	
  4981                           
  4982                           ;hopper.c: 29: {
  4983                           ;hopper.c: 30: change = change * i;
  4984  01223A  503C               	movf	_change,w,c
  4985  01223C  022B               	mulwf	give_change@i,c
  4986  01223E  CFF3 F03C          	movff	prodl,_change
  4987                           
  4988                           ;hopper.c: 31: credit_add(change);
  4989  012242  503C               	movf	_change,w,c
  4990  012244  EC76  F090         	call	_credit_add
  4991  012248  0012               	return	
  4992  01224A                     __end_of_give_change:
  4993                           	opt stack 0
  4994                           tblptru	equ	0xFF8
  4995                           tblptrh	equ	0xFF7
  4996                           tblptrl	equ	0xFF6
  4997                           tablat	equ	0xFF5
  4998                           prodh	equ	0xFF4
  4999                           prodl	equ	0xFF3
  5000                           postinc0	equ	0xFEE
  5001                           wreg	equ	0xFE8
  5002                           indf2	equ	0xFDF
  5003                           postinc2	equ	0xFDE
  5004                           fsr2h	equ	0xFDA
  5005                           fsr2l	equ	0xFD9
  5006                           status	equ	0xFD8
  5007                           
  5008 ;; *************** function _credit_subtract *****************
  5009 ;; Defined at:
  5010 ;;		line 136 in file "vend.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  credit          1    wreg     unsigned char 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  credit          1   22[COMRAM] unsigned char 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;Total ram usage:        1 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    3
  5031 ;; This function calls:
  5032 ;;		_DATAEE_ReadByte
  5033 ;;		_DATAEE_WriteByte
  5034 ;; This function is called by:
  5035 ;;		_give_change
  5036 ;;		_price_check
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text13
  5041  0121A0                     __ptext13:
  5042                           	opt stack 0
  5043  0121A0                     _credit_subtract:
  5044                           	opt stack 25
  5045                           
  5046                           ;incstack = 0
  5047                           ;credit_subtract@credit stored from wreg
  5048  0121A0  6E21               	movwf	credit_subtract@credit,c
  5049                           
  5050                           ;vend.c: 138: cash = DATAEE_ReadByte(credmem);
  5051  0121A2  0E1B               	movlw	low _credmem
  5052  0121A4  6EF6               	movwf	tblptrl,c
  5053  0121A6                     	if	1	;There is more than 1 active tblptr byte
  5054  0121A6  0EFC               	movlw	high _credmem
  5055  0121A8  6EF7               	movwf	tblptrh,c
  5056  0121AA                     	endif
  5057  0121AA                     	if	1	;There are 3 active tblptr bytes
  5058  0121AA  0E00               	movlw	low (_credmem shr (0+16))
  5059  0121AC  6EF8               	movwf	tblptru,c
  5060  0121AE                     	endif
  5061  0121AE  0009               	tblrd		*+
  5062  0121B0  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  5063  0121B4  000A               	tblrd		*-
  5064  0121B6  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  5065  0121BA  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  5066  0121BE  6E39               	movwf	_cash,c	;volatile
  5067                           
  5068                           ;vend.c: 139: cash = (cash - credit) & 0xFF;
  5069  0121C0  5021               	movf	credit_subtract@credit,w,c
  5070  0121C2  0800               	sublw	0
  5071  0121C4  2439               	addwf	_cash,w,c	;volatile
  5072  0121C6  6E39               	movwf	_cash,c	;volatile
  5073                           
  5074                           ;vend.c: 140: DATAEE_WriteByte(credmem, cash);
  5075  0121C8  0E1B               	movlw	low _credmem
  5076  0121CA  6EF6               	movwf	tblptrl,c
  5077  0121CC                     	if	1	;There is more than 1 active tblptr byte
  5078  0121CC  0EFC               	movlw	high _credmem
  5079  0121CE  6EF7               	movwf	tblptrh,c
  5080  0121D0                     	endif
  5081  0121D0                     	if	1	;There are 3 active tblptr bytes
  5082  0121D0  0E00               	movlw	low (_credmem shr (0+16))
  5083  0121D2  6EF8               	movwf	tblptru,c
  5084  0121D4                     	endif
  5085  0121D4  0009               	tblrd		*+
  5086  0121D6  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  5087  0121DA  000A               	tblrd		*-
  5088  0121DC  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  5089  0121E0  C039  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  5090  0121E4  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  5091                           
  5092                           ;vend.c: 141: if(cash == 0)
  5093  0121E8  5039               	movf	_cash,w,c	;volatile
  5094  0121EA  A4D8               	btfss	status,2,c
  5095  0121EC  0012               	return	
  5096                           
  5097                           ;vend.c: 142: {
  5098                           ;vend.c: 143: venflags.iscredit = 0;
  5099  0121EE  902D               	bcf	_venflags,0,c
  5100                           
  5101                           ;vend.c: 144: venflags.inscoin = 1;
  5102  0121F0  842D               	bsf	_venflags,2,c
  5103                           
  5104                           ;vend.c: 145: venflags.credisplay = 0;
  5105  0121F2  982D               	bcf	_venflags,4,c
  5106  0121F4  0012               	return	
  5107  0121F6                     __end_of_credit_subtract:
  5108                           	opt stack 0
  5109                           tblptru	equ	0xFF8
  5110                           tblptrh	equ	0xFF7
  5111                           tblptrl	equ	0xFF6
  5112                           tablat	equ	0xFF5
  5113                           prodh	equ	0xFF4
  5114                           prodl	equ	0xFF3
  5115                           postinc0	equ	0xFEE
  5116                           wreg	equ	0xFE8
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           fsr2h	equ	0xFDA
  5120                           fsr2l	equ	0xFD9
  5121                           status	equ	0xFD8
  5122                           
  5123 ;; *************** function _credit_add *****************
  5124 ;; Defined at:
  5125 ;;		line 121 in file "vend.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  credit          1    wreg     unsigned char 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  credit          1   29[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;Total ram usage:        1 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    5
  5146 ;; This function calls:
  5147 ;;		_DATAEE_ReadByte
  5148 ;;		_DATAEE_WriteByte
  5149 ;;		_Update_cashaudit
  5150 ;; This function is called by:
  5151 ;;		_main
  5152 ;;		_give_change
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text14
  5157  0120EC                     __ptext14:
  5158                           	opt stack 0
  5159  0120EC                     _credit_add:
  5160                           	opt stack 23
  5161                           
  5162                           ;incstack = 0
  5163                           ;credit_add@credit stored from wreg
  5164  0120EC  6E28               	movwf	credit_add@credit,c
  5165                           
  5166                           ;vend.c: 123: cash = DATAEE_ReadByte(credmem);
  5167  0120EE  0E1B               	movlw	low _credmem
  5168  0120F0  6EF6               	movwf	tblptrl,c
  5169  0120F2                     	if	1	;There is more than 1 active tblptr byte
  5170  0120F2  0EFC               	movlw	high _credmem
  5171  0120F4  6EF7               	movwf	tblptrh,c
  5172  0120F6                     	endif
  5173  0120F6                     	if	1	;There are 3 active tblptr bytes
  5174  0120F6  0E00               	movlw	low (_credmem shr (0+16))
  5175  0120F8  6EF8               	movwf	tblptru,c
  5176  0120FA                     	endif
  5177  0120FA  0009               	tblrd		*+
  5178  0120FC  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  5179  012100  000A               	tblrd		*-
  5180  012102  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  5181  012106  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  5182  01210A  6E39               	movwf	_cash,c	;volatile
  5183                           
  5184                           ;vend.c: 124: cash = cash + credit;
  5185  01210C  5039               	movf	_cash,w,c	;volatile
  5186  01210E  2428               	addwf	credit_add@credit,w,c
  5187  012110  6E39               	movwf	_cash,c	;volatile
  5188                           
  5189                           ;vend.c: 125: DATAEE_WriteByte(credmem, cash);
  5190  012112  0E1B               	movlw	low _credmem
  5191  012114  6EF6               	movwf	tblptrl,c
  5192  012116                     	if	1	;There is more than 1 active tblptr byte
  5193  012116  0EFC               	movlw	high _credmem
  5194  012118  6EF7               	movwf	tblptrh,c
  5195  01211A                     	endif
  5196  01211A                     	if	1	;There are 3 active tblptr bytes
  5197  01211A  0E00               	movlw	low (_credmem shr (0+16))
  5198  01211C  6EF8               	movwf	tblptru,c
  5199  01211E                     	endif
  5200  01211E  0009               	tblrd		*+
  5201  012120  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  5202  012124  000A               	tblrd		*-
  5203  012126  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  5204  01212A  C039  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
  5205  01212E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  5206                           
  5207                           ;vend.c: 126: if(cash != 0)
  5208  012132  5039               	movf	_cash,w,c	;volatile
  5209  012134  B4D8               	btfsc	status,2,c
  5210  012136  D003               	goto	l2181
  5211                           
  5212                           ;vend.c: 127: {
  5213                           ;vend.c: 128: venflags.iscredit = 1;
  5214  012138  802D               	bsf	_venflags,0,c
  5215                           
  5216                           ;vend.c: 129: venflags.inscoin = 0;
  5217  01213A  942D               	bcf	_venflags,2,c
  5218                           
  5219                           ;vend.c: 130: venflags.credisplay = 1;
  5220  01213C  882D               	bsf	_venflags,4,c
  5221  01213E                     l2181:
  5222                           
  5223                           ;vend.c: 132: }
  5224                           ;vend.c: 133: Update_cashaudit(credit);
  5225  01213E  5028               	movf	credit_add@credit,w,c
  5226  012140  EC04  F089         	call	_Update_cashaudit
  5227  012144  0012               	return		;funcret
  5228  012146                     __end_of_credit_add:
  5229                           	opt stack 0
  5230                           tblptru	equ	0xFF8
  5231                           tblptrh	equ	0xFF7
  5232                           tblptrl	equ	0xFF6
  5233                           tablat	equ	0xFF5
  5234                           prodh	equ	0xFF4
  5235                           prodl	equ	0xFF3
  5236                           postinc0	equ	0xFEE
  5237                           wreg	equ	0xFE8
  5238                           indf2	equ	0xFDF
  5239                           postinc2	equ	0xFDE
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function _Update_cashaudit *****************
  5245 ;; Defined at:
  5246 ;;		line 106 in file "vend.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  addcash         1    wreg     unsigned char 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  addcash         1   28[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;Total ram usage:        1 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    4
  5267 ;; This function calls:
  5268 ;;		_Read_NVstore
  5269 ;;		_Write_NVstore
  5270 ;; This function is called by:
  5271 ;;		_credit_add
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text15
  5276  011208                     __ptext15:
  5277                           	opt stack 0
  5278  011208                     _Update_cashaudit:
  5279                           	opt stack 23
  5280                           
  5281                           ;incstack = 0
  5282                           ;Update_cashaudit@addcash stored from wreg
  5283  011208  6E27               	movwf	Update_cashaudit@addcash,c
  5284                           
  5285                           ;vend.c: 108: Read_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
  5286  01120A  0E19               	movlw	low _cashinv
  5287  01120C  6EF6               	movwf	tblptrl,c
  5288  01120E                     	if	1	;There is more than 1 active tblptr byte
  5289  01120E  0EFC               	movlw	high _cashinv
  5290  011210  6EF7               	movwf	tblptrh,c
  5291  011212                     	endif
  5292  011212                     	if	1	;There are 3 active tblptr bytes
  5293  011212  0E00               	movlw	low (_cashinv shr (0+16))
  5294  011214  6EF8               	movwf	tblptru,c
  5295  011216                     	endif
  5296  011216  0009               	tblrd		*+
  5297  011218  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
  5298  01121C  000A               	tblrd		*-
  5299  01121E  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
  5300  011222  0E4B               	movlw	low _pvcash
  5301  011224  6E21               	movwf	Read_NVstore@storemem,c
  5302  011226  0E00               	movlw	high _pvcash
  5303  011228  6E22               	movwf	Read_NVstore@storemem+1,c
  5304  01122A  0E02               	movlw	2
  5305  01122C  6E23               	movwf	Read_NVstore@storesize,c
  5306  01122E  EC11  F094         	call	_Read_NVstore	;wreg free
  5307                           
  5308                           ;vend.c: 109: Read_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
  5309  011232  0E15               	movlw	low _cashint
  5310  011234  6EF6               	movwf	tblptrl,c
  5311  011236                     	if	1	;There is more than 1 active tblptr byte
  5312  011236  0EFC               	movlw	high _cashint
  5313  011238  6EF7               	movwf	tblptrh,c
  5314  01123A                     	endif
  5315  01123A                     	if	1	;There are 3 active tblptr bytes
  5316  01123A  0E00               	movlw	low (_cashint shr (0+16))
  5317  01123C  6EF8               	movwf	tblptru,c
  5318  01123E                     	endif
  5319  01123E  0009               	tblrd		*+
  5320  011240  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
  5321  011244  000A               	tblrd		*-
  5322  011246  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
  5323  01124A  0E48               	movlw	low _pnvcash
  5324  01124C  6E21               	movwf	Read_NVstore@storemem,c
  5325  01124E  0E00               	movlw	high _pnvcash
  5326  011250  6E22               	movwf	Read_NVstore@storemem+1,c
  5327  011252  0E03               	movlw	3
  5328  011254  6E23               	movwf	Read_NVstore@storesize,c
  5329  011256  EC11  F094         	call	_Read_NVstore	;wreg free
  5330                           
  5331                           ;vend.c: 111: pvcash = pvcash + (uint16_t)addcash;
  5332  01125A  5027               	movf	Update_cashaudit@addcash,w,c
  5333  01125C  244B               	addwf	_pvcash,w,c	;volatile
  5334  01125E  6E4B               	movwf	_pvcash,c	;volatile
  5335  011260  0E00               	movlw	0
  5336  011262  204C               	addwfc	_pvcash+1,w,c	;volatile
  5337  011264  6E4C               	movwf	_pvcash+1,c	;volatile
  5338                           
  5339                           ;vend.c: 113: pnvcash = pnvcash + (uint24_t)addcash;
  5340  011266  5027               	movf	Update_cashaudit@addcash,w,c
  5341  011268  2448               	addwf	_pnvcash,w,c	;volatile
  5342  01126A  6E48               	movwf	_pnvcash,c	;volatile
  5343  01126C  0E00               	movlw	0
  5344  01126E  2049               	addwfc	_pnvcash+1,w,c	;volatile
  5345  011270  6E49               	movwf	_pnvcash+1,c	;volatile
  5346  011272  0E00               	movlw	0
  5347  011274  204A               	addwfc	_pnvcash+2,w,c	;volatile
  5348  011276  6E4A               	movwf	_pnvcash+2,c	;volatile
  5349                           
  5350                           ;vend.c: 115: Write_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
  5351  011278  0E19               	movlw	low _cashinv
  5352  01127A  6EF6               	movwf	tblptrl,c
  5353  01127C                     	if	1	;There is more than 1 active tblptr byte
  5354  01127C  0EFC               	movlw	high _cashinv
  5355  01127E  6EF7               	movwf	tblptrh,c
  5356  011280                     	endif
  5357  011280                     	if	1	;There are 3 active tblptr bytes
  5358  011280  0E00               	movlw	low (_cashinv shr (0+16))
  5359  011282  6EF8               	movwf	tblptru,c
  5360  011284                     	endif
  5361  011284  0009               	tblrd		*+
  5362  011286  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
  5363  01128A  000A               	tblrd		*-
  5364  01128C  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
  5365  011290  0E4B               	movlw	low _pvcash
  5366  011292  6E23               	movwf	Write_NVstore@storemem,c
  5367  011294  0E00               	movlw	high _pvcash
  5368  011296  6E24               	movwf	Write_NVstore@storemem+1,c
  5369  011298  0E02               	movlw	2
  5370  01129A  6E25               	movwf	Write_NVstore@storesize,c
  5371  01129C  ECA5  F093         	call	_Write_NVstore	;wreg free
  5372                           
  5373                           ;vend.c: 116: Write_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
  5374  0112A0  0E15               	movlw	low _cashint
  5375  0112A2  6EF6               	movwf	tblptrl,c
  5376  0112A4                     	if	1	;There is more than 1 active tblptr byte
  5377  0112A4  0EFC               	movlw	high _cashint
  5378  0112A6  6EF7               	movwf	tblptrh,c
  5379  0112A8                     	endif
  5380  0112A8                     	if	1	;There are 3 active tblptr bytes
  5381  0112A8  0E00               	movlw	low (_cashint shr (0+16))
  5382  0112AA  6EF8               	movwf	tblptru,c
  5383  0112AC                     	endif
  5384  0112AC  0009               	tblrd		*+
  5385  0112AE  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
  5386  0112B2  000A               	tblrd		*-
  5387  0112B4  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
  5388  0112B8  0E48               	movlw	low _pnvcash
  5389  0112BA  6E23               	movwf	Write_NVstore@storemem,c
  5390  0112BC  0E00               	movlw	high _pnvcash
  5391  0112BE  6E24               	movwf	Write_NVstore@storemem+1,c
  5392  0112C0  0E03               	movlw	3
  5393  0112C2  6E25               	movwf	Write_NVstore@storesize,c
  5394  0112C4  ECA5  F093         	call	_Write_NVstore	;wreg free
  5395  0112C8  F000               	nop		;# 
  5396  0112CA  0012               	return		;funcret
  5397  0112CC                     __end_of_Update_cashaudit:
  5398                           	opt stack 0
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           prodh	equ	0xFF4
  5404                           prodl	equ	0xFF3
  5405                           postinc0	equ	0xFEE
  5406                           wreg	equ	0xFE8
  5407                           indf2	equ	0xFDF
  5408                           postinc2	equ	0xFDE
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function ___lbdiv *****************
  5414 ;; Defined at:
  5415 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/lbdiv.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  dividend        1    wreg     unsigned char 
  5418 ;;  divisor         1   18[COMRAM] unsigned char 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  dividend        1   19[COMRAM] unsigned char 
  5421 ;;  quotient        1   21[COMRAM] unsigned char 
  5422 ;;  counter         1   20[COMRAM] unsigned char 
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      unsigned char 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5432 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;Total ram usage:        4 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    2
  5439 ;; This function calls:
  5440 ;;		Nothing
  5441 ;; This function is called by:
  5442 ;;		_give_change
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text16
  5447  012664                     __ptext16:
  5448                           	opt stack 0
  5449  012664                     ___lbdiv:
  5450                           	opt stack 26
  5451                           
  5452                           ;incstack = 0
  5453                           ;___lbdiv@dividend stored from wreg
  5454  012664  6E1E               	movwf	___lbdiv@dividend,c
  5455  012666  0E00               	movlw	0
  5456  012668  6E20               	movwf	___lbdiv@quotient,c
  5457  01266A  501D               	movf	___lbdiv@divisor,w,c
  5458  01266C  B4D8               	btfsc	status,2,c
  5459  01266E  D015               	goto	l5285
  5460  012670  0E01               	movlw	1
  5461  012672  6E1F               	movwf	___lbdiv@counter,c
  5462  012674  D003               	goto	l5280
  5463  012676  90D8               	bcf	status,0,c
  5464  012678  361D               	rlcf	___lbdiv@divisor,f,c
  5465  01267A  2A1F               	incf	___lbdiv@counter,f,c
  5466  01267C                     l5280:
  5467  01267C  AE1D               	btfss	___lbdiv@divisor,7,c
  5468  01267E  D7FB               	goto	l5281
  5469  012680                     u4900:
  5470  012680  90D8               	bcf	status,0,c
  5471  012682  3620               	rlcf	___lbdiv@quotient,f,c
  5472  012684  501D               	movf	___lbdiv@divisor,w,c
  5473  012686  5C1E               	subwf	___lbdiv@dividend,w,c
  5474  012688  A0D8               	btfss	status,0,c
  5475  01268A  D003               	goto	l5284
  5476  01268C  501D               	movf	___lbdiv@divisor,w,c
  5477  01268E  5E1E               	subwf	___lbdiv@dividend,f,c
  5478  012690  8020               	bsf	___lbdiv@quotient,0,c
  5479  012692                     l5284:
  5480  012692  90D8               	bcf	status,0,c
  5481  012694  321D               	rrcf	___lbdiv@divisor,f,c
  5482  012696  2E1F               	decfsz	___lbdiv@counter,f,c
  5483  012698  D7F3               	goto	u4900
  5484  01269A                     l5285:
  5485  01269A  5020               	movf	___lbdiv@quotient,w,c
  5486  01269C  0012               	return	
  5487  01269E                     __end_of___lbdiv:
  5488                           	opt stack 0
  5489                           tblptru	equ	0xFF8
  5490                           tblptrh	equ	0xFF7
  5491                           tblptrl	equ	0xFF6
  5492                           tablat	equ	0xFF5
  5493                           prodh	equ	0xFF4
  5494                           prodl	equ	0xFF3
  5495                           postinc0	equ	0xFEE
  5496                           wreg	equ	0xFE8
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           fsr2h	equ	0xFDA
  5500                           fsr2l	equ	0xFD9
  5501                           status	equ	0xFD8
  5502                           
  5503 ;; *************** function _dispense *****************
  5504 ;; Defined at:
  5505 ;;		line 100 in file "dispense.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  chanel          1    wreg     unsigned char 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  chanel          1    1[BANK0 ] unsigned char 
  5510 ;;  sensmask        1    0[BANK0 ] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5521 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;Total ram usage:        2 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    5
  5527 ;; This function calls:
  5528 ;;		_DATAEE_ReadByte
  5529 ;;		_update_vends
  5530 ;;		_vend_dispense
  5531 ;;		_vend_nosense
  5532 ;; This function is called by:
  5533 ;;		_price_check
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text17
  5538  0122EE                     __ptext17:
  5539                           	opt stack 0
  5540  0122EE                     _dispense:
  5541                           	opt stack 24
  5542                           
  5543                           ;incstack = 0
  5544                           ;dispense@chanel stored from wreg
  5545  0122EE  0100               	movlb	0	; () banked
  5546  0122F0  6FB3               	movwf	dispense@chanel& (0+255),b
  5547                           
  5548                           ;dispense.c: 102: channel = chanel;
  5549  0122F2  C0B3  F030         	movff	dispense@chanel,_channel	;volatile
  5550                           
  5551                           ;dispense.c: 103: uint8_t sensmask = DATAEE_ReadByte(sensorflags);
  5552  0122F6  0EF7               	movlw	low _sensorflags
  5553  0122F8  6EF6               	movwf	tblptrl,c
  5554  0122FA                     	if	1	;There is more than 1 active tblptr byte
  5555  0122FA  0EFB               	movlw	high _sensorflags
  5556  0122FC  6EF7               	movwf	tblptrh,c
  5557  0122FE                     	endif
  5558  0122FE                     	if	1	;There are 3 active tblptr bytes
  5559  0122FE  0E00               	movlw	low (_sensorflags shr (0+16))
  5560  012300  6EF8               	movwf	tblptru,c
  5561  012302                     	endif
  5562  012302  0009               	tblrd		*+
  5563  012304  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  5564  012308  000A               	tblrd		*-
  5565  01230A  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  5566  01230E  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  5567  012312  0100               	movlb	0	; () banked
  5568  012314  6FB2               	movwf	dispense@sensmask& (0+255),b
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;dispense.c: 104: if((buttons & sensmask) != 0)
  5572  012316  5038               	movf	_buttons,w,c	;volatile
  5573  012318  15B2               	andwf	dispense@sensmask& (0+255),w,b
  5574  01231A  0900               	iorlw	0
  5575  01231C  B4D8               	btfsc	status,2,c
  5576  01231E  D004               	goto	l4455
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;dispense.c: 105: {
  5580                           ;dispense.c: 106: vend_nosense(chanel);
  5581  012320  51B3               	movf	dispense@chanel& (0+255),w,b
  5582  012322  ECA3  F090         	call	_vend_nosense
  5583                           
  5584                           ;dispense.c: 107: }
  5585  012326  D004               	goto	l4456
  5586  012328                     l4455:
  5587                           
  5588                           ;dispense.c: 108: else
  5589                           ;dispense.c: 109: {
  5590                           ;dispense.c: 110: vend_dispense(chanel);
  5591  012328  0100               	movlb	0	; () banked
  5592  01232A  51B3               	movf	dispense@chanel& (0+255),w,b
  5593  01232C  EC69  F08D         	call	_vend_dispense
  5594  012330                     l4456:
  5595                           
  5596                           ;dispense.c: 111: }
  5597                           ;dispense.c: 112: if(!venflags.error)
  5598  012330  B22D               	btfsc	_venflags,1,c
  5599  012332  0012               	return	
  5600                           
  5601                           ;dispense.c: 113: {
  5602                           ;dispense.c: 114: update_vends(channel);
  5603  012334  5030               	movf	_channel,w,c	;volatile
  5604  012336  EC48  F090         	call	_update_vends
  5605  01233A  0012               	return	
  5606  01233C                     __end_of_dispense:
  5607                           	opt stack 0
  5608                           tblptru	equ	0xFF8
  5609                           tblptrh	equ	0xFF7
  5610                           tblptrl	equ	0xFF6
  5611                           tablat	equ	0xFF5
  5612                           prodh	equ	0xFF4
  5613                           prodl	equ	0xFF3
  5614                           postinc0	equ	0xFEE
  5615                           wreg	equ	0xFE8
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           fsr2h	equ	0xFDA
  5619                           fsr2l	equ	0xFD9
  5620                           status	equ	0xFD8
  5621                           
  5622 ;; *************** function _vend_nosense *****************
  5623 ;; Defined at:
  5624 ;;		line 119 in file "dispense.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  chanel          1    wreg     unsigned char 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  chanel          1   23[COMRAM] unsigned char 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;Total ram usage:        3 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    4
  5645 ;; This function calls:
  5646 ;;		_mdb_unlock
  5647 ;; This function is called by:
  5648 ;;		_dispense
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text18
  5653  012146                     __ptext18:
  5654                           	opt stack 0
  5655  012146                     _vend_nosense:
  5656                           	opt stack 24
  5657                           
  5658                           ;incstack = 0
  5659                           ;vend_nosense@chanel stored from wreg
  5660  012146  6E22               	movwf	vend_nosense@chanel,c
  5661                           
  5662                           ;dispense.c: 121: LATB = 0x00;
  5663  012148  0E00               	movlw	0
  5664  01214A  6E84               	movwf	3972,c	;volatile
  5665                           
  5666                           ;dispense.c: 122: LATD = 0x00;
  5667  01214C  0E00               	movlw	0
  5668  01214E  6E86               	movwf	3974,c	;volatile
  5669                           
  5670                           ;dispense.c: 124: LATCbits.LC2 = 0;
  5671  012150  9485               	bcf	3973,2,c	;volatile
  5672                           
  5673                           ;dispense.c: 126: chanmask = 0x01;
  5674  012152  0E01               	movlw	1
  5675  012154  6E32               	movwf	_chanmask,c	;volatile
  5676                           
  5677                           ;dispense.c: 127: chanmask = chanmask << chanel;
  5678  012156  C022  F020         	movff	vend_nosense@chanel,??_vend_nosense
  5679  01215A  C032  F021         	movff	_chanmask,??_vend_nosense+1	;volatile
  5680  01215E  2A20               	incf	??_vend_nosense,f,c
  5681  012160  D002               	goto	u4814
  5682  012162                     u4815:
  5683  012162  90D8               	bcf	status,0,c
  5684  012164  3621               	rlcf	??_vend_nosense+1,f,c
  5685  012166                     u4814:
  5686  012166  2E20               	decfsz	??_vend_nosense,f,c
  5687  012168  D7FC               	goto	u4815
  5688  01216A  5021               	movf	??_vend_nosense+1,w,c
  5689  01216C  6E32               	movwf	_chanmask,c	;volatile
  5690                           
  5691                           ;dispense.c: 128: mdb_unlock();
  5692  01216E  ECA0  F088         	call	_mdb_unlock	;wreg free
  5693                           
  5694                           ;dispense.c: 130: LATAbits.LA5 = 1;
  5695  012172  8A83               	bsf	3971,5,c	;volatile
  5696                           
  5697                           ;dispense.c: 131: LATB = chanmask & 0x0F;
  5698  012174  5032               	movf	_chanmask,w,c	;volatile
  5699  012176  0B0F               	andlw	15
  5700  012178  6E84               	movwf	3972,c	;volatile
  5701                           
  5702                           ;dispense.c: 132: LATD = chanmask & 0xF0;
  5703  01217A  5032               	movf	_chanmask,w,c	;volatile
  5704  01217C  0BF0               	andlw	240
  5705  01217E  6E86               	movwf	3974,c	;volatile
  5706                           
  5707                           ;dispense.c: 133: _delay((unsigned long)((250)*(12000000/4000.0)));
  5708  012180  0E04               	movlw	4
  5709  012182  6E21               	movwf	(??_vend_nosense+1)& (0+255),c
  5710  012184  0ECF               	movlw	207
  5711  012186  6E20               	movwf	??_vend_nosense& (0+255),c
  5712  012188  0E02               	movlw	2
  5713  01218A                     u5707:
  5714  01218A  2EE8               	decfsz	wreg,f,c
  5715  01218C  D7FE               	bra	u5707
  5716  01218E  2E20               	decfsz	??_vend_nosense& (0+255),f,c
  5717  012190  D7FC               	bra	u5707
  5718  012192  2E21               	decfsz	(??_vend_nosense+1)& (0+255),f,c
  5719  012194  D7FA               	bra	u5707
  5720                           
  5721                           ;dispense.c: 134: LATB = 0;
  5722  012196  0E00               	movlw	0
  5723  012198  6E84               	movwf	3972,c	;volatile
  5724                           
  5725                           ;dispense.c: 135: LATD = 0;
  5726  01219A  0E00               	movlw	0
  5727  01219C  6E86               	movwf	3974,c	;volatile
  5728  01219E  0012               	return		;funcret
  5729  0121A0                     __end_of_vend_nosense:
  5730                           	opt stack 0
  5731                           tblptru	equ	0xFF8
  5732                           tblptrh	equ	0xFF7
  5733                           tblptrl	equ	0xFF6
  5734                           tablat	equ	0xFF5
  5735                           prodh	equ	0xFF4
  5736                           prodl	equ	0xFF3
  5737                           postinc0	equ	0xFEE
  5738                           wreg	equ	0xFE8
  5739                           indf2	equ	0xFDF
  5740                           postinc2	equ	0xFDE
  5741                           fsr2h	equ	0xFDA
  5742                           fsr2l	equ	0xFD9
  5743                           status	equ	0xFD8
  5744                           
  5745 ;; *************** function _vend_dispense *****************
  5746 ;; Defined at:
  5747 ;;		line 138 in file "dispense.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  chanel          1    wreg     unsigned char 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  chanel          1   32[COMRAM] unsigned char 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;Total ram usage:        3 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    4
  5768 ;; This function calls:
  5769 ;;		_TMR0_StopTimer
  5770 ;;		_disable_channel
  5771 ;;		_mdb_unlock
  5772 ;;		_set_motortime
  5773 ;; This function is called by:
  5774 ;;		_dispense
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text19
  5779  011AD2                     __ptext19:
  5780                           	opt stack 0
  5781  011AD2                     _vend_dispense:
  5782                           	opt stack 24
  5783                           
  5784                           ;incstack = 0
  5785                           ;vend_dispense@chanel stored from wreg
  5786  011AD2  6E2B               	movwf	vend_dispense@chanel,c
  5787                           
  5788                           ;dispense.c: 140: mdb_unlock();
  5789  011AD4  ECA0  F088         	call	_mdb_unlock	;wreg free
  5790                           
  5791                           ;dispense.c: 141: LATB = 0x00;
  5792  011AD8  0E00               	movlw	0
  5793  011ADA  6E84               	movwf	3972,c	;volatile
  5794                           
  5795                           ;dispense.c: 142: LATD = 0x00;
  5796  011ADC  0E00               	movlw	0
  5797  011ADE  6E86               	movwf	3974,c	;volatile
  5798                           
  5799                           ;dispense.c: 144: LATAbits.LA5 = 1;
  5800  011AE0  8A83               	bsf	3971,5,c	;volatile
  5801                           
  5802                           ;dispense.c: 146: LATCbits.LC2 = 0;
  5803  011AE2  9485               	bcf	3973,2,c	;volatile
  5804                           
  5805                           ;dispense.c: 148: chanmask = 0x01;
  5806  011AE4  0E01               	movlw	1
  5807  011AE6  6E32               	movwf	_chanmask,c	;volatile
  5808                           
  5809                           ;dispense.c: 149: chanmask = chanmask << chanel;
  5810  011AE8  C02B  F029         	movff	vend_dispense@chanel,??_vend_dispense
  5811  011AEC  C032  F02A         	movff	_chanmask,??_vend_dispense+1	;volatile
  5812  011AF0  2A29               	incf	??_vend_dispense,f,c
  5813  011AF2  D002               	goto	u4824
  5814  011AF4                     u4825:
  5815  011AF4  90D8               	bcf	status,0,c
  5816  011AF6  362A               	rlcf	??_vend_dispense+1,f,c
  5817  011AF8                     u4824:
  5818  011AF8  2E29               	decfsz	??_vend_dispense,f,c
  5819  011AFA  D7FC               	goto	u4825
  5820  011AFC  502A               	movf	??_vend_dispense+1,w,c
  5821  011AFE  6E32               	movwf	_chanmask,c	;volatile
  5822                           
  5823                           ;dispense.c: 150: set_motortime(chanel);
  5824  011B00  502B               	movf	vend_dispense@chanel,w,c
  5825  011B02  ECC4  F08B         	call	_set_motortime
  5826                           
  5827                           ;dispense.c: 151: while(!CMOUTbits.MC1OUT && !PIR0bits.TMR0IF)
  5828  011B06  D006               	goto	l4464
  5829  011B08                     
  5830                           ;dispense.c: 152: {
  5831                           ;dispense.c: 153: LATB = chanmask & 0x0F;
  5832  011B08  5032               	movf	_chanmask,w,c	;volatile
  5833  011B0A  0B0F               	andlw	15
  5834  011B0C  6E84               	movwf	3972,c	;volatile
  5835                           
  5836                           ;dispense.c: 154: LATD = chanmask & 0xF0;
  5837  011B0E  5032               	movf	_chanmask,w,c	;volatile
  5838  011B10  0BF0               	andlw	240
  5839  011B12  6E86               	movwf	3974,c	;volatile
  5840  011B14                     l4464:
  5841  011B14  010F               	movlb	15	; () banked
  5842  011B16  B13D               	btfsc	61,0,b	;volatile
  5843  011B18  D003               	goto	u4840
  5844                           
  5845                           ; BSR set to: 15
  5846  011B1A  010E               	movlb	14	; () banked
  5847  011B1C  ABCA               	btfss	202,5,b	;volatile
  5848  011B1E  D7F4               	goto	l4465
  5849  011B20                     u4840:
  5850                           
  5851                           ;dispense.c: 155: }
  5852                           ;dispense.c: 156: LATB = 0;
  5853                           
  5854                           ; BSR set to: 14
  5855                           
  5856                           ; BSR set to: 14
  5857  011B20  0E00               	movlw	0
  5858  011B22  6E84               	movwf	3972,c	;volatile
  5859                           
  5860                           ;dispense.c: 157: LATD = 0;
  5861  011B24  0E00               	movlw	0
  5862  011B26  6E86               	movwf	3974,c	;volatile
  5863                           
  5864                           ;dispense.c: 158: TMR0_StopTimer();
  5865  011B28  EC49  F096         	call	_TMR0_StopTimer	;wreg free
  5866                           
  5867                           ;dispense.c: 159: if(PIR0bits.TMR0IF)
  5868  011B2C  010E               	movlb	14	; () banked
  5869  011B2E  ABCA               	btfss	202,5,b	;volatile
  5870  011B30  0012               	return	
  5871                           
  5872                           ; BSR set to: 14
  5873                           ;dispense.c: 160: {
  5874                           ;dispense.c: 161: set_motortime(chanel);
  5875  011B32  502B               	movf	vend_dispense@chanel,w,c
  5876  011B34  ECC4  F08B         	call	_set_motortime
  5877  011B38  010F               	movlb	15	; () banked
  5878  011B3A  B13D               	btfsc	61,0,b	;volatile
  5879  011B3C  D003               	goto	u4870
  5880                           
  5881                           ; BSR set to: 15
  5882  011B3E  010E               	movlb	14	; () banked
  5883  011B40  ABCA               	btfss	202,5,b	;volatile
  5884  011B42  D7FA               	goto	l4471
  5885  011B44                     u4870:
  5886                           
  5887                           ;dispense.c: 164: if(PIR0bits.TMR0IF)
  5888                           
  5889                           ; BSR set to: 14
  5890  011B44  010E               	movlb	14	; () banked
  5891  011B46  ABCA               	btfss	202,5,b	;volatile
  5892  011B48  0012               	return	
  5893                           
  5894                           ; BSR set to: 14
  5895                           ;dispense.c: 165: {
  5896                           ;dispense.c: 166: venflags.error = 1;
  5897  011B4A  822D               	bsf	_venflags,1,c
  5898                           
  5899                           ; BSR set to: 14
  5900                           ;dispense.c: 167: disable_channel(chanel);
  5901  011B4C  502B               	movf	vend_dispense@chanel,w,c
  5902  011B4E  ECE8  F08F         	call	_disable_channel
  5903                           
  5904                           ;dispense.c: 169: vendprice = 0x00;
  5905  011B52  0E00               	movlw	0
  5906  011B54  6E37               	movwf	_vendprice,c	;volatile
  5907  011B56  0012               	return	
  5908  011B58                     __end_of_vend_dispense:
  5909                           	opt stack 0
  5910                           tblptru	equ	0xFF8
  5911                           tblptrh	equ	0xFF7
  5912                           tblptrl	equ	0xFF6
  5913                           tablat	equ	0xFF5
  5914                           prodh	equ	0xFF4
  5915                           prodl	equ	0xFF3
  5916                           postinc0	equ	0xFEE
  5917                           wreg	equ	0xFE8
  5918                           indf2	equ	0xFDF
  5919                           postinc2	equ	0xFDE
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8
  5923                           
  5924 ;; *************** function _set_motortime *****************
  5925 ;; Defined at:
  5926 ;;		line 175 in file "dispense.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  chanel          1    wreg     unsigned char 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  chanel          1   26[COMRAM] unsigned char 
  5931 ;;  time            2   28[COMRAM] unsigned int 
  5932 ;;  i               1   27[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:        6 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    3
  5949 ;; This function calls:
  5950 ;;		_DATAEE_ReadByte
  5951 ;;		_TMR0_StartTimer
  5952 ;;		_TMR0_StopTimer
  5953 ;;		_TMR0_Write16bitTimer
  5954 ;;		___wmul
  5955 ;; This function is called by:
  5956 ;;		_vend_dispense
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text20
  5961  011788                     __ptext20:
  5962                           	opt stack 0
  5963  011788                     _set_motortime:
  5964                           	opt stack 24
  5965                           
  5966                           ;incstack = 0
  5967                           ;set_motortime@chanel stored from wreg
  5968  011788  6E25               	movwf	set_motortime@chanel,c
  5969                           
  5970                           ;dispense.c: 177: uint8_t i = DATAEE_ReadByte(chan1time + chanel);
  5971  01178A  0EF5               	movlw	low _chan1time
  5972  01178C  6EF6               	movwf	tblptrl,c
  5973  01178E                     	if	1	;There is more than 1 active tblptr byte
  5974  01178E  0EFB               	movlw	high _chan1time
  5975  011790  6EF7               	movwf	tblptrh,c
  5976  011792                     	endif
  5977  011792                     	if	1	;There are 3 active tblptr bytes
  5978  011792  0E00               	movlw	low (_chan1time shr (0+16))
  5979  011794  6EF8               	movwf	tblptru,c
  5980  011796                     	endif
  5981  011796  0009               	tblrd		*+
  5982  011798  CFF5 F023          	movff	tablat,??_set_motortime
  5983  01179C  0009               	tblrd		*+
  5984  01179E  CFF5 F024          	movff	tablat,??_set_motortime+1
  5985  0117A2  5025               	movf	set_motortime@chanel,w,c
  5986  0117A4  2423               	addwf	??_set_motortime,w,c
  5987  0117A6  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  5988  0117A8  0E00               	movlw	0
  5989  0117AA  2024               	addwfc	??_set_motortime+1,w,c
  5990  0117AC  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  5991  0117AE  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  5992  0117B2  6E26               	movwf	set_motortime@i,c
  5993                           
  5994                           ;dispense.c: 178: TMR0_StopTimer();
  5995  0117B4  EC49  F096         	call	_TMR0_StopTimer	;wreg free
  5996                           
  5997                           ;dispense.c: 179: PIR0bits.TMR0IF = 0;
  5998  0117B8  010E               	movlb	14	; () banked
  5999  0117BA  9BCA               	bcf	202,5,b	;volatile
  6000                           
  6001                           ; BSR set to: 14
  6002                           ;dispense.c: 181: uint16_t time = second1;
  6003  0117BC  0E21               	movlw	low _second1
  6004  0117BE  6EF6               	movwf	tblptrl,c
  6005  0117C0                     	if	1	;There is more than 1 active tblptr byte
  6006  0117C0  0EFC               	movlw	high _second1
  6007  0117C2  6EF7               	movwf	tblptrh,c
  6008  0117C4                     	endif
  6009  0117C4                     	if	1	;There are 3 active tblptr bytes
  6010  0117C4  0E00               	movlw	low (_second1 shr (0+16))
  6011  0117C6  6EF8               	movwf	tblptru,c
  6012  0117C8                     	endif
  6013  0117C8  0009               	tblrd		*+
  6014  0117CA  CFF5 F027          	movff	tablat,set_motortime@time
  6015  0117CE  000A               	tblrd		*-
  6016  0117D0  CFF5 F028          	movff	tablat,set_motortime@time+1
  6017                           
  6018                           ; BSR set to: 14
  6019                           ;dispense.c: 182: time = time - (second_5 * i);
  6020  0117D4  C026  F01D         	movff	set_motortime@i,___wmul@multiplier
  6021  0117D8  6A1E               	clrf	___wmul@multiplier+1,c
  6022  0117DA  0E1F               	movlw	low _second_5
  6023  0117DC  6EF6               	movwf	tblptrl,c
  6024  0117DE                     	if	1	;There is more than 1 active tblptr byte
  6025  0117DE  0EFC               	movlw	high _second_5
  6026  0117E0  6EF7               	movwf	tblptrh,c
  6027  0117E2                     	endif
  6028  0117E2                     	if	1	;There are 3 active tblptr bytes
  6029  0117E2  0E00               	movlw	low (_second_5 shr (0+16))
  6030  0117E4  6EF8               	movwf	tblptru,c
  6031  0117E6                     	endif
  6032  0117E6  0009               	tblrd		*+
  6033  0117E8  CFF5 F01F          	movff	tablat,___wmul@multiplicand
  6034  0117EC  000A               	tblrd		*-
  6035  0117EE  CFF5 F020          	movff	tablat,___wmul@multiplicand+1
  6036  0117F2  ECEA  F094         	call	___wmul	;wreg free
  6037  0117F6  1E1D               	comf	?___wmul,f,c
  6038  0117F8  1E1E               	comf	?___wmul+1,f,c
  6039  0117FA  4A1D               	infsnz	?___wmul,f,c
  6040  0117FC  2A1E               	incf	?___wmul+1,f,c
  6041  0117FE  5027               	movf	set_motortime@time,w,c
  6042  011800  241D               	addwf	?___wmul,w,c
  6043  011802  6E27               	movwf	set_motortime@time,c
  6044  011804  5028               	movf	set_motortime@time+1,w,c
  6045  011806  201E               	addwfc	?___wmul+1,w,c
  6046  011808  6E28               	movwf	set_motortime@time+1,c
  6047                           
  6048                           ;dispense.c: 183: TMR0_Write16bitTimer(time);
  6049  01180A  C027  F01D         	movff	set_motortime@time,TMR0_Write16bitTimer@timerVal
  6050  01180E  C028  F01E         	movff	set_motortime@time+1,TMR0_Write16bitTimer@timerVal+1
  6051  011812  EC27  F096         	call	_TMR0_Write16bitTimer	;wreg free
  6052                           
  6053                           ;dispense.c: 184: TMR0_StartTimer();
  6054  011816  EC4B  F096         	call	_TMR0_StartTimer	;wreg free
  6055  01181A  0012               	return		;funcret
  6056  01181C                     __end_of_set_motortime:
  6057                           	opt stack 0
  6058                           tblptru	equ	0xFF8
  6059                           tblptrh	equ	0xFF7
  6060                           tblptrl	equ	0xFF6
  6061                           tablat	equ	0xFF5
  6062                           prodh	equ	0xFF4
  6063                           prodl	equ	0xFF3
  6064                           postinc0	equ	0xFEE
  6065                           wreg	equ	0xFE8
  6066                           indf2	equ	0xFDF
  6067                           postinc2	equ	0xFDE
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function ___wmul *****************
  6073 ;; Defined at:
  6074 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  multiplier      2   18[COMRAM] unsigned int 
  6077 ;;  multiplicand    2   20[COMRAM] unsigned int 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  product         2   22[COMRAM] unsigned int 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  2   18[COMRAM] unsigned int 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0, prodl, prodh
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;Total ram usage:        6 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    2
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_set_motortime
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text21
  6104  0129D4                     __ptext21:
  6105                           	opt stack 0
  6106  0129D4                     ___wmul:
  6107                           	opt stack 24
  6108                           
  6109                           ;incstack = 0
  6110  0129D4  501D               	movf	___wmul@multiplier,w,c
  6111  0129D6  021F               	mulwf	___wmul@multiplicand,c
  6112  0129D8  CFF3 F021          	movff	prodl,___wmul@product
  6113  0129DC  CFF4 F022          	movff	prodh,___wmul@product+1
  6114  0129E0  501D               	movf	___wmul@multiplier,w,c
  6115  0129E2  0220               	mulwf	___wmul@multiplicand+1,c
  6116  0129E4  50F3               	movf	prodl,w,c
  6117  0129E6  2622               	addwf	___wmul@product+1,f,c
  6118  0129E8  501E               	movf	___wmul@multiplier+1,w,c
  6119  0129EA  021F               	mulwf	___wmul@multiplicand,c
  6120  0129EC  50F3               	movf	prodl,w,c
  6121  0129EE  2622               	addwf	___wmul@product+1,f,c
  6122  0129F0  C021  F01D         	movff	___wmul@product,?___wmul
  6123  0129F4  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  6124  0129F8  0012               	return	
  6125  0129FA                     __end_of___wmul:
  6126                           	opt stack 0
  6127                           tblptru	equ	0xFF8
  6128                           tblptrh	equ	0xFF7
  6129                           tblptrl	equ	0xFF6
  6130                           tablat	equ	0xFF5
  6131                           prodh	equ	0xFF4
  6132                           prodl	equ	0xFF3
  6133                           postinc0	equ	0xFEE
  6134                           wreg	equ	0xFE8
  6135                           indf2	equ	0xFDF
  6136                           postinc2	equ	0xFDE
  6137                           fsr2h	equ	0xFDA
  6138                           fsr2l	equ	0xFD9
  6139                           status	equ	0xFD8
  6140                           
  6141 ;; *************** function _TMR0_Write16bitTimer *****************
  6142 ;; Defined at:
  6143 ;;		line 112 in file "mcc_generated_files/tmr0.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  timerVal        2   18[COMRAM] unsigned int 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg, status,2
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;Total ram usage:        2 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:    2
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_set_motortime
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text22
  6172  012C4E                     __ptext22:
  6173                           	opt stack 0
  6174  012C4E                     _TMR0_Write16bitTimer:
  6175                           	opt stack 24
  6176                           
  6177                           ;tmr0.c: 115: TMR0H = timerVal >> 8;
  6178                           
  6179                           ;incstack = 0
  6180  012C4E  501E               	movf	TMR0_Write16bitTimer@timerVal+1,w,c
  6181  012C50  6ED4               	movwf	4052,c	;volatile
  6182                           
  6183                           ;tmr0.c: 116: TMR0L = (uint8_t) timerVal;
  6184  012C52  C01D  FFD3         	movff	TMR0_Write16bitTimer@timerVal,4051	;volatile
  6185  012C56  0012               	return		;funcret
  6186  012C58                     __end_of_TMR0_Write16bitTimer:
  6187                           	opt stack 0
  6188                           tblptru	equ	0xFF8
  6189                           tblptrh	equ	0xFF7
  6190                           tblptrl	equ	0xFF6
  6191                           tablat	equ	0xFF5
  6192                           prodh	equ	0xFF4
  6193                           prodl	equ	0xFF3
  6194                           postinc0	equ	0xFEE
  6195                           wreg	equ	0xFE8
  6196                           indf2	equ	0xFDF
  6197                           postinc2	equ	0xFDE
  6198                           fsr2h	equ	0xFDA
  6199                           fsr2l	equ	0xFD9
  6200                           status	equ	0xFD8
  6201                           
  6202 ;; *************** function _TMR0_StopTimer *****************
  6203 ;; Defined at:
  6204 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		None
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    2
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_vend_dispense
  6229 ;;		_set_motortime
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text23
  6234  012C92                     __ptext23:
  6235                           	opt stack 0
  6236  012C92                     _TMR0_StopTimer:
  6237                           	opt stack 24
  6238                           
  6239                           ;tmr0.c: 96: T0CON0bits.T0EN = 0;
  6240                           
  6241                           ;incstack = 0
  6242  012C92  9ED5               	bcf	4053,7,c	;volatile
  6243  012C94  0012               	return		;funcret
  6244  012C96                     __end_of_TMR0_StopTimer:
  6245                           	opt stack 0
  6246                           tblptru	equ	0xFF8
  6247                           tblptrh	equ	0xFF7
  6248                           tblptrl	equ	0xFF6
  6249                           tablat	equ	0xFF5
  6250                           prodh	equ	0xFF4
  6251                           prodl	equ	0xFF3
  6252                           postinc0	equ	0xFEE
  6253                           wreg	equ	0xFE8
  6254                           indf2	equ	0xFDF
  6255                           postinc2	equ	0xFDE
  6256                           fsr2h	equ	0xFDA
  6257                           fsr2l	equ	0xFD9
  6258                           status	equ	0xFD8
  6259                           
  6260 ;; *************** function _TMR0_StartTimer *****************
  6261 ;; Defined at:
  6262 ;;		line 87 in file "mcc_generated_files/tmr0.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;		None
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;		None
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		None
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;Total ram usage:        0 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:    2
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_set_motortime
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text24
  6291  012C96                     __ptext24:
  6292                           	opt stack 0
  6293  012C96                     _TMR0_StartTimer:
  6294                           	opt stack 24
  6295                           
  6296                           ;tmr0.c: 90: T0CON0bits.T0EN = 1;
  6297                           
  6298                           ;incstack = 0
  6299  012C96  8ED5               	bsf	4053,7,c	;volatile
  6300  012C98  0012               	return		;funcret
  6301  012C9A                     __end_of_TMR0_StartTimer:
  6302                           	opt stack 0
  6303                           tblptru	equ	0xFF8
  6304                           tblptrh	equ	0xFF7
  6305                           tblptrl	equ	0xFF6
  6306                           tablat	equ	0xFF5
  6307                           prodh	equ	0xFF4
  6308                           prodl	equ	0xFF3
  6309                           postinc0	equ	0xFEE
  6310                           wreg	equ	0xFE8
  6311                           indf2	equ	0xFDF
  6312                           postinc2	equ	0xFDE
  6313                           fsr2h	equ	0xFDA
  6314                           fsr2l	equ	0xFD9
  6315                           status	equ	0xFD8
  6316                           
  6317 ;; *************** function _disable_channel *****************
  6318 ;; Defined at:
  6319 ;;		line 233 in file "dispense.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  channel         1    wreg     unsigned char 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  channel         1   24[COMRAM] unsigned char 
  6324 ;;  errormask       1   25[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;Total ram usage:        4 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    3
  6341 ;; This function calls:
  6342 ;;		_DATAEE_ReadByte
  6343 ;;		_DATAEE_WriteByte
  6344 ;; This function is called by:
  6345 ;;		_vend_dispense
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text25
  6350  011FD0                     __ptext25:
  6351                           	opt stack 0
  6352  011FD0                     _disable_channel:
  6353                           	opt stack 24
  6354                           
  6355                           ;incstack = 0
  6356                           ;disable_channel@channel stored from wreg
  6357  011FD0  6E23               	movwf	disable_channel@channel,c
  6358                           
  6359                           ;dispense.c: 235: uint8_t errormask = 0x01;
  6360  011FD2  0E01               	movlw	1
  6361  011FD4  6E24               	movwf	disable_channel@errormask,c
  6362                           
  6363                           ;dispense.c: 236: uint8_t errormask = errormask << channel;
  6364  011FD6  C023  F021         	movff	disable_channel@channel,??_disable_channel
  6365  011FDA  C024  F022         	movff	disable_channel@errormask,??_disable_channel+1
  6366  011FDE  2A21               	incf	??_disable_channel,f,c
  6367  011FE0  D002               	goto	u4514
  6368  011FE2                     u4515:
  6369  011FE2  90D8               	bcf	status,0,c
  6370  011FE4  3622               	rlcf	??_disable_channel+1,f,c
  6371  011FE6                     u4514:
  6372  011FE6  2E21               	decfsz	??_disable_channel,f,c
  6373  011FE8  D7FC               	goto	u4515
  6374  011FEA  5022               	movf	??_disable_channel+1,w,c
  6375  011FEC  6E24               	movwf	disable_channel@errormask,c
  6376                           
  6377                           ;dispense.c: 237: errormask = errormask | DATAEE_ReadByte(venderrors);
  6378  011FEE  0E11               	movlw	low _venderrors
  6379  011FF0  6EF6               	movwf	tblptrl,c
  6380  011FF2                     	if	1	;There is more than 1 active tblptr byte
  6381  011FF2  0EFC               	movlw	high _venderrors
  6382  011FF4  6EF7               	movwf	tblptrh,c
  6383  011FF6                     	endif
  6384  011FF6                     	if	1	;There are 3 active tblptr bytes
  6385  011FF6  0E00               	movlw	low (_venderrors shr (0+16))
  6386  011FF8  6EF8               	movwf	tblptru,c
  6387  011FFA                     	endif
  6388  011FFA  0009               	tblrd		*+
  6389  011FFC  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  6390  012000  000A               	tblrd		*-
  6391  012002  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  6392  012006  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  6393  01200A  1024               	iorwf	disable_channel@errormask,w,c
  6394  01200C  6E24               	movwf	disable_channel@errormask,c
  6395                           
  6396                           ;dispense.c: 238: DATAEE_WriteByte(venderrors, errormask);
  6397  01200E  0E11               	movlw	low _venderrors
  6398  012010  6EF6               	movwf	tblptrl,c
  6399  012012                     	if	1	;There is more than 1 active tblptr byte
  6400  012012  0EFC               	movlw	high _venderrors
  6401  012014  6EF7               	movwf	tblptrh,c
  6402  012016                     	endif
  6403  012016                     	if	1	;There are 3 active tblptr bytes
  6404  012016  0E00               	movlw	low (_venderrors shr (0+16))
  6405  012018  6EF8               	movwf	tblptru,c
  6406  01201A                     	endif
  6407  01201A  0009               	tblrd		*+
  6408  01201C  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  6409  012020  000A               	tblrd		*-
  6410  012022  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  6411  012026  C024  F01F         	movff	disable_channel@errormask,DATAEE_WriteByte@bData
  6412  01202A  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  6413  01202E  0012               	return		;funcret
  6414  012030                     __end_of_disable_channel:
  6415                           	opt stack 0
  6416                           tblptru	equ	0xFF8
  6417                           tblptrh	equ	0xFF7
  6418                           tblptrl	equ	0xFF6
  6419                           tablat	equ	0xFF5
  6420                           prodh	equ	0xFF4
  6421                           prodl	equ	0xFF3
  6422                           postinc0	equ	0xFEE
  6423                           wreg	equ	0xFE8
  6424                           indf2	equ	0xFDF
  6425                           postinc2	equ	0xFDE
  6426                           fsr2h	equ	0xFDA
  6427                           fsr2l	equ	0xFD9
  6428                           status	equ	0xFD8
  6429                           
  6430 ;; *************** function _update_vends *****************
  6431 ;; Defined at:
  6432 ;;		line 241 in file "dispense.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  chanel          1    wreg     unsigned char 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  chanel          1   25[COMRAM] unsigned char 
  6437 ;;  x               1   24[COMRAM] unsigned char 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;Total ram usage:        4 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    3
  6454 ;; This function calls:
  6455 ;;		_DATAEE_ReadByte
  6456 ;;		_DATAEE_WriteByte
  6457 ;; This function is called by:
  6458 ;;		_dispense
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text26
  6463  012090                     __ptext26:
  6464                           	opt stack 0
  6465  012090                     _update_vends:
  6466                           	opt stack 25
  6467                           
  6468                           ;incstack = 0
  6469                           ;update_vends@chanel stored from wreg
  6470  012090  6E24               	movwf	update_vends@chanel,c
  6471                           
  6472                           ;dispense.c: 243: uint8_t x = DATAEE_ReadByte(vendstore + chanel);
  6473  012092  0E17               	movlw	low _vendstore
  6474  012094  6EF6               	movwf	tblptrl,c
  6475  012096                     	if	1	;There is more than 1 active tblptr byte
  6476  012096  0EFC               	movlw	high _vendstore
  6477  012098  6EF7               	movwf	tblptrh,c
  6478  01209A                     	endif
  6479  01209A                     	if	1	;There are 3 active tblptr bytes
  6480  01209A  0E00               	movlw	low (_vendstore shr (0+16))
  6481  01209C  6EF8               	movwf	tblptru,c
  6482  01209E                     	endif
  6483  01209E  0009               	tblrd		*+
  6484  0120A0  CFF5 F021          	movff	tablat,??_update_vends
  6485  0120A4  0009               	tblrd		*+
  6486  0120A6  CFF5 F022          	movff	tablat,??_update_vends+1
  6487  0120AA  5024               	movf	update_vends@chanel,w,c
  6488  0120AC  2421               	addwf	??_update_vends,w,c
  6489  0120AE  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  6490  0120B0  0E00               	movlw	0
  6491  0120B2  2022               	addwfc	??_update_vends+1,w,c
  6492  0120B4  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  6493  0120B6  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  6494  0120BA  6E23               	movwf	update_vends@x,c
  6495                           
  6496                           ;dispense.c: 244: x++;
  6497  0120BC  2A23               	incf	update_vends@x,f,c
  6498                           
  6499                           ;dispense.c: 245: DATAEE_WriteByte(vendstore + chanel, x);
  6500  0120BE  0E17               	movlw	low _vendstore
  6501  0120C0  6EF6               	movwf	tblptrl,c
  6502  0120C2                     	if	1	;There is more than 1 active tblptr byte
  6503  0120C2  0EFC               	movlw	high _vendstore
  6504  0120C4  6EF7               	movwf	tblptrh,c
  6505  0120C6                     	endif
  6506  0120C6                     	if	1	;There are 3 active tblptr bytes
  6507  0120C6  0E00               	movlw	low (_vendstore shr (0+16))
  6508  0120C8  6EF8               	movwf	tblptru,c
  6509  0120CA                     	endif
  6510  0120CA  0009               	tblrd		*+
  6511  0120CC  CFF5 F021          	movff	tablat,??_update_vends
  6512  0120D0  0009               	tblrd		*+
  6513  0120D2  CFF5 F022          	movff	tablat,??_update_vends+1
  6514  0120D6  5024               	movf	update_vends@chanel,w,c
  6515  0120D8  2421               	addwf	??_update_vends,w,c
  6516  0120DA  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6517  0120DC  0E00               	movlw	0
  6518  0120DE  2022               	addwfc	??_update_vends+1,w,c
  6519  0120E0  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6520  0120E2  C023  F01F         	movff	update_vends@x,DATAEE_WriteByte@bData
  6521  0120E6  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  6522  0120EA  0012               	return		;funcret
  6523  0120EC                     __end_of_update_vends:
  6524                           	opt stack 0
  6525                           tblptru	equ	0xFF8
  6526                           tblptrh	equ	0xFF7
  6527                           tblptrl	equ	0xFF6
  6528                           tablat	equ	0xFF5
  6529                           prodh	equ	0xFF4
  6530                           prodl	equ	0xFF3
  6531                           postinc0	equ	0xFEE
  6532                           wreg	equ	0xFE8
  6533                           indf2	equ	0xFDF
  6534                           postinc2	equ	0xFDE
  6535                           fsr2h	equ	0xFDA
  6536                           fsr2l	equ	0xFD9
  6537                           status	equ	0xFD8
  6538                           
  6539 ;; *************** function _mdb_poll *****************
  6540 ;; Defined at:
  6541 ;;		line 164 in file "mdb.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;		None
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  i               1   28[COMRAM] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      unsigned char 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;Total ram usage:        1 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    6
  6562 ;; This function calls:
  6563 ;;		_TMR3_Initialize
  6564 ;;		_mdb_comm
  6565 ;; This function is called by:
  6566 ;;		_main
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text27
  6571  010496                     __ptext27:
  6572                           	opt stack 0
  6573  010496                     _mdb_poll:
  6574                           	opt stack 24
  6575                           
  6576                           ;mdb.c: 168: TMR3_Initialize();
  6577                           
  6578                           ;incstack = 0
  6579  010496  ECDB  F093         	call	_TMR3_Initialize	;wreg free
  6580                           
  6581                           ;mdb.c: 169: uint8_t i = mdb_comm(note_poll, 0x00);
  6582  01049A  0E00               	movlw	0
  6583  01049C  6E24               	movwf	mdb_comm@mcount,c
  6584  01049E  0E43               	movlw	low _note_poll
  6585  0104A0  6EF6               	movwf	tblptrl,c
  6586  0104A2                     	if	1	;There is more than 1 active tblptr byte
  6587  0104A2  0EFC               	movlw	high _note_poll
  6588  0104A4  6EF7               	movwf	tblptrh,c
  6589  0104A6                     	endif
  6590  0104A6                     	if	1	;There are 3 active tblptr bytes
  6591  0104A6  0E00               	movlw	low (_note_poll shr (0+16))
  6592  0104A8  6EF8               	movwf	tblptru,c
  6593  0104AA                     	endif
  6594  0104AA  0008               	tblrd		*
  6595  0104AC  50F5               	movf	tablat,w,c
  6596  0104AE  EC03  F085         	call	_mdb_comm
  6597  0104B2  6E27               	movwf	mdb_poll@i,c
  6598                           
  6599                           ;mdb.c: 170: notebyte = mdbdata[0];
  6600  0104B4  C060  F041         	movff	_mdbdata,_notebyte
  6601                           
  6602                           ;mdb.c: 172: if((mdbdata[0] & 0x80) != 0)
  6603  0104B8  0100               	movlb	0	; () banked
  6604  0104BA  AF60               	btfss	_mdbdata& (0+255),7,b
  6605  0104BC  D050               	goto	l2962
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;mdb.c: 173: {
  6609                           ;mdb.c: 174: notebyte = mdbdata[0] & 0x7F;
  6610  0104BE  5160               	movf	_mdbdata& (0+255),w,b
  6611  0104C0  0B7F               	andlw	127
  6612  0104C2  6E41               	movwf	_notebyte,c
  6613                           
  6614                           ;mdb.c: 175: switch(notebyte)
  6615  0104C4  D019               	goto	l2952
  6616  0104C6                     
  6617                           ; BSR set to: 0
  6618  0104C6  0E0A               	movlw	10
  6619  0104C8  6E3A               	movwf	_credit,c	;volatile
  6620                           
  6621                           ;mdb.c: 178: return credit;
  6622  0104CA  503A               	movf	_credit,w,c	;volatile
  6623  0104CC  0012               	return	
  6624  0104CE  0E14               	movlw	20
  6625  0104D0  6E3A               	movwf	_credit,c	;volatile
  6626                           
  6627                           ;mdb.c: 180: return credit;
  6628  0104D2  503A               	movf	_credit,w,c	;volatile
  6629  0104D4  0012               	return	
  6630  0104D6  0E32               	movlw	50
  6631  0104D8  6E3A               	movwf	_credit,c	;volatile
  6632                           
  6633                           ;mdb.c: 182: return credit;
  6634  0104DA  503A               	movf	_credit,w,c	;volatile
  6635  0104DC  0012               	return	
  6636  0104DE  0E64               	movlw	100
  6637  0104E0  6E3A               	movwf	_credit,c	;volatile
  6638                           
  6639                           ;mdb.c: 184: return credit;
  6640  0104E2  503A               	movf	_credit,w,c	;volatile
  6641  0104E4  0012               	return	
  6642  0104E6  0EC8               	movlw	200
  6643  0104E8  6E3A               	movwf	_credit,c	;volatile
  6644                           
  6645                           ;mdb.c: 186: return credit;
  6646  0104EA  503A               	movf	_credit,w,c	;volatile
  6647  0104EC  0012               	return	
  6648  0104EE  0E10               	movlw	16
  6649  0104F0  6E3A               	movwf	_credit,c	;volatile
  6650                           
  6651                           ;mdb.c: 188: mdbflags.noteerr = 1;
  6652  0104F2  823F               	bsf	_mdbflags,1,c
  6653                           
  6654                           ;mdb.c: 189: return credit;
  6655  0104F4  503A               	movf	_credit,w,c	;volatile
  6656                           
  6657                           ;mdb.c: 190: }
  6658  0104F6  0012               	return	
  6659  0104F8                     l2952:
  6660  0104F8  5041               	movf	_notebyte,w,c
  6661                           
  6662                           ; Switch size 1, requested type "space"
  6663                           ; Number of cases is 5, Range of values is 0 to 4
  6664                           ; switch strategies available:
  6665                           ; Name         Instructions Cycles
  6666                           ; simple_byte           16     9 (average)
  6667                           ;	Chosen strategy is simple_byte
  6668  0104FA  0A00               	xorlw	0	; case 0
  6669  0104FC  B4D8               	btfsc	status,2,c
  6670  0104FE  D7E3               	goto	l2953
  6671  010500  0A01               	xorlw	1	; case 1
  6672  010502  B4D8               	btfsc	status,2,c
  6673  010504  D7E4               	goto	l2955
  6674  010506  0A03               	xorlw	3	; case 2
  6675  010508  B4D8               	btfsc	status,2,c
  6676  01050A  D7E5               	goto	l2956
  6677  01050C  0A01               	xorlw	1	; case 3
  6678  01050E  B4D8               	btfsc	status,2,c
  6679  010510  D7E6               	goto	l2957
  6680  010512  0A07               	xorlw	7	; case 4
  6681  010514  B4D8               	btfsc	status,2,c
  6682  010516  D7E7               	goto	l2958
  6683  010518  D7EA               	goto	l2959
  6684  01051A  0E00               	movlw	0
  6685  01051C  6E3A               	movwf	_credit,c	;volatile
  6686                           
  6687                           ;mdb.c: 198: return credit;
  6688  01051E  503A               	movf	_credit,w,c	;volatile
  6689  010520  0012               	return	
  6690  010522  0E01               	movlw	1
  6691  010524  D01A               	goto	L12
  6692  010526  0E02               	movlw	2
  6693  010528  D018               	goto	L12
  6694  01052A  0E00               	movlw	0
  6695  01052C  6E3A               	movwf	_credit,c	;volatile
  6696                           
  6697                           ;mdb.c: 207: mdbflags.noteerr = 0;
  6698  01052E  923F               	bcf	_mdbflags,1,c
  6699                           
  6700                           ;mdb.c: 208: return credit;
  6701  010530  503A               	movf	_credit,w,c	;volatile
  6702  010532  0012               	return	
  6703  010534  0E04               	movlw	4
  6704  010536  D011               	goto	L12
  6705  010538  0E05               	movlw	5
  6706  01053A  D00F               	goto	L12
  6707  01053C  0E06               	movlw	6
  6708  01053E  D00D               	goto	L12
  6709  010540  0E07               	movlw	7
  6710  010542  D00B               	goto	L12
  6711  010544  0E08               	movlw	8
  6712  010546  D009               	goto	L12
  6713  010548  0E09               	movlw	9
  6714  01054A  D007               	goto	L12
  6715  01054C  0E0A               	movlw	10
  6716  01054E  D005               	goto	L12
  6717  010550  0E0B               	movlw	11
  6718  010552  D003               	goto	L12
  6719  010554  0E0C               	movlw	12
  6720  010556  D001               	goto	L12
  6721  010558  0E00               	movlw	0
  6722  01055A                     L12:
  6723  01055A  6E3A               	movwf	_credit,c	;volatile
  6724                           
  6725                           ;mdb.c: 237: }
  6726  01055C  D02A               	goto	l2965
  6727  01055E                     l2962:
  6728  01055E  0100               	movlb	0	; () banked
  6729  010560  5160               	movf	_mdbdata& (0+255),w,b
  6730                           
  6731                           ; Switch size 1, requested type "space"
  6732                           ; Number of cases is 13, Range of values is 0 to 12
  6733                           ; switch strategies available:
  6734                           ; Name         Instructions Cycles
  6735                           ; simple_byte           40    21 (average)
  6736                           ;	Chosen strategy is simple_byte
  6737  010562  0A00               	xorlw	0	; case 0
  6738  010564  B4D8               	btfsc	status,2,c
  6739  010566  D7D9               	goto	l2963
  6740  010568  0A01               	xorlw	1	; case 1
  6741  01056A  B4D8               	btfsc	status,2,c
  6742  01056C  D7DA               	goto	l2964
  6743  01056E  0A03               	xorlw	3	; case 2
  6744  010570  B4D8               	btfsc	status,2,c
  6745  010572  D7D9               	goto	l2966
  6746  010574  0A01               	xorlw	1	; case 3
  6747  010576  B4D8               	btfsc	status,2,c
  6748  010578  D7D8               	goto	l2967
  6749  01057A  0A07               	xorlw	7	; case 4
  6750  01057C  B4D8               	btfsc	status,2,c
  6751  01057E  D7DA               	goto	l2968
  6752  010580  0A01               	xorlw	1	; case 5
  6753  010582  B4D8               	btfsc	status,2,c
  6754  010584  D7D9               	goto	l2969
  6755  010586  0A03               	xorlw	3	; case 6
  6756  010588  B4D8               	btfsc	status,2,c
  6757  01058A  D7D8               	goto	l2970
  6758  01058C  0A01               	xorlw	1	; case 7
  6759  01058E  B4D8               	btfsc	status,2,c
  6760  010590  D7D7               	goto	l2971
  6761  010592  0A0F               	xorlw	15	; case 8
  6762  010594  B4D8               	btfsc	status,2,c
  6763  010596  D7D6               	goto	l2972
  6764  010598  0A01               	xorlw	1	; case 9
  6765  01059A  B4D8               	btfsc	status,2,c
  6766  01059C  D7D5               	goto	l2973
  6767  01059E  0A03               	xorlw	3	; case 10
  6768  0105A0  B4D8               	btfsc	status,2,c
  6769  0105A2  D7D4               	goto	l2974
  6770  0105A4  0A01               	xorlw	1	; case 11
  6771  0105A6  B4D8               	btfsc	status,2,c
  6772  0105A8  D7D3               	goto	l2975
  6773  0105AA  0A07               	xorlw	7	; case 12
  6774  0105AC  B4D8               	btfsc	status,2,c
  6775  0105AE  D7D2               	goto	l2976
  6776  0105B0  D7D3               	goto	l2977
  6777  0105B2                     l2965:
  6778                           
  6779                           ;mdb.c: 238: mdbflags.noteerr = 1;
  6780  0105B2  823F               	bsf	_mdbflags,1,c
  6781                           
  6782                           ;mdb.c: 239: return credit;
  6783  0105B4  503A               	movf	_credit,w,c	;volatile
  6784  0105B6  0012               	return	
  6785  0105B8                     __end_of_mdb_poll:
  6786                           	opt stack 0
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodh	equ	0xFF4
  6792                           prodl	equ	0xFF3
  6793                           postinc0	equ	0xFEE
  6794                           wreg	equ	0xFE8
  6795                           indf2	equ	0xFDF
  6796                           postinc2	equ	0xFDE
  6797                           fsr2h	equ	0xFDA
  6798                           fsr2l	equ	0xFD9
  6799                           status	equ	0xFD8
  6800                           
  6801 ;; *************** function _mdb_comm *****************
  6802 ;; Defined at:
  6803 ;;		line 244 in file "mdb.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  slvadd          1    wreg     unsigned char 
  6806 ;;  mcount          1   25[COMRAM] unsigned char 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  slvadd          1   26[COMRAM] unsigned char 
  6809 ;;  i               1   27[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      unsigned char 
  6812 ;; Registers used:
  6813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6819 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;Total ram usage:        3 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    5
  6826 ;; This function calls:
  6827 ;;		_EUSART1_Read
  6828 ;;		_TMR1_Initialize
  6829 ;;		_init_mdbdata
  6830 ;;		_mdb_on
  6831 ;;		_mdb_transmit
  6832 ;;		_mdb_waitr
  6833 ;; This function is called by:
  6834 ;;		_mdb_init
  6835 ;;		_mdb_reset
  6836 ;;		_mdb_noten
  6837 ;;		_mdb_security
  6838 ;;		_mdb_poll
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text28
  6843  010A06                     __ptext28:
  6844                           	opt stack 0
  6845  010A06                     _mdb_comm:
  6846                           	opt stack 22
  6847                           
  6848                           ;incstack = 0
  6849                           ;mdb_comm@slvadd stored from wreg
  6850  010A06  6E25               	movwf	mdb_comm@slvadd,c
  6851                           
  6852                           ;mdb.c: 247: uint8_t i = 0;
  6853  010A08  0E00               	movlw	0
  6854  010A0A  6E26               	movwf	mdb_comm@i,c
  6855                           
  6856                           ;mdb.c: 249: TX1STAbits.TX9D = 1;
  6857  010A0C  809E               	bsf	3998,0,c	;volatile
  6858                           
  6859                           ;mdb.c: 250: mdb_on();
  6860  010A0E  EC4D  F096         	call	_mdb_on	;wreg free
  6861                           
  6862                           ;mdb.c: 254: mdb_transmit(slvadd);
  6863  010A12  5025               	movf	mdb_comm@slvadd,w,c
  6864  010A14  ECEB  F095         	call	_mdb_transmit
  6865                           
  6866                           ;mdb.c: 255: TX1STAbits.TX9D = 0;
  6867  010A18  909E               	bcf	3998,0,c	;volatile
  6868                           
  6869                           ;mdb.c: 259: chkbyte = slvadd;
  6870  010A1A  C025  F040         	movff	mdb_comm@slvadd,_chkbyte
  6871                           
  6872                           ;mdb.c: 260: if(mcount != 0)
  6873  010A1E  5024               	movf	mdb_comm@mcount,w,c
  6874  010A20  B4D8               	btfsc	status,2,c
  6875  010A22  D01E               	goto	u4320
  6876                           
  6877                           ;mdb.c: 261: {
  6878                           ;mdb.c: 262: i = mcount + 1;
  6879  010A24  2824               	incf	mdb_comm@mcount,w,c
  6880  010A26  6E26               	movwf	mdb_comm@i,c
  6881                           
  6882                           ;mdb.c: 263: while(i != 0)
  6883  010A28  D018               	goto	l2981
  6884  010A2A                     
  6885                           ;mdb.c: 264: {
  6886                           ;mdb.c: 265: mdb_transmit(mdbdata[mcount]);
  6887  010A2A  5024               	movf	mdb_comm@mcount,w,c
  6888  010A2C  0D01               	mullw	1
  6889  010A2E  0E60               	movlw	low _mdbdata
  6890  010A30  24F3               	addwf	prodl,w,c
  6891  010A32  6ED9               	movwf	fsr2l,c
  6892  010A34  0E00               	movlw	high _mdbdata
  6893  010A36  20F4               	addwfc	prodh,w,c
  6894  010A38  6EDA               	movwf	fsr2h,c
  6895  010A3A  50DF               	movf	indf2,w,c
  6896  010A3C  ECEB  F095         	call	_mdb_transmit
  6897                           
  6898                           ;mdb.c: 268: chkbyte = chkbyte + mdbdata[mcount];
  6899  010A40  5024               	movf	mdb_comm@mcount,w,c
  6900  010A42  0D01               	mullw	1
  6901  010A44  0E60               	movlw	low _mdbdata
  6902  010A46  24F3               	addwf	prodl,w,c
  6903  010A48  6ED9               	movwf	fsr2l,c
  6904  010A4A  0E00               	movlw	high _mdbdata
  6905  010A4C  20F4               	addwfc	prodh,w,c
  6906  010A4E  6EDA               	movwf	fsr2h,c
  6907  010A50  50DF               	movf	indf2,w,c
  6908  010A52  2440               	addwf	_chkbyte,w,c
  6909  010A54  6E40               	movwf	_chkbyte,c
  6910                           
  6911                           ;mdb.c: 269: i--;
  6912  010A56  0626               	decf	mdb_comm@i,f,c
  6913                           
  6914                           ;mdb.c: 270: mcount--;
  6915  010A58  0624               	decf	mdb_comm@mcount,f,c
  6916  010A5A                     l2981:
  6917  010A5A  5026               	movf	mdb_comm@i,w,c
  6918  010A5C  A4D8               	btfss	status,2,c
  6919  010A5E  D7E5               	goto	l2982
  6920  010A60                     u4320:
  6921                           
  6922                           ;mdb.c: 271: }
  6923                           ;mdb.c: 272: }
  6924                           ;mdb.c: 273: mdb_transmit(chkbyte);
  6925  010A60  5040               	movf	_chkbyte,w,c
  6926  010A62  ECEB  F095         	call	_mdb_transmit
  6927                           
  6928                           ;mdb.c: 280: init_mdbdata(0xFF);
  6929  010A66  0EFF               	movlw	255
  6930  010A68  ECD5  F094         	call	_init_mdbdata
  6931                           
  6932                           ;mdb.c: 281: TMR1_Initialize();
  6933  010A6C  ECF6  F093         	call	_TMR1_Initialize	;wreg free
  6934                           
  6935                           ;mdb.c: 282: dbcount = 0;
  6936  010A70  0E00               	movlw	0
  6937  010A72  0100               	movlb	0	; () banked
  6938  010A74  6FA5               	movwf	(_dbcount+1)& (0+255),b
  6939  010A76  0E00               	movlw	0
  6940  010A78  6FA4               	movwf	_dbcount& (0+255),b
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;mdb.c: 283: mdbflags.isdata = 0;
  6944  010A7A  903F               	bcf	_mdbflags,0,c
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;mdb.c: 284: i = 0;
  6948  010A7C  0E00               	movlw	0
  6949  010A7E  6E26               	movwf	mdb_comm@i,c
  6950                           
  6951                           ;mdb.c: 286: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  6952  010A80  D01F               	goto	u4350
  6953  010A82                     
  6954                           ;mdb.c: 287: {
  6955                           ;mdb.c: 289: dbcount++;
  6956                           
  6957                           ; BSR set to: 0
  6958  010A82  0100               	movlb	0	; () banked
  6959  010A84  4BA4               	infsnz	_dbcount& (0+255),f,b
  6960  010A86  2BA5               	incf	(_dbcount+1)& (0+255),f,b
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;mdb.c: 290: mdbflags.isdata = 0;
  6964  010A88  903F               	bcf	_mdbflags,0,c
  6965                           
  6966                           ;mdb.c: 293: while(PIR3bits.RC1IF && !mdbflags.isdata)
  6967  010A8A  D015               	goto	l2986
  6968  010A8C                     
  6969                           ;mdb.c: 294: {
  6970                           ;mdb.c: 297: mdbdata[i] = EUSART1_Read();
  6971                           
  6972                           ; BSR set to: 0
  6973  010A8C  5026               	movf	mdb_comm@i,w,c
  6974  010A8E  0D01               	mullw	1
  6975  010A90  0E60               	movlw	low _mdbdata
  6976  010A92  24F3               	addwf	prodl,w,c
  6977  010A94  6ED9               	movwf	fsr2l,c
  6978  010A96  0E00               	movlw	high _mdbdata
  6979  010A98  20F4               	addwfc	prodh,w,c
  6980  010A9A  6EDA               	movwf	fsr2h,c
  6981  010A9C  ECD9  F095         	call	_EUSART1_Read	;wreg free
  6982  010AA0  6EDF               	movwf	indf2,c
  6983                           
  6984                           ;mdb.c: 298: mdb_waitr();
  6985  010AA2  EC40  F096         	call	_mdb_waitr	;wreg free
  6986                           
  6987                           ;mdb.c: 300: mdbflags.isdata = RC1STAbits.RX9D;
  6988  010AA6  A09D               	btfss	3997,0,c	;volatile
  6989  010AA8  D002               	bra	u4335
  6990  010AAA  803F               	bsf	_mdbflags,0,c
  6991  010AAC  D001               	bra	u4337
  6992  010AAE                     u4335:
  6993  010AAE  903F               	bcf	_mdbflags,0,c
  6994  010AB0                     u4337:
  6995                           
  6996                           ;mdb.c: 301: TMR1_Initialize();
  6997  010AB0  ECF6  F093         	call	_TMR1_Initialize	;wreg free
  6998                           
  6999                           ;mdb.c: 302: i++;
  7000  010AB4  2A26               	incf	mdb_comm@i,f,c
  7001  010AB6                     l2986:
  7002  010AB6  010E               	movlb	14	; () banked
  7003  010AB8  ABCD               	btfss	205,5,b	;volatile
  7004  010ABA  D002               	goto	u4350
  7005                           
  7006                           ; BSR set to: 14
  7007  010ABC  A03F               	btfss	_mdbflags,0,c
  7008  010ABE  D7E6               	goto	l2987
  7009  010AC0                     u4350:
  7010                           
  7011                           ; BSR set to: 14
  7012                           
  7013                           ; BSR set to: 14
  7014  010AC0  010E               	movlb	14	; () banked
  7015  010AC2  B1CE               	btfsc	206,0,b	;volatile
  7016  010AC4  D002               	goto	u4370
  7017                           
  7018                           ; BSR set to: 14
  7019  010AC6  A03F               	btfss	_mdbflags,0,c
  7020  010AC8  D7DC               	goto	l2985
  7021  010ACA                     u4370:
  7022                           
  7023                           ; BSR set to: 14
  7024                           ;mdb.c: 304: }
  7025                           ;mdb.c: 306: }
  7026                           ;mdb.c: 308: i--;
  7027                           
  7028                           ; BSR set to: 14
  7029                           
  7030                           ; BSR set to: 14
  7031  010ACA  0626               	decf	mdb_comm@i,f,c
  7032                           
  7033                           ; BSR set to: 14
  7034                           ;mdb.c: 310: mdbflags.timeout = PIR4bits.TMR1IF;
  7035  010ACC  A1CE               	btfss	206,0,b	;volatile
  7036  010ACE  D002               	bra	u4385
  7037  010AD0  863F               	bsf	_mdbflags,3,c
  7038  010AD2  D001               	bra	u4387
  7039  010AD4                     u4385:
  7040  010AD4  963F               	bcf	_mdbflags,3,c
  7041  010AD6                     u4387:
  7042                           
  7043                           ;mdb.c: 312: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  7044  010AD6  A03F               	btfss	_mdbflags,0,c
  7045  010AD8  D011               	goto	l2994
  7046  010ADA  5026               	movf	mdb_comm@i,w,c
  7047  010ADC  0D01               	mullw	1
  7048  010ADE  0E60               	movlw	low _mdbdata
  7049  010AE0  24F3               	addwf	prodl,w,c
  7050  010AE2  6ED9               	movwf	fsr2l,c
  7051  010AE4  0E00               	movlw	high _mdbdata
  7052  010AE6  20F4               	addwfc	prodh,w,c
  7053  010AE8  6EDA               	movwf	fsr2h,c
  7054  010AEA  50DF               	movf	indf2,w,c
  7055  010AEC  B4D8               	btfsc	status,2,c
  7056  010AEE  D006               	goto	l2994
  7057                           
  7058                           ;mdb.c: 313: {
  7059                           ;mdb.c: 314: TX1STAbits.TX9D = 1;
  7060  010AF0  809E               	bsf	3998,0,c	;volatile
  7061                           
  7062                           ;mdb.c: 315: mdb_on();
  7063  010AF2  EC4D  F096         	call	_mdb_on	;wreg free
  7064                           
  7065                           ;mdb.c: 316: mdb_transmit(0x00);
  7066  010AF6  0E00               	movlw	0
  7067  010AF8  ECEB  F095         	call	_mdb_transmit
  7068  010AFC                     l2994:
  7069                           
  7070                           ;mdb.c: 318: }
  7071                           ;mdb.c: 320: mdb_on();
  7072  010AFC  EC4D  F096         	call	_mdb_on	;wreg free
  7073                           
  7074                           ;mdb.c: 322: return(i);
  7075  010B00  5026               	movf	mdb_comm@i,w,c
  7076  010B02  0012               	return	
  7077  010B04                     __end_of_mdb_comm:
  7078                           	opt stack 0
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           prodh	equ	0xFF4
  7084                           prodl	equ	0xFF3
  7085                           postinc0	equ	0xFEE
  7086                           wreg	equ	0xFE8
  7087                           indf2	equ	0xFDF
  7088                           postinc2	equ	0xFDE
  7089                           fsr2h	equ	0xFDA
  7090                           fsr2l	equ	0xFD9
  7091                           status	equ	0xFD8
  7092                           
  7093 ;; *************** function _mdb_waitr *****************
  7094 ;; Defined at:
  7095 ;;		line 346 in file "mdb.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		None
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    2
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_mdb_comm
  7120 ;;		_cctalk_read
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text29
  7125  012C80                     __ptext29:
  7126                           	opt stack 0
  7127  012C80                     _mdb_waitr:
  7128                           	opt stack 24
  7129                           
  7130                           ;mdb.c: 349: {
  7131                           
  7132                           ;mdb.c: 348: while(BAUD1CONbits.RCIDL == 0)
  7133                           
  7134                           ;incstack = 0
  7135  012C80  BC9F               	btfsc	3999,6,c	;volatile
  7136  012C82  0012               	return	
  7137  012C84  D7FD               	goto	_mdb_waitr
  7138  012C86                     __end_of_mdb_waitr:
  7139                           	opt stack 0
  7140                           tblptru	equ	0xFF8
  7141                           tblptrh	equ	0xFF7
  7142                           tblptrl	equ	0xFF6
  7143                           tablat	equ	0xFF5
  7144                           prodh	equ	0xFF4
  7145                           prodl	equ	0xFF3
  7146                           postinc0	equ	0xFEE
  7147                           wreg	equ	0xFE8
  7148                           indf2	equ	0xFDF
  7149                           postinc2	equ	0xFDE
  7150                           fsr2h	equ	0xFDA
  7151                           fsr2l	equ	0xFD9
  7152                           status	equ	0xFD8
  7153                           
  7154 ;; *************** function _mdb_transmit *****************
  7155 ;; Defined at:
  7156 ;;		line 447 in file "mdb.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  txbyte          1    wreg     unsigned char 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  txbyte          1   19[COMRAM] unsigned char 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      void 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, cstack
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;Total ram usage:        1 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    3
  7177 ;; This function calls:
  7178 ;;		_EUSART1_Write
  7179 ;;		_mdb_waitx
  7180 ;; This function is called by:
  7181 ;;		_mdb_comm
  7182 ;;		_mdb_test
  7183 ;;		_cctalk_comm
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           	psect	text30
  7188  012BD6                     __ptext30:
  7189                           	opt stack 0
  7190  012BD6                     _mdb_transmit:
  7191                           	opt stack 23
  7192                           
  7193                           ;incstack = 0
  7194                           ;mdb_transmit@txbyte stored from wreg
  7195  012BD6  6E1E               	movwf	mdb_transmit@txbyte,c
  7196                           
  7197                           ;mdb.c: 449: EUSART1_Write(txbyte);
  7198  012BD8  501E               	movf	mdb_transmit@txbyte,w,c
  7199  012BDA  ECF2  F095         	call	_EUSART1_Write
  7200                           
  7201                           ;mdb.c: 450: mdb_waitx();
  7202  012BDE  EC43  F096         	call	_mdb_waitx	;wreg free
  7203  012BE2  0012               	return		;funcret
  7204  012BE4                     __end_of_mdb_transmit:
  7205                           	opt stack 0
  7206                           tblptru	equ	0xFF8
  7207                           tblptrh	equ	0xFF7
  7208                           tblptrl	equ	0xFF6
  7209                           tablat	equ	0xFF5
  7210                           prodh	equ	0xFF4
  7211                           prodl	equ	0xFF3
  7212                           postinc0	equ	0xFEE
  7213                           wreg	equ	0xFE8
  7214                           indf2	equ	0xFDF
  7215                           postinc2	equ	0xFDE
  7216                           fsr2h	equ	0xFDA
  7217                           fsr2l	equ	0xFD9
  7218                           status	equ	0xFD8
  7219                           
  7220 ;; *************** function _mdb_waitx *****************
  7221 ;; Defined at:
  7222 ;;		line 338 in file "mdb.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;		None
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;		None
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  1    wreg      void 
  7229 ;; Registers used:
  7230 ;;		None
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;Total ram usage:        0 bytes
  7241 ;; Hardware stack levels used:    1
  7242 ;; Hardware stack levels required when called:    2
  7243 ;; This function calls:
  7244 ;;		Nothing
  7245 ;; This function is called by:
  7246 ;;		_mdb_transmit
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text31
  7251  012C86                     __ptext31:
  7252                           	opt stack 0
  7253  012C86                     _mdb_waitx:
  7254                           	opt stack 23
  7255                           
  7256                           ;mdb.c: 341: {
  7257                           
  7258                           ;mdb.c: 340: while(TX1STAbits.TRMT == 0)
  7259                           
  7260                           ;incstack = 0
  7261  012C86  B29E               	btfsc	3998,1,c	;volatile
  7262  012C88  0012               	return	
  7263  012C8A  D7FD               	goto	_mdb_waitx
  7264  012C8C                     __end_of_mdb_waitx:
  7265                           	opt stack 0
  7266                           tblptru	equ	0xFF8
  7267                           tblptrh	equ	0xFF7
  7268                           tblptrl	equ	0xFF6
  7269                           tablat	equ	0xFF5
  7270                           prodh	equ	0xFF4
  7271                           prodl	equ	0xFF3
  7272                           postinc0	equ	0xFEE
  7273                           wreg	equ	0xFE8
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           fsr2h	equ	0xFDA
  7277                           fsr2l	equ	0xFD9
  7278                           status	equ	0xFD8
  7279                           
  7280 ;; *************** function _EUSART1_Write *****************
  7281 ;; Defined at:
  7282 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  txData          1    wreg     unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  txData          1   18[COMRAM] unsigned char 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      void 
  7289 ;; Registers used:
  7290 ;;		wreg
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;Total ram usage:        1 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; Hardware stack levels required when called:    2
  7303 ;; This function calls:
  7304 ;;		Nothing
  7305 ;; This function is called by:
  7306 ;;		_mdb_transmit
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text32
  7311  012BE4                     __ptext32:
  7312                           	opt stack 0
  7313  012BE4                     _EUSART1_Write:
  7314                           	opt stack 23
  7315                           
  7316                           ;incstack = 0
  7317                           ;EUSART1_Write@txData stored from wreg
  7318  012BE4  6E1D               	movwf	EUSART1_Write@txData,c
  7319  012BE6                     
  7320                           ;eusart1.c: 96: {
  7321                           
  7322                           ;eusart1.c: 95: while(0 == PIR3bits.TX1IF)
  7323  012BE6  010E               	movlb	14	; () banked
  7324  012BE8  A9CD               	btfss	205,4,b	;volatile
  7325  012BEA  D7FD               	goto	l10418
  7326                           
  7327                           ; BSR set to: 14
  7328                           ;eusart1.c: 97: }
  7329                           ;eusart1.c: 99: TX1REG = txData;
  7330                           
  7331                           ; BSR set to: 14
  7332  012BEC  C01D  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  7333                           
  7334                           ; BSR set to: 14
  7335  012BF0  0012               	return		;funcret
  7336  012BF2                     __end_of_EUSART1_Write:
  7337                           	opt stack 0
  7338                           tblptru	equ	0xFF8
  7339                           tblptrh	equ	0xFF7
  7340                           tblptrl	equ	0xFF6
  7341                           tablat	equ	0xFF5
  7342                           prodh	equ	0xFF4
  7343                           prodl	equ	0xFF3
  7344                           postinc0	equ	0xFEE
  7345                           wreg	equ	0xFE8
  7346                           indf2	equ	0xFDF
  7347                           postinc2	equ	0xFDE
  7348                           fsr2h	equ	0xFDA
  7349                           fsr2l	equ	0xFD9
  7350                           status	equ	0xFD8
  7351                           
  7352 ;; *************** function _mdb_on *****************
  7353 ;; Defined at:
  7354 ;;		line 325 in file "mdb.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		None
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;Total ram usage:        0 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    2
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_mdb_comm
  7379 ;;		_mdb_test
  7380 ;;		_cctalk_init
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text33
  7385  012C9A                     __ptext33:
  7386                           	opt stack 0
  7387  012C9A                     _mdb_on:
  7388                           	opt stack 24
  7389                           
  7390                           ;mdb.c: 331: LATCbits.LATC0 = 1;
  7391                           
  7392                           ; BSR set to: 14
  7393                           ;incstack = 0
  7394  012C9A  8085               	bsf	3973,0,c	;volatile
  7395  012C9C  0012               	return		;funcret
  7396  012C9E                     __end_of_mdb_on:
  7397                           	opt stack 0
  7398                           tblptru	equ	0xFF8
  7399                           tblptrh	equ	0xFF7
  7400                           tblptrl	equ	0xFF6
  7401                           tablat	equ	0xFF5
  7402                           prodh	equ	0xFF4
  7403                           prodl	equ	0xFF3
  7404                           postinc0	equ	0xFEE
  7405                           wreg	equ	0xFE8
  7406                           indf2	equ	0xFDF
  7407                           postinc2	equ	0xFDE
  7408                           fsr2h	equ	0xFDA
  7409                           fsr2l	equ	0xFD9
  7410                           status	equ	0xFD8
  7411                           
  7412 ;; *************** function _init_mdbdata *****************
  7413 ;; Defined at:
  7414 ;;		line 13 in file "mdb.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  initdata        1    wreg     unsigned char 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  initdata        1   23[COMRAM] unsigned char 
  7419 ;;  i               1   24[COMRAM] unsigned char 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;Total ram usage:        2 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    4
  7436 ;; This function calls:
  7437 ;;		_init_pricestore
  7438 ;; This function is called by:
  7439 ;;		_mdb_noten
  7440 ;;		_mdb_security
  7441 ;;		_mdb_comm
  7442 ;;		_cctalk_pinenter
  7443 ;;		_cctalk_comm
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text34
  7448  0129AA                     __ptext34:
  7449                           	opt stack 0
  7450  0129AA                     _init_mdbdata:
  7451                           	opt stack 22
  7452                           
  7453                           ;incstack = 0
  7454                           ;init_mdbdata@initdata stored from wreg
  7455  0129AA  6E22               	movwf	init_mdbdata@initdata,c
  7456                           
  7457                           ;mdb.c: 15: char i = 0;
  7458  0129AC  0E00               	movlw	0
  7459  0129AE  6E23               	movwf	init_mdbdata@i,c
  7460                           
  7461                           ;mdb.c: 16: while(i < 32)
  7462  0129B0  D00B               	goto	l2895
  7463  0129B2                     
  7464                           ;mdb.c: 17: {
  7465                           ;mdb.c: 18: mdbdata[i] = initdata;
  7466  0129B2  5023               	movf	init_mdbdata@i,w,c
  7467  0129B4  0D01               	mullw	1
  7468  0129B6  0E60               	movlw	low _mdbdata
  7469  0129B8  24F3               	addwf	prodl,w,c
  7470  0129BA  6ED9               	movwf	fsr2l,c
  7471  0129BC  0E00               	movlw	high _mdbdata
  7472  0129BE  20F4               	addwfc	prodh,w,c
  7473  0129C0  6EDA               	movwf	fsr2h,c
  7474  0129C2  C022  FFDF         	movff	init_mdbdata@initdata,indf2
  7475                           
  7476                           ;mdb.c: 19: i++;
  7477  0129C6  2A23               	incf	init_mdbdata@i,f,c
  7478  0129C8                     l2895:
  7479  0129C8  0E1F               	movlw	31
  7480  0129CA  6423               	cpfsgt	init_mdbdata@i,c
  7481  0129CC  D7F2               	goto	l2896
  7482                           
  7483                           ;mdb.c: 20: }
  7484                           ;mdb.c: 21: init_pricestore();
  7485  0129CE  ECC5  F091         	call	_init_pricestore	;wreg free
  7486  0129D2  0012               	return		;funcret
  7487  0129D4                     __end_of_init_mdbdata:
  7488                           	opt stack 0
  7489                           tblptru	equ	0xFF8
  7490                           tblptrh	equ	0xFF7
  7491                           tblptrl	equ	0xFF6
  7492                           tablat	equ	0xFF5
  7493                           prodh	equ	0xFF4
  7494                           prodl	equ	0xFF3
  7495                           postinc0	equ	0xFEE
  7496                           wreg	equ	0xFE8
  7497                           indf2	equ	0xFDF
  7498                           postinc2	equ	0xFDE
  7499                           fsr2h	equ	0xFDA
  7500                           fsr2l	equ	0xFD9
  7501                           status	equ	0xFD8
  7502                           
  7503 ;; *************** function _init_pricestore *****************
  7504 ;; Defined at:
  7505 ;;		line 221 in file "dispense.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  i               1   22[COMRAM] unsigned char 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;Total ram usage:        3 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    3
  7526 ;; This function calls:
  7527 ;;		_DATAEE_ReadByte
  7528 ;; This function is called by:
  7529 ;;		_init_mdbdata
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text35
  7534  01238A                     __ptext35:
  7535                           	opt stack 0
  7536  01238A                     _init_pricestore:
  7537                           	opt stack 22
  7538                           
  7539                           ;dispense.c: 224: char i = 0;
  7540                           
  7541                           ;incstack = 0
  7542  01238A  0E00               	movlw	0
  7543  01238C  6E21               	movwf	init_pricestore@i,c
  7544                           
  7545                           ;dispense.c: 225: while(i < 8)
  7546  01238E  D01E               	goto	l4499
  7547  012390                     
  7548                           ;dispense.c: 226: {
  7549                           ;dispense.c: 227: pricevend[i] = DATAEE_ReadByte(pricestore + i);
  7550  012390  5021               	movf	init_pricestore@i,w,c
  7551  012392  0D01               	mullw	1
  7552  012394  0E7F               	movlw	low _pricevend
  7553  012396  24F3               	addwf	prodl,w,c
  7554  012398  6ED9               	movwf	fsr2l,c
  7555  01239A  0E00               	movlw	high _pricevend
  7556  01239C  20F4               	addwfc	prodh,w,c
  7557  01239E  6EDA               	movwf	fsr2h,c
  7558  0123A0  0E13               	movlw	low _pricestore
  7559  0123A2  6EF6               	movwf	tblptrl,c
  7560  0123A4                     	if	1	;There is more than 1 active tblptr byte
  7561  0123A4  0EFC               	movlw	high _pricestore
  7562  0123A6  6EF7               	movwf	tblptrh,c
  7563  0123A8                     	endif
  7564  0123A8                     	if	1	;There are 3 active tblptr bytes
  7565  0123A8  0E00               	movlw	low (_pricestore shr (0+16))
  7566  0123AA  6EF8               	movwf	tblptru,c
  7567  0123AC                     	endif
  7568  0123AC  0009               	tblrd		*+
  7569  0123AE  CFF5 F01F          	movff	tablat,??_init_pricestore
  7570  0123B2  0009               	tblrd		*+
  7571  0123B4  CFF5 F020          	movff	tablat,??_init_pricestore+1
  7572  0123B8  5021               	movf	init_pricestore@i,w,c
  7573  0123BA  241F               	addwf	??_init_pricestore,w,c
  7574  0123BC  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  7575  0123BE  0E00               	movlw	0
  7576  0123C0  2020               	addwfc	??_init_pricestore+1,w,c
  7577  0123C2  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  7578  0123C4  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  7579  0123C8  6EDF               	movwf	indf2,c
  7580                           
  7581                           ;dispense.c: 228: i++;
  7582  0123CA  2A21               	incf	init_pricestore@i,f,c
  7583  0123CC                     l4499:
  7584  0123CC  0E07               	movlw	7
  7585  0123CE  6421               	cpfsgt	init_pricestore@i,c
  7586  0123D0  D7DF               	goto	l4500
  7587  0123D2  0012               	return	
  7588  0123D4                     __end_of_init_pricestore:
  7589                           	opt stack 0
  7590                           tblptru	equ	0xFF8
  7591                           tblptrh	equ	0xFF7
  7592                           tblptrl	equ	0xFF6
  7593                           tablat	equ	0xFF5
  7594                           prodh	equ	0xFF4
  7595                           prodl	equ	0xFF3
  7596                           postinc0	equ	0xFEE
  7597                           wreg	equ	0xFE8
  7598                           indf2	equ	0xFDF
  7599                           postinc2	equ	0xFDE
  7600                           fsr2h	equ	0xFDA
  7601                           fsr2l	equ	0xFD9
  7602                           status	equ	0xFD8
  7603                           
  7604 ;; *************** function _EUSART1_Read *****************
  7605 ;; Defined at:
  7606 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      unsigned char 
  7613 ;; Registers used:
  7614 ;;		wreg, status,2
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;Total ram usage:        0 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    2
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_mdb_comm
  7631 ;;		_cctalk_read
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text36
  7636  012BB2                     __ptext36:
  7637                           	opt stack 0
  7638  012BB2                     _EUSART1_Read:
  7639                           	opt stack 24
  7640                           
  7641                           ;eusart1.c: 78: {
  7642                           
  7643                           ;eusart1.c: 77: while(!PIR3bits.RC1IF)
  7644                           
  7645                           ;incstack = 0
  7646  012BB2  010E               	movlb	14	; () banked
  7647  012BB4  ABCD               	btfss	205,5,b	;volatile
  7648  012BB6  D7FD               	goto	_EUSART1_Read
  7649                           
  7650                           ; BSR set to: 14
  7651                           ;eusart1.c: 79: }
  7652                           ;eusart1.c: 82: if(1 == RC1STAbits.OERR)
  7653  012BB8  A29D               	btfss	3997,1,c	;volatile
  7654  012BBA  D002               	goto	l95
  7655                           
  7656                           ; BSR set to: 14
  7657                           ;eusart1.c: 83: {
  7658                           ;eusart1.c: 86: RC1STAbits.CREN = 0;
  7659  012BBC  989D               	bcf	3997,4,c	;volatile
  7660                           
  7661                           ;eusart1.c: 87: RC1STAbits.CREN = 1;
  7662  012BBE  889D               	bsf	3997,4,c	;volatile
  7663  012BC0                     l95:
  7664                           
  7665                           ; BSR set to: 14
  7666                           ;eusart1.c: 88: }
  7667                           ;eusart1.c: 90: return RC1REG;
  7668                           
  7669                           ; BSR set to: 14
  7670  012BC0  5099               	movf	3993,w,c	;volatile
  7671  012BC2  0012               	return	
  7672  012BC4                     __end_of_EUSART1_Read:
  7673                           	opt stack 0
  7674                           tblptru	equ	0xFF8
  7675                           tblptrh	equ	0xFF7
  7676                           tblptrl	equ	0xFF6
  7677                           tablat	equ	0xFF5
  7678                           prodh	equ	0xFF4
  7679                           prodl	equ	0xFF3
  7680                           postinc0	equ	0xFEE
  7681                           wreg	equ	0xFE8
  7682                           indf2	equ	0xFDF
  7683                           postinc2	equ	0xFDE
  7684                           fsr2h	equ	0xFDA
  7685                           fsr2l	equ	0xFD9
  7686                           status	equ	0xFD8
  7687                           
  7688 ;; *************** function _lcd_init *****************
  7689 ;; Defined at:
  7690 ;;		line 11 in file "lcd.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;		None
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;Total ram usage:        2 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:    8
  7711 ;; This function calls:
  7712 ;;		_lcd_clockE
  7713 ;;		_lcd_test
  7714 ;;		_lcd_write
  7715 ;; This function is called by:
  7716 ;;		_main
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text37
  7721  0115A4                     __ptext37:
  7722                           	opt stack 0
  7723  0115A4                     _lcd_init:
  7724                           	opt stack 22
  7725                           
  7726                           ;lcd.c: 13: LATE = 0x00;
  7727                           
  7728                           ; BSR set to: 14
  7729                           ;incstack = 0
  7730  0115A4  0E00               	movlw	0
  7731  0115A6  6E87               	movwf	3975,c	;volatile
  7732                           
  7733                           ;lcd.c: 15: LATD = 0x03;
  7734  0115A8  0E03               	movlw	3
  7735  0115AA  6E86               	movwf	3974,c	;volatile
  7736                           
  7737                           ;lcd.c: 16: for(count = 3; count > 0; count-- )
  7738  0115AC  0E03               	movlw	3
  7739  0115AE  0100               	movlb	0	; () banked
  7740  0115B0  6FCD               	movwf	_count& (0+255),b
  7741  0115B2                     l11894:
  7742                           
  7743                           ; BSR set to: 0
  7744  0115B2  51CD               	movf	_count& (0+255),w,b
  7745  0115B4  0A80               	xorlw	128
  7746  0115B6  0F7F               	addlw	-129
  7747  0115B8  A0D8               	btfss	status,0,c
  7748  0115BA  D00C               	goto	u5180
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;lcd.c: 17: {
  7752                           ;lcd.c: 18: lcd_clockE();
  7753                           
  7754                           ; BSR set to: 0
  7755                           
  7756                           ; BSR set to: 0
  7757  0115BC  EC15  F096         	call	_lcd_clockE	;wreg free
  7758                           
  7759                           ;lcd.c: 19: _delay((unsigned long)((5)*(12000000/4000.0)));
  7760  0115C0  0E14               	movlw	20
  7761  0115C2  6E25               	movwf	??_lcd_init& (0+255),c
  7762  0115C4  0E7A               	movlw	122
  7763  0115C6                     u5717:
  7764  0115C6  2EE8               	decfsz	wreg,f,c
  7765  0115C8  D7FE               	bra	u5717
  7766  0115CA  2E25               	decfsz	??_lcd_init& (0+255),f,c
  7767  0115CC  D7FC               	bra	u5717
  7768  0115CE  0100               	movlb	0	; () banked
  7769  0115D0  07CD               	decf	_count& (0+255),f,b
  7770  0115D2  D7EF               	goto	l11894
  7771  0115D4                     u5180:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;lcd.c: 21: }
  7775                           ;lcd.c: 22: _delay((unsigned long)((50)*(12000000/4000000.0)));
  7776                           
  7777                           ; BSR set to: 0
  7778  0115D4  0E32               	movlw	50
  7779  0115D6                     u5727:
  7780  0115D6  2EE8               	decfsz	wreg,f,c
  7781  0115D8  D7FE               	bra	u5727
  7782                           
  7783                           ;lcd.c: 23: LATD = 0x02;
  7784  0115DA  0E02               	movlw	2
  7785  0115DC  6E86               	movwf	3974,c	;volatile
  7786                           
  7787                           ;lcd.c: 24: lcd_clockE();
  7788  0115DE  EC15  F096         	call	_lcd_clockE	;wreg free
  7789                           
  7790                           ;lcd.c: 27: lcd_write(dispfunc3);
  7791  0115E2  0E56               	movlw	low _dispfunc3
  7792  0115E4  6EF6               	movwf	tblptrl,c
  7793  0115E6                     	if	1	;There is more than 1 active tblptr byte
  7794  0115E6  0EFC               	movlw	high _dispfunc3
  7795  0115E8  6EF7               	movwf	tblptrh,c
  7796  0115EA                     	endif
  7797  0115EA                     	if	1	;There are 3 active tblptr bytes
  7798  0115EA  0E00               	movlw	low (_dispfunc3 shr (0+16))
  7799  0115EC  6EF8               	movwf	tblptru,c
  7800  0115EE                     	endif
  7801  0115EE  0008               	tblrd		*
  7802  0115F0  50F5               	movf	tablat,w,c
  7803  0115F2  EC78  F094         	call	_lcd_write
  7804                           
  7805                           ;lcd.c: 29: lcd_write(dispon);
  7806  0115F6  0E55               	movlw	low _dispon
  7807  0115F8  6EF6               	movwf	tblptrl,c
  7808  0115FA                     	if	1	;There is more than 1 active tblptr byte
  7809  0115FA  0EFC               	movlw	high _dispon
  7810  0115FC  6EF7               	movwf	tblptrh,c
  7811  0115FE                     	endif
  7812  0115FE                     	if	1	;There are 3 active tblptr bytes
  7813  0115FE  0E00               	movlw	low (_dispon shr (0+16))
  7814  011600  6EF8               	movwf	tblptru,c
  7815  011602                     	endif
  7816  011602  0008               	tblrd		*
  7817  011604  50F5               	movf	tablat,w,c
  7818  011606  EC78  F094         	call	_lcd_write
  7819                           
  7820                           ;lcd.c: 31: lcd_write(dispnormal);
  7821  01160A  0E51               	movlw	low _dispnormal
  7822  01160C  6EF6               	movwf	tblptrl,c
  7823  01160E                     	if	1	;There is more than 1 active tblptr byte
  7824  01160E  0EFC               	movlw	high _dispnormal
  7825  011610  6EF7               	movwf	tblptrh,c
  7826  011612                     	endif
  7827  011612                     	if	1	;There are 3 active tblptr bytes
  7828  011612  0E00               	movlw	low (_dispnormal shr (0+16))
  7829  011614  6EF8               	movwf	tblptru,c
  7830  011616                     	endif
  7831  011616  0008               	tblrd		*
  7832  011618  50F5               	movf	tablat,w,c
  7833  01161A  EC78  F094         	call	_lcd_write
  7834                           
  7835                           ;lcd.c: 33: lcd_write(dispclr);
  7836  01161E  0E54               	movlw	low _dispclr
  7837  011620  6EF6               	movwf	tblptrl,c
  7838  011622                     	if	1	;There is more than 1 active tblptr byte
  7839  011622  0EFC               	movlw	high _dispclr
  7840  011624  6EF7               	movwf	tblptrh,c
  7841  011626                     	endif
  7842  011626                     	if	1	;There are 3 active tblptr bytes
  7843  011626  0E00               	movlw	low (_dispclr shr (0+16))
  7844  011628  6EF8               	movwf	tblptru,c
  7845  01162A                     	endif
  7846  01162A  0008               	tblrd		*
  7847  01162C  50F5               	movf	tablat,w,c
  7848  01162E  EC78  F094         	call	_lcd_write
  7849                           
  7850                           ;lcd.c: 35: lcd_test();
  7851  011632  ECAF  F095         	call	_lcd_test	;wreg free
  7852                           
  7853                           ;lcd.c: 36: _delay((unsigned long)((250)*(12000000/4000.0)));
  7854  011636  0E04               	movlw	4
  7855  011638  6E26               	movwf	(??_lcd_init+1)& (0+255),c
  7856  01163A  0ECF               	movlw	207
  7857  01163C  6E25               	movwf	??_lcd_init& (0+255),c
  7858  01163E  0E02               	movlw	2
  7859  011640                     u5737:
  7860  011640  2EE8               	decfsz	wreg,f,c
  7861  011642  D7FE               	bra	u5737
  7862  011644  2E25               	decfsz	??_lcd_init& (0+255),f,c
  7863  011646  D7FC               	bra	u5737
  7864  011648  2E26               	decfsz	(??_lcd_init+1)& (0+255),f,c
  7865  01164A  D7FA               	bra	u5737
  7866  01164C  F000               	nop		;# 
  7867  01164E  0012               	return		;funcret
  7868  011650                     __end_of_lcd_init:
  7869                           	opt stack 0
  7870                           tblptru	equ	0xFF8
  7871                           tblptrh	equ	0xFF7
  7872                           tblptrl	equ	0xFF6
  7873                           tablat	equ	0xFF5
  7874                           prodh	equ	0xFF4
  7875                           prodl	equ	0xFF3
  7876                           postinc0	equ	0xFEE
  7877                           wreg	equ	0xFE8
  7878                           indf2	equ	0xFDF
  7879                           postinc2	equ	0xFDE
  7880                           fsr2h	equ	0xFDA
  7881                           fsr2l	equ	0xFD9
  7882                           status	equ	0xFD8
  7883                           
  7884 ;; *************** function _lcd_test *****************
  7885 ;; Defined at:
  7886 ;;		line 301 in file "lcd.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  character       1   25[COMRAM] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7904 ;;Total ram usage:        1 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    7
  7907 ;; This function calls:
  7908 ;;		_lcd_writeC
  7909 ;; This function is called by:
  7910 ;;		_lcd_init
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text38
  7915  012B5E                     __ptext38:
  7916                           	opt stack 0
  7917  012B5E                     _lcd_test:
  7918                           	opt stack 22
  7919                           
  7920                           ;lcd.c: 303: uint8_t character = 0x30;
  7921                           
  7922                           ;incstack = 0
  7923  012B5E  0E30               	movlw	48
  7924  012B60  D004               	goto	L13
  7925  012B62                     
  7926                           ;lcd.c: 305: {
  7927                           ;lcd.c: 306: lcd_writeC(character);
  7928  012B62  5024               	movf	lcd_test@character,w,c
  7929  012B64  EC84  F08F         	call	_lcd_writeC
  7930                           
  7931                           ;lcd.c: 307: character = character+ 1;
  7932  012B68  2824               	incf	lcd_test@character,w,c
  7933  012B6A                     L13:
  7934  012B6A  6E24               	movwf	lcd_test@character,c
  7935  012B6C  0E7F               	movlw	127
  7936  012B6E  6424               	cpfsgt	lcd_test@character,c
  7937  012B70  D7F8               	goto	l1669
  7938  012B72  0012               	return	
  7939  012B74                     __end_of_lcd_test:
  7940                           	opt stack 0
  7941                           tblptru	equ	0xFF8
  7942                           tblptrh	equ	0xFF7
  7943                           tblptrl	equ	0xFF6
  7944                           tablat	equ	0xFF5
  7945                           prodh	equ	0xFF4
  7946                           prodl	equ	0xFF3
  7947                           postinc0	equ	0xFEE
  7948                           wreg	equ	0xFE8
  7949                           indf2	equ	0xFDF
  7950                           postinc2	equ	0xFDE
  7951                           fsr2h	equ	0xFDA
  7952                           fsr2l	equ	0xFD9
  7953                           status	equ	0xFD8
  7954                           
  7955 ;; *************** function _gsm_init *****************
  7956 ;; Defined at:
  7957 ;;		line 32 in file "gsm.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;		None
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;		None
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      void 
  7964 ;; Registers used:
  7965 ;;		wreg, status,2, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;Total ram usage:        1 bytes
  7976 ;; Hardware stack levels used:    1
  7977 ;; Hardware stack levels required when called:    5
  7978 ;; This function calls:
  7979 ;;		_EUSART2_Read
  7980 ;;		_gsm_on
  7981 ;;		_gsm_txAT
  7982 ;; This function is called by:
  7983 ;;		_main
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text39
  7988  01297E                     __ptext39:
  7989                           	opt stack 0
  7990  01297E                     _gsm_init:
  7991                           	opt stack 25
  7992                           
  7993                           ;gsm.c: 34: gsm_on();
  7994                           
  7995                           ;incstack = 0
  7996  01297E  EC4F  F096         	call	_gsm_on	;wreg free
  7997                           
  7998                           ;gsm.c: 35: while(!PIR3bits.RC2IF)
  7999  012982  D00A               	goto	l4938
  8000  012984                     
  8001                           ;gsm.c: 36: {
  8002                           ;gsm.c: 37: gsm_txAT();
  8003  012984  ECF9  F095         	call	_gsm_txAT	;wreg free
  8004                           
  8005                           ;gsm.c: 38: _delay((unsigned long)((10)*(12000000/4000.0)));
  8006  012988  0E27               	movlw	39
  8007  01298A  6E1F               	movwf	??_gsm_init& (0+255),c
  8008  01298C  0EF5               	movlw	245
  8009  01298E                     u5747:
  8010  01298E  2EE8               	decfsz	wreg,f,c
  8011  012990  D7FE               	bra	u5747
  8012  012992  2E1F               	decfsz	??_gsm_init& (0+255),f,c
  8013  012994  D7FC               	bra	u5747
  8014  012996  F000               	nop	
  8015  012998                     l4938:
  8016  012998  010E               	movlb	14	; () banked
  8017  01299A  AFCD               	btfss	205,7,b	;volatile
  8018  01299C  D7F3               	goto	l4939
  8019                           
  8020                           ; BSR set to: 14
  8021                           ;gsm.c: 39: }
  8022                           ;gsm.c: 40: gsmbyte = EUSART2_Read();
  8023                           
  8024                           ; BSR set to: 14
  8025  01299E  ECE2  F095         	call	_EUSART2_Read	;wreg free
  8026  0129A2  0100               	movlb	0	; () banked
  8027  0129A4  6FA6               	movwf	_gsmbyte& (0+255),b
  8028  0129A6  F000               	nop		;# 
  8029  0129A8  0012               	return		;funcret
  8030  0129AA                     __end_of_gsm_init:
  8031                           	opt stack 0
  8032                           tblptru	equ	0xFF8
  8033                           tblptrh	equ	0xFF7
  8034                           tblptrl	equ	0xFF6
  8035                           tablat	equ	0xFF5
  8036                           prodh	equ	0xFF4
  8037                           prodl	equ	0xFF3
  8038                           postinc0	equ	0xFEE
  8039                           wreg	equ	0xFE8
  8040                           indf2	equ	0xFDF
  8041                           postinc2	equ	0xFDE
  8042                           fsr2h	equ	0xFDA
  8043                           fsr2l	equ	0xFD9
  8044                           status	equ	0xFD8
  8045                           
  8046 ;; *************** function _gsm_txAT *****************
  8047 ;; Defined at:
  8048 ;;		line 45 in file "gsm.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;		None
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		wreg, status,2, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;Total ram usage:        0 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    4
  8069 ;; This function calls:
  8070 ;;		_gsm_transmit
  8071 ;; This function is called by:
  8072 ;;		_gsm_init
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text40
  8077  012BF2                     __ptext40:
  8078                           	opt stack 0
  8079  012BF2                     _gsm_txAT:
  8080                           	opt stack 25
  8081                           
  8082                           ;gsm.c: 47: gsm_transmit('A');
  8083                           
  8084                           ;incstack = 0
  8085  012BF2  0E41               	movlw	65
  8086  012BF4  EC00  F096         	call	_gsm_transmit
  8087                           
  8088                           ;gsm.c: 48: gsm_transmit('T');
  8089  012BF8  0E54               	movlw	84
  8090  012BFA  EC00  F096         	call	_gsm_transmit
  8091  012BFE  0012               	return		;funcret
  8092  012C00                     __end_of_gsm_txAT:
  8093                           	opt stack 0
  8094                           tblptru	equ	0xFF8
  8095                           tblptrh	equ	0xFF7
  8096                           tblptrl	equ	0xFF6
  8097                           tablat	equ	0xFF5
  8098                           prodh	equ	0xFF4
  8099                           prodl	equ	0xFF3
  8100                           postinc0	equ	0xFEE
  8101                           wreg	equ	0xFE8
  8102                           indf2	equ	0xFDF
  8103                           postinc2	equ	0xFDE
  8104                           fsr2h	equ	0xFDA
  8105                           fsr2l	equ	0xFD9
  8106                           status	equ	0xFD8
  8107                           
  8108 ;; *************** function _gsm_transmit *****************
  8109 ;; Defined at:
  8110 ;;		line 26 in file "gsm.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  txbyte          1    wreg     unsigned char 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  txbyte          1   19[COMRAM] unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;Total ram usage:        1 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    3
  8131 ;; This function calls:
  8132 ;;		_EUSART2_Write
  8133 ;;		_gsm_waitx
  8134 ;; This function is called by:
  8135 ;;		_gsm_txAT
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text41
  8140  012C00                     __ptext41:
  8141                           	opt stack 0
  8142  012C00                     _gsm_transmit:
  8143                           	opt stack 25
  8144                           
  8145                           ;incstack = 0
  8146                           ;gsm_transmit@txbyte stored from wreg
  8147  012C00  6E1E               	movwf	gsm_transmit@txbyte,c
  8148                           
  8149                           ;gsm.c: 28: EUSART2_Write(txbyte);
  8150  012C02  501E               	movf	gsm_transmit@txbyte,w,c
  8151  012C04  EC07  F096         	call	_EUSART2_Write
  8152                           
  8153                           ;gsm.c: 29: gsm_waitx();
  8154  012C08  EC30  F096         	call	_gsm_waitx	;wreg free
  8155  012C0C  0012               	return		;funcret
  8156  012C0E                     __end_of_gsm_transmit:
  8157                           	opt stack 0
  8158                           tblptru	equ	0xFF8
  8159                           tblptrh	equ	0xFF7
  8160                           tblptrl	equ	0xFF6
  8161                           tablat	equ	0xFF5
  8162                           prodh	equ	0xFF4
  8163                           prodl	equ	0xFF3
  8164                           postinc0	equ	0xFEE
  8165                           wreg	equ	0xFE8
  8166                           indf2	equ	0xFDF
  8167                           postinc2	equ	0xFDE
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function _gsm_waitx *****************
  8173 ;; Defined at:
  8174 ;;		line 10 in file "gsm.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		None
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;Total ram usage:        0 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    2
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_gsm_transmit
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text42
  8203  012C60                     __ptext42:
  8204                           	opt stack 0
  8205  012C60                     _gsm_waitx:
  8206                           	opt stack 25
  8207                           
  8208                           ;gsm.c: 13: {
  8209                           
  8210                           ;gsm.c: 12: while(0 == PIR3bits.TX2IF)
  8211                           
  8212                           ;incstack = 0
  8213  012C60  010E               	movlb	14	; () banked
  8214  012C62  BDCD               	btfsc	205,6,b	;volatile
  8215  012C64  0012               	return	
  8216  012C66  D7FC               	goto	_gsm_waitx
  8217  012C68                     __end_of_gsm_waitx:
  8218                           	opt stack 0
  8219                           tblptru	equ	0xFF8
  8220                           tblptrh	equ	0xFF7
  8221                           tblptrl	equ	0xFF6
  8222                           tablat	equ	0xFF5
  8223                           prodh	equ	0xFF4
  8224                           prodl	equ	0xFF3
  8225                           postinc0	equ	0xFEE
  8226                           wreg	equ	0xFE8
  8227                           indf2	equ	0xFDF
  8228                           postinc2	equ	0xFDE
  8229                           fsr2h	equ	0xFDA
  8230                           fsr2l	equ	0xFD9
  8231                           status	equ	0xFD8
  8232                           
  8233 ;; *************** function _EUSART2_Write *****************
  8234 ;; Defined at:
  8235 ;;		line 93 in file "mcc_generated_files/eusart2.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  txData          1    wreg     unsigned char 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  txData          1   18[COMRAM] unsigned char 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      void 
  8242 ;; Registers used:
  8243 ;;		wreg
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8253 ;;Total ram usage:        1 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; Hardware stack levels required when called:    2
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_gsm_transmit
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           	psect	text43
  8264  012C0E                     __ptext43:
  8265                           	opt stack 0
  8266  012C0E                     _EUSART2_Write:
  8267                           	opt stack 25
  8268                           
  8269                           ; BSR set to: 14
  8270                           ;incstack = 0
  8271                           ;EUSART2_Write@txData stored from wreg
  8272  012C0E  6E1D               	movwf	EUSART2_Write@txData,c
  8273  012C10                     
  8274                           ;eusart2.c: 96: {
  8275                           
  8276                           ;eusart2.c: 95: while(0 == PIR3bits.TX2IF)
  8277  012C10  010E               	movlb	14	; () banked
  8278  012C12  ADCD               	btfss	205,6,b	;volatile
  8279  012C14  D7FD               	goto	l10728
  8280                           
  8281                           ; BSR set to: 14
  8282                           ;eusart2.c: 97: }
  8283                           ;eusart2.c: 99: TX2REG = txData;
  8284                           
  8285                           ; BSR set to: 14
  8286  012C16  C01D  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  8287                           
  8288                           ; BSR set to: 14
  8289  012C1A  0012               	return		;funcret
  8290  012C1C                     __end_of_EUSART2_Write:
  8291                           	opt stack 0
  8292                           tblptru	equ	0xFF8
  8293                           tblptrh	equ	0xFF7
  8294                           tblptrl	equ	0xFF6
  8295                           tablat	equ	0xFF5
  8296                           prodh	equ	0xFF4
  8297                           prodl	equ	0xFF3
  8298                           postinc0	equ	0xFEE
  8299                           wreg	equ	0xFE8
  8300                           indf2	equ	0xFDF
  8301                           postinc2	equ	0xFDE
  8302                           fsr2h	equ	0xFDA
  8303                           fsr2l	equ	0xFD9
  8304                           status	equ	0xFD8
  8305                           
  8306 ;; *************** function _gsm_on *****************
  8307 ;; Defined at:
  8308 ;;		line 51 in file "gsm.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		None
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    2
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_gsm_init
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text44
  8337  012C9E                     __ptext44:
  8338                           	opt stack 0
  8339  012C9E                     _gsm_on:
  8340                           	opt stack 27
  8341                           
  8342                           ;gsm.c: 53: LATCbits.LC3 = 1;
  8343                           
  8344                           ; BSR set to: 14
  8345                           ;incstack = 0
  8346  012C9E  8685               	bsf	3973,3,c	;volatile
  8347  012CA0  0012               	return		;funcret
  8348  012CA2                     __end_of_gsm_on:
  8349                           	opt stack 0
  8350                           tblptru	equ	0xFF8
  8351                           tblptrh	equ	0xFF7
  8352                           tblptrl	equ	0xFF6
  8353                           tablat	equ	0xFF5
  8354                           prodh	equ	0xFF4
  8355                           prodl	equ	0xFF3
  8356                           postinc0	equ	0xFEE
  8357                           wreg	equ	0xFE8
  8358                           indf2	equ	0xFDF
  8359                           postinc2	equ	0xFDE
  8360                           fsr2h	equ	0xFDA
  8361                           fsr2l	equ	0xFD9
  8362                           status	equ	0xFD8
  8363                           
  8364 ;; *************** function _EUSART2_Read *****************
  8365 ;; Defined at:
  8366 ;;		line 75 in file "mcc_generated_files/eusart2.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;		None
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      unsigned char 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;Total ram usage:        0 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    2
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_gsm_init
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text45
  8395  012BC4                     __ptext45:
  8396                           	opt stack 0
  8397  012BC4                     _EUSART2_Read:
  8398                           	opt stack 27
  8399                           
  8400                           ;eusart2.c: 78: {
  8401                           
  8402                           ;eusart2.c: 77: while(!PIR3bits.RC2IF)
  8403                           
  8404                           ;incstack = 0
  8405  012BC4  010E               	movlb	14	; () banked
  8406  012BC6  AFCD               	btfss	205,7,b	;volatile
  8407  012BC8  D7FD               	goto	_EUSART2_Read
  8408                           
  8409                           ; BSR set to: 14
  8410                           ;eusart2.c: 79: }
  8411                           ;eusart2.c: 82: if(1 == RC2STAbits.OERR)
  8412  012BCA  A39D               	btfss	157,1,b	;volatile
  8413  012BCC  D002               	goto	l612
  8414                           
  8415                           ; BSR set to: 14
  8416                           ;eusart2.c: 83: {
  8417                           ;eusart2.c: 86: RC2STAbits.CREN = 0;
  8418  012BCE  999D               	bcf	157,4,b	;volatile
  8419                           
  8420                           ;eusart2.c: 87: RC2STAbits.CREN = 1;
  8421  012BD0  899D               	bsf	157,4,b	;volatile
  8422  012BD2                     l612:
  8423                           
  8424                           ; BSR set to: 14
  8425                           ;eusart2.c: 88: }
  8426                           ;eusart2.c: 90: return RC2REG;
  8427                           
  8428                           ; BSR set to: 14
  8429  012BD2  5199               	movf	153,w,b	;volatile
  8430  012BD4  0012               	return	
  8431  012BD6                     __end_of_EUSART2_Read:
  8432                           	opt stack 0
  8433                           tblptru	equ	0xFF8
  8434                           tblptrh	equ	0xFF7
  8435                           tblptrl	equ	0xFF6
  8436                           tablat	equ	0xFF5
  8437                           prodh	equ	0xFF4
  8438                           prodl	equ	0xFF3
  8439                           postinc0	equ	0xFEE
  8440                           wreg	equ	0xFE8
  8441                           indf2	equ	0xFDF
  8442                           postinc2	equ	0xFDE
  8443                           fsr2h	equ	0xFDA
  8444                           fsr2l	equ	0xFD9
  8445                           status	equ	0xFD8
  8446                           
  8447 ;; *************** function _enter_service *****************
  8448 ;; Defined at:
  8449 ;;		line 215 in file "main.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;		None
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;Total ram usage:        0 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:   12
  8470 ;; This function calls:
  8471 ;;		_Audit
  8472 ;;		_Clear_cred
  8473 ;;		_Hopper_coin
  8474 ;;		_Sensor_set
  8475 ;;		_Vend_setup
  8476 ;;		_butindb
  8477 ;;		_hopper_test
  8478 ;;		_lcd_string
  8479 ;;		_mdb_unlock
  8480 ;;		_price_set
  8481 ;;		_set_notes
  8482 ;; This function is called by:
  8483 ;;		_main
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text46
  8488  011650                     __ptext46:
  8489                           	opt stack 0
  8490  011650                     _enter_service:
  8491                           	opt stack 18
  8492                           
  8493                           ;main.c: 217: mdb_unlock();
  8494                           
  8495                           ; BSR set to: 14
  8496                           ;incstack = 0
  8497  011650  ECA0  F088         	call	_mdb_unlock	;wreg free
  8498                           
  8499                           ;main.c: 218: lcd_string(servmsg, line1);
  8500  011654  0E59               	movlw	low _servmsg
  8501  011656  6E24               	movwf	lcd_string@lcdstring,c
  8502  011658  0EFC               	movlw	high _servmsg
  8503  01165A  6E25               	movwf	lcd_string@lcdstring+1,c
  8504  01165C  0E4A               	movlw	low _line1
  8505  01165E  6EF6               	movwf	tblptrl,c
  8506  011660                     	if	1	;There is more than 1 active tblptr byte
  8507  011660  0EFC               	movlw	high _line1
  8508  011662  6EF7               	movwf	tblptrh,c
  8509  011664                     	endif
  8510  011664                     	if	1	;There are 3 active tblptr bytes
  8511  011664  0E00               	movlw	low (_line1 shr (0+16))
  8512  011666  6EF8               	movwf	tblptru,c
  8513  011668                     	endif
  8514  011668  0008               	tblrd		*
  8515  01166A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8516  01166E  EC78  F08A         	call	_lcd_string	;wreg free
  8517                           
  8518                           ;main.c: 221: while(venflags.service)
  8519  011672  D03C               	goto	l1122
  8520  011674                     
  8521                           ;main.c: 222: {
  8522                           ;main.c: 223: buttons = butindb();
  8523  011674  ECD5  F092         	call	_butindb	;wreg free
  8524  011678  6E38               	movwf	_buttons,c	;volatile
  8525                           
  8526                           ;main.c: 224: switch(buttons)
  8527  01167A  D01C               	goto	l1120
  8528  01167C  EC00  F080         	call	_Audit	;wreg free
  8529                           
  8530                           ;main.c: 227: break;
  8531  011680  D035               	goto	l1122
  8532  011682  ECCA  F087         	call	_Sensor_set	;wreg free
  8533                           
  8534                           ;main.c: 229: break;
  8535  011686  D032               	goto	l1122
  8536  011688  EC35  F088         	call	_Hopper_coin	;wreg free
  8537                           
  8538                           ;main.c: 231: break;
  8539  01168C  D02F               	goto	l1122
  8540  01168E  ECFC  F085         	call	_set_notes	;wreg free
  8541                           
  8542                           ;main.c: 233: break;
  8543  011692  D02C               	goto	l1122
  8544  011694  EC79  F08B         	call	_Clear_cred	;wreg free
  8545                           
  8546                           ;main.c: 235: venflags.service = 0;
  8547  011698  9E2D               	bcf	_venflags,7,c
  8548  01169A  00FF               	reset		;# 
  8549  01169C  ECEF  F08D         	call	_price_set	;wreg free
  8550                           
  8551                           ;main.c: 238: break;
  8552  0116A0  D025               	goto	l1122
  8553  0116A2  ECF7  F083         	call	_Vend_setup	;wreg free
  8554                           
  8555                           ;main.c: 240: break;
  8556  0116A6  D022               	goto	l1122
  8557  0116A8                     l1129:
  8558  0116A8  9E2D               	bcf	_venflags,7,c
  8559  0116AA  00FF               	reset		;# 
  8560                           
  8561                           ;main.c: 243: break;
  8562  0116AC  D01F               	goto	l1122
  8563  0116AE  ECC5  F095         	call	_hopper_test	;wreg free
  8564                           
  8565                           ;main.c: 245: }
  8566  0116B2  D01C               	goto	l1122
  8567  0116B4                     l1120:
  8568  0116B4  5038               	movf	_buttons,w,c	;volatile
  8569                           
  8570                           ; Switch size 1, requested type "space"
  8571                           ; Number of cases is 9, Range of values is 1 to 128
  8572                           ; switch strategies available:
  8573                           ; Name         Instructions Cycles
  8574                           ; simple_byte           28    15 (average)
  8575                           ;	Chosen strategy is simple_byte
  8576  0116B6  0A01               	xorlw	1	; case 1
  8577  0116B8  B4D8               	btfsc	status,2,c
  8578  0116BA  D7E0               	goto	l1121
  8579  0116BC  0A03               	xorlw	3	; case 2
  8580  0116BE  B4D8               	btfsc	status,2,c
  8581  0116C0  D7E0               	goto	l1123
  8582  0116C2  0A01               	xorlw	1	; case 3
  8583  0116C4  B4D8               	btfsc	status,2,c
  8584  0116C6  D7F3               	goto	l1130
  8585  0116C8  0A07               	xorlw	7	; case 4
  8586  0116CA  B4D8               	btfsc	status,2,c
  8587  0116CC  D7DD               	goto	l1124
  8588  0116CE  0A0C               	xorlw	12	; case 8
  8589  0116D0  B4D8               	btfsc	status,2,c
  8590  0116D2  D7DD               	goto	l1125
  8591  0116D4  0A18               	xorlw	24	; case 16
  8592  0116D6  B4D8               	btfsc	status,2,c
  8593  0116D8  D7DD               	goto	l1126
  8594  0116DA  0A30               	xorlw	48	; case 32
  8595  0116DC  B4D8               	btfsc	status,2,c
  8596  0116DE  D7DE               	goto	l1127
  8597  0116E0  0A60               	xorlw	96	; case 64
  8598  0116E2  B4D8               	btfsc	status,2,c
  8599  0116E4  D7DE               	goto	l1128
  8600  0116E6  0AC0               	xorlw	192	; case 128
  8601  0116E8  B4D8               	btfsc	status,2,c
  8602  0116EA  D7DE               	goto	l1129
  8603  0116EC                     l1122:
  8604  0116EC  AE2D               	btfss	_venflags,7,c
  8605  0116EE  0012               	return	
  8606  0116F0  D7C1               	goto	l1119
  8607  0116F2                     __end_of_enter_service:
  8608                           	opt stack 0
  8609                           tblptru	equ	0xFF8
  8610                           tblptrh	equ	0xFF7
  8611                           tblptrl	equ	0xFF6
  8612                           tablat	equ	0xFF5
  8613                           prodh	equ	0xFF4
  8614                           prodl	equ	0xFF3
  8615                           postinc0	equ	0xFEE
  8616                           wreg	equ	0xFE8
  8617                           indf2	equ	0xFDF
  8618                           postinc2	equ	0xFDE
  8619                           fsr2h	equ	0xFDA
  8620                           fsr2l	equ	0xFD9
  8621                           status	equ	0xFD8
  8622                           
  8623 ;; *************** function _set_notes *****************
  8624 ;; Defined at:
  8625 ;;		line 60 in file "mdb.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;		None
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:   10
  8646 ;; This function calls:
  8647 ;;		_butindb
  8648 ;;		_displ_note
  8649 ;;		_enable_notes
  8650 ;;		_lcd_string
  8651 ;; This function is called by:
  8652 ;;		_enter_service
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           	psect	text47
  8657  010BF8                     __ptext47:
  8658                           	opt stack 0
  8659  010BF8                     _set_notes:
  8660                           	opt stack 19
  8661                           
  8662                           ;mdb.c: 62: lcd_string(setnotes, line1);
  8663                           
  8664                           ;incstack = 0
  8665  010BF8  0EA9               	movlw	low _setnotes
  8666  010BFA  6E24               	movwf	lcd_string@lcdstring,c
  8667  010BFC  0EFC               	movlw	high _setnotes
  8668  010BFE  6E25               	movwf	lcd_string@lcdstring+1,c
  8669  010C00  0E4A               	movlw	low _line1
  8670  010C02  6EF6               	movwf	tblptrl,c
  8671  010C04                     	if	1	;There is more than 1 active tblptr byte
  8672  010C04  0EFC               	movlw	high _line1
  8673  010C06  6EF7               	movwf	tblptrh,c
  8674  010C08                     	endif
  8675  010C08                     	if	1	;There are 3 active tblptr bytes
  8676  010C08  0E00               	movlw	low (_line1 shr (0+16))
  8677  010C0A  6EF8               	movwf	tblptru,c
  8678  010C0C                     	endif
  8679  010C0C  0008               	tblrd		*
  8680  010C0E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8681  010C12  EC78  F08A         	call	_lcd_string	;wreg free
  8682                           
  8683                           ;mdb.c: 63: mdbflags.noteset = 1;
  8684  010C16  8A3F               	bsf	_mdbflags,5,c
  8685                           
  8686                           ;mdb.c: 64: mdbflags.endis = 1;
  8687  010C18  8C3F               	bsf	_mdbflags,6,c
  8688                           
  8689                           ;mdb.c: 65: while(mdbflags.noteset)
  8690  010C1A  D064               	goto	l2911
  8691  010C1C                     
  8692                           ;mdb.c: 66: {
  8693                           ;mdb.c: 67: buttons = butindb();
  8694  010C1C  ECD5  F092         	call	_butindb	;wreg free
  8695  010C20  6E38               	movwf	_buttons,c	;volatile
  8696                           
  8697                           ;mdb.c: 68: notenum = buttons;
  8698  010C22  C038  F04D         	movff	_buttons,_notenum	;volatile
  8699                           
  8700                           ;mdb.c: 69: switch(buttons)
  8701  010C26  D048               	goto	l2913
  8702  010C28  0EB1               	movlw	low _tenrand
  8703  010C2A  6E29               	movwf	displ_note@notestring,c
  8704  010C2C  0EFF               	movlw	high _tenrand
  8705  010C2E  6E2A               	movwf	displ_note@notestring+1,c
  8706  010C30  EC89  F093         	call	_displ_note	;wreg free
  8707  010C34  6E43               	movwf	_dspposition,c
  8708                           
  8709                           ;mdb.c: 73: enable_notes(0x01);
  8710  010C36  0E01               	movlw	1
  8711  010C38  EC6D  F08E         	call	_enable_notes
  8712                           
  8713                           ;mdb.c: 74: break;
  8714  010C3C  D050               	goto	l2915
  8715  010C3E  0EE3               	movlw	low _twentyrand
  8716  010C40  6E29               	movwf	displ_note@notestring,c
  8717  010C42  0EFF               	movlw	high _twentyrand
  8718  010C44  6E2A               	movwf	displ_note@notestring+1,c
  8719  010C46  EC89  F093         	call	_displ_note	;wreg free
  8720  010C4A  6E43               	movwf	_dspposition,c
  8721                           
  8722                           ;mdb.c: 77: enable_notes(0x02);
  8723  010C4C  0E02               	movlw	2
  8724  010C4E  EC6D  F08E         	call	_enable_notes
  8725                           
  8726                           ;mdb.c: 78: break;
  8727  010C52  D045               	goto	l2915
  8728  010C54  0EDB               	movlw	low _fiftyrand
  8729  010C56  6E29               	movwf	displ_note@notestring,c
  8730  010C58  0EFF               	movlw	high _fiftyrand
  8731  010C5A  6E2A               	movwf	displ_note@notestring+1,c
  8732  010C5C  EC89  F093         	call	_displ_note	;wreg free
  8733  010C60  6E43               	movwf	_dspposition,c
  8734                           
  8735                           ;mdb.c: 81: enable_notes(0x04);
  8736  010C62  0E04               	movlw	4
  8737  010C64  EC6D  F08E         	call	_enable_notes
  8738                           
  8739                           ;mdb.c: 82: break;
  8740  010C68  D03A               	goto	l2915
  8741  010C6A  0ED3               	movlw	low _hundredrand
  8742  010C6C  6E29               	movwf	displ_note@notestring,c
  8743  010C6E  0EFF               	movlw	high _hundredrand
  8744  010C70  6E2A               	movwf	displ_note@notestring+1,c
  8745  010C72  EC89  F093         	call	_displ_note	;wreg free
  8746  010C76  6E43               	movwf	_dspposition,c
  8747                           
  8748                           ;mdb.c: 85: enable_notes(0x08);
  8749  010C78  0E08               	movlw	8
  8750  010C7A  EC6D  F08E         	call	_enable_notes
  8751                           
  8752                           ;mdb.c: 86: break;
  8753  010C7E  D02F               	goto	l2915
  8754  010C80  0ECB               	movlw	low _twohundredrand
  8755  010C82  6E29               	movwf	displ_note@notestring,c
  8756  010C84  0EFF               	movlw	high _twohundredrand
  8757  010C86  6E2A               	movwf	displ_note@notestring+1,c
  8758  010C88  EC89  F093         	call	_displ_note	;wreg free
  8759  010C8C  6E43               	movwf	_dspposition,c
  8760                           
  8761                           ;mdb.c: 89: enable_notes(0x10);
  8762  010C8E  0E10               	movlw	16
  8763  010C90  EC6D  F08E         	call	_enable_notes
  8764                           
  8765                           ;mdb.c: 90: break;
  8766  010C94  D024               	goto	l2915
  8767  010C96  0E59               	movlw	low _servmsg
  8768  010C98  6E24               	movwf	lcd_string@lcdstring,c
  8769  010C9A  0EFC               	movlw	high _servmsg
  8770  010C9C  6E25               	movwf	lcd_string@lcdstring+1,c
  8771  010C9E  0E4A               	movlw	low _line1
  8772  010CA0  6EF6               	movwf	tblptrl,c
  8773  010CA2                     	if	1	;There is more than 1 active tblptr byte
  8774  010CA2  0EFC               	movlw	high _line1
  8775  010CA4  6EF7               	movwf	tblptrh,c
  8776  010CA6                     	endif
  8777  010CA6                     	if	1	;There are 3 active tblptr bytes
  8778  010CA6  0E00               	movlw	low (_line1 shr (0+16))
  8779  010CA8  6EF8               	movwf	tblptru,c
  8780  010CAA                     	endif
  8781  010CAA  0008               	tblrd		*
  8782  010CAC  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8783  010CB0  EC78  F08A         	call	_lcd_string	;wreg free
  8784                           
  8785                           ;mdb.c: 93: mdbflags.noteset = 0;
  8786  010CB4  9A3F               	bcf	_mdbflags,5,c
  8787                           
  8788                           ;mdb.c: 95: }
  8789                           
  8790                           ;mdb.c: 94: default : break;
  8791  010CB6  D013               	goto	l2915
  8792  010CB8                     l2913:
  8793  010CB8  5038               	movf	_buttons,w,c	;volatile
  8794                           
  8795                           ; Switch size 1, requested type "space"
  8796                           ; Number of cases is 6, Range of values is 1 to 128
  8797                           ; switch strategies available:
  8798                           ; Name         Instructions Cycles
  8799                           ; simple_byte           19    10 (average)
  8800                           ;	Chosen strategy is simple_byte
  8801  010CBA  0A01               	xorlw	1	; case 1
  8802  010CBC  B4D8               	btfsc	status,2,c
  8803  010CBE  D7B4               	goto	l2914
  8804  010CC0  0A03               	xorlw	3	; case 2
  8805  010CC2  B4D8               	btfsc	status,2,c
  8806  010CC4  D7BC               	goto	l2916
  8807  010CC6  0A06               	xorlw	6	; case 4
  8808  010CC8  B4D8               	btfsc	status,2,c
  8809  010CCA  D7C4               	goto	l2917
  8810  010CCC  0A0C               	xorlw	12	; case 8
  8811  010CCE  B4D8               	btfsc	status,2,c
  8812  010CD0  D7CC               	goto	l2918
  8813  010CD2  0A18               	xorlw	24	; case 16
  8814  010CD4  B4D8               	btfsc	status,2,c
  8815  010CD6  D7D4               	goto	l2919
  8816  010CD8  0A90               	xorlw	144	; case 128
  8817  010CDA  B4D8               	btfsc	status,2,c
  8818  010CDC  D7DC               	goto	l2920
  8819  010CDE                     l2915:
  8820                           
  8821                           ;mdb.c: 96: ((uint8_t*) &noteen)[0] = noteen_byte;
  8822  010CDE  C03D  F03E         	movff	_noteen_byte,_noteen	;volatile
  8823  010CE2  F000               	nop		;# 
  8824  010CE4                     l2911:
  8825  010CE4  AA3F               	btfss	_mdbflags,5,c
  8826  010CE6  0012               	return	
  8827  010CE8  D799               	goto	l2912
  8828  010CEA                     __end_of_set_notes:
  8829                           	opt stack 0
  8830                           tblptru	equ	0xFF8
  8831                           tblptrh	equ	0xFF7
  8832                           tblptrl	equ	0xFF6
  8833                           tablat	equ	0xFF5
  8834                           prodh	equ	0xFF4
  8835                           prodl	equ	0xFF3
  8836                           postinc0	equ	0xFEE
  8837                           wreg	equ	0xFE8
  8838                           indf2	equ	0xFDF
  8839                           postinc2	equ	0xFDE
  8840                           fsr2h	equ	0xFDA
  8841                           fsr2l	equ	0xFD9
  8842                           status	equ	0xFD8
  8843                           
  8844 ;; *************** function _enable_notes *****************
  8845 ;; Defined at:
  8846 ;;		line 101 in file "mdb.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  notenum         1    wreg     unsigned char 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  notenum         1   32[COMRAM] unsigned char 
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;Total ram usage:        1 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:    9
  8867 ;; This function calls:
  8868 ;;		_butindb
  8869 ;;		_displ_nendis
  8870 ;;		_lcd_string
  8871 ;;		_save_notes
  8872 ;; This function is called by:
  8873 ;;		_set_notes
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text48
  8878  011CDA                     __ptext48:
  8879                           	opt stack 0
  8880  011CDA                     _enable_notes:
  8881                           	opt stack 19
  8882                           
  8883                           ;incstack = 0
  8884                           ;enable_notes@notenum stored from wreg
  8885  011CDA  6E2B               	movwf	enable_notes@notenum,c
  8886                           
  8887                           ;mdb.c: 103: mdbflags.endis = 1;
  8888  011CDC  8C3F               	bsf	_mdbflags,6,c
  8889                           
  8890                           ;mdb.c: 104: displ_nendis(notenum);
  8891  011CDE  502B               	movf	enable_notes@notenum,w,c
  8892  011CE0  EC5F  F094         	call	_displ_nendis
  8893                           
  8894                           ;mdb.c: 105: while(mdbflags.endis)
  8895  011CE4  D034               	goto	l2930
  8896  011CE6                     
  8897                           ;mdb.c: 106: {
  8898                           ;mdb.c: 107: buttons = butindb();
  8899  011CE6  ECD5  F092         	call	_butindb	;wreg free
  8900  011CEA  6E38               	movwf	_buttons,c	;volatile
  8901                           
  8902                           ;mdb.c: 108: switch(buttons)
  8903  011CEC  D026               	goto	l2928
  8904  011CEE  503D               	movf	_noteen_byte,w,c	;volatile
  8905  011CF0  102B               	iorwf	enable_notes@notenum,w,c
  8906  011CF2  6E3D               	movwf	_noteen_byte,c	;volatile
  8907                           
  8908                           ;mdb.c: 111: save_notes();
  8909  011CF4  ECFD  F094         	call	_save_notes	;wreg free
  8910                           
  8911                           ;mdb.c: 112: displ_nendis(notenum);
  8912  011CF8  502B               	movf	enable_notes@notenum,w,c
  8913  011CFA  EC5F  F094         	call	_displ_nendis
  8914                           
  8915                           ;mdb.c: 113: break;
  8916  011CFE  D027               	goto	l2930
  8917  011D00  502B               	movf	enable_notes@notenum,w,c
  8918  011D02  0AFF               	xorlw	255
  8919  011D04  143D               	andwf	_noteen_byte,w,c	;volatile
  8920  011D06  6E3D               	movwf	_noteen_byte,c	;volatile
  8921                           
  8922                           ;mdb.c: 115: save_notes();
  8923  011D08  ECFD  F094         	call	_save_notes	;wreg free
  8924                           
  8925                           ;mdb.c: 116: displ_nendis(notenum);
  8926  011D0C  502B               	movf	enable_notes@notenum,w,c
  8927  011D0E  EC5F  F094         	call	_displ_nendis
  8928                           
  8929                           ;mdb.c: 117: break;
  8930  011D12  D01D               	goto	l2930
  8931  011D14                     l2932:
  8932  011D14  9C3F               	bcf	_mdbflags,6,c
  8933                           
  8934                           ;mdb.c: 119: lcd_string(setnotes, line1);
  8935  011D16  0EA9               	movlw	low _setnotes
  8936  011D18  6E24               	movwf	lcd_string@lcdstring,c
  8937  011D1A  0EFC               	movlw	high _setnotes
  8938  011D1C  6E25               	movwf	lcd_string@lcdstring+1,c
  8939  011D1E  0E4A               	movlw	low _line1
  8940  011D20  6EF6               	movwf	tblptrl,c
  8941  011D22                     	if	1	;There is more than 1 active tblptr byte
  8942  011D22  0EFC               	movlw	high _line1
  8943  011D24  6EF7               	movwf	tblptrh,c
  8944  011D26                     	endif
  8945  011D26                     	if	1	;There are 3 active tblptr bytes
  8946  011D26  0E00               	movlw	low (_line1 shr (0+16))
  8947  011D28  6EF8               	movwf	tblptru,c
  8948  011D2A                     	endif
  8949  011D2A  0008               	tblrd		*
  8950  011D2C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8951  011D30  EC78  F08A         	call	_lcd_string	;wreg free
  8952                           
  8953                           ;mdb.c: 120: buttons = 0;
  8954  011D34  0E00               	movlw	0
  8955  011D36  6E38               	movwf	_buttons,c	;volatile
  8956                           
  8957                           ;mdb.c: 122: }
  8958                           
  8959                           ;mdb.c: 121: default : break;
  8960  011D38  D00A               	goto	l2930
  8961  011D3A                     l2928:
  8962  011D3A  5038               	movf	_buttons,w,c	;volatile
  8963                           
  8964                           ; Switch size 1, requested type "space"
  8965                           ; Number of cases is 3, Range of values is 1 to 128
  8966                           ; switch strategies available:
  8967                           ; Name         Instructions Cycles
  8968                           ; simple_byte           10     6 (average)
  8969                           ;	Chosen strategy is simple_byte
  8970  011D3C  0A01               	xorlw	1	; case 1
  8971  011D3E  B4D8               	btfsc	status,2,c
  8972  011D40  D7D6               	goto	l2929
  8973  011D42  0A03               	xorlw	3	; case 2
  8974  011D44  B4D8               	btfsc	status,2,c
  8975  011D46  D7DC               	goto	l2931
  8976  011D48  0A82               	xorlw	130	; case 128
  8977  011D4A  B4D8               	btfsc	status,2,c
  8978  011D4C  D7E3               	goto	l2932
  8979  011D4E                     l2930:
  8980  011D4E  AC3F               	btfss	_mdbflags,6,c
  8981  011D50  0012               	return	
  8982  011D52  D7C9               	goto	l2927
  8983  011D54                     __end_of_enable_notes:
  8984                           	opt stack 0
  8985                           tblptru	equ	0xFF8
  8986                           tblptrh	equ	0xFF7
  8987                           tblptrl	equ	0xFF6
  8988                           tablat	equ	0xFF5
  8989                           prodh	equ	0xFF4
  8990                           prodl	equ	0xFF3
  8991                           postinc0	equ	0xFEE
  8992                           wreg	equ	0xFE8
  8993                           indf2	equ	0xFDF
  8994                           postinc2	equ	0xFDE
  8995                           fsr2h	equ	0xFDA
  8996                           fsr2l	equ	0xFD9
  8997                           status	equ	0xFD8
  8998                           
  8999 ;; *************** function _save_notes *****************
  9000 ;; Defined at:
  9001 ;;		line 132 in file "mdb.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9019 ;;Total ram usage:        0 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; Hardware stack levels required when called:    3
  9022 ;; This function calls:
  9023 ;;		_DATAEE_WriteByte
  9024 ;; This function is called by:
  9025 ;;		_enable_notes
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text49
  9030  0129FA                     __ptext49:
  9031                           	opt stack 0
  9032  0129FA                     _save_notes:
  9033                           	opt stack 24
  9034                           
  9035                           ;mdb.c: 134: DATAEE_WriteByte(notebits, noteen_byte);
  9036                           
  9037                           ;incstack = 0
  9038  0129FA  0E0F               	movlw	low _notebits
  9039  0129FC  6EF6               	movwf	tblptrl,c
  9040  0129FE                     	if	1	;There is more than 1 active tblptr byte
  9041  0129FE  0EFC               	movlw	high _notebits
  9042  012A00  6EF7               	movwf	tblptrh,c
  9043  012A02                     	endif
  9044  012A02                     	if	1	;There are 3 active tblptr bytes
  9045  012A02  0E00               	movlw	low (_notebits shr (0+16))
  9046  012A04  6EF8               	movwf	tblptru,c
  9047  012A06                     	endif
  9048  012A06  0009               	tblrd		*+
  9049  012A08  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9050  012A0C  000A               	tblrd		*-
  9051  012A0E  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9052  012A12  C03D  F01F         	movff	_noteen_byte,DATAEE_WriteByte@bData	;volatile
  9053  012A16  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  9054  012A1A  0012               	return		;funcret
  9055  012A1C                     __end_of_save_notes:
  9056                           	opt stack 0
  9057                           tblptru	equ	0xFF8
  9058                           tblptrh	equ	0xFF7
  9059                           tblptrl	equ	0xFF6
  9060                           tablat	equ	0xFF5
  9061                           prodh	equ	0xFF4
  9062                           prodl	equ	0xFF3
  9063                           postinc0	equ	0xFEE
  9064                           wreg	equ	0xFE8
  9065                           indf2	equ	0xFDF
  9066                           postinc2	equ	0xFDE
  9067                           fsr2h	equ	0xFDA
  9068                           fsr2l	equ	0xFD9
  9069                           status	equ	0xFD8
  9070                           
  9071 ;; *************** function _displ_nendis *****************
  9072 ;; Defined at:
  9073 ;;		line 114 in file "lcd.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  note2disp       1    wreg     unsigned char 
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  note2disp       1   30[COMRAM] unsigned char 
  9078 ;;  x               1   31[COMRAM] unsigned char 
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;Total ram usage:        2 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    8
  9095 ;; This function calls:
  9096 ;;		_lcd_string
  9097 ;; This function is called by:
  9098 ;;		_enable_notes
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text50
  9103  0128BE                     __ptext50:
  9104                           	opt stack 0
  9105  0128BE                     _displ_nendis:
  9106                           	opt stack 19
  9107                           
  9108                           ;incstack = 0
  9109                           ;displ_nendis@note2disp stored from wreg
  9110  0128BE  6E29               	movwf	displ_nendis@note2disp,c
  9111                           
  9112                           ;lcd.c: 116: uint8_t x = note2disp & noteen_byte;
  9113  0128C0  5029               	movf	displ_nendis@note2disp,w,c
  9114  0128C2  143D               	andwf	_noteen_byte,w,c	;volatile
  9115  0128C4  6E2A               	movwf	displ_nendis@x,c
  9116                           
  9117                           ;lcd.c: 117: if(x != 0x00)
  9118  0128C6  502A               	movf	displ_nendis@x,w,c
  9119  0128C8  B4D8               	btfsc	status,2,c
  9120  0128CA  D009               	goto	l1593
  9121                           
  9122                           ;lcd.c: 118: {
  9123                           ;lcd.c: 119: lcd_string(enabled, dspposition);
  9124  0128CC  0EA7               	movlw	low _enabled
  9125  0128CE  6E24               	movwf	lcd_string@lcdstring,c
  9126  0128D0  0EFF               	movlw	high _enabled
  9127  0128D2  6E25               	movwf	lcd_string@lcdstring+1,c
  9128  0128D4  C043  F026         	movff	_dspposition,lcd_string@lcdline
  9129  0128D8  EC78  F08A         	call	_lcd_string	;wreg free
  9130                           
  9131                           ;lcd.c: 120: }
  9132  0128DC  0012               	return	
  9133  0128DE                     l1593:
  9134                           
  9135                           ;lcd.c: 121: else
  9136                           ;lcd.c: 122: {
  9137                           ;lcd.c: 123: lcd_string(disabled, dspposition);
  9138  0128DE  0E9D               	movlw	low _disabled
  9139  0128E0  6E24               	movwf	lcd_string@lcdstring,c
  9140  0128E2  0EFF               	movlw	high _disabled
  9141  0128E4  6E25               	movwf	lcd_string@lcdstring+1,c
  9142  0128E6  C043  F026         	movff	_dspposition,lcd_string@lcdline
  9143  0128EA  EC78  F08A         	call	_lcd_string	;wreg free
  9144  0128EE  0012               	return	
  9145  0128F0                     __end_of_displ_nendis:
  9146                           	opt stack 0
  9147                           tblptru	equ	0xFF8
  9148                           tblptrh	equ	0xFF7
  9149                           tblptrl	equ	0xFF6
  9150                           tablat	equ	0xFF5
  9151                           prodh	equ	0xFF4
  9152                           prodl	equ	0xFF3
  9153                           postinc0	equ	0xFEE
  9154                           wreg	equ	0xFE8
  9155                           indf2	equ	0xFDF
  9156                           postinc2	equ	0xFDE
  9157                           fsr2h	equ	0xFDA
  9158                           fsr2l	equ	0xFD9
  9159                           status	equ	0xFD8
  9160                           
  9161 ;; *************** function _displ_note *****************
  9162 ;; Defined at:
  9163 ;;		line 107 in file "lcd.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;  notestring      2   30[COMRAM] PTR unsigned char 
  9166 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  9167 ;;		 -> tenrand(9), 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;		None
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      unsigned char 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;Total ram usage:        2 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:    8
  9186 ;; This function calls:
  9187 ;;		_lcd_string
  9188 ;;		_lcd_write
  9189 ;; This function is called by:
  9190 ;;		_set_notes
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           	psect	text51
  9195  012712                     __ptext51:
  9196                           	opt stack 0
  9197  012712                     _displ_note:
  9198                           	opt stack 20
  9199                           
  9200                           ;lcd.c: 109: lcd_write(dispclr);
  9201                           
  9202                           ;incstack = 0
  9203  012712  0E54               	movlw	low _dispclr
  9204  012714  6EF6               	movwf	tblptrl,c
  9205  012716                     	if	1	;There is more than 1 active tblptr byte
  9206  012716  0EFC               	movlw	high _dispclr
  9207  012718  6EF7               	movwf	tblptrh,c
  9208  01271A                     	endif
  9209  01271A                     	if	1	;There are 3 active tblptr bytes
  9210  01271A  0E00               	movlw	low (_dispclr shr (0+16))
  9211  01271C  6EF8               	movwf	tblptru,c
  9212  01271E                     	endif
  9213  01271E  0008               	tblrd		*
  9214  012720  50F5               	movf	tablat,w,c
  9215  012722  EC78  F094         	call	_lcd_write
  9216                           
  9217                           ;lcd.c: 110: lcd_string(notestring, line2);
  9218  012726  C029  F024         	movff	displ_note@notestring,lcd_string@lcdstring
  9219  01272A  C02A  F025         	movff	displ_note@notestring+1,lcd_string@lcdstring+1
  9220  01272E  0E49               	movlw	low _line2
  9221  012730  6EF6               	movwf	tblptrl,c
  9222  012732                     	if	1	;There is more than 1 active tblptr byte
  9223  012732  0EFC               	movlw	high _line2
  9224  012734  6EF7               	movwf	tblptrh,c
  9225  012736                     	endif
  9226  012736                     	if	1	;There are 3 active tblptr bytes
  9227  012736  0E00               	movlw	low (_line2 shr (0+16))
  9228  012738  6EF8               	movwf	tblptru,c
  9229  01273A                     	endif
  9230  01273A  0008               	tblrd		*
  9231  01273C  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9232  012740  EC78  F08A         	call	_lcd_string	;wreg free
  9233                           
  9234                           ;lcd.c: 111: return bflag+2;
  9235  012744  5047               	movf	_bflag,w,c
  9236  012746  0F02               	addlw	2
  9237  012748  0012               	return	
  9238  01274A                     __end_of_displ_note:
  9239                           	opt stack 0
  9240                           tblptru	equ	0xFF8
  9241                           tblptrh	equ	0xFF7
  9242                           tblptrl	equ	0xFF6
  9243                           tablat	equ	0xFF5
  9244                           prodh	equ	0xFF4
  9245                           prodl	equ	0xFF3
  9246                           postinc0	equ	0xFEE
  9247                           wreg	equ	0xFE8
  9248                           indf2	equ	0xFDF
  9249                           postinc2	equ	0xFDE
  9250                           fsr2h	equ	0xFDA
  9251                           fsr2l	equ	0xFD9
  9252                           status	equ	0xFD8
  9253                           
  9254 ;; *************** function _price_set *****************
  9255 ;; Defined at:
  9256 ;;		line 359 in file "vend.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;		None
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;		None
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      void 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;Total ram usage:        0 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:   10
  9277 ;; This function calls:
  9278 ;;		_Read_Service
  9279 ;;		_butindb
  9280 ;;		_lcd_string
  9281 ;;		_set_price
  9282 ;; This function is called by:
  9283 ;;		_enter_service
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           	psect	text52
  9288  011BDE                     __ptext52:
  9289                           	opt stack 0
  9290  011BDE                     _price_set:
  9291                           	opt stack 19
  9292                           
  9293                           ;vend.c: 361: venflags.priceset = 1;
  9294                           
  9295                           ;incstack = 0
  9296  011BDE  802E               	bsf	_venflags+1,0,c
  9297                           
  9298                           ;vend.c: 362: lcd_string(pricesetmsg, line1);
  9299  011BE0  0E2A               	movlw	low _pricesetmsg
  9300  011BE2  6E24               	movwf	lcd_string@lcdstring,c
  9301  011BE4  0EFF               	movlw	high _pricesetmsg
  9302  011BE6  6E25               	movwf	lcd_string@lcdstring+1,c
  9303  011BE8  0E4A               	movlw	low _line1
  9304  011BEA  6EF6               	movwf	tblptrl,c
  9305  011BEC                     	if	1	;There is more than 1 active tblptr byte
  9306  011BEC  0EFC               	movlw	high _line1
  9307  011BEE  6EF7               	movwf	tblptrh,c
  9308  011BF0                     	endif
  9309  011BF0                     	if	1	;There are 3 active tblptr bytes
  9310  011BF0  0E00               	movlw	low (_line1 shr (0+16))
  9311  011BF2  6EF8               	movwf	tblptru,c
  9312  011BF4                     	endif
  9313  011BF4  0008               	tblrd		*
  9314  011BF6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9315  011BFA  EC78  F08A         	call	_lcd_string	;wreg free
  9316                           
  9317                           ;vend.c: 363: lcd_string(pricesetm2, line2);
  9318  011BFE  0E31               	movlw	low _pricesetm2
  9319  011C00  6E24               	movwf	lcd_string@lcdstring,c
  9320  011C02  0EFD               	movlw	high _pricesetm2
  9321  011C04  6E25               	movwf	lcd_string@lcdstring+1,c
  9322  011C06  0E49               	movlw	low _line2
  9323  011C08  6EF6               	movwf	tblptrl,c
  9324  011C0A                     	if	1	;There is more than 1 active tblptr byte
  9325  011C0A  0EFC               	movlw	high _line2
  9326  011C0C  6EF7               	movwf	tblptrh,c
  9327  011C0E                     	endif
  9328  011C0E                     	if	1	;There are 3 active tblptr bytes
  9329  011C0E  0E00               	movlw	low (_line2 shr (0+16))
  9330  011C10  6EF8               	movwf	tblptru,c
  9331  011C12                     	endif
  9332  011C12  0008               	tblrd		*
  9333  011C14  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9334  011C18  EC78  F08A         	call	_lcd_string	;wreg free
  9335                           
  9336                           ;vend.c: 364: while(venflags.priceset)
  9337  011C1C  D00E               	goto	l2269
  9338  011C1E                     
  9339                           ;vend.c: 365: {
  9340                           ;vend.c: 366: buttons = butindb();
  9341  011C1E  ECD5  F092         	call	_butindb	;wreg free
  9342  011C22  6E38               	movwf	_buttons,c	;volatile
  9343                           
  9344                           ;vend.c: 367: if(buttons != 0x00)
  9345  011C24  5038               	movf	_buttons,w,c	;volatile
  9346  011C26  B4D8               	btfsc	status,2,c
  9347  011C28  D003               	goto	l2268
  9348                           
  9349                           ;vend.c: 368: {
  9350                           ;vend.c: 369: set_price(buttons);
  9351  011C2A  5038               	movf	_buttons,w,c	;volatile
  9352  011C2C  EC6B  F083         	call	_set_price
  9353  011C30                     l2268:
  9354                           
  9355                           ;vend.c: 370: }
  9356                           ;vend.c: 371: if(Read_Service() == 0x00)
  9357  011C30  EC68  F095         	call	_Read_Service	;wreg free
  9358  011C34  0900               	iorlw	0
  9359  011C36  B4D8               	btfsc	status,2,c
  9360                           
  9361                           ;vend.c: 372: {
  9362                           ;vend.c: 373: venflags.priceset = 0;
  9363  011C38  902E               	bcf	_venflags+1,0,c
  9364  011C3A                     l2269:
  9365  011C3A  B02E               	btfsc	_venflags+1,0,c
  9366  011C3C  D7F0               	goto	l2267
  9367                           
  9368                           ;vend.c: 374: }
  9369                           ;vend.c: 375: }
  9370                           ;vend.c: 376: lcd_string(servmsg, line1);
  9371  011C3E  0E59               	movlw	low _servmsg
  9372  011C40  6E24               	movwf	lcd_string@lcdstring,c
  9373  011C42  0EFC               	movlw	high _servmsg
  9374  011C44  6E25               	movwf	lcd_string@lcdstring+1,c
  9375  011C46  0E4A               	movlw	low _line1
  9376  011C48  6EF6               	movwf	tblptrl,c
  9377  011C4A                     	if	1	;There is more than 1 active tblptr byte
  9378  011C4A  0EFC               	movlw	high _line1
  9379  011C4C  6EF7               	movwf	tblptrh,c
  9380  011C4E                     	endif
  9381  011C4E                     	if	1	;There are 3 active tblptr bytes
  9382  011C4E  0E00               	movlw	low (_line1 shr (0+16))
  9383  011C50  6EF8               	movwf	tblptru,c
  9384  011C52                     	endif
  9385  011C52  0008               	tblrd		*
  9386  011C54  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9387  011C58  EC78  F08A         	call	_lcd_string	;wreg free
  9388  011C5C  0012               	return		;funcret
  9389  011C5E                     __end_of_price_set:
  9390                           	opt stack 0
  9391                           tblptru	equ	0xFF8
  9392                           tblptrh	equ	0xFF7
  9393                           tblptrl	equ	0xFF6
  9394                           tablat	equ	0xFF5
  9395                           prodh	equ	0xFF4
  9396                           prodl	equ	0xFF3
  9397                           postinc0	equ	0xFEE
  9398                           wreg	equ	0xFE8
  9399                           indf2	equ	0xFDF
  9400                           postinc2	equ	0xFDE
  9401                           fsr2h	equ	0xFDA
  9402                           fsr2l	equ	0xFD9
  9403                           status	equ	0xFD8
  9404                           
  9405 ;; *************** function _set_price *****************
  9406 ;; Defined at:
  9407 ;;		line 392 in file "vend.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  buttons         1    wreg     unsigned char 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  buttons         1   12[BANK0 ] unsigned char 
  9412 ;;  channel         1   13[BANK0 ] unsigned char 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  1    wreg      void 
  9415 ;; Registers used:
  9416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9423 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9425 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9426 ;;Total ram usage:        4 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:    9
  9429 ;; This function calls:
  9430 ;;		_DATAEE_ReadByte
  9431 ;;		_DATAEE_WriteByte
  9432 ;;		_butindb
  9433 ;;		_displ_price
  9434 ;;		_get_channel
  9435 ;;		_lcd_string
  9436 ;; This function is called by:
  9437 ;;		_price_set
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text53
  9442  0106D6                     __ptext53:
  9443                           	opt stack 0
  9444  0106D6                     _set_price:
  9445                           	opt stack 19
  9446                           
  9447                           ;incstack = 0
  9448                           ;set_price@buttons stored from wreg
  9449  0106D6  0100               	movlb	0	; () banked
  9450  0106D8  6FBE               	movwf	set_price@buttons& (0+255),b
  9451                           
  9452                           ;vend.c: 394: venflags.setprice = 1;
  9453  0106DA  822E               	bsf	_venflags+1,1,c
  9454                           
  9455                           ;vend.c: 395: uint8_t channel = get_channel(buttons);
  9456  0106DC  0100               	movlb	0	; () banked
  9457  0106DE  51BE               	movf	set_price@buttons& (0+255),w,b
  9458  0106E0  EC3E  F095         	call	_get_channel
  9459  0106E4  0100               	movlb	0	; () banked
  9460  0106E6  6FBF               	movwf	set_price@channel& (0+255),b
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;vend.c: 397: vendprice = DATAEE_ReadByte(pricestore + channel);
  9464  0106E8  0E13               	movlw	low _pricestore
  9465  0106EA  6EF6               	movwf	tblptrl,c
  9466  0106EC                     	if	1	;There is more than 1 active tblptr byte
  9467  0106EC  0EFC               	movlw	high _pricestore
  9468  0106EE  6EF7               	movwf	tblptrh,c
  9469  0106F0                     	endif
  9470  0106F0                     	if	1	;There are 3 active tblptr bytes
  9471  0106F0  0E00               	movlw	low (_pricestore shr (0+16))
  9472  0106F2  6EF8               	movwf	tblptru,c
  9473  0106F4                     	endif
  9474  0106F4  0009               	tblrd		*+
  9475  0106F6  CFF5 F02B          	movff	tablat,??_set_price
  9476  0106FA  0009               	tblrd		*+
  9477  0106FC  CFF5 F02C          	movff	tablat,??_set_price+1
  9478  010700  51BF               	movf	set_price@channel& (0+255),w,b
  9479  010702  242B               	addwf	??_set_price,w,c
  9480  010704  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  9481  010706  0E00               	movlw	0
  9482  010708  202C               	addwfc	??_set_price+1,w,c
  9483  01070A  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  9484  01070C  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
  9485  010710  6E37               	movwf	_vendprice,c	;volatile
  9486                           
  9487                           ;vend.c: 398: displ_price(vendprice);
  9488  010712  5037               	movf	_vendprice,w,c	;volatile
  9489  010714  ECB5  F092         	call	_displ_price
  9490                           
  9491                           ;vend.c: 399: while(venflags.setprice)
  9492  010718  D067               	goto	l2284
  9493  01071A                     
  9494                           ;vend.c: 400: {
  9495                           ;vend.c: 401: buttons = butindb();
  9496  01071A  ECD5  F092         	call	_butindb	;wreg free
  9497  01071E  0100               	movlb	0	; () banked
  9498  010720  6FBE               	movwf	set_price@buttons& (0+255),b
  9499                           
  9500                           ;vend.c: 403: switch(buttons)
  9501  010722  D057               	goto	l2282
  9502  010724                     
  9503                           ; BSR set to: 0
  9504                           
  9505                           ; BSR set to: 0
  9506  010724  2A37               	incf	_vendprice,f,c	;volatile
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;vend.c: 406: DATAEE_WriteByte(pricestore + channel, vendprice);
  9510  010726  0E13               	movlw	low _pricestore
  9511  010728  6EF6               	movwf	tblptrl,c
  9512  01072A                     	if	1	;There is more than 1 active tblptr byte
  9513  01072A  0EFC               	movlw	high _pricestore
  9514  01072C  6EF7               	movwf	tblptrh,c
  9515  01072E                     	endif
  9516  01072E                     	if	1	;There are 3 active tblptr bytes
  9517  01072E  0E00               	movlw	low (_pricestore shr (0+16))
  9518  010730  6EF8               	movwf	tblptru,c
  9519  010732                     	endif
  9520  010732  0009               	tblrd		*+
  9521  010734  CFF5 F02B          	movff	tablat,??_set_price
  9522  010738  0009               	tblrd		*+
  9523  01073A  CFF5 F02C          	movff	tablat,??_set_price+1
  9524  01073E  51BF               	movf	set_price@channel& (0+255),w,b
  9525  010740  242B               	addwf	??_set_price,w,c
  9526  010742  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  9527  010744  0E00               	movlw	0
  9528  010746  202C               	addwfc	??_set_price+1,w,c
  9529  010748  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  9530  01074A  C037  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  9531  01074E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  9532                           
  9533                           ;vend.c: 407: displ_price(vendprice);
  9534  010752  5037               	movf	_vendprice,w,c	;volatile
  9535  010754  ECB5  F092         	call	_displ_price
  9536                           
  9537                           ;vend.c: 408: break;
  9538  010758  D047               	goto	l2284
  9539  01075A  0637               	decf	_vendprice,f,c	;volatile
  9540                           
  9541                           ;vend.c: 410: DATAEE_WriteByte(pricestore + channel, vendprice);
  9542  01075C  0E13               	movlw	low _pricestore
  9543  01075E  6EF6               	movwf	tblptrl,c
  9544  010760                     	if	1	;There is more than 1 active tblptr byte
  9545  010760  0EFC               	movlw	high _pricestore
  9546  010762  6EF7               	movwf	tblptrh,c
  9547  010764                     	endif
  9548  010764                     	if	1	;There are 3 active tblptr bytes
  9549  010764  0E00               	movlw	low (_pricestore shr (0+16))
  9550  010766  6EF8               	movwf	tblptru,c
  9551  010768                     	endif
  9552  010768  0009               	tblrd		*+
  9553  01076A  CFF5 F02B          	movff	tablat,??_set_price
  9554  01076E  0009               	tblrd		*+
  9555  010770  CFF5 F02C          	movff	tablat,??_set_price+1
  9556  010774  0100               	movlb	0	; () banked
  9557  010776  51BF               	movf	set_price@channel& (0+255),w,b
  9558  010778  242B               	addwf	??_set_price,w,c
  9559  01077A  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  9560  01077C  0E00               	movlw	0
  9561  01077E  202C               	addwfc	??_set_price+1,w,c
  9562  010780  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  9563  010782  C037  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  9564  010786  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
  9565                           
  9566                           ;vend.c: 411: displ_price(vendprice);
  9567  01078A  5037               	movf	_vendprice,w,c	;volatile
  9568  01078C  ECB5  F092         	call	_displ_price
  9569                           
  9570                           ;vend.c: 412: break;
  9571  010790  D02B               	goto	l2284
  9572  010792                     l2286:
  9573                           
  9574                           ; BSR set to: 0
  9575  010792  922E               	bcf	_venflags+1,1,c
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;vend.c: 414: lcd_string(pricesetmsg, line1);
  9579  010794  0E2A               	movlw	low _pricesetmsg
  9580  010796  6E24               	movwf	lcd_string@lcdstring,c
  9581  010798  0EFF               	movlw	high _pricesetmsg
  9582  01079A  6E25               	movwf	lcd_string@lcdstring+1,c
  9583  01079C  0E4A               	movlw	low _line1
  9584  01079E  6EF6               	movwf	tblptrl,c
  9585  0107A0                     	if	1	;There is more than 1 active tblptr byte
  9586  0107A0  0EFC               	movlw	high _line1
  9587  0107A2  6EF7               	movwf	tblptrh,c
  9588  0107A4                     	endif
  9589  0107A4                     	if	1	;There are 3 active tblptr bytes
  9590  0107A4  0E00               	movlw	low (_line1 shr (0+16))
  9591  0107A6  6EF8               	movwf	tblptru,c
  9592  0107A8                     	endif
  9593  0107A8  0008               	tblrd		*
  9594  0107AA  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9595  0107AE  EC78  F08A         	call	_lcd_string	;wreg free
  9596                           
  9597                           ;vend.c: 415: lcd_string(pricesetm2, line2);
  9598  0107B2  0E31               	movlw	low _pricesetm2
  9599  0107B4  6E24               	movwf	lcd_string@lcdstring,c
  9600  0107B6  0EFD               	movlw	high _pricesetm2
  9601  0107B8  6E25               	movwf	lcd_string@lcdstring+1,c
  9602  0107BA  0E49               	movlw	low _line2
  9603  0107BC  6EF6               	movwf	tblptrl,c
  9604  0107BE                     	if	1	;There is more than 1 active tblptr byte
  9605  0107BE  0EFC               	movlw	high _line2
  9606  0107C0  6EF7               	movwf	tblptrh,c
  9607  0107C2                     	endif
  9608  0107C2                     	if	1	;There are 3 active tblptr bytes
  9609  0107C2  0E00               	movlw	low (_line2 shr (0+16))
  9610  0107C4  6EF8               	movwf	tblptru,c
  9611  0107C6                     	endif
  9612  0107C6  0008               	tblrd		*
  9613  0107C8  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9614  0107CC  EC78  F08A         	call	_lcd_string	;wreg free
  9615                           
  9616                           ;vend.c: 418: }
  9617                           
  9618                           ;vend.c: 417: break;
  9619  0107D0  D00B               	goto	l2284
  9620  0107D2                     l2282:
  9621  0107D2  0100               	movlb	0	; () banked
  9622  0107D4  51BE               	movf	set_price@buttons& (0+255),w,b
  9623                           
  9624                           ; Switch size 1, requested type "space"
  9625                           ; Number of cases is 3, Range of values is 1 to 128
  9626                           ; switch strategies available:
  9627                           ; Name         Instructions Cycles
  9628                           ; simple_byte           10     6 (average)
  9629                           ;	Chosen strategy is simple_byte
  9630  0107D6  0A01               	xorlw	1	; case 1
  9631  0107D8  B4D8               	btfsc	status,2,c
  9632  0107DA  D7A4               	goto	l2283
  9633  0107DC  0A03               	xorlw	3	; case 2
  9634  0107DE  B4D8               	btfsc	status,2,c
  9635  0107E0  D7BC               	goto	l2285
  9636  0107E2  0A82               	xorlw	130	; case 128
  9637  0107E4  B4D8               	btfsc	status,2,c
  9638  0107E6  D7D5               	goto	l2286
  9639  0107E8                     l2284:
  9640                           
  9641                           ; BSR set to: 0
  9642  0107E8  A22E               	btfss	_venflags+1,1,c
  9643  0107EA  0012               	return	
  9644  0107EC  D796               	goto	l2281
  9645  0107EE                     __end_of_set_price:
  9646                           	opt stack 0
  9647                           tblptru	equ	0xFF8
  9648                           tblptrh	equ	0xFF7
  9649                           tblptrl	equ	0xFF6
  9650                           tablat	equ	0xFF5
  9651                           prodh	equ	0xFF4
  9652                           prodl	equ	0xFF3
  9653                           postinc0	equ	0xFEE
  9654                           wreg	equ	0xFE8
  9655                           indf2	equ	0xFDF
  9656                           postinc2	equ	0xFDE
  9657                           fsr2h	equ	0xFDA
  9658                           fsr2l	equ	0xFD9
  9659                           status	equ	0xFD8
  9660                           
  9661 ;; *************** function _displ_price *****************
  9662 ;; Defined at:
  9663 ;;		line 234 in file "lcd.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;  vendprice       1    wreg     unsigned char 
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;  vendprice       1   31[COMRAM] unsigned char 
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;Total ram usage:        1 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    8
  9684 ;; This function calls:
  9685 ;;		_displ_hex
  9686 ;;		_lcd_dispadd
  9687 ;;		_lcd_write
  9688 ;;		_lcd_writeC
  9689 ;; This function is called by:
  9690 ;;		_main
  9691 ;;		_set_price
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text54
  9696  01256A                     __ptext54:
  9697                           	opt stack 0
  9698  01256A                     _displ_price:
  9699                           	opt stack 19
  9700                           
  9701                           ;incstack = 0
  9702                           ;displ_price@vendprice stored from wreg
  9703  01256A  6E2A               	movwf	displ_price@vendprice,c
  9704                           
  9705                           ;lcd.c: 236: lcd_write(dispclr);
  9706  01256C  0E54               	movlw	low _dispclr
  9707  01256E  6EF6               	movwf	tblptrl,c
  9708  012570                     	if	1	;There is more than 1 active tblptr byte
  9709  012570  0EFC               	movlw	high _dispclr
  9710  012572  6EF7               	movwf	tblptrh,c
  9711  012574                     	endif
  9712  012574                     	if	1	;There are 3 active tblptr bytes
  9713  012574  0E00               	movlw	low (_dispclr shr (0+16))
  9714  012576  6EF8               	movwf	tblptru,c
  9715  012578                     	endif
  9716  012578  0008               	tblrd		*
  9717  01257A  50F5               	movf	tablat,w,c
  9718  01257C  EC78  F094         	call	_lcd_write
  9719                           
  9720                           ;lcd.c: 237: lcd_dispadd(line2 + 4);
  9721  012580  0E49               	movlw	low _line2
  9722  012582  6EF6               	movwf	tblptrl,c
  9723  012584                     	if	1	;There is more than 1 active tblptr byte
  9724  012584  0EFC               	movlw	high _line2
  9725  012586  6EF7               	movwf	tblptrh,c
  9726  012588                     	endif
  9727  012588                     	if	1	;There are 3 active tblptr bytes
  9728  012588  0E00               	movlw	low (_line2 shr (0+16))
  9729  01258A  6EF8               	movwf	tblptru,c
  9730  01258C                     	endif
  9731  01258C  0008               	tblrd		*
  9732  01258E  50F5               	movf	tablat,w,c
  9733  012590  0F04               	addlw	4
  9734  012592  EC74  F095         	call	_lcd_dispadd
  9735                           
  9736                           ;lcd.c: 238: lcd_writeC((uint8_t)'R');
  9737  012596  0E52               	movlw	82
  9738  012598  EC84  F08F         	call	_lcd_writeC
  9739                           
  9740                           ;lcd.c: 239: displ_hex(vendprice);
  9741  01259C  502A               	movf	displ_price@vendprice,w,c
  9742  01259E  6E27               	movwf	displ_hex@hexnum,c
  9743  0125A0  6A28               	clrf	displ_hex@hexnum+1,c
  9744  0125A2  6A29               	clrf	displ_hex@hexnum+2,c
  9745  0125A4  ECC3  F089         	call	_displ_hex	;wreg free
  9746  0125A8  0012               	return		;funcret
  9747  0125AA                     __end_of_displ_price:
  9748                           	opt stack 0
  9749                           tblptru	equ	0xFF8
  9750                           tblptrh	equ	0xFF7
  9751                           tblptrl	equ	0xFF6
  9752                           tablat	equ	0xFF5
  9753                           prodh	equ	0xFF4
  9754                           prodl	equ	0xFF3
  9755                           postinc0	equ	0xFEE
  9756                           wreg	equ	0xFE8
  9757                           indf2	equ	0xFDF
  9758                           postinc2	equ	0xFDE
  9759                           fsr2h	equ	0xFDA
  9760                           fsr2l	equ	0xFD9
  9761                           status	equ	0xFD8
  9762                           
  9763 ;; *************** function _mdb_unlock *****************
  9764 ;; Defined at:
  9765 ;;		line 382 in file "mdb.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;Total ram usage:        1 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    3
  9786 ;; This function calls:
  9787 ;;		_CMP1_Initialize
  9788 ;;		_DAC1_Initialize
  9789 ;;		_TMR1_Initialize
  9790 ;;		_TMR3_Initialize
  9791 ;;		_TMR5_Initialize
  9792 ;; This function is called by:
  9793 ;;		_enter_service
  9794 ;;		_vend_nosense
  9795 ;;		_vend_dispense
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text55
  9800  011140                     __ptext55:
  9801                           	opt stack 0
  9802  011140                     _mdb_unlock:
  9803                           	opt stack 24
  9804                           
  9805                           ;mdb.c: 384: _delay((unsigned long)((50)*(12000000/4000.0)));
  9806                           
  9807                           ;incstack = 0
  9808  011140  0EC3               	movlw	195
  9809  011142  6E1F               	movwf	??_mdb_unlock& (0+255),c
  9810  011144  0ECD               	movlw	205
  9811  011146                     u5757:
  9812  011146  2EE8               	decfsz	wreg,f,c
  9813  011148  D7FE               	bra	u5757
  9814  01114A  2E1F               	decfsz	??_mdb_unlock& (0+255),f,c
  9815  01114C  D7FC               	bra	u5757
  9816  01114E  F000               	nop	
  9817                           
  9818                           ;mdb.c: 385: LATE = 0x00;
  9819  011150  0E00               	movlw	0
  9820  011152  6E87               	movwf	3975,c	;volatile
  9821                           
  9822                           ;mdb.c: 386: LATD = 0x00;
  9823  011154  0E00               	movlw	0
  9824  011156  6E86               	movwf	3974,c	;volatile
  9825                           
  9826                           ;mdb.c: 387: LATA = 0xC0;
  9827  011158  0EC0               	movlw	192
  9828  01115A  6E83               	movwf	3971,c	;volatile
  9829                           
  9830                           ;mdb.c: 388: LATB = 0x00;
  9831  01115C  0E00               	movlw	0
  9832  01115E  6E84               	movwf	3972,c	;volatile
  9833                           
  9834                           ;mdb.c: 389: LATC = 0x01;
  9835  011160  0E01               	movlw	1
  9836  011162  6E85               	movwf	3973,c	;volatile
  9837                           
  9838                           ;mdb.c: 394: TRISE = 0x00;
  9839  011164  0E00               	movlw	0
  9840  011166  6E8C               	movwf	3980,c	;volatile
  9841                           
  9842                           ;mdb.c: 395: TRISA = 0x1F;
  9843  011168  0E1F               	movlw	31
  9844  01116A  6E88               	movwf	3976,c	;volatile
  9845                           
  9846                           ;mdb.c: 396: TRISB = 0xD0;
  9847  01116C  0ED0               	movlw	208
  9848  01116E  6E89               	movwf	3977,c	;volatile
  9849                           
  9850                           ;mdb.c: 397: TRISC = 0x80;
  9851  011170  0E80               	movlw	128
  9852  011172  6E8A               	movwf	3978,c	;volatile
  9853                           
  9854                           ;mdb.c: 398: TRISD = 0x00;
  9855  011174  0E00               	movlw	0
  9856  011176  6E8B               	movwf	3979,c	;volatile
  9857                           
  9858                           ;mdb.c: 403: ANSELC = 0x00;
  9859  011178  0E00               	movlw	0
  9860  01117A  010F               	movlb	15	; () banked
  9861  01117C  6F21               	movwf	33,b	;volatile
  9862                           
  9863                           ; BSR set to: 15
  9864                           ;mdb.c: 404: ANSELB = 0xC0;
  9865  01117E  0EC0               	movlw	192
  9866  011180  6F19               	movwf	25,b	;volatile
  9867                           
  9868                           ; BSR set to: 15
  9869                           ;mdb.c: 405: ANSELD = 0x00;
  9870  011182  0E00               	movlw	0
  9871  011184  6F26               	movwf	38,b	;volatile
  9872                           
  9873                           ; BSR set to: 15
  9874                           ;mdb.c: 406: ANSELE = 0x00;
  9875  011186  0E00               	movlw	0
  9876  011188  6F2E               	movwf	46,b	;volatile
  9877                           
  9878                           ; BSR set to: 15
  9879                           ;mdb.c: 407: ANSELA = 0x01;
  9880  01118A  0E01               	movlw	1
  9881  01118C  6F11               	movwf	17,b	;volatile
  9882                           
  9883                           ; BSR set to: 15
  9884                           ;mdb.c: 412: WPUD = 0x00;
  9885  01118E  0E00               	movlw	0
  9886  011190  6F25               	movwf	37,b	;volatile
  9887                           
  9888                           ; BSR set to: 15
  9889                           ;mdb.c: 413: WPUE = 0x00;
  9890  011192  0E00               	movlw	0
  9891  011194  6F2D               	movwf	45,b	;volatile
  9892                           
  9893                           ; BSR set to: 15
  9894                           ;mdb.c: 414: WPUB = 0x00;
  9895  011196  0E00               	movlw	0
  9896  011198  6F18               	movwf	24,b	;volatile
  9897                           
  9898                           ; BSR set to: 15
  9899                           ;mdb.c: 415: WPUA = 0x00;
  9900  01119A  0E00               	movlw	0
  9901  01119C  6F10               	movwf	16,b	;volatile
  9902                           
  9903                           ; BSR set to: 15
  9904                           ;mdb.c: 416: WPUC = 0x00;
  9905  01119E  0E00               	movlw	0
  9906  0111A0  6F20               	movwf	32,b	;volatile
  9907                           
  9908                           ; BSR set to: 15
  9909                           ;mdb.c: 421: ODCONE = 0x00;
  9910  0111A2  0E00               	movlw	0
  9911  0111A4  6F2C               	movwf	44,b	;volatile
  9912                           
  9913                           ; BSR set to: 15
  9914                           ;mdb.c: 422: ODCONA = 0x00;
  9915  0111A6  0E00               	movlw	0
  9916  0111A8  6F0F               	movwf	15,b	;volatile
  9917                           
  9918                           ; BSR set to: 15
  9919                           ;mdb.c: 423: ODCONB = 0x00;
  9920  0111AA  0E00               	movlw	0
  9921  0111AC  6F17               	movwf	23,b	;volatile
  9922                           
  9923                           ; BSR set to: 15
  9924                           ;mdb.c: 424: ODCONC = 0x00;
  9925  0111AE  0E00               	movlw	0
  9926  0111B0  6F1F               	movwf	31,b	;volatile
  9927                           
  9928                           ; BSR set to: 15
  9929                           ;mdb.c: 425: ODCOND = 0x00;
  9930  0111B2  0E00               	movlw	0
  9931  0111B4  6F24               	movwf	36,b	;volatile
  9932                           
  9933                           ; BSR set to: 15
  9934                           ;mdb.c: 426: LATC = 0x01;
  9935  0111B6  0E01               	movlw	1
  9936  0111B8  6E85               	movwf	3973,c	;volatile
  9937                           
  9938                           ; BSR set to: 15
  9939                           ;mdb.c: 427: TRISC = 0x80;
  9940  0111BA  0E80               	movlw	128
  9941  0111BC  6E8A               	movwf	3978,c	;volatile
  9942                           
  9943                           ; BSR set to: 15
  9944                           ;mdb.c: 428: ANSELC = 0x00;
  9945  0111BE  0E00               	movlw	0
  9946  0111C0  6F21               	movwf	33,b	;volatile
  9947                           
  9948                           ; BSR set to: 15
  9949                           ;mdb.c: 429: WPUC = 0x00;
  9950  0111C2  0E00               	movlw	0
  9951  0111C4  6F20               	movwf	32,b	;volatile
  9952                           
  9953                           ; BSR set to: 15
  9954                           ;mdb.c: 430: ODCONC = 0x00;
  9955  0111C6  0E00               	movlw	0
  9956  0111C8  6F1F               	movwf	31,b	;volatile
  9957                           
  9958                           ; BSR set to: 15
  9959                           ;mdb.c: 431: PPSLOCK = 0x55;
  9960  0111CA  0E55               	movlw	85
  9961  0111CC  010E               	movlb	14	; () banked
  9962  0111CE  6FA0               	movwf	160,b	;volsfr
  9963                           
  9964                           ; BSR set to: 14
  9965                           ;mdb.c: 432: PPSLOCK = 0xAA;
  9966  0111D0  0EAA               	movlw	170
  9967  0111D2  6FA0               	movwf	160,b	;volsfr
  9968                           
  9969                           ; BSR set to: 14
  9970                           ;mdb.c: 433: PPSLOCKbits.PPSLOCKED = 0x00;
  9971  0111D4  91A0               	bcf	160,0,b	;volsfr
  9972                           
  9973                           ; BSR set to: 14
  9974                           ;mdb.c: 435: RX1PPSbits.RXPPS = 0x0;
  9975  0111D6  91B5               	bcf	181,0,b	;volatile
  9976  0111D8  93B5               	bcf	181,1,b	;volatile
  9977  0111DA  95B5               	bcf	181,2,b	;volatile
  9978  0111DC  97B5               	bcf	181,3,b	;volatile
  9979  0111DE  99B5               	bcf	181,4,b	;volatile
  9980                           
  9981                           ; BSR set to: 14
  9982                           ;mdb.c: 436: RC6PPS = 0x0;
  9983  0111E0  0E00               	movlw	0
  9984  0111E2  6FFD               	movwf	253,b	;volatile
  9985                           
  9986                           ; BSR set to: 14
  9987                           ;mdb.c: 437: RB5PPS = 0x0;
  9988  0111E4  0E00               	movlw	0
  9989  0111E6  6FF4               	movwf	244,b	;volatile
  9990                           
  9991                           ; BSR set to: 14
  9992                           ;mdb.c: 438: RX2PPSbits.RXPPS = 0x0;
  9993  0111E8  918D               	bcf	141,0,b	;volatile
  9994  0111EA  938D               	bcf	141,1,b	;volatile
  9995  0111EC  958D               	bcf	141,2,b	;volatile
  9996  0111EE  978D               	bcf	141,3,b	;volatile
  9997  0111F0  998D               	bcf	141,4,b	;volatile
  9998                           
  9999                           ; BSR set to: 14
 10000                           ;mdb.c: 439: CMP1_Initialize();
 10001  0111F2  ECCF  F095         	call	_CMP1_Initialize	;wreg free
 10002                           
 10003                           ;mdb.c: 440: TMR3_Initialize();
 10004  0111F6  ECDB  F093         	call	_TMR3_Initialize	;wreg free
 10005                           
 10006                           ;mdb.c: 441: DAC1_Initialize();
 10007  0111FA  EC1C  F096         	call	_DAC1_Initialize	;wreg free
 10008                           
 10009                           ;mdb.c: 442: TMR5_Initialize();
 10010  0111FE  ECC0  F093         	call	_TMR5_Initialize	;wreg free
 10011                           
 10012                           ;mdb.c: 443: TMR1_Initialize();
 10013  011202  ECF6  F093         	call	_TMR1_Initialize	;wreg free
 10014  011206  0012               	return		;funcret
 10015  011208                     __end_of_mdb_unlock:
 10016                           	opt stack 0
 10017                           tblptru	equ	0xFF8
 10018                           tblptrh	equ	0xFF7
 10019                           tblptrl	equ	0xFF6
 10020                           tablat	equ	0xFF5
 10021                           prodh	equ	0xFF4
 10022                           prodl	equ	0xFF3
 10023                           postinc0	equ	0xFEE
 10024                           wreg	equ	0xFE8
 10025                           indf2	equ	0xFDF
 10026                           postinc2	equ	0xFDE
 10027                           fsr2h	equ	0xFDA
 10028                           fsr2l	equ	0xFD9
 10029                           status	equ	0xFD8
 10030                           
 10031 ;; *************** function _hopper_test *****************
 10032 ;; Defined at:
 10033 ;;		line 10 in file "hopper.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;		None
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;		None
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10051 ;;Total ram usage:        0 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    6
 10054 ;; This function calls:
 10055 ;;		_hopper_pay
 10056 ;; This function is called by:
 10057 ;;		_enter_service
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           	psect	text56
 10062  012B8A                     __ptext56:
 10063                           	opt stack 0
 10064  012B8A                     _hopper_test:
 10065                           	opt stack 23
 10066                           
 10067                           ;hopper.c: 12: if(!hopper_pay(0x05))
 10068                           
 10069                           ;incstack = 0
 10070  012B8A  0E05               	movlw	5
 10071  012B8C  ECE4  F08E         	call	_hopper_pay
 10072  012B90  0900               	iorlw	0
 10073  012B92  A4D8               	btfss	status,2,c
 10074  012B94  D002               	goto	l3938
 10075  012B96  F000               	nop		;# 
 10076                           
 10077                           ;hopper.c: 15: }
 10078  012B98  0012               	return	
 10079  012B9A                     l3938:
 10080  012B9A  F000               	nop		;# 
 10081  012B9C  0012               	return	
 10082  012B9E                     __end_of_hopper_test:
 10083                           	opt stack 0
 10084                           tblptru	equ	0xFF8
 10085                           tblptrh	equ	0xFF7
 10086                           tblptrl	equ	0xFF6
 10087                           tablat	equ	0xFF5
 10088                           prodh	equ	0xFF4
 10089                           prodl	equ	0xFF3
 10090                           postinc0	equ	0xFEE
 10091                           wreg	equ	0xFE8
 10092                           indf2	equ	0xFDF
 10093                           postinc2	equ	0xFDE
 10094                           fsr2h	equ	0xFDA
 10095                           fsr2l	equ	0xFD9
 10096                           status	equ	0xFD8
 10097                           
 10098 ;; *************** function _hopper_pay *****************
 10099 ;; Defined at:
 10100 ;;		line 39 in file "hopper.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  change          1    wreg     unsigned char 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  change          1   30[COMRAM] unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      unsigned char 
 10107 ;; Registers used:
 10108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;Total ram usage:        2 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:    5
 10121 ;; This function calls:
 10122 ;;		_DATAEE_WriteByte
 10123 ;;		_Update_coinsout
 10124 ;;		_cctalk_off
 10125 ;;		_cctalk_on
 10126 ;;		_pay_coin
 10127 ;; This function is called by:
 10128 ;;		_hopper_test
 10129 ;;		_give_change
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text57
 10134  011DC8                     __ptext57:
 10135                           	opt stack 0
 10136  011DC8                     _hopper_pay:
 10137                           	opt stack 23
 10138                           
 10139                           ;incstack = 0
 10140                           ;hopper_pay@change stored from wreg
 10141  011DC8  6E29               	movwf	hopper_pay@change,c
 10142                           
 10143                           ;hopper.c: 41: cctalk_on();
 10144  011DCA  EC51  F096         	call	_cctalk_on	;wreg free
 10145                           
 10146                           ;hopper.c: 42: outcoins = 0x00;
 10147  011DCE  0E00               	movlw	0
 10148  011DD0  6E3B               	movwf	_outcoins,c
 10149                           
 10150                           ;hopper.c: 43: while(change > 0)
 10151  011DD2  D027               	goto	l3947
 10152  011DD4                     
 10153                           ;hopper.c: 44: {
 10154                           ;hopper.c: 45: venflags.nochange = pay_coin();
 10155  011DD4  EC57  F08C         	call	_pay_coin	;wreg free
 10156  011DD8  6E28               	movwf	??_hopper_pay& (0+255),c
 10157  011DDA  4628               	rlncf	??_hopper_pay,f,c
 10158  011DDC  4628               	rlncf	??_hopper_pay,f,c
 10159  011DDE  4628               	rlncf	??_hopper_pay,f,c
 10160  011DE0  502D               	movf	_venflags,w,c
 10161  011DE2  1828               	xorwf	??_hopper_pay,w,c
 10162  011DE4  0BF7               	andlw	-9
 10163  011DE6  1828               	xorwf	??_hopper_pay,w,c
 10164  011DE8  6E2D               	movwf	_venflags,c
 10165                           
 10166                           ;hopper.c: 46: if(venflags.nochange)
 10167  011DEA  A62D               	btfss	_venflags,3,c
 10168  011DEC  D018               	goto	l3949
 10169                           
 10170                           ;hopper.c: 47: {
 10171                           ;hopper.c: 48: cctalk_off();
 10172  011DEE  EC53  F096         	call	_cctalk_off	;wreg free
 10173                           
 10174                           ;hopper.c: 49: Update_coinsout(outcoins);
 10175  011DF2  503B               	movf	_outcoins,w,c
 10176  011DF4  EC18  F090         	call	_Update_coinsout
 10177                           
 10178                           ;hopper.c: 50: venflags.nochange = 1;
 10179  011DF8  862D               	bsf	_venflags,3,c
 10180                           
 10181                           ;hopper.c: 51: DATAEE_WriteByte(hoperror, 0x01);
 10182  011DFA  0EE3               	movlw	low _hoperror
 10183  011DFC  6EF6               	movwf	tblptrl,c
 10184  011DFE                     	if	1	;There is more than 1 active tblptr byte
 10185  011DFE  0EFB               	movlw	high _hoperror
 10186  011E00  6EF7               	movwf	tblptrh,c
 10187  011E02                     	endif
 10188  011E02                     	if	1	;There are 3 active tblptr bytes
 10189  011E02  0E00               	movlw	low (_hoperror shr (0+16))
 10190  011E04  6EF8               	movwf	tblptru,c
 10191  011E06                     	endif
 10192  011E06  0009               	tblrd		*+
 10193  011E08  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 10194  011E0C  000A               	tblrd		*-
 10195  011E0E  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 10196  011E12  0E01               	movlw	1
 10197  011E14  6E1F               	movwf	DATAEE_WriteByte@bData,c
 10198  011E16  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 10199                           
 10200                           ;hopper.c: 52: return change;
 10201  011E1A  5029               	movf	hopper_pay@change,w,c
 10202  011E1C  0012               	return	
 10203  011E1E                     l3949:
 10204                           
 10205                           ;hopper.c: 53: }
 10206                           ;hopper.c: 54: outcoins++;
 10207  011E1E  2A3B               	incf	_outcoins,f,c
 10208                           
 10209                           ;hopper.c: 55: change--;
 10210  011E20  0629               	decf	hopper_pay@change,f,c
 10211  011E22                     l3947:
 10212  011E22  5029               	movf	hopper_pay@change,w,c
 10213  011E24  A4D8               	btfss	status,2,c
 10214  011E26  D7D6               	goto	l3948
 10215                           
 10216                           ;hopper.c: 56: }
 10217                           ;hopper.c: 57: cctalk_off();
 10218  011E28  EC53  F096         	call	_cctalk_off	;wreg free
 10219                           
 10220                           ;hopper.c: 58: Update_coinsout(outcoins);
 10221  011E2C  503B               	movf	_outcoins,w,c
 10222  011E2E  EC18  F090         	call	_Update_coinsout
 10223                           
 10224                           ;hopper.c: 59: return change;
 10225  011E32  5029               	movf	hopper_pay@change,w,c
 10226  011E34  0012               	return	
 10227  011E36                     __end_of_hopper_pay:
 10228                           	opt stack 0
 10229                           tblptru	equ	0xFF8
 10230                           tblptrh	equ	0xFF7
 10231                           tblptrl	equ	0xFF6
 10232                           tablat	equ	0xFF5
 10233                           prodh	equ	0xFF4
 10234                           prodl	equ	0xFF3
 10235                           postinc0	equ	0xFEE
 10236                           wreg	equ	0xFE8
 10237                           indf2	equ	0xFDF
 10238                           postinc2	equ	0xFDE
 10239                           fsr2h	equ	0xFDA
 10240                           fsr2l	equ	0xFD9
 10241                           status	equ	0xFD8
 10242                           
 10243 ;; *************** function _pay_coin *****************
 10244 ;; Defined at:
 10245 ;;		line 79 in file "hopper.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;		None
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;		None
 10250 ;; Return value:  Size  Location     Type
 10251 ;;                  1    wreg      unsigned char 
 10252 ;; Registers used:
 10253 ;;		wreg, status,2, status,0, cstack
 10254 ;; Tracked objects:
 10255 ;;		On entry : 0/0
 10256 ;;		On exit  : 0/0
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;Total ram usage:        0 bytes
 10264 ;; Hardware stack levels used:    1
 10265 ;; Hardware stack levels required when called:    4
 10266 ;; This function calls:
 10267 ;;		_Reset_hopper
 10268 ;;		_TMR2_Initialize
 10269 ;;		_TMR4_Initialize
 10270 ;;		_cctalk_off
 10271 ;;		_cctalk_on
 10272 ;;		_switch_read
 10273 ;; This function is called by:
 10274 ;;		_hopper_pay
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           	psect	text58
 10279  0118AE                     __ptext58:
 10280                           	opt stack 0
 10281  0118AE                     _pay_coin:
 10282                           	opt stack 23
 10283                           
 10284                           ;hopper.c: 82: hopercount = 3;
 10285                           
 10286                           ;incstack = 0
 10287  0118AE  0E03               	movlw	3
 10288  0118B0  0100               	movlb	0	; () banked
 10289  0118B2  6FCE               	movwf	_hopercount& (0+255),b
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;hopper.c: 83: if(switch_read())
 10293  0118B4  EC4F  F091         	call	_switch_read	;wreg free
 10294  0118B8  0900               	iorlw	0
 10295  0118BA  B4D8               	btfsc	status,2,c
 10296  0118BC  D011               	goto	l3959
 10297                           
 10298                           ;hopper.c: 84: {
 10299                           ;hopper.c: 85: TMR2_Initialize();
 10300  0118BE  EC2F  F095         	call	_TMR2_Initialize	;wreg free
 10301  0118C2  EC4F  F091         	call	_switch_read	;wreg free
 10302  0118C6  0900               	iorlw	0
 10303  0118C8  B4D8               	btfsc	status,2,c
 10304  0118CA  D003               	goto	u4430
 10305  0118CC  010E               	movlb	14	; () banked
 10306  0118CE  A3CE               	btfss	206,1,b	;volatile
 10307  0118D0  D7F8               	goto	l3961
 10308  0118D2                     u4430:
 10309                           
 10310                           ;hopper.c: 88: if(PIR4bits.TMR2IF)
 10311                           
 10312                           ; BSR set to: 14
 10313  0118D2  010E               	movlb	14	; () banked
 10314  0118D4  A3CE               	btfss	206,1,b	;volatile
 10315  0118D6  D002               	goto	l3965
 10316                           
 10317                           ; BSR set to: 14
 10318                           ;hopper.c: 89: {
 10319                           ;hopper.c: 91: return 1;
 10320  0118D8  0E01               	movlw	1
 10321                           
 10322                           ; BSR set to: 14
 10323                           ;hopper.c: 92: }
 10324                           
 10325                           ; BSR set to: 14
 10326  0118DA  0012               	return	
 10327  0118DC                     l3965:
 10328                           
 10329                           ; BSR set to: 14
 10330                           ;hopper.c: 93: else
 10331                           ;hopper.c: 94: {
 10332                           ;hopper.c: 95: return 0;
 10333                           
 10334                           ; BSR set to: 14
 10335  0118DC  0E00               	movlw	0
 10336                           
 10337                           ; BSR set to: 14
 10338                           ;hopper.c: 96: }
 10339                           ;hopper.c: 97: }
 10340                           
 10341                           ; BSR set to: 14
 10342  0118DE  0012               	return	
 10343  0118E0                     l3959:
 10344                           
 10345                           ;hopper.c: 98: else
 10346                           ;hopper.c: 99: {
 10347                           ;hopper.c: 100: cctalk_on();
 10348                           
 10349                           ; BSR set to: 14
 10350  0118E0  EC51  F096         	call	_cctalk_on	;wreg free
 10351                           
 10352                           ;hopper.c: 101: TMR4_Initialize();
 10353  0118E4  EC4C  F095         	call	_TMR4_Initialize	;wreg free
 10354                           
 10355                           ;hopper.c: 103: while(!switch_read())
 10356  0118E8  D00C               	goto	l3972
 10357  0118EA                     l3970:
 10358                           
 10359                           ;hopper.c: 104: {
 10360                           ;hopper.c: 105: if(PIR4bits.TMR4IF)
 10361  0118EA  010E               	movlb	14	; () banked
 10362  0118EC  A7CE               	btfss	206,3,b	;volatile
 10363  0118EE  D009               	goto	l3972
 10364                           
 10365                           ; BSR set to: 14
 10366                           ;hopper.c: 106: {
 10367                           ;hopper.c: 107: if(Reset_hopper())
 10368  0118F0  EC14  F093         	call	_Reset_hopper	;wreg free
 10369  0118F4  0900               	iorlw	0
 10370  0118F6  B4D8               	btfsc	status,2,c
 10371  0118F8  D004               	goto	l3972
 10372                           
 10373                           ;hopper.c: 108: {
 10374                           ;hopper.c: 109: cctalk_off();
 10375  0118FA  EC53  F096         	call	_cctalk_off	;wreg free
 10376                           
 10377                           ;hopper.c: 110: return 1;
 10378  0118FE  0E01               	movlw	1
 10379  011900  0012               	return	
 10380  011902                     l3972:
 10381  011902  EC4F  F091         	call	_switch_read	;wreg free
 10382  011906  0900               	iorlw	0
 10383  011908  B4D8               	btfsc	status,2,c
 10384  01190A  D7EF               	goto	l3970
 10385                           
 10386                           ;hopper.c: 111: }
 10387                           ;hopper.c: 113: }
 10388                           ;hopper.c: 114: }
 10389                           ;hopper.c: 115: cctalk_off();
 10390  01190C  EC53  F096         	call	_cctalk_off	;wreg free
 10391                           
 10392                           ;hopper.c: 116: TMR2_Initialize();
 10393  011910  EC2F  F095         	call	_TMR2_Initialize	;wreg free
 10394                           
 10395                           ;hopper.c: 117: cctalk_on();
 10396  011914  EC51  F096         	call	_cctalk_on	;wreg free
 10397  011918  EC4F  F091         	call	_switch_read	;wreg free
 10398  01191C  0900               	iorlw	0
 10399  01191E  B4D8               	btfsc	status,2,c
 10400  011920  D003               	goto	u4490
 10401  011922  010E               	movlb	14	; () banked
 10402  011924  A3CE               	btfss	206,1,b	;volatile
 10403  011926  D7F8               	goto	l3975
 10404  011928                     u4490:
 10405                           
 10406                           ;hopper.c: 119: cctalk_off();
 10407                           
 10408                           ; BSR set to: 14
 10409                           
 10410                           ; BSR set to: 14
 10411  011928  EC53  F096         	call	_cctalk_off	;wreg free
 10412                           
 10413                           ;hopper.c: 120: if(PIR4bits.TMR2IF)
 10414  01192C  010E               	movlb	14	; () banked
 10415  01192E  A3CE               	btfss	206,1,b	;volatile
 10416  011930  D002               	goto	l3979
 10417                           
 10418                           ; BSR set to: 14
 10419                           ;hopper.c: 121: {
 10420                           ;hopper.c: 122: return 1;
 10421  011932  0E01               	movlw	1
 10422                           
 10423                           ; BSR set to: 14
 10424                           ;hopper.c: 123: }
 10425                           
 10426                           ; BSR set to: 14
 10427  011934  0012               	return	
 10428  011936                     l3979:
 10429                           
 10430                           ; BSR set to: 14
 10431                           ;hopper.c: 124: else
 10432                           ;hopper.c: 125: {
 10433                           ;hopper.c: 126: return 0;
 10434                           
 10435                           ; BSR set to: 14
 10436  011936  0E00               	movlw	0
 10437                           
 10438                           ; BSR set to: 14
 10439                           
 10440                           ; BSR set to: 14
 10441  011938  0012               	return	
 10442  01193A                     __end_of_pay_coin:
 10443                           	opt stack 0
 10444                           tblptru	equ	0xFF8
 10445                           tblptrh	equ	0xFF7
 10446                           tblptrl	equ	0xFF6
 10447                           tablat	equ	0xFF5
 10448                           prodh	equ	0xFF4
 10449                           prodl	equ	0xFF3
 10450                           postinc0	equ	0xFEE
 10451                           wreg	equ	0xFE8
 10452                           indf2	equ	0xFDF
 10453                           postinc2	equ	0xFDE
 10454                           fsr2h	equ	0xFDA
 10455                           fsr2l	equ	0xFD9
 10456                           status	equ	0xFD8
 10457                           
 10458 ;; *************** function _switch_read *****************
 10459 ;; Defined at:
 10460 ;;		line 133 in file "hopper.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;		None
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      unsigned char 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;Total ram usage:        1 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    2
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_pay_coin
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text59
 10489  01229E                     __ptext59:
 10490                           	opt stack 0
 10491  01229E                     _switch_read:
 10492                           	opt stack 24
 10493                           
 10494                           ;hopper.c: 135: if(PORTBbits.RB4 == venflags.swclosed)
 10495                           
 10496                           ;incstack = 0
 10497  01229E  A22F               	btfss	_venflags+2,1,c
 10498  0122A0  D002               	goto	u4150
 10499  0122A2  0E01               	movlw	1
 10500  0122A4  D001               	goto	u4152
 10501  0122A6                     u4150:
 10502  0122A6  0E00               	movlw	0
 10503  0122A8                     u4152:
 10504  0122A8  6E1D               	movwf	??_switch_read& (0+255),c
 10505  0122AA  A88E               	btfss	3982,4,c	;volatile
 10506  0122AC  D002               	goto	u4160
 10507  0122AE  0E01               	movlw	1
 10508  0122B0  D001               	goto	u4162
 10509  0122B2                     u4160:
 10510  0122B2  0E00               	movlw	0
 10511  0122B4                     u4162:
 10512  0122B4  1A1D               	xorwf	??_switch_read,f,c
 10513  0122B6  A4D8               	btfss	status,2,c
 10514  0122B8  D012               	goto	l3985
 10515                           
 10516                           ;hopper.c: 136: {
 10517                           ;hopper.c: 137: if(venflags.swclosed)
 10518  0122BA  A22F               	btfss	_venflags+2,1,c
 10519  0122BC  D008               	goto	l3984
 10520                           
 10521                           ;hopper.c: 138: {
 10522                           ;hopper.c: 139: _delay((unsigned long)((5)*(12000000/4000.0)));
 10523  0122BE  0E14               	movlw	20
 10524  0122C0  6E1D               	movwf	??_switch_read& (0+255),c
 10525  0122C2  0E7A               	movlw	122
 10526  0122C4                     u5767:
 10527  0122C4  2EE8               	decfsz	wreg,f,c
 10528  0122C6  D7FE               	bra	u5767
 10529  0122C8  2E1D               	decfsz	??_switch_read& (0+255),f,c
 10530  0122CA  D7FC               	bra	u5767
 10531                           
 10532                           ;hopper.c: 140: }
 10533  0122CC  D008               	goto	l3985
 10534  0122CE                     l3984:
 10535                           
 10536                           ;hopper.c: 141: else
 10537                           ;hopper.c: 142: {
 10538                           ;hopper.c: 143: _delay((unsigned long)((20)*(12000000/4000.0)));
 10539  0122CE  0E4E               	movlw	78
 10540  0122D0  6E1D               	movwf	??_switch_read& (0+255),c
 10541  0122D2  0EEB               	movlw	235
 10542  0122D4                     u5777:
 10543  0122D4  2EE8               	decfsz	wreg,f,c
 10544  0122D6  D7FE               	bra	u5777
 10545  0122D8  2E1D               	decfsz	??_switch_read& (0+255),f,c
 10546  0122DA  D7FC               	bra	u5777
 10547  0122DC  F000               	nop	
 10548  0122DE                     l3985:
 10549                           
 10550                           ;hopper.c: 144: }
 10551                           ;hopper.c: 145: }
 10552                           ;hopper.c: 146: if(PORTBbits.RB4)
 10553  0122DE  A88E               	btfss	3982,4,c	;volatile
 10554  0122E0  D003               	goto	l3986
 10555                           
 10556                           ;hopper.c: 147: {
 10557                           ;hopper.c: 148: venflags.swclosed = 0;
 10558  0122E2  922F               	bcf	_venflags+2,1,c
 10559                           
 10560                           ;hopper.c: 149: return 0;
 10561  0122E4  0E00               	movlw	0
 10562                           
 10563                           ;hopper.c: 150: }
 10564  0122E6  0012               	return	
 10565  0122E8                     l3986:
 10566                           
 10567                           ;hopper.c: 151: else
 10568                           ;hopper.c: 152: {
 10569                           ;hopper.c: 153: venflags.swclosed = 1;
 10570  0122E8  822F               	bsf	_venflags+2,1,c
 10571                           
 10572                           ;hopper.c: 154: return 1;
 10573  0122EA  0E01               	movlw	1
 10574  0122EC  0012               	return	
 10575  0122EE                     __end_of_switch_read:
 10576                           	opt stack 0
 10577                           tblptru	equ	0xFF8
 10578                           tblptrh	equ	0xFF7
 10579                           tblptrl	equ	0xFF6
 10580                           tablat	equ	0xFF5
 10581                           prodh	equ	0xFF4
 10582                           prodl	equ	0xFF3
 10583                           postinc0	equ	0xFEE
 10584                           wreg	equ	0xFE8
 10585                           indf2	equ	0xFDF
 10586                           postinc2	equ	0xFDE
 10587                           fsr2h	equ	0xFDA
 10588                           fsr2l	equ	0xFD9
 10589                           status	equ	0xFD8
 10590                           
 10591 ;; *************** function _Reset_hopper *****************
 10592 ;; Defined at:
 10593 ;;		line 62 in file "hopper.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;		None
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;		None
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      unsigned char 
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;Total ram usage:        2 bytes
 10612 ;; Hardware stack levels used:    1
 10613 ;; Hardware stack levels required when called:    3
 10614 ;; This function calls:
 10615 ;;		_TMR4_Initialize
 10616 ;;		_cctalk_off
 10617 ;;		_cctalk_on
 10618 ;; This function is called by:
 10619 ;;		_pay_coin
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	text60
 10624  012628                     __ptext60:
 10625                           	opt stack 0
 10626  012628                     _Reset_hopper:
 10627                           	opt stack 23
 10628                           
 10629                           ;hopper.c: 64: hopercount--;
 10630                           
 10631                           ;incstack = 0
 10632  012628  0100               	movlb	0	; () banked
 10633  01262A  07CE               	decf	_hopercount& (0+255),f,b
 10634                           
 10635                           ; BSR set to: 0
 10636                           ;hopper.c: 65: cctalk_off();
 10637  01262C  EC53  F096         	call	_cctalk_off	;wreg free
 10638                           
 10639                           ;hopper.c: 66: _delay((unsigned long)((2000)*(12000000/4000.0)));
 10640  012630  0E1F               	movlw	31
 10641  012632  6E1E               	movwf	(??_Reset_hopper+1)& (0+255),c
 10642  012634  0E71               	movlw	113
 10643  012636  6E1D               	movwf	??_Reset_hopper& (0+255),c
 10644  012638  0E1E               	movlw	30
 10645  01263A                     u5787:
 10646  01263A  2EE8               	decfsz	wreg,f,c
 10647  01263C  D7FE               	bra	u5787
 10648  01263E  2E1D               	decfsz	??_Reset_hopper& (0+255),f,c
 10649  012640  D7FC               	bra	u5787
 10650  012642  2E1E               	decfsz	(??_Reset_hopper+1)& (0+255),f,c
 10651  012644  D7FA               	bra	u5787
 10652  012646  D000               	nop2	
 10653                           
 10654                           ;hopper.c: 67: TMR4_Initialize();
 10655  012648  EC4C  F095         	call	_TMR4_Initialize	;wreg free
 10656                           
 10657                           ;hopper.c: 68: if(hopercount > 0)
 10658  01264C  0100               	movlb	0	; () banked
 10659  01264E  51CE               	movf	_hopercount& (0+255),w,b
 10660  012650  0A80               	xorlw	128
 10661  012652  0F7F               	addlw	-129
 10662  012654  A0D8               	btfss	status,0,c
 10663  012656  D004               	goto	l3954
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;hopper.c: 69: {
 10667                           ;hopper.c: 70: cctalk_on();
 10668  012658  EC51  F096         	call	_cctalk_on	;wreg free
 10669                           
 10670                           ;hopper.c: 71: return 0;
 10671  01265C  0E00               	movlw	0
 10672                           
 10673                           ;hopper.c: 72: }
 10674  01265E  0012               	return	
 10675  012660                     l3954:
 10676                           
 10677                           ;hopper.c: 73: else
 10678                           ;hopper.c: 74: {
 10679                           ;hopper.c: 75: return 1;
 10680  012660  0E01               	movlw	1
 10681  012662  0012               	return	
 10682  012664                     __end_of_Reset_hopper:
 10683                           	opt stack 0
 10684                           tblptru	equ	0xFF8
 10685                           tblptrh	equ	0xFF7
 10686                           tblptrl	equ	0xFF6
 10687                           tablat	equ	0xFF5
 10688                           prodh	equ	0xFF4
 10689                           prodl	equ	0xFF3
 10690                           postinc0	equ	0xFEE
 10691                           wreg	equ	0xFE8
 10692                           indf2	equ	0xFDF
 10693                           postinc2	equ	0xFDE
 10694                           fsr2h	equ	0xFDA
 10695                           fsr2l	equ	0xFD9
 10696                           status	equ	0xFD8
 10697                           
 10698 ;; *************** function _cctalk_on *****************
 10699 ;; Defined at:
 10700 ;;		line 137 in file "cctalk.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;		None
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;		None
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  1    wreg      void 
 10707 ;; Registers used:
 10708 ;;		None
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10718 ;;Total ram usage:        0 bytes
 10719 ;; Hardware stack levels used:    1
 10720 ;; Hardware stack levels required when called:    2
 10721 ;; This function calls:
 10722 ;;		Nothing
 10723 ;; This function is called by:
 10724 ;;		_hopper_pay
 10725 ;;		_Reset_hopper
 10726 ;;		_pay_coin
 10727 ;;		_cctalk_init
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           	psect	text61
 10732  012CA2                     __ptext61:
 10733                           	opt stack 0
 10734  012CA2                     _cctalk_on:
 10735                           	opt stack 24
 10736                           
 10737                           ;cctalk.c: 144: LATCbits.LATC1 = 1;
 10738                           
 10739                           ;incstack = 0
 10740  012CA2  8285               	bsf	3973,1,c	;volatile
 10741  012CA4  0012               	return		;funcret
 10742  012CA6                     __end_of_cctalk_on:
 10743                           	opt stack 0
 10744                           tblptru	equ	0xFF8
 10745                           tblptrh	equ	0xFF7
 10746                           tblptrl	equ	0xFF6
 10747                           tablat	equ	0xFF5
 10748                           prodh	equ	0xFF4
 10749                           prodl	equ	0xFF3
 10750                           postinc0	equ	0xFEE
 10751                           wreg	equ	0xFE8
 10752                           indf2	equ	0xFDF
 10753                           postinc2	equ	0xFDE
 10754                           fsr2h	equ	0xFDA
 10755                           fsr2l	equ	0xFD9
 10756                           status	equ	0xFD8
 10757                           
 10758 ;; *************** function _cctalk_off *****************
 10759 ;; Defined at:
 10760 ;;		line 132 in file "cctalk.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;		None
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;		None
 10765 ;; Return value:  Size  Location     Type
 10766 ;;                  1    wreg      void 
 10767 ;; Registers used:
 10768 ;;		None
 10769 ;; Tracked objects:
 10770 ;;		On entry : 0/0
 10771 ;;		On exit  : 0/0
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;Total ram usage:        0 bytes
 10779 ;; Hardware stack levels used:    1
 10780 ;; Hardware stack levels required when called:    2
 10781 ;; This function calls:
 10782 ;;		Nothing
 10783 ;; This function is called by:
 10784 ;;		_hopper_pay
 10785 ;;		_Reset_hopper
 10786 ;;		_pay_coin
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790                           	psect	text62
 10791  012CA6                     __ptext62:
 10792                           	opt stack 0
 10793  012CA6                     _cctalk_off:
 10794                           	opt stack 24
 10795                           
 10796                           ;cctalk.c: 134: LATCbits.LATC1 = 0;
 10797                           
 10798                           ;incstack = 0
 10799  012CA6  9285               	bcf	3973,1,c	;volatile
 10800  012CA8  0012               	return		;funcret
 10801  012CAA                     __end_of_cctalk_off:
 10802                           	opt stack 0
 10803                           tblptru	equ	0xFF8
 10804                           tblptrh	equ	0xFF7
 10805                           tblptrl	equ	0xFF6
 10806                           tablat	equ	0xFF5
 10807                           prodh	equ	0xFF4
 10808                           prodl	equ	0xFF3
 10809                           postinc0	equ	0xFEE
 10810                           wreg	equ	0xFE8
 10811                           indf2	equ	0xFDF
 10812                           postinc2	equ	0xFDE
 10813                           fsr2h	equ	0xFDA
 10814                           fsr2l	equ	0xFD9
 10815                           status	equ	0xFD8
 10816                           
 10817 ;; *************** function _Update_coinsout *****************
 10818 ;; Defined at:
 10819 ;;		line 158 in file "hopper.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  coinsout        1    wreg     unsigned char 
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;  coinsout        1   28[COMRAM] unsigned char 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      void 
 10826 ;; Registers used:
 10827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10837 ;;Total ram usage:        1 bytes
 10838 ;; Hardware stack levels used:    1
 10839 ;; Hardware stack levels required when called:    4
 10840 ;; This function calls:
 10841 ;;		_Read_NVstore
 10842 ;;		_Write_NVstore
 10843 ;; This function is called by:
 10844 ;;		_hopper_pay
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text63
 10849  012030                     __ptext63:
 10850                           	opt stack 0
 10851  012030                     _Update_coinsout:
 10852                           	opt stack 23
 10853                           
 10854                           ;incstack = 0
 10855                           ;Update_coinsout@coinsout stored from wreg
 10856  012030  6E27               	movwf	Update_coinsout@coinsout,c
 10857                           
 10858                           ;hopper.c: 160: Read_NVstore(cashoutv, ((uint8_t*) &pvcash), 0x02);
 10859  012032  0E0B               	movlw	low _cashoutv
 10860  012034  6EF6               	movwf	tblptrl,c
 10861  012036                     	if	1	;There is more than 1 active tblptr byte
 10862  012036  0EFC               	movlw	high _cashoutv
 10863  012038  6EF7               	movwf	tblptrh,c
 10864  01203A                     	endif
 10865  01203A                     	if	1	;There are 3 active tblptr bytes
 10866  01203A  0E00               	movlw	low (_cashoutv shr (0+16))
 10867  01203C  6EF8               	movwf	tblptru,c
 10868  01203E                     	endif
 10869  01203E  0009               	tblrd		*+
 10870  012040  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 10871  012044  000A               	tblrd		*-
 10872  012046  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 10873  01204A  0E4B               	movlw	low _pvcash
 10874  01204C  6E21               	movwf	Read_NVstore@storemem,c
 10875  01204E  0E00               	movlw	high _pvcash
 10876  012050  6E22               	movwf	Read_NVstore@storemem+1,c
 10877  012052  0E02               	movlw	2
 10878  012054  6E23               	movwf	Read_NVstore@storesize,c
 10879  012056  EC11  F094         	call	_Read_NVstore	;wreg free
 10880                           
 10881                           ;hopper.c: 161: pvcash = pvcash + (uint16_t)coinsout;
 10882  01205A  5027               	movf	Update_coinsout@coinsout,w,c
 10883  01205C  244B               	addwf	_pvcash,w,c	;volatile
 10884  01205E  6E4B               	movwf	_pvcash,c	;volatile
 10885  012060  0E00               	movlw	0
 10886  012062  204C               	addwfc	_pvcash+1,w,c	;volatile
 10887  012064  6E4C               	movwf	_pvcash+1,c	;volatile
 10888                           
 10889                           ;hopper.c: 162: Write_NVstore(cashoutv, ((uint8_t*) &pvcash), 0x02);
 10890  012066  0E0B               	movlw	low _cashoutv
 10891  012068  6EF6               	movwf	tblptrl,c
 10892  01206A                     	if	1	;There is more than 1 active tblptr byte
 10893  01206A  0EFC               	movlw	high _cashoutv
 10894  01206C  6EF7               	movwf	tblptrh,c
 10895  01206E                     	endif
 10896  01206E                     	if	1	;There are 3 active tblptr bytes
 10897  01206E  0E00               	movlw	low (_cashoutv shr (0+16))
 10898  012070  6EF8               	movwf	tblptru,c
 10899  012072                     	endif
 10900  012072  0009               	tblrd		*+
 10901  012074  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 10902  012078  000A               	tblrd		*-
 10903  01207A  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 10904  01207E  0E4B               	movlw	low _pvcash
 10905  012080  6E23               	movwf	Write_NVstore@storemem,c
 10906  012082  0E00               	movlw	high _pvcash
 10907  012084  6E24               	movwf	Write_NVstore@storemem+1,c
 10908  012086  0E02               	movlw	2
 10909  012088  6E25               	movwf	Write_NVstore@storesize,c
 10910  01208A  ECA5  F093         	call	_Write_NVstore	;wreg free
 10911  01208E  0012               	return		;funcret
 10912  012090                     __end_of_Update_coinsout:
 10913                           	opt stack 0
 10914                           tblptru	equ	0xFF8
 10915                           tblptrh	equ	0xFF7
 10916                           tblptrl	equ	0xFF6
 10917                           tablat	equ	0xFF5
 10918                           prodh	equ	0xFF4
 10919                           prodl	equ	0xFF3
 10920                           postinc0	equ	0xFEE
 10921                           wreg	equ	0xFE8
 10922                           indf2	equ	0xFDF
 10923                           postinc2	equ	0xFDE
 10924                           fsr2h	equ	0xFDA
 10925                           fsr2l	equ	0xFD9
 10926                           status	equ	0xFD8
 10927                           
 10928 ;; *************** function _Write_NVstore *****************
 10929 ;; Defined at:
 10930 ;;		line 86 in file "vend.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  storeadd        2   22[COMRAM] unsigned int 
 10933 ;;  storemem        2   24[COMRAM] PTR unsigned char 
 10934 ;;		 -> pnvcash(3), pvcash(2), 
 10935 ;;  storesize       1   26[COMRAM] unsigned char 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  i               1   27[COMRAM] unsigned char 
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      void 
 10940 ;; Registers used:
 10941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10947 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;Total ram usage:        6 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:    3
 10954 ;; This function calls:
 10955 ;;		_DATAEE_WriteByte
 10956 ;; This function is called by:
 10957 ;;		_Update_cashaudit
 10958 ;;		_Update_coinsout
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text64
 10963  01274A                     __ptext64:
 10964                           	opt stack 0
 10965  01274A                     _Write_NVstore:
 10966                           	opt stack 23
 10967                           
 10968                           ;vend.c: 88: uint8_t i = 0;
 10969                           
 10970                           ;incstack = 0
 10971  01274A  0E00               	movlw	0
 10972  01274C  6E26               	movwf	Write_NVstore@i,c
 10973                           
 10974                           ;vend.c: 89: while(i < storesize)
 10975  01274E  D013               	goto	l2166
 10976  012750                     
 10977                           ;vend.c: 90: {
 10978                           ;vend.c: 91: DATAEE_WriteByte(storeadd + i, storemem[i]);
 10979  012750  5026               	movf	Write_NVstore@i,w,c
 10980  012752  2421               	addwf	Write_NVstore@storeadd,w,c
 10981  012754  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
 10982  012756  0E00               	movlw	0
 10983  012758  2022               	addwfc	Write_NVstore@storeadd+1,w,c
 10984  01275A  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
 10985  01275C  5026               	movf	Write_NVstore@i,w,c
 10986  01275E  0D01               	mullw	1
 10987  012760  50F3               	movf	prodl,w,c
 10988  012762  2423               	addwf	Write_NVstore@storemem,w,c
 10989  012764  6ED9               	movwf	fsr2l,c
 10990  012766  50F4               	movf	prodh,w,c
 10991  012768  2024               	addwfc	Write_NVstore@storemem+1,w,c
 10992  01276A  6EDA               	movwf	fsr2h,c
 10993  01276C  50DF               	movf	indf2,w,c
 10994  01276E  6E1F               	movwf	DATAEE_WriteByte@bData,c
 10995  012770  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 10996                           
 10997                           ;vend.c: 92: i++;
 10998  012774  2A26               	incf	Write_NVstore@i,f,c
 10999  012776                     l2166:
 11000  012776  5025               	movf	Write_NVstore@storesize,w,c
 11001  012778  5C26               	subwf	Write_NVstore@i,w,c
 11002  01277A  B0D8               	btfsc	status,0,c
 11003  01277C  0012               	return	
 11004  01277E  D7E8               	goto	l2167
 11005  012780                     __end_of_Write_NVstore:
 11006                           	opt stack 0
 11007                           tblptru	equ	0xFF8
 11008                           tblptrh	equ	0xFF7
 11009                           tblptrl	equ	0xFF6
 11010                           tablat	equ	0xFF5
 11011                           prodh	equ	0xFF4
 11012                           prodl	equ	0xFF3
 11013                           postinc0	equ	0xFEE
 11014                           wreg	equ	0xFE8
 11015                           indf2	equ	0xFDF
 11016                           postinc2	equ	0xFDE
 11017                           fsr2h	equ	0xFDA
 11018                           fsr2l	equ	0xFD9
 11019                           status	equ	0xFD8
 11020                           
 11021 ;; *************** function _Vend_setup *****************
 11022 ;; Defined at:
 11023 ;;		line 425 in file "vend.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;		None
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;		None
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;Total ram usage:        0 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:   11
 11044 ;; This function calls:
 11045 ;;		_Chan_link
 11046 ;;		_Clear_Totals
 11047 ;;		_Init_vendmem
 11048 ;;		_Reset_settings
 11049 ;;		_Sens_off
 11050 ;;		_Vend_settime
 11051 ;;		_butindb
 11052 ;;		_lcd_string
 11053 ;; This function is called by:
 11054 ;;		_enter_service
 11055 ;; This function uses a non-reentrant model
 11056 ;;
 11057                           
 11058                           	psect	text65
 11059  0107EE                     __ptext65:
 11060                           	opt stack 0
 11061  0107EE                     _Vend_setup:
 11062                           	opt stack 18
 11063                           
 11064                           ;vend.c: 427: venflags.vendset = 1;
 11065                           
 11066                           ;incstack = 0
 11067  0107EE  842E               	bsf	_venflags+1,2,c
 11068                           
 11069                           ;vend.c: 428: lcd_string(vendsetup, line1);
 11070  0107F0  0EEE               	movlw	low _vendsetup
 11071  0107F2  6E24               	movwf	lcd_string@lcdstring,c
 11072  0107F4  0EFC               	movlw	high _vendsetup
 11073  0107F6  6E25               	movwf	lcd_string@lcdstring+1,c
 11074  0107F8  0E4A               	movlw	low _line1
 11075  0107FA  6EF6               	movwf	tblptrl,c
 11076  0107FC                     	if	1	;There is more than 1 active tblptr byte
 11077  0107FC  0EFC               	movlw	high _line1
 11078  0107FE  6EF7               	movwf	tblptrh,c
 11079  010800                     	endif
 11080  010800                     	if	1	;There are 3 active tblptr bytes
 11081  010800  0E00               	movlw	low (_line1 shr (0+16))
 11082  010802  6EF8               	movwf	tblptru,c
 11083  010804                     	endif
 11084  010804  0008               	tblrd		*
 11085  010806  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11086  01080A  EC78  F08A         	call	_lcd_string	;wreg free
 11087                           
 11088                           ;vend.c: 429: while(venflags.vendset)
 11089  01080E  D075               	goto	l2295
 11090  010810                     
 11091                           ;vend.c: 430: {
 11092                           ;vend.c: 431: buttons = butindb();
 11093  010810  ECD5  F092         	call	_butindb	;wreg free
 11094  010814  6E38               	movwf	_buttons,c	;volatile
 11095                           
 11096                           ;vend.c: 432: switch(buttons)
 11097  010816  D05E               	goto	l2293
 11098  010818  EC9E  F091         	call	_Vend_settime	;wreg free
 11099                           
 11100                           ;vend.c: 435: lcd_string(vendsetup, line1);
 11101  01081C  0EEE               	movlw	low _vendsetup
 11102  01081E  6E24               	movwf	lcd_string@lcdstring,c
 11103  010820  0EFC               	movlw	high _vendsetup
 11104  010822  6E25               	movwf	lcd_string@lcdstring+1,c
 11105  010824  0E4A               	movlw	low _line1
 11106  010826  6EF6               	movwf	tblptrl,c
 11107  010828                     	if	1	;There is more than 1 active tblptr byte
 11108  010828  0EFC               	movlw	high _line1
 11109  01082A  6EF7               	movwf	tblptrh,c
 11110  01082C                     	endif
 11111  01082C                     	if	1	;There are 3 active tblptr bytes
 11112  01082C  0E00               	movlw	low (_line1 shr (0+16))
 11113  01082E  6EF8               	movwf	tblptru,c
 11114  010830                     	endif
 11115  010830  0008               	tblrd		*
 11116  010832  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11117  010836  EC78  F08A         	call	_lcd_string	;wreg free
 11118                           
 11119                           ;vend.c: 436: break;
 11120  01083A  D05F               	goto	l2295
 11121  01083C  ECB7  F08F         	call	_Chan_link	;wreg free
 11122                           
 11123                           ;vend.c: 438: lcd_string(vendsetup, line1);
 11124  010840  0EEE               	movlw	low _vendsetup
 11125  010842  6E24               	movwf	lcd_string@lcdstring,c
 11126  010844  0EFC               	movlw	high _vendsetup
 11127  010846  6E25               	movwf	lcd_string@lcdstring+1,c
 11128  010848  0E4A               	movlw	low _line1
 11129  01084A  6EF6               	movwf	tblptrl,c
 11130  01084C                     	if	1	;There is more than 1 active tblptr byte
 11131  01084C  0EFC               	movlw	high _line1
 11132  01084E  6EF7               	movwf	tblptrh,c
 11133  010850                     	endif
 11134  010850                     	if	1	;There are 3 active tblptr bytes
 11135  010850  0E00               	movlw	low (_line1 shr (0+16))
 11136  010852  6EF8               	movwf	tblptru,c
 11137  010854                     	endif
 11138  010854  0008               	tblrd		*
 11139  010856  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11140  01085A  EC78  F08A         	call	_lcd_string	;wreg free
 11141                           
 11142                           ;vend.c: 439: break;
 11143  01085E  D04D               	goto	l2295
 11144  010860  EC2F  F08E         	call	_Sens_off	;wreg free
 11145                           
 11146                           ;vend.c: 441: lcd_string(vendsetup, line1);
 11147  010864  0EEE               	movlw	low _vendsetup
 11148  010866  6E24               	movwf	lcd_string@lcdstring,c
 11149  010868  0EFC               	movlw	high _vendsetup
 11150  01086A  6E25               	movwf	lcd_string@lcdstring+1,c
 11151  01086C  0E4A               	movlw	low _line1
 11152  01086E  6EF6               	movwf	tblptrl,c
 11153  010870                     	if	1	;There is more than 1 active tblptr byte
 11154  010870  0EFC               	movlw	high _line1
 11155  010872  6EF7               	movwf	tblptrh,c
 11156  010874                     	endif
 11157  010874                     	if	1	;There are 3 active tblptr bytes
 11158  010874  0E00               	movlw	low (_line1 shr (0+16))
 11159  010876  6EF8               	movwf	tblptru,c
 11160  010878                     	endif
 11161  010878  0008               	tblrd		*
 11162  01087A  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11163  01087E  EC78  F08A         	call	_lcd_string	;wreg free
 11164                           
 11165                           ;vend.c: 442: break;
 11166  010882  D03B               	goto	l2295
 11167  010884  ECF5  F092         	call	_Clear_Totals	;wreg free
 11168                           
 11169                           ;vend.c: 444: break;
 11170  010888  D038               	goto	l2295
 11171  01088A  EC75  F086         	call	_Reset_settings	;wreg free
 11172                           
 11173                           ;vend.c: 446: lcd_string(vendsetup, line1);
 11174  01088E  0EEE               	movlw	low _vendsetup
 11175  010890  6E24               	movwf	lcd_string@lcdstring,c
 11176  010892  0EFC               	movlw	high _vendsetup
 11177  010894  6E25               	movwf	lcd_string@lcdstring+1,c
 11178  010896  0E4A               	movlw	low _line1
 11179  010898  6EF6               	movwf	tblptrl,c
 11180  01089A                     	if	1	;There is more than 1 active tblptr byte
 11181  01089A  0EFC               	movlw	high _line1
 11182  01089C  6EF7               	movwf	tblptrh,c
 11183  01089E                     	endif
 11184  01089E                     	if	1	;There are 3 active tblptr bytes
 11185  01089E  0E00               	movlw	low (_line1 shr (0+16))
 11186  0108A0  6EF8               	movwf	tblptru,c
 11187  0108A2                     	endif
 11188  0108A2  0008               	tblrd		*
 11189  0108A4  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11190  0108A8  EC78  F08A         	call	_lcd_string	;wreg free
 11191                           
 11192                           ;vend.c: 447: break;
 11193  0108AC  D026               	goto	l2295
 11194  0108AE                     l2300:
 11195  0108AE  942E               	bcf	_venflags+1,2,c
 11196                           
 11197                           ;vend.c: 450: Init_vendmem();
 11198  0108B0  EC66  F089         	call	_Init_vendmem	;wreg free
 11199                           
 11200                           ;vend.c: 451: lcd_string(servmsg, line1);
 11201  0108B4  0E59               	movlw	low _servmsg
 11202  0108B6  6E24               	movwf	lcd_string@lcdstring,c
 11203  0108B8  0EFC               	movlw	high _servmsg
 11204  0108BA  6E25               	movwf	lcd_string@lcdstring+1,c
 11205  0108BC  0E4A               	movlw	low _line1
 11206  0108BE  6EF6               	movwf	tblptrl,c
 11207  0108C0                     	if	1	;There is more than 1 active tblptr byte
 11208  0108C0  0EFC               	movlw	high _line1
 11209  0108C2  6EF7               	movwf	tblptrh,c
 11210  0108C4                     	endif
 11211  0108C4                     	if	1	;There are 3 active tblptr bytes
 11212  0108C4  0E00               	movlw	low (_line1 shr (0+16))
 11213  0108C6  6EF8               	movwf	tblptru,c
 11214  0108C8                     	endif
 11215  0108C8  0008               	tblrd		*
 11216  0108CA  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11217  0108CE  EC78  F08A         	call	_lcd_string	;wreg free
 11218                           
 11219                           ;vend.c: 453: }
 11220                           
 11221                           ;vend.c: 452: break;
 11222  0108D2  D013               	goto	l2295
 11223  0108D4                     l2293:
 11224  0108D4  5038               	movf	_buttons,w,c	;volatile
 11225                           
 11226                           ; Switch size 1, requested type "space"
 11227                           ; Number of cases is 6, Range of values is 1 to 128
 11228                           ; switch strategies available:
 11229                           ; Name         Instructions Cycles
 11230                           ; simple_byte           19    10 (average)
 11231                           ;	Chosen strategy is simple_byte
 11232  0108D6  0A01               	xorlw	1	; case 1
 11233  0108D8  B4D8               	btfsc	status,2,c
 11234  0108DA  D79E               	goto	l2294
 11235  0108DC  0A03               	xorlw	3	; case 2
 11236  0108DE  B4D8               	btfsc	status,2,c
 11237  0108E0  D7AD               	goto	l2296
 11238  0108E2  0A06               	xorlw	6	; case 4
 11239  0108E4  B4D8               	btfsc	status,2,c
 11240  0108E6  D7BC               	goto	l2297
 11241  0108E8  0A0C               	xorlw	12	; case 8
 11242  0108EA  B4D8               	btfsc	status,2,c
 11243  0108EC  D7CB               	goto	l2298
 11244  0108EE  0A18               	xorlw	24	; case 16
 11245  0108F0  B4D8               	btfsc	status,2,c
 11246  0108F2  D7CB               	goto	l2299
 11247  0108F4  0A90               	xorlw	144	; case 128
 11248  0108F6  B4D8               	btfsc	status,2,c
 11249  0108F8  D7DA               	goto	l2300
 11250  0108FA                     l2295:
 11251  0108FA  A42E               	btfss	_venflags+1,2,c
 11252  0108FC  0012               	return	
 11253  0108FE  D788               	goto	l2292
 11254  010900                     __end_of_Vend_setup:
 11255                           	opt stack 0
 11256                           tblptru	equ	0xFF8
 11257                           tblptrh	equ	0xFF7
 11258                           tblptrl	equ	0xFF6
 11259                           tablat	equ	0xFF5
 11260                           prodh	equ	0xFF4
 11261                           prodl	equ	0xFF3
 11262                           postinc0	equ	0xFEE
 11263                           wreg	equ	0xFE8
 11264                           indf2	equ	0xFDF
 11265                           postinc2	equ	0xFDE
 11266                           fsr2h	equ	0xFDA
 11267                           fsr2l	equ	0xFD9
 11268                           status	equ	0xFD8
 11269                           
 11270 ;; *************** function _Vend_settime *****************
 11271 ;; Defined at:
 11272 ;;		line 457 in file "vend.c"
 11273 ;; Parameters:    Size  Location     Type
 11274 ;;		None
 11275 ;; Auto vars:     Size  Location     Type
 11276 ;;		None
 11277 ;; Return value:  Size  Location     Type
 11278 ;;                  1    wreg      void 
 11279 ;; Registers used:
 11280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11281 ;; Tracked objects:
 11282 ;;		On entry : 0/0
 11283 ;;		On exit  : 0/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11290 ;;Total ram usage:        0 bytes
 11291 ;; Hardware stack levels used:    1
 11292 ;; Hardware stack levels required when called:   10
 11293 ;; This function calls:
 11294 ;;		_Read_Service
 11295 ;;		_Vend_timeset
 11296 ;;		_butindb
 11297 ;;		_get_channel
 11298 ;;		_lcd_string
 11299 ;; This function is called by:
 11300 ;;		_Vend_setup
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text66
 11305  01233C                     __ptext66:
 11306                           	opt stack 0
 11307  01233C                     _Vend_settime:
 11308                           	opt stack 18
 11309                           
 11310                           ;vend.c: 460: lcd_string(setimemsg, line1);
 11311                           
 11312                           ;incstack = 0
 11313  01233C  0EFD               	movlw	low _setimemsg
 11314  01233E  6E24               	movwf	lcd_string@lcdstring,c
 11315  012340  0EFD               	movlw	high _setimemsg
 11316  012342  6E25               	movwf	lcd_string@lcdstring+1,c
 11317  012344  0E4A               	movlw	low _line1
 11318  012346  6EF6               	movwf	tblptrl,c
 11319  012348                     	if	1	;There is more than 1 active tblptr byte
 11320  012348  0EFC               	movlw	high _line1
 11321  01234A  6EF7               	movwf	tblptrh,c
 11322  01234C                     	endif
 11323  01234C                     	if	1	;There are 3 active tblptr bytes
 11324  01234C  0E00               	movlw	low (_line1 shr (0+16))
 11325  01234E  6EF8               	movwf	tblptru,c
 11326  012350                     	endif
 11327  012350  0008               	tblrd		*
 11328  012352  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11329  012356  EC78  F08A         	call	_lcd_string	;wreg free
 11330                           
 11331                           ;vend.c: 461: buttons = butindb();
 11332  01235A  ECD5  F092         	call	_butindb	;wreg free
 11333  01235E  6E38               	movwf	_buttons,c	;volatile
 11334                           
 11335                           ;vend.c: 462: venflags.settime = 1;
 11336  012360  8C2E               	bsf	_venflags+1,6,c
 11337                           
 11338                           ;vend.c: 464: while(venflags.settime)
 11339  012362  D010               	goto	l2308
 11340  012364                     
 11341                           ;vend.c: 465: {
 11342                           ;vend.c: 466: buttons = butindb();
 11343  012364  ECD5  F092         	call	_butindb	;wreg free
 11344  012368  6E38               	movwf	_buttons,c	;volatile
 11345                           
 11346                           ;vend.c: 467: if(buttons != 0x00)
 11347  01236A  5038               	movf	_buttons,w,c	;volatile
 11348  01236C  B4D8               	btfsc	status,2,c
 11349  01236E  D005               	goto	l2307
 11350                           
 11351                           ;vend.c: 468: {
 11352                           ;vend.c: 469: Vend_timeset(get_channel(buttons));
 11353  012370  5038               	movf	_buttons,w,c	;volatile
 11354  012372  EC3E  F095         	call	_get_channel
 11355  012376  ECDC  F082         	call	_Vend_timeset
 11356  01237A                     l2307:
 11357                           
 11358                           ;vend.c: 470: }
 11359                           ;vend.c: 471: if(Read_Service() == 0x00)
 11360  01237A  EC68  F095         	call	_Read_Service	;wreg free
 11361  01237E  0900               	iorlw	0
 11362  012380  B4D8               	btfsc	status,2,c
 11363                           
 11364                           ;vend.c: 472: {
 11365                           ;vend.c: 473: venflags.settime = 0;
 11366  012382  9C2E               	bcf	_venflags+1,6,c
 11367  012384                     l2308:
 11368  012384  AC2E               	btfss	_venflags+1,6,c
 11369  012386  0012               	return	
 11370  012388  D7ED               	goto	l2306
 11371  01238A                     __end_of_Vend_settime:
 11372                           	opt stack 0
 11373                           tblptru	equ	0xFF8
 11374                           tblptrh	equ	0xFF7
 11375                           tblptrl	equ	0xFF6
 11376                           tablat	equ	0xFF5
 11377                           prodh	equ	0xFF4
 11378                           prodl	equ	0xFF3
 11379                           postinc0	equ	0xFEE
 11380                           wreg	equ	0xFE8
 11381                           indf2	equ	0xFDF
 11382                           postinc2	equ	0xFDE
 11383                           fsr2h	equ	0xFDA
 11384                           fsr2l	equ	0xFD9
 11385                           status	equ	0xFD8
 11386                           
 11387 ;; *************** function _Vend_timeset *****************
 11388 ;; Defined at:
 11389 ;;		line 480 in file "vend.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;  channel         1    wreg     unsigned char 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;  channel         1   15[BANK0 ] unsigned char 
 11394 ;;  chantime        1   14[BANK0 ] unsigned char 
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  1    wreg      void 
 11397 ;; Registers used:
 11398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11399 ;; Tracked objects:
 11400 ;;		On entry : 0/0
 11401 ;;		On exit  : 0/0
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;Total ram usage:        4 bytes
 11409 ;; Hardware stack levels used:    1
 11410 ;; Hardware stack levels required when called:    9
 11411 ;; This function calls:
 11412 ;;		_DATAEE_ReadByte
 11413 ;;		_DATAEE_WriteByte
 11414 ;;		_butindb
 11415 ;;		_displ_time
 11416 ;;		_lcd_string
 11417 ;; This function is called by:
 11418 ;;		_Vend_settime
 11419 ;; This function uses a non-reentrant model
 11420 ;;
 11421                           
 11422                           	psect	text67
 11423  0105B8                     __ptext67:
 11424                           	opt stack 0
 11425  0105B8                     _Vend_timeset:
 11426                           	opt stack 18
 11427                           
 11428                           ;incstack = 0
 11429                           ;Vend_timeset@channel stored from wreg
 11430  0105B8  0100               	movlb	0	; () banked
 11431  0105BA  6FC1               	movwf	Vend_timeset@channel& (0+255),b
 11432                           
 11433                           ;vend.c: 482: venflags.mottime = 1;
 11434  0105BC  882E               	bsf	_venflags+1,4,c
 11435                           
 11436                           ;vend.c: 483: lcd_string(vendtimem, line1);
 11437  0105BE  0ED4               	movlw	low _vendtimem
 11438  0105C0  6E24               	movwf	lcd_string@lcdstring,c
 11439  0105C2  0EFD               	movlw	high _vendtimem
 11440  0105C4  6E25               	movwf	lcd_string@lcdstring+1,c
 11441  0105C6  0E4A               	movlw	low _line1
 11442  0105C8  6EF6               	movwf	tblptrl,c
 11443  0105CA                     	if	1	;There is more than 1 active tblptr byte
 11444  0105CA  0EFC               	movlw	high _line1
 11445  0105CC  6EF7               	movwf	tblptrh,c
 11446  0105CE                     	endif
 11447  0105CE                     	if	1	;There are 3 active tblptr bytes
 11448  0105CE  0E00               	movlw	low (_line1 shr (0+16))
 11449  0105D0  6EF8               	movwf	tblptru,c
 11450  0105D2                     	endif
 11451  0105D2  0008               	tblrd		*
 11452  0105D4  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11453  0105D8  EC78  F08A         	call	_lcd_string	;wreg free
 11454                           
 11455                           ;vend.c: 484: uint8_t chantime = DATAEE_ReadByte(chan1time + channel);
 11456  0105DC  0EF5               	movlw	low _chan1time
 11457  0105DE  6EF6               	movwf	tblptrl,c
 11458  0105E0                     	if	1	;There is more than 1 active tblptr byte
 11459  0105E0  0EFB               	movlw	high _chan1time
 11460  0105E2  6EF7               	movwf	tblptrh,c
 11461  0105E4                     	endif
 11462  0105E4                     	if	1	;There are 3 active tblptr bytes
 11463  0105E4  0E00               	movlw	low (_chan1time shr (0+16))
 11464  0105E6  6EF8               	movwf	tblptru,c
 11465  0105E8                     	endif
 11466  0105E8  0009               	tblrd		*+
 11467  0105EA  CFF5 F0BE          	movff	tablat,??_Vend_timeset
 11468  0105EE  0009               	tblrd		*+
 11469  0105F0  CFF5 F0BF          	movff	tablat,??_Vend_timeset+1
 11470  0105F4  0100               	movlb	0	; () banked
 11471  0105F6  51C1               	movf	Vend_timeset@channel& (0+255),w,b
 11472  0105F8  25BE               	addwf	??_Vend_timeset& (0+255),w,b
 11473  0105FA  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 11474  0105FC  0E00               	movlw	0
 11475  0105FE  21BF               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
 11476  010600  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 11477  010602  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 11478  010606  0100               	movlb	0	; () banked
 11479  010608  6FC0               	movwf	Vend_timeset@chantime& (0+255),b
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;vend.c: 485: displ_time(chantime, channel);
 11483  01060A  C0C1  F02A         	movff	Vend_timeset@channel,displ_time@channel
 11484  01060E  51C0               	movf	Vend_timeset@chantime& (0+255),w,b
 11485  010610  EC0E  F08C         	call	_displ_time
 11486                           
 11487                           ;vend.c: 486: while(venflags.mottime)
 11488  010614  D05D               	goto	l2317
 11489  010616                     
 11490                           ;vend.c: 487: {
 11491                           ;vend.c: 488: buttons = butindb();
 11492  010616  ECD5  F092         	call	_butindb	;wreg free
 11493  01061A  6E38               	movwf	_buttons,c	;volatile
 11494                           
 11495                           ;vend.c: 489: switch(buttons)
 11496  01061C  D04F               	goto	l2315
 11497  01061E  0100               	movlb	0	; () banked
 11498  010620  2BC0               	incf	Vend_timeset@chantime& (0+255),f,b
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;vend.c: 492: DATAEE_WriteByte(chan1time + channel, chantime);
 11502  010622  0EF5               	movlw	low _chan1time
 11503  010624  6EF6               	movwf	tblptrl,c
 11504  010626                     	if	1	;There is more than 1 active tblptr byte
 11505  010626  0EFB               	movlw	high _chan1time
 11506  010628  6EF7               	movwf	tblptrh,c
 11507  01062A                     	endif
 11508  01062A                     	if	1	;There are 3 active tblptr bytes
 11509  01062A  0E00               	movlw	low (_chan1time shr (0+16))
 11510  01062C  6EF8               	movwf	tblptru,c
 11511  01062E                     	endif
 11512  01062E  0009               	tblrd		*+
 11513  010630  CFF5 F0BE          	movff	tablat,??_Vend_timeset
 11514  010634  0009               	tblrd		*+
 11515  010636  CFF5 F0BF          	movff	tablat,??_Vend_timeset+1
 11516  01063A  51C1               	movf	Vend_timeset@channel& (0+255),w,b
 11517  01063C  25BE               	addwf	??_Vend_timeset& (0+255),w,b
 11518  01063E  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
 11519  010640  0E00               	movlw	0
 11520  010642  21BF               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
 11521  010644  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
 11522  010646  C0C0  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
 11523  01064A  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 11524                           
 11525                           ;vend.c: 493: displ_time(chantime, channel);
 11526  01064E  C0C1  F02A         	movff	Vend_timeset@channel,displ_time@channel
 11527  010652  0100               	movlb	0	; () banked
 11528  010654  51C0               	movf	Vend_timeset@chantime& (0+255),w,b
 11529  010656  EC0E  F08C         	call	_displ_time
 11530                           
 11531                           ;vend.c: 494: break;
 11532  01065A  D03A               	goto	l2317
 11533  01065C  0100               	movlb	0	; () banked
 11534  01065E  07C0               	decf	Vend_timeset@chantime& (0+255),f,b
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;vend.c: 496: DATAEE_WriteByte(chan1time + channel, chantime);
 11538  010660  0EF5               	movlw	low _chan1time
 11539  010662  6EF6               	movwf	tblptrl,c
 11540  010664                     	if	1	;There is more than 1 active tblptr byte
 11541  010664  0EFB               	movlw	high _chan1time
 11542  010666  6EF7               	movwf	tblptrh,c
 11543  010668                     	endif
 11544  010668                     	if	1	;There are 3 active tblptr bytes
 11545  010668  0E00               	movlw	low (_chan1time shr (0+16))
 11546  01066A  6EF8               	movwf	tblptru,c
 11547  01066C                     	endif
 11548  01066C  0009               	tblrd		*+
 11549  01066E  CFF5 F0BE          	movff	tablat,??_Vend_timeset
 11550  010672  0009               	tblrd		*+
 11551  010674  CFF5 F0BF          	movff	tablat,??_Vend_timeset+1
 11552  010678  51C1               	movf	Vend_timeset@channel& (0+255),w,b
 11553  01067A  25BE               	addwf	??_Vend_timeset& (0+255),w,b
 11554  01067C  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
 11555  01067E  0E00               	movlw	0
 11556  010680  21BF               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
 11557  010682  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
 11558  010684  C0C0  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
 11559  010688  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 11560                           
 11561                           ;vend.c: 497: displ_time(chantime, channel);
 11562  01068C  C0C1  F02A         	movff	Vend_timeset@channel,displ_time@channel
 11563  010690  0100               	movlb	0	; () banked
 11564  010692  51C0               	movf	Vend_timeset@chantime& (0+255),w,b
 11565  010694  EC0E  F08C         	call	_displ_time
 11566                           
 11567                           ;vend.c: 498: break;
 11568  010698  D01B               	goto	l2317
 11569  01069A                     l2319:
 11570  01069A  982E               	bcf	_venflags+1,4,c
 11571                           
 11572                           ;vend.c: 500: lcd_string(setimemsg, line1);
 11573  01069C  0EFD               	movlw	low _setimemsg
 11574  01069E  6E24               	movwf	lcd_string@lcdstring,c
 11575  0106A0  0EFD               	movlw	high _setimemsg
 11576  0106A2  6E25               	movwf	lcd_string@lcdstring+1,c
 11577  0106A4  0E4A               	movlw	low _line1
 11578  0106A6  6EF6               	movwf	tblptrl,c
 11579  0106A8                     	if	1	;There is more than 1 active tblptr byte
 11580  0106A8  0EFC               	movlw	high _line1
 11581  0106AA  6EF7               	movwf	tblptrh,c
 11582  0106AC                     	endif
 11583  0106AC                     	if	1	;There are 3 active tblptr bytes
 11584  0106AC  0E00               	movlw	low (_line1 shr (0+16))
 11585  0106AE  6EF8               	movwf	tblptru,c
 11586  0106B0                     	endif
 11587  0106B0  0008               	tblrd		*
 11588  0106B2  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11589  0106B6  EC78  F08A         	call	_lcd_string	;wreg free
 11590                           
 11591                           ;vend.c: 502: }
 11592                           
 11593                           ;vend.c: 501: break;
 11594  0106BA  D00A               	goto	l2317
 11595  0106BC                     l2315:
 11596  0106BC  5038               	movf	_buttons,w,c	;volatile
 11597                           
 11598                           ; Switch size 1, requested type "space"
 11599                           ; Number of cases is 3, Range of values is 1 to 128
 11600                           ; switch strategies available:
 11601                           ; Name         Instructions Cycles
 11602                           ; simple_byte           10     6 (average)
 11603                           ;	Chosen strategy is simple_byte
 11604  0106BE  0A01               	xorlw	1	; case 1
 11605  0106C0  B4D8               	btfsc	status,2,c
 11606  0106C2  D7AD               	goto	l2316
 11607  0106C4  0A03               	xorlw	3	; case 2
 11608  0106C6  B4D8               	btfsc	status,2,c
 11609  0106C8  D7C9               	goto	l2318
 11610  0106CA  0A82               	xorlw	130	; case 128
 11611  0106CC  B4D8               	btfsc	status,2,c
 11612  0106CE  D7E5               	goto	l2319
 11613  0106D0                     l2317:
 11614  0106D0  A82E               	btfss	_venflags+1,4,c
 11615  0106D2  0012               	return	
 11616  0106D4  D7A0               	goto	l2314
 11617  0106D6                     __end_of_Vend_timeset:
 11618                           	opt stack 0
 11619                           tblptru	equ	0xFF8
 11620                           tblptrh	equ	0xFF7
 11621                           tblptrl	equ	0xFF6
 11622                           tablat	equ	0xFF5
 11623                           prodh	equ	0xFF4
 11624                           prodl	equ	0xFF3
 11625                           postinc0	equ	0xFEE
 11626                           wreg	equ	0xFE8
 11627                           indf2	equ	0xFDF
 11628                           postinc2	equ	0xFDE
 11629                           fsr2h	equ	0xFDA
 11630                           fsr2l	equ	0xFD9
 11631                           status	equ	0xFD8
 11632                           
 11633 ;; *************** function _displ_time *****************
 11634 ;; Defined at:
 11635 ;;		line 97 in file "lcd.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;  motortime       1    wreg     unsigned char 
 11638 ;;  channel         1   31[COMRAM] unsigned char 
 11639 ;; Auto vars:     Size  Location     Type
 11640 ;;  motortime       1   32[COMRAM] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  1    wreg      void 
 11643 ;; Registers used:
 11644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;Total ram usage:        2 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:    8
 11657 ;; This function calls:
 11658 ;;		_displ_hex
 11659 ;;		_lcd_string
 11660 ;;		_lcd_writeC
 11661 ;; This function is called by:
 11662 ;;		_Vend_timeset
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           	psect	text68
 11667  01181C                     __ptext68:
 11668                           	opt stack 0
 11669  01181C                     _displ_time:
 11670                           	opt stack 18
 11671                           
 11672                           ;incstack = 0
 11673                           ;displ_time@motortime stored from wreg
 11674  01181C  6E2B               	movwf	displ_time@motortime,c
 11675                           
 11676                           ;lcd.c: 99: lcd_string(clrline, line3);
 11677  01181E  0E03               	movlw	low _clrline
 11678  011820  6E24               	movwf	lcd_string@lcdstring,c
 11679  011822  0EFF               	movlw	high _clrline
 11680  011824  6E25               	movwf	lcd_string@lcdstring+1,c
 11681  011826  0E48               	movlw	low _line3
 11682  011828  6EF6               	movwf	tblptrl,c
 11683  01182A                     	if	1	;There is more than 1 active tblptr byte
 11684  01182A  0EFC               	movlw	high _line3
 11685  01182C  6EF7               	movwf	tblptrh,c
 11686  01182E                     	endif
 11687  01182E                     	if	1	;There are 3 active tblptr bytes
 11688  01182E  0E00               	movlw	low (_line3 shr (0+16))
 11689  011830  6EF8               	movwf	tblptru,c
 11690  011832                     	endif
 11691  011832  0008               	tblrd		*
 11692  011834  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11693  011838  EC78  F08A         	call	_lcd_string	;wreg free
 11694                           
 11695                           ;lcd.c: 100: lcd_string(clrline, line4);
 11696  01183C  0E03               	movlw	low _clrline
 11697  01183E  6E24               	movwf	lcd_string@lcdstring,c
 11698  011840  0EFF               	movlw	high _clrline
 11699  011842  6E25               	movwf	lcd_string@lcdstring+1,c
 11700  011844  0E47               	movlw	low _line4
 11701  011846  6EF6               	movwf	tblptrl,c
 11702  011848                     	if	1	;There is more than 1 active tblptr byte
 11703  011848  0EFC               	movlw	high _line4
 11704  01184A  6EF7               	movwf	tblptrh,c
 11705  01184C                     	endif
 11706  01184C                     	if	1	;There are 3 active tblptr bytes
 11707  01184C  0E00               	movlw	low (_line4 shr (0+16))
 11708  01184E  6EF8               	movwf	tblptru,c
 11709  011850                     	endif
 11710  011850  0008               	tblrd		*
 11711  011852  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11712  011856  EC78  F08A         	call	_lcd_string	;wreg free
 11713                           
 11714                           ;lcd.c: 101: lcd_string(chanmsg, line3);
 11715  01185A  0E66               	movlw	low _chanmsg
 11716  01185C  6E24               	movwf	lcd_string@lcdstring,c
 11717  01185E  0EFF               	movlw	high _chanmsg
 11718  011860  6E25               	movwf	lcd_string@lcdstring+1,c
 11719  011862  0E48               	movlw	low _line3
 11720  011864  6EF6               	movwf	tblptrl,c
 11721  011866                     	if	1	;There is more than 1 active tblptr byte
 11722  011866  0EFC               	movlw	high _line3
 11723  011868  6EF7               	movwf	tblptrh,c
 11724  01186A                     	endif
 11725  01186A                     	if	1	;There are 3 active tblptr bytes
 11726  01186A  0E00               	movlw	low (_line3 shr (0+16))
 11727  01186C  6EF8               	movwf	tblptru,c
 11728  01186E                     	endif
 11729  01186E  0008               	tblrd		*
 11730  011870  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11731  011874  EC78  F08A         	call	_lcd_string	;wreg free
 11732                           
 11733                           ;lcd.c: 102: lcd_writeC(channel++ | 0x30);
 11734  011878  502A               	movf	displ_time@channel,w,c
 11735  01187A  0930               	iorlw	48
 11736  01187C  EC84  F08F         	call	_lcd_writeC
 11737  011880  2A2A               	incf	displ_time@channel,f,c
 11738                           
 11739                           ;lcd.c: 103: lcd_string(timemsg, line4);
 11740  011882  0E18               	movlw	low _timemsg
 11741  011884  6E24               	movwf	lcd_string@lcdstring,c
 11742  011886  0EFF               	movlw	high _timemsg
 11743  011888  6E25               	movwf	lcd_string@lcdstring+1,c
 11744  01188A  0E47               	movlw	low _line4
 11745  01188C  6EF6               	movwf	tblptrl,c
 11746  01188E                     	if	1	;There is more than 1 active tblptr byte
 11747  01188E  0EFC               	movlw	high _line4
 11748  011890  6EF7               	movwf	tblptrh,c
 11749  011892                     	endif
 11750  011892                     	if	1	;There are 3 active tblptr bytes
 11751  011892  0E00               	movlw	low (_line4 shr (0+16))
 11752  011894  6EF8               	movwf	tblptru,c
 11753  011896                     	endif
 11754  011896  0008               	tblrd		*
 11755  011898  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11756  01189C  EC78  F08A         	call	_lcd_string	;wreg free
 11757                           
 11758                           ;lcd.c: 104: displ_hex((uint8_t) motortime);
 11759  0118A0  502B               	movf	displ_time@motortime,w,c
 11760  0118A2  6E27               	movwf	displ_hex@hexnum,c
 11761  0118A4  6A28               	clrf	displ_hex@hexnum+1,c
 11762  0118A6  6A29               	clrf	displ_hex@hexnum+2,c
 11763  0118A8  ECC3  F089         	call	_displ_hex	;wreg free
 11764  0118AC  0012               	return		;funcret
 11765  0118AE                     __end_of_displ_time:
 11766                           	opt stack 0
 11767                           tblptru	equ	0xFF8
 11768                           tblptrh	equ	0xFF7
 11769                           tblptrl	equ	0xFF6
 11770                           tablat	equ	0xFF5
 11771                           prodh	equ	0xFF4
 11772                           prodl	equ	0xFF3
 11773                           postinc0	equ	0xFEE
 11774                           wreg	equ	0xFE8
 11775                           indf2	equ	0xFDF
 11776                           postinc2	equ	0xFDE
 11777                           fsr2h	equ	0xFDA
 11778                           fsr2l	equ	0xFD9
 11779                           status	equ	0xFD8
 11780                           
 11781 ;; *************** function _Sens_off *****************
 11782 ;; Defined at:
 11783 ;;		line 562 in file "vend.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;		None
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;		None
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  1    wreg      void 
 11790 ;; Registers used:
 11791 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;Total ram usage:        2 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:   10
 11804 ;; This function calls:
 11805 ;;		_Read_Service
 11806 ;;		_butindb
 11807 ;;		_get_channel
 11808 ;;		_lcd_string
 11809 ;;		_off_sens
 11810 ;; This function is called by:
 11811 ;;		_Vend_setup
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           	psect	text69
 11816  011C5E                     __ptext69:
 11817                           	opt stack 0
 11818  011C5E                     _Sens_off:
 11819                           	opt stack 18
 11820                           
 11821                           ;vend.c: 564: _delay((unsigned long)((250)*(12000000/4000.0)));
 11822                           
 11823                           ;incstack = 0
 11824  011C5E  0E04               	movlw	4
 11825  011C60  0100               	movlb	0	; () banked
 11826  011C62  6FB6               	movwf	(??_Sens_off+1)& (0+255),b
 11827  011C64  0ECF               	movlw	207
 11828  011C66  6FB5               	movwf	??_Sens_off& (0+255),b
 11829  011C68  0E01               	movlw	1
 11830  011C6A                     u5797:
 11831  011C6A  2EE8               	decfsz	wreg,f,c
 11832  011C6C  D7FE               	bra	u5797
 11833  011C6E  2FB5               	decfsz	??_Sens_off& (0+255),f,b
 11834  011C70  D7FC               	bra	u5797
 11835  011C72  2FB6               	decfsz	(??_Sens_off+1)& (0+255),f,b
 11836  011C74  D7FA               	bra	u5797
 11837  011C76  D000               	nop2	
 11838                           
 11839                           ;vend.c: 565: buttons = butindb();
 11840  011C78  ECD5  F092         	call	_butindb	;wreg free
 11841  011C7C  D002               	goto	L14
 11842  011C7E                     
 11843                           ;vend.c: 567: {
 11844                           ;vend.c: 568: buttons = butindb();
 11845  011C7E  ECD5  F092         	call	_butindb	;wreg free
 11846  011C82                     L14:
 11847  011C82  6E38               	movwf	_buttons,c	;volatile
 11848  011C84  0E04               	movlw	4
 11849  011C86  1838               	xorwf	_buttons,w,c	;volatile
 11850  011C88  B4D8               	btfsc	status,2,c
 11851  011C8A  D7F9               	goto	l2345
 11852                           
 11853                           ;vend.c: 569: }
 11854                           ;vend.c: 570: venflags.nosense = 1;
 11855  011C8C  8A2E               	bsf	_venflags+1,5,c
 11856                           
 11857                           ;vend.c: 571: lcd_string(setimemsg, line1);
 11858  011C8E  0EFD               	movlw	low _setimemsg
 11859  011C90  6E24               	movwf	lcd_string@lcdstring,c
 11860  011C92  0EFD               	movlw	high _setimemsg
 11861  011C94  6E25               	movwf	lcd_string@lcdstring+1,c
 11862  011C96  0E4A               	movlw	low _line1
 11863  011C98  6EF6               	movwf	tblptrl,c
 11864  011C9A                     	if	1	;There is more than 1 active tblptr byte
 11865  011C9A  0EFC               	movlw	high _line1
 11866  011C9C  6EF7               	movwf	tblptrh,c
 11867  011C9E                     	endif
 11868  011C9E                     	if	1	;There are 3 active tblptr bytes
 11869  011C9E  0E00               	movlw	low (_line1 shr (0+16))
 11870  011CA0  6EF8               	movwf	tblptru,c
 11871  011CA2                     	endif
 11872  011CA2  0008               	tblrd		*
 11873  011CA4  CFF5 F026          	movff	tablat,lcd_string@lcdline
 11874  011CA8  EC78  F08A         	call	_lcd_string	;wreg free
 11875                           
 11876                           ;vend.c: 572: buttons = butindb();
 11877  011CAC  ECD5  F092         	call	_butindb	;wreg free
 11878  011CB0  6E38               	movwf	_buttons,c	;volatile
 11879                           
 11880                           ;vend.c: 573: while(venflags.nosense)
 11881  011CB2  D010               	goto	l2350
 11882  011CB4                     
 11883                           ;vend.c: 574: {
 11884                           ;vend.c: 575: buttons = butindb();
 11885  011CB4  ECD5  F092         	call	_butindb	;wreg free
 11886  011CB8  6E38               	movwf	_buttons,c	;volatile
 11887                           
 11888                           ;vend.c: 576: if(buttons != 0x00)
 11889  011CBA  5038               	movf	_buttons,w,c	;volatile
 11890  011CBC  B4D8               	btfsc	status,2,c
 11891  011CBE  D005               	goto	l2349
 11892                           
 11893                           ;vend.c: 577: {
 11894                           ;vend.c: 578: off_sens(get_channel(buttons));
 11895  011CC0  5038               	movf	_buttons,w,c	;volatile
 11896  011CC2  EC3E  F095         	call	_get_channel
 11897  011CC6  EC82  F085         	call	_off_sens
 11898  011CCA                     l2349:
 11899                           
 11900                           ;vend.c: 579: }
 11901                           ;vend.c: 580: if(Read_Service() == 0x00)
 11902  011CCA  EC68  F095         	call	_Read_Service	;wreg free
 11903  011CCE  0900               	iorlw	0
 11904  011CD0  B4D8               	btfsc	status,2,c
 11905                           
 11906                           ;vend.c: 581: {
 11907                           ;vend.c: 582: venflags.nosense = 0;
 11908  011CD2  9A2E               	bcf	_venflags+1,5,c
 11909  011CD4                     l2350:
 11910  011CD4  AA2E               	btfss	_venflags+1,5,c
 11911  011CD6  0012               	return	
 11912  011CD8  D7ED               	goto	l2348
 11913  011CDA                     __end_of_Sens_off:
 11914                           	opt stack 0
 11915                           tblptru	equ	0xFF8
 11916                           tblptrh	equ	0xFF7
 11917                           tblptrl	equ	0xFF6
 11918                           tablat	equ	0xFF5
 11919                           prodh	equ	0xFF4
 11920                           prodl	equ	0xFF3
 11921                           postinc0	equ	0xFEE
 11922                           wreg	equ	0xFE8
 11923                           indf2	equ	0xFDF
 11924                           postinc2	equ	0xFDE
 11925                           fsr2h	equ	0xFDA
 11926                           fsr2l	equ	0xFD9
 11927                           status	equ	0xFD8
 11928                           
 11929 ;; *************** function _off_sens *****************
 11930 ;; Defined at:
 11931 ;;		line 589 in file "vend.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;  channel         1    wreg     unsigned char 
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;  channel         1    0[BANK0 ] unsigned char 
 11936 ;;  senseflags      1    2[BANK0 ] unsigned char 
 11937 ;;  chanbit         1    1[BANK0 ] unsigned char 
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;Total ram usage:        3 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    9
 11954 ;; This function calls:
 11955 ;;		_DATAEE_ReadByte
 11956 ;;		_DATAEE_WriteByte
 11957 ;;		_butindb
 11958 ;;		_displ_sflags
 11959 ;;		_lcd_string
 11960 ;; This function is called by:
 11961 ;;		_Sens_off
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text70
 11966  010B04                     __ptext70:
 11967                           	opt stack 0
 11968  010B04                     _off_sens:
 11969                           	opt stack 18
 11970                           
 11971                           ;incstack = 0
 11972                           ;off_sens@channel stored from wreg
 11973  010B04  0100               	movlb	0	; () banked
 11974  010B06  6FB2               	movwf	off_sens@channel& (0+255),b
 11975                           
 11976                           ;vend.c: 591: uint8_t chanbit = buttons;
 11977  010B08  C038  F0B3         	movff	_buttons,off_sens@chanbit	;volatile
 11978                           
 11979                           ;vend.c: 592: venflags.sensno = 1;
 11980  010B0C  8E2E               	bsf	_venflags+1,7,c
 11981                           
 11982                           ;vend.c: 593: uint8_t senseflags = DATAEE_ReadByte(sensorflags);
 11983  010B0E  0EF7               	movlw	low _sensorflags
 11984  010B10  6EF6               	movwf	tblptrl,c
 11985  010B12                     	if	1	;There is more than 1 active tblptr byte
 11986  010B12  0EFB               	movlw	high _sensorflags
 11987  010B14  6EF7               	movwf	tblptrh,c
 11988  010B16                     	endif
 11989  010B16                     	if	1	;There are 3 active tblptr bytes
 11990  010B16  0E00               	movlw	low (_sensorflags shr (0+16))
 11991  010B18  6EF8               	movwf	tblptru,c
 11992  010B1A                     	endif
 11993  010B1A  0009               	tblrd		*+
 11994  010B1C  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 11995  010B20  000A               	tblrd		*-
 11996  010B22  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 11997  010B26  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 11998  010B2A  0100               	movlb	0	; () banked
 11999  010B2C  6FB4               	movwf	off_sens@senseflags& (0+255),b
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;vend.c: 594: displ_sflags(senseflags, channel, chanbit);
 12003  010B2E  C0B2  F029         	movff	off_sens@channel,displ_sflags@chanel
 12004  010B32  C0B3  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
 12005  010B36  51B4               	movf	off_sens@senseflags& (0+255),w,b
 12006  010B38  EC1E  F08A         	call	_displ_sflags
 12007                           
 12008                           ;vend.c: 596: while(venflags.sensno)
 12009  010B3C  D05A               	goto	l2359
 12010  010B3E                     
 12011                           ;vend.c: 597: {
 12012                           ;vend.c: 598: buttons = butindb();
 12013  010B3E  ECD5  F092         	call	_butindb	;wreg free
 12014  010B42  6E38               	movwf	_buttons,c	;volatile
 12015                           
 12016                           ;vend.c: 599: switch(buttons)
 12017  010B44  D04C               	goto	l2357
 12018  010B46  0100               	movlb	0	; () banked
 12019  010B48  51B3               	movf	off_sens@chanbit& (0+255),w,b
 12020  010B4A  0AFF               	xorlw	255
 12021  010B4C  15B4               	andwf	off_sens@senseflags& (0+255),w,b
 12022  010B4E  6FB4               	movwf	off_sens@senseflags& (0+255),b
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;vend.c: 603: DATAEE_WriteByte(sensorflags, senseflags);
 12026  010B50  0EF7               	movlw	low _sensorflags
 12027  010B52  6EF6               	movwf	tblptrl,c
 12028  010B54                     	if	1	;There is more than 1 active tblptr byte
 12029  010B54  0EFB               	movlw	high _sensorflags
 12030  010B56  6EF7               	movwf	tblptrh,c
 12031  010B58                     	endif
 12032  010B58                     	if	1	;There are 3 active tblptr bytes
 12033  010B58  0E00               	movlw	low (_sensorflags shr (0+16))
 12034  010B5A  6EF8               	movwf	tblptru,c
 12035  010B5C                     	endif
 12036  010B5C  0009               	tblrd		*+
 12037  010B5E  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12038  010B62  000A               	tblrd		*-
 12039  010B64  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12040  010B68  C0B4  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
 12041  010B6C  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12042                           
 12043                           ;vend.c: 604: displ_sflags(senseflags, channel, chanbit);
 12044  010B70  C0B2  F029         	movff	off_sens@channel,displ_sflags@chanel
 12045  010B74  C0B3  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
 12046  010B78  0100               	movlb	0	; () banked
 12047  010B7A  51B4               	movf	off_sens@senseflags& (0+255),w,b
 12048  010B7C  EC1E  F08A         	call	_displ_sflags
 12049                           
 12050                           ;vend.c: 605: break;
 12051  010B80  D038               	goto	l2359
 12052  010B82  0100               	movlb	0	; () banked
 12053  010B84  51B4               	movf	off_sens@senseflags& (0+255),w,b
 12054  010B86  11B3               	iorwf	off_sens@chanbit& (0+255),w,b
 12055  010B88  6FB4               	movwf	off_sens@senseflags& (0+255),b
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;vend.c: 608: DATAEE_WriteByte(sensorflags, senseflags);
 12059  010B8A  0EF7               	movlw	low _sensorflags
 12060  010B8C  6EF6               	movwf	tblptrl,c
 12061  010B8E                     	if	1	;There is more than 1 active tblptr byte
 12062  010B8E  0EFB               	movlw	high _sensorflags
 12063  010B90  6EF7               	movwf	tblptrh,c
 12064  010B92                     	endif
 12065  010B92                     	if	1	;There are 3 active tblptr bytes
 12066  010B92  0E00               	movlw	low (_sensorflags shr (0+16))
 12067  010B94  6EF8               	movwf	tblptru,c
 12068  010B96                     	endif
 12069  010B96  0009               	tblrd		*+
 12070  010B98  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12071  010B9C  000A               	tblrd		*-
 12072  010B9E  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12073  010BA2  C0B4  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
 12074  010BA6  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12075                           
 12076                           ;vend.c: 609: displ_sflags(senseflags, channel, chanbit);
 12077  010BAA  C0B2  F029         	movff	off_sens@channel,displ_sflags@chanel
 12078  010BAE  C0B3  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
 12079  010BB2  0100               	movlb	0	; () banked
 12080  010BB4  51B4               	movf	off_sens@senseflags& (0+255),w,b
 12081  010BB6  EC1E  F08A         	call	_displ_sflags
 12082                           
 12083                           ;vend.c: 610: break;
 12084  010BBA  D01B               	goto	l2359
 12085  010BBC                     l2361:
 12086  010BBC  9E2E               	bcf	_venflags+1,7,c
 12087                           
 12088                           ;vend.c: 612: lcd_string(setimemsg, line1);
 12089  010BBE  0EFD               	movlw	low _setimemsg
 12090  010BC0  6E24               	movwf	lcd_string@lcdstring,c
 12091  010BC2  0EFD               	movlw	high _setimemsg
 12092  010BC4  6E25               	movwf	lcd_string@lcdstring+1,c
 12093  010BC6  0E4A               	movlw	low _line1
 12094  010BC8  6EF6               	movwf	tblptrl,c
 12095  010BCA                     	if	1	;There is more than 1 active tblptr byte
 12096  010BCA  0EFC               	movlw	high _line1
 12097  010BCC  6EF7               	movwf	tblptrh,c
 12098  010BCE                     	endif
 12099  010BCE                     	if	1	;There are 3 active tblptr bytes
 12100  010BCE  0E00               	movlw	low (_line1 shr (0+16))
 12101  010BD0  6EF8               	movwf	tblptru,c
 12102  010BD2                     	endif
 12103  010BD2  0008               	tblrd		*
 12104  010BD4  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12105  010BD8  EC78  F08A         	call	_lcd_string	;wreg free
 12106                           
 12107                           ;vend.c: 614: }
 12108                           
 12109                           ;vend.c: 613: break;
 12110  010BDC  D00A               	goto	l2359
 12111  010BDE                     l2357:
 12112  010BDE  5038               	movf	_buttons,w,c	;volatile
 12113                           
 12114                           ; Switch size 1, requested type "space"
 12115                           ; Number of cases is 3, Range of values is 1 to 128
 12116                           ; switch strategies available:
 12117                           ; Name         Instructions Cycles
 12118                           ; simple_byte           10     6 (average)
 12119                           ;	Chosen strategy is simple_byte
 12120  010BE0  0A01               	xorlw	1	; case 1
 12121  010BE2  B4D8               	btfsc	status,2,c
 12122  010BE4  D7B0               	goto	l2358
 12123  010BE6  0A03               	xorlw	3	; case 2
 12124  010BE8  B4D8               	btfsc	status,2,c
 12125  010BEA  D7CB               	goto	l2360
 12126  010BEC  0A82               	xorlw	130	; case 128
 12127  010BEE  B4D8               	btfsc	status,2,c
 12128  010BF0  D7E5               	goto	l2361
 12129  010BF2                     l2359:
 12130  010BF2  AE2E               	btfss	_venflags+1,7,c
 12131  010BF4  0012               	return	
 12132  010BF6  D7A3               	goto	l2356
 12133  010BF8                     __end_of_off_sens:
 12134                           	opt stack 0
 12135                           tblptru	equ	0xFF8
 12136                           tblptrh	equ	0xFF7
 12137                           tblptrl	equ	0xFF6
 12138                           tablat	equ	0xFF5
 12139                           prodh	equ	0xFF4
 12140                           prodl	equ	0xFF3
 12141                           postinc0	equ	0xFEE
 12142                           wreg	equ	0xFE8
 12143                           indf2	equ	0xFDF
 12144                           postinc2	equ	0xFDE
 12145                           fsr2h	equ	0xFDA
 12146                           fsr2l	equ	0xFD9
 12147                           status	equ	0xFD8
 12148                           
 12149 ;; *************** function _displ_sflags *****************
 12150 ;; Defined at:
 12151 ;;		line 78 in file "lcd.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  senseflags      1    wreg     unsigned char 
 12154 ;;  chanel          1   30[COMRAM] unsigned char 
 12155 ;;  chanbit         1   31[COMRAM] unsigned char 
 12156 ;; Auto vars:     Size  Location     Type
 12157 ;;  senseflags      1   32[COMRAM] unsigned char 
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  1    wreg      void 
 12160 ;; Registers used:
 12161 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;Total ram usage:        3 bytes
 12172 ;; Hardware stack levels used:    1
 12173 ;; Hardware stack levels required when called:    8
 12174 ;; This function calls:
 12175 ;;		_lcd_string
 12176 ;;		_lcd_writeC
 12177 ;; This function is called by:
 12178 ;;		_off_sens
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           	psect	text71
 12183  01143C                     __ptext71:
 12184                           	opt stack 0
 12185  01143C                     _displ_sflags:
 12186                           	opt stack 18
 12187                           
 12188                           ;incstack = 0
 12189                           ;displ_sflags@senseflags stored from wreg
 12190  01143C  6E2B               	movwf	displ_sflags@senseflags,c
 12191                           
 12192                           ;lcd.c: 81: lcd_string(chanmsg, line1);
 12193  01143E  0E66               	movlw	low _chanmsg
 12194  011440  6E24               	movwf	lcd_string@lcdstring,c
 12195  011442  0EFF               	movlw	high _chanmsg
 12196  011444  6E25               	movwf	lcd_string@lcdstring+1,c
 12197  011446  0E4A               	movlw	low _line1
 12198  011448  6EF6               	movwf	tblptrl,c
 12199  01144A                     	if	1	;There is more than 1 active tblptr byte
 12200  01144A  0EFC               	movlw	high _line1
 12201  01144C  6EF7               	movwf	tblptrh,c
 12202  01144E                     	endif
 12203  01144E                     	if	1	;There are 3 active tblptr bytes
 12204  01144E  0E00               	movlw	low (_line1 shr (0+16))
 12205  011450  6EF8               	movwf	tblptru,c
 12206  011452                     	endif
 12207  011452  0008               	tblrd		*
 12208  011454  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12209  011458  EC78  F08A         	call	_lcd_string	;wreg free
 12210                           
 12211                           ;lcd.c: 82: lcd_writeC(++chanel | 0x30);
 12212  01145C  2A29               	incf	displ_sflags@chanel,f,c
 12213  01145E  5029               	movf	displ_sflags@chanel,w,c
 12214  011460  0930               	iorlw	48
 12215  011462  EC84  F08F         	call	_lcd_writeC
 12216                           
 12217                           ;lcd.c: 83: lcd_string(sensmsg, line2);
 12218  011466  0E7E               	movlw	low _sensmsg
 12219  011468  6E24               	movwf	lcd_string@lcdstring,c
 12220  01146A  0EFF               	movlw	high _sensmsg
 12221  01146C  6E25               	movwf	lcd_string@lcdstring+1,c
 12222  01146E  0E49               	movlw	low _line2
 12223  011470  6EF6               	movwf	tblptrl,c
 12224  011472                     	if	1	;There is more than 1 active tblptr byte
 12225  011472  0EFC               	movlw	high _line2
 12226  011474  6EF7               	movwf	tblptrh,c
 12227  011476                     	endif
 12228  011476                     	if	1	;There are 3 active tblptr bytes
 12229  011476  0E00               	movlw	low (_line2 shr (0+16))
 12230  011478  6EF8               	movwf	tblptru,c
 12231  01147A                     	endif
 12232  01147A  0008               	tblrd		*
 12233  01147C  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12234  011480  EC78  F08A         	call	_lcd_string	;wreg free
 12235                           
 12236                           ;lcd.c: 84: lcd_string(sensoffmsg, line3);
 12237  011484  0EB3               	movlw	low _sensoffmsg
 12238  011486  6E24               	movwf	lcd_string@lcdstring,c
 12239  011488  0EFE               	movlw	high _sensoffmsg
 12240  01148A  6E25               	movwf	lcd_string@lcdstring+1,c
 12241  01148C  0E48               	movlw	low _line3
 12242  01148E  6EF6               	movwf	tblptrl,c
 12243  011490                     	if	1	;There is more than 1 active tblptr byte
 12244  011490  0EFC               	movlw	high _line3
 12245  011492  6EF7               	movwf	tblptrh,c
 12246  011494                     	endif
 12247  011494                     	if	1	;There are 3 active tblptr bytes
 12248  011494  0E00               	movlw	low (_line3 shr (0+16))
 12249  011496  6EF8               	movwf	tblptru,c
 12250  011498                     	endif
 12251  011498  0008               	tblrd		*
 12252  01149A  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12253  01149E  EC78  F08A         	call	_lcd_string	;wreg free
 12254                           
 12255                           ;lcd.c: 86: if((senseflags & chanbit) != 0)
 12256  0114A2  502B               	movf	displ_sflags@senseflags,w,c
 12257  0114A4  142A               	andwf	displ_sflags@chanbit,w,c
 12258  0114A6  0900               	iorlw	0
 12259  0114A8  B4D8               	btfsc	status,2,c
 12260  0114AA  D011               	goto	l1582
 12261                           
 12262                           ;lcd.c: 87: {
 12263                           ;lcd.c: 88: lcd_string(disabled, line2 + 10);
 12264  0114AC  0E9D               	movlw	low _disabled
 12265  0114AE  6E24               	movwf	lcd_string@lcdstring,c
 12266  0114B0  0EFF               	movlw	high _disabled
 12267  0114B2  6E25               	movwf	lcd_string@lcdstring+1,c
 12268  0114B4  0E49               	movlw	low _line2
 12269  0114B6  6EF6               	movwf	tblptrl,c
 12270  0114B8                     	if	1	;There is more than 1 active tblptr byte
 12271  0114B8  0EFC               	movlw	high _line2
 12272  0114BA  6EF7               	movwf	tblptrh,c
 12273  0114BC                     	endif
 12274  0114BC                     	if	1	;There are 3 active tblptr bytes
 12275  0114BC  0E00               	movlw	low (_line2 shr (0+16))
 12276  0114BE  6EF8               	movwf	tblptru,c
 12277  0114C0                     	endif
 12278  0114C0  0008               	tblrd		*
 12279  0114C2  50F5               	movf	tablat,w,c
 12280  0114C4  0F0A               	addlw	10
 12281  0114C6  6E26               	movwf	lcd_string@lcdline,c
 12282  0114C8  EC78  F08A         	call	_lcd_string	;wreg free
 12283                           
 12284                           ;lcd.c: 89: }
 12285  0114CC  0012               	return	
 12286  0114CE                     l1582:
 12287                           
 12288                           ;lcd.c: 90: else
 12289                           ;lcd.c: 91: {
 12290                           ;lcd.c: 92: lcd_string(enabled, line2 + 10);
 12291  0114CE  0EA7               	movlw	low _enabled
 12292  0114D0  6E24               	movwf	lcd_string@lcdstring,c
 12293  0114D2  0EFF               	movlw	high _enabled
 12294  0114D4  6E25               	movwf	lcd_string@lcdstring+1,c
 12295  0114D6  0E49               	movlw	low _line2
 12296  0114D8  6EF6               	movwf	tblptrl,c
 12297  0114DA                     	if	1	;There is more than 1 active tblptr byte
 12298  0114DA  0EFC               	movlw	high _line2
 12299  0114DC  6EF7               	movwf	tblptrh,c
 12300  0114DE                     	endif
 12301  0114DE                     	if	1	;There are 3 active tblptr bytes
 12302  0114DE  0E00               	movlw	low (_line2 shr (0+16))
 12303  0114E0  6EF8               	movwf	tblptru,c
 12304  0114E2                     	endif
 12305  0114E2  0008               	tblrd		*
 12306  0114E4  50F5               	movf	tablat,w,c
 12307  0114E6  0F0A               	addlw	10
 12308  0114E8  6E26               	movwf	lcd_string@lcdline,c
 12309  0114EA  EC78  F08A         	call	_lcd_string	;wreg free
 12310  0114EE  0012               	return	
 12311  0114F0                     __end_of_displ_sflags:
 12312                           	opt stack 0
 12313                           tblptru	equ	0xFF8
 12314                           tblptrh	equ	0xFF7
 12315                           tblptrl	equ	0xFF6
 12316                           tablat	equ	0xFF5
 12317                           prodh	equ	0xFF4
 12318                           prodl	equ	0xFF3
 12319                           postinc0	equ	0xFEE
 12320                           wreg	equ	0xFE8
 12321                           indf2	equ	0xFDF
 12322                           postinc2	equ	0xFDE
 12323                           fsr2h	equ	0xFDA
 12324                           fsr2l	equ	0xFD9
 12325                           status	equ	0xFD8
 12326                           
 12327 ;; *************** function _Reset_settings *****************
 12328 ;; Defined at:
 12329 ;;		line 618 in file "vend.c"
 12330 ;; Parameters:    Size  Location     Type
 12331 ;;		None
 12332 ;; Auto vars:     Size  Location     Type
 12333 ;;  chantimebits    2    2[BANK0 ] unsigned int 
 12334 ;;  chanlinkbits    2    0[BANK0 ] unsigned int 
 12335 ;; Return value:  Size  Location     Type
 12336 ;;                  1    wreg      void 
 12337 ;; Registers used:
 12338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12339 ;; Tracked objects:
 12340 ;;		On entry : 0/0
 12341 ;;		On exit  : 0/0
 12342 ;;		Unchanged: 0/0
 12343 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Totals:         2       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;Total ram usage:        6 bytes
 12349 ;; Hardware stack levels used:    1
 12350 ;; Hardware stack levels required when called:    8
 12351 ;; This function calls:
 12352 ;;		_DATAEE_WriteByte
 12353 ;;		_lcd_string
 12354 ;; This function is called by:
 12355 ;;		_Vend_setup
 12356 ;; This function uses a non-reentrant model
 12357 ;;
 12358                           
 12359                           	psect	text72
 12360  010CEA                     __ptext72:
 12361                           	opt stack 0
 12362  010CEA                     _Reset_settings:
 12363                           	opt stack 20
 12364                           
 12365                           ;vend.c: 620: lcd_string(chanresetmsg, line1);
 12366                           
 12367                           ;incstack = 0
 12368  010CEA  0E93               	movlw	low _chanresetmsg
 12369  010CEC  6E24               	movwf	lcd_string@lcdstring,c
 12370  010CEE  0EFE               	movlw	high _chanresetmsg
 12371  010CF0  6E25               	movwf	lcd_string@lcdstring+1,c
 12372  010CF2  0E4A               	movlw	low _line1
 12373  010CF4  6EF6               	movwf	tblptrl,c
 12374  010CF6                     	if	1	;There is more than 1 active tblptr byte
 12375  010CF6  0EFC               	movlw	high _line1
 12376  010CF8  6EF7               	movwf	tblptrh,c
 12377  010CFA                     	endif
 12378  010CFA                     	if	1	;There are 3 active tblptr bytes
 12379  010CFA  0E00               	movlw	low (_line1 shr (0+16))
 12380  010CFC  6EF8               	movwf	tblptru,c
 12381  010CFE                     	endif
 12382  010CFE  0008               	tblrd		*
 12383  010D00  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12384  010D04  EC78  F08A         	call	_lcd_string	;wreg free
 12385                           
 12386                           ;vend.c: 621: uint16_t chanlinkbits = chan1linkbits;
 12387  010D08  0E07               	movlw	low _chan1linkbits
 12388  010D0A  6EF6               	movwf	tblptrl,c
 12389  010D0C                     	if	1	;There is more than 1 active tblptr byte
 12390  010D0C  0EFC               	movlw	high _chan1linkbits
 12391  010D0E  6EF7               	movwf	tblptrh,c
 12392  010D10                     	endif
 12393  010D10                     	if	1	;There are 3 active tblptr bytes
 12394  010D10  0E00               	movlw	low (_chan1linkbits shr (0+16))
 12395  010D12  6EF8               	movwf	tblptru,c
 12396  010D14                     	endif
 12397  010D14  0009               	tblrd		*+
 12398  010D16  CFF5 F0B2          	movff	tablat,Reset_settings@chanlinkbits
 12399  010D1A  000A               	tblrd		*-
 12400  010D1C  CFF5 F0B3          	movff	tablat,Reset_settings@chanlinkbits+1
 12401                           
 12402                           ;vend.c: 622: while(chanlinkbits < chan1time)
 12403  010D20  D00B               	goto	l2366
 12404  010D22                     
 12405                           ;vend.c: 623: {
 12406                           ;vend.c: 625: DATAEE_WriteByte(chanlinkbits, 0x00);
 12407  010D22  C0B2  F01D         	movff	Reset_settings@chanlinkbits,DATAEE_WriteByte@bAdd
 12408  010D26  C0B3  F01E         	movff	Reset_settings@chanlinkbits+1,DATAEE_WriteByte@bAdd+1
 12409  010D2A  0E00               	movlw	0
 12410  010D2C  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12411  010D2E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12412                           
 12413                           ;vend.c: 626: chanlinkbits++;
 12414  010D32  0100               	movlb	0	; () banked
 12415  010D34  4BB2               	infsnz	Reset_settings@chanlinkbits& (0+255),f,b
 12416  010D36  2BB3               	incf	(Reset_settings@chanlinkbits+1)& (0+255),f,b
 12417  010D38                     l2366:
 12418                           
 12419                           ; BSR set to: 0
 12420  010D38  0EF5               	movlw	low _chan1time
 12421  010D3A  6EF6               	movwf	tblptrl,c
 12422  010D3C                     	if	1	;There is more than 1 active tblptr byte
 12423  010D3C  0EFB               	movlw	high _chan1time
 12424  010D3E  6EF7               	movwf	tblptrh,c
 12425  010D40                     	endif
 12426  010D40                     	if	1	;There are 3 active tblptr bytes
 12427  010D40  0E00               	movlw	low (_chan1time shr (0+16))
 12428  010D42  6EF8               	movwf	tblptru,c
 12429  010D44                     	endif
 12430  010D44  0009               	tblrd		*+
 12431  010D46  50F5               	movf	tablat,w,c
 12432  010D48  0100               	movlb	0	; () banked
 12433  010D4A  5DB2               	subwf	Reset_settings@chanlinkbits& (0+255),w,b
 12434  010D4C  0009               	tblrd		*+
 12435  010D4E  50F5               	movf	tablat,w,c
 12436  010D50  59B3               	subwfb	(Reset_settings@chanlinkbits+1)& (0+255),w,b
 12437  010D52  A0D8               	btfss	status,0,c
 12438  010D54  D7E6               	goto	l2367
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;vend.c: 627: }
 12442                           ;vend.c: 628: uint16_t chantimebits = chan1time;
 12443                           
 12444                           ; BSR set to: 0
 12445  010D56  0EF5               	movlw	low _chan1time
 12446  010D58  6EF6               	movwf	tblptrl,c
 12447  010D5A                     	if	1	;There is more than 1 active tblptr byte
 12448  010D5A  0EFB               	movlw	high _chan1time
 12449  010D5C  6EF7               	movwf	tblptrh,c
 12450  010D5E                     	endif
 12451  010D5E                     	if	1	;There are 3 active tblptr bytes
 12452  010D5E  0E00               	movlw	low (_chan1time shr (0+16))
 12453  010D60  6EF8               	movwf	tblptru,c
 12454  010D62                     	endif
 12455  010D62  0009               	tblrd		*+
 12456  010D64  CFF5 F0B4          	movff	tablat,Reset_settings@chantimebits
 12457  010D68  000A               	tblrd		*-
 12458  010D6A  CFF5 F0B5          	movff	tablat,Reset_settings@chantimebits+1
 12459                           
 12460                           ;vend.c: 629: while(chantimebits < nosentime)
 12461  010D6E  D00B               	goto	l2369
 12462  010D70                     
 12463                           ; BSR set to: 0
 12464                           ;vend.c: 630: {
 12465                           ;vend.c: 632: DATAEE_WriteByte(chantimebits, 0x08);
 12466                           
 12467                           ; BSR set to: 0
 12468  010D70  C0B4  F01D         	movff	Reset_settings@chantimebits,DATAEE_WriteByte@bAdd
 12469  010D74  C0B5  F01E         	movff	Reset_settings@chantimebits+1,DATAEE_WriteByte@bAdd+1
 12470  010D78  0E08               	movlw	8
 12471  010D7A  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12472  010D7C  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12473                           
 12474                           ;vend.c: 633: chantimebits++;
 12475  010D80  0100               	movlb	0	; () banked
 12476  010D82  4BB4               	infsnz	Reset_settings@chantimebits& (0+255),f,b
 12477  010D84  2BB5               	incf	(Reset_settings@chantimebits+1)& (0+255),f,b
 12478  010D86                     l2369:
 12479                           
 12480                           ; BSR set to: 0
 12481                           
 12482                           ; BSR set to: 0
 12483  010D86  0EE5               	movlw	low _nosentime
 12484  010D88  6EF6               	movwf	tblptrl,c
 12485  010D8A                     	if	1	;There is more than 1 active tblptr byte
 12486  010D8A  0EFB               	movlw	high _nosentime
 12487  010D8C  6EF7               	movwf	tblptrh,c
 12488  010D8E                     	endif
 12489  010D8E                     	if	1	;There are 3 active tblptr bytes
 12490  010D8E  0E00               	movlw	low (_nosentime shr (0+16))
 12491  010D90  6EF8               	movwf	tblptru,c
 12492  010D92                     	endif
 12493  010D92  0009               	tblrd		*+
 12494  010D94  50F5               	movf	tablat,w,c
 12495  010D96  5DB4               	subwf	Reset_settings@chantimebits& (0+255),w,b
 12496  010D98  0009               	tblrd		*+
 12497  010D9A  50F5               	movf	tablat,w,c
 12498  010D9C  59B5               	subwfb	(Reset_settings@chantimebits+1)& (0+255),w,b
 12499  010D9E  A0D8               	btfss	status,0,c
 12500  010DA0  D7E7               	goto	l2370
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;vend.c: 634: }
 12504                           ;vend.c: 635: DATAEE_WriteByte(sensorflags, 0x05);
 12505                           
 12506                           ; BSR set to: 0
 12507  010DA2  0EF7               	movlw	low _sensorflags
 12508  010DA4  6EF6               	movwf	tblptrl,c
 12509  010DA6                     	if	1	;There is more than 1 active tblptr byte
 12510  010DA6  0EFB               	movlw	high _sensorflags
 12511  010DA8  6EF7               	movwf	tblptrh,c
 12512  010DAA                     	endif
 12513  010DAA                     	if	1	;There are 3 active tblptr bytes
 12514  010DAA  0E00               	movlw	low (_sensorflags shr (0+16))
 12515  010DAC  6EF8               	movwf	tblptru,c
 12516  010DAE                     	endif
 12517  010DAE  0009               	tblrd		*+
 12518  010DB0  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12519  010DB4  000A               	tblrd		*-
 12520  010DB6  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12521  010DBA  0E05               	movlw	5
 12522  010DBC  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12523  010DBE  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12524                           
 12525                           ;vend.c: 636: _delay((unsigned long)((2000)*(12000000/4000.0)));
 12526  010DC2  0E1F               	movlw	31
 12527  010DC4  6E2A               	movwf	(??_Reset_settings+1)& (0+255),c
 12528  010DC6  0E71               	movlw	113
 12529  010DC8  6E29               	movwf	??_Reset_settings& (0+255),c
 12530  010DCA  0E1E               	movlw	30
 12531  010DCC                     u5807:
 12532  010DCC  2EE8               	decfsz	wreg,f,c
 12533  010DCE  D7FE               	bra	u5807
 12534  010DD0  2E29               	decfsz	??_Reset_settings& (0+255),f,c
 12535  010DD2  D7FC               	bra	u5807
 12536  010DD4  2E2A               	decfsz	(??_Reset_settings+1)& (0+255),f,c
 12537  010DD6  D7FA               	bra	u5807
 12538  010DD8  D000               	nop2	
 12539  010DDA  0012               	return		;funcret
 12540  010DDC                     __end_of_Reset_settings:
 12541                           	opt stack 0
 12542                           tblptru	equ	0xFF8
 12543                           tblptrh	equ	0xFF7
 12544                           tblptrl	equ	0xFF6
 12545                           tablat	equ	0xFF5
 12546                           prodh	equ	0xFF4
 12547                           prodl	equ	0xFF3
 12548                           postinc0	equ	0xFEE
 12549                           wreg	equ	0xFE8
 12550                           indf2	equ	0xFDF
 12551                           postinc2	equ	0xFDE
 12552                           fsr2h	equ	0xFDA
 12553                           fsr2l	equ	0xFD9
 12554                           status	equ	0xFD8
 12555                           
 12556 ;; *************** function _Init_vendmem *****************
 12557 ;; Defined at:
 12558 ;;		line 9 in file "vend.c"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;		None
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;  chanlink        2   24[COMRAM] PTR unsigned char 
 12563 ;;		 -> chanlink1(1), 
 12564 ;;  chanlinkbits    2   22[COMRAM] unsigned int 
 12565 ;;  i               1   26[COMRAM] unsigned char 
 12566 ;; Return value:  Size  Location     Type
 12567 ;;                  1    wreg      void 
 12568 ;; Registers used:
 12569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12570 ;; Tracked objects:
 12571 ;;		On entry : 0/0
 12572 ;;		On exit  : 0/0
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12576 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;Total ram usage:        7 bytes
 12580 ;; Hardware stack levels used:    1
 12581 ;; Hardware stack levels required when called:    3
 12582 ;; This function calls:
 12583 ;;		_DATAEE_ReadByte
 12584 ;; This function is called by:
 12585 ;;		_vend_init
 12586 ;;		_Vend_setup
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590                           	psect	text73
 12591  0112CC                     __ptext73:
 12592                           	opt stack 0
 12593  0112CC                     _Init_vendmem:
 12594                           	opt stack 26
 12595                           
 12596                           ;vend.c: 12: ((uint8_t*) &senschk)[0] = DATAEE_ReadByte(sensorflags);
 12597                           
 12598                           ;incstack = 0
 12599  0112CC  0EF7               	movlw	low _sensorflags
 12600  0112CE  6EF6               	movwf	tblptrl,c
 12601  0112D0                     	if	1	;There is more than 1 active tblptr byte
 12602  0112D0  0EFB               	movlw	high _sensorflags
 12603  0112D2  6EF7               	movwf	tblptrh,c
 12604  0112D4                     	endif
 12605  0112D4                     	if	1	;There are 3 active tblptr bytes
 12606  0112D4  0E00               	movlw	low (_sensorflags shr (0+16))
 12607  0112D6  6EF8               	movwf	tblptru,c
 12608  0112D8                     	endif
 12609  0112D8  0009               	tblrd		*+
 12610  0112DA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 12611  0112DE  000A               	tblrd		*-
 12612  0112E0  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 12613  0112E4  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 12614  0112E8  0100               	movlb	0	; () banked
 12615  0112EA  6FA8               	movwf	_senschk& (0+255),b
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;vend.c: 14: uint16_t chanlinkbits = chan1linkbits;
 12619  0112EC  0E07               	movlw	low _chan1linkbits
 12620  0112EE  6EF6               	movwf	tblptrl,c
 12621  0112F0                     	if	1	;There is more than 1 active tblptr byte
 12622  0112F0  0EFC               	movlw	high _chan1linkbits
 12623  0112F2  6EF7               	movwf	tblptrh,c
 12624  0112F4                     	endif
 12625  0112F4                     	if	1	;There are 3 active tblptr bytes
 12626  0112F4  0E00               	movlw	low (_chan1linkbits shr (0+16))
 12627  0112F6  6EF8               	movwf	tblptru,c
 12628  0112F8                     	endif
 12629  0112F8  0009               	tblrd		*+
 12630  0112FA  CFF5 F021          	movff	tablat,Init_vendmem@chanlinkbits
 12631  0112FE  000A               	tblrd		*-
 12632  011300  CFF5 F022          	movff	tablat,Init_vendmem@chanlinkbits+1
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;vend.c: 15: uint8_t *chanlink = ((uint8_t*) &chanlink1);
 12636  011304  0E03               	movlw	3
 12637  011306  6E23               	movwf	Init_vendmem@chanlink,c
 12638  011308  0E00               	movlw	0
 12639  01130A  6E24               	movwf	Init_vendmem@chanlink+1,c
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;vend.c: 16: char i = 0;
 12643  01130C  0E00               	movlw	0
 12644  01130E  6E25               	movwf	Init_vendmem@i,c
 12645                           
 12646                           ;vend.c: 17: while(i < 8)
 12647  011310  D012               	goto	l2150
 12648  011312                     
 12649                           ;vend.c: 18: {
 12650                           ;vend.c: 19: chanlink[i] = DATAEE_ReadByte(chanlinkbits + i);
 12651                           
 12652                           ; BSR set to: 0
 12653  011312  5025               	movf	Init_vendmem@i,w,c
 12654  011314  0D01               	mullw	1
 12655  011316  50F3               	movf	prodl,w,c
 12656  011318  2423               	addwf	Init_vendmem@chanlink,w,c
 12657  01131A  6ED9               	movwf	fsr2l,c
 12658  01131C  50F4               	movf	prodh,w,c
 12659  01131E  2024               	addwfc	Init_vendmem@chanlink+1,w,c
 12660  011320  6EDA               	movwf	fsr2h,c
 12661  011322  5025               	movf	Init_vendmem@i,w,c
 12662  011324  2421               	addwf	Init_vendmem@chanlinkbits,w,c
 12663  011326  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 12664  011328  0E00               	movlw	0
 12665  01132A  2022               	addwfc	Init_vendmem@chanlinkbits+1,w,c
 12666  01132C  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 12667  01132E  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 12668  011332  6EDF               	movwf	indf2,c
 12669                           
 12670                           ;vend.c: 20: i++;
 12671  011334  2A25               	incf	Init_vendmem@i,f,c
 12672  011336                     l2150:
 12673  011336  0E07               	movlw	7
 12674  011338  6425               	cpfsgt	Init_vendmem@i,c
 12675  01133A  D7EB               	goto	l2151
 12676                           
 12677                           ;vend.c: 21: }
 12678                           ;vend.c: 23: i = 0;
 12679  01133C  0E00               	movlw	0
 12680  01133E  6E25               	movwf	Init_vendmem@i,c
 12681                           
 12682                           ;vend.c: 24: while(i < 8)
 12683  011340  D01E               	goto	l2153
 12684  011342                     
 12685                           ;vend.c: 25: {
 12686                           ;vend.c: 26: pricevend[i] = DATAEE_ReadByte(pricestore + i);
 12687  011342  5025               	movf	Init_vendmem@i,w,c
 12688  011344  0D01               	mullw	1
 12689  011346  0E7F               	movlw	low _pricevend
 12690  011348  24F3               	addwf	prodl,w,c
 12691  01134A  6ED9               	movwf	fsr2l,c
 12692  01134C  0E00               	movlw	high _pricevend
 12693  01134E  20F4               	addwfc	prodh,w,c
 12694  011350  6EDA               	movwf	fsr2h,c
 12695  011352  0E13               	movlw	low _pricestore
 12696  011354  6EF6               	movwf	tblptrl,c
 12697  011356                     	if	1	;There is more than 1 active tblptr byte
 12698  011356  0EFC               	movlw	high _pricestore
 12699  011358  6EF7               	movwf	tblptrh,c
 12700  01135A                     	endif
 12701  01135A                     	if	1	;There are 3 active tblptr bytes
 12702  01135A  0E00               	movlw	low (_pricestore shr (0+16))
 12703  01135C  6EF8               	movwf	tblptru,c
 12704  01135E                     	endif
 12705  01135E  0009               	tblrd		*+
 12706  011360  CFF5 F01F          	movff	tablat,??_Init_vendmem
 12707  011364  0009               	tblrd		*+
 12708  011366  CFF5 F020          	movff	tablat,??_Init_vendmem+1
 12709  01136A  5025               	movf	Init_vendmem@i,w,c
 12710  01136C  241F               	addwf	??_Init_vendmem,w,c
 12711  01136E  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 12712  011370  0E00               	movlw	0
 12713  011372  2020               	addwfc	??_Init_vendmem+1,w,c
 12714  011374  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 12715  011376  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 12716  01137A  6EDF               	movwf	indf2,c
 12717                           
 12718                           ;vend.c: 27: i++;
 12719  01137C  2A25               	incf	Init_vendmem@i,f,c
 12720  01137E                     l2153:
 12721  01137E  0E07               	movlw	7
 12722  011380  6425               	cpfsgt	Init_vendmem@i,c
 12723  011382  D7DF               	goto	l2154
 12724  011384  0012               	return	
 12725  011386                     __end_of_Init_vendmem:
 12726                           	opt stack 0
 12727                           tblptru	equ	0xFF8
 12728                           tblptrh	equ	0xFF7
 12729                           tblptrl	equ	0xFF6
 12730                           tablat	equ	0xFF5
 12731                           prodh	equ	0xFF4
 12732                           prodl	equ	0xFF3
 12733                           postinc0	equ	0xFEE
 12734                           wreg	equ	0xFE8
 12735                           indf2	equ	0xFDF
 12736                           postinc2	equ	0xFDE
 12737                           fsr2h	equ	0xFDA
 12738                           fsr2l	equ	0xFD9
 12739                           status	equ	0xFD8
 12740                           
 12741 ;; *************** function _Clear_Totals *****************
 12742 ;; Defined at:
 12743 ;;		line 228 in file "vend.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;  eeaddress       2   22[COMRAM] unsigned int 
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12761 ;;Total ram usage:        2 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:    3
 12764 ;; This function calls:
 12765 ;;		_DATAEE_WriteByte
 12766 ;; This function is called by:
 12767 ;;		_Vend_setup
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           	psect	text74
 12772  0125EA                     __ptext74:
 12773                           	opt stack 0
 12774  0125EA                     _Clear_Totals:
 12775                           	opt stack 25
 12776                           
 12777                           ;vend.c: 230: uint16_t eeaddress = cashinv;
 12778                           
 12779                           ;incstack = 0
 12780  0125EA  0E19               	movlw	low _cashinv
 12781  0125EC  6EF6               	movwf	tblptrl,c
 12782  0125EE                     	if	1	;There is more than 1 active tblptr byte
 12783  0125EE  0EFC               	movlw	high _cashinv
 12784  0125F0  6EF7               	movwf	tblptrh,c
 12785  0125F2                     	endif
 12786  0125F2                     	if	1	;There are 3 active tblptr bytes
 12787  0125F2  0E00               	movlw	low (_cashinv shr (0+16))
 12788  0125F4  6EF8               	movwf	tblptru,c
 12789  0125F6                     	endif
 12790  0125F6  0009               	tblrd		*+
 12791  0125F8  CFF5 F021          	movff	tablat,Clear_Totals@eeaddress
 12792  0125FC  000A               	tblrd		*-
 12793  0125FE  CFF5 F022          	movff	tablat,Clear_Totals@eeaddress+1
 12794                           
 12795                           ;vend.c: 231: while(eeaddress < 0x0C)
 12796  012602  D00A               	goto	l2216
 12797  012604                     
 12798                           ;vend.c: 232: {
 12799                           ;vend.c: 233: DATAEE_WriteByte(eeaddress, 0x00);
 12800  012604  C021  F01D         	movff	Clear_Totals@eeaddress,DATAEE_WriteByte@bAdd
 12801  012608  C022  F01E         	movff	Clear_Totals@eeaddress+1,DATAEE_WriteByte@bAdd+1
 12802  01260C  0E00               	movlw	0
 12803  01260E  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12804  012610  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 12805                           
 12806                           ;vend.c: 234: eeaddress++;
 12807  012614  4A21               	infsnz	Clear_Totals@eeaddress,f,c
 12808  012616  2A22               	incf	Clear_Totals@eeaddress+1,f,c
 12809  012618                     l2216:
 12810  012618  5022               	movf	Clear_Totals@eeaddress+1,w,c
 12811  01261A  E104               	bnz	u4580
 12812  01261C  0E0C               	movlw	12
 12813  01261E  5C21               	subwf	Clear_Totals@eeaddress,w,c
 12814  012620  A0D8               	btfss	status,0,c
 12815  012622  D7F0               	goto	l2217
 12816  012624                     u4580:
 12817  012624  00FF               	reset		;# 
 12818  012626  0012               	return		;funcret
 12819  012628                     __end_of_Clear_Totals:
 12820                           	opt stack 0
 12821                           tblptru	equ	0xFF8
 12822                           tblptrh	equ	0xFF7
 12823                           tblptrl	equ	0xFF6
 12824                           tablat	equ	0xFF5
 12825                           prodh	equ	0xFF4
 12826                           prodl	equ	0xFF3
 12827                           postinc0	equ	0xFEE
 12828                           wreg	equ	0xFE8
 12829                           indf2	equ	0xFDF
 12830                           postinc2	equ	0xFDE
 12831                           fsr2h	equ	0xFDA
 12832                           fsr2l	equ	0xFD9
 12833                           status	equ	0xFD8
 12834                           
 12835 ;; *************** function _Chan_link *****************
 12836 ;; Defined at:
 12837 ;;		line 507 in file "vend.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;		None
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;		None
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  1    wreg      void 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12853 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;Total ram usage:        2 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:   10
 12858 ;; This function calls:
 12859 ;;		_Link_chan
 12860 ;;		_Read_Service
 12861 ;;		_butindb
 12862 ;;		_get_channel
 12863 ;;		_lcd_string
 12864 ;; This function is called by:
 12865 ;;		_Vend_setup
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           	psect	text75
 12870  011F6E                     __ptext75:
 12871                           	opt stack 0
 12872  011F6E                     _Chan_link:
 12873                           	opt stack 18
 12874                           
 12875                           ;vend.c: 509: lcd_string(chanlinkm, line1);
 12876                           
 12877                           ;incstack = 0
 12878  011F6E  0E6A               	movlw	low _chanlinkm
 12879  011F70  6E24               	movwf	lcd_string@lcdstring,c
 12880  011F72  0EFD               	movlw	high _chanlinkm
 12881  011F74  6E25               	movwf	lcd_string@lcdstring+1,c
 12882  011F76  0E4A               	movlw	low _line1
 12883  011F78  6EF6               	movwf	tblptrl,c
 12884  011F7A                     	if	1	;There is more than 1 active tblptr byte
 12885  011F7A  0EFC               	movlw	high _line1
 12886  011F7C  6EF7               	movwf	tblptrh,c
 12887  011F7E                     	endif
 12888  011F7E                     	if	1	;There are 3 active tblptr bytes
 12889  011F7E  0E00               	movlw	low (_line1 shr (0+16))
 12890  011F80  6EF8               	movwf	tblptru,c
 12891  011F82                     	endif
 12892  011F82  0008               	tblrd		*
 12893  011F84  CFF5 F026          	movff	tablat,lcd_string@lcdline
 12894  011F88  EC78  F08A         	call	_lcd_string	;wreg free
 12895                           
 12896                           ;vend.c: 510: venflags.chanlink = 1;
 12897  011F8C  862E               	bsf	_venflags+1,3,c
 12898                           
 12899                           ;vend.c: 511: while(venflags.chanlink)
 12900  011F8E  D01D               	goto	l2327
 12901  011F90                     
 12902                           ;vend.c: 512: {
 12903                           ;vend.c: 513: buttons = butindb();
 12904  011F90  ECD5  F092         	call	_butindb	;wreg free
 12905  011F94  6E38               	movwf	_buttons,c	;volatile
 12906                           
 12907                           ;vend.c: 514: if(buttons != 0x00)
 12908  011F96  5038               	movf	_buttons,w,c	;volatile
 12909  011F98  B4D8               	btfsc	status,2,c
 12910  011F9A  D012               	goto	l2326
 12911                           
 12912                           ;vend.c: 515: {
 12913                           ;vend.c: 516: Link_chan(get_channel(buttons));
 12914  011F9C  5038               	movf	_buttons,w,c	;volatile
 12915  011F9E  EC3E  F095         	call	_get_channel
 12916  011FA2  EC5E  F087         	call	_Link_chan
 12917                           
 12918                           ;vend.c: 517: _delay((unsigned long)((1000)*(12000000/4000.0)));
 12919  011FA6  0E10               	movlw	16
 12920  011FA8  0100               	movlb	0	; () banked
 12921  011FAA  6FB8               	movwf	(??_Chan_link+1)& (0+255),b
 12922  011FAC  0E39               	movlw	57
 12923  011FAE  6FB7               	movwf	??_Chan_link& (0+255),b
 12924  011FB0  0E0D               	movlw	13
 12925  011FB2                     u5817:
 12926  011FB2  2EE8               	decfsz	wreg,f,c
 12927  011FB4  D7FE               	bra	u5817
 12928  011FB6  2FB7               	decfsz	??_Chan_link& (0+255),f,b
 12929  011FB8  D7FC               	bra	u5817
 12930  011FBA  2FB8               	decfsz	(??_Chan_link+1)& (0+255),f,b
 12931  011FBC  D7FA               	bra	u5817
 12932  011FBE  D000               	nop2	
 12933  011FC0                     l2326:
 12934                           
 12935                           ;vend.c: 518: }
 12936                           ;vend.c: 519: if(Read_Service() == 0x00)
 12937  011FC0  EC68  F095         	call	_Read_Service	;wreg free
 12938  011FC4  0900               	iorlw	0
 12939  011FC6  B4D8               	btfsc	status,2,c
 12940                           
 12941                           ;vend.c: 520: {
 12942                           ;vend.c: 521: venflags.chanlink = 0;
 12943  011FC8  962E               	bcf	_venflags+1,3,c
 12944  011FCA                     l2327:
 12945  011FCA  A62E               	btfss	_venflags+1,3,c
 12946  011FCC  0012               	return	
 12947  011FCE  D7E0               	goto	l2325
 12948  011FD0                     __end_of_Chan_link:
 12949                           	opt stack 0
 12950                           tblptru	equ	0xFF8
 12951                           tblptrh	equ	0xFF7
 12952                           tblptrl	equ	0xFF6
 12953                           tablat	equ	0xFF5
 12954                           prodh	equ	0xFF4
 12955                           prodl	equ	0xFF3
 12956                           postinc0	equ	0xFEE
 12957                           wreg	equ	0xFE8
 12958                           indf2	equ	0xFDF
 12959                           postinc2	equ	0xFDE
 12960                           fsr2h	equ	0xFDA
 12961                           fsr2l	equ	0xFD9
 12962                           status	equ	0xFD8
 12963                           
 12964 ;; *************** function _Link_chan *****************
 12965 ;; Defined at:
 12966 ;;		line 528 in file "vend.c"
 12967 ;; Parameters:    Size  Location     Type
 12968 ;;  channel         1    wreg     unsigned char 
 12969 ;; Auto vars:     Size  Location     Type
 12970 ;;  channel         1    3[BANK0 ] unsigned char 
 12971 ;;  linkflags       1    4[BANK0 ] unsigned char 
 12972 ;;  chanbit         1    2[BANK0 ] unsigned char 
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  1    wreg      void 
 12975 ;; Registers used:
 12976 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12977 ;; Tracked objects:
 12978 ;;		On entry : 0/0
 12979 ;;		On exit  : 0/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12986 ;;Total ram usage:        5 bytes
 12987 ;; Hardware stack levels used:    1
 12988 ;; Hardware stack levels required when called:    9
 12989 ;; This function calls:
 12990 ;;		_DATAEE_ReadByte
 12991 ;;		_DATAEE_WriteByte
 12992 ;;		_Read_Service
 12993 ;;		_butindb
 12994 ;;		_displ_lflags
 12995 ;;		_lcd_string
 12996 ;; This function is called by:
 12997 ;;		_Chan_link
 12998 ;; This function uses a non-reentrant model
 12999 ;;
 13000                           
 13001                           	psect	text76
 13002  010EBC                     __ptext76:
 13003                           	opt stack 0
 13004  010EBC                     _Link_chan:
 13005                           	opt stack 18
 13006                           
 13007                           ;incstack = 0
 13008                           ;Link_chan@channel stored from wreg
 13009  010EBC  0100               	movlb	0	; () banked
 13010  010EBE  6FB5               	movwf	Link_chan@channel& (0+255),b
 13011                           
 13012                           ;vend.c: 530: venflags.linkchan = 1;
 13013  010EC0  802F               	bsf	_venflags+2,0,c
 13014                           
 13015                           ;vend.c: 531: uint8_t chanbit = buttons;
 13016  010EC2  C038  F0B4         	movff	_buttons,Link_chan@chanbit	;volatile
 13017                           
 13018                           ;vend.c: 532: uint8_t linkflags = DATAEE_ReadByte(chan1linkbits + channel);
 13019  010EC6  0E07               	movlw	low _chan1linkbits
 13020  010EC8  6EF6               	movwf	tblptrl,c
 13021  010ECA                     	if	1	;There is more than 1 active tblptr byte
 13022  010ECA  0EFC               	movlw	high _chan1linkbits
 13023  010ECC  6EF7               	movwf	tblptrh,c
 13024  010ECE                     	endif
 13025  010ECE                     	if	1	;There are 3 active tblptr bytes
 13026  010ECE  0E00               	movlw	low (_chan1linkbits shr (0+16))
 13027  010ED0  6EF8               	movwf	tblptru,c
 13028  010ED2                     	endif
 13029  010ED2  0009               	tblrd		*+
 13030  010ED4  CFF5 F0B2          	movff	tablat,??_Link_chan
 13031  010ED8  0009               	tblrd		*+
 13032  010EDA  CFF5 F0B3          	movff	tablat,??_Link_chan+1
 13033  010EDE  0100               	movlb	0	; () banked
 13034  010EE0  51B5               	movf	Link_chan@channel& (0+255),w,b
 13035  010EE2  25B2               	addwf	??_Link_chan& (0+255),w,b
 13036  010EE4  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 13037  010EE6  0E00               	movlw	0
 13038  010EE8  21B3               	addwfc	(??_Link_chan+1)& (0+255),w,b
 13039  010EEA  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 13040  010EEC  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 13041  010EF0  0100               	movlb	0	; () banked
 13042  010EF2  6FB6               	movwf	Link_chan@linkflags& (0+255),b
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;vend.c: 533: displ_lflags(channel, linkflags);
 13046  010EF4  C0B6  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
 13047  010EF8  51B5               	movf	Link_chan@channel& (0+255),w,b
 13048  010EFA  EC9D  F08C         	call	_displ_lflags
 13049                           
 13050                           ;vend.c: 534: while(venflags.linkchan)
 13051  010EFE  D047               	goto	u4280
 13052  010F00                     
 13053                           ;vend.c: 535: {
 13054                           ;vend.c: 536: buttons = butindb();
 13055  010F00  ECD5  F092         	call	_butindb	;wreg free
 13056  010F04  6E38               	movwf	_buttons,c	;volatile
 13057                           
 13058                           ;vend.c: 537: if(buttons != 0x00)
 13059  010F06  5038               	movf	_buttons,w,c	;volatile
 13060  010F08  B4D8               	btfsc	status,2,c
 13061  010F0A  D03C               	goto	l2337
 13062                           
 13063                           ;vend.c: 538: {
 13064                           ;vend.c: 539: if(buttons && linkflags)
 13065  010F0C  5038               	movf	_buttons,w,c	;volatile
 13066  010F0E  B4D8               	btfsc	status,2,c
 13067  010F10  D008               	goto	l2335
 13068  010F12  0100               	movlb	0	; () banked
 13069  010F14  51B6               	movf	Link_chan@linkflags& (0+255),w,b
 13070  010F16  B4D8               	btfsc	status,2,c
 13071  010F18  D004               	goto	l2335
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;vend.c: 540: {
 13075                           ;vend.c: 542: linkflags = linkflags & ~buttons;
 13076  010F1A  5038               	movf	_buttons,w,c	;volatile
 13077  010F1C  0AFF               	xorlw	255
 13078  010F1E  15B6               	andwf	Link_chan@linkflags& (0+255),w,b
 13079  010F20  D003               	goto	L15
 13080  010F22                     l2335:
 13081                           
 13082                           ;vend.c: 544: else
 13083                           ;vend.c: 545: {
 13084                           ;vend.c: 547: linkflags = linkflags | buttons;
 13085                           
 13086                           ; BSR set to: 0
 13087  010F22  0100               	movlb	0	; () banked
 13088  010F24  51B6               	movf	Link_chan@linkflags& (0+255),w,b
 13089  010F26  1038               	iorwf	_buttons,w,c	;volatile
 13090  010F28                     L15:
 13091  010F28  6FB6               	movwf	Link_chan@linkflags& (0+255),b
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;vend.c: 548: }
 13095                           ;vend.c: 549: DATAEE_WriteByte(chan1linkbits + channel, linkflags);
 13096                           
 13097                           ; BSR set to: 0
 13098  010F2A  0E07               	movlw	low _chan1linkbits
 13099  010F2C  6EF6               	movwf	tblptrl,c
 13100  010F2E                     	if	1	;There is more than 1 active tblptr byte
 13101  010F2E  0EFC               	movlw	high _chan1linkbits
 13102  010F30  6EF7               	movwf	tblptrh,c
 13103  010F32                     	endif
 13104  010F32                     	if	1	;There are 3 active tblptr bytes
 13105  010F32  0E00               	movlw	low (_chan1linkbits shr (0+16))
 13106  010F34  6EF8               	movwf	tblptru,c
 13107  010F36                     	endif
 13108  010F36  0009               	tblrd		*+
 13109  010F38  CFF5 F0B2          	movff	tablat,??_Link_chan
 13110  010F3C  0009               	tblrd		*+
 13111  010F3E  CFF5 F0B3          	movff	tablat,??_Link_chan+1
 13112  010F42  51B5               	movf	Link_chan@channel& (0+255),w,b
 13113  010F44  25B2               	addwf	??_Link_chan& (0+255),w,b
 13114  010F46  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
 13115  010F48  0E00               	movlw	0
 13116  010F4A  21B3               	addwfc	(??_Link_chan+1)& (0+255),w,b
 13117  010F4C  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
 13118  010F4E  C0B6  F01F         	movff	Link_chan@linkflags,DATAEE_WriteByte@bData
 13119  010F52  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 13120                           
 13121                           ;vend.c: 550: displ_lflags(channel, linkflags);
 13122  010F56  C0B6  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
 13123  010F5A  0100               	movlb	0	; () banked
 13124  010F5C  51B5               	movf	Link_chan@channel& (0+255),w,b
 13125  010F5E  EC9D  F08C         	call	_displ_lflags
 13126                           
 13127                           ;vend.c: 551: }
 13128                           ;vend.c: 552: while(Read_Service() == 0x00)
 13129  010F62  D010               	goto	l2337
 13130  010F64                     l2338:
 13131                           
 13132                           ;vend.c: 553: {
 13133                           ;vend.c: 554: venflags.linkchan = 0;
 13134  010F64  902F               	bcf	_venflags+2,0,c
 13135                           
 13136                           ;vend.c: 555: lcd_string(chanlinkm, line1);
 13137  010F66  0E6A               	movlw	low _chanlinkm
 13138  010F68  6E24               	movwf	lcd_string@lcdstring,c
 13139  010F6A  0EFD               	movlw	high _chanlinkm
 13140  010F6C  6E25               	movwf	lcd_string@lcdstring+1,c
 13141  010F6E  0E4A               	movlw	low _line1
 13142  010F70  6EF6               	movwf	tblptrl,c
 13143  010F72                     	if	1	;There is more than 1 active tblptr byte
 13144  010F72  0EFC               	movlw	high _line1
 13145  010F74  6EF7               	movwf	tblptrh,c
 13146  010F76                     	endif
 13147  010F76                     	if	1	;There are 3 active tblptr bytes
 13148  010F76  0E00               	movlw	low (_line1 shr (0+16))
 13149  010F78  6EF8               	movwf	tblptru,c
 13150  010F7A                     	endif
 13151  010F7A  0008               	tblrd		*
 13152  010F7C  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13153  010F80  EC78  F08A         	call	_lcd_string	;wreg free
 13154  010F84                     l2337:
 13155  010F84  EC68  F095         	call	_Read_Service	;wreg free
 13156  010F88  0900               	iorlw	0
 13157  010F8A  B4D8               	btfsc	status,2,c
 13158  010F8C  D7EB               	goto	l2338
 13159  010F8E                     u4280:
 13160  010F8E  A02F               	btfss	_venflags+2,0,c
 13161  010F90  0012               	return	
 13162  010F92  D7B6               	goto	l2333
 13163  010F94                     __end_of_Link_chan:
 13164                           	opt stack 0
 13165                           tblptru	equ	0xFF8
 13166                           tblptrh	equ	0xFF7
 13167                           tblptrl	equ	0xFF6
 13168                           tablat	equ	0xFF5
 13169                           prodh	equ	0xFF4
 13170                           prodl	equ	0xFF3
 13171                           postinc0	equ	0xFEE
 13172                           wreg	equ	0xFE8
 13173                           indf2	equ	0xFDF
 13174                           postinc2	equ	0xFDE
 13175                           fsr2h	equ	0xFDA
 13176                           fsr2l	equ	0xFD9
 13177                           status	equ	0xFD8
 13178                           
 13179 ;; *************** function _displ_lflags *****************
 13180 ;; Defined at:
 13181 ;;		line 57 in file "lcd.c"
 13182 ;; Parameters:    Size  Location     Type
 13183 ;;  chanel          1    wreg     unsigned char 
 13184 ;;  linkflgs        1   30[COMRAM] unsigned char 
 13185 ;; Auto vars:     Size  Location     Type
 13186 ;;  chanel          1   31[COMRAM] unsigned char 
 13187 ;;  lchan           1   32[COMRAM] unsigned char 
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      void 
 13190 ;; Registers used:
 13191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13197 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13200 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;Total ram usage:        3 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; Hardware stack levels required when called:    8
 13204 ;; This function calls:
 13205 ;;		_lcd_dispadd
 13206 ;;		_lcd_string
 13207 ;;		_lcd_writeC
 13208 ;; This function is called by:
 13209 ;;		_Link_chan
 13210 ;; This function uses a non-reentrant model
 13211 ;;
 13212                           
 13213                           	psect	text77
 13214  01193A                     __ptext77:
 13215                           	opt stack 0
 13216  01193A                     _displ_lflags:
 13217                           	opt stack 18
 13218                           
 13219                           ;incstack = 0
 13220                           ;displ_lflags@chanel stored from wreg
 13221  01193A  6E2A               	movwf	displ_lflags@chanel,c
 13222                           
 13223                           ;lcd.c: 59: lcd_string(chanmsg, line1);
 13224  01193C  0E66               	movlw	low _chanmsg
 13225  01193E  6E24               	movwf	lcd_string@lcdstring,c
 13226  011940  0EFF               	movlw	high _chanmsg
 13227  011942  6E25               	movwf	lcd_string@lcdstring+1,c
 13228  011944  0E4A               	movlw	low _line1
 13229  011946  6EF6               	movwf	tblptrl,c
 13230  011948                     	if	1	;There is more than 1 active tblptr byte
 13231  011948  0EFC               	movlw	high _line1
 13232  01194A  6EF7               	movwf	tblptrh,c
 13233  01194C                     	endif
 13234  01194C                     	if	1	;There are 3 active tblptr bytes
 13235  01194C  0E00               	movlw	low (_line1 shr (0+16))
 13236  01194E  6EF8               	movwf	tblptru,c
 13237  011950                     	endif
 13238  011950  0008               	tblrd		*
 13239  011952  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13240  011956  EC78  F08A         	call	_lcd_string	;wreg free
 13241                           
 13242                           ;lcd.c: 60: lcd_writeC(++chanel | 0x30);
 13243  01195A  2A2A               	incf	displ_lflags@chanel,f,c
 13244  01195C  502A               	movf	displ_lflags@chanel,w,c
 13245  01195E  0930               	iorlw	48
 13246  011960  EC84  F08F         	call	_lcd_writeC
 13247                           
 13248                           ;lcd.c: 61: uint8_t lchan = 1;
 13249  011964  0E01               	movlw	1
 13250  011966  6E2B               	movwf	displ_lflags@lchan,c
 13251                           
 13252                           ;lcd.c: 63: lcd_string(linkmsg, line2);
 13253  011968  0E72               	movlw	low _linkmsg
 13254  01196A  6E24               	movwf	lcd_string@lcdstring,c
 13255  01196C  0EFF               	movlw	high _linkmsg
 13256  01196E  6E25               	movwf	lcd_string@lcdstring+1,c
 13257  011970  0E49               	movlw	low _line2
 13258  011972  6EF6               	movwf	tblptrl,c
 13259  011974                     	if	1	;There is more than 1 active tblptr byte
 13260  011974  0EFC               	movlw	high _line2
 13261  011976  6EF7               	movwf	tblptrh,c
 13262  011978                     	endif
 13263  011978                     	if	1	;There are 3 active tblptr bytes
 13264  011978  0E00               	movlw	low (_line2 shr (0+16))
 13265  01197A  6EF8               	movwf	tblptru,c
 13266  01197C                     	endif
 13267  01197C  0008               	tblrd		*
 13268  01197E  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13269  011982  EC78  F08A         	call	_lcd_string	;wreg free
 13270                           
 13271                           ;lcd.c: 64: lcd_dispadd(line3);
 13272  011986  0E48               	movlw	low _line3
 13273  011988  6EF6               	movwf	tblptrl,c
 13274  01198A                     	if	1	;There is more than 1 active tblptr byte
 13275  01198A  0EFC               	movlw	high _line3
 13276  01198C  6EF7               	movwf	tblptrh,c
 13277  01198E                     	endif
 13278  01198E                     	if	1	;There are 3 active tblptr bytes
 13279  01198E  0E00               	movlw	low (_line3 shr (0+16))
 13280  011990  6EF8               	movwf	tblptru,c
 13281  011992                     	endif
 13282  011992  0008               	tblrd		*
 13283  011994  50F5               	movf	tablat,w,c
 13284  011996  EC74  F095         	call	_lcd_dispadd
 13285                           
 13286                           ;lcd.c: 65: while(lchan < 0x09)
 13287  01199A  D010               	goto	l1575
 13288  01199C                     l1576:
 13289                           
 13290                           ;lcd.c: 66: {
 13291                           ;lcd.c: 67: if(linkflgs & 0x01)
 13292  01199C  A029               	btfss	displ_lflags@linkflgs,0,c
 13293  01199E  D00A               	goto	l1577
 13294                           
 13295                           ;lcd.c: 68: {
 13296                           ;lcd.c: 69: lcd_writeC(lchan | 0x30);
 13297  0119A0  502B               	movf	displ_lflags@lchan,w,c
 13298  0119A2  0930               	iorlw	48
 13299  0119A4  EC84  F08F         	call	_lcd_writeC
 13300                           
 13301                           ;lcd.c: 70: lcd_writeC(',');
 13302  0119A8  0E2C               	movlw	44
 13303  0119AA  EC84  F08F         	call	_lcd_writeC
 13304                           
 13305                           ;lcd.c: 71: lcd_writeC(' ');
 13306  0119AE  0E20               	movlw	32
 13307  0119B0  EC84  F08F         	call	_lcd_writeC
 13308  0119B4                     l1577:
 13309                           
 13310                           ;lcd.c: 72: }
 13311                           ;lcd.c: 73: lchan++;
 13312  0119B4  2A2B               	incf	displ_lflags@lchan,f,c
 13313                           
 13314                           ;lcd.c: 74: linkflgs = linkflgs >> 1;
 13315  0119B6  90D8               	bcf	status,0,c
 13316  0119B8  3029               	rrcf	displ_lflags@linkflgs,w,c
 13317  0119BA  6E29               	movwf	displ_lflags@linkflgs,c
 13318  0119BC                     l1575:
 13319  0119BC  0E08               	movlw	8
 13320  0119BE  642B               	cpfsgt	displ_lflags@lchan,c
 13321  0119C0  D7ED               	goto	l1576
 13322  0119C2  0012               	return	
 13323  0119C4                     __end_of_displ_lflags:
 13324                           	opt stack 0
 13325                           tblptru	equ	0xFF8
 13326                           tblptrh	equ	0xFF7
 13327                           tblptrl	equ	0xFF6
 13328                           tablat	equ	0xFF5
 13329                           prodh	equ	0xFF4
 13330                           prodl	equ	0xFF3
 13331                           postinc0	equ	0xFEE
 13332                           wreg	equ	0xFE8
 13333                           indf2	equ	0xFDF
 13334                           postinc2	equ	0xFDE
 13335                           fsr2h	equ	0xFDA
 13336                           fsr2l	equ	0xFD9
 13337                           status	equ	0xFD8
 13338                           
 13339 ;; *************** function _Read_Service *****************
 13340 ;; Defined at:
 13341 ;;		line 306 in file "vend.c"
 13342 ;; Parameters:    Size  Location     Type
 13343 ;;		None
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;  senval          1   18[COMRAM] unsigned char 
 13346 ;; Return value:  Size  Location     Type
 13347 ;;                  1    wreg      unsigned char 
 13348 ;; Registers used:
 13349 ;;		wreg, status,2
 13350 ;; Tracked objects:
 13351 ;;		On entry : 0/0
 13352 ;;		On exit  : 0/0
 13353 ;;		Unchanged: 0/0
 13354 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13359 ;;Total ram usage:        1 bytes
 13360 ;; Hardware stack levels used:    1
 13361 ;; Hardware stack levels required when called:    2
 13362 ;; This function calls:
 13363 ;;		Nothing
 13364 ;; This function is called by:
 13365 ;;		_price_set
 13366 ;;		_Vend_settime
 13367 ;;		_Chan_link
 13368 ;;		_Link_chan
 13369 ;;		_Sens_off
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text78
 13374  012AD0                     __ptext78:
 13375                           	opt stack 0
 13376  012AD0                     _Read_Service:
 13377                           	opt stack 26
 13378                           
 13379                           ;vend.c: 308: DAC1CON1 = 0x01;
 13380                           
 13381                           ;incstack = 0
 13382  012AD0  0E01               	movlw	1
 13383  012AD2  010F               	movlb	15	; () banked
 13384  012AD4  6F34               	movwf	52,b	;volatile
 13385                           
 13386                           ; BSR set to: 15
 13387                           ;vend.c: 309: _delay((unsigned long)((50)*(12000000/4000000.0)));
 13388  012AD6  0E32               	movlw	50
 13389  012AD8                     u5827:
 13390  012AD8  2EE8               	decfsz	wreg,f,c
 13391  012ADA  D7FE               	bra	u5827
 13392                           
 13393                           ;vend.c: 310: uint8_t senval = CMOUT;
 13394  012ADC  CF3D F01D          	movff	3901,Read_Service@senval	;volatile
 13395                           
 13396                           ;vend.c: 311: DAC1CON1 = sensorval;
 13397  012AE0  C036  FF34         	movff	_sensorval,3892	;volatile
 13398                           
 13399                           ;vend.c: 312: return senval;
 13400  012AE4  501D               	movf	Read_Service@senval,w,c
 13401  012AE6  0012               	return	
 13402  012AE8                     __end_of_Read_Service:
 13403                           	opt stack 0
 13404                           tblptru	equ	0xFF8
 13405                           tblptrh	equ	0xFF7
 13406                           tblptrl	equ	0xFF6
 13407                           tablat	equ	0xFF5
 13408                           prodh	equ	0xFF4
 13409                           prodl	equ	0xFF3
 13410                           postinc0	equ	0xFEE
 13411                           wreg	equ	0xFE8
 13412                           indf2	equ	0xFDF
 13413                           postinc2	equ	0xFDE
 13414                           fsr2h	equ	0xFDA
 13415                           fsr2l	equ	0xFD9
 13416                           status	equ	0xFD8
 13417                           
 13418 ;; *************** function _Sensor_set *****************
 13419 ;; Defined at:
 13420 ;;		line 315 in file "vend.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;		None
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;  dacpos          1   33[COMRAM] unsigned char 
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  1    wreg      void 
 13427 ;; Registers used:
 13428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13438 ;;Total ram usage:        1 bytes
 13439 ;; Hardware stack levels used:    1
 13440 ;; Hardware stack levels required when called:    9
 13441 ;; This function calls:
 13442 ;;		_butindb
 13443 ;;		_displ_sens
 13444 ;;		_lcd_string
 13445 ;; This function is called by:
 13446 ;;		_enter_service
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           	psect	text79
 13451  010F94                     __ptext79:
 13452                           	opt stack 0
 13453  010F94                     _Sensor_set:
 13454                           	opt stack 20
 13455                           
 13456                           ;vend.c: 317: mdbflags.endis = 1;
 13457                           
 13458                           ;incstack = 0
 13459  010F94  8C3F               	bsf	_mdbflags,6,c
 13460                           
 13461                           ;vend.c: 319: lcd_string(sensmsg, line1);
 13462  010F96  0E7E               	movlw	low _sensmsg
 13463  010F98  6E24               	movwf	lcd_string@lcdstring,c
 13464  010F9A  0EFF               	movlw	high _sensmsg
 13465  010F9C  6E25               	movwf	lcd_string@lcdstring+1,c
 13466  010F9E  0E4A               	movlw	low _line1
 13467  010FA0  6EF6               	movwf	tblptrl,c
 13468  010FA2                     	if	1	;There is more than 1 active tblptr byte
 13469  010FA2  0EFC               	movlw	high _line1
 13470  010FA4  6EF7               	movwf	tblptrh,c
 13471  010FA6                     	endif
 13472  010FA6                     	if	1	;There are 3 active tblptr bytes
 13473  010FA6  0E00               	movlw	low (_line1 shr (0+16))
 13474  010FA8  6EF8               	movwf	tblptru,c
 13475  010FAA                     	endif
 13476  010FAA  0008               	tblrd		*
 13477  010FAC  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13478  010FB0  EC78  F08A         	call	_lcd_string	;wreg free
 13479                           
 13480                           ;vend.c: 321: senspos = bflag + 2;
 13481  010FB4  5047               	movf	_bflag,w,c
 13482  010FB6  0F02               	addlw	2
 13483  010FB8  6E35               	movwf	_senspos,c	;volatile
 13484                           
 13485                           ;vend.c: 323: lcd_string(dacmsg, line2);
 13486  010FBA  0E4C               	movlw	low _dacmsg
 13487  010FBC  6E24               	movwf	lcd_string@lcdstring,c
 13488  010FBE  0EFF               	movlw	high _dacmsg
 13489  010FC0  6E25               	movwf	lcd_string@lcdstring+1,c
 13490  010FC2  0E49               	movlw	low _line2
 13491  010FC4  6EF6               	movwf	tblptrl,c
 13492  010FC6                     	if	1	;There is more than 1 active tblptr byte
 13493  010FC6  0EFC               	movlw	high _line2
 13494  010FC8  6EF7               	movwf	tblptrh,c
 13495  010FCA                     	endif
 13496  010FCA                     	if	1	;There are 3 active tblptr bytes
 13497  010FCA  0E00               	movlw	low (_line2 shr (0+16))
 13498  010FCC  6EF8               	movwf	tblptru,c
 13499  010FCE                     	endif
 13500  010FCE  0008               	tblrd		*
 13501  010FD0  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13502  010FD4  EC78  F08A         	call	_lcd_string	;wreg free
 13503                           
 13504                           ;vend.c: 325: uint8_t dacpos = bflag + 2;
 13505  010FD8  5047               	movf	_bflag,w,c
 13506  010FDA  0F02               	addlw	2
 13507  010FDC  6E2C               	movwf	Sensor_set@dacpos,c
 13508                           
 13509                           ;vend.c: 326: displ_sens(senspos, dacpos);
 13510  010FDE  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 13511  010FE2  5035               	movf	_senspos,w,c	;volatile
 13512  010FE4  ECAA  F08E         	call	_displ_sens
 13513                           
 13514                           ;vend.c: 327: while(mdbflags.endis)
 13515  010FE8  D03D               	goto	l2258
 13516  010FEA                     
 13517                           ;vend.c: 328: {
 13518                           ;vend.c: 329: buttons = butindb();
 13519  010FEA  ECD5  F092         	call	_butindb	;wreg free
 13520  010FEE  6E38               	movwf	_buttons,c	;volatile
 13521                           
 13522                           ;vend.c: 330: switch(buttons)
 13523  010FF0  D027               	goto	l2253
 13524  010FF2  5036               	movf	_sensorval,w,c	;volatile
 13525  010FF4  0B1F               	andlw	31
 13526  010FF6  010F               	movlb	15	; () banked
 13527  010FF8  6F34               	movwf	52,b	;volatile
 13528                           
 13529                           ; BSR set to: 15
 13530  010FFA  2A36               	incf	_sensorval,f,c	;volatile
 13531                           
 13532                           ; BSR set to: 15
 13533                           ;vend.c: 333: displ_sens(senspos, dacpos);
 13534  010FFC  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 13535  011000  5035               	movf	_senspos,w,c	;volatile
 13536  011002  ECAA  F08E         	call	_displ_sens
 13537                           
 13538                           ;vend.c: 334: break;
 13539  011006  D026               	goto	l2255
 13540  011008  5036               	movf	_sensorval,w,c	;volatile
 13541  01100A  0B1F               	andlw	31
 13542  01100C  010F               	movlb	15	; () banked
 13543  01100E  6F34               	movwf	52,b	;volatile
 13544                           
 13545                           ; BSR set to: 15
 13546  011010  0636               	decf	_sensorval,f,c	;volatile
 13547                           
 13548                           ; BSR set to: 15
 13549                           ;vend.c: 336: displ_sens(senspos, dacpos);
 13550  011012  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 13551  011016  5035               	movf	_senspos,w,c	;volatile
 13552  011018  ECAA  F08E         	call	_displ_sens
 13553                           
 13554                           ;vend.c: 337: break;
 13555  01101C  D01B               	goto	l2255
 13556  01101E                     l2257:
 13557  01101E  9C3F               	bcf	_mdbflags,6,c
 13558                           
 13559                           ;vend.c: 339: lcd_string(servmsg, line1);
 13560  011020  0E59               	movlw	low _servmsg
 13561  011022  6E24               	movwf	lcd_string@lcdstring,c
 13562  011024  0EFC               	movlw	high _servmsg
 13563  011026  6E25               	movwf	lcd_string@lcdstring+1,c
 13564  011028  0E4A               	movlw	low _line1
 13565  01102A  6EF6               	movwf	tblptrl,c
 13566  01102C                     	if	1	;There is more than 1 active tblptr byte
 13567  01102C  0EFC               	movlw	high _line1
 13568  01102E  6EF7               	movwf	tblptrh,c
 13569  011030                     	endif
 13570  011030                     	if	1	;There are 3 active tblptr bytes
 13571  011030  0E00               	movlw	low (_line1 shr (0+16))
 13572  011032  6EF8               	movwf	tblptru,c
 13573  011034                     	endif
 13574  011034  0008               	tblrd		*
 13575  011036  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13576  01103A  EC78  F08A         	call	_lcd_string	;wreg free
 13577                           
 13578                           ;vend.c: 341: }
 13579                           
 13580                           ;vend.c: 340: break;
 13581  01103E  D00A               	goto	l2255
 13582  011040                     l2253:
 13583  011040  5038               	movf	_buttons,w,c	;volatile
 13584                           
 13585                           ; Switch size 1, requested type "space"
 13586                           ; Number of cases is 3, Range of values is 1 to 128
 13587                           ; switch strategies available:
 13588                           ; Name         Instructions Cycles
 13589                           ; simple_byte           10     6 (average)
 13590                           ;	Chosen strategy is simple_byte
 13591  011042  0A01               	xorlw	1	; case 1
 13592  011044  B4D8               	btfsc	status,2,c
 13593  011046  D7D5               	goto	l2254
 13594  011048  0A03               	xorlw	3	; case 2
 13595  01104A  B4D8               	btfsc	status,2,c
 13596  01104C  D7DD               	goto	l2256
 13597  01104E  0A82               	xorlw	130	; case 128
 13598  011050  B4D8               	btfsc	status,2,c
 13599  011052  D7E5               	goto	l2257
 13600  011054                     l2255:
 13601                           
 13602                           ;vend.c: 342: if(PIR4bits.TMR3IF)
 13603  011054  010E               	movlb	14	; () banked
 13604  011056  A5CE               	btfss	206,2,b	;volatile
 13605  011058  D005               	goto	l2258
 13606                           
 13607                           ; BSR set to: 14
 13608                           ;vend.c: 343: {
 13609                           ;vend.c: 344: displ_sens(senspos, dacpos);
 13610  01105A  C02C  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
 13611  01105E  5035               	movf	_senspos,w,c	;volatile
 13612  011060  ECAA  F08E         	call	_displ_sens
 13613  011064                     l2258:
 13614  011064  AC3F               	btfss	_mdbflags,6,c
 13615  011066  0012               	return	
 13616  011068  D7C0               	goto	l2252
 13617  01106A                     __end_of_Sensor_set:
 13618                           	opt stack 0
 13619                           tblptru	equ	0xFF8
 13620                           tblptrh	equ	0xFF7
 13621                           tblptrl	equ	0xFF6
 13622                           tablat	equ	0xFF5
 13623                           prodh	equ	0xFF4
 13624                           prodl	equ	0xFF3
 13625                           postinc0	equ	0xFEE
 13626                           wreg	equ	0xFE8
 13627                           indf2	equ	0xFDF
 13628                           postinc2	equ	0xFDE
 13629                           fsr2h	equ	0xFDA
 13630                           fsr2l	equ	0xFD9
 13631                           status	equ	0xFD8
 13632                           
 13633 ;; *************** function _displ_sens *****************
 13634 ;; Defined at:
 13635 ;;		line 40 in file "lcd.c"
 13636 ;; Parameters:    Size  Location     Type
 13637 ;;  smsgpos         1    wreg     unsigned char 
 13638 ;;  dmsgpos         1   31[COMRAM] unsigned char 
 13639 ;; Auto vars:     Size  Location     Type
 13640 ;;  smsgpos         1   32[COMRAM] unsigned char 
 13641 ;; Return value:  Size  Location     Type
 13642 ;;                  1    wreg      void 
 13643 ;; Registers used:
 13644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13645 ;; Tracked objects:
 13646 ;;		On entry : 0/0
 13647 ;;		On exit  : 0/0
 13648 ;;		Unchanged: 0/0
 13649 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13654 ;;Total ram usage:        2 bytes
 13655 ;; Hardware stack levels used:    1
 13656 ;; Hardware stack levels required when called:    8
 13657 ;; This function calls:
 13658 ;;		_CMP1_GetOutputStatus
 13659 ;;		_DATAEE_WriteByte
 13660 ;;		_displ_hex
 13661 ;;		_lcd_dispadd
 13662 ;;		_lcd_string
 13663 ;; This function is called by:
 13664 ;;		_Sensor_set
 13665 ;; This function uses a non-reentrant model
 13666 ;;
 13667                           
 13668                           	psect	text80
 13669  011D54                     __ptext80:
 13670                           	opt stack 0
 13671  011D54                     _displ_sens:
 13672                           	opt stack 20
 13673                           
 13674                           ;incstack = 0
 13675                           ;displ_sens@smsgpos stored from wreg
 13676  011D54  6E2B               	movwf	displ_sens@smsgpos,c
 13677                           
 13678                           ;lcd.c: 42: if(CMP1_GetOutputStatus())
 13679  011D56  EC0E  F096         	call	_CMP1_GetOutputStatus	;wreg free
 13680  011D5A  0900               	iorlw	0
 13681  011D5C  B4D8               	btfsc	status,2,c
 13682  011D5E  D009               	goto	l1570
 13683                           
 13684                           ;lcd.c: 43: {
 13685                           ;lcd.c: 44: lcd_string(offmsg, smsgpos);
 13686  011D60  0EF2               	movlw	low _offmsg
 13687  011D62  6E24               	movwf	lcd_string@lcdstring,c
 13688  011D64  0EFF               	movlw	high _offmsg
 13689  011D66  6E25               	movwf	lcd_string@lcdstring+1,c
 13690  011D68  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
 13691  011D6C  EC78  F08A         	call	_lcd_string	;wreg free
 13692                           
 13693                           ;lcd.c: 45: }
 13694  011D70  D008               	goto	l1571
 13695  011D72                     l1570:
 13696                           
 13697                           ;lcd.c: 46: else
 13698                           ;lcd.c: 47: {
 13699                           ;lcd.c: 48: lcd_string(onmsg, smsgpos);
 13700  011D72  0EF6               	movlw	low _onmsg
 13701  011D74  6E24               	movwf	lcd_string@lcdstring,c
 13702  011D76  0EFF               	movlw	high _onmsg
 13703  011D78  6E25               	movwf	lcd_string@lcdstring+1,c
 13704  011D7A  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
 13705  011D7E  EC78  F08A         	call	_lcd_string	;wreg free
 13706  011D82                     l1571:
 13707                           
 13708                           ;lcd.c: 49: }
 13709                           ;lcd.c: 50: DATAEE_WriteByte(sensval, sensorval);
 13710  011D82  0E0D               	movlw	low _sensval
 13711  011D84  6EF6               	movwf	tblptrl,c
 13712  011D86                     	if	1	;There is more than 1 active tblptr byte
 13713  011D86  0EFC               	movlw	high _sensval
 13714  011D88  6EF7               	movwf	tblptrh,c
 13715  011D8A                     	endif
 13716  011D8A                     	if	1	;There are 3 active tblptr bytes
 13717  011D8A  0E00               	movlw	low (_sensval shr (0+16))
 13718  011D8C  6EF8               	movwf	tblptru,c
 13719  011D8E                     	endif
 13720  011D8E  0009               	tblrd		*+
 13721  011D90  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 13722  011D94  000A               	tblrd		*-
 13723  011D96  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 13724  011D9A  C036  F01F         	movff	_sensorval,DATAEE_WriteByte@bData	;volatile
 13725  011D9E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 13726                           
 13727                           ;lcd.c: 51: lcd_string(clrmsg, dmsgpos);
 13728  011DA2  0E93               	movlw	low _clrmsg
 13729  011DA4  6E24               	movwf	lcd_string@lcdstring,c
 13730  011DA6  0EFF               	movlw	high _clrmsg
 13731  011DA8  6E25               	movwf	lcd_string@lcdstring+1,c
 13732  011DAA  C02A  F026         	movff	displ_sens@dmsgpos,lcd_string@lcdline
 13733  011DAE  EC78  F08A         	call	_lcd_string	;wreg free
 13734                           
 13735                           ;lcd.c: 52: lcd_dispadd(dmsgpos);
 13736  011DB2  502A               	movf	displ_sens@dmsgpos,w,c
 13737  011DB4  EC74  F095         	call	_lcd_dispadd
 13738                           
 13739                           ;lcd.c: 53: displ_hex((uint8_t) DAC1CON1);
 13740  011DB8  010F               	movlb	15	; () banked
 13741  011DBA  5134               	movf	52,w,b	;volatile
 13742  011DBC  6E27               	movwf	displ_hex@hexnum,c
 13743  011DBE  6A28               	clrf	displ_hex@hexnum+1,c
 13744  011DC0  6A29               	clrf	displ_hex@hexnum+2,c
 13745  011DC2  ECC3  F089         	call	_displ_hex	;wreg free
 13746  011DC6  0012               	return		;funcret
 13747  011DC8                     __end_of_displ_sens:
 13748                           	opt stack 0
 13749                           tblptru	equ	0xFF8
 13750                           tblptrh	equ	0xFF7
 13751                           tblptrl	equ	0xFF6
 13752                           tablat	equ	0xFF5
 13753                           prodh	equ	0xFF4
 13754                           prodl	equ	0xFF3
 13755                           postinc0	equ	0xFEE
 13756                           wreg	equ	0xFE8
 13757                           indf2	equ	0xFDF
 13758                           postinc2	equ	0xFDE
 13759                           fsr2h	equ	0xFDA
 13760                           fsr2l	equ	0xFD9
 13761                           status	equ	0xFD8
 13762                           
 13763 ;; *************** function _Hopper_coin *****************
 13764 ;; Defined at:
 13765 ;;		line 239 in file "vend.c"
 13766 ;; Parameters:    Size  Location     Type
 13767 ;;		None
 13768 ;; Auto vars:     Size  Location     Type
 13769 ;;  coinval         1   33[COMRAM] unsigned char 
 13770 ;; Return value:  Size  Location     Type
 13771 ;;                  1    wreg      void 
 13772 ;; Registers used:
 13773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13774 ;; Tracked objects:
 13775 ;;		On entry : 0/0
 13776 ;;		On exit  : 0/0
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;Total ram usage:        1 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:    9
 13786 ;; This function calls:
 13787 ;;		_DATAEE_ReadByte
 13788 ;;		_Update_Hopcoin
 13789 ;;		_butindb
 13790 ;;		_displ_hex
 13791 ;;		_lcd_dispadd
 13792 ;;		_lcd_string
 13793 ;; This function is called by:
 13794 ;;		_enter_service
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text81
 13799  01106A                     __ptext81:
 13800                           	opt stack 0
 13801  01106A                     _Hopper_coin:
 13802                           	opt stack 20
 13803                           
 13804                           ;vend.c: 241: lcd_string(hoppcoin, line1);
 13805                           
 13806                           ;incstack = 0
 13807  01106A  0EA1               	movlw	low _hoppcoin
 13808  01106C  6E24               	movwf	lcd_string@lcdstring,c
 13809  01106E  0EFD               	movlw	high _hoppcoin
 13810  011070  6E25               	movwf	lcd_string@lcdstring+1,c
 13811  011072  0E4A               	movlw	low _line1
 13812  011074  6EF6               	movwf	tblptrl,c
 13813  011076                     	if	1	;There is more than 1 active tblptr byte
 13814  011076  0EFC               	movlw	high _line1
 13815  011078  6EF7               	movwf	tblptrh,c
 13816  01107A                     	endif
 13817  01107A                     	if	1	;There are 3 active tblptr bytes
 13818  01107A  0E00               	movlw	low (_line1 shr (0+16))
 13819  01107C  6EF8               	movwf	tblptru,c
 13820  01107E                     	endif
 13821  01107E  0008               	tblrd		*
 13822  011080  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13823  011084  EC78  F08A         	call	_lcd_string	;wreg free
 13824                           
 13825                           ;vend.c: 242: mdbflags.endis = 1;
 13826  011088  8C3F               	bsf	_mdbflags,6,c
 13827                           
 13828                           ;vend.c: 243: senspos = bflag + 2;
 13829  01108A  5047               	movf	_bflag,w,c
 13830  01108C  0F02               	addlw	2
 13831  01108E  6E35               	movwf	_senspos,c	;volatile
 13832                           
 13833                           ;vend.c: 244: uint8_t coinval = DATAEE_ReadByte(hopcoin);
 13834  011090  0E09               	movlw	low _hopcoin
 13835  011092  6EF6               	movwf	tblptrl,c
 13836  011094                     	if	1	;There is more than 1 active tblptr byte
 13837  011094  0EFC               	movlw	high _hopcoin
 13838  011096  6EF7               	movwf	tblptrh,c
 13839  011098                     	endif
 13840  011098                     	if	1	;There are 3 active tblptr bytes
 13841  011098  0E00               	movlw	low (_hopcoin shr (0+16))
 13842  01109A  6EF8               	movwf	tblptru,c
 13843  01109C                     	endif
 13844  01109C  0009               	tblrd		*+
 13845  01109E  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 13846  0110A2  000A               	tblrd		*-
 13847  0110A4  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 13848  0110A8  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 13849  0110AC  6E2C               	movwf	Hopper_coin@coinval,c
 13850                           
 13851                           ;vend.c: 245: lcd_dispadd(senspos);
 13852  0110AE  5035               	movf	_senspos,w,c	;volatile
 13853  0110B0  EC74  F095         	call	_lcd_dispadd
 13854                           
 13855                           ;vend.c: 246: displ_hex((uint24_t)coinval);
 13856  0110B4  502C               	movf	Hopper_coin@coinval,w,c
 13857  0110B6  6E27               	movwf	displ_hex@hexnum,c
 13858  0110B8  6A28               	clrf	displ_hex@hexnum+1,c
 13859  0110BA  6A29               	clrf	displ_hex@hexnum+2,c
 13860  0110BC  ECC3  F089         	call	_displ_hex	;wreg free
 13861                           
 13862                           ;vend.c: 247: while(mdbflags.endis)
 13863  0110C0  D03C               	goto	l2222
 13864  0110C2                     
 13865                           ;vend.c: 248: {
 13866                           ;vend.c: 249: buttons = butindb();
 13867  0110C2  ECD5  F092         	call	_butindb	;wreg free
 13868  0110C6  6E38               	movwf	_buttons,c	;volatile
 13869                           
 13870                           ;vend.c: 250: switch(buttons)
 13871  0110C8  D01F               	goto	l2224
 13872  0110CA  0E01               	movlw	1
 13873  0110CC  6E2A               	movwf	Update_Hopcoin@direction,c
 13874  0110CE  502C               	movf	Hopper_coin@coinval,w,c
 13875  0110D0  ECAC  F08D         	call	_Update_Hopcoin
 13876                           
 13877                           ;vend.c: 253: break;
 13878  0110D4  D023               	goto	l2226
 13879  0110D6  0E02               	movlw	2
 13880  0110D8  6E2A               	movwf	Update_Hopcoin@direction,c
 13881  0110DA  502C               	movf	Hopper_coin@coinval,w,c
 13882  0110DC  ECAC  F08D         	call	_Update_Hopcoin
 13883                           
 13884                           ;vend.c: 255: break;
 13885  0110E0  D01D               	goto	l2226
 13886  0110E2                     l2228:
 13887  0110E2  9C3F               	bcf	_mdbflags,6,c
 13888                           
 13889                           ;vend.c: 257: lcd_string(servmsg, line1);
 13890  0110E4  0E59               	movlw	low _servmsg
 13891  0110E6  6E24               	movwf	lcd_string@lcdstring,c
 13892  0110E8  0EFC               	movlw	high _servmsg
 13893  0110EA  6E25               	movwf	lcd_string@lcdstring+1,c
 13894  0110EC  0E4A               	movlw	low _line1
 13895  0110EE  6EF6               	movwf	tblptrl,c
 13896  0110F0                     	if	1	;There is more than 1 active tblptr byte
 13897  0110F0  0EFC               	movlw	high _line1
 13898  0110F2  6EF7               	movwf	tblptrh,c
 13899  0110F4                     	endif
 13900  0110F4                     	if	1	;There are 3 active tblptr bytes
 13901  0110F4  0E00               	movlw	low (_line1 shr (0+16))
 13902  0110F6  6EF8               	movwf	tblptru,c
 13903  0110F8                     	endif
 13904  0110F8  0008               	tblrd		*
 13905  0110FA  CFF5 F026          	movff	tablat,lcd_string@lcdline
 13906  0110FE  EC78  F08A         	call	_lcd_string	;wreg free
 13907                           
 13908                           ;vend.c: 258: buttons = 0x00;
 13909  011102  0E00               	movlw	0
 13910  011104  6E38               	movwf	_buttons,c	;volatile
 13911                           
 13912                           ;vend.c: 260: }
 13913                           
 13914                           ;vend.c: 259: break;
 13915  011106  D00A               	goto	l2226
 13916  011108                     l2224:
 13917  011108  5038               	movf	_buttons,w,c	;volatile
 13918                           
 13919                           ; Switch size 1, requested type "space"
 13920                           ; Number of cases is 3, Range of values is 1 to 128
 13921                           ; switch strategies available:
 13922                           ; Name         Instructions Cycles
 13923                           ; simple_byte           10     6 (average)
 13924                           ;	Chosen strategy is simple_byte
 13925  01110A  0A01               	xorlw	1	; case 1
 13926  01110C  B4D8               	btfsc	status,2,c
 13927  01110E  D7DD               	goto	l2225
 13928  011110  0A03               	xorlw	3	; case 2
 13929  011112  B4D8               	btfsc	status,2,c
 13930  011114  D7E0               	goto	l2227
 13931  011116  0A82               	xorlw	130	; case 128
 13932  011118  B4D8               	btfsc	status,2,c
 13933  01111A  D7E3               	goto	l2228
 13934  01111C                     l2226:
 13935                           
 13936                           ;vend.c: 261: coinval = DATAEE_ReadByte(hopcoin);
 13937  01111C  0E09               	movlw	low _hopcoin
 13938  01111E  6EF6               	movwf	tblptrl,c
 13939  011120                     	if	1	;There is more than 1 active tblptr byte
 13940  011120  0EFC               	movlw	high _hopcoin
 13941  011122  6EF7               	movwf	tblptrh,c
 13942  011124                     	endif
 13943  011124                     	if	1	;There are 3 active tblptr bytes
 13944  011124  0E00               	movlw	low (_hopcoin shr (0+16))
 13945  011126  6EF8               	movwf	tblptru,c
 13946  011128                     	endif
 13947  011128  0009               	tblrd		*+
 13948  01112A  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 13949  01112E  000A               	tblrd		*-
 13950  011130  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 13951  011134  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 13952  011138  6E2C               	movwf	Hopper_coin@coinval,c
 13953  01113A                     l2222:
 13954  01113A  AC3F               	btfss	_mdbflags,6,c
 13955  01113C  0012               	return	
 13956  01113E  D7C1               	goto	l2223
 13957  011140                     __end_of_Hopper_coin:
 13958                           	opt stack 0
 13959                           tblptru	equ	0xFF8
 13960                           tblptrh	equ	0xFF7
 13961                           tblptrl	equ	0xFF6
 13962                           tablat	equ	0xFF5
 13963                           prodh	equ	0xFF4
 13964                           prodl	equ	0xFF3
 13965                           postinc0	equ	0xFEE
 13966                           wreg	equ	0xFE8
 13967                           indf2	equ	0xFDF
 13968                           postinc2	equ	0xFDE
 13969                           fsr2h	equ	0xFDA
 13970                           fsr2l	equ	0xFD9
 13971                           status	equ	0xFD8
 13972                           
 13973 ;; *************** function _butindb *****************
 13974 ;; Defined at:
 13975 ;;		line 155 in file "vend.c"
 13976 ;; Parameters:    Size  Location     Type
 13977 ;;		None
 13978 ;; Auto vars:     Size  Location     Type
 13979 ;;  butt            1   23[COMRAM] unsigned char 
 13980 ;;  butval          1   22[COMRAM] unsigned char 
 13981 ;; Return value:  Size  Location     Type
 13982 ;;                  1    wreg      unsigned char 
 13983 ;; Registers used:
 13984 ;;		wreg, status,2, status,0, cstack
 13985 ;; Tracked objects:
 13986 ;;		On entry : 0/0
 13987 ;;		On exit  : 0/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;Total ram usage:        4 bytes
 13995 ;; Hardware stack levels used:    1
 13996 ;; Hardware stack levels required when called:    3
 13997 ;; This function calls:
 13998 ;;		_butin
 13999 ;; This function is called by:
 14000 ;;		_enter_service
 14001 ;;		_Hopper_coin
 14002 ;;		_Sensor_set
 14003 ;;		_price_set
 14004 ;;		_set_price
 14005 ;;		_Vend_setup
 14006 ;;		_Vend_settime
 14007 ;;		_Vend_timeset
 14008 ;;		_Chan_link
 14009 ;;		_Link_chan
 14010 ;;		_Sens_off
 14011 ;;		_off_sens
 14012 ;;		_set_notes
 14013 ;;		_enable_notes
 14014 ;; This function uses a non-reentrant model
 14015 ;;
 14016                           
 14017                           	psect	text82
 14018  0125AA                     __ptext82:
 14019                           	opt stack 0
 14020  0125AA                     _butindb:
 14021                           	opt stack 24
 14022                           
 14023                           ;vend.c: 157: if(butin() == 0)
 14024                           
 14025                           ;incstack = 0
 14026  0125AA  ECEA  F091         	call	_butin	;wreg free
 14027  0125AE  0900               	iorlw	0
 14028  0125B0  A4D8               	btfss	status,2,c
 14029  0125B2  D002               	goto	l2192
 14030                           
 14031                           ;vend.c: 158: {
 14032                           ;vend.c: 159: return 0x00;
 14033  0125B4  0E00               	movlw	0
 14034  0125B6  0012               	return	
 14035  0125B8                     l2192:
 14036                           
 14037                           ;vend.c: 160: }
 14038                           ;vend.c: 161: uint8_t butt = butin();
 14039  0125B8  ECEA  F091         	call	_butin	;wreg free
 14040  0125BC  6E22               	movwf	butindb@butt,c
 14041                           
 14042                           ;vend.c: 162: uint8_t butval = butt;
 14043  0125BE  C022  F021         	movff	butindb@butt,butindb@butval
 14044                           
 14045                           ;vend.c: 163: while(butval != 0x00)
 14046  0125C2  D003               	goto	l2194
 14047  0125C4                     
 14048                           ;vend.c: 164: {
 14049                           ;vend.c: 165: butval = butin();
 14050  0125C4  ECEA  F091         	call	_butin	;wreg free
 14051  0125C8  6E21               	movwf	butindb@butval,c
 14052  0125CA                     l2194:
 14053  0125CA  5021               	movf	butindb@butval,w,c
 14054  0125CC  A4D8               	btfss	status,2,c
 14055  0125CE  D7FA               	goto	l2195
 14056                           
 14057                           ;vend.c: 166: }
 14058                           ;vend.c: 167: _delay((unsigned long)((500)*(12000000/4000.0)));
 14059  0125D0  0E08               	movlw	8
 14060  0125D2  6E20               	movwf	(??_butindb+1)& (0+255),c
 14061  0125D4  0E9D               	movlw	157
 14062  0125D6  6E1F               	movwf	??_butindb& (0+255),c
 14063  0125D8  0E06               	movlw	6
 14064  0125DA                     u5837:
 14065  0125DA  2EE8               	decfsz	wreg,f,c
 14066  0125DC  D7FE               	bra	u5837
 14067  0125DE  2E1F               	decfsz	??_butindb& (0+255),f,c
 14068  0125E0  D7FC               	bra	u5837
 14069  0125E2  2E20               	decfsz	(??_butindb+1)& (0+255),f,c
 14070  0125E4  D7FA               	bra	u5837
 14071                           
 14072                           ;vend.c: 169: return butt;
 14073  0125E6  5022               	movf	butindb@butt,w,c
 14074  0125E8  0012               	return	
 14075  0125EA                     __end_of_butindb:
 14076                           	opt stack 0
 14077                           tblptru	equ	0xFF8
 14078                           tblptrh	equ	0xFF7
 14079                           tblptrl	equ	0xFF6
 14080                           tablat	equ	0xFF5
 14081                           prodh	equ	0xFF4
 14082                           prodl	equ	0xFF3
 14083                           postinc0	equ	0xFEE
 14084                           wreg	equ	0xFE8
 14085                           indf2	equ	0xFDF
 14086                           postinc2	equ	0xFDE
 14087                           fsr2h	equ	0xFDA
 14088                           fsr2l	equ	0xFD9
 14089                           status	equ	0xFD8
 14090                           
 14091 ;; *************** function _Update_Hopcoin *****************
 14092 ;; Defined at:
 14093 ;;		line 265 in file "vend.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  newval          1    wreg     unsigned char 
 14096 ;;  direction       1   31[COMRAM] unsigned char 
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;  newval          1   32[COMRAM] unsigned char 
 14099 ;; Return value:  Size  Location     Type
 14100 ;;                  1    wreg      void 
 14101 ;; Registers used:
 14102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14103 ;; Tracked objects:
 14104 ;;		On entry : 0/0
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14108 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14111 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14112 ;;Total ram usage:        2 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; Hardware stack levels required when called:    8
 14115 ;; This function calls:
 14116 ;;		_DATAEE_WriteByte
 14117 ;;		_displ_hex
 14118 ;;		_lcd_dispadd
 14119 ;;		_lcd_string
 14120 ;; This function is called by:
 14121 ;;		_Hopper_coin
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           	psect	text83
 14126  011B58                     __ptext83:
 14127                           	opt stack 0
 14128  011B58                     _Update_Hopcoin:
 14129                           	opt stack 20
 14130                           
 14131                           ;incstack = 0
 14132                           ;Update_Hopcoin@newval stored from wreg
 14133  011B58  6E2B               	movwf	Update_Hopcoin@newval,c
 14134                           
 14135                           ;vend.c: 268: switch(newval)
 14136  011B5A  D014               	goto	l2233
 14137  011B5C  042A               	decf	Update_Hopcoin@direction,w,c
 14138  011B5E  A4D8               	btfss	status,2,c
 14139  011B60  D005               	goto	u4600
 14140                           
 14141                           ;vend.c: 271: {
 14142                           ;vend.c: 272: newval++;
 14143  011B62  2A2B               	incf	Update_Hopcoin@newval,f,c
 14144                           
 14145                           ;vend.c: 273: }
 14146  011B64  D01A               	goto	l2237
 14147  011B66  042A               	decf	Update_Hopcoin@direction,w,c
 14148  011B68  A4D8               	btfss	status,2,c
 14149  011B6A  D002               	goto	l2239
 14150  011B6C                     u4600:
 14151                           
 14152                           ;vend.c: 280: {
 14153                           ;vend.c: 281: newval = 0x05;
 14154  011B6C  0E05               	movlw	5
 14155  011B6E  D006               	goto	L17
 14156  011B70                     l2239:
 14157                           
 14158                           ;vend.c: 283: else
 14159                           ;vend.c: 284: {
 14160                           ;vend.c: 285: newval--;
 14161  011B70  062B               	decf	Update_Hopcoin@newval,f,c
 14162                           
 14163                           ;vend.c: 286: }
 14164                           ;vend.c: 287: break;
 14165  011B72  D013               	goto	l2237
 14166  011B74  042A               	decf	Update_Hopcoin@direction,w,c
 14167  011B76  A4D8               	btfss	status,2,c
 14168  011B78  D003               	goto	l2244
 14169                           
 14170                           ;vend.c: 289: {
 14171                           ;vend.c: 291: newval = 0x01;
 14172  011B7A  0E01               	movlw	1
 14173  011B7C                     L17:
 14174  011B7C  6E2B               	movwf	Update_Hopcoin@newval,c
 14175                           
 14176                           ;vend.c: 296: }
 14177                           ;vend.c: 297: break;
 14178  011B7E  D00D               	goto	l2237
 14179  011B80                     l2244:
 14180  011B80  0E02               	movlw	2
 14181  011B82  D7FC               	goto	L17
 14182  011B84                     l2233:
 14183  011B84  502B               	movf	Update_Hopcoin@newval,w,c
 14184                           
 14185                           ; Switch size 1, requested type "space"
 14186                           ; Number of cases is 3, Range of values is 1 to 5
 14187                           ; switch strategies available:
 14188                           ; Name         Instructions Cycles
 14189                           ; simple_byte           10     6 (average)
 14190                           ;	Chosen strategy is simple_byte
 14191  011B86  0A01               	xorlw	1	; case 1
 14192  011B88  B4D8               	btfsc	status,2,c
 14193  011B8A  D7E8               	goto	l2234
 14194  011B8C  0A03               	xorlw	3	; case 2
 14195  011B8E  B4D8               	btfsc	status,2,c
 14196  011B90  D7EA               	goto	l2238
 14197  011B92  0A07               	xorlw	7	; case 5
 14198  011B94  B4D8               	btfsc	status,2,c
 14199  011B96  D7EE               	goto	l2241
 14200  011B98  D7F3               	goto	l2244
 14201  011B9A                     l2237:
 14202                           
 14203                           ;vend.c: 300: lcd_string(clrmsg, senspos);
 14204  011B9A  0E93               	movlw	low _clrmsg
 14205  011B9C  6E24               	movwf	lcd_string@lcdstring,c
 14206  011B9E  0EFF               	movlw	high _clrmsg
 14207  011BA0  6E25               	movwf	lcd_string@lcdstring+1,c
 14208  011BA2  C035  F026         	movff	_senspos,lcd_string@lcdline	;volatile
 14209  011BA6  EC78  F08A         	call	_lcd_string	;wreg free
 14210                           
 14211                           ;vend.c: 301: DATAEE_WriteByte(hopcoin, newval);
 14212  011BAA  0E09               	movlw	low _hopcoin
 14213  011BAC  6EF6               	movwf	tblptrl,c
 14214  011BAE                     	if	1	;There is more than 1 active tblptr byte
 14215  011BAE  0EFC               	movlw	high _hopcoin
 14216  011BB0  6EF7               	movwf	tblptrh,c
 14217  011BB2                     	endif
 14218  011BB2                     	if	1	;There are 3 active tblptr bytes
 14219  011BB2  0E00               	movlw	low (_hopcoin shr (0+16))
 14220  011BB4  6EF8               	movwf	tblptru,c
 14221  011BB6                     	endif
 14222  011BB6  0009               	tblrd		*+
 14223  011BB8  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 14224  011BBC  000A               	tblrd		*-
 14225  011BBE  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 14226  011BC2  C02B  F01F         	movff	Update_Hopcoin@newval,DATAEE_WriteByte@bData
 14227  011BC6  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 14228                           
 14229                           ;vend.c: 302: lcd_dispadd(senspos);
 14230  011BCA  5035               	movf	_senspos,w,c	;volatile
 14231  011BCC  EC74  F095         	call	_lcd_dispadd
 14232                           
 14233                           ;vend.c: 303: displ_hex((uint24_t)newval);
 14234  011BD0  502B               	movf	Update_Hopcoin@newval,w,c
 14235  011BD2  6E27               	movwf	displ_hex@hexnum,c
 14236  011BD4  6A28               	clrf	displ_hex@hexnum+1,c
 14237  011BD6  6A29               	clrf	displ_hex@hexnum+2,c
 14238  011BD8  ECC3  F089         	call	_displ_hex	;wreg free
 14239  011BDC  0012               	return		;funcret
 14240  011BDE                     __end_of_Update_Hopcoin:
 14241                           	opt stack 0
 14242                           tblptru	equ	0xFF8
 14243                           tblptrh	equ	0xFF7
 14244                           tblptrl	equ	0xFF6
 14245                           tablat	equ	0xFF5
 14246                           prodh	equ	0xFF4
 14247                           prodl	equ	0xFF3
 14248                           postinc0	equ	0xFEE
 14249                           wreg	equ	0xFE8
 14250                           indf2	equ	0xFDF
 14251                           postinc2	equ	0xFDE
 14252                           fsr2h	equ	0xFDA
 14253                           fsr2l	equ	0xFD9
 14254                           status	equ	0xFD8
 14255                           
 14256 ;; *************** function _Clear_cred *****************
 14257 ;; Defined at:
 14258 ;;		line 349 in file "vend.c"
 14259 ;; Parameters:    Size  Location     Type
 14260 ;;		None
 14261 ;; Auto vars:     Size  Location     Type
 14262 ;;		None
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  1    wreg      void 
 14265 ;; Registers used:
 14266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14276 ;;Total ram usage:        2 bytes
 14277 ;; Hardware stack levels used:    1
 14278 ;; Hardware stack levels required when called:    8
 14279 ;; This function calls:
 14280 ;;		_DATAEE_WriteByte
 14281 ;;		_lcd_string
 14282 ;; This function is called by:
 14283 ;;		_enter_service
 14284 ;; This function uses a non-reentrant model
 14285 ;;
 14286                           
 14287                           	psect	text84
 14288  0116F2                     __ptext84:
 14289                           	opt stack 0
 14290  0116F2                     _Clear_cred:
 14291                           	opt stack 21
 14292                           
 14293                           ;vend.c: 351: DATAEE_WriteByte(credmem, 0x00);
 14294                           
 14295                           ;incstack = 0
 14296  0116F2  0E1B               	movlw	low _credmem
 14297  0116F4  6EF6               	movwf	tblptrl,c
 14298  0116F6                     	if	1	;There is more than 1 active tblptr byte
 14299  0116F6  0EFC               	movlw	high _credmem
 14300  0116F8  6EF7               	movwf	tblptrh,c
 14301  0116FA                     	endif
 14302  0116FA                     	if	1	;There are 3 active tblptr bytes
 14303  0116FA  0E00               	movlw	low (_credmem shr (0+16))
 14304  0116FC  6EF8               	movwf	tblptru,c
 14305  0116FE                     	endif
 14306  0116FE  0009               	tblrd		*+
 14307  011700  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 14308  011704  000A               	tblrd		*-
 14309  011706  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 14310  01170A  0E00               	movlw	0
 14311  01170C  6E1F               	movwf	DATAEE_WriteByte@bData,c
 14312  01170E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 14313                           
 14314                           ;vend.c: 352: DATAEE_WriteByte(venderrors, 0x00);
 14315  011712  0E11               	movlw	low _venderrors
 14316  011714  6EF6               	movwf	tblptrl,c
 14317  011716                     	if	1	;There is more than 1 active tblptr byte
 14318  011716  0EFC               	movlw	high _venderrors
 14319  011718  6EF7               	movwf	tblptrh,c
 14320  01171A                     	endif
 14321  01171A                     	if	1	;There are 3 active tblptr bytes
 14322  01171A  0E00               	movlw	low (_venderrors shr (0+16))
 14323  01171C  6EF8               	movwf	tblptru,c
 14324  01171E                     	endif
 14325  01171E  0009               	tblrd		*+
 14326  011720  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 14327  011724  000A               	tblrd		*-
 14328  011726  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 14329  01172A  0E00               	movlw	0
 14330  01172C  6E1F               	movwf	DATAEE_WriteByte@bData,c
 14331  01172E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 14332                           
 14333                           ;vend.c: 353: DATAEE_WriteByte(hoperror, 0x00);
 14334  011732  0EE3               	movlw	low _hoperror
 14335  011734  6EF6               	movwf	tblptrl,c
 14336  011736                     	if	1	;There is more than 1 active tblptr byte
 14337  011736  0EFB               	movlw	high _hoperror
 14338  011738  6EF7               	movwf	tblptrh,c
 14339  01173A                     	endif
 14340  01173A                     	if	1	;There are 3 active tblptr bytes
 14341  01173A  0E00               	movlw	low (_hoperror shr (0+16))
 14342  01173C  6EF8               	movwf	tblptru,c
 14343  01173E                     	endif
 14344  01173E  0009               	tblrd		*+
 14345  011740  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 14346  011744  000A               	tblrd		*-
 14347  011746  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 14348  01174A  0E00               	movlw	0
 14349  01174C  6E1F               	movwf	DATAEE_WriteByte@bData,c
 14350  01174E  EC4F  F093         	call	_DATAEE_WriteByte	;wreg free
 14351                           
 14352                           ;vend.c: 354: lcd_string(creditclr, line1);
 14353  011752  0E3C               	movlw	low _creditclr
 14354  011754  6E24               	movwf	lcd_string@lcdstring,c
 14355  011756  0EFF               	movlw	high _creditclr
 14356  011758  6E25               	movwf	lcd_string@lcdstring+1,c
 14357  01175A  0E4A               	movlw	low _line1
 14358  01175C  6EF6               	movwf	tblptrl,c
 14359  01175E                     	if	1	;There is more than 1 active tblptr byte
 14360  01175E  0EFC               	movlw	high _line1
 14361  011760  6EF7               	movwf	tblptrh,c
 14362  011762                     	endif
 14363  011762                     	if	1	;There are 3 active tblptr bytes
 14364  011762  0E00               	movlw	low (_line1 shr (0+16))
 14365  011764  6EF8               	movwf	tblptru,c
 14366  011766                     	endif
 14367  011766  0008               	tblrd		*
 14368  011768  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14369  01176C  EC78  F08A         	call	_lcd_string	;wreg free
 14370                           
 14371                           ;vend.c: 355: _delay((unsigned long)((1000)*(12000000/4000.0)));
 14372  011770  0E10               	movlw	16
 14373  011772  6E2A               	movwf	(??_Clear_cred+1)& (0+255),c
 14374  011774  0E39               	movlw	57
 14375  011776  6E29               	movwf	??_Clear_cred& (0+255),c
 14376  011778  0E0E               	movlw	14
 14377  01177A                     u5847:
 14378  01177A  2EE8               	decfsz	wreg,f,c
 14379  01177C  D7FE               	bra	u5847
 14380  01177E  2E29               	decfsz	??_Clear_cred& (0+255),f,c
 14381  011780  D7FC               	bra	u5847
 14382  011782  2E2A               	decfsz	(??_Clear_cred+1)& (0+255),f,c
 14383  011784  D7FA               	bra	u5847
 14384  011786  0012               	return		;funcret
 14385  011788                     __end_of_Clear_cred:
 14386                           	opt stack 0
 14387                           tblptru	equ	0xFF8
 14388                           tblptrh	equ	0xFF7
 14389                           tblptrl	equ	0xFF6
 14390                           tablat	equ	0xFF5
 14391                           prodh	equ	0xFF4
 14392                           prodl	equ	0xFF3
 14393                           postinc0	equ	0xFEE
 14394                           wreg	equ	0xFE8
 14395                           indf2	equ	0xFDF
 14396                           postinc2	equ	0xFDE
 14397                           fsr2h	equ	0xFDA
 14398                           fsr2l	equ	0xFD9
 14399                           status	equ	0xFD8
 14400                           
 14401 ;; *************** function _DATAEE_WriteByte *****************
 14402 ;; Defined at:
 14403 ;;		line 170 in file "mcc_generated_files/memory.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;  bAdd            2   18[COMRAM] unsigned int 
 14406 ;;  bData           1   20[COMRAM] unsigned char 
 14407 ;; Auto vars:     Size  Location     Type
 14408 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
 14409 ;; Return value:  Size  Location     Type
 14410 ;;                  1    wreg      void 
 14411 ;; Registers used:
 14412 ;;		wreg, status,2, status,0
 14413 ;; Tracked objects:
 14414 ;;		On entry : 0/0
 14415 ;;		On exit  : 0/0
 14416 ;;		Unchanged: 0/0
 14417 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14418 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14422 ;;Total ram usage:        4 bytes
 14423 ;; Hardware stack levels used:    1
 14424 ;; Hardware stack levels required when called:    2
 14425 ;; This function calls:
 14426 ;;		Nothing
 14427 ;; This function is called by:
 14428 ;;		_displ_sens
 14429 ;;		_Write_NVstore
 14430 ;;		_credit_add
 14431 ;;		_credit_subtract
 14432 ;;		_Clear_Totals
 14433 ;;		_Update_Hopcoin
 14434 ;;		_Clear_cred
 14435 ;;		_set_price
 14436 ;;		_Vend_timeset
 14437 ;;		_Link_chan
 14438 ;;		_off_sens
 14439 ;;		_Reset_settings
 14440 ;;		_save_notes
 14441 ;;		_hopper_pay
 14442 ;;		_disable_channel
 14443 ;;		_update_vends
 14444 ;; This function uses a non-reentrant model
 14445 ;;
 14446                           
 14447                           	psect	text85
 14448  01269E                     __ptext85:
 14449                           	opt stack 0
 14450  01269E                     _DATAEE_WriteByte:
 14451                           	opt stack 23
 14452                           
 14453                           ;memory.c: 172: uint8_t GIEBitValue = INTCONbits.GIE;
 14454                           
 14455                           ;incstack = 0
 14456  01269E  0E00               	movlw	0
 14457  0126A0  BEF2               	btfsc	intcon,7,c	;volatile
 14458  0126A2  0E01               	movlw	1
 14459  0126A4  6E20               	movwf	DATAEE_WriteByte@GIEBitValue,c
 14460                           
 14461                           ;memory.c: 174: NVMADRH = ((bAdd >> 8) & 0x03);
 14462  0126A6  501E               	movf	DATAEE_WriteByte@bAdd+1,w,c
 14463  0126A8  0B03               	andlw	3
 14464  0126AA  6E7F               	movwf	3967,c	;volatile
 14465                           
 14466                           ;memory.c: 175: NVMADRL = (bAdd & 0xFF);
 14467  0126AC  C01D  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
 14468                           
 14469                           ;memory.c: 176: NVMDAT = bData;
 14470  0126B0  C01F  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
 14471                           
 14472                           ;memory.c: 177: NVMCON1bits.NVMREG = 0;
 14473  0126B4  0E3F               	movlw	-193
 14474  0126B6  1681               	andwf	3969,f,c	;volsfr
 14475                           
 14476                           ;memory.c: 178: NVMCON1bits.WREN = 1;
 14477  0126B8  8481               	bsf	3969,2,c	;volsfr
 14478                           
 14479                           ;memory.c: 179: INTCONbits.GIE = 0;
 14480  0126BA  9EF2               	bcf	intcon,7,c	;volatile
 14481                           
 14482                           ;memory.c: 180: NVMCON2 = 0x55;
 14483  0126BC  0E55               	movlw	85
 14484  0126BE  6E82               	movwf	3970,c	;volsfr
 14485                           
 14486                           ;memory.c: 181: NVMCON2 = 0xAA;
 14487  0126C0  0EAA               	movlw	170
 14488  0126C2  6E82               	movwf	3970,c	;volsfr
 14489                           
 14490                           ;memory.c: 182: NVMCON1bits.WR = 1;
 14491  0126C4  8281               	bsf	3969,1,c	;volsfr
 14492  0126C6                     
 14493                           ;memory.c: 185: {
 14494  0126C6  B281               	btfsc	3969,1,c	;volsfr
 14495  0126C8  D7FE               	goto	l251
 14496                           
 14497                           ;memory.c: 186: }
 14498                           ;memory.c: 188: NVMCON1bits.WREN = 0;
 14499  0126CA  9481               	bcf	3969,2,c	;volsfr
 14500                           
 14501                           ;memory.c: 189: INTCONbits.GIE = GIEBitValue;
 14502  0126CC  B020               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
 14503  0126CE  D002               	bra	u3955
 14504  0126D0  9EF2               	bcf	intcon,7,c	;volatile
 14505  0126D2  D001               	bra	u3956
 14506  0126D4                     u3955:
 14507  0126D4  8EF2               	bsf	intcon,7,c	;volatile
 14508  0126D6                     u3956:
 14509  0126D6  0012               	return		;funcret
 14510  0126D8                     __end_of_DATAEE_WriteByte:
 14511                           	opt stack 0
 14512                           tblptru	equ	0xFF8
 14513                           tblptrh	equ	0xFF7
 14514                           tblptrl	equ	0xFF6
 14515                           tablat	equ	0xFF5
 14516                           prodh	equ	0xFF4
 14517                           prodl	equ	0xFF3
 14518                           intcon	equ	0xFF2
 14519                           postinc0	equ	0xFEE
 14520                           wreg	equ	0xFE8
 14521                           indf2	equ	0xFDF
 14522                           postinc2	equ	0xFDE
 14523                           fsr2h	equ	0xFDA
 14524                           fsr2l	equ	0xFD9
 14525                           status	equ	0xFD8
 14526                           
 14527 ;; *************** function _Audit *****************
 14528 ;; Defined at:
 14529 ;;		line 194 in file "vend.c"
 14530 ;; Parameters:    Size  Location     Type
 14531 ;;		None
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;  vends           1   33[COMRAM] unsigned char 
 14534 ;; Return value:  Size  Location     Type
 14535 ;;                  1    wreg      void 
 14536 ;; Registers used:
 14537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14538 ;; Tracked objects:
 14539 ;;		On entry : 0/0
 14540 ;;		On exit  : 0/0
 14541 ;;		Unchanged: 0/0
 14542 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14547 ;;Total ram usage:        3 bytes
 14548 ;; Hardware stack levels used:    1
 14549 ;; Hardware stack levels required when called:    8
 14550 ;; This function calls:
 14551 ;;		_CMP1_GetOutputStatus
 14552 ;;		_DATAEE_ReadByte
 14553 ;;		_Read_NVstore
 14554 ;;		_butin
 14555 ;;		_displ_hex
 14556 ;;		_get_channel
 14557 ;;		_lcd_string
 14558 ;; This function is called by:
 14559 ;;		_enter_service
 14560 ;; This function uses a non-reentrant model
 14561 ;;
 14562                           
 14563                           	psect	text86
 14564  010000                     __ptext86:
 14565                           	opt stack 0
 14566  010000                     _Audit:
 14567                           	opt stack 21
 14568                           
 14569                           ;vend.c: 196: DAC1CON1 = 0x01;
 14570                           
 14571                           ;incstack = 0
 14572  010000  0E01               	movlw	1
 14573  010002  010F               	movlb	15	; () banked
 14574  010004  6F34               	movwf	52,b	;volatile
 14575                           
 14576                           ; BSR set to: 15
 14577                           ;vend.c: 197: Read_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 14578  010006  0E19               	movlw	low _cashinv
 14579  010008  6EF6               	movwf	tblptrl,c
 14580  01000A                     	if	1	;There is more than 1 active tblptr byte
 14581  01000A  0EFC               	movlw	high _cashinv
 14582  01000C  6EF7               	movwf	tblptrh,c
 14583  01000E                     	endif
 14584  01000E                     	if	1	;There are 3 active tblptr bytes
 14585  01000E  0E00               	movlw	low (_cashinv shr (0+16))
 14586  010010  6EF8               	movwf	tblptru,c
 14587  010012                     	endif
 14588  010012  0009               	tblrd		*+
 14589  010014  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 14590  010018  000A               	tblrd		*-
 14591  01001A  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 14592  01001E  0E4B               	movlw	low _pvcash
 14593  010020  6E21               	movwf	Read_NVstore@storemem,c
 14594  010022  0E00               	movlw	high _pvcash
 14595  010024  6E22               	movwf	Read_NVstore@storemem+1,c
 14596  010026  0E02               	movlw	2
 14597  010028  6E23               	movwf	Read_NVstore@storesize,c
 14598  01002A  EC11  F094         	call	_Read_NVstore	;wreg free
 14599                           
 14600                           ;vend.c: 198: Read_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 14601  01002E  0E15               	movlw	low _cashint
 14602  010030  6EF6               	movwf	tblptrl,c
 14603  010032                     	if	1	;There is more than 1 active tblptr byte
 14604  010032  0EFC               	movlw	high _cashint
 14605  010034  6EF7               	movwf	tblptrh,c
 14606  010036                     	endif
 14607  010036                     	if	1	;There are 3 active tblptr bytes
 14608  010036  0E00               	movlw	low (_cashint shr (0+16))
 14609  010038  6EF8               	movwf	tblptru,c
 14610  01003A                     	endif
 14611  01003A  0009               	tblrd		*+
 14612  01003C  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 14613  010040  000A               	tblrd		*-
 14614  010042  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 14615  010046  0E48               	movlw	low _pnvcash
 14616  010048  6E21               	movwf	Read_NVstore@storemem,c
 14617  01004A  0E00               	movlw	high _pnvcash
 14618  01004C  6E22               	movwf	Read_NVstore@storemem+1,c
 14619  01004E  0E03               	movlw	3
 14620  010050  6E23               	movwf	Read_NVstore@storesize,c
 14621  010052  EC11  F094         	call	_Read_NVstore	;wreg free
 14622                           
 14623                           ;vend.c: 199: lcd_string(cashinmsg, line1);
 14624  010056  0E89               	movlw	low _cashinmsg
 14625  010058  6E24               	movwf	lcd_string@lcdstring,c
 14626  01005A  0EFF               	movlw	high _cashinmsg
 14627  01005C  6E25               	movwf	lcd_string@lcdstring+1,c
 14628  01005E  0E4A               	movlw	low _line1
 14629  010060  6EF6               	movwf	tblptrl,c
 14630  010062                     	if	1	;There is more than 1 active tblptr byte
 14631  010062  0EFC               	movlw	high _line1
 14632  010064  6EF7               	movwf	tblptrh,c
 14633  010066                     	endif
 14634  010066                     	if	1	;There are 3 active tblptr bytes
 14635  010066  0E00               	movlw	low (_line1 shr (0+16))
 14636  010068  6EF8               	movwf	tblptru,c
 14637  01006A                     	endif
 14638  01006A  0008               	tblrd		*
 14639  01006C  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14640  010070  EC78  F08A         	call	_lcd_string	;wreg free
 14641                           
 14642                           ;vend.c: 200: displ_hex((uint24_t)pvcash);
 14643  010074  C04B  F027         	movff	_pvcash,displ_hex@hexnum	;volatile
 14644  010078  C04C  F028         	movff	_pvcash+1,displ_hex@hexnum+1	;volatile
 14645  01007C  6A29               	clrf	displ_hex@hexnum+2,c
 14646  01007E  ECC3  F089         	call	_displ_hex	;wreg free
 14647                           
 14648                           ;vend.c: 201: lcd_string(totalmsg, line2);
 14649  010082  0EC3               	movlw	low _totalmsg
 14650  010084  6E24               	movwf	lcd_string@lcdstring,c
 14651  010086  0EFF               	movlw	high _totalmsg
 14652  010088  6E25               	movwf	lcd_string@lcdstring+1,c
 14653  01008A  0E49               	movlw	low _line2
 14654  01008C  6EF6               	movwf	tblptrl,c
 14655  01008E                     	if	1	;There is more than 1 active tblptr byte
 14656  01008E  0EFC               	movlw	high _line2
 14657  010090  6EF7               	movwf	tblptrh,c
 14658  010092                     	endif
 14659  010092                     	if	1	;There are 3 active tblptr bytes
 14660  010092  0E00               	movlw	low (_line2 shr (0+16))
 14661  010094  6EF8               	movwf	tblptru,c
 14662  010096                     	endif
 14663  010096  0008               	tblrd		*
 14664  010098  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14665  01009C  EC78  F08A         	call	_lcd_string	;wreg free
 14666                           
 14667                           ;vend.c: 202: displ_hex(pnvcash);
 14668  0100A0  C048  F027         	movff	_pnvcash,displ_hex@hexnum	;volatile
 14669  0100A4  C049  F028         	movff	_pnvcash+1,displ_hex@hexnum+1	;volatile
 14670  0100A8  C04A  F029         	movff	_pnvcash+2,displ_hex@hexnum+2	;volatile
 14671  0100AC  ECC3  F089         	call	_displ_hex	;wreg free
 14672                           
 14673                           ;vend.c: 203: lcd_string(vendispmsg, line3);
 14674  0100B0  0EEE               	movlw	low _vendispmsg
 14675  0100B2  6E24               	movwf	lcd_string@lcdstring,c
 14676  0100B4  0EFE               	movlw	high _vendispmsg
 14677  0100B6  6E25               	movwf	lcd_string@lcdstring+1,c
 14678  0100B8  0E48               	movlw	low _line3
 14679  0100BA  6EF6               	movwf	tblptrl,c
 14680  0100BC                     	if	1	;There is more than 1 active tblptr byte
 14681  0100BC  0EFC               	movlw	high _line3
 14682  0100BE  6EF7               	movwf	tblptrh,c
 14683  0100C0                     	endif
 14684  0100C0                     	if	1	;There are 3 active tblptr bytes
 14685  0100C0  0E00               	movlw	low (_line3 shr (0+16))
 14686  0100C2  6EF8               	movwf	tblptru,c
 14687  0100C4                     	endif
 14688  0100C4  0008               	tblrd		*
 14689  0100C6  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14690  0100CA  EC78  F08A         	call	_lcd_string	;wreg free
 14691                           
 14692                           ;vend.c: 204: venflags.audit = 1;
 14693  0100CE  862F               	bsf	_venflags+2,3,c
 14694                           
 14695                           ;vend.c: 205: while(venflags.audit)
 14696  0100D0  D071               	goto	l2211
 14697  0100D2                     
 14698                           ;vend.c: 206: {
 14699                           ;vend.c: 207: buttons = butin();
 14700  0100D2  ECEA  F091         	call	_butin	;wreg free
 14701  0100D6  6E38               	movwf	_buttons,c	;volatile
 14702                           
 14703                           ;vend.c: 208: if(buttons != 0x00)
 14704  0100D8  5038               	movf	_buttons,w,c	;volatile
 14705  0100DA  B4D8               	btfsc	status,2,c
 14706  0100DC  D054               	goto	l2207
 14707                           
 14708                           ;vend.c: 209: {
 14709                           ;vend.c: 210: buttons = butin();
 14710  0100DE  ECEA  F091         	call	_butin	;wreg free
 14711  0100E2  6E38               	movwf	_buttons,c	;volatile
 14712                           
 14713                           ;vend.c: 211: lcd_string(clrline, line4);
 14714  0100E4  0E03               	movlw	low _clrline
 14715  0100E6  6E24               	movwf	lcd_string@lcdstring,c
 14716  0100E8  0EFF               	movlw	high _clrline
 14717  0100EA  6E25               	movwf	lcd_string@lcdstring+1,c
 14718  0100EC  0E47               	movlw	low _line4
 14719  0100EE  6EF6               	movwf	tblptrl,c
 14720  0100F0                     	if	1	;There is more than 1 active tblptr byte
 14721  0100F0  0EFC               	movlw	high _line4
 14722  0100F2  6EF7               	movwf	tblptrh,c
 14723  0100F4                     	endif
 14724  0100F4                     	if	1	;There are 3 active tblptr bytes
 14725  0100F4  0E00               	movlw	low (_line4 shr (0+16))
 14726  0100F6  6EF8               	movwf	tblptru,c
 14727  0100F8                     	endif
 14728  0100F8  0008               	tblrd		*
 14729  0100FA  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14730  0100FE  EC78  F08A         	call	_lcd_string	;wreg free
 14731                           
 14732                           ;vend.c: 212: channel = get_channel(buttons);
 14733  010102  5038               	movf	_buttons,w,c	;volatile
 14734  010104  EC3E  F095         	call	_get_channel
 14735  010108  6E30               	movwf	_channel,c	;volatile
 14736                           
 14737                           ;vend.c: 213: uint8_t vends = DATAEE_ReadByte(vendstore + channel);
 14738  01010A  0E17               	movlw	low _vendstore
 14739  01010C  6EF6               	movwf	tblptrl,c
 14740  01010E                     	if	1	;There is more than 1 active tblptr byte
 14741  01010E  0EFC               	movlw	high _vendstore
 14742  010110  6EF7               	movwf	tblptrh,c
 14743  010112                     	endif
 14744  010112                     	if	1	;There are 3 active tblptr bytes
 14745  010112  0E00               	movlw	low (_vendstore shr (0+16))
 14746  010114  6EF8               	movwf	tblptru,c
 14747  010116                     	endif
 14748  010116  0009               	tblrd		*+
 14749  010118  CFF5 F02A          	movff	tablat,??_Audit
 14750  01011C  0009               	tblrd		*+
 14751  01011E  CFF5 F02B          	movff	tablat,??_Audit+1
 14752  010122  5030               	movf	_channel,w,c	;volatile
 14753  010124  242A               	addwf	??_Audit,w,c
 14754  010126  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 14755  010128  0E00               	movlw	0
 14756  01012A  202B               	addwfc	??_Audit+1,w,c
 14757  01012C  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 14758  01012E  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 14759  010132  6E2C               	movwf	Audit@vends,c
 14760                           
 14761                           ;vend.c: 214: lcd_string(totalvendsm, line4);
 14762  010134  0EEB               	movlw	low _totalvendsm
 14763  010136  6E24               	movwf	lcd_string@lcdstring,c
 14764  010138  0EFF               	movlw	high _totalvendsm
 14765  01013A  6E25               	movwf	lcd_string@lcdstring+1,c
 14766  01013C  0E47               	movlw	low _line4
 14767  01013E  6EF6               	movwf	tblptrl,c
 14768  010140                     	if	1	;There is more than 1 active tblptr byte
 14769  010140  0EFC               	movlw	high _line4
 14770  010142  6EF7               	movwf	tblptrh,c
 14771  010144                     	endif
 14772  010144                     	if	1	;There are 3 active tblptr bytes
 14773  010144  0E00               	movlw	low (_line4 shr (0+16))
 14774  010146  6EF8               	movwf	tblptru,c
 14775  010148                     	endif
 14776  010148  0008               	tblrd		*
 14777  01014A  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14778  01014E  EC78  F08A         	call	_lcd_string	;wreg free
 14779                           
 14780                           ;vend.c: 215: displ_hex((uint24_t)vends);
 14781  010152  502C               	movf	Audit@vends,w,c
 14782  010154  6E27               	movwf	displ_hex@hexnum,c
 14783  010156  6A28               	clrf	displ_hex@hexnum+1,c
 14784  010158  6A29               	clrf	displ_hex@hexnum+2,c
 14785  01015A  ECC3  F089         	call	_displ_hex	;wreg free
 14786  01015E  ECEA  F091         	call	_butin	;wreg free
 14787  010162  0900               	iorlw	0
 14788  010164  A4D8               	btfss	status,2,c
 14789  010166  D7FB               	goto	l2209
 14790                           
 14791                           ;vend.c: 217: lcd_string(clrline, line4);
 14792  010168  0E03               	movlw	low _clrline
 14793  01016A  6E24               	movwf	lcd_string@lcdstring,c
 14794  01016C  0EFF               	movlw	high _clrline
 14795  01016E  6E25               	movwf	lcd_string@lcdstring+1,c
 14796  010170  0E47               	movlw	low _line4
 14797  010172  6EF6               	movwf	tblptrl,c
 14798  010174                     	if	1	;There is more than 1 active tblptr byte
 14799  010174  0EFC               	movlw	high _line4
 14800  010176  6EF7               	movwf	tblptrh,c
 14801  010178                     	endif
 14802  010178                     	if	1	;There are 3 active tblptr bytes
 14803  010178  0E00               	movlw	low (_line4 shr (0+16))
 14804  01017A  6EF8               	movwf	tblptru,c
 14805  01017C                     	endif
 14806  01017C  0008               	tblrd		*
 14807  01017E  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14808  010182  EC78  F08A         	call	_lcd_string	;wreg free
 14809  010186                     l2207:
 14810                           
 14811                           ;vend.c: 218: }
 14812                           ;vend.c: 219: if(!CMP1_GetOutputStatus())
 14813  010186  EC0E  F096         	call	_CMP1_GetOutputStatus	;wreg free
 14814  01018A  0900               	iorlw	0
 14815  01018C  A4D8               	btfss	status,2,c
 14816  01018E  D012               	goto	l2211
 14817                           
 14818                           ;vend.c: 220: {
 14819                           ;vend.c: 221: DAC1CON1 = sensorval;
 14820  010190  C036  FF34         	movff	_sensorval,3892	;volatile
 14821                           
 14822                           ;vend.c: 222: venflags.audit = 0;
 14823  010194  962F               	bcf	_venflags+2,3,c
 14824                           
 14825                           ;vend.c: 223: lcd_string(servmsg, line1);
 14826  010196  0E59               	movlw	low _servmsg
 14827  010198  6E24               	movwf	lcd_string@lcdstring,c
 14828  01019A  0EFC               	movlw	high _servmsg
 14829  01019C  6E25               	movwf	lcd_string@lcdstring+1,c
 14830  01019E  0E4A               	movlw	low _line1
 14831  0101A0  6EF6               	movwf	tblptrl,c
 14832  0101A2                     	if	1	;There is more than 1 active tblptr byte
 14833  0101A2  0EFC               	movlw	high _line1
 14834  0101A4  6EF7               	movwf	tblptrh,c
 14835  0101A6                     	endif
 14836  0101A6                     	if	1	;There are 3 active tblptr bytes
 14837  0101A6  0E00               	movlw	low (_line1 shr (0+16))
 14838  0101A8  6EF8               	movwf	tblptru,c
 14839  0101AA                     	endif
 14840  0101AA  0008               	tblrd		*
 14841  0101AC  CFF5 F026          	movff	tablat,lcd_string@lcdline
 14842  0101B0  EC78  F08A         	call	_lcd_string	;wreg free
 14843  0101B4                     l2211:
 14844  0101B4  A62F               	btfss	_venflags+2,3,c
 14845  0101B6  0012               	return	
 14846  0101B8  D78C               	goto	l2206
 14847  0101BA                     __end_of_Audit:
 14848                           	opt stack 0
 14849                           tblptru	equ	0xFF8
 14850                           tblptrh	equ	0xFF7
 14851                           tblptrl	equ	0xFF6
 14852                           tablat	equ	0xFF5
 14853                           prodh	equ	0xFF4
 14854                           prodl	equ	0xFF3
 14855                           intcon	equ	0xFF2
 14856                           postinc0	equ	0xFEE
 14857                           wreg	equ	0xFE8
 14858                           indf2	equ	0xFDF
 14859                           postinc2	equ	0xFDE
 14860                           fsr2h	equ	0xFDA
 14861                           fsr2l	equ	0xFD9
 14862                           status	equ	0xFD8
 14863                           
 14864 ;; *************** function _get_channel *****************
 14865 ;; Defined at:
 14866 ;;		line 379 in file "vend.c"
 14867 ;; Parameters:    Size  Location     Type
 14868 ;;  butons          1    wreg     unsigned char 
 14869 ;; Auto vars:     Size  Location     Type
 14870 ;;  butons          1   18[COMRAM] unsigned char 
 14871 ;; Return value:  Size  Location     Type
 14872 ;;                  1    wreg      unsigned char 
 14873 ;; Registers used:
 14874 ;;		wreg, status,2, status,0
 14875 ;; Tracked objects:
 14876 ;;		On entry : 0/0
 14877 ;;		On exit  : 0/0
 14878 ;;		Unchanged: 0/0
 14879 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14884 ;;Total ram usage:        1 bytes
 14885 ;; Hardware stack levels used:    1
 14886 ;; Hardware stack levels required when called:    2
 14887 ;; This function calls:
 14888 ;;		Nothing
 14889 ;; This function is called by:
 14890 ;;		_main
 14891 ;;		_Audit
 14892 ;;		_set_price
 14893 ;;		_Vend_settime
 14894 ;;		_Chan_link
 14895 ;;		_Sens_off
 14896 ;;		_price_check
 14897 ;; This function uses a non-reentrant model
 14898 ;;
 14899                           
 14900                           	psect	text87
 14901  012A7C                     __ptext87:
 14902                           	opt stack 0
 14903  012A7C                     _get_channel:
 14904                           	opt stack 27
 14905                           
 14906                           ;incstack = 0
 14907                           ;get_channel@butons stored from wreg
 14908  012A7C  6E1D               	movwf	get_channel@butons,c
 14909                           
 14910                           ;vend.c: 382: channel = 0x00;
 14911  012A7E  0E00               	movlw	0
 14912  012A80  6E30               	movwf	_channel,c	;volatile
 14913                           
 14914                           ;vend.c: 383: while(butons != 0)
 14915  012A82  D004               	goto	l2274
 14916  012A84                     
 14917                           ;vend.c: 384: {
 14918                           ;vend.c: 385: channel++;
 14919  012A84  2A30               	incf	_channel,f,c	;volatile
 14920                           
 14921                           ;vend.c: 386: butons = butons >> 1;
 14922  012A86  90D8               	bcf	status,0,c
 14923  012A88  301D               	rrcf	get_channel@butons,w,c
 14924  012A8A  6E1D               	movwf	get_channel@butons,c
 14925  012A8C                     l2274:
 14926  012A8C  501D               	movf	get_channel@butons,w,c
 14927  012A8E  A4D8               	btfss	status,2,c
 14928  012A90  D7F9               	goto	l2275
 14929                           
 14930                           ;vend.c: 387: }
 14931                           ;vend.c: 388: channel--;
 14932  012A92  0630               	decf	_channel,f,c	;volatile
 14933                           
 14934                           ;vend.c: 389: return channel;
 14935  012A94  5030               	movf	_channel,w,c	;volatile
 14936  012A96  0012               	return	
 14937  012A98                     __end_of_get_channel:
 14938                           	opt stack 0
 14939                           tblptru	equ	0xFF8
 14940                           tblptrh	equ	0xFF7
 14941                           tblptrl	equ	0xFF6
 14942                           tablat	equ	0xFF5
 14943                           prodh	equ	0xFF4
 14944                           prodl	equ	0xFF3
 14945                           intcon	equ	0xFF2
 14946                           postinc0	equ	0xFEE
 14947                           wreg	equ	0xFE8
 14948                           indf2	equ	0xFDF
 14949                           postinc2	equ	0xFDE
 14950                           fsr2h	equ	0xFDA
 14951                           fsr2l	equ	0xFD9
 14952                           status	equ	0xFD8
 14953                           
 14954 ;; *************** function _butin *****************
 14955 ;; Defined at:
 14956 ;;		line 172 in file "vend.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;		None
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;  butons          1   19[COMRAM] unsigned char 
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1    wreg      unsigned char 
 14963 ;; Registers used:
 14964 ;;		wreg, status,2, status,0
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14972 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14974 ;;Total ram usage:        2 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; Hardware stack levels required when called:    2
 14977 ;; This function calls:
 14978 ;;		Nothing
 14979 ;; This function is called by:
 14980 ;;		_main
 14981 ;;		_butindb
 14982 ;;		_Audit
 14983 ;;		_price_check
 14984 ;; This function uses a non-reentrant model
 14985 ;;
 14986                           
 14987                           	psect	text88
 14988  0123D4                     __ptext88:
 14989                           	opt stack 0
 14990  0123D4                     _butin:
 14991                           	opt stack 27
 14992                           
 14993                           ;vend.c: 174: LATA7 = 0;
 14994                           
 14995                           ;incstack = 0
 14996  0123D4  9E83               	bcf	3971,7,c	;volatile
 14997                           
 14998                           ;vend.c: 175: LATA6 = 1;
 14999  0123D6  8C83               	bsf	3971,6,c	;volatile
 15000                           
 15001                           ;vend.c: 176: _delay((unsigned long)((15)*(12000000/4000.0)));
 15002  0123D8  0E3B               	movlw	59
 15003  0123DA  6E1D               	movwf	??_butin& (0+255),c
 15004  0123DC  0E70               	movlw	112
 15005  0123DE                     u5857:
 15006  0123DE  2EE8               	decfsz	wreg,f,c
 15007  0123E0  D7FE               	bra	u5857
 15008  0123E2  2E1D               	decfsz	??_butin& (0+255),f,c
 15009  0123E4  D7FC               	bra	u5857
 15010                           
 15011                           ;vend.c: 178: uint8_t butons = ((PORTA >> 1) & 0x0F) << 4;
 15012  0123E6  CF8D F01D          	movff	3981,??_butin	;volatile
 15013  0123EA  90D8               	bcf	status,0,c
 15014  0123EC  321D               	rrcf	??_butin,f,c
 15015  0123EE  0E0F               	movlw	15
 15016  0123F0  161D               	andwf	??_butin,f,c
 15017  0123F2  381D               	swapf	??_butin,w,c
 15018  0123F4  0BF0               	andlw	240
 15019  0123F6  6E1E               	movwf	butin@butons,c
 15020                           
 15021                           ;vend.c: 179: LATA7 = 1;
 15022  0123F8  8E83               	bsf	3971,7,c	;volatile
 15023                           
 15024                           ;vend.c: 180: LATA6 = 0;
 15025  0123FA  9C83               	bcf	3971,6,c	;volatile
 15026                           
 15027                           ;vend.c: 181: _delay((unsigned long)((15)*(12000000/4000.0)));
 15028  0123FC  0E3B               	movlw	59
 15029  0123FE  6E1D               	movwf	??_butin& (0+255),c
 15030  012400  0E70               	movlw	112
 15031  012402                     u5867:
 15032  012402  2EE8               	decfsz	wreg,f,c
 15033  012404  D7FE               	bra	u5867
 15034  012406  2E1D               	decfsz	??_butin& (0+255),f,c
 15035  012408  D7FC               	bra	u5867
 15036                           
 15037                           ;vend.c: 183: butons = ((PORTA >> 1) & 0x0F) | butons;
 15038  01240A  90D8               	bcf	status,0,c
 15039  01240C  308D               	rrcf	3981,w,c	;volatile
 15040  01240E  0B0F               	andlw	15
 15041  012410  101E               	iorwf	butin@butons,w,c
 15042  012412  6E1E               	movwf	butin@butons,c
 15043                           
 15044                           ;vend.c: 184: LATA7 = 1;
 15045  012414  8E83               	bsf	3971,7,c	;volatile
 15046                           
 15047                           ;vend.c: 185: LATA6 = 1;
 15048  012416  8C83               	bsf	3971,6,c	;volatile
 15049                           
 15050                           ;vend.c: 186: return ~butons;
 15051  012418  501E               	movf	butin@butons,w,c
 15052  01241A  0AFF               	xorlw	255
 15053  01241C  0012               	return	
 15054  01241E                     __end_of_butin:
 15055                           	opt stack 0
 15056                           tblptru	equ	0xFF8
 15057                           tblptrh	equ	0xFF7
 15058                           tblptrl	equ	0xFF6
 15059                           tablat	equ	0xFF5
 15060                           prodh	equ	0xFF4
 15061                           prodl	equ	0xFF3
 15062                           intcon	equ	0xFF2
 15063                           postinc0	equ	0xFEE
 15064                           wreg	equ	0xFE8
 15065                           indf2	equ	0xFDF
 15066                           postinc2	equ	0xFDE
 15067                           fsr2h	equ	0xFDA
 15068                           fsr2l	equ	0xFD9
 15069                           status	equ	0xFD8
 15070                           
 15071 ;; *************** function _Read_NVstore *****************
 15072 ;; Defined at:
 15073 ;;		line 96 in file "vend.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;  storeadd        2   20[COMRAM] unsigned int 
 15076 ;;  storemem        2   22[COMRAM] PTR unsigned char 
 15077 ;;		 -> pnvcash(3), pvcash(2), 
 15078 ;;  storesize       1   24[COMRAM] unsigned char 
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  i               1   25[COMRAM] unsigned char 
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  1    wreg      void 
 15083 ;; Registers used:
 15084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15085 ;; Tracked objects:
 15086 ;;		On entry : 0/0
 15087 ;;		On exit  : 0/0
 15088 ;;		Unchanged: 0/0
 15089 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15090 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15093 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15094 ;;Total ram usage:        6 bytes
 15095 ;; Hardware stack levels used:    1
 15096 ;; Hardware stack levels required when called:    3
 15097 ;; This function calls:
 15098 ;;		_DATAEE_ReadByte
 15099 ;; This function is called by:
 15100 ;;		_Update_cashaudit
 15101 ;;		_Audit
 15102 ;;		_Update_coinsout
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           	psect	text89
 15107  012822                     __ptext89:
 15108                           	opt stack 0
 15109  012822                     _Read_NVstore:
 15110                           	opt stack 23
 15111                           
 15112                           ;vend.c: 98: uint8_t i = 0;
 15113                           
 15114                           ;incstack = 0
 15115  012822  0E00               	movlw	0
 15116  012824  6E24               	movwf	Read_NVstore@i,c
 15117                           
 15118                           ;vend.c: 99: while(i < storesize)
 15119  012826  D012               	goto	l2172
 15120  012828                     
 15121                           ;vend.c: 100: {
 15122                           ;vend.c: 101: storemem[i] = DATAEE_ReadByte(storeadd + i);
 15123  012828  5024               	movf	Read_NVstore@i,w,c
 15124  01282A  0D01               	mullw	1
 15125  01282C  50F3               	movf	prodl,w,c
 15126  01282E  2421               	addwf	Read_NVstore@storemem,w,c
 15127  012830  6ED9               	movwf	fsr2l,c
 15128  012832  50F4               	movf	prodh,w,c
 15129  012834  2022               	addwfc	Read_NVstore@storemem+1,w,c
 15130  012836  6EDA               	movwf	fsr2h,c
 15131  012838  5024               	movf	Read_NVstore@i,w,c
 15132  01283A  241F               	addwf	Read_NVstore@storeadd,w,c
 15133  01283C  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 15134  01283E  0E00               	movlw	0
 15135  012840  2020               	addwfc	Read_NVstore@storeadd+1,w,c
 15136  012842  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 15137  012844  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 15138  012848  6EDF               	movwf	indf2,c
 15139                           
 15140                           ;vend.c: 102: i++;
 15141  01284A  2A24               	incf	Read_NVstore@i,f,c
 15142  01284C                     l2172:
 15143  01284C  5023               	movf	Read_NVstore@storesize,w,c
 15144  01284E  5C24               	subwf	Read_NVstore@i,w,c
 15145  012850  B0D8               	btfsc	status,0,c
 15146  012852  0012               	return	
 15147  012854  D7E9               	goto	l2173
 15148  012856                     __end_of_Read_NVstore:
 15149                           	opt stack 0
 15150                           tblptru	equ	0xFF8
 15151                           tblptrh	equ	0xFF7
 15152                           tblptrl	equ	0xFF6
 15153                           tablat	equ	0xFF5
 15154                           prodh	equ	0xFF4
 15155                           prodl	equ	0xFF3
 15156                           intcon	equ	0xFF2
 15157                           postinc0	equ	0xFEE
 15158                           wreg	equ	0xFE8
 15159                           indf2	equ	0xFDF
 15160                           postinc2	equ	0xFDE
 15161                           fsr2h	equ	0xFDA
 15162                           fsr2l	equ	0xFD9
 15163                           status	equ	0xFD8
 15164                           
 15165 ;; *************** function _CMP1_GetOutputStatus *****************
 15166 ;; Defined at:
 15167 ;;		line 74 in file "mcc_generated_files/cmp1.c"
 15168 ;; Parameters:    Size  Location     Type
 15169 ;;		None
 15170 ;; Auto vars:     Size  Location     Type
 15171 ;;		None
 15172 ;; Return value:  Size  Location     Type
 15173 ;;                  1    wreg      unsigned char 
 15174 ;; Registers used:
 15175 ;;		wreg
 15176 ;; Tracked objects:
 15177 ;;		On entry : 0/0
 15178 ;;		On exit  : 0/0
 15179 ;;		Unchanged: 0/0
 15180 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15185 ;;Total ram usage:        0 bytes
 15186 ;; Hardware stack levels used:    1
 15187 ;; Hardware stack levels required when called:    2
 15188 ;; This function calls:
 15189 ;;		Nothing
 15190 ;; This function is called by:
 15191 ;;		_main
 15192 ;;		_displ_sens
 15193 ;;		_Audit
 15194 ;; This function uses a non-reentrant model
 15195 ;;
 15196                           
 15197                           	psect	text90
 15198  012C1C                     __ptext90:
 15199                           	opt stack 0
 15200  012C1C                     _CMP1_GetOutputStatus:
 15201                           	opt stack 25
 15202                           
 15203                           ;cmp1.c: 76: return (CMOUTbits.MC1OUT);
 15204                           
 15205                           ;incstack = 0
 15206  012C1C  010F               	movlb	15	; () banked
 15207  012C1E  A13D               	btfss	61,0,b	;volatile
 15208  012C20  D002               	goto	u4200
 15209  012C22  0E01               	movlw	1
 15210  012C24  0012               	return	
 15211  012C26                     u4200:
 15212  012C26  0E00               	movlw	0
 15213  012C28  0012               	return	
 15214  012C2A                     __end_of_CMP1_GetOutputStatus:
 15215                           	opt stack 0
 15216                           tblptru	equ	0xFF8
 15217                           tblptrh	equ	0xFF7
 15218                           tblptrl	equ	0xFF6
 15219                           tablat	equ	0xFF5
 15220                           prodh	equ	0xFF4
 15221                           prodl	equ	0xFF3
 15222                           intcon	equ	0xFF2
 15223                           postinc0	equ	0xFEE
 15224                           wreg	equ	0xFE8
 15225                           indf2	equ	0xFDF
 15226                           postinc2	equ	0xFDE
 15227                           fsr2h	equ	0xFDA
 15228                           fsr2l	equ	0xFD9
 15229                           status	equ	0xFD8
 15230                           
 15231 ;; *************** function _displ_noteer *****************
 15232 ;; Defined at:
 15233 ;;		line 182 in file "lcd.c"
 15234 ;; Parameters:    Size  Location     Type
 15235 ;;		None
 15236 ;; Auto vars:     Size  Location     Type
 15237 ;;		None
 15238 ;; Return value:  Size  Location     Type
 15239 ;;                  1    wreg      void 
 15240 ;; Registers used:
 15241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15242 ;; Tracked objects:
 15243 ;;		On entry : 0/0
 15244 ;;		On exit  : 0/0
 15245 ;;		Unchanged: 0/0
 15246 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15251 ;;Total ram usage:        0 bytes
 15252 ;; Hardware stack levels used:    1
 15253 ;; Hardware stack levels required when called:    8
 15254 ;; This function calls:
 15255 ;;		_displ_code
 15256 ;;		_lcd_string
 15257 ;; This function is called by:
 15258 ;;		_main
 15259 ;; This function uses a non-reentrant model
 15260 ;;
 15261                           
 15262                           	psect	text91
 15263  012922                     __ptext91:
 15264                           	opt stack 0
 15265  012922                     _displ_noteer:
 15266                           	opt stack 22
 15267                           
 15268                           ;lcd.c: 184: lcd_string(noteerr, line1);
 15269                           
 15270                           ; BSR set to: 15
 15271                           ;incstack = 0
 15272  012922  0ED2               	movlw	low _noteerr
 15273  012924  6E24               	movwf	lcd_string@lcdstring,c
 15274  012926  0EFE               	movlw	high _noteerr
 15275  012928  6E25               	movwf	lcd_string@lcdstring+1,c
 15276  01292A  0E4A               	movlw	low _line1
 15277  01292C  6EF6               	movwf	tblptrl,c
 15278  01292E                     	if	1	;There is more than 1 active tblptr byte
 15279  01292E  0EFC               	movlw	high _line1
 15280  012930  6EF7               	movwf	tblptrh,c
 15281  012932                     	endif
 15282  012932                     	if	1	;There are 3 active tblptr bytes
 15283  012932  0E00               	movlw	low (_line1 shr (0+16))
 15284  012934  6EF8               	movwf	tblptru,c
 15285  012936                     	endif
 15286  012936  0008               	tblrd		*
 15287  012938  CFF5 F026          	movff	tablat,lcd_string@lcdline
 15288  01293C  EC78  F08A         	call	_lcd_string	;wreg free
 15289                           
 15290                           ;lcd.c: 185: ercode = mdbdata[0];
 15291  012940  C060  F044         	movff	_mdbdata,_ercode
 15292                           
 15293                           ;lcd.c: 186: displ_code(ercode);
 15294  012944  5044               	movf	_ercode,w,c
 15295  012946  EC80  F084         	call	_displ_code
 15296                           
 15297                           ;lcd.c: 187: mdbflags.noteerr = 0;
 15298  01294A  923F               	bcf	_mdbflags,1,c
 15299                           
 15300                           ;lcd.c: 188: venflags.noterr = 0;
 15301  01294C  9C2D               	bcf	_venflags,6,c
 15302  01294E  0012               	return		;funcret
 15303  012950                     __end_of_displ_noteer:
 15304                           	opt stack 0
 15305                           tblptru	equ	0xFF8
 15306                           tblptrh	equ	0xFF7
 15307                           tblptrl	equ	0xFF6
 15308                           tablat	equ	0xFF5
 15309                           prodh	equ	0xFF4
 15310                           prodl	equ	0xFF3
 15311                           intcon	equ	0xFF2
 15312                           postinc0	equ	0xFEE
 15313                           wreg	equ	0xFE8
 15314                           indf2	equ	0xFDF
 15315                           postinc2	equ	0xFDE
 15316                           fsr2h	equ	0xFDA
 15317                           fsr2l	equ	0xFD9
 15318                           status	equ	0xFD8
 15319                           
 15320 ;; *************** function _displ_code *****************
 15321 ;; Defined at:
 15322 ;;		line 135 in file "lcd.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;  ercode          1    wreg     unsigned char 
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;  ercode          1   27[COMRAM] unsigned char 
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  1    wreg      void 
 15329 ;; Registers used:
 15330 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15339 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15340 ;;Total ram usage:        3 bytes
 15341 ;; Hardware stack levels used:    1
 15342 ;; Hardware stack levels required when called:    7
 15343 ;; This function calls:
 15344 ;;		_lcd_writeC
 15345 ;; This function is called by:
 15346 ;;		_displ_noteer
 15347 ;; This function uses a non-reentrant model
 15348 ;;
 15349                           
 15350                           	psect	text92
 15351  010900                     __ptext92:
 15352                           	opt stack 0
 15353  010900                     _displ_code:
 15354                           	opt stack 22
 15355                           
 15356                           ;incstack = 0
 15357                           ;displ_code@ercode stored from wreg
 15358  010900  6E26               	movwf	displ_code@ercode,c
 15359                           
 15360                           ;lcd.c: 137: if((ercode >> 4) < 0x0A)
 15361  010902  C026  F024         	movff	displ_code@ercode,??_displ_code
 15362  010906  3A24               	swapf	??_displ_code,f,c
 15363  010908  0E0F               	movlw	15
 15364  01090A  1624               	andwf	??_displ_code,f,c
 15365  01090C  0E0A               	movlw	10
 15366  01090E  6024               	cpfslt	??_displ_code,c
 15367  010910  D01E               	goto	l1603
 15368                           
 15369                           ;lcd.c: 138: {
 15370                           ;lcd.c: 139: lcd_writeC((ercode >> 4) | 0x30);
 15371  010912  3826               	swapf	displ_code@ercode,w,c
 15372  010914  0B0F               	andlw	15
 15373  010916  0930               	iorlw	48
 15374  010918  EC84  F08F         	call	_lcd_writeC
 15375                           
 15376                           ;lcd.c: 140: }
 15377  01091C  D033               	goto	l1605
 15378  01091E  0E41               	movlw	65
 15379  010920  EC84  F08F         	call	_lcd_writeC
 15380                           
 15381                           ;lcd.c: 146: break;
 15382  010924  D02F               	goto	l1605
 15383  010926  0E42               	movlw	66
 15384  010928  EC84  F08F         	call	_lcd_writeC
 15385                           
 15386                           ;lcd.c: 148: break;
 15387  01092C  D02B               	goto	l1605
 15388  01092E  0E43               	movlw	67
 15389  010930  EC84  F08F         	call	_lcd_writeC
 15390                           
 15391                           ;lcd.c: 150: break;
 15392  010934  D027               	goto	l1605
 15393  010936  0E44               	movlw	68
 15394  010938  EC84  F08F         	call	_lcd_writeC
 15395                           
 15396                           ;lcd.c: 152: break;
 15397  01093C  D023               	goto	l1605
 15398  01093E  0E45               	movlw	69
 15399  010940  EC84  F08F         	call	_lcd_writeC
 15400                           
 15401                           ;lcd.c: 154: break;
 15402  010944  D01F               	goto	l1605
 15403  010946  0E46               	movlw	70
 15404  010948  EC84  F08F         	call	_lcd_writeC
 15405                           
 15406                           ;lcd.c: 156: }
 15407  01094C  D01B               	goto	l1605
 15408  01094E                     l1603:
 15409  01094E  3826               	swapf	displ_code@ercode,w,c
 15410  010950  0B0F               	andlw	15
 15411  010952  6E24               	movwf	??_displ_code& (0+255),c
 15412  010954  6A25               	clrf	(??_displ_code+1)& (0+255),c
 15413                           
 15414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15415                           ; Switch size 1, requested type "space"
 15416                           ; Number of cases is 1, Range of values is 0 to 0
 15417                           ; switch strategies available:
 15418                           ; Name         Instructions Cycles
 15419                           ; simple_byte            4     3 (average)
 15420                           ;	Chosen strategy is simple_byte
 15421  010956  5025               	movf	??_displ_code+1,w,c
 15422  010958  0A00               	xorlw	0	; case 0
 15423  01095A  A4D8               	btfss	status,2,c
 15424  01095C  D013               	goto	l1605
 15425                           
 15426                           ; Switch size 1, requested type "space"
 15427                           ; Number of cases is 6, Range of values is 10 to 15
 15428                           ; switch strategies available:
 15429                           ; Name         Instructions Cycles
 15430                           ; simple_byte           19    10 (average)
 15431                           ;	Chosen strategy is simple_byte
 15432  01095E  5024               	movf	??_displ_code,w,c
 15433  010960  0A0A               	xorlw	10	; case 10
 15434  010962  B4D8               	btfsc	status,2,c
 15435  010964  D7DC               	goto	l1604
 15436  010966  0A01               	xorlw	1	; case 11
 15437  010968  B4D8               	btfsc	status,2,c
 15438  01096A  D7DD               	goto	l1606
 15439  01096C  0A07               	xorlw	7	; case 12
 15440  01096E  B4D8               	btfsc	status,2,c
 15441  010970  D7DE               	goto	l1607
 15442  010972  0A01               	xorlw	1	; case 13
 15443  010974  B4D8               	btfsc	status,2,c
 15444  010976  D7DF               	goto	l1608
 15445  010978  0A03               	xorlw	3	; case 14
 15446  01097A  B4D8               	btfsc	status,2,c
 15447  01097C  D7E0               	goto	l1609
 15448  01097E  0A01               	xorlw	1	; case 15
 15449  010980  B4D8               	btfsc	status,2,c
 15450  010982  D7E1               	goto	l1610
 15451  010984                     l1605:
 15452                           
 15453                           ;lcd.c: 157: }
 15454                           ;lcd.c: 158: if((ercode & 0x0F) < 0x0A)
 15455  010984  C026  F024         	movff	displ_code@ercode,??_displ_code
 15456  010988  0E0F               	movlw	15
 15457  01098A  1624               	andwf	??_displ_code,f,c
 15458  01098C  0E0A               	movlw	10
 15459  01098E  6024               	cpfslt	??_displ_code,c
 15460  010990  D01E               	goto	l1613
 15461                           
 15462                           ;lcd.c: 159: {
 15463                           ;lcd.c: 160: lcd_writeC((ercode & 0x0F) | 0x30);
 15464  010992  5026               	movf	displ_code@ercode,w,c
 15465  010994  0B0F               	andlw	15
 15466  010996  0930               	iorlw	48
 15467  010998  EC84  F08F         	call	_lcd_writeC
 15468                           
 15469                           ;lcd.c: 161: }
 15470  01099C  0012               	return	
 15471  01099E  0E41               	movlw	65
 15472  0109A0  EC84  F08F         	call	_lcd_writeC
 15473                           
 15474                           ;lcd.c: 167: break;
 15475  0109A4  0012               	return	
 15476  0109A6  0E42               	movlw	66
 15477  0109A8  EC84  F08F         	call	_lcd_writeC
 15478                           
 15479                           ;lcd.c: 169: break;
 15480  0109AC  0012               	return	
 15481  0109AE  0E43               	movlw	67
 15482  0109B0  EC84  F08F         	call	_lcd_writeC
 15483                           
 15484                           ;lcd.c: 171: break;
 15485  0109B4  0012               	return	
 15486  0109B6  0E44               	movlw	68
 15487  0109B8  EC84  F08F         	call	_lcd_writeC
 15488                           
 15489                           ;lcd.c: 173: break;
 15490  0109BC  0012               	return	
 15491  0109BE  0E45               	movlw	69
 15492  0109C0  EC84  F08F         	call	_lcd_writeC
 15493                           
 15494                           ;lcd.c: 175: break;
 15495  0109C4  0012               	return	
 15496  0109C6  0E46               	movlw	70
 15497  0109C8  EC84  F08F         	call	_lcd_writeC
 15498                           
 15499                           ;lcd.c: 177: }
 15500  0109CC  0012               	return	
 15501  0109CE                     l1613:
 15502  0109CE  5026               	movf	displ_code@ercode,w,c
 15503  0109D0  0B0F               	andlw	15
 15504  0109D2  6E24               	movwf	??_displ_code& (0+255),c
 15505  0109D4  6A25               	clrf	(??_displ_code+1)& (0+255),c
 15506                           
 15507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15508                           ; Switch size 1, requested type "space"
 15509                           ; Number of cases is 1, Range of values is 0 to 0
 15510                           ; switch strategies available:
 15511                           ; Name         Instructions Cycles
 15512                           ; simple_byte            4     3 (average)
 15513                           ;	Chosen strategy is simple_byte
 15514  0109D6  5025               	movf	??_displ_code+1,w,c
 15515  0109D8  0A00               	xorlw	0	; case 0
 15516  0109DA  A4D8               	btfss	status,2,c
 15517  0109DC  0012               	return	
 15518                           
 15519                           ; Switch size 1, requested type "space"
 15520                           ; Number of cases is 6, Range of values is 10 to 15
 15521                           ; switch strategies available:
 15522                           ; Name         Instructions Cycles
 15523                           ; simple_byte           19    10 (average)
 15524                           ;	Chosen strategy is simple_byte
 15525  0109DE  5024               	movf	??_displ_code,w,c
 15526  0109E0  0A0A               	xorlw	10	; case 10
 15527  0109E2  B4D8               	btfsc	status,2,c
 15528  0109E4  D7DC               	goto	l1614
 15529  0109E6  0A01               	xorlw	1	; case 11
 15530  0109E8  B4D8               	btfsc	status,2,c
 15531  0109EA  D7DD               	goto	l1616
 15532  0109EC  0A07               	xorlw	7	; case 12
 15533  0109EE  B4D8               	btfsc	status,2,c
 15534  0109F0  D7DE               	goto	l1617
 15535  0109F2  0A01               	xorlw	1	; case 13
 15536  0109F4  B4D8               	btfsc	status,2,c
 15537  0109F6  D7DF               	goto	l1618
 15538  0109F8  0A03               	xorlw	3	; case 14
 15539  0109FA  B4D8               	btfsc	status,2,c
 15540  0109FC  D7E0               	goto	l1619
 15541  0109FE  0A01               	xorlw	1	; case 15
 15542  010A00  A4D8               	btfss	status,2,c
 15543  010A02  0012               	return	
 15544  010A04  D7E0               	goto	l1620
 15545  010A06                     __end_of_displ_code:
 15546                           	opt stack 0
 15547                           tblptru	equ	0xFF8
 15548                           tblptrh	equ	0xFF7
 15549                           tblptrl	equ	0xFF6
 15550                           tablat	equ	0xFF5
 15551                           prodh	equ	0xFF4
 15552                           prodl	equ	0xFF3
 15553                           intcon	equ	0xFF2
 15554                           postinc0	equ	0xFEE
 15555                           wreg	equ	0xFE8
 15556                           indf2	equ	0xFDF
 15557                           postinc2	equ	0xFDE
 15558                           fsr2h	equ	0xFDA
 15559                           fsr2l	equ	0xFD9
 15560                           status	equ	0xFD8
 15561                           
 15562 ;; *************** function _displ_nochange *****************
 15563 ;; Defined at:
 15564 ;;		line 242 in file "lcd.c"
 15565 ;; Parameters:    Size  Location     Type
 15566 ;;		None
 15567 ;; Auto vars:     Size  Location     Type
 15568 ;;		None
 15569 ;; Return value:  Size  Location     Type
 15570 ;;                  1    wreg      void 
 15571 ;; Registers used:
 15572 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15573 ;; Tracked objects:
 15574 ;;		On entry : 0/0
 15575 ;;		On exit  : 0/0
 15576 ;;		Unchanged: 0/0
 15577 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15582 ;;Total ram usage:        0 bytes
 15583 ;; Hardware stack levels used:    1
 15584 ;; Hardware stack levels required when called:    8
 15585 ;; This function calls:
 15586 ;;		_lcd_dispadd
 15587 ;;		_lcd_string
 15588 ;; This function is called by:
 15589 ;;		_main
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593                           	psect	text93
 15594  012856                     __ptext93:
 15595                           	opt stack 0
 15596  012856                     _displ_nochange:
 15597                           	opt stack 22
 15598                           
 15599                           ;lcd.c: 244: lcd_dispadd(line3);
 15600                           
 15601                           ;incstack = 0
 15602  012856  0E48               	movlw	low _line3
 15603  012858  6EF6               	movwf	tblptrl,c
 15604  01285A                     	if	1	;There is more than 1 active tblptr byte
 15605  01285A  0EFC               	movlw	high _line3
 15606  01285C  6EF7               	movwf	tblptrh,c
 15607  01285E                     	endif
 15608  01285E                     	if	1	;There are 3 active tblptr bytes
 15609  01285E  0E00               	movlw	low (_line3 shr (0+16))
 15610  012860  6EF8               	movwf	tblptru,c
 15611  012862                     	endif
 15612  012862  0008               	tblrd		*
 15613  012864  50F5               	movf	tablat,w,c
 15614  012866  EC74  F095         	call	_lcd_dispadd
 15615                           
 15616                           ;lcd.c: 245: lcd_string(nochange, line3);
 15617  01286A  0E72               	movlw	low _nochange
 15618  01286C  6E24               	movwf	lcd_string@lcdstring,c
 15619  01286E  0EFE               	movlw	high _nochange
 15620  012870  6E25               	movwf	lcd_string@lcdstring+1,c
 15621  012872  0E48               	movlw	low _line3
 15622  012874  6EF6               	movwf	tblptrl,c
 15623  012876                     	if	1	;There is more than 1 active tblptr byte
 15624  012876  0EFC               	movlw	high _line3
 15625  012878  6EF7               	movwf	tblptrh,c
 15626  01287A                     	endif
 15627  01287A                     	if	1	;There are 3 active tblptr bytes
 15628  01287A  0E00               	movlw	low (_line3 shr (0+16))
 15629  01287C  6EF8               	movwf	tblptru,c
 15630  01287E                     	endif
 15631  01287E  0008               	tblrd		*
 15632  012880  CFF5 F026          	movff	tablat,lcd_string@lcdline
 15633  012884  EC78  F08A         	call	_lcd_string	;wreg free
 15634  012888  0012               	return		;funcret
 15635  01288A                     __end_of_displ_nochange:
 15636                           	opt stack 0
 15637                           tblptru	equ	0xFF8
 15638                           tblptrh	equ	0xFF7
 15639                           tblptrl	equ	0xFF6
 15640                           tablat	equ	0xFF5
 15641                           prodh	equ	0xFF4
 15642                           prodl	equ	0xFF3
 15643                           intcon	equ	0xFF2
 15644                           postinc0	equ	0xFEE
 15645                           wreg	equ	0xFE8
 15646                           indf2	equ	0xFDF
 15647                           postinc2	equ	0xFDE
 15648                           fsr2h	equ	0xFDA
 15649                           fsr2l	equ	0xFD9
 15650                           status	equ	0xFD8
 15651                           
 15652 ;; *************** function _displ_credit *****************
 15653 ;; Defined at:
 15654 ;;		line 127 in file "lcd.c"
 15655 ;; Parameters:    Size  Location     Type
 15656 ;;		None
 15657 ;; Auto vars:     Size  Location     Type
 15658 ;;  cash            1   31[COMRAM] unsigned char 
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  1    wreg      void 
 15661 ;; Registers used:
 15662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15663 ;; Tracked objects:
 15664 ;;		On entry : 0/0
 15665 ;;		On exit  : 0/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15672 ;;Total ram usage:        1 bytes
 15673 ;; Hardware stack levels used:    1
 15674 ;; Hardware stack levels required when called:    8
 15675 ;; This function calls:
 15676 ;;		_credit_check
 15677 ;;		_displ_hex
 15678 ;;		_lcd_string
 15679 ;; This function is called by:
 15680 ;;		_main
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684                           	psect	text94
 15685  01288A                     __ptext94:
 15686                           	opt stack 0
 15687  01288A                     _displ_credit:
 15688                           	opt stack 22
 15689                           
 15690                           ;lcd.c: 129: lcd_string(credits, line1);
 15691                           
 15692                           ;incstack = 0
 15693  01288A  0E59               	movlw	low _credits
 15694  01288C  6E24               	movwf	lcd_string@lcdstring,c
 15695  01288E  0EFF               	movlw	high _credits
 15696  012890  6E25               	movwf	lcd_string@lcdstring+1,c
 15697  012892  0E4A               	movlw	low _line1
 15698  012894  6EF6               	movwf	tblptrl,c
 15699  012896                     	if	1	;There is more than 1 active tblptr byte
 15700  012896  0EFC               	movlw	high _line1
 15701  012898  6EF7               	movwf	tblptrh,c
 15702  01289A                     	endif
 15703  01289A                     	if	1	;There are 3 active tblptr bytes
 15704  01289A  0E00               	movlw	low (_line1 shr (0+16))
 15705  01289C  6EF8               	movwf	tblptru,c
 15706  01289E                     	endif
 15707  01289E  0008               	tblrd		*
 15708  0128A0  CFF5 F026          	movff	tablat,lcd_string@lcdline
 15709  0128A4  EC78  F08A         	call	_lcd_string	;wreg free
 15710                           
 15711                           ;lcd.c: 130: uint8_t cash = credit_check();
 15712  0128A8  EC0E  F095         	call	_credit_check	;wreg free
 15713  0128AC  6E2A               	movwf	displ_credit@cash,c
 15714                           
 15715                           ;lcd.c: 131: displ_hex((uint8_t) cash);
 15716  0128AE  502A               	movf	displ_credit@cash,w,c
 15717  0128B0  6E27               	movwf	displ_hex@hexnum,c
 15718  0128B2  6A28               	clrf	displ_hex@hexnum+1,c
 15719  0128B4  6A29               	clrf	displ_hex@hexnum+2,c
 15720  0128B6  ECC3  F089         	call	_displ_hex	;wreg free
 15721                           
 15722                           ;lcd.c: 132: venflags.credisplay = 0;
 15723  0128BA  982D               	bcf	_venflags,4,c
 15724  0128BC  0012               	return		;funcret
 15725  0128BE                     __end_of_displ_credit:
 15726                           	opt stack 0
 15727                           tblptru	equ	0xFF8
 15728                           tblptrh	equ	0xFF7
 15729                           tblptrl	equ	0xFF6
 15730                           tablat	equ	0xFF5
 15731                           prodh	equ	0xFF4
 15732                           prodl	equ	0xFF3
 15733                           intcon	equ	0xFF2
 15734                           postinc0	equ	0xFEE
 15735                           wreg	equ	0xFE8
 15736                           indf2	equ	0xFDF
 15737                           postinc2	equ	0xFDE
 15738                           fsr2h	equ	0xFDA
 15739                           fsr2l	equ	0xFD9
 15740                           status	equ	0xFD8
 15741                           
 15742 ;; *************** function _lcd_string *****************
 15743 ;; Defined at:
 15744 ;;		line 216 in file "lcd.c"
 15745 ;; Parameters:    Size  Location     Type
 15746 ;;  lcdstring       2   25[COMRAM] PTR unsigned char 
 15747 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
 15748 ;;		 -> tenrand(9), setnotes(69), chanresetmsg(32), chanlinkm(55), 
 15749 ;;		 -> vendtimem(41), setimemsg(41), vendsetup(67), pricesetm2(57), 
 15750 ;;		 -> pricesetmsg(18), creditclr(16), dacmsg(13), hoppcoin(51), 
 15751 ;;		 -> totalvendsm(7), vendispmsg(21), totalmsg(8), cashinmsg(10), 
 15752 ;;		 -> initnote(37), nochange(33), noteerr(28), credits(13), 
 15753 ;;		 -> timemsg(18), clrline(21), enabled(10), disabled(10), 
 15754 ;;		 -> sensoffmsg(31), sensmsg(11), linkmsg(12), chanmsg(12), 
 15755 ;;		 -> clrmsg(10), onmsg(4), offmsg(4), servmsg(80), 
 15756 ;;		 -> emptymsg(9), inscoin(39), 
 15757 ;;  lcdline         1   27[COMRAM] unsigned char 
 15758 ;; Auto vars:     Size  Location     Type
 15759 ;;		None
 15760 ;; Return value:  Size  Location     Type
 15761 ;;                  1    wreg      void 
 15762 ;; Registers used:
 15763 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15764 ;; Tracked objects:
 15765 ;;		On entry : 0/0
 15766 ;;		On exit  : 0/0
 15767 ;;		Unchanged: 0/0
 15768 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15769 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15772 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15773 ;;Total ram usage:        5 bytes
 15774 ;; Hardware stack levels used:    1
 15775 ;; Hardware stack levels required when called:    7
 15776 ;; This function calls:
 15777 ;;		_lcd_dispadd
 15778 ;;		_lcd_write
 15779 ;;		_lcd_writeC
 15780 ;; This function is called by:
 15781 ;;		_main
 15782 ;;		_enter_service
 15783 ;;		_displ_sens
 15784 ;;		_displ_lflags
 15785 ;;		_displ_sflags
 15786 ;;		_displ_time
 15787 ;;		_displ_note
 15788 ;;		_displ_nendis
 15789 ;;		_displ_credit
 15790 ;;		_displ_noteer
 15791 ;;		_displ_nochange
 15792 ;;		_vend_init
 15793 ;;		_Audit
 15794 ;;		_Hopper_coin
 15795 ;;		_Update_Hopcoin
 15796 ;;		_Sensor_set
 15797 ;;		_Clear_cred
 15798 ;;		_price_set
 15799 ;;		_set_price
 15800 ;;		_Vend_setup
 15801 ;;		_Vend_settime
 15802 ;;		_Vend_timeset
 15803 ;;		_Chan_link
 15804 ;;		_Link_chan
 15805 ;;		_Sens_off
 15806 ;;		_off_sens
 15807 ;;		_Reset_settings
 15808 ;;		_set_notes
 15809 ;;		_enable_notes
 15810 ;;		_price_check
 15811 ;; This function uses a non-reentrant model
 15812 ;;
 15813                           
 15814                           	psect	text95
 15815  0114F0                     __ptext95:
 15816                           	opt stack 0
 15817  0114F0                     _lcd_string:
 15818                           	opt stack 22
 15819                           
 15820                           ;lcd.c: 218: if(lcdline == line1)
 15821                           
 15822                           ;incstack = 0
 15823  0114F0  0E4A               	movlw	low _line1
 15824  0114F2  6EF6               	movwf	tblptrl,c
 15825  0114F4                     	if	1	;There is more than 1 active tblptr byte
 15826  0114F4  0EFC               	movlw	high _line1
 15827  0114F6  6EF7               	movwf	tblptrh,c
 15828  0114F8                     	endif
 15829  0114F8                     	if	1	;There are 3 active tblptr bytes
 15830  0114F8  0E00               	movlw	low (_line1 shr (0+16))
 15831  0114FA  6EF8               	movwf	tblptru,c
 15832  0114FC                     	endif
 15833  0114FC  0008               	tblrd		*
 15834  0114FE  50F5               	movf	tablat,w,c
 15835  011500  6226               	cpfseq	lcd_string@lcdline,c
 15836  011502  D00B               	goto	l1637
 15837                           
 15838                           ;lcd.c: 219: {
 15839                           ;lcd.c: 220: lcd_write(dispclr);
 15840  011504  0E54               	movlw	low _dispclr
 15841  011506  6EF6               	movwf	tblptrl,c
 15842  011508                     	if	1	;There is more than 1 active tblptr byte
 15843  011508  0EFC               	movlw	high _dispclr
 15844  01150A  6EF7               	movwf	tblptrh,c
 15845  01150C                     	endif
 15846  01150C                     	if	1	;There are 3 active tblptr bytes
 15847  01150C  0E00               	movlw	low (_dispclr shr (0+16))
 15848  01150E  6EF8               	movwf	tblptru,c
 15849  011510                     	endif
 15850  011510  0008               	tblrd		*
 15851  011512  50F5               	movf	tablat,w,c
 15852  011514  EC78  F094         	call	_lcd_write
 15853                           
 15854                           ;lcd.c: 221: }
 15855  011518  D004               	goto	l1638
 15856  01151A                     l1637:
 15857                           
 15858                           ;lcd.c: 222: else
 15859                           ;lcd.c: 223: {
 15860                           ;lcd.c: 225: lcd_dispadd(lcdline | 0x80);
 15861  01151A  5026               	movf	lcd_string@lcdline,w,c
 15862  01151C  0980               	iorlw	128
 15863  01151E  EC74  F095         	call	_lcd_dispadd
 15864  011522                     l1638:
 15865                           
 15866                           ;lcd.c: 226: }
 15867                           ;lcd.c: 227: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
 15868  011522  0E00               	movlw	0
 15869  011524  6E45               	movwf	_stradd,c
 15870  011526  D028               	goto	l1639
 15871  011528                     
 15872                           ;lcd.c: 228: {
 15873                           ;lcd.c: 229: lcdata = lcdstring[stradd];
 15874  011528  5045               	movf	_stradd,w,c
 15875  01152A  0D01               	mullw	1
 15876  01152C  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 15877  011530  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 15878  011534  50F3               	movf	prodl,w,c
 15879  011536  2627               	addwf	??_lcd_string,f,c
 15880  011538  50F4               	movf	prodh,w,c
 15881  01153A  2228               	addwfc	??_lcd_string+1,f,c
 15882  01153C  C027  FFF6         	movff	??_lcd_string,tblptrl
 15883  011540  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 15884  011544                     	if	0	;tblptru may be non-zero
 15885  011544                     	endif
 15886  011544                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15887  011544  0E00               	movlw	low (__mediumconst shr (0+16))
 15888  011546  6EF8               	movwf	tblptru,c
 15889  011548                     	endif
 15890  011548  0008               	tblrd		*
 15891  01154A  CFF5 F046          	movff	tablat,_lcdata
 15892                           
 15893                           ;lcd.c: 230: lcd_writeC(lcdstring[stradd]);
 15894  01154E  5045               	movf	_stradd,w,c
 15895  011550  0D01               	mullw	1
 15896  011552  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 15897  011556  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 15898  01155A  50F3               	movf	prodl,w,c
 15899  01155C  2627               	addwf	??_lcd_string,f,c
 15900  01155E  50F4               	movf	prodh,w,c
 15901  011560  2228               	addwfc	??_lcd_string+1,f,c
 15902  011562  C027  FFF6         	movff	??_lcd_string,tblptrl
 15903  011566  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 15904  01156A                     	if	0	;tblptru may be non-zero
 15905  01156A                     	endif
 15906  01156A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15907  01156A  0E00               	movlw	low (__mediumconst shr (0+16))
 15908  01156C  6EF8               	movwf	tblptru,c
 15909  01156E                     	endif
 15910  01156E  0008               	tblrd		*
 15911  011570  50F5               	movf	tablat,w,c
 15912  011572  EC84  F08F         	call	_lcd_writeC
 15913  011576  2A45               	incf	_stradd,f,c
 15914  011578                     l1639:
 15915  011578  5045               	movf	_stradd,w,c
 15916  01157A  0D01               	mullw	1
 15917  01157C  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 15918  011580  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 15919  011584  50F3               	movf	prodl,w,c
 15920  011586  2627               	addwf	??_lcd_string,f,c
 15921  011588  50F4               	movf	prodh,w,c
 15922  01158A  2228               	addwfc	??_lcd_string+1,f,c
 15923  01158C  C027  FFF6         	movff	??_lcd_string,tblptrl
 15924  011590  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 15925  011594                     	if	0	;tblptru may be non-zero
 15926  011594                     	endif
 15927  011594                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15928  011594  0E00               	movlw	low (__mediumconst shr (0+16))
 15929  011596  6EF8               	movwf	tblptru,c
 15930  011598                     	endif
 15931  011598  0008               	tblrd		*
 15932  01159A  50F5               	movf	tablat,w,c
 15933  01159C  0900               	iorlw	0
 15934  01159E  B4D8               	btfsc	status,2,c
 15935  0115A0  0012               	return	
 15936  0115A2  D7C2               	goto	l1640
 15937  0115A4                     __end_of_lcd_string:
 15938                           	opt stack 0
 15939                           tblptru	equ	0xFF8
 15940                           tblptrh	equ	0xFF7
 15941                           tblptrl	equ	0xFF6
 15942                           tablat	equ	0xFF5
 15943                           prodh	equ	0xFF4
 15944                           prodl	equ	0xFF3
 15945                           intcon	equ	0xFF2
 15946                           postinc0	equ	0xFEE
 15947                           wreg	equ	0xFE8
 15948                           indf2	equ	0xFDF
 15949                           postinc2	equ	0xFDE
 15950                           fsr2h	equ	0xFDA
 15951                           fsr2l	equ	0xFD9
 15952                           status	equ	0xFD8
 15953                           
 15954 ;; *************** function _displ_hex *****************
 15955 ;; Defined at:
 15956 ;;		line 191 in file "lcd.c"
 15957 ;; Parameters:    Size  Location     Type
 15958 ;;  hexnum          3   28[COMRAM] unsigned um
 15959 ;; Auto vars:     Size  Location     Type
 15960 ;;  value           8    0[BANK0 ] unsigned char [8]
 15961 ;;  hexnumsave      3    8[BANK0 ] unsigned um
 15962 ;;  i               1   11[BANK0 ] char 
 15963 ;; Return value:  Size  Location     Type
 15964 ;;                  1    wreg      void 
 15965 ;; Registers used:
 15966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15967 ;; Tracked objects:
 15968 ;;		On entry : 0/0
 15969 ;;		On exit  : 0/0
 15970 ;;		Unchanged: 0/0
 15971 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 15972 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15973 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15975 ;;      Totals:         3       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15976 ;;Total ram usage:       15 bytes
 15977 ;; Hardware stack levels used:    1
 15978 ;; Hardware stack levels required when called:    7
 15979 ;; This function calls:
 15980 ;;		___ltdiv
 15981 ;;		___ltmod
 15982 ;;		_lcd_writeC
 15983 ;; This function is called by:
 15984 ;;		_displ_sens
 15985 ;;		_displ_time
 15986 ;;		_displ_credit
 15987 ;;		_displ_price
 15988 ;;		_Audit
 15989 ;;		_Hopper_coin
 15990 ;;		_Update_Hopcoin
 15991 ;; This function uses a non-reentrant model
 15992 ;;
 15993                           
 15994                           	psect	text96
 15995  011386                     __ptext96:
 15996                           	opt stack 0
 15997  011386                     _displ_hex:
 15998                           	opt stack 19
 15999                           
 16000                           ;lcd.c: 193: signed char i = 0;
 16001                           
 16002                           ;incstack = 0
 16003  011386  0E00               	movlw	0
 16004  011388  0100               	movlb	0	; () banked
 16005  01138A  6FBD               	movwf	displ_hex@i& (0+255),b
 16006                           
 16007                           ; BSR set to: 0
 16008                           ;lcd.c: 194: uint8_t value[8];
 16009                           ;lcd.c: 195: uint24_t hexnumsave = hexnum;
 16010  01138C  C027  F0BA         	movff	displ_hex@hexnum,displ_hex@hexnumsave
 16011  011390  C028  F0BB         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
 16012  011394  C029  F0BC         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
 16013                           
 16014                           ;lcd.c: 196: while(hexnum > 0)
 16015  011398  D02F               	goto	l1627
 16016  01139A                     
 16017                           ; BSR set to: 0
 16018                           ;lcd.c: 197: {
 16019                           ;lcd.c: 198: value[i] = hexnum % 10;
 16020                           
 16021                           ; BSR set to: 0
 16022  01139A  51BD               	movf	displ_hex@i& (0+255),w,b
 16023  01139C  0D01               	mullw	1
 16024  01139E  0EB2               	movlw	low displ_hex@value
 16025  0113A0  24F3               	addwf	prodl,w,c
 16026  0113A2  6ED9               	movwf	fsr2l,c
 16027  0113A4  0E00               	movlw	high displ_hex@value
 16028  0113A6  20F4               	addwfc	prodh,w,c
 16029  0113A8  6EDA               	movwf	fsr2h,c
 16030  0113AA  C027  F01D         	movff	displ_hex@hexnum,___ltmod@dividend
 16031  0113AE  C028  F01E         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
 16032  0113B2  C029  F01F         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
 16033  0113B6  0E0A               	movlw	10
 16034  0113B8  6E20               	movwf	___ltmod@divisor,c
 16035  0113BA  0E00               	movlw	0
 16036  0113BC  6E21               	movwf	___ltmod@divisor+1,c
 16037  0113BE  0E00               	movlw	0
 16038  0113C0  6E22               	movwf	___ltmod@divisor+2,c
 16039  0113C2  EC25  F091         	call	___ltmod	;wreg free
 16040  0113C6  501D               	movf	?___ltmod,w,c
 16041  0113C8  6EDF               	movwf	indf2,c
 16042                           
 16043                           ;lcd.c: 199: hexnum /= 10;
 16044  0113CA  C027  F01D         	movff	displ_hex@hexnum,___ltdiv@dividend
 16045  0113CE  C028  F01E         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
 16046  0113D2  C029  F01F         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
 16047  0113D6  0E0A               	movlw	10
 16048  0113D8  6E20               	movwf	___ltdiv@divisor,c
 16049  0113DA  0E00               	movlw	0
 16050  0113DC  6E21               	movwf	___ltdiv@divisor+1,c
 16051  0113DE  0E00               	movlw	0
 16052  0113E0  6E22               	movwf	___ltdiv@divisor+2,c
 16053  0113E2  EC1B  F08F         	call	___ltdiv	;wreg free
 16054  0113E6  C01D  F027         	movff	?___ltdiv,displ_hex@hexnum
 16055  0113EA  C01E  F028         	movff	?___ltdiv+1,displ_hex@hexnum+1
 16056  0113EE  C01F  F029         	movff	?___ltdiv+2,displ_hex@hexnum+2
 16057                           
 16058                           ;lcd.c: 200: i = i + 1;
 16059  0113F2  0100               	movlb	0	; () banked
 16060  0113F4  29BD               	incf	displ_hex@i& (0+255),w,b
 16061  0113F6  6FBD               	movwf	displ_hex@i& (0+255),b
 16062  0113F8                     l1627:
 16063                           
 16064                           ; BSR set to: 0
 16065                           
 16066                           ; BSR set to: 0
 16067  0113F8  5027               	movf	displ_hex@hexnum,w,c
 16068  0113FA  1028               	iorwf	displ_hex@hexnum+1,w,c
 16069  0113FC  1029               	iorwf	displ_hex@hexnum+2,w,c
 16070  0113FE  B4D8               	btfsc	status,2,c
 16071  011400  D00E               	goto	l1630
 16072  011402  D7CB               	goto	l1628
 16073  011404                     
 16074                           ; BSR set to: 0
 16075                           ;lcd.c: 204: {
 16076                           ;lcd.c: 205: i--;
 16077                           
 16078                           ; BSR set to: 0
 16079  011404  07BD               	decf	displ_hex@i& (0+255),f,b
 16080                           
 16081                           ; BSR set to: 0
 16082                           ;lcd.c: 206: lcd_writeC(value[i] | 0x30);
 16083  011406  51BD               	movf	displ_hex@i& (0+255),w,b
 16084  011408  0D01               	mullw	1
 16085  01140A  0EB2               	movlw	low displ_hex@value
 16086  01140C  24F3               	addwf	prodl,w,c
 16087  01140E  6ED9               	movwf	fsr2l,c
 16088  011410  0E00               	movlw	high displ_hex@value
 16089  011412  20F4               	addwfc	prodh,w,c
 16090  011414  6EDA               	movwf	fsr2h,c
 16091  011416  50DF               	movf	indf2,w,c
 16092  011418  0930               	iorlw	48
 16093  01141A  EC84  F08F         	call	_lcd_writeC
 16094  01141E                     l1630:
 16095  01141E  0100               	movlb	0	; () banked
 16096  011420  51BD               	movf	displ_hex@i& (0+255),w,b
 16097  011422  0A80               	xorlw	128
 16098  011424  0F7F               	addlw	-129
 16099  011426  B0D8               	btfsc	status,0,c
 16100  011428  D7ED               	goto	l1631
 16101                           
 16102                           ; BSR set to: 0
 16103                           ;lcd.c: 207: }
 16104                           ;lcd.c: 209: if(hexnumsave == 0)
 16105                           
 16106                           ; BSR set to: 0
 16107  01142A  51BA               	movf	displ_hex@hexnumsave& (0+255),w,b
 16108  01142C  11BB               	iorwf	(displ_hex@hexnumsave+1)& (0+255),w,b
 16109  01142E  11BC               	iorwf	(displ_hex@hexnumsave+2)& (0+255),w,b
 16110  011430  A4D8               	btfss	status,2,c
 16111  011432  0012               	return	
 16112                           
 16113                           ; BSR set to: 0
 16114                           ;lcd.c: 210: {
 16115                           ;lcd.c: 211: lcd_writeC(0x30);
 16116  011434  0E30               	movlw	48
 16117  011436  EC84  F08F         	call	_lcd_writeC
 16118  01143A  0012               	return	
 16119  01143C                     __end_of_displ_hex:
 16120                           	opt stack 0
 16121                           tblptru	equ	0xFF8
 16122                           tblptrh	equ	0xFF7
 16123                           tblptrl	equ	0xFF6
 16124                           tablat	equ	0xFF5
 16125                           prodh	equ	0xFF4
 16126                           prodl	equ	0xFF3
 16127                           intcon	equ	0xFF2
 16128                           postinc0	equ	0xFEE
 16129                           wreg	equ	0xFE8
 16130                           indf2	equ	0xFDF
 16131                           postinc2	equ	0xFDE
 16132                           fsr2h	equ	0xFDA
 16133                           fsr2l	equ	0xFD9
 16134                           status	equ	0xFD8
 16135                           
 16136 ;; *************** function _lcd_writeC *****************
 16137 ;; Defined at:
 16138 ;;		line 249 in file "lcd.c"
 16139 ;; Parameters:    Size  Location     Type
 16140 ;;  lcdata          1    wreg     unsigned char 
 16141 ;; Auto vars:     Size  Location     Type
 16142 ;;  lcdata          1   24[COMRAM] unsigned char 
 16143 ;; Return value:  Size  Location     Type
 16144 ;;                  1    wreg      void 
 16145 ;; Registers used:
 16146 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16147 ;; Tracked objects:
 16148 ;;		On entry : 0/0
 16149 ;;		On exit  : 0/0
 16150 ;;		Unchanged: 0/0
 16151 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16156 ;;Total ram usage:        1 bytes
 16157 ;; Hardware stack levels used:    1
 16158 ;; Hardware stack levels required when called:    6
 16159 ;; This function calls:
 16160 ;;		_lcd_dispadd
 16161 ;;		_lcd_write
 16162 ;; This function is called by:
 16163 ;;		_displ_lflags
 16164 ;;		_displ_sflags
 16165 ;;		_displ_time
 16166 ;;		_displ_code
 16167 ;;		_displ_hex
 16168 ;;		_lcd_string
 16169 ;;		_displ_price
 16170 ;;		_lcd_test
 16171 ;; This function uses a non-reentrant model
 16172 ;;
 16173                           
 16174                           	psect	text97
 16175  011F08                     __ptext97:
 16176                           	opt stack 0
 16177  011F08                     _lcd_writeC:
 16178                           	opt stack 22
 16179                           
 16180                           ;incstack = 0
 16181                           ;lcd_writeC@lcdata stored from wreg
 16182  011F08  6E23               	movwf	lcd_writeC@lcdata,c
 16183  011F0A  8487               	bsf	3975,2,c	;# 
 16184                           
 16185                           ;lcd.c: 254: lcd_write(lcdata);
 16186  011F0C  5023               	movf	lcd_writeC@lcdata,w,c
 16187  011F0E  EC78  F094         	call	_lcd_write
 16188                           
 16189                           ;lcd.c: 258: switch(bflag)
 16190  011F12  D021               	goto	l1651
 16191  011F14  0E49               	movlw	low _line2
 16192  011F16  6EF6               	movwf	tblptrl,c
 16193  011F18                     	if	1	;There is more than 1 active tblptr byte
 16194  011F18  0EFC               	movlw	high _line2
 16195  011F1A  6EF7               	movwf	tblptrh,c
 16196  011F1C                     	endif
 16197  011F1C                     	if	1	;There are 3 active tblptr bytes
 16198  011F1C  0E00               	movlw	low (_line2 shr (0+16))
 16199  011F1E  6EF8               	movwf	tblptru,c
 16200  011F20                     	endif
 16201  011F20  0008               	tblrd		*
 16202  011F22  50F5               	movf	tablat,w,c
 16203  011F24  EC74  F095         	call	_lcd_dispadd
 16204                           
 16205                           ;lcd.c: 261: break;
 16206  011F28  D020               	goto	l1653
 16207  011F2A  0E48               	movlw	low _line3
 16208  011F2C  6EF6               	movwf	tblptrl,c
 16209  011F2E                     	if	1	;There is more than 1 active tblptr byte
 16210  011F2E  0EFC               	movlw	high _line3
 16211  011F30  6EF7               	movwf	tblptrh,c
 16212  011F32                     	endif
 16213  011F32                     	if	1	;There are 3 active tblptr bytes
 16214  011F32  0E00               	movlw	low (_line3 shr (0+16))
 16215  011F34  6EF8               	movwf	tblptru,c
 16216  011F36                     	endif
 16217  011F36  0008               	tblrd		*
 16218  011F38  50F5               	movf	tablat,w,c
 16219  011F3A  EC74  F095         	call	_lcd_dispadd
 16220                           
 16221                           ;lcd.c: 263: break;
 16222  011F3E  D015               	goto	l1653
 16223  011F40  0E47               	movlw	low _line4
 16224  011F42  6EF6               	movwf	tblptrl,c
 16225  011F44                     	if	1	;There is more than 1 active tblptr byte
 16226  011F44  0EFC               	movlw	high _line4
 16227  011F46  6EF7               	movwf	tblptrh,c
 16228  011F48                     	endif
 16229  011F48                     	if	1	;There are 3 active tblptr bytes
 16230  011F48  0E00               	movlw	low (_line4 shr (0+16))
 16231  011F4A  6EF8               	movwf	tblptru,c
 16232  011F4C                     	endif
 16233  011F4C  0008               	tblrd		*
 16234  011F4E  50F5               	movf	tablat,w,c
 16235  011F50  EC74  F095         	call	_lcd_dispadd
 16236                           
 16237                           ;lcd.c: 265: }
 16238  011F54  D00A               	goto	l1653
 16239  011F56                     l1651:
 16240  011F56  5047               	movf	_bflag,w,c
 16241                           
 16242                           ; Switch size 1, requested type "space"
 16243                           ; Number of cases is 3, Range of values is 19 to 83
 16244                           ; switch strategies available:
 16245                           ; Name         Instructions Cycles
 16246                           ; simple_byte           10     6 (average)
 16247                           ;	Chosen strategy is simple_byte
 16248  011F58  0A13               	xorlw	19	; case 19
 16249  011F5A  B4D8               	btfsc	status,2,c
 16250  011F5C  D7DB               	goto	l1652
 16251  011F5E  0A34               	xorlw	52	; case 39
 16252  011F60  B4D8               	btfsc	status,2,c
 16253  011F62  D7EE               	goto	l1655
 16254  011F64  0A74               	xorlw	116	; case 83
 16255  011F66  B4D8               	btfsc	status,2,c
 16256  011F68  D7E0               	goto	l1654
 16257  011F6A                     l1653:
 16258  011F6A  9487               	bcf	3975,2,c	;# 
 16259  011F6C  0012               	return		;funcret
 16260  011F6E                     __end_of_lcd_writeC:
 16261                           	opt stack 0
 16262                           tblptru	equ	0xFF8
 16263                           tblptrh	equ	0xFF7
 16264                           tblptrl	equ	0xFF6
 16265                           tablat	equ	0xFF5
 16266                           prodh	equ	0xFF4
 16267                           prodl	equ	0xFF3
 16268                           intcon	equ	0xFF2
 16269                           postinc0	equ	0xFEE
 16270                           wreg	equ	0xFE8
 16271                           indf2	equ	0xFDF
 16272                           postinc2	equ	0xFDE
 16273                           fsr2h	equ	0xFDA
 16274                           fsr2l	equ	0xFD9
 16275                           status	equ	0xFD8
 16276                           
 16277 ;; *************** function _lcd_dispadd *****************
 16278 ;; Defined at:
 16279 ;;		line 269 in file "lcd.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;  lcdaddress      1    wreg     unsigned char 
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;  lcdaddress      1   22[COMRAM] unsigned char 
 16284 ;;  lcdatasave      1   23[COMRAM] unsigned char 
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  1    wreg      void 
 16287 ;; Registers used:
 16288 ;;		wreg, status,2, status,0, cstack
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16298 ;;Total ram usage:        2 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:    5
 16301 ;; This function calls:
 16302 ;;		_lcd_write
 16303 ;; This function is called by:
 16304 ;;		_displ_sens
 16305 ;;		_displ_lflags
 16306 ;;		_lcd_string
 16307 ;;		_displ_price
 16308 ;;		_displ_nochange
 16309 ;;		_lcd_writeC
 16310 ;;		_Hopper_coin
 16311 ;;		_Update_Hopcoin
 16312 ;; This function uses a non-reentrant model
 16313 ;;
 16314                           
 16315                           	psect	text98
 16316  012AE8                     __ptext98:
 16317                           	opt stack 0
 16318  012AE8                     _lcd_dispadd:
 16319                           	opt stack 22
 16320                           
 16321                           ;incstack = 0
 16322                           ;lcd_dispadd@lcdaddress stored from wreg
 16323  012AE8  6E21               	movwf	lcd_dispadd@lcdaddress,c
 16324                           
 16325                           ;lcd.c: 271: uint8_t lcdatasave = lcdata;
 16326  012AEA  C046  F022         	movff	_lcdata,lcd_dispadd@lcdatasave
 16327  012AEE  9487               	bcf	3975,2,c	;# 
 16328                           
 16329                           ;lcd.c: 274: lcd_write(lcdaddress | 0x80);
 16330  012AF0  5021               	movf	lcd_dispadd@lcdaddress,w,c
 16331  012AF2  0980               	iorlw	128
 16332  012AF4  EC78  F094         	call	_lcd_write
 16333  012AF8  8487               	bsf	3975,2,c	;# 
 16334                           
 16335                           ;lcd.c: 276: lcdata = lcdatasave;
 16336  012AFA  C022  F046         	movff	lcd_dispadd@lcdatasave,_lcdata
 16337  012AFE  0012               	return		;funcret
 16338  012B00                     __end_of_lcd_dispadd:
 16339                           	opt stack 0
 16340                           tblptru	equ	0xFF8
 16341                           tblptrh	equ	0xFF7
 16342                           tblptrl	equ	0xFF6
 16343                           tablat	equ	0xFF5
 16344                           prodh	equ	0xFF4
 16345                           prodl	equ	0xFF3
 16346                           intcon	equ	0xFF2
 16347                           postinc0	equ	0xFEE
 16348                           wreg	equ	0xFE8
 16349                           indf2	equ	0xFDF
 16350                           postinc2	equ	0xFDE
 16351                           fsr2h	equ	0xFDA
 16352                           fsr2l	equ	0xFD9
 16353                           status	equ	0xFD8
 16354                           
 16355 ;; *************** function _lcd_write *****************
 16356 ;; Defined at:
 16357 ;;		line 281 in file "lcd.c"
 16358 ;; Parameters:    Size  Location     Type
 16359 ;;  lcdata          1    wreg     unsigned char 
 16360 ;; Auto vars:     Size  Location     Type
 16361 ;;  lcdata          1   21[COMRAM] unsigned char 
 16362 ;;  savelatd        1   20[COMRAM] unsigned char 
 16363 ;; Return value:  Size  Location     Type
 16364 ;;                  1    wreg      void 
 16365 ;; Registers used:
 16366 ;;		wreg, status,2, status,0, cstack
 16367 ;; Tracked objects:
 16368 ;;		On entry : 0/0
 16369 ;;		On exit  : 0/0
 16370 ;;		Unchanged: 0/0
 16371 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16376 ;;Total ram usage:        2 bytes
 16377 ;; Hardware stack levels used:    1
 16378 ;; Hardware stack levels required when called:    4
 16379 ;; This function calls:
 16380 ;;		_lcd_clockE
 16381 ;;		_read_busy
 16382 ;; This function is called by:
 16383 ;;		_lcd_init
 16384 ;;		_displ_note
 16385 ;;		_lcd_string
 16386 ;;		_displ_price
 16387 ;;		_lcd_writeC
 16388 ;;		_lcd_dispadd
 16389 ;; This function uses a non-reentrant model
 16390 ;;
 16391                           
 16392                           	psect	text99
 16393  0128F0                     __ptext99:
 16394                           	opt stack 0
 16395  0128F0                     _lcd_write:
 16396                           	opt stack 23
 16397                           
 16398                           ;incstack = 0
 16399                           ;lcd_write@lcdata stored from wreg
 16400  0128F0  6E20               	movwf	lcd_write@lcdata,c
 16401                           
 16402                           ;lcd.c: 283: uint8_t savelatd = LATD;
 16403  0128F2  CF86 F01F          	movff	3974,lcd_write@savelatd	;volatile
 16404                           
 16405                           ;lcd.c: 286: bflag = read_busy();
 16406  0128F6  EC54  F092         	call	_read_busy	;wreg free
 16407  0128FA  D002               	goto	L18
 16408  0128FC                     
 16409                           ;lcd.c: 288: {
 16410                           ;lcd.c: 289: bflag = read_busy();
 16411  0128FC  EC54  F092         	call	_read_busy	;wreg free
 16412  012900                     L18:
 16413  012900  6E47               	movwf	_bflag,c
 16414  012902  BE47               	btfsc	_bflag,7,c
 16415  012904  D7FB               	goto	l1663
 16416                           
 16417                           ;lcd.c: 290: }
 16418                           ;lcd.c: 291: LATD = (lcdata >> 4) & 0x0F;
 16419  012906  3820               	swapf	lcd_write@lcdata,w,c
 16420  012908  0B0F               	andlw	15
 16421  01290A  0B0F               	andlw	15
 16422  01290C  6E86               	movwf	3974,c	;volatile
 16423                           
 16424                           ;lcd.c: 293: lcd_clockE();
 16425  01290E  EC15  F096         	call	_lcd_clockE	;wreg free
 16426                           
 16427                           ;lcd.c: 295: LATD = lcdata & 0x0F;
 16428  012912  5020               	movf	lcd_write@lcdata,w,c
 16429  012914  0B0F               	andlw	15
 16430  012916  6E86               	movwf	3974,c	;volatile
 16431                           
 16432                           ;lcd.c: 296: lcd_clockE();
 16433  012918  EC15  F096         	call	_lcd_clockE	;wreg free
 16434                           
 16435                           ;lcd.c: 297: LATD = savelatd;
 16436  01291C  C01F  FF86         	movff	lcd_write@savelatd,3974	;volatile
 16437  012920  0012               	return		;funcret
 16438  012922                     __end_of_lcd_write:
 16439                           	opt stack 0
 16440                           tblptru	equ	0xFF8
 16441                           tblptrh	equ	0xFF7
 16442                           tblptrl	equ	0xFF6
 16443                           tablat	equ	0xFF5
 16444                           prodh	equ	0xFF4
 16445                           prodl	equ	0xFF3
 16446                           intcon	equ	0xFF2
 16447                           postinc0	equ	0xFEE
 16448                           wreg	equ	0xFE8
 16449                           indf2	equ	0xFDF
 16450                           postinc2	equ	0xFDE
 16451                           fsr2h	equ	0xFDA
 16452                           fsr2l	equ	0xFD9
 16453                           status	equ	0xFD8
 16454                           
 16455 ;; *************** function _read_busy *****************
 16456 ;; Defined at:
 16457 ;;		line 312 in file "lcd.c"
 16458 ;; Parameters:    Size  Location     Type
 16459 ;;		None
 16460 ;; Auto vars:     Size  Location     Type
 16461 ;;  savelatd        1   19[COMRAM] unsigned char 
 16462 ;;  savelate        1   18[COMRAM] unsigned char 
 16463 ;; Return value:  Size  Location     Type
 16464 ;;                  1    wreg      char 
 16465 ;; Registers used:
 16466 ;;		wreg, status,2, status,0, cstack
 16467 ;; Tracked objects:
 16468 ;;		On entry : 0/0
 16469 ;;		On exit  : 0/0
 16470 ;;		Unchanged: 0/0
 16471 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16476 ;;Total ram usage:        2 bytes
 16477 ;; Hardware stack levels used:    1
 16478 ;; Hardware stack levels required when called:    3
 16479 ;; This function calls:
 16480 ;;		_lcd_clockH
 16481 ;;		_lcd_clockL
 16482 ;; This function is called by:
 16483 ;;		_lcd_write
 16484 ;; This function uses a non-reentrant model
 16485 ;;
 16486                           
 16487                           	psect	text100
 16488  0124A8                     __ptext100:
 16489                           	opt stack 0
 16490  0124A8                     _read_busy:
 16491                           	opt stack 23
 16492                           
 16493                           ;lcd.c: 314: uint8_t savelate = LATE;
 16494                           
 16495                           ;incstack = 0
 16496  0124A8  CF87 F01D          	movff	3975,read_busy@savelate	;volatile
 16497                           
 16498                           ;lcd.c: 315: uint8_t savelatd = LATD;
 16499  0124AC  CF86 F01E          	movff	3974,read_busy@savelatd	;volatile
 16500  0124B0  9487               	bcf	3975,2,c	;# 
 16501  0124B2  8287               	bsf	3975,1,c	;# 
 16502                           
 16503                           ;lcd.c: 318: TRISD = (TRISD | 0x0F);
 16504  0124B4  508B               	movf	3979,w,c	;volatile
 16505  0124B6  090F               	iorlw	15
 16506  0124B8  6E8B               	movwf	3979,c	;volatile
 16507                           
 16508                           ;lcd.c: 319: lcd_clockH();
 16509  0124BA  EC38  F096         	call	_lcd_clockH	;wreg free
 16510                           
 16511                           ;lcd.c: 320: bflag = (PORTD << 4);
 16512  0124BE  3890               	swapf	3984,w,c	;volatile
 16513  0124C0  0BF0               	andlw	240
 16514  0124C2  6E47               	movwf	_bflag,c
 16515                           
 16516                           ;lcd.c: 321: lcd_clockL();
 16517  0124C4  EC34  F096         	call	_lcd_clockL	;wreg free
 16518                           
 16519                           ;lcd.c: 322: lcd_clockH();
 16520  0124C8  EC38  F096         	call	_lcd_clockH	;wreg free
 16521                           
 16522                           ;lcd.c: 323: bflag = bflag | (PORTD & 0x0F);
 16523  0124CC  5090               	movf	3984,w,c	;volatile
 16524  0124CE  0B0F               	andlw	15
 16525  0124D0  1047               	iorwf	_bflag,w,c
 16526  0124D2  6E47               	movwf	_bflag,c
 16527  0124D4  9087               	bcf	3975,0,c	;# 
 16528                           
 16529                           ;lcd.c: 325: TRISD = (TRISD & 0xF0);
 16530  0124D6  508B               	movf	3979,w,c	;volatile
 16531  0124D8  0BF0               	andlw	240
 16532  0124DA  6E8B               	movwf	3979,c	;volatile
 16533  0124DC  9287               	bcf	3975,1,c	;# 
 16534                           
 16535                           ;lcd.c: 327: LATD = savelatd;
 16536  0124DE  C01E  FF86         	movff	read_busy@savelatd,3974	;volatile
 16537                           
 16538                           ;lcd.c: 328: LATE = savelate;
 16539  0124E2  C01D  FF87         	movff	read_busy@savelate,3975	;volatile
 16540                           
 16541                           ;lcd.c: 329: return(bflag);
 16542  0124E6  5047               	movf	_bflag,w,c
 16543  0124E8  0012               	return	
 16544  0124EA                     __end_of_read_busy:
 16545                           	opt stack 0
 16546                           tblptru	equ	0xFF8
 16547                           tblptrh	equ	0xFF7
 16548                           tblptrl	equ	0xFF6
 16549                           tablat	equ	0xFF5
 16550                           prodh	equ	0xFF4
 16551                           prodl	equ	0xFF3
 16552                           intcon	equ	0xFF2
 16553                           postinc0	equ	0xFEE
 16554                           wreg	equ	0xFE8
 16555                           indf2	equ	0xFDF
 16556                           postinc2	equ	0xFDE
 16557                           fsr2h	equ	0xFDA
 16558                           fsr2l	equ	0xFD9
 16559                           status	equ	0xFD8
 16560                           
 16561 ;; *************** function _lcd_clockL *****************
 16562 ;; Defined at:
 16563 ;;		line 344 in file "lcd.c"
 16564 ;; Parameters:    Size  Location     Type
 16565 ;;		None
 16566 ;; Auto vars:     Size  Location     Type
 16567 ;;		None
 16568 ;; Return value:  Size  Location     Type
 16569 ;;                  1    wreg      void 
 16570 ;; Registers used:
 16571 ;;		None
 16572 ;; Tracked objects:
 16573 ;;		On entry : 0/0
 16574 ;;		On exit  : 0/0
 16575 ;;		Unchanged: 0/0
 16576 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;Total ram usage:        0 bytes
 16582 ;; Hardware stack levels used:    1
 16583 ;; Hardware stack levels required when called:    2
 16584 ;; This function calls:
 16585 ;;		Nothing
 16586 ;; This function is called by:
 16587 ;;		_read_busy
 16588 ;; This function uses a non-reentrant model
 16589 ;;
 16590                           
 16591                           	psect	text101
 16592  012C68                     __ptext101:
 16593                           	opt stack 0
 16594  012C68                     _lcd_clockL:
 16595                           	opt stack 23
 16596                           
 16597                           ;incstack = 0
 16598  012C68  9087               	bcf	3975,0,c	;# 
 16599                           
 16600                           ;lcd.c: 347: _delay((unsigned long)((1)*(12000000/4000000.0)));
 16601  012C6A  D000               	nop2		;2 cycle nop
 16602  012C6C  F000               	nop	
 16603  012C6E  0012               	return		;funcret
 16604  012C70                     __end_of_lcd_clockL:
 16605                           	opt stack 0
 16606                           tblptru	equ	0xFF8
 16607                           tblptrh	equ	0xFF7
 16608                           tblptrl	equ	0xFF6
 16609                           tablat	equ	0xFF5
 16610                           prodh	equ	0xFF4
 16611                           prodl	equ	0xFF3
 16612                           intcon	equ	0xFF2
 16613                           postinc0	equ	0xFEE
 16614                           wreg	equ	0xFE8
 16615                           indf2	equ	0xFDF
 16616                           postinc2	equ	0xFDE
 16617                           fsr2h	equ	0xFDA
 16618                           fsr2l	equ	0xFD9
 16619                           status	equ	0xFD8
 16620                           
 16621 ;; *************** function _lcd_clockH *****************
 16622 ;; Defined at:
 16623 ;;		line 336 in file "lcd.c"
 16624 ;; Parameters:    Size  Location     Type
 16625 ;;		None
 16626 ;; Auto vars:     Size  Location     Type
 16627 ;;		None
 16628 ;; Return value:  Size  Location     Type
 16629 ;;                  1    wreg      void 
 16630 ;; Registers used:
 16631 ;;		None
 16632 ;; Tracked objects:
 16633 ;;		On entry : 0/0
 16634 ;;		On exit  : 0/0
 16635 ;;		Unchanged: 0/0
 16636 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16641 ;;Total ram usage:        0 bytes
 16642 ;; Hardware stack levels used:    1
 16643 ;; Hardware stack levels required when called:    2
 16644 ;; This function calls:
 16645 ;;		Nothing
 16646 ;; This function is called by:
 16647 ;;		_read_busy
 16648 ;; This function uses a non-reentrant model
 16649 ;;
 16650                           
 16651                           	psect	text102
 16652  012C70                     __ptext102:
 16653                           	opt stack 0
 16654  012C70                     _lcd_clockH:
 16655                           	opt stack 23
 16656                           
 16657                           ;incstack = 0
 16658  012C70  8087               	bsf	3975,0,c	;# 
 16659                           
 16660                           ;lcd.c: 339: _delay((unsigned long)((1)*(12000000/4000000.0)));
 16661  012C72  D000               	nop2		;2 cycle nop
 16662  012C74  F000               	nop	
 16663  012C76  0012               	return		;funcret
 16664  012C78                     __end_of_lcd_clockH:
 16665                           	opt stack 0
 16666                           tblptru	equ	0xFF8
 16667                           tblptrh	equ	0xFF7
 16668                           tblptrl	equ	0xFF6
 16669                           tablat	equ	0xFF5
 16670                           prodh	equ	0xFF4
 16671                           prodl	equ	0xFF3
 16672                           intcon	equ	0xFF2
 16673                           postinc0	equ	0xFEE
 16674                           wreg	equ	0xFE8
 16675                           indf2	equ	0xFDF
 16676                           postinc2	equ	0xFDE
 16677                           fsr2h	equ	0xFDA
 16678                           fsr2l	equ	0xFD9
 16679                           status	equ	0xFD8
 16680                           
 16681 ;; *************** function _lcd_clockE *****************
 16682 ;; Defined at:
 16683 ;;		line 352 in file "lcd.c"
 16684 ;; Parameters:    Size  Location     Type
 16685 ;;		None
 16686 ;; Auto vars:     Size  Location     Type
 16687 ;;		None
 16688 ;; Return value:  Size  Location     Type
 16689 ;;                  1    wreg      void 
 16690 ;; Registers used:
 16691 ;;		None
 16692 ;; Tracked objects:
 16693 ;;		On entry : 0/0
 16694 ;;		On exit  : 0/0
 16695 ;;		Unchanged: 0/0
 16696 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16701 ;;Total ram usage:        0 bytes
 16702 ;; Hardware stack levels used:    1
 16703 ;; Hardware stack levels required when called:    2
 16704 ;; This function calls:
 16705 ;;		Nothing
 16706 ;; This function is called by:
 16707 ;;		_lcd_init
 16708 ;;		_lcd_write
 16709 ;; This function uses a non-reentrant model
 16710 ;;
 16711                           
 16712                           	psect	text103
 16713  012C2A                     __ptext103:
 16714                           	opt stack 0
 16715  012C2A                     _lcd_clockE:
 16716                           	opt stack 24
 16717                           
 16718                           ;incstack = 0
 16719  012C2A  8087               	bsf	3975,0,c	;# 
 16720                           
 16721                           ;lcd.c: 355: _delay((unsigned long)((1)*(12000000/4000000.0)));
 16722  012C2C  D000               	nop2		;2 cycle nop
 16723  012C2E  F000               	nop	
 16724  012C30  9087               	bcf	3975,0,c	;# 
 16725                           
 16726                           ;lcd.c: 357: _delay((unsigned long)((1)*(12000000/4000000.0)));
 16727  012C32  D000               	nop2		;2 cycle nop
 16728  012C34  F000               	nop	
 16729  012C36  0012               	return		;funcret
 16730  012C38                     __end_of_lcd_clockE:
 16731                           	opt stack 0
 16732                           tblptru	equ	0xFF8
 16733                           tblptrh	equ	0xFF7
 16734                           tblptrl	equ	0xFF6
 16735                           tablat	equ	0xFF5
 16736                           prodh	equ	0xFF4
 16737                           prodl	equ	0xFF3
 16738                           intcon	equ	0xFF2
 16739                           postinc0	equ	0xFEE
 16740                           wreg	equ	0xFE8
 16741                           indf2	equ	0xFDF
 16742                           postinc2	equ	0xFDE
 16743                           fsr2h	equ	0xFDA
 16744                           fsr2l	equ	0xFD9
 16745                           status	equ	0xFD8
 16746                           
 16747 ;; *************** function ___ltmod *****************
 16748 ;; Defined at:
 16749 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/ltmod.c"
 16750 ;; Parameters:    Size  Location     Type
 16751 ;;  dividend        3   18[COMRAM] unsigned um
 16752 ;;  divisor         3   21[COMRAM] unsigned um
 16753 ;; Auto vars:     Size  Location     Type
 16754 ;;  counter         1   24[COMRAM] unsigned char 
 16755 ;; Return value:  Size  Location     Type
 16756 ;;                  3   18[COMRAM] unsigned um
 16757 ;; Registers used:
 16758 ;;		wreg, status,2, status,0
 16759 ;; Tracked objects:
 16760 ;;		On entry : 0/0
 16761 ;;		On exit  : 0/0
 16762 ;;		Unchanged: 0/0
 16763 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16764 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16767 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16768 ;;Total ram usage:        7 bytes
 16769 ;; Hardware stack levels used:    1
 16770 ;; Hardware stack levels required when called:    2
 16771 ;; This function calls:
 16772 ;;		Nothing
 16773 ;; This function is called by:
 16774 ;;		_displ_hex
 16775 ;; This function uses a non-reentrant model
 16776 ;;
 16777                           
 16778                           	psect	text104
 16779  01224A                     __ptext104:
 16780                           	opt stack 0
 16781  01224A                     ___ltmod:
 16782                           	opt stack 23
 16783                           
 16784                           ;incstack = 0
 16785  01224A  5020               	movf	___ltmod@divisor,w,c
 16786  01224C  1021               	iorwf	___ltmod@divisor+1,w,c
 16787  01224E  1022               	iorwf	___ltmod@divisor+2,w,c
 16788  012250  B4D8               	btfsc	status,2,c
 16789  012252  D01E               	goto	l5344
 16790  012254  0E01               	movlw	1
 16791  012256  6E23               	movwf	___ltmod@counter,c
 16792  012258  D005               	goto	l5339
 16793  01225A  90D8               	bcf	status,0,c
 16794  01225C  3620               	rlcf	___ltmod@divisor,f,c
 16795  01225E  3621               	rlcf	___ltmod@divisor+1,f,c
 16796  012260  3622               	rlcf	___ltmod@divisor+2,f,c
 16797  012262  2A23               	incf	___ltmod@counter,f,c
 16798  012264                     l5339:
 16799  012264  AE22               	btfss	___ltmod@divisor+2,7,c
 16800  012266  D7F9               	goto	l5340
 16801  012268                     u3910:
 16802  012268  5020               	movf	___ltmod@divisor,w,c
 16803  01226A  5C1D               	subwf	___ltmod@dividend,w,c
 16804  01226C  5021               	movf	___ltmod@divisor+1,w,c
 16805  01226E  581E               	subwfb	___ltmod@dividend+1,w,c
 16806  012270  5022               	movf	___ltmod@divisor+2,w,c
 16807  012272  581F               	subwfb	___ltmod@dividend+2,w,c
 16808  012274  A0D8               	btfss	status,0,c
 16809  012276  D006               	goto	l5343
 16810  012278  5020               	movf	___ltmod@divisor,w,c
 16811  01227A  5E1D               	subwf	___ltmod@dividend,f,c
 16812  01227C  5021               	movf	___ltmod@divisor+1,w,c
 16813  01227E  5A1E               	subwfb	___ltmod@dividend+1,f,c
 16814  012280  5022               	movf	___ltmod@divisor+2,w,c
 16815  012282  5A1F               	subwfb	___ltmod@dividend+2,f,c
 16816  012284                     l5343:
 16817  012284  90D8               	bcf	status,0,c
 16818  012286  3222               	rrcf	___ltmod@divisor+2,f,c
 16819  012288  3221               	rrcf	___ltmod@divisor+1,f,c
 16820  01228A  3220               	rrcf	___ltmod@divisor,f,c
 16821  01228C  2E23               	decfsz	___ltmod@counter,f,c
 16822  01228E  D7EC               	goto	u3910
 16823  012290                     l5344:
 16824  012290  C01D  F01D         	movff	___ltmod@dividend,?___ltmod
 16825  012294  C01E  F01E         	movff	___ltmod@dividend+1,?___ltmod+1
 16826  012298  C01F  F01F         	movff	___ltmod@dividend+2,?___ltmod+2
 16827  01229C  0012               	return		;funcret
 16828  01229E                     __end_of___ltmod:
 16829                           	opt stack 0
 16830                           tblptru	equ	0xFF8
 16831                           tblptrh	equ	0xFF7
 16832                           tblptrl	equ	0xFF6
 16833                           tablat	equ	0xFF5
 16834                           prodh	equ	0xFF4
 16835                           prodl	equ	0xFF3
 16836                           intcon	equ	0xFF2
 16837                           postinc0	equ	0xFEE
 16838                           wreg	equ	0xFE8
 16839                           indf2	equ	0xFDF
 16840                           postinc2	equ	0xFDE
 16841                           fsr2h	equ	0xFDA
 16842                           fsr2l	equ	0xFD9
 16843                           status	equ	0xFD8
 16844                           
 16845 ;; *************** function ___ltdiv *****************
 16846 ;; Defined at:
 16847 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/ltdiv.c"
 16848 ;; Parameters:    Size  Location     Type
 16849 ;;  dividend        3   18[COMRAM] unsigned um
 16850 ;;  divisor         3   21[COMRAM] unsigned um
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;  quotient        3   24[COMRAM] unsigned um
 16853 ;;  counter         1   27[COMRAM] unsigned char 
 16854 ;; Return value:  Size  Location     Type
 16855 ;;                  3   18[COMRAM] unsigned um
 16856 ;; Registers used:
 16857 ;;		wreg, status,2, status,0
 16858 ;; Tracked objects:
 16859 ;;		On entry : 0/0
 16860 ;;		On exit  : 0/0
 16861 ;;		Unchanged: 0/0
 16862 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16863 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16864 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16866 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16867 ;;Total ram usage:       10 bytes
 16868 ;; Hardware stack levels used:    1
 16869 ;; Hardware stack levels required when called:    2
 16870 ;; This function calls:
 16871 ;;		Nothing
 16872 ;; This function is called by:
 16873 ;;		_displ_hex
 16874 ;; This function uses a non-reentrant model
 16875 ;;
 16876                           
 16877                           	psect	text105
 16878  011E36                     __ptext105:
 16879                           	opt stack 0
 16880  011E36                     ___ltdiv:
 16881                           	opt stack 23
 16882                           
 16883                           ;incstack = 0
 16884  011E36  0E00               	movlw	0
 16885  011E38  6E23               	movwf	___ltdiv@quotient,c
 16886  011E3A  0E00               	movlw	0
 16887  011E3C  6E24               	movwf	___ltdiv@quotient+1,c
 16888  011E3E  0E00               	movlw	0
 16889  011E40  6E25               	movwf	___ltdiv@quotient+2,c
 16890  011E42  5020               	movf	___ltdiv@divisor,w,c
 16891  011E44  1021               	iorwf	___ltdiv@divisor+1,w,c
 16892  011E46  1022               	iorwf	___ltdiv@divisor+2,w,c
 16893  011E48  B4D8               	btfsc	status,2,c
 16894  011E4A  D023               	goto	l5334
 16895  011E4C  0E01               	movlw	1
 16896  011E4E  6E26               	movwf	___ltdiv@counter,c
 16897  011E50  D005               	goto	l5329
 16898  011E52  90D8               	bcf	status,0,c
 16899  011E54  3620               	rlcf	___ltdiv@divisor,f,c
 16900  011E56  3621               	rlcf	___ltdiv@divisor+1,f,c
 16901  011E58  3622               	rlcf	___ltdiv@divisor+2,f,c
 16902  011E5A  2A26               	incf	___ltdiv@counter,f,c
 16903  011E5C                     l5329:
 16904  011E5C  AE22               	btfss	___ltdiv@divisor+2,7,c
 16905  011E5E  D7F9               	goto	l5330
 16906  011E60                     u3880:
 16907  011E60  90D8               	bcf	status,0,c
 16908  011E62  3623               	rlcf	___ltdiv@quotient,f,c
 16909  011E64  3624               	rlcf	___ltdiv@quotient+1,f,c
 16910  011E66  3625               	rlcf	___ltdiv@quotient+2,f,c
 16911  011E68  5020               	movf	___ltdiv@divisor,w,c
 16912  011E6A  5C1D               	subwf	___ltdiv@dividend,w,c
 16913  011E6C  5021               	movf	___ltdiv@divisor+1,w,c
 16914  011E6E  581E               	subwfb	___ltdiv@dividend+1,w,c
 16915  011E70  5022               	movf	___ltdiv@divisor+2,w,c
 16916  011E72  581F               	subwfb	___ltdiv@dividend+2,w,c
 16917  011E74  A0D8               	btfss	status,0,c
 16918  011E76  D007               	goto	l5333
 16919  011E78  5020               	movf	___ltdiv@divisor,w,c
 16920  011E7A  5E1D               	subwf	___ltdiv@dividend,f,c
 16921  011E7C  5021               	movf	___ltdiv@divisor+1,w,c
 16922  011E7E  5A1E               	subwfb	___ltdiv@dividend+1,f,c
 16923  011E80  5022               	movf	___ltdiv@divisor+2,w,c
 16924  011E82  5A1F               	subwfb	___ltdiv@dividend+2,f,c
 16925  011E84  8023               	bsf	___ltdiv@quotient,0,c
 16926  011E86                     l5333:
 16927  011E86  90D8               	bcf	status,0,c
 16928  011E88  3222               	rrcf	___ltdiv@divisor+2,f,c
 16929  011E8A  3221               	rrcf	___ltdiv@divisor+1,f,c
 16930  011E8C  3220               	rrcf	___ltdiv@divisor,f,c
 16931  011E8E  2E26               	decfsz	___ltdiv@counter,f,c
 16932  011E90  D7E7               	goto	u3880
 16933  011E92                     l5334:
 16934  011E92  C023  F01D         	movff	___ltdiv@quotient,?___ltdiv
 16935  011E96  C024  F01E         	movff	___ltdiv@quotient+1,?___ltdiv+1
 16936  011E9A  C025  F01F         	movff	___ltdiv@quotient+2,?___ltdiv+2
 16937  011E9E  0012               	return		;funcret
 16938  011EA0                     __end_of___ltdiv:
 16939                           	opt stack 0
 16940                           tblptru	equ	0xFF8
 16941                           tblptrh	equ	0xFF7
 16942                           tblptrl	equ	0xFF6
 16943                           tablat	equ	0xFF5
 16944                           prodh	equ	0xFF4
 16945                           prodl	equ	0xFF3
 16946                           intcon	equ	0xFF2
 16947                           postinc0	equ	0xFEE
 16948                           wreg	equ	0xFE8
 16949                           indf2	equ	0xFDF
 16950                           postinc2	equ	0xFDE
 16951                           fsr2h	equ	0xFDA
 16952                           fsr2l	equ	0xFD9
 16953                           status	equ	0xFD8
 16954                           
 16955 ;; *************** function _credit_check *****************
 16956 ;; Defined at:
 16957 ;;		line 149 in file "vend.c"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;		None
 16960 ;; Auto vars:     Size  Location     Type
 16961 ;;		None
 16962 ;; Return value:  Size  Location     Type
 16963 ;;                  1    wreg      unsigned char 
 16964 ;; Registers used:
 16965 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16966 ;; Tracked objects:
 16967 ;;		On entry : 0/0
 16968 ;;		On exit  : 0/0
 16969 ;;		Unchanged: 0/0
 16970 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 16971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16975 ;;Total ram usage:        0 bytes
 16976 ;; Hardware stack levels used:    1
 16977 ;; Hardware stack levels required when called:    3
 16978 ;; This function calls:
 16979 ;;		_DATAEE_ReadByte
 16980 ;; This function is called by:
 16981 ;;		_displ_credit
 16982 ;;		_vend_init
 16983 ;;		_price_check
 16984 ;; This function uses a non-reentrant model
 16985 ;;
 16986                           
 16987                           	psect	text106
 16988  012A1C                     __ptext106:
 16989                           	opt stack 0
 16990  012A1C                     _credit_check:
 16991                           	opt stack 26
 16992                           
 16993                           ;vend.c: 151: cash = DATAEE_ReadByte(credmem);
 16994                           
 16995                           ;incstack = 0
 16996  012A1C  0E1B               	movlw	low _credmem
 16997  012A1E  6EF6               	movwf	tblptrl,c
 16998  012A20                     	if	1	;There is more than 1 active tblptr byte
 16999  012A20  0EFC               	movlw	high _credmem
 17000  012A22  6EF7               	movwf	tblptrh,c
 17001  012A24                     	endif
 17002  012A24                     	if	1	;There are 3 active tblptr bytes
 17003  012A24  0E00               	movlw	low (_credmem shr (0+16))
 17004  012A26  6EF8               	movwf	tblptru,c
 17005  012A28                     	endif
 17006  012A28  0009               	tblrd		*+
 17007  012A2A  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 17008  012A2E  000A               	tblrd		*-
 17009  012A30  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 17010  012A34  EC80  F095         	call	_DATAEE_ReadByte	;wreg free
 17011  012A38  6E39               	movwf	_cash,c	;volatile
 17012                           
 17013                           ;vend.c: 152: return(cash);
 17014  012A3A  5039               	movf	_cash,w,c	;volatile
 17015  012A3C  0012               	return	
 17016  012A3E                     __end_of_credit_check:
 17017                           	opt stack 0
 17018                           tblptru	equ	0xFF8
 17019                           tblptrh	equ	0xFF7
 17020                           tblptrl	equ	0xFF6
 17021                           tablat	equ	0xFF5
 17022                           prodh	equ	0xFF4
 17023                           prodl	equ	0xFF3
 17024                           intcon	equ	0xFF2
 17025                           postinc0	equ	0xFEE
 17026                           wreg	equ	0xFE8
 17027                           indf2	equ	0xFDF
 17028                           postinc2	equ	0xFDE
 17029                           fsr2h	equ	0xFDA
 17030                           fsr2l	equ	0xFD9
 17031                           status	equ	0xFD8
 17032                           
 17033 ;; *************** function _DATAEE_ReadByte *****************
 17034 ;; Defined at:
 17035 ;;		line 192 in file "mcc_generated_files/memory.c"
 17036 ;; Parameters:    Size  Location     Type
 17037 ;;  bAdd            2   18[COMRAM] unsigned int 
 17038 ;; Auto vars:     Size  Location     Type
 17039 ;;		None
 17040 ;; Return value:  Size  Location     Type
 17041 ;;                  1    wreg      unsigned char 
 17042 ;; Registers used:
 17043 ;;		wreg, status,2, status,0
 17044 ;; Tracked objects:
 17045 ;;		On entry : 0/0
 17046 ;;		On exit  : 0/0
 17047 ;;		Unchanged: 0/0
 17048 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17053 ;;Total ram usage:        2 bytes
 17054 ;; Hardware stack levels used:    1
 17055 ;; Hardware stack levels required when called:    2
 17056 ;; This function calls:
 17057 ;;		Nothing
 17058 ;; This function is called by:
 17059 ;;		_main
 17060 ;;		_Init_vendmem
 17061 ;;		_vend_init
 17062 ;;		_Read_NVstore
 17063 ;;		_credit_add
 17064 ;;		_credit_subtract
 17065 ;;		_credit_check
 17066 ;;		_Audit
 17067 ;;		_Hopper_coin
 17068 ;;		_set_price
 17069 ;;		_Vend_timeset
 17070 ;;		_Link_chan
 17071 ;;		_off_sens
 17072 ;;		_mdb_init
 17073 ;;		_give_change
 17074 ;;		_price_check
 17075 ;;		_dispense
 17076 ;;		_set_motortime
 17077 ;;		_init_pricestore
 17078 ;;		_disable_channel
 17079 ;;		_update_vends
 17080 ;; This function uses a non-reentrant model
 17081 ;;
 17082                           
 17083                           	psect	text107
 17084  012B00                     __ptext107:
 17085                           	opt stack 0
 17086  012B00                     _DATAEE_ReadByte:
 17087                           	opt stack 22
 17088                           
 17089                           ;memory.c: 194: NVMADRH = ((bAdd >> 8) & 0x03);
 17090                           
 17091                           ;incstack = 0
 17092  012B00  501E               	movf	DATAEE_ReadByte@bAdd+1,w,c
 17093  012B02  0B03               	andlw	3
 17094  012B04  6E7F               	movwf	3967,c	;volatile
 17095                           
 17096                           ;memory.c: 195: NVMADRL = (bAdd & 0xFF);
 17097  012B06  C01D  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
 17098                           
 17099                           ;memory.c: 196: NVMCON1bits.NVMREG = 0;
 17100  012B0A  0E3F               	movlw	-193
 17101  012B0C  1681               	andwf	3969,f,c	;volsfr
 17102                           
 17103                           ;memory.c: 197: NVMCON1bits.RD = 1;
 17104  012B0E  8081               	bsf	3969,0,c	;volsfr
 17105                           
 17106                           ;memory.c: 198: __nop();
 17107  012B10  F000               	nop	
 17108                           
 17109                           ;memory.c: 199: __nop();
 17110  012B12  F000               	nop	
 17111                           
 17112                           ;memory.c: 201: return (NVMDAT);
 17113  012B14  5080               	movf	3968,w,c	;volatile
 17114  012B16  0012               	return	
 17115  012B18                     __end_of_DATAEE_ReadByte:
 17116                           	opt stack 0
 17117                           tblptru	equ	0xFF8
 17118                           tblptrh	equ	0xFF7
 17119                           tblptrl	equ	0xFF6
 17120                           tablat	equ	0xFF5
 17121                           prodh	equ	0xFF4
 17122                           prodl	equ	0xFF3
 17123                           intcon	equ	0xFF2
 17124                           postinc0	equ	0xFEE
 17125                           wreg	equ	0xFE8
 17126                           indf2	equ	0xFDF
 17127                           postinc2	equ	0xFDE
 17128                           fsr2h	equ	0xFDA
 17129                           fsr2l	equ	0xFD9
 17130                           status	equ	0xFD8
 17131                           
 17132 ;; *************** function _SYSTEM_Initialize *****************
 17133 ;; Defined at:
 17134 ;;		line 116 in file "mcc_generated_files/mcc.c"
 17135 ;; Parameters:    Size  Location     Type
 17136 ;;		None
 17137 ;; Auto vars:     Size  Location     Type
 17138 ;;		None
 17139 ;; Return value:  Size  Location     Type
 17140 ;;                  1    wreg      void 
 17141 ;; Registers used:
 17142 ;;		wreg, status,2, status,0, cstack
 17143 ;; Tracked objects:
 17144 ;;		On entry : 0/0
 17145 ;;		On exit  : 0/0
 17146 ;;		Unchanged: 0/0
 17147 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17152 ;;Total ram usage:        0 bytes
 17153 ;; Hardware stack levels used:    1
 17154 ;; Hardware stack levels required when called:    3
 17155 ;; This function calls:
 17156 ;;		_CMP1_Initialize
 17157 ;;		_DAC1_Initialize
 17158 ;;		_EUSART1_Initialize
 17159 ;;		_EUSART2_Initialize
 17160 ;;		_INTERRUPT_Initialize
 17161 ;;		_OSCILLATOR_Initialize
 17162 ;;		_PIN_MANAGER_Initialize
 17163 ;;		_PMD_Initialize
 17164 ;;		_TMR0_Initialize
 17165 ;;		_TMR1_Initialize
 17166 ;;		_TMR2_Initialize
 17167 ;;		_TMR3_Initialize
 17168 ;;		_TMR4_Initialize
 17169 ;;		_TMR5_Initialize
 17170 ;; This function is called by:
 17171 ;;		_main
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           	psect	text108
 17176  0126D8                     __ptext108:
 17177                           	opt stack 0
 17178  0126D8                     _SYSTEM_Initialize:
 17179                           	opt stack 27
 17180                           
 17181                           ;mcc.c: 118: INTERRUPT_Initialize();
 17182                           
 17183                           ;incstack = 0
 17184  0126D8  EC3C  F096         	call	_INTERRUPT_Initialize	;wreg free
 17185                           
 17186                           ;mcc.c: 119: PMD_Initialize();
 17187  0126DC  EC5A  F095         	call	_PMD_Initialize	;wreg free
 17188                           
 17189                           ;mcc.c: 120: PIN_MANAGER_Initialize();
 17190  0126E0  ECE2  F08C         	call	_PIN_MANAGER_Initialize	;wreg free
 17191                           
 17192                           ;mcc.c: 121: OSCILLATOR_Initialize();
 17193  0126E4  EC8C  F095         	call	_OSCILLATOR_Initialize	;wreg free
 17194                           
 17195                           ;mcc.c: 122: TMR4_Initialize();
 17196  0126E8  EC4C  F095         	call	_TMR4_Initialize	;wreg free
 17197                           
 17198                           ;mcc.c: 123: TMR2_Initialize();
 17199  0126EC  EC2F  F095         	call	_TMR2_Initialize	;wreg free
 17200                           
 17201                           ;mcc.c: 124: TMR0_Initialize();
 17202  0126F0  ECA8  F094         	call	_TMR0_Initialize	;wreg free
 17203                           
 17204                           ;mcc.c: 125: CMP1_Initialize();
 17205  0126F4  ECCF  F095         	call	_CMP1_Initialize	;wreg free
 17206                           
 17207                           ;mcc.c: 126: TMR3_Initialize();
 17208  0126F8  ECDB  F093         	call	_TMR3_Initialize	;wreg free
 17209                           
 17210                           ;mcc.c: 127: DAC1_Initialize();
 17211  0126FC  EC1C  F096         	call	_DAC1_Initialize	;wreg free
 17212                           
 17213                           ;mcc.c: 128: TMR5_Initialize();
 17214  012700  ECC0  F093         	call	_TMR5_Initialize	;wreg free
 17215                           
 17216                           ;mcc.c: 129: TMR1_Initialize();
 17217  012704  ECF6  F093         	call	_TMR1_Initialize	;wreg free
 17218                           
 17219                           ;mcc.c: 130: EUSART1_Initialize();
 17220  012708  ECBA  F095         	call	_EUSART1_Initialize	;wreg free
 17221                           
 17222                           ;mcc.c: 131: EUSART2_Initialize();
 17223  01270C  EC98  F095         	call	_EUSART2_Initialize	;wreg free
 17224  012710  0012               	return		;funcret
 17225  012712                     __end_of_SYSTEM_Initialize:
 17226                           	opt stack 0
 17227                           tblptru	equ	0xFF8
 17228                           tblptrh	equ	0xFF7
 17229                           tblptrl	equ	0xFF6
 17230                           tablat	equ	0xFF5
 17231                           prodh	equ	0xFF4
 17232                           prodl	equ	0xFF3
 17233                           intcon	equ	0xFF2
 17234                           postinc0	equ	0xFEE
 17235                           wreg	equ	0xFE8
 17236                           indf2	equ	0xFDF
 17237                           postinc2	equ	0xFDE
 17238                           fsr2h	equ	0xFDA
 17239                           fsr2l	equ	0xFD9
 17240                           status	equ	0xFD8
 17241                           
 17242 ;; *************** function _TMR5_Initialize *****************
 17243 ;; Defined at:
 17244 ;;		line 62 in file "mcc_generated_files/tmr5.c"
 17245 ;; Parameters:    Size  Location     Type
 17246 ;;		None
 17247 ;; Auto vars:     Size  Location     Type
 17248 ;;		None
 17249 ;; Return value:  Size  Location     Type
 17250 ;;                  1    wreg      void 
 17251 ;; Registers used:
 17252 ;;		wreg, status,2, status,0
 17253 ;; Tracked objects:
 17254 ;;		On entry : 0/0
 17255 ;;		On exit  : 0/0
 17256 ;;		Unchanged: 0/0
 17257 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17262 ;;Total ram usage:        2 bytes
 17263 ;; Hardware stack levels used:    1
 17264 ;; Hardware stack levels required when called:    2
 17265 ;; This function calls:
 17266 ;;		Nothing
 17267 ;; This function is called by:
 17268 ;;		_SYSTEM_Initialize
 17269 ;;		_mdb_unlock
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           	psect	text109
 17274  012780                     __ptext109:
 17275                           	opt stack 0
 17276  012780                     _TMR5_Initialize:
 17277                           	opt stack 24
 17278                           
 17279                           ;tmr5.c: 67: T5GCON = 0x00;
 17280                           
 17281                           ;incstack = 0
 17282  012780  0E00               	movlw	0
 17283  012782  6EC4               	movwf	4036,c	;volatile
 17284                           
 17285                           ;tmr5.c: 70: T5GATE = 0x00;
 17286  012784  0E00               	movlw	0
 17287  012786  6EC5               	movwf	4037,c	;volatile
 17288                           
 17289                           ;tmr5.c: 73: T5CLK = 0x04;
 17290  012788  0E04               	movlw	4
 17291  01278A  6EC6               	movwf	4038,c	;volatile
 17292                           
 17293                           ;tmr5.c: 76: TMR5H = 0xE1;
 17294  01278C  0EE1               	movlw	225
 17295  01278E  6EC2               	movwf	4034,c	;volatile
 17296                           
 17297                           ;tmr5.c: 79: TMR5L = 0xBA;
 17298  012790  0EBA               	movlw	186
 17299  012792  6EC1               	movwf	4033,c	;volatile
 17300                           
 17301                           ;tmr5.c: 82: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 17302  012794  50C1               	movf	4033,w,c	;volatile
 17303  012796  CFC2 F01D          	movff	4034,??_TMR5_Initialize	;volatile
 17304  01279A  6A1E               	clrf	(??_TMR5_Initialize+1)& (0+255),c
 17305  01279C  C01D  F01E         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 17306  0127A0  6A1D               	clrf	??_TMR5_Initialize,c
 17307  0127A2  101D               	iorwf	??_TMR5_Initialize,w,c
 17308  0127A4  0100               	movlb	0	; () banked
 17309  0127A6  6FC7               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 17310  0127A8  501E               	movf	??_TMR5_Initialize+1,w,c
 17311  0127AA  6FC8               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 17312                           
 17313                           ; BSR set to: 0
 17314                           ;tmr5.c: 85: PIR4bits.TMR5IF = 0;
 17315  0127AC  010E               	movlb	14	; () banked
 17316  0127AE  99CE               	bcf	206,4,b	;volatile
 17317                           
 17318                           ; BSR set to: 14
 17319                           ;tmr5.c: 88: T5CON = 0x01;
 17320  0127B0  0E01               	movlw	1
 17321  0127B2  6EC3               	movwf	4035,c	;volatile
 17322                           
 17323                           ; BSR set to: 14
 17324  0127B4  0012               	return		;funcret
 17325  0127B6                     __end_of_TMR5_Initialize:
 17326                           	opt stack 0
 17327                           tblptru	equ	0xFF8
 17328                           tblptrh	equ	0xFF7
 17329                           tblptrl	equ	0xFF6
 17330                           tablat	equ	0xFF5
 17331                           prodh	equ	0xFF4
 17332                           prodl	equ	0xFF3
 17333                           intcon	equ	0xFF2
 17334                           postinc0	equ	0xFEE
 17335                           wreg	equ	0xFE8
 17336                           indf2	equ	0xFDF
 17337                           postinc2	equ	0xFDE
 17338                           fsr2h	equ	0xFDA
 17339                           fsr2l	equ	0xFD9
 17340                           status	equ	0xFD8
 17341                           
 17342 ;; *************** function _TMR4_Initialize *****************
 17343 ;; Defined at:
 17344 ;;		line 61 in file "mcc_generated_files/tmr4.c"
 17345 ;; Parameters:    Size  Location     Type
 17346 ;;		None
 17347 ;; Auto vars:     Size  Location     Type
 17348 ;;		None
 17349 ;; Return value:  Size  Location     Type
 17350 ;;                  1    wreg      void 
 17351 ;; Registers used:
 17352 ;;		wreg, status,2
 17353 ;; Tracked objects:
 17354 ;;		On entry : 0/0
 17355 ;;		On exit  : 0/0
 17356 ;;		Unchanged: 0/0
 17357 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17362 ;;Total ram usage:        0 bytes
 17363 ;; Hardware stack levels used:    1
 17364 ;; Hardware stack levels required when called:    2
 17365 ;; This function calls:
 17366 ;;		Nothing
 17367 ;; This function is called by:
 17368 ;;		_SYSTEM_Initialize
 17369 ;;		_Reset_hopper
 17370 ;;		_pay_coin
 17371 ;; This function uses a non-reentrant model
 17372 ;;
 17373                           
 17374                           	psect	text110
 17375  012A98                     __ptext110:
 17376                           	opt stack 0
 17377  012A98                     _TMR4_Initialize:
 17378                           	opt stack 24
 17379                           
 17380                           ;tmr4.c: 66: T4CLKCON = 0x04;
 17381                           
 17382                           ; BSR set to: 14
 17383                           ;incstack = 0
 17384  012A98  0E04               	movlw	4
 17385  012A9A  6EB9               	movwf	4025,c	;volatile
 17386                           
 17387                           ;tmr4.c: 69: T4HLT = 0x00;
 17388  012A9C  0E00               	movlw	0
 17389  012A9E  6EB8               	movwf	4024,c	;volatile
 17390                           
 17391                           ;tmr4.c: 72: T4RST = 0x00;
 17392  012AA0  0E00               	movlw	0
 17393  012AA2  6EBA               	movwf	4026,c	;volatile
 17394                           
 17395                           ;tmr4.c: 75: T4PR = 0x4B;
 17396  012AA4  0E4B               	movlw	75
 17397  012AA6  6EB6               	movwf	4022,c	;volatile
 17398                           
 17399                           ;tmr4.c: 78: T4TMR = 0x00;
 17400  012AA8  0E00               	movlw	0
 17401  012AAA  6EB5               	movwf	4021,c	;volatile
 17402                           
 17403                           ;tmr4.c: 81: PIR4bits.TMR4IF = 0;
 17404  012AAC  010E               	movlb	14	; () banked
 17405  012AAE  97CE               	bcf	206,3,b	;volatile
 17406                           
 17407                           ; BSR set to: 14
 17408                           ;tmr4.c: 84: T4CON = 0xFF;
 17409  012AB0  68B7               	setf	4023,c	;volatile
 17410                           
 17411                           ; BSR set to: 14
 17412  012AB2  0012               	return		;funcret
 17413  012AB4                     __end_of_TMR4_Initialize:
 17414                           	opt stack 0
 17415                           tblptru	equ	0xFF8
 17416                           tblptrh	equ	0xFF7
 17417                           tblptrl	equ	0xFF6
 17418                           tablat	equ	0xFF5
 17419                           prodh	equ	0xFF4
 17420                           prodl	equ	0xFF3
 17421                           intcon	equ	0xFF2
 17422                           postinc0	equ	0xFEE
 17423                           wreg	equ	0xFE8
 17424                           indf2	equ	0xFDF
 17425                           postinc2	equ	0xFDE
 17426                           fsr2h	equ	0xFDA
 17427                           fsr2l	equ	0xFD9
 17428                           status	equ	0xFD8
 17429                           
 17430 ;; *************** function _TMR3_Initialize *****************
 17431 ;; Defined at:
 17432 ;;		line 62 in file "mcc_generated_files/tmr3.c"
 17433 ;; Parameters:    Size  Location     Type
 17434 ;;		None
 17435 ;; Auto vars:     Size  Location     Type
 17436 ;;		None
 17437 ;; Return value:  Size  Location     Type
 17438 ;;                  1    wreg      void 
 17439 ;; Registers used:
 17440 ;;		wreg, status,2, status,0
 17441 ;; Tracked objects:
 17442 ;;		On entry : 0/0
 17443 ;;		On exit  : 0/0
 17444 ;;		Unchanged: 0/0
 17445 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17450 ;;Total ram usage:        2 bytes
 17451 ;; Hardware stack levels used:    1
 17452 ;; Hardware stack levels required when called:    2
 17453 ;; This function calls:
 17454 ;;		Nothing
 17455 ;; This function is called by:
 17456 ;;		_SYSTEM_Initialize
 17457 ;;		_mdb_poll
 17458 ;;		_mdb_unlock
 17459 ;;		_cctalk_comm
 17460 ;; This function uses a non-reentrant model
 17461 ;;
 17462                           
 17463                           	psect	text111
 17464  0127B6                     __ptext111:
 17465                           	opt stack 0
 17466  0127B6                     _TMR3_Initialize:
 17467                           	opt stack 24
 17468                           
 17469                           ;tmr3.c: 67: T3GCON = 0x00;
 17470                           
 17471                           ; BSR set to: 14
 17472                           ;incstack = 0
 17473  0127B6  0E00               	movlw	0
 17474  0127B8  6ECA               	movwf	4042,c	;volatile
 17475                           
 17476                           ;tmr3.c: 70: T3GATE = 0x00;
 17477  0127BA  0E00               	movlw	0
 17478  0127BC  6ECB               	movwf	4043,c	;volatile
 17479                           
 17480                           ;tmr3.c: 73: T3CLK = 0x05;
 17481  0127BE  0E05               	movlw	5
 17482  0127C0  6ECC               	movwf	4044,c	;volatile
 17483                           
 17484                           ;tmr3.c: 76: TMR3H = 0x9E;
 17485  0127C2  0E9E               	movlw	158
 17486  0127C4  6EC8               	movwf	4040,c	;volatile
 17487                           
 17488                           ;tmr3.c: 79: TMR3L = 0x58;
 17489  0127C6  0E58               	movlw	88
 17490  0127C8  6EC7               	movwf	4039,c	;volatile
 17491                           
 17492                           ;tmr3.c: 82: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 17493  0127CA  50C7               	movf	4039,w,c	;volatile
 17494  0127CC  CFC8 F01D          	movff	4040,??_TMR3_Initialize	;volatile
 17495  0127D0  6A1E               	clrf	(??_TMR3_Initialize+1)& (0+255),c
 17496  0127D2  C01D  F01E         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 17497  0127D6  6A1D               	clrf	??_TMR3_Initialize,c
 17498  0127D8  101D               	iorwf	??_TMR3_Initialize,w,c
 17499  0127DA  0100               	movlb	0	; () banked
 17500  0127DC  6FC9               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 17501  0127DE  501E               	movf	??_TMR3_Initialize+1,w,c
 17502  0127E0  6FCA               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 17503                           
 17504                           ; BSR set to: 0
 17505                           ;tmr3.c: 85: PIR4bits.TMR3IF = 0;
 17506  0127E2  010E               	movlb	14	; () banked
 17507  0127E4  95CE               	bcf	206,2,b	;volatile
 17508                           
 17509                           ; BSR set to: 14
 17510                           ;tmr3.c: 88: T3CON = 0x01;
 17511  0127E6  0E01               	movlw	1
 17512  0127E8  6EC9               	movwf	4041,c	;volatile
 17513                           
 17514                           ; BSR set to: 14
 17515  0127EA  0012               	return		;funcret
 17516  0127EC                     __end_of_TMR3_Initialize:
 17517                           	opt stack 0
 17518                           tblptru	equ	0xFF8
 17519                           tblptrh	equ	0xFF7
 17520                           tblptrl	equ	0xFF6
 17521                           tablat	equ	0xFF5
 17522                           prodh	equ	0xFF4
 17523                           prodl	equ	0xFF3
 17524                           intcon	equ	0xFF2
 17525                           postinc0	equ	0xFEE
 17526                           wreg	equ	0xFE8
 17527                           indf2	equ	0xFDF
 17528                           postinc2	equ	0xFDE
 17529                           fsr2h	equ	0xFDA
 17530                           fsr2l	equ	0xFD9
 17531                           status	equ	0xFD8
 17532                           
 17533 ;; *************** function _TMR2_Initialize *****************
 17534 ;; Defined at:
 17535 ;;		line 61 in file "mcc_generated_files/tmr2.c"
 17536 ;; Parameters:    Size  Location     Type
 17537 ;;		None
 17538 ;; Auto vars:     Size  Location     Type
 17539 ;;		None
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  1    wreg      void 
 17542 ;; Registers used:
 17543 ;;		wreg, status,2
 17544 ;; Tracked objects:
 17545 ;;		On entry : 0/0
 17546 ;;		On exit  : 0/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17553 ;;Total ram usage:        0 bytes
 17554 ;; Hardware stack levels used:    1
 17555 ;; Hardware stack levels required when called:    2
 17556 ;; This function calls:
 17557 ;;		Nothing
 17558 ;; This function is called by:
 17559 ;;		_SYSTEM_Initialize
 17560 ;;		_pay_coin
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           	psect	text112
 17565  012A5E                     __ptext112:
 17566                           	opt stack 0
 17567  012A5E                     _TMR2_Initialize:
 17568                           	opt stack 24
 17569                           
 17570                           ;tmr2.c: 66: T2CLKCON = 0x05;
 17571                           
 17572                           ; BSR set to: 14
 17573                           ;incstack = 0
 17574  012A5E  0E05               	movlw	5
 17575  012A60  6EBF               	movwf	4031,c	;volatile
 17576                           
 17577                           ;tmr2.c: 69: T2HLT = 0x20;
 17578  012A62  0E20               	movlw	32
 17579  012A64  6EBE               	movwf	4030,c	;volatile
 17580                           
 17581                           ;tmr2.c: 72: T2RST = 0x00;
 17582  012A66  0E00               	movlw	0
 17583  012A68  6EC0               	movwf	4032,c	;volatile
 17584                           
 17585                           ;tmr2.c: 75: T2PR = 0x85;
 17586  012A6A  0E85               	movlw	133
 17587  012A6C  6EBC               	movwf	4028,c	;volatile
 17588                           
 17589                           ;tmr2.c: 78: T2TMR = 0x00;
 17590  012A6E  0E00               	movlw	0
 17591  012A70  6EBB               	movwf	4027,c	;volatile
 17592                           
 17593                           ;tmr2.c: 81: PIR4bits.TMR2IF = 0;
 17594  012A72  010E               	movlb	14	; () banked
 17595  012A74  93CE               	bcf	206,1,b	;volatile
 17596                           
 17597                           ;tmr2.c: 84: T2CON = 0xF1;
 17598  012A76  0EF1               	movlw	241
 17599  012A78  6EBD               	movwf	4029,c	;volatile
 17600                           
 17601                           ; BSR set to: 14
 17602  012A7A  0012               	return		;funcret
 17603  012A7C                     __end_of_TMR2_Initialize:
 17604                           	opt stack 0
 17605                           tblptru	equ	0xFF8
 17606                           tblptrh	equ	0xFF7
 17607                           tblptrl	equ	0xFF6
 17608                           tablat	equ	0xFF5
 17609                           prodh	equ	0xFF4
 17610                           prodl	equ	0xFF3
 17611                           intcon	equ	0xFF2
 17612                           postinc0	equ	0xFEE
 17613                           wreg	equ	0xFE8
 17614                           indf2	equ	0xFDF
 17615                           postinc2	equ	0xFDE
 17616                           fsr2h	equ	0xFDA
 17617                           fsr2l	equ	0xFD9
 17618                           status	equ	0xFD8
 17619                           
 17620 ;; *************** function _TMR1_Initialize *****************
 17621 ;; Defined at:
 17622 ;;		line 62 in file "mcc_generated_files/tmr1.c"
 17623 ;; Parameters:    Size  Location     Type
 17624 ;;		None
 17625 ;; Auto vars:     Size  Location     Type
 17626 ;;		None
 17627 ;; Return value:  Size  Location     Type
 17628 ;;                  1    wreg      void 
 17629 ;; Registers used:
 17630 ;;		wreg, status,2, status,0
 17631 ;; Tracked objects:
 17632 ;;		On entry : 0/0
 17633 ;;		On exit  : 0/0
 17634 ;;		Unchanged: 0/0
 17635 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17640 ;;Total ram usage:        2 bytes
 17641 ;; Hardware stack levels used:    1
 17642 ;; Hardware stack levels required when called:    2
 17643 ;; This function calls:
 17644 ;;		Nothing
 17645 ;; This function is called by:
 17646 ;;		_SYSTEM_Initialize
 17647 ;;		_mdb_comm
 17648 ;;		_mdb_unlock
 17649 ;; This function uses a non-reentrant model
 17650 ;;
 17651                           
 17652                           	psect	text113
 17653  0127EC                     __ptext113:
 17654                           	opt stack 0
 17655  0127EC                     _TMR1_Initialize:
 17656                           	opt stack 24
 17657                           
 17658                           ;tmr1.c: 67: T1GCON = 0x00;
 17659                           
 17660                           ; BSR set to: 14
 17661                           ;incstack = 0
 17662  0127EC  0E00               	movlw	0
 17663  0127EE  6ED0               	movwf	4048,c	;volatile
 17664                           
 17665                           ;tmr1.c: 70: T1GATE = 0x00;
 17666  0127F0  0E00               	movlw	0
 17667  0127F2  6ED1               	movwf	4049,c	;volatile
 17668                           
 17669                           ;tmr1.c: 73: T1CLK = 0x05;
 17670  0127F4  0E05               	movlw	5
 17671  0127F6  6ED2               	movwf	4050,c	;volatile
 17672                           
 17673                           ;tmr1.c: 76: TMR1H = 0xF6;
 17674  0127F8  0EF6               	movlw	246
 17675  0127FA  6ECE               	movwf	4046,c	;volatile
 17676                           
 17677                           ;tmr1.c: 79: TMR1L = 0x3C;
 17678  0127FC  0E3C               	movlw	60
 17679  0127FE  6ECD               	movwf	4045,c	;volatile
 17680                           
 17681                           ;tmr1.c: 82: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17682  012800  50CD               	movf	4045,w,c	;volatile
 17683  012802  CFCE F01D          	movff	4046,??_TMR1_Initialize	;volatile
 17684  012806  6A1E               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 17685  012808  C01D  F01E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17686  01280C  6A1D               	clrf	??_TMR1_Initialize,c
 17687  01280E  101D               	iorwf	??_TMR1_Initialize,w,c
 17688  012810  0100               	movlb	0	; () banked
 17689  012812  6FCB               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17690  012814  501E               	movf	??_TMR1_Initialize+1,w,c
 17691  012816  6FCC               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;tmr1.c: 85: PIR4bits.TMR1IF = 0;
 17695  012818  010E               	movlb	14	; () banked
 17696  01281A  91CE               	bcf	206,0,b	;volatile
 17697                           
 17698                           ; BSR set to: 14
 17699                           ;tmr1.c: 88: T1CON = 0x01;
 17700  01281C  0E01               	movlw	1
 17701  01281E  6ECF               	movwf	4047,c	;volatile
 17702                           
 17703                           ; BSR set to: 14
 17704  012820  0012               	return		;funcret
 17705  012822                     __end_of_TMR1_Initialize:
 17706                           	opt stack 0
 17707                           tblptru	equ	0xFF8
 17708                           tblptrh	equ	0xFF7
 17709                           tblptrl	equ	0xFF6
 17710                           tablat	equ	0xFF5
 17711                           prodh	equ	0xFF4
 17712                           prodl	equ	0xFF3
 17713                           intcon	equ	0xFF2
 17714                           postinc0	equ	0xFEE
 17715                           wreg	equ	0xFE8
 17716                           indf2	equ	0xFDF
 17717                           postinc2	equ	0xFDE
 17718                           fsr2h	equ	0xFDA
 17719                           fsr2l	equ	0xFD9
 17720                           status	equ	0xFD8
 17721                           
 17722 ;; *************** function _TMR0_Initialize *****************
 17723 ;; Defined at:
 17724 ;;		line 64 in file "mcc_generated_files/tmr0.c"
 17725 ;; Parameters:    Size  Location     Type
 17726 ;;		None
 17727 ;; Auto vars:     Size  Location     Type
 17728 ;;		None
 17729 ;; Return value:  Size  Location     Type
 17730 ;;                  1    wreg      void 
 17731 ;; Registers used:
 17732 ;;		wreg, status,2, status,0
 17733 ;; Tracked objects:
 17734 ;;		On entry : 0/0
 17735 ;;		On exit  : 0/0
 17736 ;;		Unchanged: 0/0
 17737 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17741 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17742 ;;Total ram usage:        2 bytes
 17743 ;; Hardware stack levels used:    1
 17744 ;; Hardware stack levels required when called:    2
 17745 ;; This function calls:
 17746 ;;		Nothing
 17747 ;; This function is called by:
 17748 ;;		_SYSTEM_Initialize
 17749 ;; This function uses a non-reentrant model
 17750 ;;
 17751                           
 17752                           	psect	text114
 17753  012950                     __ptext114:
 17754                           	opt stack 0
 17755  012950                     _TMR0_Initialize:
 17756                           	opt stack 27
 17757                           
 17758                           ;tmr0.c: 69: T0CON1 = 0x82;
 17759                           
 17760                           ; BSR set to: 14
 17761                           ;incstack = 0
 17762  012950  0E82               	movlw	130
 17763  012952  6ED6               	movwf	4054,c	;volatile
 17764                           
 17765                           ;tmr0.c: 72: TMR0H = 0xA5;
 17766  012954  0EA5               	movlw	165
 17767  012956  6ED4               	movwf	4052,c	;volatile
 17768                           
 17769                           ;tmr0.c: 75: TMR0L = 0x2E;
 17770  012958  0E2E               	movlw	46
 17771  01295A  6ED3               	movwf	4051,c	;volatile
 17772                           
 17773                           ;tmr0.c: 78: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 17774  01295C  50D3               	movf	4051,w,c	;volatile
 17775  01295E  CFD4 F01D          	movff	4052,??_TMR0_Initialize	;volatile
 17776  012962  6A1E               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 17777  012964  C01D  F01E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 17778  012968  6A1D               	clrf	??_TMR0_Initialize,c
 17779  01296A  101D               	iorwf	??_TMR0_Initialize,w,c
 17780  01296C  0100               	movlb	0	; () banked
 17781  01296E  6FC5               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 17782  012970  501E               	movf	??_TMR0_Initialize+1,w,c
 17783  012972  6FC6               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 17784                           
 17785                           ; BSR set to: 0
 17786                           ;tmr0.c: 81: PIR0bits.TMR0IF = 0;
 17787  012974  010E               	movlb	14	; () banked
 17788  012976  9BCA               	bcf	202,5,b	;volatile
 17789                           
 17790                           ; BSR set to: 14
 17791                           ;tmr0.c: 84: T0CON0 = 0x90;
 17792  012978  0E90               	movlw	144
 17793  01297A  6ED5               	movwf	4053,c	;volatile
 17794                           
 17795                           ; BSR set to: 14
 17796  01297C  0012               	return		;funcret
 17797  01297E                     __end_of_TMR0_Initialize:
 17798                           	opt stack 0
 17799                           tblptru	equ	0xFF8
 17800                           tblptrh	equ	0xFF7
 17801                           tblptrl	equ	0xFF6
 17802                           tablat	equ	0xFF5
 17803                           prodh	equ	0xFF4
 17804                           prodl	equ	0xFF3
 17805                           intcon	equ	0xFF2
 17806                           postinc0	equ	0xFEE
 17807                           wreg	equ	0xFE8
 17808                           indf2	equ	0xFDF
 17809                           postinc2	equ	0xFDE
 17810                           fsr2h	equ	0xFDA
 17811                           fsr2l	equ	0xFD9
 17812                           status	equ	0xFD8
 17813                           
 17814 ;; *************** function _PMD_Initialize *****************
 17815 ;; Defined at:
 17816 ;;		line 148 in file "mcc_generated_files/mcc.c"
 17817 ;; Parameters:    Size  Location     Type
 17818 ;;		None
 17819 ;; Auto vars:     Size  Location     Type
 17820 ;;		None
 17821 ;; Return value:  Size  Location     Type
 17822 ;;                  1    wreg      void 
 17823 ;; Registers used:
 17824 ;;		wreg, status,2
 17825 ;; Tracked objects:
 17826 ;;		On entry : 0/0
 17827 ;;		On exit  : 0/0
 17828 ;;		Unchanged: 0/0
 17829 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17834 ;;Total ram usage:        0 bytes
 17835 ;; Hardware stack levels used:    1
 17836 ;; Hardware stack levels required when called:    2
 17837 ;; This function calls:
 17838 ;;		Nothing
 17839 ;; This function is called by:
 17840 ;;		_SYSTEM_Initialize
 17841 ;; This function uses a non-reentrant model
 17842 ;;
 17843                           
 17844                           	psect	text115
 17845  012AB4                     __ptext115:
 17846                           	opt stack 0
 17847  012AB4                     _PMD_Initialize:
 17848                           	opt stack 27
 17849                           
 17850                           ;mcc.c: 151: PMD0 = 0x00;
 17851                           
 17852                           ; BSR set to: 14
 17853                           ;incstack = 0
 17854  012AB4  0E00               	movlw	0
 17855  012AB6  010E               	movlb	14	; () banked
 17856  012AB8  6FE1               	movwf	225,b	;volatile
 17857                           
 17858                           ;mcc.c: 153: PMD1 = 0x00;
 17859  012ABA  0E00               	movlw	0
 17860  012ABC  6FE2               	movwf	226,b	;volatile
 17861                           
 17862                           ;mcc.c: 155: PMD2 = 0x00;
 17863  012ABE  0E00               	movlw	0
 17864  012AC0  6FE3               	movwf	227,b	;volatile
 17865                           
 17866                           ;mcc.c: 157: PMD3 = 0x00;
 17867  012AC2  0E00               	movlw	0
 17868  012AC4  6FE4               	movwf	228,b	;volatile
 17869                           
 17870                           ;mcc.c: 159: PMD4 = 0x00;
 17871  012AC6  0E00               	movlw	0
 17872  012AC8  6FE5               	movwf	229,b	;volatile
 17873                           
 17874                           ;mcc.c: 161: PMD5 = 0x00;
 17875  012ACA  0E00               	movlw	0
 17876  012ACC  6FE6               	movwf	230,b	;volatile
 17877                           
 17878                           ; BSR set to: 14
 17879  012ACE  0012               	return		;funcret
 17880  012AD0                     __end_of_PMD_Initialize:
 17881                           	opt stack 0
 17882                           tblptru	equ	0xFF8
 17883                           tblptrh	equ	0xFF7
 17884                           tblptrl	equ	0xFF6
 17885                           tablat	equ	0xFF5
 17886                           prodh	equ	0xFF4
 17887                           prodl	equ	0xFF3
 17888                           intcon	equ	0xFF2
 17889                           postinc0	equ	0xFEE
 17890                           wreg	equ	0xFE8
 17891                           indf2	equ	0xFDF
 17892                           postinc2	equ	0xFDE
 17893                           fsr2h	equ	0xFDA
 17894                           fsr2l	equ	0xFD9
 17895                           status	equ	0xFD8
 17896                           
 17897 ;; *************** function _PIN_MANAGER_Initialize *****************
 17898 ;; Defined at:
 17899 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 17900 ;; Parameters:    Size  Location     Type
 17901 ;;		None
 17902 ;; Auto vars:     Size  Location     Type
 17903 ;;		None
 17904 ;; Return value:  Size  Location     Type
 17905 ;;                  1    wreg      void 
 17906 ;; Registers used:
 17907 ;;		wreg, status,2
 17908 ;; Tracked objects:
 17909 ;;		On entry : 0/0
 17910 ;;		On exit  : 0/0
 17911 ;;		Unchanged: 0/0
 17912 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 17913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17917 ;;Total ram usage:        0 bytes
 17918 ;; Hardware stack levels used:    1
 17919 ;; Hardware stack levels required when called:    2
 17920 ;; This function calls:
 17921 ;;		Nothing
 17922 ;; This function is called by:
 17923 ;;		_SYSTEM_Initialize
 17924 ;; This function uses a non-reentrant model
 17925 ;;
 17926                           
 17927                           	psect	text116
 17928  0119C4                     __ptext116:
 17929                           	opt stack 0
 17930  0119C4                     _PIN_MANAGER_Initialize:
 17931                           	opt stack 27
 17932                           
 17933                           ;pin_manager.c: 57: LATE = 0x00;
 17934                           
 17935                           ; BSR set to: 14
 17936                           ;incstack = 0
 17937  0119C4  0E00               	movlw	0
 17938  0119C6  6E87               	movwf	3975,c	;volatile
 17939                           
 17940                           ;pin_manager.c: 58: LATD = 0x00;
 17941  0119C8  0E00               	movlw	0
 17942  0119CA  6E86               	movwf	3974,c	;volatile
 17943                           
 17944                           ;pin_manager.c: 59: LATA = 0xC0;
 17945  0119CC  0EC0               	movlw	192
 17946  0119CE  6E83               	movwf	3971,c	;volatile
 17947                           
 17948                           ;pin_manager.c: 60: LATB = 0x00;
 17949  0119D0  0E00               	movlw	0
 17950  0119D2  6E84               	movwf	3972,c	;volatile
 17951                           
 17952                           ;pin_manager.c: 61: LATC = 0x40;
 17953  0119D4  0E40               	movlw	64
 17954  0119D6  6E85               	movwf	3973,c	;volatile
 17955                           
 17956                           ;pin_manager.c: 66: TRISE = 0x00;
 17957  0119D8  0E00               	movlw	0
 17958  0119DA  6E8C               	movwf	3980,c	;volatile
 17959                           
 17960                           ;pin_manager.c: 67: TRISA = 0x1F;
 17961  0119DC  0E1F               	movlw	31
 17962  0119DE  6E88               	movwf	3976,c	;volatile
 17963                           
 17964                           ;pin_manager.c: 68: TRISB = 0xD0;
 17965  0119E0  0ED0               	movlw	208
 17966  0119E2  6E89               	movwf	3977,c	;volatile
 17967                           
 17968                           ;pin_manager.c: 69: TRISC = 0x90;
 17969  0119E4  0E90               	movlw	144
 17970  0119E6  6E8A               	movwf	3978,c	;volatile
 17971                           
 17972                           ;pin_manager.c: 70: TRISD = 0x00;
 17973  0119E8  0E00               	movlw	0
 17974  0119EA  6E8B               	movwf	3979,c	;volatile
 17975                           
 17976                           ;pin_manager.c: 75: ANSELC = 0x00;
 17977  0119EC  0E00               	movlw	0
 17978  0119EE  010F               	movlb	15	; () banked
 17979  0119F0  6F21               	movwf	33,b	;volatile
 17980                           
 17981                           ;pin_manager.c: 76: ANSELB = 0xC0;
 17982  0119F2  0EC0               	movlw	192
 17983  0119F4  6F19               	movwf	25,b	;volatile
 17984                           
 17985                           ;pin_manager.c: 77: ANSELD = 0x00;
 17986  0119F6  0E00               	movlw	0
 17987  0119F8  6F26               	movwf	38,b	;volatile
 17988                           
 17989                           ;pin_manager.c: 78: ANSELE = 0x00;
 17990  0119FA  0E00               	movlw	0
 17991  0119FC  6F2E               	movwf	46,b	;volatile
 17992                           
 17993                           ;pin_manager.c: 79: ANSELA = 0x01;
 17994  0119FE  0E01               	movlw	1
 17995  011A00  6F11               	movwf	17,b	;volatile
 17996                           
 17997                           ;pin_manager.c: 84: WPUD = 0x00;
 17998  011A02  0E00               	movlw	0
 17999  011A04  6F25               	movwf	37,b	;volatile
 18000                           
 18001                           ;pin_manager.c: 85: WPUE = 0x00;
 18002  011A06  0E00               	movlw	0
 18003  011A08  6F2D               	movwf	45,b	;volatile
 18004                           
 18005                           ;pin_manager.c: 86: WPUB = 0x00;
 18006  011A0A  0E00               	movlw	0
 18007  011A0C  6F18               	movwf	24,b	;volatile
 18008                           
 18009                           ;pin_manager.c: 87: WPUA = 0x00;
 18010  011A0E  0E00               	movlw	0
 18011  011A10  6F10               	movwf	16,b	;volatile
 18012                           
 18013                           ;pin_manager.c: 88: WPUC = 0x00;
 18014  011A12  0E00               	movlw	0
 18015  011A14  6F20               	movwf	32,b	;volatile
 18016                           
 18017                           ;pin_manager.c: 93: ODCONE = 0x00;
 18018  011A16  0E00               	movlw	0
 18019  011A18  6F2C               	movwf	44,b	;volatile
 18020                           
 18021                           ;pin_manager.c: 94: ODCONA = 0x00;
 18022  011A1A  0E00               	movlw	0
 18023  011A1C  6F0F               	movwf	15,b	;volatile
 18024                           
 18025                           ;pin_manager.c: 95: ODCONB = 0x20;
 18026  011A1E  0E20               	movlw	32
 18027  011A20  6F17               	movwf	23,b	;volatile
 18028                           
 18029                           ;pin_manager.c: 96: ODCONC = 0x08;
 18030  011A22  0E08               	movlw	8
 18031  011A24  6F1F               	movwf	31,b	;volatile
 18032                           
 18033                           ;pin_manager.c: 97: ODCOND = 0x00;
 18034  011A26  0E00               	movlw	0
 18035  011A28  6F24               	movwf	36,b	;volatile
 18036                           
 18037                           ; BSR set to: 15
 18038                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
 18039  011A2A  010E               	movlb	14	; () banked
 18040  011A2C  89C2               	bsf	194,4,b	;volatile
 18041                           
 18042                           ; BSR set to: 14
 18043                           ;pin_manager.c: 106: RX1PPSbits.RXPPS = 0x17;
 18044  011A2E  81B5               	bsf	181,0,b	;volatile
 18045  011A30  83B5               	bsf	181,1,b	;volatile
 18046  011A32  85B5               	bsf	181,2,b	;volatile
 18047  011A34  97B5               	bcf	181,3,b	;volatile
 18048  011A36  89B5               	bsf	181,4,b	;volatile
 18049                           
 18050                           ;pin_manager.c: 107: RC6PPS = 0x09;
 18051  011A38  0E09               	movlw	9
 18052  011A3A  6FFD               	movwf	253,b	;volatile
 18053                           
 18054                           ;pin_manager.c: 108: RB5PPS = 0x0B;
 18055  011A3C  0E0B               	movlw	11
 18056  011A3E  6FF4               	movwf	244,b	;volatile
 18057                           
 18058                           ; BSR set to: 14
 18059                           ;pin_manager.c: 109: RX2PPSbits.RXPPS = 0x0C;
 18060  011A40  918D               	bcf	141,0,b	;volatile
 18061  011A42  938D               	bcf	141,1,b	;volatile
 18062  011A44  858D               	bsf	141,2,b	;volatile
 18063  011A46  878D               	bsf	141,3,b	;volatile
 18064  011A48  998D               	bcf	141,4,b	;volatile
 18065                           
 18066                           ; BSR set to: 14
 18067  011A4A  0012               	return		;funcret
 18068  011A4C                     __end_of_PIN_MANAGER_Initialize:
 18069                           	opt stack 0
 18070                           tblptru	equ	0xFF8
 18071                           tblptrh	equ	0xFF7
 18072                           tblptrl	equ	0xFF6
 18073                           tablat	equ	0xFF5
 18074                           prodh	equ	0xFF4
 18075                           prodl	equ	0xFF3
 18076                           intcon	equ	0xFF2
 18077                           postinc0	equ	0xFEE
 18078                           wreg	equ	0xFE8
 18079                           indf2	equ	0xFDF
 18080                           postinc2	equ	0xFDE
 18081                           fsr2h	equ	0xFDA
 18082                           fsr2l	equ	0xFD9
 18083                           status	equ	0xFD8
 18084                           
 18085 ;; *************** function _OSCILLATOR_Initialize *****************
 18086 ;; Defined at:
 18087 ;;		line 134 in file "mcc_generated_files/mcc.c"
 18088 ;; Parameters:    Size  Location     Type
 18089 ;;		None
 18090 ;; Auto vars:     Size  Location     Type
 18091 ;;		None
 18092 ;; Return value:  Size  Location     Type
 18093 ;;                  1    wreg      void 
 18094 ;; Registers used:
 18095 ;;		wreg, status,2
 18096 ;; Tracked objects:
 18097 ;;		On entry : 0/0
 18098 ;;		On exit  : 0/0
 18099 ;;		Unchanged: 0/0
 18100 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18105 ;;Total ram usage:        0 bytes
 18106 ;; Hardware stack levels used:    1
 18107 ;; Hardware stack levels required when called:    2
 18108 ;; This function calls:
 18109 ;;		Nothing
 18110 ;; This function is called by:
 18111 ;;		_SYSTEM_Initialize
 18112 ;; This function uses a non-reentrant model
 18113 ;;
 18114                           
 18115                           	psect	text117
 18116  012B18                     __ptext117:
 18117                           	opt stack 0
 18118  012B18                     _OSCILLATOR_Initialize:
 18119                           	opt stack 27
 18120                           
 18121                           ;mcc.c: 137: OSCCON1 = 0x60;
 18122                           
 18123                           ; BSR set to: 14
 18124                           ;incstack = 0
 18125  012B18  0E60               	movlw	96
 18126  012B1A  010E               	movlb	14	; () banked
 18127  012B1C  6FD8               	movwf	216,b	;volatile
 18128                           
 18129                           ;mcc.c: 139: OSCCON3 = 0x00;
 18130  012B1E  0E00               	movlw	0
 18131  012B20  6FDA               	movwf	218,b	;volatile
 18132                           
 18133                           ;mcc.c: 141: OSCEN = 0x00;
 18134  012B22  0E00               	movlw	0
 18135  012B24  6FDC               	movwf	220,b	;volatile
 18136                           
 18137                           ;mcc.c: 143: OSCFRQ = 0x04;
 18138  012B26  0E04               	movlw	4
 18139  012B28  6FDE               	movwf	222,b	;volatile
 18140                           
 18141                           ;mcc.c: 145: OSCTUNE = 0x00;
 18142  012B2A  0E00               	movlw	0
 18143  012B2C  6FDD               	movwf	221,b	;volatile
 18144                           
 18145                           ; BSR set to: 14
 18146  012B2E  0012               	return		;funcret
 18147  012B30                     __end_of_OSCILLATOR_Initialize:
 18148                           	opt stack 0
 18149                           tblptru	equ	0xFF8
 18150                           tblptrh	equ	0xFF7
 18151                           tblptrl	equ	0xFF6
 18152                           tablat	equ	0xFF5
 18153                           prodh	equ	0xFF4
 18154                           prodl	equ	0xFF3
 18155                           intcon	equ	0xFF2
 18156                           postinc0	equ	0xFEE
 18157                           wreg	equ	0xFE8
 18158                           indf2	equ	0xFDF
 18159                           postinc2	equ	0xFDE
 18160                           fsr2h	equ	0xFDA
 18161                           fsr2l	equ	0xFD9
 18162                           status	equ	0xFD8
 18163                           
 18164 ;; *************** function _INTERRUPT_Initialize *****************
 18165 ;; Defined at:
 18166 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 18167 ;; Parameters:    Size  Location     Type
 18168 ;;		None
 18169 ;; Auto vars:     Size  Location     Type
 18170 ;;		None
 18171 ;; Return value:  Size  Location     Type
 18172 ;;                  1    wreg      void 
 18173 ;; Registers used:
 18174 ;;		None
 18175 ;; Tracked objects:
 18176 ;;		On entry : 0/0
 18177 ;;		On exit  : 0/0
 18178 ;;		Unchanged: 0/0
 18179 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18184 ;;Total ram usage:        0 bytes
 18185 ;; Hardware stack levels used:    1
 18186 ;; Hardware stack levels required when called:    2
 18187 ;; This function calls:
 18188 ;;		Nothing
 18189 ;; This function is called by:
 18190 ;;		_SYSTEM_Initialize
 18191 ;; This function uses a non-reentrant model
 18192 ;;
 18193                           
 18194                           	psect	text118
 18195  012C78                     __ptext118:
 18196                           	opt stack 0
 18197  012C78                     _INTERRUPT_Initialize:
 18198                           	opt stack 27
 18199                           
 18200                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
 18201                           
 18202                           ; BSR set to: 14
 18203                           ;incstack = 0
 18204  012C78  8AF2               	bsf	intcon,5,c	;volatile
 18205                           
 18206                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
 18207  012C7A  010E               	movlb	14	; () banked
 18208  012C7C  89BA               	bsf	186,4,b	;volatile
 18209                           
 18210                           ; BSR set to: 14
 18211  012C7E  0012               	return		;funcret
 18212  012C80                     __end_of_INTERRUPT_Initialize:
 18213                           	opt stack 0
 18214                           tblptru	equ	0xFF8
 18215                           tblptrh	equ	0xFF7
 18216                           tblptrl	equ	0xFF6
 18217                           tablat	equ	0xFF5
 18218                           prodh	equ	0xFF4
 18219                           prodl	equ	0xFF3
 18220                           intcon	equ	0xFF2
 18221                           postinc0	equ	0xFEE
 18222                           wreg	equ	0xFE8
 18223                           indf2	equ	0xFDF
 18224                           postinc2	equ	0xFDE
 18225                           fsr2h	equ	0xFDA
 18226                           fsr2l	equ	0xFD9
 18227                           status	equ	0xFD8
 18228                           
 18229 ;; *************** function _EUSART2_Initialize *****************
 18230 ;; Defined at:
 18231 ;;		line 53 in file "mcc_generated_files/eusart2.c"
 18232 ;; Parameters:    Size  Location     Type
 18233 ;;		None
 18234 ;; Auto vars:     Size  Location     Type
 18235 ;;		None
 18236 ;; Return value:  Size  Location     Type
 18237 ;;                  1    wreg      void 
 18238 ;; Registers used:
 18239 ;;		wreg, status,2
 18240 ;; Tracked objects:
 18241 ;;		On entry : 0/0
 18242 ;;		On exit  : 0/0
 18243 ;;		Unchanged: 0/0
 18244 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18249 ;;Total ram usage:        0 bytes
 18250 ;; Hardware stack levels used:    1
 18251 ;; Hardware stack levels required when called:    2
 18252 ;; This function calls:
 18253 ;;		Nothing
 18254 ;; This function is called by:
 18255 ;;		_SYSTEM_Initialize
 18256 ;; This function uses a non-reentrant model
 18257 ;;
 18258                           
 18259                           	psect	text119
 18260  012B30                     __ptext119:
 18261                           	opt stack 0
 18262  012B30                     _EUSART2_Initialize:
 18263                           	opt stack 27
 18264                           
 18265                           ;eusart2.c: 58: BAUD2CON = 0x09;
 18266                           
 18267                           ; BSR set to: 14
 18268                           ;incstack = 0
 18269  012B30  0E09               	movlw	9
 18270  012B32  010E               	movlb	14	; () banked
 18271  012B34  6F9F               	movwf	159,b	;volatile
 18272                           
 18273                           ;eusart2.c: 61: RC2STA = 0x90;
 18274  012B36  0E90               	movlw	144
 18275  012B38  6F9D               	movwf	157,b	;volatile
 18276                           
 18277                           ;eusart2.c: 64: TX2STA = 0x24;
 18278  012B3A  0E24               	movlw	36
 18279  012B3C  6F9E               	movwf	158,b	;volatile
 18280                           
 18281                           ;eusart2.c: 67: SP2BRGL = 0x9B;
 18282  012B3E  0E9B               	movlw	155
 18283  012B40  6F9B               	movwf	155,b	;volatile
 18284                           
 18285                           ;eusart2.c: 70: SP2BRGH = 0x00;
 18286  012B42  0E00               	movlw	0
 18287  012B44  6F9C               	movwf	156,b	;volatile
 18288                           
 18289                           ; BSR set to: 14
 18290  012B46  0012               	return		;funcret
 18291  012B48                     __end_of_EUSART2_Initialize:
 18292                           	opt stack 0
 18293                           tblptru	equ	0xFF8
 18294                           tblptrh	equ	0xFF7
 18295                           tblptrl	equ	0xFF6
 18296                           tablat	equ	0xFF5
 18297                           prodh	equ	0xFF4
 18298                           prodl	equ	0xFF3
 18299                           intcon	equ	0xFF2
 18300                           postinc0	equ	0xFEE
 18301                           wreg	equ	0xFE8
 18302                           indf2	equ	0xFDF
 18303                           postinc2	equ	0xFDE
 18304                           fsr2h	equ	0xFDA
 18305                           fsr2l	equ	0xFD9
 18306                           status	equ	0xFD8
 18307                           
 18308 ;; *************** function _EUSART1_Initialize *****************
 18309 ;; Defined at:
 18310 ;;		line 53 in file "mcc_generated_files/eusart1.c"
 18311 ;; Parameters:    Size  Location     Type
 18312 ;;		None
 18313 ;; Auto vars:     Size  Location     Type
 18314 ;;		None
 18315 ;; Return value:  Size  Location     Type
 18316 ;;                  1    wreg      void 
 18317 ;; Registers used:
 18318 ;;		wreg, status,2
 18319 ;; Tracked objects:
 18320 ;;		On entry : 0/0
 18321 ;;		On exit  : 0/0
 18322 ;;		Unchanged: 0/0
 18323 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18328 ;;Total ram usage:        0 bytes
 18329 ;; Hardware stack levels used:    1
 18330 ;; Hardware stack levels required when called:    2
 18331 ;; This function calls:
 18332 ;;		Nothing
 18333 ;; This function is called by:
 18334 ;;		_SYSTEM_Initialize
 18335 ;; This function uses a non-reentrant model
 18336 ;;
 18337                           
 18338                           	psect	text120
 18339  012B74                     __ptext120:
 18340                           	opt stack 0
 18341  012B74                     _EUSART1_Initialize:
 18342                           	opt stack 27
 18343                           
 18344                           ;eusart1.c: 58: BAUD1CON = 0x08;
 18345                           
 18346                           ; BSR set to: 14
 18347                           ;incstack = 0
 18348  012B74  0E08               	movlw	8
 18349  012B76  6E9F               	movwf	3999,c	;volatile
 18350                           
 18351                           ;eusart1.c: 61: RC1STA = 0xD0;
 18352  012B78  0ED0               	movlw	208
 18353  012B7A  6E9D               	movwf	3997,c	;volatile
 18354                           
 18355                           ;eusart1.c: 64: TX1STA = 0xEC;
 18356  012B7C  0EEC               	movlw	236
 18357  012B7E  6E9E               	movwf	3998,c	;volatile
 18358                           
 18359                           ;eusart1.c: 67: SP1BRGL = 0x38;
 18360  012B80  0E38               	movlw	56
 18361  012B82  6E9B               	movwf	3995,c	;volatile
 18362                           
 18363                           ;eusart1.c: 70: SP1BRGH = 0x01;
 18364  012B84  0E01               	movlw	1
 18365  012B86  6E9C               	movwf	3996,c	;volatile
 18366  012B88  0012               	return		;funcret
 18367  012B8A                     __end_of_EUSART1_Initialize:
 18368                           	opt stack 0
 18369                           tblptru	equ	0xFF8
 18370                           tblptrh	equ	0xFF7
 18371                           tblptrl	equ	0xFF6
 18372                           tablat	equ	0xFF5
 18373                           prodh	equ	0xFF4
 18374                           prodl	equ	0xFF3
 18375                           intcon	equ	0xFF2
 18376                           postinc0	equ	0xFEE
 18377                           wreg	equ	0xFE8
 18378                           indf2	equ	0xFDF
 18379                           postinc2	equ	0xFDE
 18380                           fsr2h	equ	0xFDA
 18381                           fsr2l	equ	0xFD9
 18382                           status	equ	0xFD8
 18383                           
 18384 ;; *************** function _DAC1_Initialize *****************
 18385 ;; Defined at:
 18386 ;;		line 57 in file "mcc_generated_files/dac1.c"
 18387 ;; Parameters:    Size  Location     Type
 18388 ;;		None
 18389 ;; Auto vars:     Size  Location     Type
 18390 ;;		None
 18391 ;; Return value:  Size  Location     Type
 18392 ;;                  1    wreg      void 
 18393 ;; Registers used:
 18394 ;;		wreg, status,2
 18395 ;; Tracked objects:
 18396 ;;		On entry : 0/0
 18397 ;;		On exit  : 0/0
 18398 ;;		Unchanged: 0/0
 18399 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18404 ;;Total ram usage:        0 bytes
 18405 ;; Hardware stack levels used:    1
 18406 ;; Hardware stack levels required when called:    2
 18407 ;; This function calls:
 18408 ;;		Nothing
 18409 ;; This function is called by:
 18410 ;;		_SYSTEM_Initialize
 18411 ;;		_mdb_unlock
 18412 ;; This function uses a non-reentrant model
 18413 ;;
 18414                           
 18415                           	psect	text121
 18416  012C38                     __ptext121:
 18417                           	opt stack 0
 18418  012C38                     _DAC1_Initialize:
 18419                           	opt stack 24
 18420                           
 18421                           ;dac1.c: 60: DAC1CON0 = 0x80;
 18422                           
 18423                           ;incstack = 0
 18424  012C38  0E80               	movlw	128
 18425  012C3A  010F               	movlb	15	; () banked
 18426  012C3C  6F33               	movwf	51,b	;volatile
 18427                           
 18428                           ;dac1.c: 62: DAC1CON1 = 0x0E;
 18429  012C3E  0E0E               	movlw	14
 18430  012C40  6F34               	movwf	52,b	;volatile
 18431                           
 18432                           ; BSR set to: 15
 18433  012C42  0012               	return		;funcret
 18434  012C44                     __end_of_DAC1_Initialize:
 18435                           	opt stack 0
 18436                           tblptru	equ	0xFF8
 18437                           tblptrh	equ	0xFF7
 18438                           tblptrl	equ	0xFF6
 18439                           tablat	equ	0xFF5
 18440                           prodh	equ	0xFF4
 18441                           prodl	equ	0xFF3
 18442                           intcon	equ	0xFF2
 18443                           postinc0	equ	0xFEE
 18444                           wreg	equ	0xFE8
 18445                           indf2	equ	0xFDF
 18446                           postinc2	equ	0xFDE
 18447                           fsr2h	equ	0xFDA
 18448                           fsr2l	equ	0xFD9
 18449                           status	equ	0xFD8
 18450                           
 18451 ;; *************** function _CMP1_Initialize *****************
 18452 ;; Defined at:
 18453 ;;		line 57 in file "mcc_generated_files/cmp1.c"
 18454 ;; Parameters:    Size  Location     Type
 18455 ;;		None
 18456 ;; Auto vars:     Size  Location     Type
 18457 ;;		None
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  1    wreg      void 
 18460 ;; Registers used:
 18461 ;;		wreg, status,2
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18471 ;;Total ram usage:        0 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; Hardware stack levels required when called:    2
 18474 ;; This function calls:
 18475 ;;		Nothing
 18476 ;; This function is called by:
 18477 ;;		_SYSTEM_Initialize
 18478 ;;		_mdb_unlock
 18479 ;; This function uses a non-reentrant model
 18480 ;;
 18481                           
 18482                           	psect	text122
 18483  012B9E                     __ptext122:
 18484                           	opt stack 0
 18485  012B9E                     _CMP1_Initialize:
 18486                           	opt stack 24
 18487                           
 18488                           ;cmp1.c: 61: CM1CON0 = 0x90;
 18489                           
 18490                           ; BSR set to: 15
 18491                           ;incstack = 0
 18492  012B9E  0E90               	movlw	144
 18493  012BA0  010F               	movlb	15	; () banked
 18494  012BA2  6F39               	movwf	57,b	;volatile
 18495                           
 18496                           ;cmp1.c: 64: CM1CON1 = 0x00;
 18497  012BA4  0E00               	movlw	0
 18498  012BA6  6F3A               	movwf	58,b	;volatile
 18499                           
 18500                           ;cmp1.c: 67: CM1NCH = 0x00;
 18501  012BA8  0E00               	movlw	0
 18502  012BAA  6F3B               	movwf	59,b	;volatile
 18503                           
 18504                           ;cmp1.c: 70: CM1PCH = 0x05;
 18505  012BAC  0E05               	movlw	5
 18506  012BAE  6F3C               	movwf	60,b	;volatile
 18507                           
 18508                           ; BSR set to: 15
 18509  012BB0  0012               	return		;funcret
 18510  012BB2                     __end_of_CMP1_Initialize:
 18511                           	opt stack 0
 18512                           tblptru	equ	0xFF8
 18513                           tblptrh	equ	0xFF7
 18514                           tblptrl	equ	0xFF6
 18515                           tablat	equ	0xFF5
 18516                           prodh	equ	0xFF4
 18517                           prodl	equ	0xFF3
 18518                           intcon	equ	0xFF2
 18519                           postinc0	equ	0xFEE
 18520                           wreg	equ	0xFE8
 18521                           indf2	equ	0xFDF
 18522                           postinc2	equ	0xFDE
 18523                           fsr2h	equ	0xFDA
 18524                           fsr2l	equ	0xFD9
 18525                           status	equ	0xFD8
 18526                           
 18527 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 18528 ;; Defined at:
 18529 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
 18530 ;; Parameters:    Size  Location     Type
 18531 ;;		None
 18532 ;; Auto vars:     Size  Location     Type
 18533 ;;		None
 18534 ;; Return value:  Size  Location     Type
 18535 ;;                  1    wreg      void 
 18536 ;; Registers used:
 18537 ;;		cstack
 18538 ;; Tracked objects:
 18539 ;;		On entry : 0/0
 18540 ;;		On exit  : 0/0
 18541 ;;		Unchanged: 0/0
 18542 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18545 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18546 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18547 ;;Total ram usage:       18 bytes
 18548 ;; Hardware stack levels used:    1
 18549 ;; Hardware stack levels required when called:    1
 18550 ;; This function calls:
 18551 ;;		_PIN_MANAGER_IOC
 18552 ;; This function is called by:
 18553 ;;		Interrupt level 2
 18554 ;; This function uses a non-reentrant model
 18555 ;;
 18556                           
 18557                           	psect	intcode
 18558  000008                     __pintcode:
 18559                           	opt stack 0
 18560  000008                     _INTERRUPT_InterruptManagerHigh:
 18561                           	opt stack 18
 18562                           
 18563                           ; BSR set to: 15
 18564                           ;incstack = 0
 18565  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18566  00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 18567  00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 18568  000012  CFE9 F00D          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 18569  000016  CFEA F00E          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 18570  00001A  CFE1 F00F          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 18571  00001E  CFE2 F010          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 18572  000022  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 18573  000026  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 18574  00002A  CFF3 F013          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 18575  00002E  CFF4 F014          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 18576  000032  CFF6 F015          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 18577  000036  CFF7 F016          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 18578  00003A  CFF8 F017          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 18579  00003E  CFF5 F018          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 18580  000042  C04F  F019         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 18581  000046  C050  F01A         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 18582  00004A  C051  F01B         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 18583  00004E  C052  F01C         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 18584                           
 18585                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 18586  000052  010E               	movlb	14	; () banked
 18587  000054  B9C2               	btfsc	194,4,b	;volatile
 18588                           
 18589                           ; BSR set to: 14
 18590  000056  A9CA               	btfss	202,4,b	;volatile
 18591  000058  D002               	goto	i2l195
 18592                           
 18593                           ; BSR set to: 14
 18594                           ;interrupt_manager.c: 68: {
 18595                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
 18596  00005A  EC46  F096         	call	_PIN_MANAGER_IOC	;wreg free
 18597  00005E                     i2l195:
 18598                           
 18599                           ;interrupt_manager.c: 71: else
 18600                           ;interrupt_manager.c: 72: {
 18601  00005E  C01C  F052         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 18602  000062  C01B  F051         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 18603  000066  C01A  F050         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 18604  00006A  C019  F04F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 18605  00006E  C018  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 18606  000072  C017  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 18607  000076  C016  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 18608  00007A  C015  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 18609  00007E  C014  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 18610  000082  C013  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 18611  000086  C012  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 18612  00008A  C011  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 18613  00008E  C010  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 18614  000092  C00F  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 18615  000096  C00E  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 18616  00009A  C00D  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 18617  00009E  C00C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 18618  0000A2  C00B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 18619  0000A6  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18620  0000A8  0011               	retfie		f
 18621  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
 18622                           	opt stack 0
 18623                           pclatu	equ	0xFFB
 18624                           pclath	equ	0xFFA
 18625                           tblptru	equ	0xFF8
 18626                           tblptrh	equ	0xFF7
 18627                           tblptrl	equ	0xFF6
 18628                           tablat	equ	0xFF5
 18629                           prodh	equ	0xFF4
 18630                           prodl	equ	0xFF3
 18631                           intcon	equ	0xFF2
 18632                           postinc0	equ	0xFEE
 18633                           fsr0h	equ	0xFEA
 18634                           fsr0l	equ	0xFE9
 18635                           wreg	equ	0xFE8
 18636                           fsr1h	equ	0xFE2
 18637                           fsr1l	equ	0xFE1
 18638                           indf2	equ	0xFDF
 18639                           postinc2	equ	0xFDE
 18640                           fsr2h	equ	0xFDA
 18641                           fsr2l	equ	0xFD9
 18642                           status	equ	0xFD8
 18643                           
 18644 ;; *************** function _PIN_MANAGER_IOC *****************
 18645 ;; Defined at:
 18646 ;;		line 113 in file "mcc_generated_files/pin_manager.c"
 18647 ;; Parameters:    Size  Location     Type
 18648 ;;		None
 18649 ;; Auto vars:     Size  Location     Type
 18650 ;;		None
 18651 ;; Return value:  Size  Location     Type
 18652 ;;                  1    wreg      void 
 18653 ;; Registers used:
 18654 ;;		None
 18655 ;; Tracked objects:
 18656 ;;		On entry : 0/0
 18657 ;;		On exit  : 0/0
 18658 ;;		Unchanged: 0/0
 18659 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 18660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18664 ;;Total ram usage:        0 bytes
 18665 ;; Hardware stack levels used:    1
 18666 ;; This function calls:
 18667 ;;		Nothing
 18668 ;; This function is called by:
 18669 ;;		_INTERRUPT_InterruptManagerHigh
 18670 ;; This function uses a non-reentrant model
 18671 ;;
 18672                           
 18673                           	psect	text124
 18674  012C8C                     __ptext124:
 18675                           	opt stack 0
 18676  012C8C                     _PIN_MANAGER_IOC:
 18677                           	opt stack 18
 18678                           
 18679                           ;pin_manager.c: 117: PIR0bits.IOCIF = 0;
 18680                           
 18681                           ;incstack = 0
 18682  012C8C  010E               	movlb	14	; () banked
 18683  012C8E  99CA               	bcf	202,4,b	;volatile
 18684                           
 18685                           ; BSR set to: 14
 18686  012C90  0012               	return		;funcret
 18687  012C92                     __end_of_PIN_MANAGER_IOC:
 18688                           	opt stack 0
 18689                           pclatu	equ	0xFFB
 18690                           pclath	equ	0xFFA
 18691                           tblptru	equ	0xFF8
 18692                           tblptrh	equ	0xFF7
 18693                           tblptrl	equ	0xFF6
 18694                           tablat	equ	0xFF5
 18695                           prodh	equ	0xFF4
 18696                           prodl	equ	0xFF3
 18697                           intcon	equ	0xFF2
 18698                           postinc0	equ	0xFEE
 18699                           fsr0h	equ	0xFEA
 18700                           fsr0l	equ	0xFE9
 18701                           wreg	equ	0xFE8
 18702                           fsr1h	equ	0xFE2
 18703                           fsr1l	equ	0xFE1
 18704                           indf2	equ	0xFDF
 18705                           postinc2	equ	0xFDE
 18706                           fsr2h	equ	0xFDA
 18707                           fsr2l	equ	0xFD9
 18708                           status	equ	0xFD8
 18709                           pclatu	equ	0xFFB
 18710                           pclath	equ	0xFFA
 18711                           tblptru	equ	0xFF8
 18712                           tblptrh	equ	0xFF7
 18713                           tblptrl	equ	0xFF6
 18714                           tablat	equ	0xFF5
 18715                           prodh	equ	0xFF4
 18716                           prodl	equ	0xFF3
 18717                           intcon	equ	0xFF2
 18718                           postinc0	equ	0xFEE
 18719                           fsr0h	equ	0xFEA
 18720                           fsr0l	equ	0xFE9
 18721                           wreg	equ	0xFE8
 18722                           fsr1h	equ	0xFE2
 18723                           fsr1l	equ	0xFE1
 18724                           indf2	equ	0xFDF
 18725                           postinc2	equ	0xFDE
 18726                           fsr2h	equ	0xFDA
 18727                           fsr2l	equ	0xFD9
 18728                           status	equ	0xFD8
 18729                           
 18730                           	psect	rparam
 18731  0000                     pclatu	equ	0xFFB
 18732                           pclath	equ	0xFFA
 18733                           tblptru	equ	0xFF8
 18734                           tblptrh	equ	0xFF7
 18735                           tblptrl	equ	0xFF6
 18736                           tablat	equ	0xFF5
 18737                           prodh	equ	0xFF4
 18738                           prodl	equ	0xFF3
 18739                           intcon	equ	0xFF2
 18740                           postinc0	equ	0xFEE
 18741                           fsr0h	equ	0xFEA
 18742                           fsr0l	equ	0xFE9
 18743                           wreg	equ	0xFE8
 18744                           fsr1h	equ	0xFE2
 18745                           fsr1l	equ	0xFE1
 18746                           indf2	equ	0xFDF
 18747                           postinc2	equ	0xFDE
 18748                           fsr2h	equ	0xFDA
 18749                           fsr2l	equ	0xFD9
 18750                           status	equ	0xFD8
 18751                           
 18752                           	psect	temp
 18753  00004F                     btemp:
 18754                           	opt stack 0
 18755  00004F                     	ds	1
 18756  0000                     int$flags	set	btemp
 18757  0000                     wtemp6	set	btemp+1
 18758                           pclatu	equ	0xFFB
 18759                           pclath	equ	0xFFA
 18760                           tblptru	equ	0xFF8
 18761                           tblptrh	equ	0xFF7
 18762                           tblptrl	equ	0xFF6
 18763                           tablat	equ	0xFF5
 18764                           prodh	equ	0xFF4
 18765                           prodl	equ	0xFF3
 18766                           intcon	equ	0xFF2
 18767                           postinc0	equ	0xFEE
 18768                           fsr0h	equ	0xFEA
 18769                           fsr0l	equ	0xFE9
 18770                           wreg	equ	0xFE8
 18771                           fsr1h	equ	0xFE2
 18772                           fsr1l	equ	0xFE1
 18773                           indf2	equ	0xFDF
 18774                           postinc2	equ	0xFDE
 18775                           fsr2h	equ	0xFDA
 18776                           fsr2l	equ	0xFD9
 18777                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    1413
    Data        2
    BSS         115
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          85     34      67
    COMRAMl           1      0       1
    BANK0           160     19     111
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Read_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Write_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Init_vendmem@chanlink	PTR unsigned char  size(2) Largest target is 1
		 -> chanlink1(BIGRAMl[1]), 

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 80
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), setnotes(CODE[69]), chanresetmsg(CODE[32]), chanlinkm(CODE[55]), 
		 -> vendtimem(CODE[41]), setimemsg(CODE[41]), vendsetup(CODE[67]), pricesetm2(CODE[57]), 
		 -> pricesetmsg(CODE[18]), creditclr(CODE[16]), dacmsg(CODE[13]), hoppcoin(CODE[51]), 
		 -> totalvendsm(CODE[7]), vendispmsg(CODE[21]), totalmsg(CODE[8]), cashinmsg(CODE[10]), 
		 -> initnote(CODE[37]), nochange(CODE[33]), noteerr(CODE[28]), credits(CODE[13]), 
		 -> timemsg(CODE[18]), clrline(CODE[21]), enabled(CODE[10]), disabled(CODE[10]), 
		 -> sensoffmsg(CODE[31]), sensmsg(CODE[11]), linkmsg(CODE[12]), chanmsg(CODE[12]), 
		 -> clrmsg(CODE[10]), onmsg(CODE[4]), offmsg(CODE[4]), servmsg(CODE[80]), 
		 -> emptymsg(CODE[9]), inscoin(CODE[39]), 

    displ_note@notestring	PTR unsigned char  size(2) Largest target is 9
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), 


Critical Paths under _main in COMRAMh

    _main->_mdb_init
    _vend_init->_mdb_init
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_reset->_mdb_comm
    _price_check->_give_change
    _mdb_noten->_mdb_comm
    _give_change->_hopper_pay
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_Update_cashaudit
    _Update_cashaudit->_Write_NVstore
    _dispense->_vend_dispense
    _vend_nosense->_mdb_unlock
    _vend_dispense->_set_motortime
    _set_motortime->___wmul
    _disable_channel->_DATAEE_WriteByte
    _update_vends->_DATAEE_WriteByte
    _mdb_poll->_mdb_comm
    _mdb_comm->_init_mdbdata
    _mdb_transmit->_EUSART1_Write
    _init_mdbdata->_init_pricestore
    _init_pricestore->_DATAEE_ReadByte
    _lcd_init->_lcd_test
    _lcd_test->_lcd_writeC
    _gsm_txAT->_gsm_transmit
    _gsm_transmit->_EUSART2_Write
    _enter_service->_Audit
    _enter_service->_Hopper_coin
    _enter_service->_Sensor_set
    _set_notes->_enable_notes
    _enable_notes->_displ_nendis
    _save_notes->_DATAEE_WriteByte
    _displ_nendis->_lcd_string
    _displ_note->_lcd_string
    _price_set->_set_price
    _set_price->_displ_price
    _displ_price->_displ_hex
    _mdb_unlock->_TMR1_Initialize
    _mdb_unlock->_TMR3_Initialize
    _mdb_unlock->_TMR5_Initialize
    _hopper_test->_hopper_pay
    _hopper_pay->_Update_coinsout
    _pay_coin->_Reset_hopper
    _Update_coinsout->_Write_NVstore
    _Write_NVstore->_DATAEE_WriteByte
    _Vend_timeset->_displ_time
    _displ_time->_displ_hex
    _off_sens->_displ_sflags
    _displ_sflags->_lcd_string
    _Reset_settings->_lcd_string
    _Init_vendmem->_DATAEE_ReadByte
    _Clear_Totals->_DATAEE_WriteByte
    _Link_chan->_displ_lflags
    _displ_lflags->_lcd_string
    _Sensor_set->_displ_sens
    _displ_sens->_displ_hex
    _Hopper_coin->_Update_Hopcoin
    _butindb->_butin
    _Update_Hopcoin->_displ_hex
    _Clear_cred->_lcd_string
    _Audit->_displ_hex
    _Read_NVstore->_DATAEE_ReadByte
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_nochange->_lcd_string
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMh

    None.

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMl

    None.

Critical Paths under _main in BANK0

    _price_check->_dispense
    _price_set->_set_price
    _displ_price->_displ_hex
    _Vend_settime->_Vend_timeset
    _displ_time->_displ_hex
    _Sens_off->_off_sens
    _Chan_link->_Link_chan
    _displ_sens->_displ_hex
    _Hopper_coin->_displ_hex
    _Update_Hopcoin->_displ_hex
    _Audit->_displ_hex
    _displ_credit->_displ_hex

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  625817
                                             16 BANK0      3     3      0
               _CMP1_GetOutputStatus
                    _DATAEE_ReadByte
                  _SYSTEM_Initialize
                              _butin
                         _credit_add
                       _displ_credit
                     _displ_nochange
                       _displ_noteer
                        _displ_price
                      _enter_service
                        _get_channel
                           _gsm_init
                           _lcd_init
                         _lcd_string
                           _mdb_init
                           _mdb_poll
                        _price_check
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   42697
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                       _Init_vendmem
                       _credit_check
                     _find_highprice
                      _find_lowprice
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             3     3      0   22774
                                             31 COMRAMh    3     3      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0    6403
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0    3760
                                             28 COMRAMh    3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _find_lowprice                                        2     2      0      99
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _find_highprice                                       2     2      0      99
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      31
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _price_check                                          6     6      0   89799
                                              2 BANK0      6     6      0
                    _DATAEE_ReadByte
                              _butin
                       _credit_check
                    _credit_subtract
                           _dispense
                        _get_channel
                        _give_change
                         _lcd_string
                       _note_disable
 ---------------------------------------------------------------------------------
 (2) _note_disable                                         0     0      0    6403
                          _mdb_noten
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0    6403
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (2) _give_change                                          2     2      0   39623
                                             31 COMRAMh    2     2      0
                    _DATAEE_ReadByte
                            ___lbdiv
                         _credit_add
                    _credit_subtract
                         _hopper_pay
 ---------------------------------------------------------------------------------
 (3) _credit_subtract                                      1     1      0    6790
                                             22 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _credit_add                                           1     1      0   16186
                                             29 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                   _Update_cashaudit
 ---------------------------------------------------------------------------------
 (4) _Update_cashaudit                                     1     1      0    9365
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     331
                                             18 COMRAMh    4     3      1
 ---------------------------------------------------------------------------------
 (2) _dispense                                             2     2      0   19713
                                              0 BANK0      2     2      0
                    _DATAEE_ReadByte
                       _update_vends
                      _vend_dispense
                       _vend_nosense
 ---------------------------------------------------------------------------------
 (3) _vend_nosense                                         3     3      0      31
                                             21 COMRAMh    3     3      0
                         _mdb_unlock
 ---------------------------------------------------------------------------------
 (3) _vend_dispense                                        3     3      0   10205
                                             30 COMRAMh    3     3      0
                     _TMR0_StopTimer
                    _disable_channel
                         _mdb_unlock
                      _set_motortime
 ---------------------------------------------------------------------------------
 (4) _set_motortime                                        6     6      0    3189
                                             24 COMRAMh    6     6      0
                    _DATAEE_ReadByte
                    _TMR0_StartTimer
                     _TMR0_StopTimer
               _TMR0_Write16bitTimer
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             18 COMRAMh    6     2      4
 ---------------------------------------------------------------------------------
 (5) _TMR0_Write16bitTimer                                 2     0      2     152
                                             18 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _disable_channel                                      4     4      0    6892
                                             22 COMRAMh    4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _update_vends                                         4     4      0    6858
                                             22 COMRAMh    4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             1     1      0    3716
                                             28 COMRAMh    1     1      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1    3713
                                             25 COMRAMh    3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      62
                                             19 COMRAMh    1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0    2690
                                             23 COMRAMh    2     2      0
                    _init_pricestore
 ---------------------------------------------------------------------------------
 (6) _init_pricestore                                      3     3      0    2591
                                             20 COMRAMh    3     3      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     687
                                             26 COMRAMh    2     2      0
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     523
                                             25 COMRAMh    1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _gsm_init                                             1     1      0      62
                                             20 COMRAMh    1     1      0
                       _EUSART2_Read
                             _gsm_on
                           _gsm_txAT
 ---------------------------------------------------------------------------------
 (2) _gsm_txAT                                             0     0      0      62
                       _gsm_transmit
 ---------------------------------------------------------------------------------
 (3) _gsm_transmit                                         1     1      0      62
                                             19 COMRAMh    1     1      0
                      _EUSART2_Write
                          _gsm_waitx
 ---------------------------------------------------------------------------------
 (4) _gsm_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Write                                        1     1      0      31
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _gsm_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        0     0      0  390352
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                         _Sensor_set
                         _Vend_setup
                            _butindb
                        _hopper_test
                         _lcd_string
                         _mdb_unlock
                          _price_set
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            0     0      0   53280
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         1     1      0   28561
                                             32 COMRAMh    1     1      0
                            _butindb
                       _displ_nendis
                         _lcd_string
                         _save_notes
 ---------------------------------------------------------------------------------
 (4) _save_notes                                           0     0      0    4267
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         2     2      0   12017
                                             30 COMRAMh    2     2      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           2     0      2   12597
                                             30 COMRAMh    2     0      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _price_set                                            0     0      0   34543
                       _Read_Service
                            _butindb
                         _lcd_string
                          _set_price
 ---------------------------------------------------------------------------------
 (3) _set_price                                            4     4      0   22387
                                             32 COMRAMh    2     2      0
                                             12 BANK0      2     2      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                        _displ_price
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _displ_price                                          1     1      0    3280
                                             31 COMRAMh    1     1      0
                          _displ_hex
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (4) _mdb_unlock                                           1     1      0       0
                                             20 COMRAMh    1     1      0
                    _CMP1_Initialize
                    _DAC1_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _hopper_test                                          0     0      0   13697
                         _hopper_pay
 ---------------------------------------------------------------------------------
 (3) _hopper_pay                                           2     2      0   13697
                                             29 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                    _Update_coinsout
                         _cctalk_off
                          _cctalk_on
                           _pay_coin
 ---------------------------------------------------------------------------------
 (4) _pay_coin                                             0     0      0       0
                       _Reset_hopper
                    _TMR2_Initialize
                    _TMR4_Initialize
                         _cctalk_off
                          _cctalk_on
                        _switch_read
 ---------------------------------------------------------------------------------
 (5) _switch_read                                          1     1      0       0
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _Reset_hopper                                         2     2      0       0
                                             18 COMRAMh    2     2      0
                    _TMR4_Initialize
                         _cctalk_off
                          _cctalk_on
 ---------------------------------------------------------------------------------
 (5) _cctalk_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _cctalk_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Update_coinsout                                      1     1      0    9334
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (5) _Write_NVstore                                        6     1      5    5269
                                             22 COMRAMh    6     1      5
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _Vend_setup                                           0     0      0  171160
                          _Chan_link
                       _Clear_Totals
                       _Init_vendmem
                     _Reset_settings
                           _Sens_off
                       _Vend_settime
                            _butindb
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _Vend_settime                                         0     0      0   46595
                       _Read_Service
                       _Vend_timeset
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Vend_timeset                                         4     4      0   34374
                                             12 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                         _displ_time
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_time                                           2     1      1   15143
                                             31 COMRAMh    2     1      1
                          _displ_hex
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Sens_off                                             2     2      0   44588
                                              3 BANK0      2     2      0
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
                           _off_sens
 ---------------------------------------------------------------------------------
 (4) _off_sens                                             3     3      0   32367
                                              0 BANK0      3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                       _displ_sflags
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_sflags                                         3     1      2   13009
                                             30 COMRAMh    3     1      2
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Reset_settings                                       6     6      0   16355
                                             30 COMRAMh    2     2      0
                                              0 BANK0      4     4      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Init_vendmem                                         7     7      0    2758
                                             20 COMRAMh    7     7      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _Clear_Totals                                         2     2      0    4335
                                             22 COMRAMh    2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _Chan_link                                            2     2      0   44407
                                              5 BANK0      2     2      0
                          _Link_chan
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Link_chan                                            5     5      0   32186
                                              0 BANK0      5     5      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _Read_Service
                            _butindb
                       _displ_lflags
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_lflags                                         3     2      1   12949
                                             30 COMRAMh    3     2      1
                        _lcd_dispadd
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Read_Service                                         1     1      0      34
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           1     1      0   31613
                                             33 COMRAMh    1     1      0
                            _butindb
                         _displ_sens
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_sens                                           2     1      1   19364
                                             31 COMRAMh    2     1      1
               _CMP1_GetOutputStatus
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          1     1      0   36641
                                             33 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                     _Update_Hopcoin
                            _butindb
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              4     4      0     170
                                             20 COMRAMh    4     4      0
                              _butin
 ---------------------------------------------------------------------------------
 (3) _Update_Hopcoin                                       2     1      1   19267
                                             31 COMRAMh    2     1      1
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           2     2      0   16219
                                             30 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (6) _DATAEE_WriteByte                                     4     1      3    4267
                                             18 COMRAMh    4     1      3
 ---------------------------------------------------------------------------------
 (2) _Audit                                                3     3      0   21077
                                             31 COMRAMh    3     3      0
               _CMP1_GetOutputStatus
                    _DATAEE_ReadByte
                       _Read_NVstore
                              _butin
                          _displ_hex
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _get_channel                                          1     1      0      65
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _butin                                                2     2      0      68
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _Read_NVstore                                         6     1      5    4034
                                             20 COMRAMh    6     1      5
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0   12562
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     610
                                             25 COMRAMh    3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_nochange                                       0     0      0   12181
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0   16910
                                             31 COMRAMh    1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3   11952
                                             25 COMRAMh    5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (5) _displ_hex                                           15    12      3    2432
                                             28 COMRAMh    3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           1     1      0     424
                                             24 COMRAMh    1     1      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     229
                                             22 COMRAMh    2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     164
                                             20 COMRAMh    2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      68
                                             18 COMRAMh    2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___ltmod                                              7     1      6     412
                                             18 COMRAMh    7     1      6
 ---------------------------------------------------------------------------------
 (6) ___ltdiv                                             10     4      6     421
                                             18 COMRAMh   10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0    2492
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (7) _DATAEE_ReadByte                                      2     0      2    2492
                                             18 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (5) _TMR5_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0       0
                                              0 COMRAMh   18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (13) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _DATAEE_ReadByte
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
   _butin
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _Update_cashaudit
       _Read_NVstore
         _DATAEE_ReadByte
       _Write_NVstore
         _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_nochange
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_price
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _enter_service
     _Audit
       _CMP1_GetOutputStatus
       _DATAEE_ReadByte
       _Read_NVstore
         _DATAEE_ReadByte
       _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _get_channel
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Clear_cred
       _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Hopper_coin
       _DATAEE_ReadByte
       _Update_Hopcoin
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Sensor_set
       _butindb
         _butin
       _displ_sens
         _CMP1_GetOutputStatus
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Vend_setup
       _Chan_link
         _Link_chan
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _Read_Service
           _butindb
             _butin
           _displ_lflags
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Clear_Totals
         _DATAEE_WriteByte
       _Init_vendmem
         _DATAEE_ReadByte
       _Reset_settings
         _DATAEE_WriteByte
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Sens_off
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _off_sens
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_sflags
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
       _Vend_settime
         _Read_Service
         _Vend_timeset
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_time
             _displ_hex
               ___ltdiv
               ___ltmod
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _butindb
       _butin
     _hopper_test
       _hopper_pay
         _DATAEE_WriteByte
         _Update_coinsout
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
         _cctalk_off
         _cctalk_on
         _pay_coin
           _Reset_hopper
             _TMR4_Initialize
             _cctalk_off
             _cctalk_on
           _TMR2_Initialize
           _TMR4_Initialize
           _cctalk_off
           _cctalk_on
           _switch_read
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_unlock
       _CMP1_Initialize
       _DAC1_Initialize
       _TMR1_Initialize
       _TMR3_Initialize
       _TMR5_Initialize
     _price_set
       _Read_Service
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _set_price
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _butindb
           _butin
         _displ_price
           _displ_hex
             ___ltdiv
             ___ltmod
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _save_notes
           _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _get_channel
   _gsm_init
     _EUSART2_Read
     _gsm_on
     _gsm_txAT
       _gsm_transmit
         _EUSART2_Write
         _gsm_waitx
   _lcd_init
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
         _init_pricestore
           _DATAEE_ReadByte
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
         _init_pricestore
           _DATAEE_ReadByte
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
         _init_pricestore
           _DATAEE_ReadByte
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
         _init_pricestore
           _DATAEE_ReadByte
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _price_check
     _DATAEE_ReadByte
     _butin
     _credit_check
       _DATAEE_ReadByte
     _credit_subtract
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _dispense
       _DATAEE_ReadByte
       _update_vends
         _DATAEE_ReadByte
         _DATAEE_WriteByte
       _vend_dispense
         _TMR0_StopTimer
         _disable_channel
           _DATAEE_ReadByte
           _DATAEE_WriteByte
         _mdb_unlock
           _CMP1_Initialize
           _DAC1_Initialize
           _TMR1_Initialize
           _TMR3_Initialize
           _TMR5_Initialize
         _set_motortime
           _DATAEE_ReadByte
           _TMR0_StartTimer
           _TMR0_StopTimer
           _TMR0_Write16bitTimer
           ___wmul
       _vend_nosense
         _mdb_unlock
           _CMP1_Initialize
           _DAC1_Initialize
           _TMR1_Initialize
           _TMR3_Initialize
           _TMR5_Initialize
     _get_channel
     _give_change
       _DATAEE_ReadByte
       ___lbdiv
       _credit_add
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _Update_cashaudit
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
       _credit_subtract
         _DATAEE_ReadByte
         _DATAEE_WriteByte
       _hopper_pay
         _DATAEE_WriteByte
         _Update_coinsout
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
         _cctalk_off
         _cctalk_on
         _pay_coin
           _Reset_hopper
             _TMR4_Initialize
             _cctalk_off
             _cctalk_on
           _TMR2_Initialize
           _TMR4_Initialize
           _cctalk_off
           _cctalk_on
           _switch_read
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _note_disable
       _mdb_noten
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
             _init_pricestore
               _DATAEE_ReadByte
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
   _vend_init
     _DAC1_SetOutput
     _DATAEE_ReadByte
     _Init_vendmem
       _DATAEE_ReadByte
     _credit_check
       _DATAEE_ReadByte
     _find_highprice
     _find_lowprice
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
             _init_pricestore
               _DATAEE_ReadByte
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
             _init_pricestore
               _DATAEE_ReadByte
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
           _init_pricestore
             _DATAEE_ReadByte
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
             _init_pricestore
               _DATAEE_ReadByte
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            E7D      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      33        0.0%
BANK13             100      0       0      34        0.0%
BITBANK12          100      0       0      31        0.0%
BANK12             100      0       0      32        0.0%
BITBANK11          100      0       0      29        0.0%
BANK11             100      0       0      30        0.0%
BITBANK10          100      0       0      27        0.0%
BANK10             100      0       0      28        0.0%
BITBANK9           100      0       0      24        0.0%
BANK9              100      0       0      25        0.0%
BITBANK8           100      0       0      22        0.0%
BANK8              100      0       0      23        0.0%
BITBANK7           100      0       0      20        0.0%
BANK7              100      0       0      21        0.0%
BITBANK6           100      0       0      18        0.0%
BANK6              100      0       0      19        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       9        0.0%
BITBANK0            A0      0       0       6        0.0%
BANK0               A0     13      6F       7       69.4%
BITBANK14           88      0       0      35        0.0%
BANK14              88      0       0      36        0.0%
COMRAMh             55     22      43       2       78.8%
BITCOMRAMh          55      0       0       0        0.0%
BIGRAMl              2      0       0      38        0.0%
BITCOMRAMl           1      0       0       1        0.0%
COMRAMl              1      0       1       3      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3      26        0.0%
DATA                 0      0      B3       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Sep 28 14:18:23 2018

                       lcd_writeC@lcdata 0023                   __end_of_displ_nochange 288A  
                   __end_of_Clear_Totals 2628                   disable_channel@channel 0023  
                      ??_disable_channel 0021                             _update_vends 2090  
                           ?_displ_price 0000                              __CFG_CP$OFF 000000  
                      ??_CMP1_Initialize 001D                                       l95 2BC0  
                          ?_displ_credit 0000                      ___wmul@multiplicand 001F  
                        ??_vend_dispense 0029                            ?_displ_lflags 0029  
                          ?_displ_nendis 000B                            ?_displ_sflags 0029  
                        lcd_write@lcdata 0020                            ?_displ_noteer 0000  
                            __CFG_LVP$ON 000000                                      LATE 000F87  
                        _DAC1_Initialize 2C38                                      l251 26C6  
                                    l612 2BD2                                      _PR2 000FBC  
                                    _PR4 000FB6                             __CFG_CPD$OFF 000000  
                        _timer1ReloadVal 00CB                  __size_of_PMD_Initialize 001C  
                        _TMR2_Initialize 2A5E                                      prod 000FF3  
                                    wreg 000FE8                         ??_Update_Hopcoin 002B  
                         _DAC1_SetOutput 2C58                             ?_give_change 000B  
                         ??_credit_check 001F                              main@channel 00C4  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                          ?_mdb_security 0000                                     l1100 03C2  
                                   l1110 044A                                     l1102 03C8  
                                   l1120 16B4                                     l1121 167C  
                                   l1105 03FA                                     l1122 16EC  
                                   l1130 16AE                                     l1106 040C  
                                   l1123 1682                                     l1124 1688  
                                   l1125 168E                                     l1109 048C  
                                   l1126 1694                                     l1127 169C  
                                   l1119 1674                                     l1128 16A2  
                                   l1129 16A8                                     l1090 039E  
                                   l2211 01B4                                     l1083 0346  
                                   l2300 08AE                                     l1092 03F4  
                                   l1093 03EA                                     l2206 00D2  
                                   l2222 113A                                     l2150 1336  
                                   l1094 03CE                                     l2207 0186  
                                   l2223 10C2                                     l2151 1312  
                                   l1095 03B6                                     l1087 038C  
                                   l2224 1108                                     l2216 2618  
                                   l2160 0E26                                     l2209 015E  
                                   l2233 1B84                                     l2241 1B74  
                                   l2225 10CA                                     l2217 2604  
                                   l2153 137E                                     l2161 0EAE  
                                   l1097 03BC                                     l1610 0946  
                                   l2234 1B5C                                     l2226 111C  
                                   l2154 1342                                     l2314 0616  
                                   l2306 2364                                     l1603 094E  
                                   l2227 10D6                                     l2315 06BC  
                                   l2307 237A                          _timer3ReloadVal 00C9  
                                   l1620 09C6                                     l1604 091E  
                                   l2172 284C                                     l2244 1B80  
                                   l2228 10E2                                     l2252 0FEA  
                                   l2316 061E                                     l2308 2384  
                                   l1613 09CE                                     l1605 0984  
                                   l2173 2828                                     l2237 1B9A  
                                   l2253 1040                                     l2333 0F00  
                                   l2325 1F90                                     l2317 06D0  
                                   l2181 213E                                     l1630 141E  
                                   l1614 099E                                     l1606 0926  
                                   l2238 1B66                                     l2254 0FF2  
                                   l2326 1FC0                                     l2350 1CD4  
                                   l2318 065C                                     l2166 2776  
                                   l1631 1404                                     l1607 092E  
                                   l2239 1B70                                     l2255 1054  
                                   l2335 0F22                                     l2327 1FCA  
                                   l2319 069A                                     l2167 2750  
                                   l2159 0E24                                     l1640 1528  
                                   l1616 09A6                                     l1608 0936  
                                   l2192 25B8                                     l2256 1008  
                                   l2360 0B82                                     l1617 09AE  
                                   l1609 093E                                     l2257 101E  
                                   l2337 0F84                                     l2361 0BBC  
                                   l2345 1C7E                                     l2281 071A  
                                   l1618 09B6                                     l2274 2A8C  
                                   l2194 25CA                                     l1570 1D72  
                                   l2258 1064                                     l2338 0F64  
                                   l2370 0D70                                     l2282 07D2  
                                   l1651 1F56                                     l1627 13F8  
                                   l1619 09BE                                     l2275 2A84  
                                   l2195 25C4                                     l1571 1D82  
                                   l2283 0724                                     l2267 1C1E  
                                   l1652 1F14                                     l1628 139A  
                                   l2356 0B3E                                     l2348 1CB4  
                                   l2292 0810                                     l2284 07E8  
                                   l2268 1C30                                     l1653 1F6A  
                                   l1637 151A                                     l2357 0BDE  
                                   l2349 1CCA                                     l2293 08D4  
                                   l2285 075A                                     l2269 1C3A  
                                   l1654 1F2A                                     l1638 1522  
                                   l2366 0D38                                     l1582 14CE  
                                   l2358 0B46                                     l2294 0818  
                                   l2286 0792                                     l1663 28FC  
                                   l1655 1F40                                     l1639 1578  
                                   l1575 19BC                                     l2367 0D22  
                                   l2359 0BF2                                     l2295 08FA  
                                   l1576 199C                                     l2296 083C  
                                   l1577 19B4                                     l2369 0D86  
                                   l2297 0860                                     l1593 28DE  
                                   l2298 0884                                     l2299 088A  
                                   l4500 2390                                     l1669 2B62  
                                   l2911 0CE4                                     l2920 0C96  
                                   l2912 0C1C                                     l4440 01E0  
                                   l2904 1A6A                                     l2913 0CB8  
                                   l4441 0212                                     l2905 1A50  
                                   l5330 1E52                                     l2930 1D4E  
                                   l2914 0C28                                     l4450 0306  
                                   l4442 01EC                                     l2931 1D00  
                                   l2915 0CDE                                     l4451 0326  
                                   l4443 020A                                     l5340 225A  
                                   l2932 1D14                                     l2916 0C3E  
                                   l5333 1E86                                     l2917 0C54  
                                   l4445 0226                                     l5334 1E92  
                                   l2918 0C6A                                     l4446 0276  
                                   l4438 01D0                                     l5343 2284  
                                   l2927 1CE6                                     l2919 0C80  
                                   l4471 1B38                                     l4455 2328  
                                   l4447 0272                                     l5344 2290  
                                   l2928 1D3A                                     l2952 04F8  
                                   l4464 1B14                                     l4456 2330  
                                   l5280 267C                                     l2944 246E  
                                   l4448 032E                                     l5329 1E5C  
                                   l2929 1CEE                                     l2953 04C6  
                                   l4465 1B08                                     l5281 2676  
                                   l4449 02B4                                     l2962 055E  
                                   l2970 053C                                     l4482 2562  
                                   l4490 24F4                                     l5339 2264  
                                   l2971 0540                                     l2963 051A  
                                   l2955 04CE                                     l4483 2534  
                                   l4491 2520                                     l2972 0544  
                                   l2964 0522                                     l2956 04D6  
                                   l5284 2692                                     l4484 2560  
                                   l2981 0A5A                                     l2973 0548  
                                   l2965 05B2                                     l2957 04DE  
                                   l5285 269A                                     l2982 0A2A  
                                   l2974 054C                                     l2966 0526  
                                   l2958 04E6                                     l2895 29C8  
                                   l2975 0550                                     l2967 052A  
                                   l2959 04EE                                     l2896 29B2  
                                   l2976 0554                                     l2968 0534  
                                   l3961 18C2                                     l2985 0A82  
                                   l2977 0558                                     l2969 0538  
                                   l4489 2522                                     l3954 2660  
                                   l3970 18EA                                     l3938 2B9A  
                                   l2994 0AFC                                     l2986 0AB6  
                                   l3947 1E22                                     l4499 23CC  
                                   l2987 0A8C                                     l3972 1902  
                                   l3948 1DD4                                     l3965 18DC  
                                   l3949 1E1E                                     l3975 1918  
                                   l3959 18E0                                     l3984 22CE  
                                   l3985 22DE                                     l3986 22E8  
                                   l4938 2998                                     l3979 1936  
                                   l4939 2984                                     STR_1 FFFA  
                                   STR_2 FFFA                                     _LATA 000F83  
                                   _LATB 000F84                                     _LATC 000F85  
                                   _LATD 000F86                                     _LATE 000F87  
                                   u4200 2C26                                     _T2PR 000FBC  
                                   u4150 22A6                                     u4160 22B2  
                                   u4152 22A8                                     u4320 0A60  
                                   u4162 22B4                                     _T4PR 000FB6  
                                   u4430 18D2                                     u4350 0AC0  
                                   u4335 0AAE                                     u4600 1B6C  
                                   u4280 0F8E                                     u4337 0AB0  
                                   u4370 0ACA                                     u4514 1FE6  
                                   u4515 1FE2                                     u5180 15D4  
                                   _PMD0 000EE1                                     _PMD1 000EE2  
                                   u3910 2268                                     _PMD2 000EE3  
                                   _PMD3 000EE4                                     _PMD4 000EE5  
                                   u4385 0AD4                                     _PMD5 000EE6  
                                   u4490 1928                                     u4387 0AD6  
                                   u4580 2624                                     u4900 2680  
                                   u4814 2166                                     u4815 2162  
                                   u3880 1E60                                     u4840 1B20  
                                   u4824 1AF8                                     u4825 1AF4  
                                   u3955 26D4                                     u5707 218A  
                                   u3956 26D6                                     u5717 15C6  
                                   u4870 1B44                                     u5807 0DCC  
                                   u5727 15D6                                     u5817 1FB2  
                                   u5737 1640                                     u5827 2AD8  
                                   u5747 298E                                     u5837 25DA  
                                   u5757 1146                                     u5847 177A  
                                   u5767 22C4                                     u5857 23DE  
                                   u5777 22D4                                     u5697 1EAA  
                                   u5867 2402                                     u5787 263A  
                                   u5797 1C6A                                     _TMR2 000FBB  
                                   _TMR4 000FB5            __size_of_eusartmdb_Initialize 0016  
                            _totalvendsm FFEB                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                          _EUSART1_Write 2BE4                            __CFG_FCMEN$ON 000000  
                          _EUSART2_Write 2C0E                                     _cash 0039  
                                   _dest 00AB                                     _main 0336  
                                   _exit FBDE                            ?_EUSART1_Read 000B  
                        _TMR0_StartTimer 2C96                            ?_mdb_transmit 0000  
                          ?_EUSART2_Read 000B                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 004F                                     prodh 000FF4  
                                   prodl 000FF3                                     start 00AA  
                        _timer5ReloadVal 00C7                     __end_of_chanresetmsg FEB3  
                             _Clear_cred 16F2                          _TMR3_Initialize 27B6  
               disable_channel@errormask 0024                   __size_of_enter_service 00A2  
                          __CFG_CSWEN$ON 000000                        ??_init_pricestore 001F  
                           ___param_bank 000000                          ?_displ_nochange 0000  
                          __CFG_SCANE$ON 000000                              _switch_read 229E  
                         ??_displ_credit 002A                __size_of_DATAEE_WriteByte 003A  
                     vend_nosense@chanel 0022                           ??_displ_lflags 002A  
                __end_of_TMR0_Initialize 297E                           ??_displ_nendis 0029  
                         ??_displ_sflags 002B           __size_of_OSCILLATOR_Initialize 0018  
                         ??_displ_noteer 0029                            ?_Read_NVstore 001F  
          __end_of_OSCILLATOR_Initialize 2B30                                    l10418 2BE6  
                                  l10728 2C10                                    l11894 15B2  
                                  ?_main 000B                          __end_of___lbdiv 269E  
                          __CFG_WDTE$OFF 000000                                    _T1CLK 000FD2  
                                  _T1CON 000FCF                                    _T3CLK 000FCC  
                                  _T2CON 000FBD                                    _LATA6 007C1E  
                                  _T3CON 000FC9                                    _LATA7 007C1F  
                                  _CMOUT 000F3D                                    _T5CLK 000FC6  
                                  _T4CON 000FB7                                    _T2HLT 000FBE  
                                  _T5CON 000FC3                          __end_of___ltdiv 1EA0  
                                  _T4HLT 000FB8                           __CFG_DEBUG$OFF 000000  
                        __end_of___ltmod 229E                                    _T2TMR 000FBB  
                                  _T2RST 000FC0                                    _T4TMR 000FB5  
                                  _T4RST 000FBA                   __end_of_DAC1_SetOutput 2C60  
                                  i2l195 005E                      price_check@savechan 00B6  
                                  _OSCEN 000EDC                   __size_of_Write_NVstore 0036  
                                  _TMR0H 000FD4                                    _TMR1H 000FCE  
                        __end_of_cc_poll FC25                                    _TMR0L 000FD3  
                                  _TMR1L 000FCD                                    _TMR3H 000FC8  
                                  _TMR3L 000FC7                                    _TMR5H 000FC2  
                                  _TMR5L 000FC1                          ??_find_lowprice 001D  
                                  _PORTA 000F8D                          __end_of_cc_test FC30  
                                  _PORTD 000F90                          __end_of_cc_stop FC2B  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                          __end_of_chanmsg FF72  
                          ?_Read_Service 000B                          __end_of_cashint FC17  
                        __end_of_cashinv FC1B                       off_sens@senseflags 00B4  
                                  _Audit 0000                            __CFG_WRT0$OFF 000000  
                        _TMR4_Initialize 2A98                            __CFG_WRT1$OFF 000000  
                         __pidataCOMRAMh 2CAB                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                          __end_of_enabled FFB1  
                         __CFG_EBTR0$OFF 000000                        lcd_write@savelatd 001F  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                          __end_of_credclr FB43  
                         __CFG_EBTR4$OFF 000000                          __end_of_credmem FC1D  
                         __CFG_EBTR5$OFF 000000                          __end_of_credits FF66  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                        __end_of_clrline FF18                          __end_of_dispclr FC55  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                        __end_of_dispoff FC4E                            __CFG_WRTD$OFF 000000  
                          ??_Hopper_coin 002C                                    _bflag 0047  
                        _DATAEE_ReadByte 2B00                           __CFG_EBTRB$OFF 000000  
                         ??_mdb_security 0027                  __end_of_PIN_MANAGER_IOC 2C92  
                        __end_of_butindb 25EA                          __end_of_dsphome FC53  
                                  _line1 FC4A                                    _line2 FC49  
                                  _line3 FC48                                    _line4 FC47  
                                  _count 00CD                                    _butin 23D4  
                        __end_of_mastadd FC32                                    _dummy 0087  
                        __end_of_hopcoin FC0B                          __end_of_inithop FBAC  
                                  _vcash 00A2                          __end_of_inscoin FE4D  
                                  _onmsg FFF6                       __CFG_MCLRE$EXTMCLR 000000  
                        __end_of_linkmsg FF7E                          __end_of_second1 FC23  
                        find_highprice@i 001E                           ?_EUSART1_Write 000B  
                __end_of_TMR1_Initialize 2822                            ?_Init_vendmem 000B  
                         ?_EUSART2_Write 000B                                    pclath 000FFA  
                                  tablat 000FF5                          __end_of_noteerr FEEE  
                           ?_hopper_test 0000                          __end_of_tenrand FFBA  
                        __end_of_sensmsg FF89                          __end_of_sensval FC0F  
                        __end_of_timemsg FF2A                          __end_of_servmsg FCA9  
                         ??_EUSART1_Read 001D                           ??_mdb_transmit 001E  
                         ??_EUSART2_Read 001D                                    status 000FD8  
                                  wtemp6 0050                        ??_Update_coinsout 0027  
                        ___lbdiv@divisor 001D                          ___lbdiv@counter 001F  
                         _Reset_settings 0CEA                          _TMR5_Initialize 2780  
           __end_of_CMP1_GetOutputStatus 2C2A                          __initialization 241E  
                      set_motortime@time 0027                         ??_find_highprice 001D  
                            butin@butons 001E               __end_of_EUSART1_Initialize 2B8A  
                           __end_of_main 0496                  __end_of_DAC1_Initialize 2C44  
                           __end_of_exit FBE3                       __size_of_Chan_link 0062  
                    displ_time@motortime 002B                  __end_of_TMR2_Initialize 2A7C  
                         ??_Read_NVstore 0024                                   ??_main 00C2  
                         find_lowprice@i 001E                            __activetblptr 000003  
                        ?_DAC1_SetOutput 000B                     __end_of_enable_notes 1D54  
                         ??_Read_Service 001D                              butindb@butt 0022  
                       __end_of_Sens_off 1CDA                                   ?_Audit 0000  
                          _enter_service 1650                  __end_of_TMR0_StartTimer 2C9A  
             __end_of_EUSART2_Initialize 2B48                                   ?_butin 0000  
                                 _CM1NCH 000F3B                                   _CM1PCH 000F3C  
                         ??_Init_vendmem 001F                                   _ANSELA 000F11  
                                 _ANSELB 000F19                                   _ANSELC 000F21  
                                 _ANSELD 000F26                                   _ANSELE 000F2E  
                                 _T0CON0 000FD5                                   _T0CON1 000FD6  
                                 _T1GATE 000FD1                                   _T1GCON 000FD0  
                                 _T3GATE 000FCB                                   _T3GCON 000FCA  
                                 _T5GATE 000FC5                                   _T5GCON 000FC4  
                                 _RC1REG 000F99                                   _RC2REG 000E99  
                                 _RC1STA 000F9D                                   _RC2STA 000E9D  
                                 _RB5PPS 000EF4                                   _ODCONA 000F0F  
                                 _ODCONB 000F17                                   _ODCONC 000F1F  
                                 _RC6PPS 000EFD                                   _ODCOND 000F24  
                                 _ODCONE 000F2C                 __size_of_credit_subtract 0056  
                       credit_add@credit 0028                  __end_of_TMR3_Initialize 27EC  
                         __CFG_WDTCCS$SC 000000                                   _TABLAT 000FF5  
                          ?_init_mdbdata 000B                         __end_of_cc_level FC2A  
                                 _OSCFRQ 000EDE                                   _NVMDAT 000F80  
                       __end_of_cc_reset FC31                                   _TX1REG 000F9A  
                                 _TX2REG 000E9A                                   _TX1STA 000F9E  
                                 _TX2STA 000E9E                      __end_of_Hopper_coin 1140  
                 __end_of_Reset_settings 0DDC                    __size_of_Clear_Totals 003E  
                          _Write_NVstore 274A                       __size_of_Link_chan 00D8  
                       __end_of_cashoutv FC0D                              ?_Clear_cred 0000  
                         __CFG_PWRTE$OFF 000000             __end_of_TMR0_Write16bitTimer 2C58  
                DAC1_SetOutput@inputData 001D                     __size_of_get_channel 001C  
                         __CFG_XINST$OFF 000000                            ?_gsm_transmit 000B  
                       __end_of_disabled FFA7                     __size_of_lcd_dispadd 0018  
                       __end_of_auditmsg FBD6                         __end_of_dispaddr FC54  
                       __end_of_lcd_init 1650                         __end_of_lcd_test 2B74  
                       __end_of_mdb_comm 0B04                         __end_of_dispense 233C  
                       __end_of_mdb_init 1F08                         __end_of_mdb_poll 05B8  
                   __end_of_credit_check 2A3E                                   _cc_pay FC2C  
                                 _cc_pin FC28                                   ___wmul 29D4  
                                 _dacmsg FF4C                                ??___lbdiv 001E  
                           ?_price_check 0000                           __CFG_STVREN$ON 000000  
                                 _change 003C                        ?_Update_cashaudit 000B  
                             _Sensor_set 0F94                            displ_nendis@x 002A  
                           give_change@i 002B                                ??___ltdiv 0023  
                              ??___ltmod 0023                          mdb_reset@i_3986 0029  
                                 _credit 003A                                   _lcdata 0046  
                                 _clrmsg FF93                                   _dispon FC55  
                                 _mdb_on 2C9A                                   _dispsl FC4B  
                             _Vend_setup 07EE                                   _dispsr FC4C  
                                 _ercode 0044                         __end_of_emptymsg FFC3  
                                 _hexnum 009D                                   _hopadd FC32  
                       __end_of_gsm_init 29AA                         __end_of_gsm_txAT 2C00  
                                 _gsm_on 2C9E                         __end_of_off_sens 0BF8  
                       ?_TMR0_Initialize 0000                  __end_of_TMR4_Initialize 2AB4  
                                 _mcount 0042                                   _offmsg FFF2  
                                 clear_0 2448                                   clear_1 2454  
                     ??_Update_cashaudit 0027                         __end_of_hoperror FBE5  
                       __end_of_hoppcoin FDD4                         __end_of_initnote FE72  
                                 _nvcash 0097                                   _noteen 003E  
                                 _senset FBAC                                   _pvcash 004B  
                       __end_of_pay_coin 193A                                   _slvadd 00AE  
                       __end_of_nochange FE93                     __size_of_displ_price 0040  
                                 _stradd 0045                                   _tvends 008F  
                      read_busy@savelatd 001E                        read_busy@savelate 001D  
                __end_of_DATAEE_ReadByte 2B18                         __end_of_second_5 FC21  
                              ??_butindb 001F                           _PMD_Initialize 2AB4  
                         ?_enter_service 0000                         __end_of_notebits FC11  
                       __end_of_pricemsg FBDE                         __end_of_notetest FBC9  
                           __mediumconst FA74                         __end_of_setnotes FCEE  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                       __end_of_vendtest FB82                                   tblptru 000FF8  
                   Update_Hopcoin@newval 002B                         __end_of_setupmsg FC24  
                        ??_EUSART1_Write 001D                             _Clear_Totals 25EA  
                        ??_EUSART2_Write 001D                         ?_PIN_MANAGER_IOC 000B  
                       __end_of_totalmsg FFCB                        __end_of_Chan_link 1FD0  
                       ___lbdiv@dividend 001E                     __size_of_give_change 0054  
          __size_of_INTERRUPT_Initialize 0008                           ??_init_mdbdata 0022  
                   __end_of_displ_credit 28BE                         ?_TMR1_Initialize 0000  
                __end_of_TMR5_Initialize 27B6                     __end_of_displ_lflags 19C4  
                      displ_lflags@lchan 002B         ??_INTERRUPT_InterruptManagerHigh 000B  
        ?_INTERRUPT_InterruptManagerHigh 000B                        _SYSTEM_Initialize 26D8  
                        _disable_channel 1FD0                     __end_of_displ_nendis 28F0  
                    Vend_timeset@channel 00C1                               __accesstop 0060  
                __end_of__initialization 245C                     __end_of_displ_sflags 14F0  
                   __end_of_displ_noteer 2950               Reset_settings@chanlinkbits 00B2  
                         ?_Write_NVstore 0021                    __end_of_note_features FC40  
                        _CMP1_Initialize 2B9E                          ?_Reset_settings 0000  
                     ?_SYSTEM_Initialize 000B                    __end_of_theft_attempt FC34  
                           __pbssCOMRAMh 002D                            ___rparam_used 000001  
                           __pbssCOMRAMl 004E                    Clear_Totals@eeaddress 0021  
                         ??_gsm_transmit 001E                            __end_of_Audit 01BA  
             Reset_settings@chantimebits 00B4                             __pidataBANK0 2CAA  
                    ??_SYSTEM_Initialize 001F                         ?_DAC1_Initialize 0000  
                   __end_of_mdb_security 2A5E                         _DATAEE_WriteByte 269E  
                          __end_of_line1 FC4B                            __end_of_line2 FC4A  
                          __end_of_line3 FC49                            __end_of_line4 FC48  
                          __end_of_butin 241E                            __end_of_onmsg FFFA  
                  __end_of_note_rejected FC35                         ?_TMR2_Initialize 0000  
                     __size_of_cctalk_on 0004                         ___lbdiv@quotient 0020  
                  __end_of_note_security FC45                   __end_of_PMD_Initialize 2AD0  
                   __end_of_EUSART1_Read 2BC4                     __end_of_mdb_transmit 2BE4  
                   __end_of_EUSART2_Read 2BD6                               _cc_countrq FC2B  
                      __end_of_Link_chan 0F94                             _chanresetmsg FE93  
                                ??_Audit 002A                      __size_of_Clear_cred 0096  
                          update_vends@x 0023                     _CMP1_GetOutputStatus 2C1C  
                         Write_NVstore@i 0026                       __size_of_displ_hex 00B6  
                  __end_of_set_motortime 181C                              _Hopper_coin 106A  
                       ?_TMR0_StartTimer 000B                       __size_of_lcd_write 0032  
                                ??_butin 001D                __end_of_SYSTEM_Initialize 2712  
                     __size_of_mdb_reset 0086                       __size_of_mdb_noten 0042  
                     __size_of_mdb_waitr 0006                       __size_of_mdb_waitx 0006  
                          ?_Reset_hopper 000B                          _init_pricestore 238A  
                             __pbssBANK0 0060                      displ_hex@hexnumsave 00BA  
                       ?_TMR3_Initialize 0000                     __end_of_Read_NVstore 2856  
                   displ_price@vendprice 002A                         ??_displ_nochange 0029  
                          _chan1linkbits FC07                     __size_of_hopper_test 0014  
                             _cctalk_off 2CA6                       __size_of_gsm_waitx 0008  
                          _chan2linkbits FC05                       __size_of_read_busy 0042  
                   __end_of_Read_Service 2AE8                        ??_credit_subtract 0021  
                          _chan3linkbits FC03                                ?_Sens_off 0000  
                          _chan4linkbits FC01                  __size_of_TMR0_StopTimer 0004  
                           ?_switch_read 0000                                  ?___wmul 001D  
                          _chan5linkbits FBFF                              ?_Sensor_set 0000  
           __end_of_eusartmdb_Initialize 2B5E                              ?_Vend_setup 0000  
                          _chan6linkbits FBFD                    __size_of_enable_notes 007A  
                                ?_mdb_on 0000                                  _CM1CON0 000F39  
                                _CM1CON1 000F3A                     __end_of_Init_vendmem 1386  
                                ?_gsm_on 0000                            _chan7linkbits FBFB  
                       ?_TMR4_Initialize 0000                          ?_PMD_Initialize 0000  
                          _chan8linkbits FBF9                          ??_enter_service 002D  
                     __size_of_set_price 0118                       __size_of_set_notes 00F2  
                  __end_of_vend_dispense 1B58                       __size_of_price_set 0080  
                       ?_DATAEE_ReadByte 001D                       __size_of_vend_init 00E0  
                  displ_nendis@note2disp 0029                               _credit_add 20EC  
                      __end_of_cc_adpoll FC26                               _lcd_clockE 2C2A  
                             _lcd_clockH 2C70                               _lcd_clockL 2C68  
                      __end_of_cc_enable FC2F                                  _SP1BRGH 000F9C  
                                _SP1BRGL 000F9B                                  _SP2BRGH 000E9C  
                                _SP2BRGL 000E9B                               _lcdaddress 00AF  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                        _Update_coinsout 2030                  __end_of_disable_channel 2030  
                                _TBLPTRH 000FF7                     _TMR0_Write16bitTimer 2C4E  
                      __end_of_chan1time FBF7                                  _TBLPTRL 000FF6  
                                _TBLPTRU 000FF8                        __end_of_chan2time FBF5  
                  ?_CMP1_GetOutputStatus 000B                        __end_of_chan3time FBF3  
                      __end_of_chan4time FBF1                          off_sens@chanbit 00B3  
                      __end_of_chan5time FBEF                        __end_of_chan6time FBED  
                                _NVMADRH 000F7F                          off_sens@channel 00B2  
                                _NVMADRL 000F7E                               _jammed_err FC3A  
                      __end_of_chan7time FBEB                                  _OSCTUNE 000EDD  
                      __end_of_chan8time FBE9                                  _NVMCON2 000F82  
                      __end_of_cc_newpin FC28                        __end_of_cc_serial FC27  
                             _displ_code 0900                                  _PPSLOCK 000EA0  
                             _displ_note 2712                               _displ_sens 1D54  
                             _displ_time 181C                  __end_of_CMP1_Initialize 2BB2  
                         ??_Reset_hopper 001D                        __end_of_cc_status FC2E  
                             _lcd_string 14F0                               _dispcursor FC50  
                             _lcd_writeC 1F08                                ?_lcd_init 0000  
                          ?_Vend_timeset 0000                            ?_Vend_settime 0000  
                              ?_lcd_test 0000                                ?_dispense 0000  
                              ?_mdb_comm 0024                                ?_mdb_init 0000  
                             _dispshleft FC4E                               _dispnormal FC51  
                              ?_mdb_poll 0000                          ??_Write_NVstore 0026  
                             _mdb_unlock 1140                        __end_of_chanlinkm FDA1  
                      __end_of_cashinmsg FF93                         ?_TMR5_Initialize 0000  
                      __end_of_cctalk_on 2CA6                     DATAEE_WriteByte@bAdd 001D  
                              ?_gsm_init 0000                                ?_gsm_txAT 0000  
                              ?_off_sens 0000                           displ_hex@value 00B2  
                     give_change@paycash 002A                    __size_of_credit_check 0022  
                              ?_pay_coin 0000                         hopper_pay@change 0029  
                           _enable_notes 1CDA                            ?_note_disable 000B  
                                __Hparam 0000                           dispense@chanel 00B3  
                                __Lparam 0000                               ??_Sens_off 00B5  
                       init_pricestore@i 0021               __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                      __end_of_creditclr FF4C                           mdb_comm@mcount 0024  
                      __end_of_displ_hex 143C                        __end_of_dispfunc1 FC59  
                      __end_of_dispfunc2 FC58                        __end_of_dispfunc3 FC57  
                                ___lbdiv 2664                        __end_of_lcd_write 2922  
                      __end_of_fiftyrand FFE3                          __size_of___wmul 0026  
                         mdb_comm@slvadd 0025                                  ___ltdiv 1E36  
                      __end_of_mdb_reset 1AD2                        __end_of_mdb_noten 24A8  
                                ___ltmod 224A                        __end_of_mdb_waitr 2C86  
                       ??_DAC1_SetOutput 001D                        __end_of_mdb_waitx 2C8C  
                                _cc_poll FC24                                  _cc_test FC2F  
                                _cc_stop FC2A                          __size_of_mdb_on 0004  
                                _dbcount 00A4                         set_price@channel 00BF  
                                _channel 0030                                  __pcinit 241E  
                                _chanmsg FF66                                  _cashint FC15  
                   __end_of_init_mdbdata 29D4                                  _cashinv FC19  
                        __size_of_gsm_on 0004                     __size_of_price_check 017C  
                                __ramtop 0F00                                  _chkbyte 0040  
                             _hopercount 00CE                                  _enabled FFA7  
                             _errorflags 00AD                                  __ptext0 0336  
                                __ptext1 0DDC                                  __ptext2 1EA0  
                                __ptext3 2A3E                                  __ptext4 1A4C  
                                __ptext5 2B48                                  __ptext6 24EA  
                                __ptext7 252A                                  __ptext8 2C58  
                                __ptext9 01BA                                  _credclr FB19  
                                _credmem FC1B                                  _credits FF59  
                                _command 00A9                                  _clrline FF03  
                                _dispclr FC54                                  _dispoff FC4D  
                                _mdbdata 0060                                  _lcdfunc 00B1  
                                _lcdline 00B0                                _T1CONbits 000FCF  
                             _hopper_pay 1DC8                                  _butindb 25AA  
                                _dsphome FC52                    _OSCILLATOR_Initialize 2B18  
                              _T2CONbits 000FBD                                  _mastadd FC31  
                                _hopcoin FC09                         set_price@buttons 00BE  
                                _buttons 0038                  __end_of_init_pricestore 23D4  
                                _inithop FB98                                  _gsmbyte 00A6  
                              _T3CONbits 000FC9                                  _inscoin FE26  
                      __end_of_gsm_waitx 2C68                                  _linkmsg FF72  
                              _CMOUTbits 000F3D                        __end_of_read_busy 24EA  
                                _second1 FC21                                _T4CONbits 000FB7  
                  ?_TMR0_Write16bitTimer 001D                       _EUSART1_Initialize 2B74  
               ??_PIN_MANAGER_Initialize 001D                                _T2HLTbits 000FBE  
                   __end_of_gsm_transmit 2C0E                    __size_of_displ_credit 0034  
                              _T5CONbits 000FC3                                  _nobytes 00AA  
                  __end_of_find_lowprice 252A                                  _senschk 00A8  
                                _noteerr FED2                    __size_of_displ_lflags 008A  
                                _tenrand FFB1                                  _notenum 004D  
                                _sensmsg FF7E                                  _sensval FC0D  
                                _senspos 0035                                _T4HLTbits 000FB8  
                  __size_of_displ_nendis 0032                                  _pnvcash 0048  
                                _venderr 00A7                                  _timemsg FF18  
                                _servmsg FC59                    __size_of_displ_sflags 00B4  
                         ??_Vend_timeset 00BE                           ??_Vend_settime 002C  
                  __size_of_displ_noteer 002E               __size_of_SYSTEM_Initialize 003A  
                           _credit_check 2A1C                               ??_lcd_init 0025  
                             ??_lcd_test 0024                               ??_dispense 002C  
                             ??_mdb_comm 0025                               ??_mdb_init 002A  
                   end_of_initialization 245C                        __end_of_secondadd FC1F  
                             ??_mdb_poll 0027                                _T2RSTbits 000FC0  
                    __size_of_Sensor_set 00D6                      ?_EUSART1_Initialize 000B  
                    __size_of_Vend_setup 0112                                _T4RSTbits 000FBA  
                             ??_gsm_init 001F                               ??_gsm_txAT 001F  
                             ??_off_sens 002C                            __pdataCOMRAMh 004D  
                      __end_of_note_poll FC44                        __end_of_motimemsg FAEC  
                      __end_of_set_price 07EE                        __end_of_set_notes 0CEA  
                __size_of_Update_Hopcoin 0086                        __end_of_note_type FC43  
                          ?_vend_nosense 0000                        __end_of_price_set 1C5E  
                             _save_notes 29FA                        __end_of_just_busy FC3D  
                             ??_pay_coin 001F                              ?_cctalk_off 000B  
                         ??_note_disable 0027                        __end_of_priceexit FB98  
                      __end_of_nosentime FBE7                        __end_of_sensoffms FB19  
                      __end_of_setimemsg FE26                             ??_Clear_cred 0029  
                      __end_of_vend_init 0EBC                   price_check@chanlinkbit 00B8  
                  __size_of_mdb_security 0020                         ___ltdiv@dividend 001D  
                      __end_of_rom_error FC3C                       _EUSART2_Initialize 2B30  
                      __end_of_vendtimem FDFD                        __end_of_vendsetup FD31  
                      __end_of_vendstore FC19                               _note_reset FC46  
                             _sens_error FC3D                               _note_setup FC45  
                                postinc0 000FEE                                  postinc2 000FDE  
                  __size_of_EUSART1_Read 0012                               _motr_error FC3E  
                  __size_of_mdb_transmit 000E                    __size_of_EUSART2_Read 0012  
                             _just_reset FC39                            Read_NVstore@i 0024  
                             _pricesetm2 FD31                               _sensoffmsg FEB3  
                   ??_EUSART1_Initialize 001D                               _pricestore FC13  
                  __CFG_WDTCPS$WDTCPS_31 000000                      ?_EUSART2_Initialize 0000  
               Init_vendmem@chanlinkbits 0021                             _displ_credit 288A  
                __end_of_Update_coinsout 2090                             _displ_lflags 193A  
                           _displ_nendis 28BE                                _PORTBbits 000F8E  
                             _venderrors FC11                         displ_code@ercode 0026  
                           _displ_sflags 143C                               _vendispmsg FEEE  
                           _displ_noteer 2922                               _settimemsg FB43  
                      displ_sens@dmsgpos 002A                              ?_credit_add 0000  
                     displ_lflags@chanel 002A                              ?_lcd_clockE 0000  
                            ?_lcd_clockH 0000                              ?_lcd_clockL 0000  
                 ??_CMP1_GetOutputStatus 001D                     Vend_timeset@chantime 00C0  
                       ?_disable_channel 0000                         ___ltdiv@quotient 0023  
                  __size_of_Read_NVstore 0034                       __end_of_Clear_cred 1788  
                            ?_displ_code 000B                __size_of_Update_cashaudit 00C4  
                            ?_displ_note 0029                              ?_displ_sens 002A  
                            ?_displ_time 002A                        displ_sens@smsgpos 002B  
                            ?_lcd_string 0024                              ?_lcd_writeC 0000  
                    EUSART1_Write@txData 001D                         ?_CMP1_Initialize 000B  
                       ??_Reset_settings 0029                         __CFG_FEXTOSC$OFF 000000  
               __end_of_DATAEE_WriteByte 26D8                             _mdb_security 2A3E  
                   ??_EUSART2_Initialize 001D             TMR0_Write16bitTimer@timerVal 001D  
                            ?_mdb_unlock 0000                     _eusartmdb_Initialize 2B48  
                  __size_of_Read_Service 0018                        displ_time@channel 002A  
                          ??_get_channel 001D                        get_channel@butons 001D  
                         ??_vend_nosense 0020                                _Chan_link 1F6E  
                           _EUSART1_Read 2BB2                      __end_of_cashbox_err FC38  
                           _mdb_transmit 2BD6                             _EUSART2_Read 2BC4  
                          ??_lcd_dispadd 0021                               displ_hex@i 00BD  
                    __end_of_chanlinkmsg FAB2                      set_motortime@chanel 0025  
                  __size_of_Init_vendmem 00BA                     _timer0ReloadVal16bit 00C5  
                         _TMR0_StopTimer 2C92                          __pcstackCOMRAMh 000B  
                        __pcstackCOMRAMl 0000                  Update_coinsout@coinsout 0027  
                             mdb_reset@i 0028                            ?_update_vends 0000  
           __end_of_INTERRUPT_Initialize 2C80                            ??_displ_price 002A  
                   __end_of_Reset_hopper 2664                       mdb_transmit@txbyte 001E  
                             _twentyrand FFE3                           __end_of_cc_pay FC2D  
                         __end_of_cc_pin FC29                       price_check@savebut 00B7  
                         __end_of___wmul 29FA                           __end_of_dacmsg FF59  
                   __size_of_switch_read 0050                           __end_of_clrmsg FF9D  
                         __end_of_dispon FC56                           __end_of_mdb_on 2C9E  
                         __end_of_dispsl FC4C                           __end_of_dispsr FC4D  
                           _Read_NVstore 2822                         displ_credit@cash 002A  
                         __end_of_hopadd FC33                   ?_OSCILLATOR_Initialize 0000  
                         __end_of_gsm_on 2CA2                           __end_of_offmsg FFF6  
                            ?_hopper_pay 0000                           __end_of_senset FBBB  
                 ??_TMR0_Write16bitTimer 001F                  __size_of_find_highprice 0040  
                       ?_init_pricestore 0000                      __size_of_cctalk_off 0004  
                    start_initialization 241E                             _Read_Service 2AD0  
                          ??_give_change 002A                 __size_of_TMR0_Initialize 002E  
        __size_of_PIN_MANAGER_Initialize 0088                             ?_Hopper_coin 0000  
                     update_vends@chanel 0024                                _Link_chan 0EBC  
                        _credit_subtract 21A0                  Update_cashaudit@addcash 0027  
                  ?_eusartmdb_Initialize 0000                    __end_of_EUSART1_Write 2BF2  
                  __end_of_EUSART2_Write 2C1C                             _Init_vendmem 12CC  
                             ?_Chan_link 0000                              ?_save_notes 0000  
                    DATAEE_ReadByte@bAdd 001D                 __size_of_PIN_MANAGER_IOC 0006  
                          Init_vendmem@i 0025                   __end_of_TMR0_StopTimer 2C96  
                    __size_of_credit_add 005A                         __CFG_LPBOREN$OFF 000000  
                    __size_of_lcd_clockE 000E                      __size_of_lcd_clockH 0008  
                    __size_of_lcd_clockL 0008                 __size_of_TMR1_Initialize 0036  
                  __size_of_init_mdbdata 002A                           ??_update_vends 0021  
                    __end_of_get_channel 2A98                         ??_PMD_Initialize 001D  
                               ??___wmul 0021                             ??_Sensor_set 002C  
                    __size_of_displ_code 0106                      __end_of_lcd_dispadd 2B00  
                   __end_of_Vend_timeset 06D6                     __end_of_Vend_settime 238A  
                      __size_of_Sens_off 007C                      __size_of_displ_note 0038  
                    __size_of_displ_sens 0074                             ??_Vend_setup 002C  
                    __size_of_displ_time 0092                                 ??_mdb_on 001D  
                            __pdataBANK0 00CE                      __size_of_lcd_string 00B4  
                    __size_of_lcd_writeC 0066                                 ??_gsm_on 001D  
                  __size_of_gsm_transmit 000E                         ?_Update_coinsout 0000  
                    __size_of_mdb_unlock 00C8                   displ_sflags@senseflags 002B  
               __size_of_DAC1_Initialize 000C                      __end_of_displ_price 25AA  
                   __end_of_note_disable 2C4E                         dispense@sensmask 00B2  
                          __pcstackBANK0 00B2                 __size_of_TMR2_Initialize 001E  
                    __end_of_dispshright FC50                               ?_Link_chan 0000  
                          butindb@butval 0021                                _cc_adpoll FC25  
                            _cashbox_err FC37                           set_motortime@i 0026  
                              _cc_enable FC2E                     __end_of_note_removed FC39  
                    EUSART2_Write@txData 001D                              _chanlinkmsg FA75  
                              _chan1time FBF5                            ??_hopper_test 002A  
                  credit_subtract@credit 0021                     __end_of_note_stacker FC41  
                              _chan2time FBF3                                _chan3time FBF1  
                              _chan4time FBEF                                _chan5time FBED  
                              _chan6time FBEB                                _chan7time FBE9  
                              _chan8time FBE7                                _cc_newpin FC27  
                   init_mdbdata@initdata 0022                                _cc_serial FC26  
                     __end_of_Sensor_set 106A                             _init_mdbdata 29AA  
                      __size_of_lcd_init 00AC                      __end_of_give_change 224A  
                      __size_of_lcd_test 0016                       __end_of_Vend_setup 0900  
                      __size_of_mdb_comm 00FE                        __size_of_dispense 004E  
                              _cc_status FC2D                        __size_of_mdb_init 0068  
                         _Update_Hopcoin 1B58                        __size_of_mdb_poll 0122  
                              __pnvBANK0 00C5                 __size_of_TMR0_StartTimer 0004  
                              _chanlink1 000003                                _chanlink2 000004  
                              _chanlink3 000005                                _chanlink4 000006  
                              _chanlink5 000007                                _chanlink6 000008  
                              _chanlink7 000009                                _chanlink8 00000A  
                              _chanlinkm FD6A                          ?_TMR0_StopTimer 000B  
                              _cashinmsg FF89                      __size_of_hopper_pay 006E  
                      __size_of_gsm_init 002C                        __size_of_gsm_txAT 000E  
                      __size_of_off_sens 00F4                                _cctalk_on 2CA2  
                 _PIN_MANAGER_Initialize 19C4                             _gsm_transmit 2C00  
                      __size_of_pay_coin 008C                 __size_of_TMR3_Initialize 0036  
                              __pintcode 0008                            __pmediumconst FA74  
                              __ptext100 24A8                                __ptext101 2C68  
                               ?___lbdiv 001D                                __ptext110 2A98  
                              __ptext102 2C70                                __ptext111 27B6  
                              __ptext103 2C2A                                __ptext120 2B74  
                              __ptext112 2A5E                                __ptext104 224A  
                              __ptext121 2C38                                __ptext113 27EC  
                              __ptext105 1E36                                __ptext122 2B9E  
                              __ptext114 2950                                __ptext106 2A1C  
                              __ptext115 2AB4                                __ptext107 2B00  
                              __ptext124 2C8C                                __ptext116 19C4  
                              __ptext108 26D8                                __ptext117 2B18  
                              __ptext109 2780                                __ptext118 2C78  
                              __ptext119 2B30                         Link_chan@chanbit 00B4  
                       Link_chan@channel 00B5                                 ?___ltdiv 001D  
                               ?___ltmod 001D                   __size_of_set_motortime 0094  
                       __CFG_PPS1WAY$OFF 000000                                _creditclr FF3C  
                               _DAC1CON0 000F33                                 _DAC1CON1 000F34  
                              _displ_hex 1386                                _dispfunc1 FC58  
                              _dispfunc2 FC57                                _dispfunc3 FC56  
                              _lcd_write 28F0                       Hopper_coin@coinval 002C  
                              _fiftyrand FFDB                                _highprice 0034  
                              _mdb_reset 1A4C                                _mdb_noten 2466  
                              _mdb_waitr 2C80                                _mdb_waitx 2C86  
                               _BAUD1CON 000F9F                                 _BAUD2CON 000E9F  
                   __end_of_vend_nosense 21A0                  __end_of_credit_subtract 21F6  
                               ?_butindb 0000                    __end_of_enter_service 16F2  
                    __size_of_save_notes 0022                           __size_of_Audit 01BA  
                              _mdbtxbyte 00AC                 __size_of_TMR4_Initialize 001C  
                       _Update_cashaudit 1208                           _acept_disabled FC36  
                 ??_eusartmdb_Initialize 001D                           __size_of_butin 004A  
                              _gsm_waitx 2C60                                 _T2CLKCON 000FBF  
               __size_of_DATAEE_ReadByte 0018                                _read_busy 24A8  
                               _T4CLKCON 000FB9                                _errormask 0031  
                   _INTERRUPT_Initialize 2C78                   __end_of_Update_Hopcoin 1BDE  
                       ___ltmod@dividend 001D                    lcd_dispadd@lcdaddress 0021  
                      ??_TMR0_Initialize 001D                           ___wmul@product 0021  
                  __end_of_Write_NVstore 2780                                 _LATAbits 000F83  
                            _get_channel 2A7C                                 _LATCbits 000F85  
                            ??_Chan_link 00B7                                _secondadd FC1D  
                  lcd_dispadd@lcdatasave 0022                             ??_cctalk_off 001D  
                               _IPR0bits 000EBA                                 _PIE0bits 000EC2  
                          _note_features FC3F                              _lcd_dispadd 2AE8  
                 __size_of_vend_dispense 0086                      __CFG_BORV$VBOR_2P45 000000  
                          _theft_attempt FC33                               ?_cctalk_on 0000  
                  __size_of_Reset_hopper 003C                       __end_of_cc_countrq FC2C  
                    __end_of_hopper_test 2B9E                                 _PIR0bits 000ECA  
                        ___ltdiv@divisor 0020                                 _PIR3bits 000ECD  
                               _PIR4bits 000ECE                                 _PIR7bits 000ED1  
                        ___ltdiv@counter 0026                                _note_poll FC43  
                              _motimemsg FAB2                                _set_price 06D6  
                              _set_notes 0BF8                 __size_of_TMR5_Initialize 0036  
                              _note_type FC42                                _price_set 1BDE  
                              _just_busy FC3C                                _priceexit FB82  
                              _nosentime FBE5                                _sensoffms FAEC  
                          ??_price_check 00B4                                _pricevend 007F  
                              _setimemsg FDFD                                _vend_init 0DDC  
                              _sensorval 0036                                _rom_error FC3B  
                      ??_PIN_MANAGER_IOC 000B                              _displ_price 256A  
                              _vendprice 0037                                _vendtimem FDD4  
                              _vendsetup FCEE                  __size_of_displ_nochange 0034  
                              _vendstore FC17                            _note_rejected FC34  
                      ??_TMR1_Initialize 001D                               ?_displ_hex 0027  
                     Link_chan@linkflags 00B6                               ?_lcd_write 0000  
                      ___wmul@multiplier 001D                            _note_security FC44  
                    __end_of_hundredrand FFDB                               ?_mdb_reset 0000  
                             ?_mdb_noten 0000                              _dispshright FC4F  
                             ?_mdb_waitr 0000                               ?_mdb_waitx 000B  
                         _find_highprice 252A                             ??_credit_add 0028  
                           ??_lcd_clockE 001D                             ??_lcd_clockH 001D  
                           ??_lcd_clockL 001D                   Write_NVstore@storesize 0025  
                              mdb_comm@i 0026                   __end_of_acept_disabled FC37  
                              mdb_init@i 002C                       __end_of_cctalk_off 2CAA  
                  DATAEE_WriteByte@bData 001F                             ??_displ_code 0024  
                            _give_change 21F6                                mdb_poll@i 0027  
                        displ_hex@hexnum 0027                            ?_Clear_Totals 000B  
                           ??_displ_note 002B                             ??_displ_sens 002B  
                           ??_displ_time 002B                              ??_Link_chan 00B2  
                   __end_of_update_vends 20EC                             ??_lcd_string 0027  
                           ??_lcd_writeC 0023                               ?_gsm_waitx 000B  
                             ?_read_busy 0000                            _set_motortime 1788  
                  ?_INTERRUPT_Initialize 0000                        ??_DAC1_Initialize 001D  
                           _Reset_hopper 2628                             ??_mdb_unlock 001F  
                      ?_DATAEE_WriteByte 001D                          ?_Update_Hopcoin 002A  
                   __size_of_Hopper_coin 00D6                        ??_TMR2_Initialize 001D  
                     ??_DATAEE_WriteByte 0020                      lcd_string@lcdstring 0024  
                  __size_of_Vend_timeset 011E                    __size_of_Vend_settime 004E  
                               __Hrparam 0000                         Sensor_set@dacpos 002C  
                               _Sens_off 1C5E                                 __Lrparam 0000  
                     __end_of_credit_add 2146                               ?_set_price 0000  
                     __CFG_BOREN$SBORDIS 000000                               ?_set_notes 0000  
                     __end_of_lcd_clockE 2C38                               ?_price_set 0000  
                     __end_of_lcd_clockH 2C78                       __end_of_lcd_clockL 2C70  
                 __size_of_find_lowprice 0040                               ?_vend_init 0000  
                ??_OSCILLATOR_Initialize 001D                       Read_Service@senval 001D  
                     __end_of_jammed_err FC3B                        ??_TMR0_StartTimer 001D  
                     __end_of_displ_code 0A06                         __size_of___lbdiv 003A  
                     __end_of_displ_note 274A                       __end_of_displ_sens 1DC8  
                     __end_of_displ_time 18AE              __size_of_EUSART1_Initialize 0016  
                       __size_of___ltdiv 006A                    __size_of_note_disable 000A  
                       __size_of___ltmod 0054                       __end_of_lcd_string 15A4  
                     __end_of_dispcursor FC51                       __end_of_lcd_writeC 1F6E  
                 __end_of_find_highprice 256A                           _invalid_escrow FC35  
                    __end_of_note_escrow FC42                       __end_of_dispshleft FC4F  
                     __end_of_dispnormal FC52                        ??_TMR3_Initialize 001D  
                     __end_of_mdb_unlock 1208                             ??_hopper_pay 0028  
                               _cc_level FC29                  Update_Hopcoin@direction 002A  
                    __end_of_price_check 0336                                 _cc_reset FC30  
                          _vend_dispense 1AD2                         ?_credit_subtract 000B  
                            _dspposition 0043                               _T0CON0bits 000FD5  
                       __size_of_butindb 0040                                 _chanmask 0032  
                               _cctflags 004E                                 _cashoutv FC0B  
                         ??_Clear_Totals 0021                  __size_of_DAC1_SetOutput 0008  
          __size_of_CMP1_GetOutputStatus 000E                                 __ptext10 2C44  
                               __ptext11 2466                                 __ptext20 1788  
                               __ptext12 21F6                      __end_of_pricesetmsg FF3C  
                               __ptext21 29D4                                 __ptext13 21A0  
                             _T1GCONbits 000FD0                                 __ptext30 2BD6  
                               __ptext22 2C4E                                 __ptext14 20EC  
                               __ptext31 2C86                                 __ptext23 2C92  
                               __ptext15 1208                                 __ptext40 2BF2  
                               __ptext32 2BE4                                 __ptext24 2C96  
                               __ptext16 2664                                 __ptext41 2C00  
                               __ptext33 2C9A                                 __ptext25 1FD0  
                               __ptext17 22EE                                 __ptext50 28BE  
                               __ptext42 2C60                                 __ptext34 29AA  
                               __ptext26 2090                                 __ptext18 2146  
                               __ptext51 2712                                 __ptext43 2C0E  
                               __ptext35 238A                                 __ptext27 0496  
                               __ptext19 1AD2                                 __ptext60 2628  
                               __ptext52 1BDE                                 __ptext44 2C9E  
                               __ptext36 2BB2                                 __ptext28 0A06  
                               __ptext61 2CA2                                 __ptext53 06D6  
                               __ptext45 2BC4                                 __ptext37 15A4  
                               __ptext29 2C80                                 __ptext70 0B04  
                               __ptext62 2CA6                                 __ptext54 256A  
                               __ptext46 1650                                 __ptext38 2B5E  
                               __ptext71 143C                                 __ptext63 2030  
                               __ptext55 1140                                 __ptext47 0BF8  
                               __ptext39 297E                                 __ptext80 1D54  
                               __ptext72 0CEA                                 __ptext64 274A  
                               __ptext56 2B8A                                 __ptext48 1CDA  
                               __ptext81 106A                                 __ptext73 12CC  
                               __ptext65 07EE                                 __ptext57 1DC8  
                               __ptext49 29FA                                 __ptext90 2C1C  
                               __ptext82 25AA                                 __ptext74 25EA  
                               __ptext66 233C                                 __ptext58 18AE  
                               __ptext91 2922                                 __ptext83 1B58  
                               __ptext75 1F6E                                 __ptext67 05B8  
                               __ptext59 229E                                 __ptext92 0900  
                               __ptext84 16F2                                 __ptext76 0EBC  
                               __ptext68 181C                                 __ptext93 2856  
                               __ptext85 269E                                 __ptext77 193A  
                               __ptext69 1C5E                                 __ptext94 288A  
                               __ptext86 0000                                 __ptext78 2AD0  
                               __ptext95 14F0                                 __ptext87 2A7C  
                               __ptext79 0F94                                 __ptext96 1386  
                               __ptext88 23D4                                 __ptext97 1F08  
                               __ptext89 2822                                 __ptext98 2AE8  
                               __ptext99 28F0                                 _disabled FF9D  
                         ?_set_motortime 0000                      __end_of_sensorflags FBF9  
                               _auditmsg FBC9                                 _dispaddr FC53  
                               _lcd_init 15A4                                 _lcd_test 2B5E  
                               _dispense 22EE                                 _mdb_comm 0A06  
                               _mdb_init 1EA0                             _Vend_timeset 05B8  
                           _Vend_settime 233C                                 _mdb_poll 0496  
                               _mdbflags 003F                               _T3GCONbits 000FCA  
            DATAEE_WriteByte@GIEBitValue 0020              __size_of_EUSART2_Initialize 0018  
                            _hopper_test 2B8A                                 _emptymsg FFBA  
                  __end_of_chan1linkbits FC09                                 _gsm_init 297E  
                      ??_TMR4_Initialize 001D                                 _gsm_txAT 2BF2  
                               _off_sens 0B04                            __size_of_main 0160  
                             _T5GCONbits 000FC4                 __size_of_disable_channel 0060  
                               _hoperror FBE3                             ??_save_notes 0021  
                               _hoppcoin FDA1                                 _initnote FE4D  
                  __end_of_chan2linkbits FC07                                 _hpserial 009A  
                               _pay_coin 18AE                                 _nochange FE72  
                        ___ltmod@divisor 0020                        ??_DATAEE_ReadByte 001F  
                   __CFG_WDTCWS$WDTCWS_7 000000                    __end_of_chan3linkbits FC05  
               __size_of_CMP1_Initialize 0014                                 _second_5 FC1F  
                        ___ltmod@counter 0023                              ??_cctalk_on 001D  
                           _note_disable 2C44                    __end_of_chan4linkbits FC03  
                     __end_of_hopper_pay 1E36                               _RC1STAbits 000F9D  
                               _vcashout 00A0                                 _notebits FC0F  
                             _RC2STAbits 000E9D                                 _notebyte 0041  
                               _pricemsg FBD6                    __end_of_chan5linkbits FC01  
                               _lowprice 0033                                 _notetest FBBB  
                          ??_switch_read 001D                                 _venflags 002D  
                               _setnotes FCA9                            init_mdbdata@i 0023  
                               _vendtest FB69                              _hundredrand FFD3  
                  __end_of_chan6linkbits FBFF                                 int$flags 004F  
                               _setupmsg FC23                   __end_of_invalid_escrow FC36  
                  __size_of_vend_nosense 005A                                 _outcoins 003B  
                  __end_of_chan7linkbits FBFD                             _note_removed FC38  
                  Write_NVstore@storeadd 0021                    Read_NVstore@storesize 0023  
                  Write_NVstore@storemem 0023                                 _totalmsg FFC3  
                           _note_stacker FC40                    __end_of_chan8linkbits FBFB  
                        ?_find_highprice 0000                              ??_displ_hex 002A  
                            ??_lcd_write 001F                        ??_TMR5_Initialize 001D  
                            ??_mdb_reset 0027                              ??_mdb_noten 0027  
                         ?_vend_dispense 0000                              ??_mdb_waitr 001D  
                            ??_mdb_waitx 001D                               _INTCONbits 000FF2  
                            _NVMCON1bits 000F81                       __end_of_save_notes 2A1C  
                           price_check@i 00B9            __size_of_TMR0_Write16bitTimer 000A  
                 ??_INTERRUPT_Initialize 001D                            _find_lowprice 24EA  
                            ??_gsm_waitx 001D                              ??_read_busy 001D  
                    vend_dispense@chanel 002B                       __end_of_note_reset FC47  
                         _twohundredrand FFCB                       __end_of_sens_error FC3E  
                     __end_of_note_setup FC46                                 intlevel2 0000  
                       ??_TMR0_StopTimer 001D                       __end_of_motr_error FC3F  
               __size_of_init_pricestore 004A                       __end_of_just_reset FC3A  
                     __end_of_pricesetm2 FD6A                       __end_of_sensoffmsg FED2  
                ?_PIN_MANAGER_Initialize 000B                       __end_of_pricestore FC15  
                      __CFG_CLKOUTEN$OFF 000000                            ?_enable_notes 0000  
                           _vend_nosense 2146                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors FC13                       __end_of_vendispmsg FF03  
                    __end_of_totalvendsm FFF2                       __end_of_settimemsg FB69  
                __size_of_Reset_settings 00F2                      displ_sflags@chanbit 002A  
                            _note_escrow FC41                              ??_set_price 002B  
                            ??_set_notes 002C                              ??_price_set 002D  
               __end_of_Update_cashaudit 12CC                     Read_NVstore@storeadd 001F  
                            ??_vend_init 002D                     Read_NVstore@storemem 0021  
                            _noteen_byte 003D                              _price_check 01BA  
                         _displ_nochange 2856                        lcd_string@lcdline 0026  
                 __size_of_EUSART1_Write 000E                     displ_note@notestring 0029  
                 __size_of_EUSART2_Write 000E                               Audit@vends 002C  
 __end_of_INTERRUPT_InterruptManagerHigh 00AA  __size_of_INTERRUPT_InterruptManagerHigh 00A2  
         _INTERRUPT_InterruptManagerHigh 0008                               _RX1PPSbits 000EB5  
                            _pricesetmsg FF2A                      __end_of_switch_read 22EE  
                             _RX2PPSbits 000E8D                    __size_of_update_vends 005C  
                            _sensorflags FBF7                        lcd_test@character 0024  
                        _TMR0_Initialize 2950                       gsm_transmit@txbyte 001E  
                        ??_set_motortime 0023                       displ_sflags@chanel 0029  
                         ?_find_lowprice 0000                     Init_vendmem@chanlink 0023  
                 __end_of_twohundredrand FFD3                 __size_of_Update_coinsout 0060  
                          ?_credit_check 0000                               _TX1STAbits 000F9E  
         __end_of_PIN_MANAGER_Initialize 1A4C                      enable_notes@notenum 002B  
                           ?_get_channel 0000                       __end_of_twentyrand FFEB  
                        _PIN_MANAGER_IOC 2C8C                           ??_enable_notes 002B  
                           ?_lcd_dispadd 0000                          _TMR1_Initialize 27EC  
                   displ_lflags@linkflgs 0029  
