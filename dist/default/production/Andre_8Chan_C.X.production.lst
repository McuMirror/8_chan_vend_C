

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Mar 22 12:23:50 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAMh,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	nvCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   113                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   114                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   115                           	dabs	1,0x3,1,_chanlink1
   116                           	dabs	1,0xA,1,_chanlink8
   117                           	dabs	1,0x9,1,_chanlink7
   118                           	dabs	1,0x8,1,_chanlink6
   119                           	dabs	1,0x7,1,_chanlink5
   120                           	dabs	1,0x6,1,_chanlink4
   121                           	dabs	1,0x5,1,_chanlink3
   122                           	dabs	1,0x4,1,_chanlink2
   123  0000                     
   124                           ; Version 1.44
   125                           ; Generated 14/09/2017 GMT
   126                           ; 
   127                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F47K40 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	idataCOMRAMh
   160  0120E6                     __pidataCOMRAMh:
   161                           	opt stack 0
   162                           
   163                           ;initializer for _notenum
   164  0120E6  FF                 	db	255
   165                           
   166                           	psect	mediumconst
   167  00FAAC                     __pmediumconst:
   168                           	opt stack 0
   169  00FAAC  00                 	db	0
   170  00FAAD                     _chanlinkmsg:
   171                           	opt stack 0
   172  00FAAD  50                 	db	80
   173  00FAAE  75                 	db	117
   174  00FAAF  73                 	db	115
   175  00FAB0  68                 	db	104
   176  00FAB1  20                 	db	32
   177  00FAB2  42                 	db	66
   178  00FAB3  75                 	db	117
   179  00FAB4  74                 	db	116
   180  00FAB5  74                 	db	116
   181  00FAB6  6F                 	db	111
   182  00FAB7  6E                 	db	110
   183  00FAB8  20                 	db	32
   184  00FAB9  74                 	db	116
   185  00FABA  6F                 	db	111
   186  00FABB  20                 	db	32
   187  00FABC  4C                 	db	76
   188  00FABD  69                 	db	105
   189  00FABE  6E                 	db	110
   190  00FABF  6B                 	db	107
   191  00FAC0  20                 	db	32
   192  00FAC1  50                 	db	80
   193  00FAC2  75                 	db	117
   194  00FAC3  73                 	db	115
   195  00FAC4  68                 	db	104
   196  00FAC5  20                 	db	32
   197  00FAC6  61                 	db	97
   198  00FAC7  67                 	db	103
   199  00FAC8  61                 	db	97
   200  00FAC9  69                 	db	105
   201  00FACA  6E                 	db	110
   202  00FACB  20                 	db	32
   203  00FACC  74                 	db	116
   204  00FACD  6F                 	db	111
   205  00FACE  20                 	db	32
   206  00FACF  55                 	db	85
   207  00FAD0  6E                 	db	110
   208  00FAD1  6C                 	db	108
   209  00FAD2  69                 	db	105
   210  00FAD3  6E                 	db	110
   211  00FAD4  6B                 	db	107
   212  00FAD5  50                 	db	80
   213  00FAD6  75                 	db	117
   214  00FAD7  73                 	db	115
   215  00FAD8  68                 	db	104
   216  00FAD9  20                 	db	32
   217  00FADA  53                 	db	83
   218  00FADB  65                 	db	101
   219  00FADC  72                 	db	114
   220  00FADD  76                 	db	118
   221  00FADE  69                 	db	105
   222  00FADF  63                 	db	99
   223  00FAE0  65                 	db	101
   224  00FAE1  20                 	db	32
   225  00FAE2  74                 	db	116
   226  00FAE3  6F                 	db	111
   227  00FAE4  20                 	db	32
   228  00FAE5  45                 	db	69
   229  00FAE6  78                 	db	120
   230  00FAE7  69                 	db	105
   231  00FAE8  74                 	db	116
   232  00FAE9  00                 	db	0
   233  00FAEA                     __end_of_chanlinkmsg:
   234                           	opt stack 0
   235  00FAEA                     _motimemsg:
   236                           	opt stack 0
   237  00FAEA  20                 	db	32
   238  00FAEB  50                 	db	80
   239  00FAEC  72                 	db	114
   240  00FAED  65                 	db	101
   241  00FAEE  73                 	db	115
   242  00FAEF  73                 	db	115
   243  00FAF0  20                 	db	32
   244  00FAF1  43                 	db	67
   245  00FAF2  68                 	db	104
   246  00FAF3  61                 	db	97
   247  00FAF4  6E                 	db	110
   248  00FAF5  6E                 	db	110
   249  00FAF6  65                 	db	101
   250  00FAF7  6C                 	db	108
   251  00FAF8  20                 	db	32
   252  00FAF9  56                 	db	86
   253  00FAFA  65                 	db	101
   254  00FAFB  6E                 	db	110
   255  00FAFC  64                 	db	100
   256  00FAFD  20                 	db	32
   257  00FAFE  42                 	db	66
   258  00FAFF  75                 	db	117
   259  00FB00  74                 	db	116
   260  00FB01  74                 	db	116
   261  00FB02  6F                 	db	111
   262  00FB03  6E                 	db	110
   263  00FB04  20                 	db	32
   264  00FB05  6F                 	db	111
   265  00FB06  72                 	db	114
   266  00FB07  20                 	db	32
   267  00FB08  50                 	db	80
   268  00FB09  72                 	db	114
   269  00FB0A  65                 	db	101
   270  00FB0B  73                 	db	115
   271  00FB0C  73                 	db	115
   272  00FB0D  20                 	db	32
   273  00FB0E  20                 	db	32
   274  00FB0F  20                 	db	32
   275  00FB10  20                 	db	32
   276  00FB11  20                 	db	32
   277  00FB12  20                 	db	32
   278  00FB13  20                 	db	32
   279  00FB14  53                 	db	83
   280  00FB15  65                 	db	101
   281  00FB16  72                 	db	114
   282  00FB17  76                 	db	118
   283  00FB18  69                 	db	105
   284  00FB19  63                 	db	99
   285  00FB1A  65                 	db	101
   286  00FB1B  20                 	db	32
   287  00FB1C  74                 	db	116
   288  00FB1D  6F                 	db	111
   289  00FB1E  20                 	db	32
   290  00FB1F  45                 	db	69
   291  00FB20  78                 	db	120
   292  00FB21  69                 	db	105
   293  00FB22  74                 	db	116
   294  00FB23  00                 	db	0
   295  00FB24                     __end_of_motimemsg:
   296                           	opt stack 0
   297  00FB24                     _sensoffms:
   298                           	opt stack 0
   299  00FB24  48                 	db	72
   300  00FB25  6F                 	db	111
   301  00FB26  6C                 	db	108
   302  00FB27  64                 	db	100
   303  00FB28  20                 	db	32
   304  00FB29  63                 	db	99
   305  00FB2A  68                 	db	104
   306  00FB2B  61                 	db	97
   307  00FB2C  6E                 	db	110
   308  00FB2D  6E                 	db	110
   309  00FB2E  65                 	db	101
   310  00FB2F  6C                 	db	108
   311  00FB30  20                 	db	32
   312  00FB31  62                 	db	98
   313  00FB32  75                 	db	117
   314  00FB33  74                 	db	116
   315  00FB34  74                 	db	116
   316  00FB35  6F                 	db	111
   317  00FB36  6E                 	db	110
   318  00FB37  20                 	db	32
   319  00FB38  6F                 	db	111
   320  00FB39  72                 	db	114
   321  00FB3A  20                 	db	32
   322  00FB3B  50                 	db	80
   323  00FB3C  75                 	db	117
   324  00FB3D  73                 	db	115
   325  00FB3E  68                 	db	104
   326  00FB3F  20                 	db	32
   327  00FB40  73                 	db	115
   328  00FB41  65                 	db	101
   329  00FB42  72                 	db	114
   330  00FB43  76                 	db	118
   331  00FB44  69                 	db	105
   332  00FB45  63                 	db	99
   333  00FB46  65                 	db	101
   334  00FB47  20                 	db	32
   335  00FB48  74                 	db	116
   336  00FB49  6F                 	db	111
   337  00FB4A  20                 	db	32
   338  00FB4B  20                 	db	32
   339  00FB4C  65                 	db	101
   340  00FB4D  78                 	db	120
   341  00FB4E  69                 	db	105
   342  00FB4F  74                 	db	116
   343  00FB50  00                 	db	0
   344  00FB51                     __end_of_sensoffms:
   345                           	opt stack 0
   346  00FB51                     _credclr:
   347                           	opt stack 0
   348  00FB51  50                 	db	80
   349  00FB52  75                 	db	117
   350  00FB53  73                 	db	115
   351  00FB54  68                 	db	104
   352  00FB55  20                 	db	32
   353  00FB56  62                 	db	98
   354  00FB57  75                 	db	117
   355  00FB58  74                 	db	116
   356  00FB59  74                 	db	116
   357  00FB5A  6F                 	db	111
   358  00FB5B  6E                 	db	110
   359  00FB5C  20                 	db	32
   360  00FB5D  31                 	db	49
   361  00FB5E  20                 	db	32
   362  00FB5F  74                 	db	116
   363  00FB60  6F                 	db	111
   364  00FB61  20                 	db	32
   365  00FB62  63                 	db	99
   366  00FB63  6C                 	db	108
   367  00FB64  65                 	db	101
   368  00FB65  61                 	db	97
   369  00FB66  72                 	db	114
   370  00FB67  20                 	db	32
   371  00FB68  63                 	db	99
   372  00FB69  72                 	db	114
   373  00FB6A  65                 	db	101
   374  00FB6B  64                 	db	100
   375  00FB6C  69                 	db	105
   376  00FB6D  74                 	db	116
   377  00FB6E  73                 	db	115
   378  00FB6F  20                 	db	32
   379  00FB70  20                 	db	32
   380  00FB71  20                 	db	32
   381  00FB72  61                 	db	97
   382  00FB73  6E                 	db	110
   383  00FB74  64                 	db	100
   384  00FB75  20                 	db	32
   385  00FB76  65                 	db	101
   386  00FB77  78                 	db	120
   387  00FB78  69                 	db	105
   388  00FB79  74                 	db	116
   389  00FB7A  00                 	db	0
   390  00FB7B                     __end_of_credclr:
   391                           	opt stack 0
   392  00FB7B                     _settimemsg:
   393                           	opt stack 0
   394  00FB7B  50                 	db	80
   395  00FB7C  72                 	db	114
   396  00FB7D  65                 	db	101
   397  00FB7E  73                 	db	115
   398  00FB7F  73                 	db	115
   399  00FB80  20                 	db	32
   400  00FB81  31                 	db	49
   401  00FB82  20                 	db	32
   402  00FB83  3D                 	db	61
   403  00FB84  20                 	db	32
   404  00FB85  2B                 	db	43
   405  00FB86  20                 	db	32
   406  00FB87  6F                 	db	111
   407  00FB88  72                 	db	114
   408  00FB89  20                 	db	32
   409  00FB8A  32                 	db	50
   410  00FB8B  20                 	db	32
   411  00FB8C  3D                 	db	61
   412  00FB8D  20                 	db	32
   413  00FB8E  2D                 	db	45
   414  00FB8F  20                 	db	32
   415  00FB90  20                 	db	32
   416  00FB91  50                 	db	80
   417  00FB92  72                 	db	114
   418  00FB93  65                 	db	101
   419  00FB94  73                 	db	115
   420  00FB95  73                 	db	115
   421  00FB96  20                 	db	32
   422  00FB97  38                 	db	56
   423  00FB98  20                 	db	32
   424  00FB99  74                 	db	116
   425  00FB9A  6F                 	db	111
   426  00FB9B  20                 	db	32
   427  00FB9C  45                 	db	69
   428  00FB9D  78                 	db	120
   429  00FB9E  69                 	db	105
   430  00FB9F  74                 	db	116
   431  00FBA0  00                 	db	0
   432  00FBA1                     __end_of_settimemsg:
   433                           	opt stack 0
   434  00FBA1                     _vendtest:
   435                           	opt stack 0
   436  00FBA1  20                 	db	32
   437  00FBA2  50                 	db	80
   438  00FBA3  75                 	db	117
   439  00FBA4  73                 	db	115
   440  00FBA5  68                 	db	104
   441  00FBA6  20                 	db	32
   442  00FBA7  62                 	db	98
   443  00FBA8  75                 	db	117
   444  00FBA9  74                 	db	116
   445  00FBAA  74                 	db	116
   446  00FBAB  6F                 	db	111
   447  00FBAC  6E                 	db	110
   448  00FBAD  20                 	db	32
   449  00FBAE  74                 	db	116
   450  00FBAF  6F                 	db	111
   451  00FBB0  20                 	db	32
   452  00FBB1  20                 	db	32
   453  00FBB2  20                 	db	32
   454  00FBB3  20                 	db	32
   455  00FBB4  20                 	db	32
   456  00FBB5  76                 	db	118
   457  00FBB6  65                 	db	101
   458  00FBB7  6E                 	db	110
   459  00FBB8  64                 	db	100
   460  00FBB9  00                 	db	0
   461  00FBBA                     __end_of_vendtest:
   462                           	opt stack 0
   463  00FBBA                     _priceexit:
   464                           	opt stack 0
   465  00FBBA  50                 	db	80
   466  00FBBB  72                 	db	114
   467  00FBBC  65                 	db	101
   468  00FBBD  73                 	db	115
   469  00FBBE  73                 	db	115
   470  00FBBF  20                 	db	32
   471  00FBC0  73                 	db	115
   472  00FBC1  65                 	db	101
   473  00FBC2  72                 	db	114
   474  00FBC3  76                 	db	118
   475  00FBC4  69                 	db	105
   476  00FBC5  63                 	db	99
   477  00FBC6  65                 	db	101
   478  00FBC7  20                 	db	32
   479  00FBC8  74                 	db	116
   480  00FBC9  6F                 	db	111
   481  00FBCA  20                 	db	32
   482  00FBCB  65                 	db	101
   483  00FBCC  78                 	db	120
   484  00FBCD  69                 	db	105
   485  00FBCE  74                 	db	116
   486  00FBCF  00                 	db	0
   487  00FBD0                     __end_of_priceexit:
   488                           	opt stack 0
   489  00FBD0                     _inithop:
   490                           	opt stack 0
   491  00FBD0  20                 	db	32
   492  00FBD1  20                 	db	32
   493  00FBD2  49                 	db	73
   494  00FBD3  6E                 	db	110
   495  00FBD4  69                 	db	105
   496  00FBD5  74                 	db	116
   497  00FBD6  69                 	db	105
   498  00FBD7  61                 	db	97
   499  00FBD8  6C                 	db	108
   500  00FBD9  69                 	db	105
   501  00FBDA  7A                 	db	122
   502  00FBDB  65                 	db	101
   503  00FBDC  20                 	db	32
   504  00FBDD  48                 	db	72
   505  00FBDE  6F                 	db	111
   506  00FBDF  70                 	db	112
   507  00FBE0  70                 	db	112
   508  00FBE1  65                 	db	101
   509  00FBE2  72                 	db	114
   510  00FBE3  00                 	db	0
   511  00FBE4                     __end_of_inithop:
   512                           	opt stack 0
   513  00FBE4                     _nochange:
   514                           	opt stack 0
   515  00FBE4  4E                 	db	78
   516  00FBE5  6F                 	db	111
   517  00FBE6  20                 	db	32
   518  00FBE7  43                 	db	67
   519  00FBE8  68                 	db	104
   520  00FBE9  61                 	db	97
   521  00FBEA  6E                 	db	110
   522  00FBEB  67                 	db	103
   523  00FBEC  65                 	db	101
   524  00FBED  20                 	db	32
   525  00FBEE  47                 	db	71
   526  00FBEF  69                 	db	105
   527  00FBF0  76                 	db	118
   528  00FBF1  65                 	db	101
   529  00FBF2  6E                 	db	110
   530  00FBF3  00                 	db	0
   531  00FBF4                     __end_of_nochange:
   532                           	opt stack 0
   533  00FBF4                     _senset:
   534                           	opt stack 0
   535  00FBF4  20                 	db	32
   536  00FBF5  20                 	db	32
   537  00FBF6  53                 	db	83
   538  00FBF7  65                 	db	101
   539  00FBF8  74                 	db	116
   540  00FBF9  75                 	db	117
   541  00FBFA  70                 	db	112
   542  00FBFB  20                 	db	32
   543  00FBFC  53                 	db	83
   544  00FBFD  65                 	db	101
   545  00FBFE  6E                 	db	110
   546  00FBFF  73                 	db	115
   547  00FC00  6F                 	db	111
   548  00FC01  72                 	db	114
   549  00FC02  00                 	db	0
   550  00FC03                     __end_of_senset:
   551                           	opt stack 0
   552  00FC03                     _notetest:
   553                           	opt stack 0
   554  00FC03  20                 	db	32
   555  00FC04  20                 	db	32
   556  00FC05  49                 	db	73
   557  00FC06  6E                 	db	110
   558  00FC07  73                 	db	115
   559  00FC08  65                 	db	101
   560  00FC09  72                 	db	114
   561  00FC0A  74                 	db	116
   562  00FC0B  20                 	db	32
   563  00FC0C  4E                 	db	78
   564  00FC0D  6F                 	db	111
   565  00FC0E  74                 	db	116
   566  00FC0F  65                 	db	101
   567  00FC10  00                 	db	0
   568  00FC11                     __end_of_notetest:
   569                           	opt stack 0
   570  00FC11                     _auditmsg:
   571                           	opt stack 0
   572  00FC11  20                 	db	32
   573  00FC12  20                 	db	32
   574  00FC13  41                 	db	65
   575  00FC14  75                 	db	117
   576  00FC15  64                 	db	100
   577  00FC16  69                 	db	105
   578  00FC17  74                 	db	116
   579  00FC18  20                 	db	32
   580  00FC19  4D                 	db	77
   581  00FC1A  6F                 	db	111
   582  00FC1B  64                 	db	100
   583  00FC1C  65                 	db	101
   584  00FC1D  00                 	db	0
   585  00FC1E                     __end_of_auditmsg:
   586                           	opt stack 0
   587  00FC1E                     _pricemsg:
   588                           	opt stack 0
   589  00FC1E  50                 	db	80
   590  00FC1F  72                 	db	114
   591  00FC20  69                 	db	105
   592  00FC21  63                 	db	99
   593  00FC22  65                 	db	101
   594  00FC23  20                 	db	32
   595  00FC24  52                 	db	82
   596  00FC25  00                 	db	0
   597  00FC26                     __end_of_pricemsg:
   598                           	opt stack 0
   599  00FC26                     _exit:
   600                           	opt stack 0
   601  00FC26  45                 	db	69
   602  00FC27  78                 	db	120
   603  00FC28  69                 	db	105
   604  00FC29  74                 	db	116
   605  00FC2A  00                 	db	0
   606  00FC2B                     __end_of_exit:
   607                           	opt stack 0
   608  00FC2B                     _hoperror:
   609                           	opt stack 0
   610  00FC2B  002E               	dw	46
   611  00FC2D                     __end_of_hoperror:
   612                           	opt stack 0
   613  00FC2D                     _chan8time:
   614                           	opt stack 0
   615  00FC2D  002D               	dw	45
   616  00FC2F                     __end_of_chan8time:
   617                           	opt stack 0
   618  00FC2F                     _chan7time:
   619                           	opt stack 0
   620  00FC2F  002C               	dw	44
   621  00FC31                     __end_of_chan7time:
   622                           	opt stack 0
   623  00FC31                     _chan6time:
   624                           	opt stack 0
   625  00FC31  002B               	dw	43
   626  00FC33                     __end_of_chan6time:
   627                           	opt stack 0
   628  00FC33                     _chan5time:
   629                           	opt stack 0
   630  00FC33  002A               	dw	42
   631  00FC35                     __end_of_chan5time:
   632                           	opt stack 0
   633  00FC35                     _chan4time:
   634                           	opt stack 0
   635  00FC35  0029               	dw	41
   636  00FC37                     __end_of_chan4time:
   637                           	opt stack 0
   638  00FC37                     _chan3time:
   639                           	opt stack 0
   640  00FC37  0028               	dw	40
   641  00FC39                     __end_of_chan3time:
   642                           	opt stack 0
   643  00FC39                     _chan2time:
   644                           	opt stack 0
   645  00FC39  0027               	dw	39
   646  00FC3B                     __end_of_chan2time:
   647                           	opt stack 0
   648  00FC3B                     _chan1time:
   649                           	opt stack 0
   650  00FC3B  0026               	dw	38
   651  00FC3D                     __end_of_chan1time:
   652                           	opt stack 0
   653  00FC3D                     _sensorflags:
   654                           	opt stack 0
   655  00FC3D  0025               	dw	37
   656  00FC3F                     __end_of_sensorflags:
   657                           	opt stack 0
   658  00FC3F                     _chan8linkbits:
   659                           	opt stack 0
   660  00FC3F  0024               	dw	36
   661  00FC41                     __end_of_chan8linkbits:
   662                           	opt stack 0
   663  00FC41                     _chan7linkbits:
   664                           	opt stack 0
   665  00FC41  0023               	dw	35
   666  00FC43                     __end_of_chan7linkbits:
   667                           	opt stack 0
   668  00FC43                     _chan6linkbits:
   669                           	opt stack 0
   670  00FC43  0022               	dw	34
   671  00FC45                     __end_of_chan6linkbits:
   672                           	opt stack 0
   673  00FC45                     _chan5linkbits:
   674                           	opt stack 0
   675  00FC45  0021               	dw	33
   676  00FC47                     __end_of_chan5linkbits:
   677                           	opt stack 0
   678  00FC47                     _chan4linkbits:
   679                           	opt stack 0
   680  00FC47  0020               	dw	32
   681  00FC49                     __end_of_chan4linkbits:
   682                           	opt stack 0
   683  00FC49                     _chan3linkbits:
   684                           	opt stack 0
   685  00FC49  001F               	dw	31
   686  00FC4B                     __end_of_chan3linkbits:
   687                           	opt stack 0
   688  00FC4B                     _chan2linkbits:
   689                           	opt stack 0
   690  00FC4B  001E               	dw	30
   691  00FC4D                     __end_of_chan2linkbits:
   692                           	opt stack 0
   693  00FC4D                     _chan1linkbits:
   694                           	opt stack 0
   695  00FC4D  001D               	dw	29
   696  00FC4F                     __end_of_chan1linkbits:
   697                           	opt stack 0
   698  00FC4F                     _hopcoin:
   699                           	opt stack 0
   700  00FC4F  001C               	dw	28
   701  00FC51                     __end_of_hopcoin:
   702                           	opt stack 0
   703  00FC51                     _cashoutv:
   704                           	opt stack 0
   705  00FC51  001A               	dw	26
   706  00FC53                     __end_of_cashoutv:
   707                           	opt stack 0
   708  00FC53                     _sensval:
   709                           	opt stack 0
   710  00FC53  0019               	dw	25
   711  00FC55                     __end_of_sensval:
   712                           	opt stack 0
   713  00FC55                     _notebits:
   714                           	opt stack 0
   715  00FC55  0018               	dw	24
   716  00FC57                     __end_of_notebits:
   717                           	opt stack 0
   718  00FC57                     _venderrors:
   719                           	opt stack 0
   720  00FC57  0017               	dw	23
   721  00FC59                     __end_of_venderrors:
   722                           	opt stack 0
   723  00FC59                     _pricestore:
   724                           	opt stack 0
   725  00FC59  000F               	dw	15
   726  00FC5B                     __end_of_pricestore:
   727                           	opt stack 0
   728  00FC5B                     _vendstore:
   729                           	opt stack 0
   730  00FC5B  0007               	dw	7
   731  00FC5D                     __end_of_vendstore:
   732                           	opt stack 0
   733  00FC5D                     _cashint:
   734                           	opt stack 0
   735  00FC5D  0004               	dw	4
   736  00FC5F                     __end_of_cashint:
   737                           	opt stack 0
   738  00FC5F                     _cashinv:
   739                           	opt stack 0
   740  00FC5F  0002               	dw	2
   741  00FC61                     __end_of_cashinv:
   742                           	opt stack 0
   743  00FC61                     _credmem:
   744                           	opt stack 0
   745  00FC61  0000               	dw	0
   746  00FC63                     __end_of_credmem:
   747                           	opt stack 0
   748  00FC63                     _secondadd:
   749                           	opt stack 0
   750  00FC63  1E46               	dw	7750
   751  00FC65                     __end_of_secondadd:
   752                           	opt stack 0
   753  00FC65                     _second_5:
   754                           	opt stack 0
   755  00FC65  0F23               	dw	3875
   756  00FC67                     __end_of_second_5:
   757                           	opt stack 0
   758  00FC67                     _second1:
   759                           	opt stack 0
   760  00FC67  E1BA               	dw	57786
   761  00FC69                     __end_of_second1:
   762                           	opt stack 0
   763  00FC69                     _cc_poll:
   764                           	opt stack 0
   765  00FC69  FE                 	db	254
   766  00FC6A                     __end_of_cc_poll:
   767                           	opt stack 0
   768  00FC6A                     _cc_adpoll:
   769                           	opt stack 0
   770  00FC6A  FD                 	db	253
   771  00FC6B                     __end_of_cc_adpoll:
   772                           	opt stack 0
   773  00FC6B                     _cc_serial:
   774                           	opt stack 0
   775  00FC6B  F2                 	db	242
   776  00FC6C                     __end_of_cc_serial:
   777                           	opt stack 0
   778  00FC6C                     _cc_newpin:
   779                           	opt stack 0
   780  00FC6C  DB                 	db	219
   781  00FC6D                     __end_of_cc_newpin:
   782                           	opt stack 0
   783  00FC6D                     _cc_pin:
   784                           	opt stack 0
   785  00FC6D  DA                 	db	218
   786  00FC6E                     __end_of_cc_pin:
   787                           	opt stack 0
   788  00FC6E                     _cc_level:
   789                           	opt stack 0
   790  00FC6E  EC                 	db	236
   791  00FC6F                     __end_of_cc_level:
   792                           	opt stack 0
   793  00FC6F                     _cc_stop:
   794                           	opt stack 0
   795  00FC6F  AC                 	db	172
   796  00FC70                     __end_of_cc_stop:
   797                           	opt stack 0
   798  00FC70                     _cc_countrq:
   799                           	opt stack 0
   800  00FC70  A8                 	db	168
   801  00FC71                     __end_of_cc_countrq:
   802                           	opt stack 0
   803  00FC71                     _cc_pay:
   804                           	opt stack 0
   805  00FC71  A7                 	db	167
   806  00FC72                     __end_of_cc_pay:
   807                           	opt stack 0
   808  00FC72                     _cc_status:
   809                           	opt stack 0
   810  00FC72  A6                 	db	166
   811  00FC73                     __end_of_cc_status:
   812                           	opt stack 0
   813  00FC73                     _cc_enable:
   814                           	opt stack 0
   815  00FC73  A4                 	db	164
   816  00FC74                     __end_of_cc_enable:
   817                           	opt stack 0
   818  00FC74                     _cc_test:
   819                           	opt stack 0
   820  00FC74  A3                 	db	163
   821  00FC75                     __end_of_cc_test:
   822                           	opt stack 0
   823  00FC75                     _cc_reset:
   824                           	opt stack 0
   825  00FC75  01                 	db	1
   826  00FC76                     __end_of_cc_reset:
   827                           	opt stack 0
   828  00FC76                     _mastadd:
   829                           	opt stack 0
   830  00FC76  01                 	db	1
   831  00FC77                     __end_of_mastadd:
   832                           	opt stack 0
   833  00FC77                     _hopadd:
   834                           	opt stack 0
   835  00FC77  03                 	db	3
   836  00FC78                     __end_of_hopadd:
   837                           	opt stack 0
   838  00FC78                     _theft_attempt:
   839                           	opt stack 0
   840  00FC78  0C                 	db	12
   841  00FC79                     __end_of_theft_attempt:
   842                           	opt stack 0
   843  00FC79                     _note_rejected:
   844                           	opt stack 0
   845  00FC79  0B                 	db	11
   846  00FC7A                     __end_of_note_rejected:
   847                           	opt stack 0
   848  00FC7A                     _invalid_escrow:
   849                           	opt stack 0
   850  00FC7A  0A                 	db	10
   851  00FC7B                     __end_of_invalid_escrow:
   852                           	opt stack 0
   853  00FC7B                     _acept_disabled:
   854                           	opt stack 0
   855  00FC7B  09                 	db	9
   856  00FC7C                     __end_of_acept_disabled:
   857                           	opt stack 0
   858  00FC7C                     _cashbox_err:
   859                           	opt stack 0
   860  00FC7C  08                 	db	8
   861  00FC7D                     __end_of_cashbox_err:
   862                           	opt stack 0
   863  00FC7D                     _note_removed:
   864                           	opt stack 0
   865  00FC7D  07                 	db	7
   866  00FC7E                     __end_of_note_removed:
   867                           	opt stack 0
   868  00FC7E                     _just_reset:
   869                           	opt stack 0
   870  00FC7E  06                 	db	6
   871  00FC7F                     __end_of_just_reset:
   872                           	opt stack 0
   873  00FC7F                     _jammed_err:
   874                           	opt stack 0
   875  00FC7F  05                 	db	5
   876  00FC80                     __end_of_jammed_err:
   877                           	opt stack 0
   878  00FC80                     _rom_error:
   879                           	opt stack 0
   880  00FC80  04                 	db	4
   881  00FC81                     __end_of_rom_error:
   882                           	opt stack 0
   883  00FC81                     _just_busy:
   884                           	opt stack 0
   885  00FC81  03                 	db	3
   886  00FC82                     __end_of_just_busy:
   887                           	opt stack 0
   888  00FC82                     _sens_error:
   889                           	opt stack 0
   890  00FC82  02                 	db	2
   891  00FC83                     __end_of_sens_error:
   892                           	opt stack 0
   893  00FC83                     _motr_error:
   894                           	opt stack 0
   895  00FC83  01                 	db	1
   896  00FC84                     __end_of_motr_error:
   897                           	opt stack 0
   898  00FC84                     _note_features:
   899                           	opt stack 0
   900  00FC84  33                 	db	51
   901  00FC85                     __end_of_note_features:
   902                           	opt stack 0
   903  00FC85                     _note_stacker:
   904                           	opt stack 0
   905  00FC85  36                 	db	54
   906  00FC86                     __end_of_note_stacker:
   907                           	opt stack 0
   908  00FC86                     _note_escrow:
   909                           	opt stack 0
   910  00FC86  35                 	db	53
   911  00FC87                     __end_of_note_escrow:
   912                           	opt stack 0
   913  00FC87                     _note_type:
   914                           	opt stack 0
   915  00FC87  34                 	db	52
   916  00FC88                     __end_of_note_type:
   917                           	opt stack 0
   918  00FC88                     _note_poll:
   919                           	opt stack 0
   920  00FC88  33                 	db	51
   921  00FC89                     __end_of_note_poll:
   922                           	opt stack 0
   923  00FC89                     _note_security:
   924                           	opt stack 0
   925  00FC89  32                 	db	50
   926  00FC8A                     __end_of_note_security:
   927                           	opt stack 0
   928  00FC8A                     _note_setup:
   929                           	opt stack 0
   930  00FC8A  31                 	db	49
   931  00FC8B                     __end_of_note_setup:
   932                           	opt stack 0
   933  00FC8B                     _note_reset:
   934                           	opt stack 0
   935  00FC8B  30                 	db	48
   936  00FC8C                     __end_of_note_reset:
   937                           	opt stack 0
   938  00FC8C                     _line4:
   939                           	opt stack 0
   940  00FC8C  54                 	db	84
   941  00FC8D                     __end_of_line4:
   942                           	opt stack 0
   943  00FC8D                     _line3:
   944                           	opt stack 0
   945  00FC8D  14                 	db	20
   946  00FC8E                     __end_of_line3:
   947                           	opt stack 0
   948  00FC8E                     _line2:
   949                           	opt stack 0
   950  00FC8E  40                 	db	64
   951  00FC8F                     __end_of_line2:
   952                           	opt stack 0
   953  00FC8F                     _line1:
   954                           	opt stack 0
   955  00FC8F  00                 	db	0
   956  00FC90                     __end_of_line1:
   957                           	opt stack 0
   958  00FC90                     _dispsl:
   959                           	opt stack 0
   960  00FC90  18                 	db	24
   961  00FC91                     __end_of_dispsl:
   962                           	opt stack 0
   963  00FC91                     _dispsr:
   964                           	opt stack 0
   965  00FC91  1B                 	db	27
   966  00FC92                     __end_of_dispsr:
   967                           	opt stack 0
   968  00FC92                     _dispoff:
   969                           	opt stack 0
   970  00FC92  08                 	db	8
   971  00FC93                     __end_of_dispoff:
   972                           	opt stack 0
   973  00FC93                     _dispshleft:
   974                           	opt stack 0
   975  00FC93  07                 	db	7
   976  00FC94                     __end_of_dispshleft:
   977                           	opt stack 0
   978  00FC94                     _dispshright:
   979                           	opt stack 0
   980  00FC94  05                 	db	5
   981  00FC95                     __end_of_dispshright:
   982                           	opt stack 0
   983  00FC95                     _dispcursor:
   984                           	opt stack 0
   985  00FC95  04                 	db	4
   986  00FC96                     __end_of_dispcursor:
   987                           	opt stack 0
   988  00FC96                     _dispnormal:
   989                           	opt stack 0
   990  00FC96  06                 	db	6
   991  00FC97                     __end_of_dispnormal:
   992                           	opt stack 0
   993  00FC97                     _dsphome:
   994                           	opt stack 0
   995  00FC97  02                 	db	2
   996  00FC98                     __end_of_dsphome:
   997                           	opt stack 0
   998  00FC98                     _dispaddr:
   999                           	opt stack 0
  1000  00FC98  A8                 	db	168
  1001  00FC99                     __end_of_dispaddr:
  1002                           	opt stack 0
  1003  00FC99                     _dispclr:
  1004                           	opt stack 0
  1005  00FC99  01                 	db	1
  1006  00FC9A                     __end_of_dispclr:
  1007                           	opt stack 0
  1008  00FC9A                     _dispon:
  1009                           	opt stack 0
  1010  00FC9A  0C                 	db	12
  1011  00FC9B                     __end_of_dispon:
  1012                           	opt stack 0
  1013  00FC9B                     _dispfunc3:
  1014                           	opt stack 0
  1015  00FC9B  2C                 	db	44
  1016  00FC9C                     __end_of_dispfunc3:
  1017                           	opt stack 0
  1018  00FC9C                     _dispfunc2:
  1019                           	opt stack 0
  1020  00FC9C  28                 	db	40
  1021  00FC9D                     __end_of_dispfunc2:
  1022                           	opt stack 0
  1023  00FC9D                     _dispfunc1:
  1024                           	opt stack 0
  1025  00FC9D  24                 	db	36
  1026  00FC9E                     __end_of_dispfunc1:
  1027                           	opt stack 0
  1028  00FC9E                     _servmsg:
  1029                           	opt stack 0
  1030  00FC9E  31                 	db	49
  1031  00FC9F  20                 	db	32
  1032  00FCA0  3D                 	db	61
  1033  00FCA1  20                 	db	32
  1034  00FCA2  41                 	db	65
  1035  00FCA3  75                 	db	117
  1036  00FCA4  64                 	db	100
  1037  00FCA5  69                 	db	105
  1038  00FCA6  74                 	db	116
  1039  00FCA7  20                 	db	32
  1040  00FCA8  32                 	db	50
  1041  00FCA9  20                 	db	32
  1042  00FCAA  3D                 	db	61
  1043  00FCAB  20                 	db	32
  1044  00FCAC  53                 	db	83
  1045  00FCAD  65                 	db	101
  1046  00FCAE  6E                 	db	110
  1047  00FCAF  73                 	db	115
  1048  00FCB0  6F                 	db	111
  1049  00FCB1  72                 	db	114
  1050  00FCB2  33                 	db	51
  1051  00FCB3  3D                 	db	61
  1052  00FCB4  48                 	db	72
  1053  00FCB5  6F                 	db	111
  1054  00FCB6  70                 	db	112
  1055  00FCB7  2D                 	db	45
  1056  00FCB8  43                 	db	67
  1057  00FCB9  6F                 	db	111
  1058  00FCBA  69                 	db	105
  1059  00FCBB  6E                 	db	110
  1060  00FCBC  20                 	db	32
  1061  00FCBD  34                 	db	52
  1062  00FCBE  3D                 	db	61
  1063  00FCBF  4E                 	db	78
  1064  00FCC0  6F                 	db	111
  1065  00FCC1  74                 	db	116
  1066  00FCC2  65                 	db	101
  1067  00FCC3  2D                 	db	45
  1068  00FCC4  65                 	db	101
  1069  00FCC5  6E                 	db	110
  1070  00FCC6  35                 	db	53
  1071  00FCC7  3D                 	db	61
  1072  00FCC8  43                 	db	67
  1073  00FCC9  72                 	db	114
  1074  00FCCA  65                 	db	101
  1075  00FCCB  64                 	db	100
  1076  00FCCC  2D                 	db	45
  1077  00FCCD  63                 	db	99
  1078  00FCCE  6C                 	db	108
  1079  00FCCF  72                 	db	114
  1080  00FCD0  20                 	db	32
  1081  00FCD1  36                 	db	54
  1082  00FCD2  3D                 	db	61
  1083  00FCD3  50                 	db	80
  1084  00FCD4  72                 	db	114
  1085  00FCD5  69                 	db	105
  1086  00FCD6  63                 	db	99
  1087  00FCD7  65                 	db	101
  1088  00FCD8  73                 	db	115
  1089  00FCD9  20                 	db	32
  1090  00FCDA  37                 	db	55
  1091  00FCDB  3D                 	db	61
  1092  00FCDC  56                 	db	86
  1093  00FCDD  65                 	db	101
  1094  00FCDE  6E                 	db	110
  1095  00FCDF  64                 	db	100
  1096  00FCE0  20                 	db	32
  1097  00FCE1  73                 	db	115
  1098  00FCE2  65                 	db	101
  1099  00FCE3  74                 	db	116
  1100  00FCE4  75                 	db	117
  1101  00FCE5  70                 	db	112
  1102  00FCE6  20                 	db	32
  1103  00FCE7  38                 	db	56
  1104  00FCE8  3D                 	db	61
  1105  00FCE9  45                 	db	69
  1106  00FCEA  78                 	db	120
  1107  00FCEB  69                 	db	105
  1108  00FCEC  74                 	db	116
  1109  00FCED  00                 	db	0
  1110  00FCEE                     __end_of_servmsg:
  1111                           	opt stack 0
  1112  00FCEE                     _vendsetup:
  1113                           	opt stack 0
  1114  00FCEE  50                 	db	80
  1115  00FCEF  75                 	db	117
  1116  00FCF0  73                 	db	115
  1117  00FCF1  68                 	db	104
  1118  00FCF2  20                 	db	32
  1119  00FCF3  31                 	db	49
  1120  00FCF4  20                 	db	32
  1121  00FCF5  3D                 	db	61
  1122  00FCF6  20                 	db	32
  1123  00FCF7  56                 	db	86
  1124  00FCF8  65                 	db	101
  1125  00FCF9  6E                 	db	110
  1126  00FCFA  64                 	db	100
  1127  00FCFB  20                 	db	32
  1128  00FCFC  54                 	db	84
  1129  00FCFD  69                 	db	105
  1130  00FCFE  6D                 	db	109
  1131  00FCFF  65                 	db	101
  1132  00FD00  2C                 	db	44
  1133  00FD01  20                 	db	32
  1134  00FD02  32                 	db	50
  1135  00FD03  20                 	db	32
  1136  00FD04  3D                 	db	61
  1137  00FD05  20                 	db	32
  1138  00FD06  43                 	db	67
  1139  00FD07  68                 	db	104
  1140  00FD08  61                 	db	97
  1141  00FD09  6E                 	db	110
  1142  00FD0A  20                 	db	32
  1143  00FD0B  4C                 	db	76
  1144  00FD0C  69                 	db	105
  1145  00FD0D  6E                 	db	110
  1146  00FD0E  6B                 	db	107
  1147  00FD0F  2C                 	db	44
  1148  00FD10  20                 	db	32
  1149  00FD11  20                 	db	32
  1150  00FD12  20                 	db	32
  1151  00FD13  20                 	db	32
  1152  00FD14  20                 	db	32
  1153  00FD15  20                 	db	32
  1154  00FD16  33                 	db	51
  1155  00FD17  20                 	db	32
  1156  00FD18  3D                 	db	61
  1157  00FD19  20                 	db	32
  1158  00FD1A  53                 	db	83
  1159  00FD1B  65                 	db	101
  1160  00FD1C  6E                 	db	110
  1161  00FD1D  73                 	db	115
  1162  00FD1E  6F                 	db	111
  1163  00FD1F  72                 	db	114
  1164  00FD20  20                 	db	32
  1165  00FD21  4F                 	db	79
  1166  00FD22  66                 	db	102
  1167  00FD23  66                 	db	102
  1168  00FD24  2C                 	db	44
  1169  00FD25  20                 	db	32
  1170  00FD26  20                 	db	32
  1171  00FD27  20                 	db	32
  1172  00FD28  20                 	db	32
  1173  00FD29  20                 	db	32
  1174  00FD2A  34                 	db	52
  1175  00FD2B  20                 	db	32
  1176  00FD2C  3D                 	db	61
  1177  00FD2D  20                 	db	32
  1178  00FD2E  52                 	db	82
  1179  00FD2F  65                 	db	101
  1180  00FD30  73                 	db	115
  1181  00FD31  65                 	db	101
  1182  00FD32  74                 	db	116
  1183  00FD33  2C                 	db	44
  1184  00FD34  20                 	db	32
  1185  00FD35  38                 	db	56
  1186  00FD36  20                 	db	32
  1187  00FD37  3D                 	db	61
  1188  00FD38  20                 	db	32
  1189  00FD39  65                 	db	101
  1190  00FD3A  78                 	db	120
  1191  00FD3B  69                 	db	105
  1192  00FD3C  74                 	db	116
  1193  00FD3D  00                 	db	0
  1194  00FD3E                     __end_of_vendsetup:
  1195                           	opt stack 0
  1196  00FD3E                     _setnotes:
  1197                           	opt stack 0
  1198  00FD3E  45                 	db	69
  1199  00FD3F  6E                 	db	110
  1200  00FD40  61                 	db	97
  1201  00FD41  62                 	db	98
  1202  00FD42  6C                 	db	108
  1203  00FD43  65                 	db	101
  1204  00FD44  20                 	db	32
  1205  00FD45  2F                 	db	47
  1206  00FD46  20                 	db	32
  1207  00FD47  44                 	db	68
  1208  00FD48  69                 	db	105
  1209  00FD49  73                 	db	115
  1210  00FD4A  61                 	db	97
  1211  00FD4B  62                 	db	98
  1212  00FD4C  6C                 	db	108
  1213  00FD4D  65                 	db	101
  1214  00FD4E  20                 	db	32
  1215  00FD4F  20                 	db	32
  1216  00FD50  20                 	db	32
  1217  00FD51  20                 	db	32
  1218  00FD52  31                 	db	49
  1219  00FD53  20                 	db	32
  1220  00FD54  3D                 	db	61
  1221  00FD55  20                 	db	32
  1222  00FD56  52                 	db	82
  1223  00FD57  31                 	db	49
  1224  00FD58  30                 	db	48
  1225  00FD59  2C                 	db	44
  1226  00FD5A  20                 	db	32
  1227  00FD5B  32                 	db	50
  1228  00FD5C  20                 	db	32
  1229  00FD5D  3D                 	db	61
  1230  00FD5E  20                 	db	32
  1231  00FD5F  52                 	db	82
  1232  00FD60  32                 	db	50
  1233  00FD61  30                 	db	48
  1234  00FD62  20                 	db	32
  1235  00FD63  20                 	db	32
  1236  00FD64  20                 	db	32
  1237  00FD65  20                 	db	32
  1238  00FD66  33                 	db	51
  1239  00FD67  20                 	db	32
  1240  00FD68  3D                 	db	61
  1241  00FD69  20                 	db	32
  1242  00FD6A  52                 	db	82
  1243  00FD6B  35                 	db	53
  1244  00FD6C  30                 	db	48
  1245  00FD6D  2C                 	db	44
  1246  00FD6E  20                 	db	32
  1247  00FD6F  34                 	db	52
  1248  00FD70  20                 	db	32
  1249  00FD71  3D                 	db	61
  1250  00FD72  20                 	db	32
  1251  00FD73  52                 	db	82
  1252  00FD74  31                 	db	49
  1253  00FD75  30                 	db	48
  1254  00FD76  30                 	db	48
  1255  00FD77  20                 	db	32
  1256  00FD78  20                 	db	32
  1257  00FD79  20                 	db	32
  1258  00FD7A  35                 	db	53
  1259  00FD7B  20                 	db	32
  1260  00FD7C  3D                 	db	61
  1261  00FD7D  20                 	db	32
  1262  00FD7E  52                 	db	82
  1263  00FD7F  32                 	db	50
  1264  00FD80  30                 	db	48
  1265  00FD81  30                 	db	48
  1266  00FD82  00                 	db	0
  1267  00FD83                     __end_of_setnotes:
  1268                           	opt stack 0
  1269  00FD83                     _pricesetm2:
  1270                           	opt stack 0
  1271  00FD83  50                 	db	80
  1272  00FD84  72                 	db	114
  1273  00FD85  65                 	db	101
  1274  00FD86  73                 	db	115
  1275  00FD87  73                 	db	115
  1276  00FD88  20                 	db	32
  1277  00FD89  63                 	db	99
  1278  00FD8A  68                 	db	104
  1279  00FD8B  61                 	db	97
  1280  00FD8C  6E                 	db	110
  1281  00FD8D  6E                 	db	110
  1282  00FD8E  65                 	db	101
  1283  00FD8F  6C                 	db	108
  1284  00FD90  20                 	db	32
  1285  00FD91  62                 	db	98
  1286  00FD92  75                 	db	117
  1287  00FD93  74                 	db	116
  1288  00FD94  74                 	db	116
  1289  00FD95  6F                 	db	111
  1290  00FD96  6E                 	db	110
  1291  00FD97  20                 	db	32
  1292  00FD98  20                 	db	32
  1293  00FD99  20                 	db	32
  1294  00FD9A  20                 	db	32
  1295  00FD9B  74                 	db	116
  1296  00FD9C  6F                 	db	111
  1297  00FD9D  20                 	db	32
  1298  00FD9E  73                 	db	115
  1299  00FD9F  65                 	db	101
  1300  00FDA0  74                 	db	116
  1301  00FDA1  20                 	db	32
  1302  00FDA2  70                 	db	112
  1303  00FDA3  72                 	db	114
  1304  00FDA4  69                 	db	105
  1305  00FDA5  63                 	db	99
  1306  00FDA6  65                 	db	101
  1307  00FDA7  20                 	db	32
  1308  00FDA8  20                 	db	32
  1309  00FDA9  20                 	db	32
  1310  00FDAA  20                 	db	32
  1311  00FDAB  20                 	db	32
  1312  00FDAC  20                 	db	32
  1313  00FDAD  53                 	db	83
  1314  00FDAE  65                 	db	101
  1315  00FDAF  72                 	db	114
  1316  00FDB0  76                 	db	118
  1317  00FDB1  69                 	db	105
  1318  00FDB2  63                 	db	99
  1319  00FDB3  65                 	db	101
  1320  00FDB4  20                 	db	32
  1321  00FDB5  3D                 	db	61
  1322  00FDB6  20                 	db	32
  1323  00FDB7  45                 	db	69
  1324  00FDB8  78                 	db	120
  1325  00FDB9  69                 	db	105
  1326  00FDBA  74                 	db	116
  1327  00FDBB  00                 	db	0
  1328  00FDBC                     __end_of_pricesetm2:
  1329                           	opt stack 0
  1330  00FDBC                     _chanlinkm:
  1331                           	opt stack 0
  1332  00FDBC  50                 	db	80
  1333  00FDBD  72                 	db	114
  1334  00FDBE  65                 	db	101
  1335  00FDBF  73                 	db	115
  1336  00FDC0  73                 	db	115
  1337  00FDC1  20                 	db	32
  1338  00FDC2  63                 	db	99
  1339  00FDC3  68                 	db	104
  1340  00FDC4  61                 	db	97
  1341  00FDC5  6E                 	db	110
  1342  00FDC6  6E                 	db	110
  1343  00FDC7  65                 	db	101
  1344  00FDC8  6C                 	db	108
  1345  00FDC9  20                 	db	32
  1346  00FDCA  62                 	db	98
  1347  00FDCB  75                 	db	117
  1348  00FDCC  74                 	db	116
  1349  00FDCD  74                 	db	116
  1350  00FDCE  6F                 	db	111
  1351  00FDCF  6E                 	db	110
  1352  00FDD0  20                 	db	32
  1353  00FDD1  20                 	db	32
  1354  00FDD2  20                 	db	32
  1355  00FDD3  20                 	db	32
  1356  00FDD4  74                 	db	116
  1357  00FDD5  6F                 	db	111
  1358  00FDD6  20                 	db	32
  1359  00FDD7  6C                 	db	108
  1360  00FDD8  69                 	db	105
  1361  00FDD9  6E                 	db	110
  1362  00FDDA  6B                 	db	107
  1363  00FDDB  20                 	db	32
  1364  00FDDC  74                 	db	116
  1365  00FDDD  6F                 	db	111
  1366  00FDDE  20                 	db	32
  1367  00FDDF  20                 	db	32
  1368  00FDE0  20                 	db	32
  1369  00FDE1  20                 	db	32
  1370  00FDE2  20                 	db	32
  1371  00FDE3  20                 	db	32
  1372  00FDE4  53                 	db	83
  1373  00FDE5  65                 	db	101
  1374  00FDE6  72                 	db	114
  1375  00FDE7  76                 	db	118
  1376  00FDE8  69                 	db	105
  1377  00FDE9  63                 	db	99
  1378  00FDEA  65                 	db	101
  1379  00FDEB  20                 	db	32
  1380  00FDEC  3D                 	db	61
  1381  00FDED  20                 	db	32
  1382  00FDEE  45                 	db	69
  1383  00FDEF  78                 	db	120
  1384  00FDF0  69                 	db	105
  1385  00FDF1  74                 	db	116
  1386  00FDF2  00                 	db	0
  1387  00FDF3                     __end_of_chanlinkm:
  1388                           	opt stack 0
  1389  00FDF3                     _hoppcoin:
  1390                           	opt stack 0
  1391  00FDF3  48                 	db	72
  1392  00FDF4  6F                 	db	111
  1393  00FDF5  70                 	db	112
  1394  00FDF6  70                 	db	112
  1395  00FDF7  65                 	db	101
  1396  00FDF8  72                 	db	114
  1397  00FDF9  20                 	db	32
  1398  00FDFA  43                 	db	67
  1399  00FDFB  6F                 	db	111
  1400  00FDFC  69                 	db	105
  1401  00FDFD  6E                 	db	110
  1402  00FDFE  20                 	db	32
  1403  00FDFF  20                 	db	32
  1404  00FE00  20                 	db	32
  1405  00FE01  20                 	db	32
  1406  00FE02  20                 	db	32
  1407  00FE03  20                 	db	32
  1408  00FE04  20                 	db	32
  1409  00FE05  20                 	db	32
  1410  00FE06  20                 	db	32
  1411  00FE07  42                 	db	66
  1412  00FE08  75                 	db	117
  1413  00FE09  74                 	db	116
  1414  00FE0A  74                 	db	116
  1415  00FE0B  6F                 	db	111
  1416  00FE0C  6E                 	db	110
  1417  00FE0D  20                 	db	32
  1418  00FE0E  31                 	db	49
  1419  00FE0F  20                 	db	32
  1420  00FE10  3D                 	db	61
  1421  00FE11  20                 	db	32
  1422  00FE12  2B                 	db	43
  1423  00FE13  20                 	db	32
  1424  00FE14  26                 	db	38
  1425  00FE15  20                 	db	32
  1426  00FE16  32                 	db	50
  1427  00FE17  20                 	db	32
  1428  00FE18  3D                 	db	61
  1429  00FE19  20                 	db	32
  1430  00FE1A  2D                 	db	45
  1431  00FE1B  20                 	db	32
  1432  00FE1C  56                 	db	86
  1433  00FE1D  61                 	db	97
  1434  00FE1E  6C                 	db	108
  1435  00FE1F  75                 	db	117
  1436  00FE20  65                 	db	101
  1437  00FE21  20                 	db	32
  1438  00FE22  3D                 	db	61
  1439  00FE23  20                 	db	32
  1440  00FE24  52                 	db	82
  1441  00FE25  00                 	db	0
  1442  00FE26                     __end_of_hoppcoin:
  1443                           	opt stack 0
  1444  00FE26                     _inscoin:
  1445                           	opt stack 0
  1446  00FE26  49                 	db	73
  1447  00FE27  6E                 	db	110
  1448  00FE28  73                 	db	115
  1449  00FE29  65                 	db	101
  1450  00FE2A  72                 	db	114
  1451  00FE2B  74                 	db	116
  1452  00FE2C  20                 	db	32
  1453  00FE2D  4E                 	db	78
  1454  00FE2E  6F                 	db	111
  1455  00FE2F  74                 	db	116
  1456  00FE30  65                 	db	101
  1457  00FE31  73                 	db	115
  1458  00FE32  20                 	db	32
  1459  00FE33  26                 	db	38
  1460  00FE34  20                 	db	32
  1461  00FE35  50                 	db	80
  1462  00FE36  72                 	db	114
  1463  00FE37  65                 	db	101
  1464  00FE38  73                 	db	115
  1465  00FE39  73                 	db	115
  1466  00FE3A  20                 	db	32
  1467  00FE3B  4C                 	db	76
  1468  00FE3C  69                 	db	105
  1469  00FE3D  67                 	db	103
  1470  00FE3E  68                 	db	104
  1471  00FE3F  74                 	db	116
  1472  00FE40  65                 	db	101
  1473  00FE41  64                 	db	100
  1474  00FE42  20                 	db	32
  1475  00FE43  42                 	db	66
  1476  00FE44  75                 	db	117
  1477  00FE45  74                 	db	116
  1478  00FE46  74                 	db	116
  1479  00FE47  6F                 	db	111
  1480  00FE48  6E                 	db	110
  1481  00FE49  20                 	db	32
  1482  00FE4A  54                 	db	84
  1483  00FE4B  6F                 	db	111
  1484  00FE4C  20                 	db	32
  1485  00FE4D  20                 	db	32
  1486  00FE4E  20                 	db	32
  1487  00FE4F  20                 	db	32
  1488  00FE50  20                 	db	32
  1489  00FE51  20                 	db	32
  1490  00FE52  56                 	db	86
  1491  00FE53  65                 	db	101
  1492  00FE54  6E                 	db	110
  1493  00FE55  64                 	db	100
  1494  00FE56  00                 	db	0
  1495  00FE57                     __end_of_inscoin:
  1496                           	opt stack 0
  1497  00FE57                     _vendtimem:
  1498                           	opt stack 0
  1499  00FE57  50                 	db	80
  1500  00FE58  75                 	db	117
  1501  00FE59  73                 	db	115
  1502  00FE5A  68                 	db	104
  1503  00FE5B  20                 	db	32
  1504  00FE5C  31                 	db	49
  1505  00FE5D  20                 	db	32
  1506  00FE5E  3D                 	db	61
  1507  00FE5F  20                 	db	32
  1508  00FE60  2B                 	db	43
  1509  00FE61  2E                 	db	46
  1510  00FE62  35                 	db	53
  1511  00FE63  20                 	db	32
  1512  00FE64  73                 	db	115
  1513  00FE65  65                 	db	101
  1514  00FE66  63                 	db	99
  1515  00FE67  6F                 	db	111
  1516  00FE68  6E                 	db	110
  1517  00FE69  64                 	db	100
  1518  00FE6A  20                 	db	32
  1519  00FE6B  50                 	db	80
  1520  00FE6C  75                 	db	117
  1521  00FE6D  73                 	db	115
  1522  00FE6E  68                 	db	104
  1523  00FE6F  20                 	db	32
  1524  00FE70  32                 	db	50
  1525  00FE71  20                 	db	32
  1526  00FE72  3D                 	db	61
  1527  00FE73  20                 	db	32
  1528  00FE74  2D                 	db	45
  1529  00FE75  2E                 	db	46
  1530  00FE76  35                 	db	53
  1531  00FE77  20                 	db	32
  1532  00FE78  73                 	db	115
  1533  00FE79  65                 	db	101
  1534  00FE7A  63                 	db	99
  1535  00FE7B  6F                 	db	111
  1536  00FE7C  6E                 	db	110
  1537  00FE7D  64                 	db	100
  1538  00FE7E  20                 	db	32
  1539  00FE7F  00                 	db	0
  1540  00FE80                     __end_of_vendtimem:
  1541                           	opt stack 0
  1542  00FE80                     _setimemsg:
  1543                           	opt stack 0
  1544  00FE80  50                 	db	80
  1545  00FE81  75                 	db	117
  1546  00FE82  73                 	db	115
  1547  00FE83  68                 	db	104
  1548  00FE84  20                 	db	32
  1549  00FE85  63                 	db	99
  1550  00FE86  68                 	db	104
  1551  00FE87  61                 	db	97
  1552  00FE88  6E                 	db	110
  1553  00FE89  6E                 	db	110
  1554  00FE8A  65                 	db	101
  1555  00FE8B  6C                 	db	108
  1556  00FE8C  20                 	db	32
  1557  00FE8D  62                 	db	98
  1558  00FE8E  75                 	db	117
  1559  00FE8F  74                 	db	116
  1560  00FE90  74                 	db	116
  1561  00FE91  6F                 	db	111
  1562  00FE92  6E                 	db	110
  1563  00FE93  20                 	db	32
  1564  00FE94  50                 	db	80
  1565  00FE95  75                 	db	117
  1566  00FE96  73                 	db	115
  1567  00FE97  68                 	db	104
  1568  00FE98  20                 	db	32
  1569  00FE99  73                 	db	115
  1570  00FE9A  65                 	db	101
  1571  00FE9B  72                 	db	114
  1572  00FE9C  76                 	db	118
  1573  00FE9D  69                 	db	105
  1574  00FE9E  63                 	db	99
  1575  00FE9F  65                 	db	101
  1576  00FEA0  20                 	db	32
  1577  00FEA1  74                 	db	116
  1578  00FEA2  6F                 	db	111
  1579  00FEA3  20                 	db	32
  1580  00FEA4  65                 	db	101
  1581  00FEA5  78                 	db	120
  1582  00FEA6  69                 	db	105
  1583  00FEA7  74                 	db	116
  1584  00FEA8  00                 	db	0
  1585  00FEA9                     __end_of_setimemsg:
  1586                           	opt stack 0
  1587  00FEA9                     _initnote:
  1588                           	opt stack 0
  1589  00FEA9  20                 	db	32
  1590  00FEAA  20                 	db	32
  1591  00FEAB  20                 	db	32
  1592  00FEAC  20                 	db	32
  1593  00FEAD  20                 	db	32
  1594  00FEAE  49                 	db	73
  1595  00FEAF  6E                 	db	110
  1596  00FEB0  69                 	db	105
  1597  00FEB1  74                 	db	116
  1598  00FEB2  69                 	db	105
  1599  00FEB3  61                 	db	97
  1600  00FEB4  6C                 	db	108
  1601  00FEB5  69                 	db	105
  1602  00FEB6  7A                 	db	122
  1603  00FEB7  65                 	db	101
  1604  00FEB8  20                 	db	32
  1605  00FEB9  20                 	db	32
  1606  00FEBA  20                 	db	32
  1607  00FEBB  20                 	db	32
  1608  00FEBC  20                 	db	32
  1609  00FEBD  20                 	db	32
  1610  00FEBE  20                 	db	32
  1611  00FEBF  20                 	db	32
  1612  00FEC0  20                 	db	32
  1613  00FEC1  20                 	db	32
  1614  00FEC2  4E                 	db	78
  1615  00FEC3  6F                 	db	111
  1616  00FEC4  74                 	db	116
  1617  00FEC5  65                 	db	101
  1618  00FEC6  20                 	db	32
  1619  00FEC7  52                 	db	82
  1620  00FEC8  65                 	db	101
  1621  00FEC9  61                 	db	97
  1622  00FECA  64                 	db	100
  1623  00FECB  65                 	db	101
  1624  00FECC  72                 	db	114
  1625  00FECD  00                 	db	0
  1626  00FECE                     __end_of_initnote:
  1627                           	opt stack 0
  1628  00FECE                     _chanresetmsg:
  1629                           	opt stack 0
  1630  00FECE  52                 	db	82
  1631  00FECF  65                 	db	101
  1632  00FED0  73                 	db	115
  1633  00FED1  65                 	db	101
  1634  00FED2  74                 	db	116
  1635  00FED3  20                 	db	32
  1636  00FED4  74                 	db	116
  1637  00FED5  6F                 	db	111
  1638  00FED6  20                 	db	32
  1639  00FED7  44                 	db	68
  1640  00FED8  65                 	db	101
  1641  00FED9  66                 	db	102
  1642  00FEDA  61                 	db	97
  1643  00FEDB  75                 	db	117
  1644  00FEDC  6C                 	db	108
  1645  00FEDD  74                 	db	116
  1646  00FEDE  20                 	db	32
  1647  00FEDF  20                 	db	32
  1648  00FEE0  20                 	db	32
  1649  00FEE1  20                 	db	32
  1650  00FEE2  53                 	db	83
  1651  00FEE3  74                 	db	116
  1652  00FEE4  61                 	db	97
  1653  00FEE5  72                 	db	114
  1654  00FEE6  74                 	db	116
  1655  00FEE7  20                 	db	32
  1656  00FEE8  41                 	db	65
  1657  00FEE9  67                 	db	103
  1658  00FEEA  61                 	db	97
  1659  00FEEB  69                 	db	105
  1660  00FEEC  6E                 	db	110
  1661  00FEED  00                 	db	0
  1662  00FEEE                     __end_of_chanresetmsg:
  1663                           	opt stack 0
  1664  00FEEE                     _sensoffmsg:
  1665                           	opt stack 0
  1666  00FEEE  50                 	db	80
  1667  00FEEF  75                 	db	117
  1668  00FEF0  73                 	db	115
  1669  00FEF1  68                 	db	104
  1670  00FEF2  20                 	db	32
  1671  00FEF3  31                 	db	49
  1672  00FEF4  20                 	db	32
  1673  00FEF5  3D                 	db	61
  1674  00FEF6  20                 	db	32
  1675  00FEF7  4F                 	db	79
  1676  00FEF8  6E                 	db	110
  1677  00FEF9  2C                 	db	44
  1678  00FEFA  20                 	db	32
  1679  00FEFB  32                 	db	50
  1680  00FEFC  20                 	db	32
  1681  00FEFD  3D                 	db	61
  1682  00FEFE  20                 	db	32
  1683  00FEFF  4F                 	db	79
  1684  00FF00  66                 	db	102
  1685  00FF01  66                 	db	102
  1686  00FF02  2C                 	db	44
  1687  00FF03  20                 	db	32
  1688  00FF04  38                 	db	56
  1689  00FF05  20                 	db	32
  1690  00FF06  3D                 	db	61
  1691  00FF07  20                 	db	32
  1692  00FF08  45                 	db	69
  1693  00FF09  78                 	db	120
  1694  00FF0A  69                 	db	105
  1695  00FF0B  74                 	db	116
  1696  00FF0C  00                 	db	0
  1697  00FF0D                     __end_of_sensoffmsg:
  1698                           	opt stack 0
  1699  00FF0D                     _noteerr:
  1700                           	opt stack 0
  1701  00FF0D  20                 	db	32
  1702  00FF0E  20                 	db	32
  1703  00FF0F  20                 	db	32
  1704  00FF10  4E                 	db	78
  1705  00FF11  6F                 	db	111
  1706  00FF12  74                 	db	116
  1707  00FF13  65                 	db	101
  1708  00FF14  20                 	db	32
  1709  00FF15  65                 	db	101
  1710  00FF16  72                 	db	114
  1711  00FF17  72                 	db	114
  1712  00FF18  6F                 	db	111
  1713  00FF19  72                 	db	114
  1714  00FF1A  20                 	db	32
  1715  00FF1B  20                 	db	32
  1716  00FF1C  20                 	db	32
  1717  00FF1D  20                 	db	32
  1718  00FF1E  20                 	db	32
  1719  00FF1F  63                 	db	99
  1720  00FF20  6F                 	db	111
  1721  00FF21  64                 	db	100
  1722  00FF22  65                 	db	101
  1723  00FF23  20                 	db	32
  1724  00FF24  3D                 	db	61
  1725  00FF25  20                 	db	32
  1726  00FF26  30                 	db	48
  1727  00FF27  78                 	db	120
  1728  00FF28  00                 	db	0
  1729  00FF29                     __end_of_noteerr:
  1730                           	opt stack 0
  1731  00FF29                     _clrline:
  1732                           	opt stack 0
  1733  00FF29  20                 	db	32
  1734  00FF2A  20                 	db	32
  1735  00FF2B  20                 	db	32
  1736  00FF2C  20                 	db	32
  1737  00FF2D  20                 	db	32
  1738  00FF2E  20                 	db	32
  1739  00FF2F  20                 	db	32
  1740  00FF30  20                 	db	32
  1741  00FF31  20                 	db	32
  1742  00FF32  20                 	db	32
  1743  00FF33  20                 	db	32
  1744  00FF34  20                 	db	32
  1745  00FF35  20                 	db	32
  1746  00FF36  20                 	db	32
  1747  00FF37  20                 	db	32
  1748  00FF38  20                 	db	32
  1749  00FF39  20                 	db	32
  1750  00FF3A  20                 	db	32
  1751  00FF3B  20                 	db	32
  1752  00FF3C  20                 	db	32
  1753  00FF3D  00                 	db	0
  1754  00FF3E                     __end_of_clrline:
  1755                           	opt stack 0
  1756  00FF3E                     _timemsg:
  1757                           	opt stack 0
  1758  00FF3E  54                 	db	84
  1759  00FF3F  69                 	db	105
  1760  00FF40  6D                 	db	109
  1761  00FF41  65                 	db	101
  1762  00FF42  20                 	db	32
  1763  00FF43  69                 	db	105
  1764  00FF44  6E                 	db	110
  1765  00FF45  20                 	db	32
  1766  00FF46  31                 	db	49
  1767  00FF47  2F                 	db	47
  1768  00FF48  32                 	db	50
  1769  00FF49  73                 	db	115
  1770  00FF4A  65                 	db	101
  1771  00FF4B  63                 	db	99
  1772  00FF4C  20                 	db	32
  1773  00FF4D  3D                 	db	61
  1774  00FF4E  20                 	db	32
  1775  00FF4F  00                 	db	0
  1776  00FF50                     __end_of_timemsg:
  1777                           	opt stack 0
  1778  00FF50                     _pricesetmsg:
  1779                           	opt stack 0
  1780  00FF50  20                 	db	32
  1781  00FF51  20                 	db	32
  1782  00FF52  20                 	db	32
  1783  00FF53  50                 	db	80
  1784  00FF54  72                 	db	114
  1785  00FF55  69                 	db	105
  1786  00FF56  63                 	db	99
  1787  00FF57  65                 	db	101
  1788  00FF58  20                 	db	32
  1789  00FF59  73                 	db	115
  1790  00FF5A  65                 	db	101
  1791  00FF5B  74                 	db	116
  1792  00FF5C  20                 	db	32
  1793  00FF5D  6D                 	db	109
  1794  00FF5E  6F                 	db	111
  1795  00FF5F  64                 	db	100
  1796  00FF60  65                 	db	101
  1797  00FF61  00                 	db	0
  1798  00FF62                     __end_of_pricesetmsg:
  1799                           	opt stack 0
  1800  00FF62                     _creditclr:
  1801                           	opt stack 0
  1802  00FF62  43                 	db	67
  1803  00FF63  72                 	db	114
  1804  00FF64  65                 	db	101
  1805  00FF65  64                 	db	100
  1806  00FF66  69                 	db	105
  1807  00FF67  74                 	db	116
  1808  00FF68  73                 	db	115
  1809  00FF69  20                 	db	32
  1810  00FF6A  43                 	db	67
  1811  00FF6B  6C                 	db	108
  1812  00FF6C  65                 	db	101
  1813  00FF6D  61                 	db	97
  1814  00FF6E  72                 	db	114
  1815  00FF6F  65                 	db	101
  1816  00FF70  64                 	db	100
  1817  00FF71  00                 	db	0
  1818  00FF72                     __end_of_creditclr:
  1819                           	opt stack 0
  1820  00FF72                     _dacmsg:
  1821                           	opt stack 0
  1822  00FF72  53                 	db	83
  1823  00FF73  65                 	db	101
  1824  00FF74  6E                 	db	110
  1825  00FF75  73                 	db	115
  1826  00FF76  69                 	db	105
  1827  00FF77  74                 	db	116
  1828  00FF78  69                 	db	105
  1829  00FF79  76                 	db	118
  1830  00FF7A  69                 	db	105
  1831  00FF7B  74                 	db	116
  1832  00FF7C  79                 	db	121
  1833  00FF7D  20                 	db	32
  1834  00FF7E  00                 	db	0
  1835  00FF7F                     __end_of_dacmsg:
  1836                           	opt stack 0
  1837  00FF7F                     _credits:
  1838                           	opt stack 0
  1839  00FF7F  20                 	db	32
  1840  00FF80  20                 	db	32
  1841  00FF81  43                 	db	67
  1842  00FF82  72                 	db	114
  1843  00FF83  65                 	db	101
  1844  00FF84  64                 	db	100
  1845  00FF85  69                 	db	105
  1846  00FF86  74                 	db	116
  1847  00FF87  20                 	db	32
  1848  00FF88  3D                 	db	61
  1849  00FF89  20                 	db	32
  1850  00FF8A  52                 	db	82
  1851  00FF8B  00                 	db	0
  1852  00FF8C                     __end_of_credits:
  1853                           	opt stack 0
  1854  00FF8C                     _chanmsg:
  1855                           	opt stack 0
  1856  00FF8C  20                 	db	32
  1857  00FF8D  20                 	db	32
  1858  00FF8E  20                 	db	32
  1859  00FF8F  43                 	db	67
  1860  00FF90  68                 	db	104
  1861  00FF91  61                 	db	97
  1862  00FF92  6E                 	db	110
  1863  00FF93  6E                 	db	110
  1864  00FF94  65                 	db	101
  1865  00FF95  6C                 	db	108
  1866  00FF96  20                 	db	32
  1867  00FF97  00                 	db	0
  1868  00FF98                     __end_of_chanmsg:
  1869                           	opt stack 0
  1870  00FF98                     _linkmsg:
  1871                           	opt stack 0
  1872  00FF98  6C                 	db	108
  1873  00FF99  69                 	db	105
  1874  00FF9A  6E                 	db	110
  1875  00FF9B  6B                 	db	107
  1876  00FF9C  65                 	db	101
  1877  00FF9D  64                 	db	100
  1878  00FF9E  20                 	db	32
  1879  00FF9F  74                 	db	116
  1880  00FFA0  6F                 	db	111
  1881  00FFA1  20                 	db	32
  1882  00FFA2  3A                 	db	58
  1883  00FFA3  00                 	db	0
  1884  00FFA4                     __end_of_linkmsg:
  1885                           	opt stack 0
  1886  00FFA4                     _sensmsg:
  1887                           	opt stack 0
  1888  00FFA4  53                 	db	83
  1889  00FFA5  65                 	db	101
  1890  00FFA6  6E                 	db	110
  1891  00FFA7  73                 	db	115
  1892  00FFA8  6F                 	db	111
  1893  00FFA9  72                 	db	114
  1894  00FFAA  20                 	db	32
  1895  00FFAB  69                 	db	105
  1896  00FFAC  73                 	db	115
  1897  00FFAD  20                 	db	32
  1898  00FFAE  00                 	db	0
  1899  00FFAF                     __end_of_sensmsg:
  1900                           	opt stack 0
  1901  00FFAF                     _clrmsg:
  1902                           	opt stack 0
  1903  00FFAF  20                 	db	32
  1904  00FFB0  20                 	db	32
  1905  00FFB1  20                 	db	32
  1906  00FFB2  20                 	db	32
  1907  00FFB3  20                 	db	32
  1908  00FFB4  20                 	db	32
  1909  00FFB5  20                 	db	32
  1910  00FFB6  20                 	db	32
  1911  00FFB7  20                 	db	32
  1912  00FFB8  00                 	db	0
  1913  00FFB9                     __end_of_clrmsg:
  1914                           	opt stack 0
  1915  00FFB9                     _disabled:
  1916                           	opt stack 0
  1917  00FFB9  20                 	db	32
  1918  00FFBA  64                 	db	100
  1919  00FFBB  69                 	db	105
  1920  00FFBC  73                 	db	115
  1921  00FFBD  61                 	db	97
  1922  00FFBE  62                 	db	98
  1923  00FFBF  6C                 	db	108
  1924  00FFC0  65                 	db	101
  1925  00FFC1  64                 	db	100
  1926  00FFC2  00                 	db	0
  1927  00FFC3                     __end_of_disabled:
  1928                           	opt stack 0
  1929  00FFC3                     _enabled:
  1930                           	opt stack 0
  1931  00FFC3  20                 	db	32
  1932  00FFC4  65                 	db	101
  1933  00FFC5  6E                 	db	110
  1934  00FFC6  61                 	db	97
  1935  00FFC7  62                 	db	98
  1936  00FFC8  6C                 	db	108
  1937  00FFC9  65                 	db	101
  1938  00FFCA  64                 	db	100
  1939  00FFCB  20                 	db	32
  1940  00FFCC  00                 	db	0
  1941  00FFCD                     __end_of_enabled:
  1942                           	opt stack 0
  1943  00FFCD                     _tenrand:
  1944                           	opt stack 0
  1945  00FFCD  20                 	db	32
  1946  00FFCE  20                 	db	32
  1947  00FFCF  20                 	db	32
  1948  00FFD0  52                 	db	82
  1949  00FFD1  31                 	db	49
  1950  00FFD2  30                 	db	48
  1951  00FFD3  20                 	db	32
  1952  00FFD4  20                 	db	32
  1953  00FFD5  00                 	db	0
  1954  00FFD6                     __end_of_tenrand:
  1955                           	opt stack 0
  1956  00FFD6                     _twohundredrand:
  1957                           	opt stack 0
  1958  00FFD6  20                 	db	32
  1959  00FFD7  20                 	db	32
  1960  00FFD8  52                 	db	82
  1961  00FFD9  32                 	db	50
  1962  00FFDA  30                 	db	48
  1963  00FFDB  30                 	db	48
  1964  00FFDC  20                 	db	32
  1965  00FFDD  00                 	db	0
  1966  00FFDE                     __end_of_twohundredrand:
  1967                           	opt stack 0
  1968  00FFDE                     _hundredrand:
  1969                           	opt stack 0
  1970  00FFDE  20                 	db	32
  1971  00FFDF  20                 	db	32
  1972  00FFE0  52                 	db	82
  1973  00FFE1  31                 	db	49
  1974  00FFE2  30                 	db	48
  1975  00FFE3  30                 	db	48
  1976  00FFE4  20                 	db	32
  1977  00FFE5  00                 	db	0
  1978  00FFE6                     __end_of_hundredrand:
  1979                           	opt stack 0
  1980  00FFE6                     _fiftyrand:
  1981                           	opt stack 0
  1982  00FFE6  20                 	db	32
  1983  00FFE7  20                 	db	32
  1984  00FFE8  52                 	db	82
  1985  00FFE9  35                 	db	53
  1986  00FFEA  30                 	db	48
  1987  00FFEB  20                 	db	32
  1988  00FFEC  20                 	db	32
  1989  00FFED  00                 	db	0
  1990  00FFEE                     __end_of_fiftyrand:
  1991                           	opt stack 0
  1992  00FFEE                     _twentyrand:
  1993                           	opt stack 0
  1994  00FFEE  20                 	db	32
  1995  00FFEF  20                 	db	32
  1996  00FFF0  52                 	db	82
  1997  00FFF1  32                 	db	50
  1998  00FFF2  30                 	db	48
  1999  00FFF3  20                 	db	32
  2000  00FFF4  20                 	db	32
  2001  00FFF5  00                 	db	0
  2002  00FFF6                     __end_of_twentyrand:
  2003                           	opt stack 0
  2004  00FFF6                     _offmsg:
  2005                           	opt stack 0
  2006  00FFF6  4F                 	db	79
  2007  00FFF7  66                 	db	102
  2008  00FFF8  66                 	db	102
  2009  00FFF9  00                 	db	0
  2010  00FFFA                     __end_of_offmsg:
  2011                           	opt stack 0
  2012  00FFFA                     _onmsg:
  2013                           	opt stack 0
  2014  00FFFA  4F                 	db	79
  2015  00FFFB  6E                 	db	110
  2016  00FFFC  20                 	db	32
  2017  00FFFD  00                 	db	0
  2018  00FFFE                     __end_of_onmsg:
  2019                           	opt stack 0
  2020  00FFFE  00                 	db	0	; dummy byte at the end
  2021  0000                     
  2022                           	psect	nvBANK0
  2023  0000AC                     __pnvBANK0:
  2024                           	opt stack 0
  2025  0000AC                     _timer0ReloadVal16bit:
  2026                           	opt stack 0
  2027  0000AC                     	ds	2
  2028  0000AE                     _timer5ReloadVal:
  2029                           	opt stack 0
  2030  0000AE                     	ds	2
  2031  0000B0                     _timer3ReloadVal:
  2032                           	opt stack 0
  2033  0000B0                     	ds	2
  2034  0000B2                     _timer1ReloadVal:
  2035                           	opt stack 0
  2036  0000B2                     	ds	2
  2037  0000                     _RX2PPSbits	set	3725
  2038  0000                     _RB5PPS	set	3828
  2039  0000                     _PPSLOCKbits	set	3744
  2040  0000                     _PPSLOCK	set	3744
  2041  0000                     _PIR4bits	set	3790
  2042  0000                     _PIR7bits	set	3793
  2043  0000                     _IPR0bits	set	3770
  2044  0000                     _PMD5	set	3814
  2045  0000                     _PMD4	set	3813
  2046  0000                     _PMD3	set	3812
  2047  0000                     _PMD2	set	3811
  2048  0000                     _PMD1	set	3810
  2049  0000                     _PMD0	set	3809
  2050  0000                     _OSCTUNE	set	3805
  2051  0000                     _OSCFRQ	set	3806
  2052  0000                     _OSCEN	set	3804
  2053  0000                     _OSCCON3	set	3802
  2054  0000                     _OSCCON1	set	3800
  2055  0000                     _PIR3bits	set	3789
  2056  0000                     _PIR0bits	set	3786
  2057  0000                     _RC6PPS	set	3837
  2058  0000                     _RX1PPSbits	set	3765
  2059  0000                     _PIE0bits	set	3778
  2060  0000                     _CMOUT	set	3901
  2061  0000                     _DAC1CON1	set	3892
  2062  0000                     _DAC1CON0	set	3891
  2063  0000                     _CMOUTbits	set	3901
  2064  0000                     _CM1PCH	set	3900
  2065  0000                     _CM1NCH	set	3899
  2066  0000                     _CM1CON1	set	3898
  2067  0000                     _CM1CON0	set	3897
  2068  0000                     _ODCOND	set	3876
  2069  0000                     _ODCONC	set	3871
  2070  0000                     _ODCONB	set	3863
  2071  0000                     _ODCONA	set	3855
  2072  0000                     _ODCONE	set	3884
  2073  0000                     _WPUC	set	3872
  2074  0000                     _WPUA	set	3856
  2075  0000                     _WPUB	set	3864
  2076  0000                     _WPUE	set	3885
  2077  0000                     _WPUD	set	3877
  2078  0000                     _ANSELA	set	3857
  2079  0000                     _ANSELE	set	3886
  2080  0000                     _ANSELD	set	3878
  2081  0000                     _ANSELB	set	3865
  2082  0000                     _ANSELC	set	3873
  2083  0000                     _BAUD1CONbits	set	3999
  2084  0000                     _LATCbits	set	3973
  2085  0000                     _TX1STAbits	set	3998
  2086  0000                     _PORTA	set	3981
  2087  0000                     _PORTD	set	3984
  2088  0000                     _PR4	set	4022
  2089  0000                     _TMR4	set	4021
  2090  0000                     _T4CONbits	set	4023
  2091  0000                     _T4RSTbits	set	4026
  2092  0000                     _T4HLTbits	set	4024
  2093  0000                     _T4CON	set	4023
  2094  0000                     _T4TMR	set	4021
  2095  0000                     _T4PR	set	4022
  2096  0000                     _T4RST	set	4026
  2097  0000                     _T4HLT	set	4024
  2098  0000                     _T4CLKCON	set	4025
  2099  0000                     _PR2	set	4028
  2100  0000                     _TMR2	set	4027
  2101  0000                     _T2CONbits	set	4029
  2102  0000                     _T2RSTbits	set	4032
  2103  0000                     _T2HLTbits	set	4030
  2104  0000                     _T2CON	set	4029
  2105  0000                     _T2TMR	set	4027
  2106  0000                     _T2PR	set	4028
  2107  0000                     _T2RST	set	4032
  2108  0000                     _T2HLT	set	4030
  2109  0000                     _T2CLKCON	set	4031
  2110  0000                     _T0CON0bits	set	4053
  2111  0000                     _T0CON0	set	4053
  2112  0000                     _TMR0L	set	4051
  2113  0000                     _TMR0H	set	4052
  2114  0000                     _T0CON1	set	4054
  2115  0000                     _T5GCONbits	set	4036
  2116  0000                     _T5CONbits	set	4035
  2117  0000                     _T5CON	set	4035
  2118  0000                     _TMR5L	set	4033
  2119  0000                     _TMR5H	set	4034
  2120  0000                     _T5CLK	set	4038
  2121  0000                     _T5GATE	set	4037
  2122  0000                     _T5GCON	set	4036
  2123  0000                     _T3GCONbits	set	4042
  2124  0000                     _T3CONbits	set	4041
  2125  0000                     _T3CON	set	4041
  2126  0000                     _TMR3L	set	4039
  2127  0000                     _TMR3H	set	4040
  2128  0000                     _T3CLK	set	4044
  2129  0000                     _T3GATE	set	4043
  2130  0000                     _T3GCON	set	4042
  2131  0000                     _T1GCONbits	set	4048
  2132  0000                     _T1CONbits	set	4047
  2133  0000                     _T1CON	set	4047
  2134  0000                     _TMR1L	set	4045
  2135  0000                     _TMR1H	set	4046
  2136  0000                     _T1CLK	set	4050
  2137  0000                     _T1GATE	set	4049
  2138  0000                     _T1GCON	set	4048
  2139  0000                     _NVMDAT	set	3968
  2140  0000                     _NVMADRL	set	3966
  2141  0000                     _NVMADRH	set	3967
  2142  0000                     _NVMCON2	set	3970
  2143  0000                     _TABLAT	set	4085
  2144  0000                     _TBLPTRL	set	4086
  2145  0000                     _TBLPTRH	set	4087
  2146  0000                     _TBLPTRU	set	4088
  2147  0000                     _NVMCON1bits	set	3969
  2148  0000                     _INTCONbits	set	4082
  2149  0000                     _TX1REG	set	3994
  2150  0000                     _RC1REG	set	3993
  2151  0000                     _RC1STAbits	set	3997
  2152  0000                     _SP1BRGH	set	3996
  2153  0000                     _SP1BRGL	set	3995
  2154  0000                     _TX1STA	set	3998
  2155  0000                     _RC1STA	set	3997
  2156  0000                     _BAUD1CON	set	3999
  2157  0000                     _TRISD	set	3979
  2158  0000                     _TRISC	set	3978
  2159  0000                     _TRISB	set	3977
  2160  0000                     _TRISA	set	3976
  2161  0000                     _TRISE	set	3980
  2162  0000                     _LATC	set	3973
  2163  0000                     _LATB	set	3972
  2164  0000                     _LATA	set	3971
  2165  0000                     _LATD	set	3974
  2166  0000                     _LATE	set	3975
  2167  0000                     _LATA6	set	31774
  2168  0000                     _LATA7	set	31775
  2169                           
  2170                           	psect	nvCOMRAMh
  2171  00004C                     __pnvCOMRAMh:
  2172                           	opt stack 0
  2173  00004C                     _count:
  2174                           	opt stack 0
  2175  00004C                     	ds	1
  2176                           
  2177                           ; #config settings
  2178  0000                     
  2179                           	psect	cinit
  2180  011BF8                     __pcinit:
  2181                           	opt stack 0
  2182  011BF8                     start_initialization:
  2183                           	opt stack 0
  2184  011BF8                     __initialization:
  2185                           	opt stack 0
  2186                           
  2187                           ; Initialize objects allocated to COMRAMh (1 bytes)
  2188                           ; load TBLPTR registers with __pidataCOMRAMh
  2189  011BF8  0EE6               	movlw	low __pidataCOMRAMh
  2190  011BFA  6EF6               	movwf	tblptrl,c
  2191  011BFC  0E20               	movlw	high __pidataCOMRAMh
  2192  011BFE  6EF7               	movwf	tblptrh,c
  2193  011C00  0E01               	movlw	low (__pidataCOMRAMh shr (0+16))
  2194  011C02  6EF8               	movwf	tblptru,c
  2195  011C04  0009               	tblrd		*+	;fetch initializer
  2196  011C06  CFF5 F04D          	movff	tablat,__pdataCOMRAMh
  2197                           
  2198                           ; Clear objects allocated to BANK0 (60 bytes)
  2199  011C0A  EE00  F060         	lfsr	0,__pbssBANK0
  2200  011C0E  0E3C               	movlw	60
  2201  011C10                     clear_0:
  2202  011C10  6AEE               	clrf	postinc0,c
  2203  011C12  06E8               	decf	wreg,f,c
  2204  011C14  E1FD               	bnz	clear_0
  2205                           
  2206                           ; Clear objects allocated to COMRAMh (32 bytes)
  2207  011C16  EE00  F02C         	lfsr	0,__pbssCOMRAMh
  2208  011C1A  0E20               	movlw	32
  2209  011C1C                     clear_1:
  2210  011C1C  6AEE               	clrf	postinc0,c
  2211  011C1E  06E8               	decf	wreg,f,c
  2212  011C20  E1FD               	bnz	clear_1
  2213                           
  2214                           ; Clear objects allocated to COMRAMl (1 bytes)
  2215  011C22  6A4E               	clrf	__pbssCOMRAMl& (0+255),c
  2216  011C24                     end_of_initialization:
  2217                           	opt stack 0
  2218  011C24                     __end_of__initialization:
  2219                           	opt stack 0
  2220  011C24  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2221  011C26  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2222  011C28  0100               	movlb	0
  2223  011C2A  EFA6  F085         	goto	_main	;jump to C main() function
  2224                           tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           postinc0	equ	0xFEE
  2229                           wreg	equ	0xFE8
  2230                           
  2231                           	psect	bssCOMRAMh
  2232  00002C                     __pbssCOMRAMh:
  2233                           	opt stack 0
  2234  00002C                     _venflags:
  2235                           	opt stack 0
  2236  00002C                     	ds	3
  2237  00002F                     _hpserial:
  2238                           	opt stack 0
  2239  00002F                     	ds	3
  2240  000032                     _dbcount:
  2241                           	opt stack 0
  2242  000032                     	ds	2
  2243  000034                     _venderr:
  2244                           	opt stack 0
  2245  000034                     	ds	1
  2246  000035                     _senschk:
  2247                           	opt stack 0
  2248  000035                     	ds	1
  2249  000036                     _senspos:
  2250                           	opt stack 0
  2251  000036                     	ds	1
  2252  000037                     _sensorval:
  2253                           	opt stack 0
  2254  000037                     	ds	1
  2255  000038                     _vendprice:
  2256                           	opt stack 0
  2257  000038                     	ds	1
  2258  000039                     _buttons:
  2259                           	opt stack 0
  2260  000039                     	ds	1
  2261  00003A                     _cash:
  2262                           	opt stack 0
  2263  00003A                     	ds	1
  2264  00003B                     _credit:
  2265                           	opt stack 0
  2266  00003B                     	ds	1
  2267  00003C                     _noteen_byte:
  2268                           	opt stack 0
  2269  00003C                     	ds	1
  2270  00003D                     _noteen:
  2271                           	opt stack 0
  2272  00003D                     	ds	1
  2273  00003E                     _mdbflags:
  2274                           	opt stack 0
  2275  00003E                     	ds	1
  2276  00003F                     _chkbyte:
  2277                           	opt stack 0
  2278  00003F                     	ds	1
  2279  000040                     _notebyte:
  2280                           	opt stack 0
  2281  000040                     	ds	1
  2282  000041                     _mcount:
  2283                           	opt stack 0
  2284  000041                     	ds	1
  2285  000042                     _dspposition:
  2286                           	opt stack 0
  2287  000042                     	ds	1
  2288  000043                     _ercode:
  2289                           	opt stack 0
  2290  000043                     	ds	1
  2291  000044                     _stradd:
  2292                           	opt stack 0
  2293  000044                     	ds	1
  2294  000045                     _lcdata:
  2295                           	opt stack 0
  2296  000045                     	ds	1
  2297  000046                     _bflag:
  2298                           	opt stack 0
  2299  000046                     	ds	1
  2300  000047                     _pnvcash:
  2301                           	opt stack 0
  2302  000047                     	ds	3
  2303  00004A                     _pvcash:
  2304                           	opt stack 0
  2305  00004A                     	ds	2
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           
  2313                           	psect	dataCOMRAMh
  2314  00004D                     __pdataCOMRAMh:
  2315                           	opt stack 0
  2316  00004D                     _notenum:
  2317                           	opt stack 0
  2318  00004D                     	ds	1
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           
  2326                           	psect	bssCOMRAMl
  2327  00004E                     __pbssCOMRAMl:
  2328                           	opt stack 0
  2329  00004E                     _cctflags:
  2330                           	opt stack 0
  2331  00004E                     	ds	1
  2332                           tblptru	equ	0xFF8
  2333                           tblptrh	equ	0xFF7
  2334                           tblptrl	equ	0xFF6
  2335                           tablat	equ	0xFF5
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           
  2339                           	psect	bssBANK0
  2340  000060                     __pbssBANK0:
  2341                           	opt stack 0
  2342  000060                     _mdbdata:
  2343                           	opt stack 0
  2344  000060                     	ds	32
  2345  000080                     _tvends:
  2346                           	opt stack 0
  2347  000080                     	ds	8
  2348  000088                     _nvcash:
  2349                           	opt stack 0
  2350  000088                     	ds	3
  2351  00008B                     _hexnum:
  2352                           	opt stack 0
  2353  00008B                     	ds	3
  2354  00008E                     _vcashout:
  2355                           	opt stack 0
  2356  00008E                     	ds	2
  2357  000090                     _vcash:
  2358                           	opt stack 0
  2359  000090                     	ds	2
  2360  000092                     _change:
  2361                           	opt stack 0
  2362  000092                     	ds	1
  2363  000093                     _command:
  2364                           	opt stack 0
  2365  000093                     	ds	1
  2366  000094                     _nobytes:
  2367                           	opt stack 0
  2368  000094                     	ds	1
  2369  000095                     _dest:
  2370                           	opt stack 0
  2371  000095                     	ds	1
  2372  000096                     _mdbtxbyte:
  2373                           	opt stack 0
  2374  000096                     	ds	1
  2375  000097                     _errorflags:
  2376                           	opt stack 0
  2377  000097                     	ds	1
  2378  000098                     _slvadd:
  2379                           	opt stack 0
  2380  000098                     	ds	1
  2381  000099                     _lcdaddress:
  2382                           	opt stack 0
  2383  000099                     	ds	1
  2384  00009A                     _lcdline:
  2385                           	opt stack 0
  2386  00009A                     	ds	1
  2387  00009B                     _lcdfunc:
  2388                           	opt stack 0
  2389  00009B                     	ds	1
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           
  2397                           	psect	cstackBANK0
  2398  00009C                     __pcstackBANK0:
  2399                           	opt stack 0
  2400  00009C                     ??_lcd_init:
  2401  00009C                     ??_Link_chan:
  2402  00009C                     off_sens@channel:
  2403                           	opt stack 0
  2404  00009C                     Reset_settings@chanlinkbits:
  2405                           	opt stack 0
  2406  00009C                     displ_hex@value:
  2407                           	opt stack 0
  2408                           
  2409                           ; 8 bytes @ 0x0
  2410  00009C                     	ds	1
  2411  00009D                     off_sens@chanbit:
  2412                           	opt stack 0
  2413                           
  2414                           ; 1 bytes @ 0x1
  2415  00009D                     	ds	1
  2416  00009E                     Link_chan@chanbit:
  2417                           	opt stack 0
  2418  00009E                     off_sens@senseflags:
  2419                           	opt stack 0
  2420                           
  2421                           ; 1 bytes @ 0x2
  2422  00009E                     	ds	1
  2423  00009F                     Link_chan@channel:
  2424                           	opt stack 0
  2425                           
  2426                           ; 1 bytes @ 0x3
  2427  00009F                     	ds	1
  2428  0000A0                     Link_chan@linkflags:
  2429                           	opt stack 0
  2430                           
  2431                           ; 1 bytes @ 0x4
  2432  0000A0                     	ds	1
  2433  0000A1                     ??_Chan_link:
  2434                           
  2435                           ; 1 bytes @ 0x5
  2436  0000A1                     	ds	3
  2437  0000A4                     displ_hex@hexnumsave:
  2438                           	opt stack 0
  2439                           
  2440                           ; 3 bytes @ 0x8
  2441  0000A4                     	ds	3
  2442  0000A7                     displ_hex@i:
  2443                           	opt stack 0
  2444                           
  2445                           ; 1 bytes @ 0xB
  2446  0000A7                     	ds	1
  2447  0000A8                     ??_set_price:
  2448  0000A8                     ??_Vend_timeset:
  2449  0000A8                     Hopper_coin@coinval:
  2450                           	opt stack 0
  2451  0000A8                     Sensor_set@dacpos:
  2452                           	opt stack 0
  2453                           
  2454                           ; 1 bytes @ 0xC
  2455  0000A8                     	ds	2
  2456  0000AA                     set_price@buttons:
  2457                           	opt stack 0
  2458  0000AA                     Vend_timeset@chantime:
  2459                           	opt stack 0
  2460                           
  2461                           ; 1 bytes @ 0xE
  2462  0000AA                     	ds	1
  2463  0000AB                     set_price@channel:
  2464                           	opt stack 0
  2465  0000AB                     Vend_timeset@channel:
  2466                           	opt stack 0
  2467                           
  2468                           ; 1 bytes @ 0xF
  2469  0000AB                     	ds	1
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           
  2477                           	psect	cstackCOMRAMh
  2478  00000B                     __pcstackCOMRAMh:
  2479                           	opt stack 0
  2480  00000B                     ??_INTERRUPT_InterruptManagerHigh:
  2481  00000B                     
  2482                           ; 1 bytes @ 0x0
  2483  00000B                     	ds	18
  2484  00001D                     ??_TMR3_Initialize:
  2485  00001D                     ??_TMR5_Initialize:
  2486  00001D                     ??_TMR1_Initialize:
  2487  00001D                     ??_TMR0_Initialize:
  2488  00001D                     ??_butin:
  2489  00001D                     ?___ltdiv:
  2490                           	opt stack 0
  2491  00001D                     ?___ltmod:
  2492                           	opt stack 0
  2493  00001D                     EUSART1_Write@txData:
  2494                           	opt stack 0
  2495  00001D                     DAC1_SetOutput@inputData:
  2496                           	opt stack 0
  2497  00001D                     read_busy@savelate:
  2498                           	opt stack 0
  2499  00001D                     Read_Service@senval:
  2500                           	opt stack 0
  2501  00001D                     get_channel@channel:
  2502                           	opt stack 0
  2503  00001D                     init_mdbdata@initdata:
  2504                           	opt stack 0
  2505  00001D                     DATAEE_WriteByte@bAdd:
  2506                           	opt stack 0
  2507  00001D                     DATAEE_ReadByte@bAdd:
  2508                           	opt stack 0
  2509  00001D                     ___ltdiv@dividend:
  2510                           	opt stack 0
  2511  00001D                     ___ltmod@dividend:
  2512                           	opt stack 0
  2513                           
  2514                           ; 3 bytes @ 0x12
  2515  00001D                     	ds	1
  2516  00001E                     read_busy@savelatd:
  2517                           	opt stack 0
  2518  00001E                     butin@butons:
  2519                           	opt stack 0
  2520  00001E                     get_channel@butons:
  2521                           	opt stack 0
  2522  00001E                     init_mdbdata@i:
  2523                           	opt stack 0
  2524  00001E                     mdb_transmit@txbyte:
  2525                           	opt stack 0
  2526                           
  2527                           ; 1 bytes @ 0x13
  2528  00001E                     	ds	1
  2529  00001F                     ??_mdb_unlock:
  2530  00001F                     ??_butindb:
  2531  00001F                     DATAEE_WriteByte@bData:
  2532                           	opt stack 0
  2533  00001F                     lcd_write@savelatd:
  2534                           	opt stack 0
  2535  00001F                     mdb_comm@mcount:
  2536                           	opt stack 0
  2537  00001F                     Init_vendmem@chanlinkbits:
  2538                           	opt stack 0
  2539  00001F                     Read_NVstore@storeadd:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0x14
  2543  00001F                     	ds	1
  2544  000020                     DATAEE_WriteByte@GIEBitValue:
  2545                           	opt stack 0
  2546  000020                     lcd_write@lcdata:
  2547                           	opt stack 0
  2548  000020                     mdb_comm@slvadd:
  2549                           	opt stack 0
  2550  000020                     ___ltdiv@divisor:
  2551                           	opt stack 0
  2552  000020                     ___ltmod@divisor:
  2553                           	opt stack 0
  2554                           
  2555                           ; 3 bytes @ 0x15
  2556  000020                     	ds	1
  2557  000021                     lcd_dispadd@lcdaddress:
  2558                           	opt stack 0
  2559  000021                     credit_subtract@credit:
  2560                           	opt stack 0
  2561  000021                     butindb@butval:
  2562                           	opt stack 0
  2563  000021                     mdb_comm@i:
  2564                           	opt stack 0
  2565  000021                     Init_vendmem@chanlink:
  2566                           	opt stack 0
  2567  000021                     Write_NVstore@storeadd:
  2568                           	opt stack 0
  2569  000021                     Read_NVstore@storemem:
  2570                           	opt stack 0
  2571                           
  2572                           ; 2 bytes @ 0x16
  2573  000021                     	ds	1
  2574  000022                     ??_mdb_reset:
  2575  000022                     lcd_dispadd@lcdatasave:
  2576                           	opt stack 0
  2577  000022                     butindb@butt:
  2578                           	opt stack 0
  2579  000022                     mdb_poll@i:
  2580                           	opt stack 0
  2581                           
  2582                           ; 1 bytes @ 0x17
  2583  000022                     	ds	1
  2584  000023                     lcd_writeC@lcdata:
  2585                           	opt stack 0
  2586  000023                     Init_vendmem@i:
  2587                           	opt stack 0
  2588  000023                     Read_NVstore@storesize:
  2589                           	opt stack 0
  2590  000023                     mdb_reset@i:
  2591                           	opt stack 0
  2592  000023                     ___ltmod@counter:
  2593                           	opt stack 0
  2594  000023                     Write_NVstore@storemem:
  2595                           	opt stack 0
  2596  000023                     ___ltdiv@quotient:
  2597                           	opt stack 0
  2598                           
  2599                           ; 3 bytes @ 0x18
  2600  000023                     	ds	1
  2601  000024                     ??_displ_code:
  2602  000024                     lcd_test@character:
  2603                           	opt stack 0
  2604  000024                     Read_NVstore@i:
  2605                           	opt stack 0
  2606  000024                     mdb_reset@i_3716:
  2607                           	opt stack 0
  2608  000024                     lcd_string@lcdstring:
  2609                           	opt stack 0
  2610                           
  2611                           ; 2 bytes @ 0x19
  2612  000024                     	ds	1
  2613  000025                     ??_mdb_init:
  2614  000025                     Write_NVstore@storesize:
  2615                           	opt stack 0
  2616                           
  2617                           ; 1 bytes @ 0x1A
  2618  000025                     	ds	1
  2619  000026                     displ_code@ercode:
  2620                           	opt stack 0
  2621  000026                     lcd_string@lcdline:
  2622                           	opt stack 0
  2623  000026                     Write_NVstore@i:
  2624                           	opt stack 0
  2625  000026                     ___ltdiv@counter:
  2626                           	opt stack 0
  2627                           
  2628                           ; 1 bytes @ 0x1B
  2629  000026                     	ds	1
  2630  000027                     ??_lcd_string:
  2631  000027                     Update_cashaudit@addcash:
  2632                           	opt stack 0
  2633  000027                     mdb_init@i:
  2634                           	opt stack 0
  2635  000027                     Update_coinsout@coinsout:
  2636                           	opt stack 0
  2637  000027                     displ_hex@hexnum:
  2638                           	opt stack 0
  2639                           
  2640                           ; 3 bytes @ 0x1C
  2641  000027                     	ds	1
  2642  000028                     ??_hopper_pay:
  2643  000028                     credit_add@credit:
  2644                           	opt stack 0
  2645                           
  2646                           ; 1 bytes @ 0x1D
  2647  000028                     	ds	1
  2648  000029                     ??_Clear_cred:
  2649  000029                     ??_Reset_settings:
  2650  000029                     displ_lflags@linkflgs:
  2651                           	opt stack 0
  2652  000029                     displ_sflags@chanel:
  2653                           	opt stack 0
  2654  000029                     displ_nendis@note2disp:
  2655                           	opt stack 0
  2656  000029                     hopper_pay@change:
  2657                           	opt stack 0
  2658  000029                     displ_note@notestring:
  2659                           	opt stack 0
  2660                           
  2661                           ; 2 bytes @ 0x1E
  2662  000029                     	ds	1
  2663  00002A                     displ_sens@dmsgpos:
  2664                           	opt stack 0
  2665  00002A                     displ_lflags@chanel:
  2666                           	opt stack 0
  2667  00002A                     displ_sflags@chanbit:
  2668                           	opt stack 0
  2669  00002A                     displ_time@channel:
  2670                           	opt stack 0
  2671  00002A                     displ_nendis@x:
  2672                           	opt stack 0
  2673  00002A                     displ_credit@cash:
  2674                           	opt stack 0
  2675  00002A                     displ_price@vendprice:
  2676                           	opt stack 0
  2677  00002A                     Update_Hopcoin@direction:
  2678                           	opt stack 0
  2679  00002A                     hopper_pay@outcoins:
  2680                           	opt stack 0
  2681                           
  2682                           ; 1 bytes @ 0x1F
  2683  00002A                     	ds	1
  2684  00002B                     displ_sens@smsgpos:
  2685                           	opt stack 0
  2686  00002B                     displ_lflags@lchan:
  2687                           	opt stack 0
  2688  00002B                     displ_sflags@senseflags:
  2689                           	opt stack 0
  2690  00002B                     displ_time@motortime:
  2691                           	opt stack 0
  2692  00002B                     Update_Hopcoin@newval:
  2693                           	opt stack 0
  2694  00002B                     enable_notes@notenum:
  2695                           	opt stack 0
  2696                           
  2697                           ; 1 bytes @ 0x20
  2698  00002B                     	ds	1
  2699  00002C                     tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           
  2706                           ; 1 bytes @ 0x21
  2707                           
  2708                           	psect	cstackCOMRAMl
  2709  000000                     __pcstackCOMRAMl:
  2710                           	opt stack 0
  2711  000000                     tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           
  2718                           ; 1 bytes @ 0x0
  2719 ;;
  2720 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2721 ;;
  2722 ;; *************** function _main *****************
  2723 ;; Defined at:
  2724 ;;		line 56 in file "main.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels required when called:   13
  2744 ;; This function calls:
  2745 ;;		_CMP1_GetOutputStatus
  2746 ;;		_SYSTEM_Initialize
  2747 ;;		_credit_add
  2748 ;;		_credit_subtract
  2749 ;;		_displ_credit
  2750 ;;		_displ_noteer
  2751 ;;		_enter_service
  2752 ;;		_lcd_init
  2753 ;;		_lcd_string
  2754 ;;		_mdb_init
  2755 ;;		_mdb_poll
  2756 ;;		_vend_init
  2757 ;; This function is called by:
  2758 ;;		Startup code after reset
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text0
  2763  010B4C                     __ptext0:
  2764                           	opt stack 0
  2765  010B4C                     _main:
  2766                           	opt stack 18
  2767                           
  2768                           ;main.c: 59: SYSTEM_Initialize();
  2769                           
  2770                           ;incstack = 0
  2771  010B4C  EC17  F08E         	call	_SYSTEM_Initialize	;wreg free
  2772                           
  2773                           ;main.c: 61: lcd_init();
  2774  010B50  EC64  F086         	call	_lcd_init	;wreg free
  2775                           
  2776                           ;main.c: 62: vend_init();
  2777  010B54  ECB6  F088         	call	_vend_init	;wreg free
  2778  010B58                     l991:
  2779  010B58  F000               	nop		;# 
  2780                           
  2781                           ;main.c: 67: DAC1CON1 = 0x00;
  2782  010B5A  0E00               	movlw	0
  2783  010B5C  010F               	movlb	15	; () banked
  2784  010B5E  6F34               	movwf	52,b	;volatile
  2785                           
  2786                           ; BSR set to: 15
  2787                           ;main.c: 68: if (!CMP1_GetOutputStatus())
  2788  010B60  EC43  F090         	call	_CMP1_GetOutputStatus	;wreg free
  2789  010B64  0900               	iorlw	0
  2790  010B66  B4D8               	btfsc	status,2,c
  2791                           
  2792                           ;main.c: 69: {
  2793                           ;main.c: 70: venflags.service = 1;
  2794  010B68  8E2C               	bsf	_venflags,7,c
  2795                           
  2796                           ;main.c: 72: }
  2797                           ;main.c: 73: DAC1CON1 = sensorval;
  2798  010B6A  C037  FF34         	movff	_sensorval,3892	;volatile
  2799                           
  2800                           ;main.c: 75: if(venflags.service == 1)
  2801  010B6E  BE2C               	btfsc	_venflags,7,c
  2802                           
  2803                           ;main.c: 76: {
  2804                           ;main.c: 77: enter_service();
  2805  010B70  EC22  F088         	call	_enter_service	;wreg free
  2806                           
  2807                           ;main.c: 78: }
  2808                           ;main.c: 80: if(venflags.inscoin == 1)
  2809  010B74  A42C               	btfss	_venflags,2,c
  2810  010B76  D010               	goto	l994
  2811                           
  2812                           ;main.c: 81: {
  2813                           ;main.c: 82: lcd_string(inscoin, line1);
  2814  010B78  0E26               	movlw	low _inscoin
  2815  010B7A  6E24               	movwf	lcd_string@lcdstring,c
  2816  010B7C  0EFE               	movlw	high _inscoin
  2817  010B7E  6E25               	movwf	lcd_string@lcdstring+1,c
  2818  010B80  0E8F               	movlw	low _line1
  2819  010B82  6EF6               	movwf	tblptrl,c
  2820  010B84                     	if	1	;There is more than 1 active tblptr byte
  2821  010B84  0EFC               	movlw	high _line1
  2822  010B86  6EF7               	movwf	tblptrh,c
  2823  010B88                     	endif
  2824  010B88                     	if	1	;There are 3 active tblptr bytes
  2825  010B88  0E00               	movlw	low (_line1 shr (0+16))
  2826  010B8A  6EF8               	movwf	tblptru,c
  2827  010B8C                     	endif
  2828  010B8C  0008               	tblrd		*
  2829  010B8E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  2830  010B92  EC75  F087         	call	_lcd_string	;wreg free
  2831                           
  2832                           ;main.c: 83: venflags.inscoin = 0;
  2833  010B96  942C               	bcf	_venflags,2,c
  2834  010B98                     l994:
  2835                           
  2836                           ;main.c: 84: }
  2837                           ;main.c: 85: if(venflags.initialrun == 1)
  2838  010B98  AA2C               	btfss	_venflags,5,c
  2839  010B9A  D007               	goto	l995
  2840                           
  2841                           ;main.c: 86: {
  2842                           ;main.c: 87: credit_add(0x00);
  2843  010B9C  0E00               	movlw	0
  2844  010B9E  EC25  F08C         	call	_credit_add
  2845                           
  2846                           ;main.c: 88: credit_subtract(0x00);
  2847  010BA2  0E00               	movlw	0
  2848  010BA4  EC7D  F08C         	call	_credit_subtract
  2849                           
  2850                           ;main.c: 89: venflags.initialrun = 0;
  2851  010BA8  9A2C               	bcf	_venflags,5,c
  2852  010BAA                     l995:
  2853                           
  2854                           ;main.c: 91: }
  2855                           ;main.c: 92: if(venflags.credisplay == 1)
  2856  010BAA  B82C               	btfsc	_venflags,4,c
  2857                           
  2858                           ;main.c: 93: {
  2859                           ;main.c: 94: displ_credit();
  2860  010BAC  EC83  F08E         	call	_displ_credit	;wreg free
  2861                           
  2862                           ;main.c: 95: }
  2863                           ;main.c: 97: if(PIR4bits.TMR3IF)
  2864  010BB0  010E               	movlb	14	; () banked
  2865  010BB2  A5CE               	btfss	206,2,b	;volatile
  2866  010BB4  D7D1               	goto	l991
  2867                           
  2868                           ; BSR set to: 14
  2869                           ;main.c: 98: {
  2870                           ;main.c: 99: credit = mdb_poll();
  2871  010BB6  EC00  F080         	call	_mdb_poll	;wreg free
  2872  010BBA  6E3B               	movwf	_credit,c	;volatile
  2873                           
  2874                           ;main.c: 100: if(credit != 0x00)
  2875  010BBC  503B               	movf	_credit,w,c	;volatile
  2876  010BBE  B4D8               	btfsc	status,2,c
  2877  010BC0  D021               	goto	l998
  2878                           
  2879                           ;main.c: 101: {
  2880                           ;main.c: 102: if(mdbflags.noteerr == 1)
  2881  010BC2  B23E               	btfsc	_mdbflags,1,c
  2882  010BC4  D00D               	goto	l1000
  2883  010BC6  D01A               	goto	l999
  2884  010BC8  EC5D  F08B         	call	_mdb_init	;wreg free
  2885  010BCC  D003               	goto	l1006
  2886  010BCE                     l1003:
  2887                           
  2888                           ;main.c: 113: if(mdbflags.vending)
  2889  010BCE  A83E               	btfss	_mdbflags,4,c
  2890                           
  2891                           ;main.c: 117: else
  2892                           ;main.c: 118: {
  2893                           ;main.c: 119: mdb_init();
  2894                           
  2895                           ;main.c: 116: }
  2896                           
  2897                           ;main.c: 114: {
  2898                           ;main.c: 115: credit = 0;
  2899  010BD0  EC5D  F08B         	call	_mdb_init	;wreg free
  2900  010BD4                     l1006:
  2901                           
  2902                           ;main.c: 127: credit = 0;
  2903                           
  2904                           ;main.c: 126: case 0x0C : mdbflags.noteerr == 0;
  2905                           
  2906                           ;main.c: 125: break;
  2907                           
  2908                           ;main.c: 124: credit = 0;
  2909  010BD4  0E00               	movlw	0
  2910  010BD6  6E3B               	movwf	_credit,c	;volatile
  2911                           
  2912                           ;main.c: 128: break;
  2913  010BD8  D7BF               	goto	l991
  2914  010BDA  EC02  F08F         	call	_displ_noteer	;wreg free
  2915                           
  2916                           ;main.c: 130: }
  2917  010BDE  D7BC               	goto	l991
  2918  010BE0                     l1000:
  2919  010BE0  503B               	movf	_credit,w,c	;volatile
  2920                           
  2921                           ; Switch size 1, requested type "space"
  2922                           ; Number of cases is 4, Range of values is 6 to 16
  2923                           ; switch strategies available:
  2924                           ; Name         Instructions Cycles
  2925                           ; simple_byte           13     7 (average)
  2926                           ;	Chosen strategy is simple_byte
  2927  010BE2  0A06               	xorlw	6	; case 6
  2928  010BE4  B4D8               	btfsc	status,2,c
  2929  010BE6  D7F0               	goto	l1001
  2930  010BE8  0A0F               	xorlw	15	; case 9
  2931  010BEA  B4D8               	btfsc	status,2,c
  2932  010BEC  D7F0               	goto	l1003
  2933  010BEE  0A05               	xorlw	5	; case 12
  2934  010BF0  B4D8               	btfsc	status,2,c
  2935  010BF2  D7F0               	goto	l1006
  2936  010BF4  0A1C               	xorlw	28	; case 16
  2937  010BF6  B4D8               	btfsc	status,2,c
  2938  010BF8  D7ED               	goto	l1006
  2939  010BFA  D7EF               	goto	l1008
  2940  010BFC                     l999:
  2941                           
  2942                           ;main.c: 132: else
  2943                           ;main.c: 133: {
  2944                           ;main.c: 134: credit_add(credit);
  2945  010BFC  503B               	movf	_credit,w,c	;volatile
  2946  010BFE  EC25  F08C         	call	_credit_add
  2947                           
  2948                           ;main.c: 135: }
  2949                           ;main.c: 136: }
  2950  010C02  D7AA               	goto	l991
  2951  010C04                     l998:
  2952                           
  2953                           ;main.c: 137: else
  2954                           ;main.c: 138: {
  2955                           ;main.c: 139: if(mdbflags.noteerr == 1)
  2956  010C04  A23E               	btfss	_mdbflags,1,c
  2957  010C06  D7A8               	goto	l991
  2958                           
  2959                           ;main.c: 140: {
  2960                           ;main.c: 141: displ_noteer();
  2961  010C08  EC02  F08F         	call	_displ_noteer	;wreg free
  2962  010C0C  D7A5               	goto	l991
  2963  010C0E                     __end_of_main:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _vend_init *****************
  2974 ;; Defined at:
  2975 ;;		line 26 in file "vend.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    8
  2996 ;; This function calls:
  2997 ;;		_DAC1_SetOutput
  2998 ;;		_DATAEE_ReadByte
  2999 ;;		_Init_vendmem
  3000 ;;		_credit_check
  3001 ;;		_lcd_string
  3002 ;;		_mdb_init
  3003 ;; This function is called by:
  3004 ;;		_main
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text1
  3009  01116C                     __ptext1:
  3010                           	opt stack 0
  3011  01116C                     _vend_init:
  3012                           	opt stack 22
  3013                           
  3014                           ;vend.c: 29: ((uint8_t*) &venderr)[0] = DATAEE_ReadByte(venderrors);
  3015                           
  3016                           ;incstack = 0
  3017  01116C  0E57               	movlw	low _venderrors
  3018  01116E  6EF6               	movwf	tblptrl,c
  3019  011170                     	if	1	;There is more than 1 active tblptr byte
  3020  011170  0EFC               	movlw	high _venderrors
  3021  011172  6EF7               	movwf	tblptrh,c
  3022  011174                     	endif
  3023  011174                     	if	1	;There are 3 active tblptr bytes
  3024  011174  0E00               	movlw	low (_venderrors shr (0+16))
  3025  011176  6EF8               	movwf	tblptru,c
  3026  011178                     	endif
  3027  011178  0009               	tblrd		*+
  3028  01117A  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3029  01117E  000A               	tblrd		*-
  3030  011180  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3031  011184  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  3032  011188  6E34               	movwf	_venderr,c
  3033                           
  3034                           ;vend.c: 31: Init_vendmem();
  3035  01118A  ECBA  F08A         	call	_Init_vendmem	;wreg free
  3036                           
  3037                           ;vend.c: 33: sensorval = DATAEE_ReadByte(sensval);
  3038  01118E  0E53               	movlw	low _sensval
  3039  011190  6EF6               	movwf	tblptrl,c
  3040  011192                     	if	1	;There is more than 1 active tblptr byte
  3041  011192  0EFC               	movlw	high _sensval
  3042  011194  6EF7               	movwf	tblptrh,c
  3043  011196                     	endif
  3044  011196                     	if	1	;There are 3 active tblptr bytes
  3045  011196  0E00               	movlw	low (_sensval shr (0+16))
  3046  011198  6EF8               	movwf	tblptru,c
  3047  01119A                     	endif
  3048  01119A  0009               	tblrd		*+
  3049  01119C  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3050  0111A0  000A               	tblrd		*-
  3051  0111A2  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3052  0111A6  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  3053  0111AA  6E37               	movwf	_sensorval,c	;volatile
  3054                           
  3055                           ;vend.c: 34: DAC1_SetOutput(sensorval);
  3056  0111AC  5037               	movf	_sensorval,w,c	;volatile
  3057  0111AE  EC57  F090         	call	_DAC1_SetOutput
  3058                           
  3059                           ;vend.c: 39: lcd_string(initnote, line1);
  3060  0111B2  0EA9               	movlw	low _initnote
  3061  0111B4  6E24               	movwf	lcd_string@lcdstring,c
  3062  0111B6  0EFE               	movlw	high _initnote
  3063  0111B8  6E25               	movwf	lcd_string@lcdstring+1,c
  3064  0111BA  0E8F               	movlw	low _line1
  3065  0111BC  6EF6               	movwf	tblptrl,c
  3066  0111BE                     	if	1	;There is more than 1 active tblptr byte
  3067  0111BE  0EFC               	movlw	high _line1
  3068  0111C0  6EF7               	movwf	tblptrh,c
  3069  0111C2                     	endif
  3070  0111C2                     	if	1	;There are 3 active tblptr bytes
  3071  0111C2  0E00               	movlw	low (_line1 shr (0+16))
  3072  0111C4  6EF8               	movwf	tblptru,c
  3073  0111C6                     	endif
  3074  0111C6  0008               	tblrd		*
  3075  0111C8  CFF5 F026          	movff	tablat,lcd_string@lcdline
  3076  0111CC  EC75  F087         	call	_lcd_string	;wreg free
  3077                           
  3078                           ;vend.c: 40: mdb_init();
  3079  0111D0  EC5D  F08B         	call	_mdb_init	;wreg free
  3080                           
  3081                           ;vend.c: 42: venflags.service = 0;
  3082  0111D4  9E2C               	bcf	_venflags,7,c
  3083                           
  3084                           ;vend.c: 43: venflags.initialrun = 1;
  3085  0111D6  8A2C               	bsf	_venflags,5,c
  3086                           
  3087                           ;vend.c: 44: if(credit_check() == 0)
  3088  0111D8  EC69  F08F         	call	_credit_check	;wreg free
  3089  0111DC  0900               	iorlw	0
  3090  0111DE  A4D8               	btfss	status,2,c
  3091  0111E0  D005               	goto	l1978
  3092                           
  3093                           ;vend.c: 45: {
  3094                           ;vend.c: 46: venflags.iscredit = 0;
  3095  0111E2  902C               	bcf	_venflags,0,c
  3096                           
  3097                           ;vend.c: 47: venflags.inscoin = 1;
  3098  0111E4  842C               	bsf	_venflags,2,c
  3099                           
  3100                           ;vend.c: 48: venflags.credisplay = 0;
  3101  0111E6  982C               	bcf	_venflags,4,c
  3102                           
  3103                           ;vend.c: 49: mdbflags.noteerr = 0;
  3104  0111E8  923E               	bcf	_mdbflags,1,c
  3105                           
  3106                           ;vend.c: 50: }
  3107  0111EA  0012               	return	
  3108  0111EC                     l1978:
  3109                           
  3110                           ;vend.c: 51: else
  3111                           ;vend.c: 52: {
  3112                           ;vend.c: 53: venflags.iscredit = 1;
  3113  0111EC  802C               	bsf	_venflags,0,c
  3114                           
  3115                           ;vend.c: 54: venflags.inscoin = 0;
  3116  0111EE  942C               	bcf	_venflags,2,c
  3117                           
  3118                           ;vend.c: 55: venflags.credisplay = 1;
  3119  0111F0  882C               	bsf	_venflags,4,c
  3120                           
  3121                           ;vend.c: 56: mdbflags.noteerr = 0;
  3122  0111F2  923E               	bcf	_mdbflags,1,c
  3123  0111F4  0012               	return	
  3124  0111F6                     __end_of_vend_init:
  3125                           	opt stack 0
  3126                           tblptru	equ	0xFF8
  3127                           tblptrh	equ	0xFF7
  3128                           tblptrl	equ	0xFF6
  3129                           tablat	equ	0xFF5
  3130                           postinc0	equ	0xFEE
  3131                           wreg	equ	0xFE8
  3132                           status	equ	0xFD8
  3133                           
  3134 ;; *************** function _mdb_init *****************
  3135 ;; Defined at:
  3136 ;;		line 21 in file "mdb.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  i               1   28[COMRAM] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;Total ram usage:        3 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    6
  3157 ;; This function calls:
  3158 ;;		_DATAEE_ReadByte
  3159 ;;		_eusartmdb_Initialize
  3160 ;;		_mdb_comm
  3161 ;;		_mdb_noten
  3162 ;;		_mdb_reset
  3163 ;;		_mdb_security
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;;		_vend_init
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text2
  3171  0116BA                     __ptext2:
  3172                           	opt stack 0
  3173  0116BA                     _mdb_init:
  3174                           	opt stack 23
  3175                           
  3176                           ;mdb.c: 23: _delay((unsigned long)((250)*(12000000/4000.0)));
  3177                           
  3178                           ;incstack = 0
  3179  0116BA  0E04               	movlw	4
  3180  0116BC  6E26               	movwf	(??_mdb_init+1)& (0+255),c
  3181  0116BE  0ECF               	movlw	207
  3182  0116C0  6E25               	movwf	??_mdb_init& (0+255),c
  3183  0116C2  0E02               	movlw	2
  3184  0116C4                     u3377:
  3185  0116C4  2EE8               	decfsz	wreg,f,c
  3186  0116C6  D7FE               	bra	u3377
  3187  0116C8  2E25               	decfsz	??_mdb_init& (0+255),f,c
  3188  0116CA  D7FC               	bra	u3377
  3189  0116CC  2E26               	decfsz	(??_mdb_init+1)& (0+255),f,c
  3190  0116CE  D7FA               	bra	u3377
  3191                           
  3192                           ;mdb.c: 24: noteen_byte = DATAEE_ReadByte(notebits);
  3193  0116D0  0E55               	movlw	low _notebits
  3194  0116D2  6EF6               	movwf	tblptrl,c
  3195  0116D4                     	if	1	;There is more than 1 active tblptr byte
  3196  0116D4  0EFC               	movlw	high _notebits
  3197  0116D6  6EF7               	movwf	tblptrh,c
  3198  0116D8                     	endif
  3199  0116D8                     	if	1	;There are 3 active tblptr bytes
  3200  0116D8  0E00               	movlw	low (_notebits shr (0+16))
  3201  0116DA  6EF8               	movwf	tblptru,c
  3202  0116DC                     	endif
  3203  0116DC  0009               	tblrd		*+
  3204  0116DE  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  3205  0116E2  000A               	tblrd		*-
  3206  0116E4  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  3207  0116E8  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  3208  0116EC  6E3C               	movwf	_noteen_byte,c	;volatile
  3209                           
  3210                           ;mdb.c: 25: ((uint8_t*) &noteen)[0] = noteen_byte;
  3211  0116EE  C03C  F03D         	movff	_noteen_byte,_noteen	;volatile
  3212                           
  3213                           ;mdb.c: 26: eusartmdb_Initialize();
  3214  0116F2  ECE7  F08F         	call	_eusartmdb_Initialize	;wreg free
  3215                           
  3216                           ;mdb.c: 27: mdbflags.noteerr = 0;
  3217  0116F6  923E               	bcf	_mdbflags,1,c
  3218                           
  3219                           ;mdb.c: 28: mdbflags.isdata = 0;
  3220  0116F8  903E               	bcf	_mdbflags,0,c
  3221                           
  3222                           ;mdb.c: 29: mdb_reset();
  3223  0116FA  EC40  F089         	call	_mdb_reset	;wreg free
  3224                           
  3225                           ;mdb.c: 30: mdb_noten();
  3226  0116FE  ECA6  F08D         	call	_mdb_noten	;wreg free
  3227                           
  3228                           ;mdb.c: 31: mdb_security();
  3229  011702  EC7A  F08F         	call	_mdb_security	;wreg free
  3230                           
  3231                           ;mdb.c: 32: uint8_t i = mdb_comm(note_poll, 0x00);
  3232  011706  0E00               	movlw	0
  3233  011708  6E1F               	movwf	mdb_comm@mcount,c
  3234  01170A  0E88               	movlw	low _note_poll
  3235  01170C  6EF6               	movwf	tblptrl,c
  3236  01170E                     	if	1	;There is more than 1 active tblptr byte
  3237  01170E  0EFC               	movlw	high _note_poll
  3238  011710  6EF7               	movwf	tblptrh,c
  3239  011712                     	endif
  3240  011712                     	if	1	;There are 3 active tblptr bytes
  3241  011712  0E00               	movlw	low (_note_poll shr (0+16))
  3242  011714  6EF8               	movwf	tblptru,c
  3243  011716                     	endif
  3244  011716  0008               	tblrd		*
  3245  011718  50F5               	movf	tablat,w,c
  3246  01171A  ECA3  F082         	call	_mdb_comm
  3247  01171E  6E27               	movwf	mdb_init@i,c
  3248  011720  0012               	return		;funcret
  3249  011722                     __end_of_mdb_init:
  3250                           	opt stack 0
  3251                           tblptru	equ	0xFF8
  3252                           tblptrh	equ	0xFF7
  3253                           tblptrl	equ	0xFF6
  3254                           tablat	equ	0xFF5
  3255                           postinc0	equ	0xFEE
  3256                           wreg	equ	0xFE8
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function _mdb_security *****************
  3260 ;; Defined at:
  3261 ;;		line 151 in file "mdb.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    5
  3282 ;; This function calls:
  3283 ;;		_init_mdbdata
  3284 ;;		_mdb_comm
  3285 ;; This function is called by:
  3286 ;;		_mdb_init
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text3
  3291  011EF4                     __ptext3:
  3292                           	opt stack 0
  3293  011EF4                     _mdb_security:
  3294                           	opt stack 23
  3295                           
  3296                           ;mdb.c: 153: init_mdbdata(0x00);
  3297                           
  3298                           ;incstack = 0
  3299  011EF4  0E00               	movlw	0
  3300  011EF6  EC45  F08F         	call	_init_mdbdata
  3301                           
  3302                           ;mdb.c: 154: mdb_comm(note_security, 0x01);
  3303  011EFA  0E01               	movlw	1
  3304  011EFC  6E1F               	movwf	mdb_comm@mcount,c
  3305  011EFE  0E89               	movlw	low _note_security
  3306  011F00  6EF6               	movwf	tblptrl,c
  3307  011F02                     	if	1	;There is more than 1 active tblptr byte
  3308  011F02  0EFC               	movlw	high _note_security
  3309  011F04  6EF7               	movwf	tblptrh,c
  3310  011F06                     	endif
  3311  011F06                     	if	1	;There are 3 active tblptr bytes
  3312  011F06  0E00               	movlw	low (_note_security shr (0+16))
  3313  011F08  6EF8               	movwf	tblptru,c
  3314  011F0A                     	endif
  3315  011F0A  0008               	tblrd		*
  3316  011F0C  50F5               	movf	tablat,w,c
  3317  011F0E  ECA3  F082         	call	_mdb_comm
  3318  011F12  0012               	return		;funcret
  3319  011F14                     __end_of_mdb_security:
  3320                           	opt stack 0
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           status	equ	0xFD8
  3328                           
  3329 ;; *************** function _mdb_reset *****************
  3330 ;; Defined at:
  3331 ;;		line 36 in file "mdb.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  i               1   24[COMRAM] unsigned char 
  3336 ;;  i               1   25[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      unsigned char 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:        3 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    5
  3353 ;; This function calls:
  3354 ;;		_mdb_comm
  3355 ;; This function is called by:
  3356 ;;		_mdb_init
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text4
  3361  011280                     __ptext4:
  3362                           	opt stack 0
  3363  011280                     _mdb_reset:
  3364                           	opt stack 23
  3365                           
  3366                           ;mdb.c: 41: mdbflags.timeout = 1;
  3367                           
  3368                           ;incstack = 0
  3369  011280  863E               	bsf	_mdbflags,3,c
  3370                           
  3371                           ;mdb.c: 42: while(mdbflags.timeout)
  3372  011282  D00D               	goto	l2664
  3373  011284                     
  3374                           ;mdb.c: 43: {
  3375                           ;mdb.c: 44: uint8_t i = mdb_comm(note_reset, 0x00);
  3376  011284  0E00               	movlw	0
  3377  011286  6E1F               	movwf	mdb_comm@mcount,c
  3378  011288  0E8B               	movlw	low _note_reset
  3379  01128A  6EF6               	movwf	tblptrl,c
  3380  01128C                     	if	1	;There is more than 1 active tblptr byte
  3381  01128C  0EFC               	movlw	high _note_reset
  3382  01128E  6EF7               	movwf	tblptrh,c
  3383  011290                     	endif
  3384  011290                     	if	1	;There are 3 active tblptr bytes
  3385  011290  0E00               	movlw	low (_note_reset shr (0+16))
  3386  011292  6EF8               	movwf	tblptru,c
  3387  011294                     	endif
  3388  011294  0008               	tblrd		*
  3389  011296  50F5               	movf	tablat,w,c
  3390  011298  ECA3  F082         	call	_mdb_comm
  3391  01129C  6E23               	movwf	mdb_reset@i,c
  3392  01129E                     l2664:
  3393  01129E  B63E               	btfsc	_mdbflags,3,c
  3394  0112A0  D7F1               	goto	l2665
  3395  0112A2  F000               	nop		;# 
  3396                           
  3397                           ;mdb.c: 47: uint8_t i = mdb_comm(note_poll, 0x00);
  3398  0112A4  0E00               	movlw	0
  3399  0112A6  6E1F               	movwf	mdb_comm@mcount,c
  3400  0112A8  0E88               	movlw	low _note_poll
  3401  0112AA  6EF6               	movwf	tblptrl,c
  3402  0112AC                     	if	1	;There is more than 1 active tblptr byte
  3403  0112AC  0EFC               	movlw	high _note_poll
  3404  0112AE  6EF7               	movwf	tblptrh,c
  3405  0112B0                     	endif
  3406  0112B0                     	if	1	;There are 3 active tblptr bytes
  3407  0112B0  0E00               	movlw	low (_note_poll shr (0+16))
  3408  0112B2  6EF8               	movwf	tblptru,c
  3409  0112B4                     	endif
  3410  0112B4  0008               	tblrd		*
  3411  0112B6  50F5               	movf	tablat,w,c
  3412  0112B8  ECA3  F082         	call	_mdb_comm
  3413  0112BC  6E24               	movwf	mdb_reset@i_3716,c
  3414                           
  3415                           ;mdb.c: 48: if(mdbdata[--i] == just_reset)
  3416  0112BE  0624               	decf	mdb_reset@i_3716,f,c
  3417  0112C0  5024               	movf	mdb_reset@i_3716,w,c
  3418  0112C2  0D01               	mullw	1
  3419  0112C4  0E60               	movlw	low _mdbdata
  3420  0112C6  24F3               	addwf	prodl,w,c
  3421  0112C8  6ED9               	movwf	fsr2l,c
  3422  0112CA  0E00               	movlw	high _mdbdata
  3423  0112CC  20F4               	addwfc	prodh,w,c
  3424  0112CE  6EDA               	movwf	fsr2h,c
  3425  0112D0  50DF               	movf	indf2,w,c
  3426  0112D2  6E22               	movwf	??_mdb_reset& (0+255),c
  3427  0112D4  0E7E               	movlw	low _just_reset
  3428  0112D6  6EF6               	movwf	tblptrl,c
  3429  0112D8                     	if	1	;There is more than 1 active tblptr byte
  3430  0112D8  0EFC               	movlw	high _just_reset
  3431  0112DA  6EF7               	movwf	tblptrh,c
  3432  0112DC                     	endif
  3433  0112DC                     	if	1	;There are 3 active tblptr bytes
  3434  0112DC  0E00               	movlw	low (_just_reset shr (0+16))
  3435  0112DE  6EF8               	movwf	tblptru,c
  3436  0112E0                     	endif
  3437  0112E0  0008               	tblrd		*
  3438  0112E2  50F5               	movf	tablat,w,c
  3439  0112E4  1822               	xorwf	??_mdb_reset,w,c
  3440  0112E6  A4D8               	btfss	status,2,c
  3441  0112E8  0012               	return	
  3442                           
  3443                           ;mdb.c: 49: {
  3444                           ;mdb.c: 51: i = mdb_comm(note_poll, 0x00);
  3445  0112EA  0E00               	movlw	0
  3446  0112EC  6E1F               	movwf	mdb_comm@mcount,c
  3447  0112EE  0E88               	movlw	low _note_poll
  3448  0112F0  6EF6               	movwf	tblptrl,c
  3449  0112F2                     	if	1	;There is more than 1 active tblptr byte
  3450  0112F2  0EFC               	movlw	high _note_poll
  3451  0112F4  6EF7               	movwf	tblptrh,c
  3452  0112F6                     	endif
  3453  0112F6                     	if	1	;There are 3 active tblptr bytes
  3454  0112F6  0E00               	movlw	low (_note_poll shr (0+16))
  3455  0112F8  6EF8               	movwf	tblptru,c
  3456  0112FA                     	endif
  3457  0112FA  0008               	tblrd		*
  3458  0112FC  50F5               	movf	tablat,w,c
  3459  0112FE  ECA3  F082         	call	_mdb_comm
  3460  011302  6E24               	movwf	mdb_reset@i_3716,c
  3461  011304  0012               	return	
  3462  011306                     __end_of_mdb_reset:
  3463                           	opt stack 0
  3464                           tblptru	equ	0xFF8
  3465                           tblptrh	equ	0xFF7
  3466                           tblptrl	equ	0xFF6
  3467                           tablat	equ	0xFF5
  3468                           prodh	equ	0xFF4
  3469                           prodl	equ	0xFF3
  3470                           postinc0	equ	0xFEE
  3471                           wreg	equ	0xFE8
  3472                           indf2	equ	0xFDF
  3473                           fsr2h	equ	0xFDA
  3474                           fsr2l	equ	0xFD9
  3475                           status	equ	0xFD8
  3476                           
  3477 ;; *************** function _mdb_noten *****************
  3478 ;; Defined at:
  3479 ;;		line 135 in file "mdb.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    5
  3500 ;; This function calls:
  3501 ;;		_init_mdbdata
  3502 ;;		_mdb_comm
  3503 ;; This function is called by:
  3504 ;;		_mdb_init
  3505 ;;		_note_disable
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text5
  3510  011B4C                     __ptext5:
  3511                           	opt stack 0
  3512  011B4C                     _mdb_noten:
  3513                           	opt stack 23
  3514                           
  3515                           ;mdb.c: 138: init_mdbdata(0x00);
  3516                           
  3517                           ;incstack = 0
  3518  011B4C  0E00               	movlw	0
  3519  011B4E  EC45  F08F         	call	_init_mdbdata
  3520                           
  3521                           ;mdb.c: 140: mcount = 3;
  3522  011B52  0E03               	movlw	3
  3523  011B54  6E41               	movwf	_mcount,c
  3524                           
  3525                           ;mdb.c: 142: mdbdata[0] = 0x00;
  3526  011B56  0E00               	movlw	0
  3527  011B58  0100               	movlb	0	; () banked
  3528  011B5A  6F60               	movwf	_mdbdata& (0+255),b
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;mdb.c: 143: mdbdata[1] = 0x00;
  3532  011B5C  0E00               	movlw	0
  3533  011B5E  6F61               	movwf	(_mdbdata+1)& (0+255),b
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;mdb.c: 145: mdbdata[2] = noteen_byte;
  3537  011B60  C03C  F062         	movff	_noteen_byte,_mdbdata+2	;volatile
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;mdb.c: 147: mdbdata[3] = 0x00;
  3541  011B64  0E00               	movlw	0
  3542  011B66  6F63               	movwf	(_mdbdata+3)& (0+255),b
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;mdb.c: 148: mcount = mdb_comm(note_type, mcount);
  3546  011B68  C041  F01F         	movff	_mcount,mdb_comm@mcount
  3547  011B6C  0E87               	movlw	low _note_type
  3548  011B6E  6EF6               	movwf	tblptrl,c
  3549  011B70                     	if	1	;There is more than 1 active tblptr byte
  3550  011B70  0EFC               	movlw	high _note_type
  3551  011B72  6EF7               	movwf	tblptrh,c
  3552  011B74                     	endif
  3553  011B74                     	if	1	;There are 3 active tblptr bytes
  3554  011B74  0E00               	movlw	low (_note_type shr (0+16))
  3555  011B76  6EF8               	movwf	tblptru,c
  3556  011B78                     	endif
  3557  011B78  0008               	tblrd		*
  3558  011B7A  50F5               	movf	tablat,w,c
  3559  011B7C  ECA3  F082         	call	_mdb_comm
  3560  011B80  6E41               	movwf	_mcount,c
  3561                           
  3562                           ;mdb.c: 149: mdbflags.vending = 0;
  3563  011B82  983E               	bcf	_mdbflags,4,c
  3564  011B84  0012               	return		;funcret
  3565  011B86                     __end_of_mdb_noten:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           prodh	equ	0xFF4
  3572                           prodl	equ	0xFF3
  3573                           postinc0	equ	0xFEE
  3574                           wreg	equ	0xFE8
  3575                           indf2	equ	0xFDF
  3576                           fsr2h	equ	0xFDA
  3577                           fsr2l	equ	0xFD9
  3578                           status	equ	0xFD8
  3579                           
  3580 ;; *************** function _eusartmdb_Initialize *****************
  3581 ;; Defined at:
  3582 ;;		line 55 in file "eusart_mdb.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    2
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_mdb_init
  3607 ;;		_cctalk_init
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text6
  3612  011FCE                     __ptext6:
  3613                           	opt stack 0
  3614  011FCE                     _eusartmdb_Initialize:
  3615                           	opt stack 26
  3616                           
  3617                           ;eusart_mdb.c: 60: BAUD1CON = 0x08;
  3618                           
  3619                           ;incstack = 0
  3620  011FCE  0E08               	movlw	8
  3621  011FD0  6E9F               	movwf	3999,c	;volatile
  3622                           
  3623                           ;eusart_mdb.c: 63: RC1STA = 0xD0;
  3624  011FD2  0ED0               	movlw	208
  3625  011FD4  6E9D               	movwf	3997,c	;volatile
  3626                           
  3627                           ;eusart_mdb.c: 66: TX1STA = 0xEC;
  3628  011FD6  0EEC               	movlw	236
  3629  011FD8  6E9E               	movwf	3998,c	;volatile
  3630                           
  3631                           ;eusart_mdb.c: 69: SP1BRGL = 0x38;
  3632  011FDA  0E38               	movlw	56
  3633  011FDC  6E9B               	movwf	3995,c	;volatile
  3634                           
  3635                           ;eusart_mdb.c: 72: SP1BRGH = 0x01;
  3636  011FDE  0E01               	movlw	1
  3637  011FE0  6E9C               	movwf	3996,c	;volatile
  3638  011FE2  0012               	return		;funcret
  3639  011FE4                     __end_of_eusartmdb_Initialize:
  3640                           	opt stack 0
  3641                           tblptru	equ	0xFF8
  3642                           tblptrh	equ	0xFF7
  3643                           tblptrl	equ	0xFF6
  3644                           tablat	equ	0xFF5
  3645                           prodh	equ	0xFF4
  3646                           prodl	equ	0xFF3
  3647                           postinc0	equ	0xFEE
  3648                           wreg	equ	0xFE8
  3649                           indf2	equ	0xFDF
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8
  3653                           
  3654 ;; *************** function _DAC1_SetOutput *****************
  3655 ;; Defined at:
  3656 ;;		line 65 in file "mcc_generated_files/dac1.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  inputData       1    wreg     unsigned char 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  inputData       1   18[COMRAM] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:        1 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    2
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_vend_init
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text7
  3685  0120AE                     __ptext7:
  3686                           	opt stack 0
  3687  0120AE                     _DAC1_SetOutput:
  3688                           	opt stack 27
  3689                           
  3690                           ;incstack = 0
  3691                           ;DAC1_SetOutput@inputData stored from wreg
  3692  0120AE  6E1D               	movwf	DAC1_SetOutput@inputData,c
  3693                           
  3694                           ;dac1.c: 67: DAC1CON1 = inputData;
  3695  0120B0  C01D  FF34         	movff	DAC1_SetOutput@inputData,3892	;volatile
  3696  0120B4  0012               	return		;funcret
  3697  0120B6                     __end_of_DAC1_SetOutput:
  3698                           	opt stack 0
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           postinc0	equ	0xFEE
  3706                           wreg	equ	0xFE8
  3707                           indf2	equ	0xFDF
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _mdb_poll *****************
  3713 ;; Defined at:
  3714 ;;		line 157 in file "mdb.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  i               1   23[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      unsigned char 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    5
  3735 ;; This function calls:
  3736 ;;		_TMR3_Initialize
  3737 ;;		_mdb_comm
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text8
  3744  010000                     __ptext8:
  3745                           	opt stack 0
  3746  010000                     _mdb_poll:
  3747                           	opt stack 25
  3748                           
  3749                           ;mdb.c: 161: TMR3_Initialize();
  3750                           
  3751                           ;incstack = 0
  3752  010000  EC4D  F08E         	call	_TMR3_Initialize	;wreg free
  3753                           
  3754                           ;mdb.c: 162: uint8_t i = mdb_comm(note_poll, 0x00);
  3755  010004  0E00               	movlw	0
  3756  010006  6E1F               	movwf	mdb_comm@mcount,c
  3757  010008  0E88               	movlw	low _note_poll
  3758  01000A  6EF6               	movwf	tblptrl,c
  3759  01000C                     	if	1	;There is more than 1 active tblptr byte
  3760  01000C  0EFC               	movlw	high _note_poll
  3761  01000E  6EF7               	movwf	tblptrh,c
  3762  010010                     	endif
  3763  010010                     	if	1	;There are 3 active tblptr bytes
  3764  010010  0E00               	movlw	low (_note_poll shr (0+16))
  3765  010012  6EF8               	movwf	tblptru,c
  3766  010014                     	endif
  3767  010014  0008               	tblrd		*
  3768  010016  50F5               	movf	tablat,w,c
  3769  010018  ECA3  F082         	call	_mdb_comm
  3770  01001C  6E22               	movwf	mdb_poll@i,c
  3771                           
  3772                           ;mdb.c: 163: notebyte = mdbdata[0];
  3773  01001E  C060  F040         	movff	_mdbdata,_notebyte
  3774                           
  3775                           ;mdb.c: 165: if((mdbdata[0] & 0x80) != 0)
  3776  010022  0100               	movlb	0	; () banked
  3777  010024  AF60               	btfss	_mdbdata& (0+255),7,b
  3778  010026  D050               	goto	l2721
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;mdb.c: 166: {
  3782                           ;mdb.c: 167: notebyte = mdbdata[0] & 0x7F;
  3783  010028  5160               	movf	_mdbdata& (0+255),w,b
  3784  01002A  0B7F               	andlw	127
  3785  01002C  6E40               	movwf	_notebyte,c
  3786                           
  3787                           ;mdb.c: 168: switch(notebyte)
  3788  01002E  D019               	goto	l2711
  3789  010030                     
  3790                           ; BSR set to: 0
  3791  010030  0E0A               	movlw	10
  3792  010032  6E3B               	movwf	_credit,c	;volatile
  3793                           
  3794                           ;mdb.c: 171: return credit;
  3795  010034  503B               	movf	_credit,w,c	;volatile
  3796  010036  0012               	return	
  3797  010038  0E14               	movlw	20
  3798  01003A  6E3B               	movwf	_credit,c	;volatile
  3799                           
  3800                           ;mdb.c: 173: return credit;
  3801  01003C  503B               	movf	_credit,w,c	;volatile
  3802  01003E  0012               	return	
  3803  010040  0E32               	movlw	50
  3804  010042  6E3B               	movwf	_credit,c	;volatile
  3805                           
  3806                           ;mdb.c: 175: return credit;
  3807  010044  503B               	movf	_credit,w,c	;volatile
  3808  010046  0012               	return	
  3809  010048  0E64               	movlw	100
  3810  01004A  6E3B               	movwf	_credit,c	;volatile
  3811                           
  3812                           ;mdb.c: 177: return credit;
  3813  01004C  503B               	movf	_credit,w,c	;volatile
  3814  01004E  0012               	return	
  3815  010050  0EC8               	movlw	200
  3816  010052  6E3B               	movwf	_credit,c	;volatile
  3817                           
  3818                           ;mdb.c: 179: return credit;
  3819  010054  503B               	movf	_credit,w,c	;volatile
  3820  010056  0012               	return	
  3821  010058  0E10               	movlw	16
  3822  01005A  6E3B               	movwf	_credit,c	;volatile
  3823                           
  3824                           ;mdb.c: 181: mdbflags.noteerr = 1;
  3825  01005C  823E               	bsf	_mdbflags,1,c
  3826                           
  3827                           ;mdb.c: 182: return credit;
  3828  01005E  503B               	movf	_credit,w,c	;volatile
  3829                           
  3830                           ;mdb.c: 183: }
  3831  010060  0012               	return	
  3832  010062                     l2711:
  3833  010062  5040               	movf	_notebyte,w,c
  3834                           
  3835                           ; Switch size 1, requested type "space"
  3836                           ; Number of cases is 5, Range of values is 0 to 4
  3837                           ; switch strategies available:
  3838                           ; Name         Instructions Cycles
  3839                           ; simple_byte           16     9 (average)
  3840                           ;	Chosen strategy is simple_byte
  3841  010064  0A00               	xorlw	0	; case 0
  3842  010066  B4D8               	btfsc	status,2,c
  3843  010068  D7E3               	goto	l2712
  3844  01006A  0A01               	xorlw	1	; case 1
  3845  01006C  B4D8               	btfsc	status,2,c
  3846  01006E  D7E4               	goto	l2714
  3847  010070  0A03               	xorlw	3	; case 2
  3848  010072  B4D8               	btfsc	status,2,c
  3849  010074  D7E5               	goto	l2715
  3850  010076  0A01               	xorlw	1	; case 3
  3851  010078  B4D8               	btfsc	status,2,c
  3852  01007A  D7E6               	goto	l2716
  3853  01007C  0A07               	xorlw	7	; case 4
  3854  01007E  B4D8               	btfsc	status,2,c
  3855  010080  D7E7               	goto	l2717
  3856  010082  D7EA               	goto	l2718
  3857  010084  0E00               	movlw	0
  3858  010086  6E3B               	movwf	_credit,c	;volatile
  3859                           
  3860                           ;mdb.c: 191: return credit;
  3861  010088  503B               	movf	_credit,w,c	;volatile
  3862  01008A  0012               	return	
  3863  01008C  0E01               	movlw	1
  3864  01008E  D01A               	goto	L11
  3865  010090  0E02               	movlw	2
  3866  010092  D018               	goto	L11
  3867  010094  0E00               	movlw	0
  3868  010096  6E3B               	movwf	_credit,c	;volatile
  3869                           
  3870                           ;mdb.c: 200: mdbflags.noteerr = 0;
  3871  010098  923E               	bcf	_mdbflags,1,c
  3872                           
  3873                           ;mdb.c: 201: return credit;
  3874  01009A  503B               	movf	_credit,w,c	;volatile
  3875  01009C  0012               	return	
  3876  01009E  0E04               	movlw	4
  3877  0100A0  D011               	goto	L11
  3878  0100A2  0E05               	movlw	5
  3879  0100A4  D00F               	goto	L11
  3880  0100A6  0E06               	movlw	6
  3881  0100A8  D00D               	goto	L11
  3882  0100AA  0E07               	movlw	7
  3883  0100AC  D00B               	goto	L11
  3884  0100AE  0E08               	movlw	8
  3885  0100B0  D009               	goto	L11
  3886  0100B2  0E09               	movlw	9
  3887  0100B4  D007               	goto	L11
  3888  0100B6  0E0A               	movlw	10
  3889  0100B8  D005               	goto	L11
  3890  0100BA  0E0B               	movlw	11
  3891  0100BC  D003               	goto	L11
  3892  0100BE  0E0C               	movlw	12
  3893  0100C0  D001               	goto	L11
  3894  0100C2  0E00               	movlw	0
  3895  0100C4                     L11:
  3896  0100C4  6E3B               	movwf	_credit,c	;volatile
  3897                           
  3898                           ;mdb.c: 230: }
  3899  0100C6  D02A               	goto	l2724
  3900  0100C8                     l2721:
  3901  0100C8  0100               	movlb	0	; () banked
  3902  0100CA  5160               	movf	_mdbdata& (0+255),w,b
  3903                           
  3904                           ; Switch size 1, requested type "space"
  3905                           ; Number of cases is 13, Range of values is 0 to 12
  3906                           ; switch strategies available:
  3907                           ; Name         Instructions Cycles
  3908                           ; simple_byte           40    21 (average)
  3909                           ;	Chosen strategy is simple_byte
  3910  0100CC  0A00               	xorlw	0	; case 0
  3911  0100CE  B4D8               	btfsc	status,2,c
  3912  0100D0  D7D9               	goto	l2722
  3913  0100D2  0A01               	xorlw	1	; case 1
  3914  0100D4  B4D8               	btfsc	status,2,c
  3915  0100D6  D7DA               	goto	l2723
  3916  0100D8  0A03               	xorlw	3	; case 2
  3917  0100DA  B4D8               	btfsc	status,2,c
  3918  0100DC  D7D9               	goto	l2725
  3919  0100DE  0A01               	xorlw	1	; case 3
  3920  0100E0  B4D8               	btfsc	status,2,c
  3921  0100E2  D7D8               	goto	l2726
  3922  0100E4  0A07               	xorlw	7	; case 4
  3923  0100E6  B4D8               	btfsc	status,2,c
  3924  0100E8  D7DA               	goto	l2727
  3925  0100EA  0A01               	xorlw	1	; case 5
  3926  0100EC  B4D8               	btfsc	status,2,c
  3927  0100EE  D7D9               	goto	l2728
  3928  0100F0  0A03               	xorlw	3	; case 6
  3929  0100F2  B4D8               	btfsc	status,2,c
  3930  0100F4  D7D8               	goto	l2729
  3931  0100F6  0A01               	xorlw	1	; case 7
  3932  0100F8  B4D8               	btfsc	status,2,c
  3933  0100FA  D7D7               	goto	l2730
  3934  0100FC  0A0F               	xorlw	15	; case 8
  3935  0100FE  B4D8               	btfsc	status,2,c
  3936  010100  D7D6               	goto	l2731
  3937  010102  0A01               	xorlw	1	; case 9
  3938  010104  B4D8               	btfsc	status,2,c
  3939  010106  D7D5               	goto	l2732
  3940  010108  0A03               	xorlw	3	; case 10
  3941  01010A  B4D8               	btfsc	status,2,c
  3942  01010C  D7D4               	goto	l2733
  3943  01010E  0A01               	xorlw	1	; case 11
  3944  010110  B4D8               	btfsc	status,2,c
  3945  010112  D7D3               	goto	l2734
  3946  010114  0A07               	xorlw	7	; case 12
  3947  010116  B4D8               	btfsc	status,2,c
  3948  010118  D7D2               	goto	l2735
  3949  01011A  D7D3               	goto	l2736
  3950  01011C                     l2724:
  3951                           
  3952                           ;mdb.c: 231: mdbflags.noteerr = 1;
  3953  01011C  823E               	bsf	_mdbflags,1,c
  3954                           
  3955                           ;mdb.c: 232: return credit;
  3956  01011E  503B               	movf	_credit,w,c	;volatile
  3957  010120  0012               	return	
  3958  010122                     __end_of_mdb_poll:
  3959                           	opt stack 0
  3960                           tblptru	equ	0xFF8
  3961                           tblptrh	equ	0xFF7
  3962                           tblptrl	equ	0xFF6
  3963                           tablat	equ	0xFF5
  3964                           prodh	equ	0xFF4
  3965                           prodl	equ	0xFF3
  3966                           postinc0	equ	0xFEE
  3967                           wreg	equ	0xFE8
  3968                           indf2	equ	0xFDF
  3969                           fsr2h	equ	0xFDA
  3970                           fsr2l	equ	0xFD9
  3971                           status	equ	0xFD8
  3972                           
  3973 ;; *************** function _mdb_comm *****************
  3974 ;; Defined at:
  3975 ;;		line 237 in file "mdb.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  slvadd          1    wreg     unsigned char 
  3978 ;;  mcount          1   20[COMRAM] unsigned char 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  slvadd          1   21[COMRAM] unsigned char 
  3981 ;;  i               1   22[COMRAM] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      unsigned char 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  3991 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:        3 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    4
  3998 ;; This function calls:
  3999 ;;		_EUSART1_Read
  4000 ;;		_TMR1_Initialize
  4001 ;;		_init_mdbdata
  4002 ;;		_mdb_on
  4003 ;;		_mdb_transmit
  4004 ;;		_mdb_waitr
  4005 ;; This function is called by:
  4006 ;;		_mdb_init
  4007 ;;		_mdb_reset
  4008 ;;		_mdb_noten
  4009 ;;		_mdb_security
  4010 ;;		_mdb_poll
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text9
  4015  010546                     __ptext9:
  4016                           	opt stack 0
  4017  010546                     _mdb_comm:
  4018                           	opt stack 23
  4019                           
  4020                           ;incstack = 0
  4021                           ;mdb_comm@slvadd stored from wreg
  4022  010546  6E20               	movwf	mdb_comm@slvadd,c
  4023                           
  4024                           ;mdb.c: 240: uint8_t i = 0;
  4025  010548  0E00               	movlw	0
  4026  01054A  6E21               	movwf	mdb_comm@i,c
  4027                           
  4028                           ;mdb.c: 242: TX1STAbits.TX9D = 1;
  4029  01054C  809E               	bsf	3998,0,c	;volatile
  4030                           
  4031                           ;mdb.c: 243: mdb_on();
  4032  01054E  EC70  F090         	call	_mdb_on	;wreg free
  4033                           
  4034                           ;mdb.c: 247: mdb_transmit(slvadd);
  4035  010552  5020               	movf	mdb_comm@slvadd,w,c
  4036  010554  EC2E  F090         	call	_mdb_transmit
  4037                           
  4038                           ;mdb.c: 248: TX1STAbits.TX9D = 0;
  4039  010558  909E               	bcf	3998,0,c	;volatile
  4040                           
  4041                           ;mdb.c: 252: chkbyte = slvadd;
  4042  01055A  C020  F03F         	movff	mdb_comm@slvadd,_chkbyte
  4043                           
  4044                           ;mdb.c: 253: if(mcount != 0)
  4045  01055E  501F               	movf	mdb_comm@mcount,w,c
  4046  010560  B4D8               	btfsc	status,2,c
  4047  010562  D01E               	goto	u1760
  4048                           
  4049                           ;mdb.c: 254: {
  4050                           ;mdb.c: 255: i = mcount + 1;
  4051  010564  281F               	incf	mdb_comm@mcount,w,c
  4052  010566  6E21               	movwf	mdb_comm@i,c
  4053                           
  4054                           ;mdb.c: 256: while(i != 0)
  4055  010568  D018               	goto	l2740
  4056  01056A                     
  4057                           ;mdb.c: 257: {
  4058                           ;mdb.c: 258: mdb_transmit(mdbdata[mcount]);
  4059  01056A  501F               	movf	mdb_comm@mcount,w,c
  4060  01056C  0D01               	mullw	1
  4061  01056E  0E60               	movlw	low _mdbdata
  4062  010570  24F3               	addwf	prodl,w,c
  4063  010572  6ED9               	movwf	fsr2l,c
  4064  010574  0E00               	movlw	high _mdbdata
  4065  010576  20F4               	addwfc	prodh,w,c
  4066  010578  6EDA               	movwf	fsr2h,c
  4067  01057A  50DF               	movf	indf2,w,c
  4068  01057C  EC2E  F090         	call	_mdb_transmit
  4069                           
  4070                           ;mdb.c: 261: chkbyte = chkbyte + mdbdata[mcount];
  4071  010580  501F               	movf	mdb_comm@mcount,w,c
  4072  010582  0D01               	mullw	1
  4073  010584  0E60               	movlw	low _mdbdata
  4074  010586  24F3               	addwf	prodl,w,c
  4075  010588  6ED9               	movwf	fsr2l,c
  4076  01058A  0E00               	movlw	high _mdbdata
  4077  01058C  20F4               	addwfc	prodh,w,c
  4078  01058E  6EDA               	movwf	fsr2h,c
  4079  010590  50DF               	movf	indf2,w,c
  4080  010592  243F               	addwf	_chkbyte,w,c
  4081  010594  6E3F               	movwf	_chkbyte,c
  4082                           
  4083                           ;mdb.c: 262: i--;
  4084  010596  0621               	decf	mdb_comm@i,f,c
  4085                           
  4086                           ;mdb.c: 263: mcount--;
  4087  010598  061F               	decf	mdb_comm@mcount,f,c
  4088  01059A                     l2740:
  4089  01059A  5021               	movf	mdb_comm@i,w,c
  4090  01059C  A4D8               	btfss	status,2,c
  4091  01059E  D7E5               	goto	l2741
  4092  0105A0                     u1760:
  4093                           
  4094                           ;mdb.c: 264: }
  4095                           ;mdb.c: 265: }
  4096                           ;mdb.c: 266: mdb_transmit(chkbyte);
  4097  0105A0  503F               	movf	_chkbyte,w,c
  4098  0105A2  EC2E  F090         	call	_mdb_transmit
  4099                           
  4100                           ;mdb.c: 273: init_mdbdata(0xFF);
  4101  0105A6  0EFF               	movlw	255
  4102  0105A8  EC45  F08F         	call	_init_mdbdata
  4103                           
  4104                           ;mdb.c: 274: TMR1_Initialize();
  4105  0105AC  EC68  F08E         	call	_TMR1_Initialize	;wreg free
  4106                           
  4107                           ;mdb.c: 275: dbcount = 0;
  4108  0105B0  0E00               	movlw	0
  4109  0105B2  6E33               	movwf	_dbcount+1,c
  4110  0105B4  0E00               	movlw	0
  4111  0105B6  6E32               	movwf	_dbcount,c
  4112                           
  4113                           ;mdb.c: 276: mdbflags.isdata = 0;
  4114  0105B8  903E               	bcf	_mdbflags,0,c
  4115                           
  4116                           ;mdb.c: 277: i = 0;
  4117  0105BA  0E00               	movlw	0
  4118  0105BC  6E21               	movwf	mdb_comm@i,c
  4119                           
  4120                           ;mdb.c: 279: while(!PIR4bits.TMR1IF && !mdbflags.isdata)
  4121  0105BE  D01E               	goto	u1790
  4122  0105C0                     
  4123                           ;mdb.c: 280: {
  4124                           ;mdb.c: 282: dbcount++;
  4125  0105C0  4A32               	infsnz	_dbcount,f,c
  4126  0105C2  2A33               	incf	_dbcount+1,f,c
  4127                           
  4128                           ;mdb.c: 283: mdbflags.isdata = 0;
  4129  0105C4  903E               	bcf	_mdbflags,0,c
  4130                           
  4131                           ;mdb.c: 286: while(PIR3bits.RC1IF && !mdbflags.isdata)
  4132  0105C6  D015               	goto	l2745
  4133  0105C8                     
  4134                           ;mdb.c: 287: {
  4135                           ;mdb.c: 290: mdbdata[i] = EUSART1_Read();
  4136  0105C8  5021               	movf	mdb_comm@i,w,c
  4137  0105CA  0D01               	mullw	1
  4138  0105CC  0E60               	movlw	low _mdbdata
  4139  0105CE  24F3               	addwf	prodl,w,c
  4140  0105D0  6ED9               	movwf	fsr2l,c
  4141  0105D2  0E00               	movlw	high _mdbdata
  4142  0105D4  20F4               	addwfc	prodh,w,c
  4143  0105D6  6EDA               	movwf	fsr2h,c
  4144  0105D8  EC1C  F090         	call	_EUSART1_Read	;wreg free
  4145  0105DC  6EDF               	movwf	indf2,c
  4146                           
  4147                           ;mdb.c: 291: mdb_waitr();
  4148  0105DE  EC67  F090         	call	_mdb_waitr	;wreg free
  4149                           
  4150                           ;mdb.c: 293: mdbflags.isdata = RC1STAbits.RX9D;
  4151  0105E2  A09D               	btfss	3997,0,c	;volatile
  4152  0105E4  D002               	bra	u1775
  4153  0105E6  803E               	bsf	_mdbflags,0,c
  4154  0105E8  D001               	bra	u1777
  4155  0105EA                     u1775:
  4156  0105EA  903E               	bcf	_mdbflags,0,c
  4157  0105EC                     u1777:
  4158                           
  4159                           ;mdb.c: 294: TMR1_Initialize();
  4160  0105EC  EC68  F08E         	call	_TMR1_Initialize	;wreg free
  4161                           
  4162                           ;mdb.c: 295: i++;
  4163  0105F0  2A21               	incf	mdb_comm@i,f,c
  4164  0105F2                     l2745:
  4165  0105F2  010E               	movlb	14	; () banked
  4166  0105F4  ABCD               	btfss	205,5,b	;volatile
  4167  0105F6  D002               	goto	u1790
  4168                           
  4169                           ; BSR set to: 14
  4170  0105F8  A03E               	btfss	_mdbflags,0,c
  4171  0105FA  D7E6               	goto	l2746
  4172  0105FC                     u1790:
  4173                           
  4174                           ; BSR set to: 14
  4175                           
  4176                           ; BSR set to: 14
  4177  0105FC  010E               	movlb	14	; () banked
  4178  0105FE  B1CE               	btfsc	206,0,b	;volatile
  4179  010600  D002               	goto	u1810
  4180                           
  4181                           ; BSR set to: 14
  4182  010602  A03E               	btfss	_mdbflags,0,c
  4183  010604  D7DD               	goto	l2744
  4184  010606                     u1810:
  4185                           
  4186                           ; BSR set to: 14
  4187                           ;mdb.c: 297: }
  4188                           ;mdb.c: 299: }
  4189                           ;mdb.c: 301: i--;
  4190                           
  4191                           ; BSR set to: 14
  4192                           
  4193                           ; BSR set to: 14
  4194  010606  0621               	decf	mdb_comm@i,f,c
  4195                           
  4196                           ; BSR set to: 14
  4197                           ;mdb.c: 303: mdbflags.timeout = PIR4bits.TMR1IF;
  4198  010608  A1CE               	btfss	206,0,b	;volatile
  4199  01060A  D002               	bra	u1825
  4200  01060C  863E               	bsf	_mdbflags,3,c
  4201  01060E  D001               	bra	u1827
  4202  010610                     u1825:
  4203  010610  963E               	bcf	_mdbflags,3,c
  4204  010612                     u1827:
  4205                           
  4206                           ;mdb.c: 305: if(mdbflags.isdata == 1 && mdbdata[i] != 0x00)
  4207  010612  A03E               	btfss	_mdbflags,0,c
  4208  010614  D011               	goto	l2753
  4209  010616  5021               	movf	mdb_comm@i,w,c
  4210  010618  0D01               	mullw	1
  4211  01061A  0E60               	movlw	low _mdbdata
  4212  01061C  24F3               	addwf	prodl,w,c
  4213  01061E  6ED9               	movwf	fsr2l,c
  4214  010620  0E00               	movlw	high _mdbdata
  4215  010622  20F4               	addwfc	prodh,w,c
  4216  010624  6EDA               	movwf	fsr2h,c
  4217  010626  50DF               	movf	indf2,w,c
  4218  010628  B4D8               	btfsc	status,2,c
  4219  01062A  D006               	goto	l2753
  4220                           
  4221                           ;mdb.c: 306: {
  4222                           ;mdb.c: 307: TX1STAbits.TX9D = 1;
  4223  01062C  809E               	bsf	3998,0,c	;volatile
  4224                           
  4225                           ;mdb.c: 308: mdb_on();
  4226  01062E  EC70  F090         	call	_mdb_on	;wreg free
  4227                           
  4228                           ;mdb.c: 309: mdb_transmit(0x00);
  4229  010632  0E00               	movlw	0
  4230  010634  EC2E  F090         	call	_mdb_transmit
  4231  010638                     l2753:
  4232                           
  4233                           ;mdb.c: 311: }
  4234                           ;mdb.c: 313: mdb_on();
  4235  010638  EC70  F090         	call	_mdb_on	;wreg free
  4236                           
  4237                           ;mdb.c: 315: return(i);
  4238  01063C  5021               	movf	mdb_comm@i,w,c
  4239  01063E  0012               	return	
  4240  010640                     __end_of_mdb_comm:
  4241                           	opt stack 0
  4242                           tblptru	equ	0xFF8
  4243                           tblptrh	equ	0xFF7
  4244                           tblptrl	equ	0xFF6
  4245                           tablat	equ	0xFF5
  4246                           prodh	equ	0xFF4
  4247                           prodl	equ	0xFF3
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           indf2	equ	0xFDF
  4251                           fsr2h	equ	0xFDA
  4252                           fsr2l	equ	0xFD9
  4253                           status	equ	0xFD8
  4254                           
  4255 ;; *************** function _mdb_waitr *****************
  4256 ;; Defined at:
  4257 ;;		line 339 in file "mdb.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;		None
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      void 
  4264 ;; Registers used:
  4265 ;;		None
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;Total ram usage:        0 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    2
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_mdb_comm
  4282 ;;		_cctalk_read
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text10
  4287  0120CE                     __ptext10:
  4288                           	opt stack 0
  4289  0120CE                     _mdb_waitr:
  4290                           	opt stack 24
  4291                           
  4292                           ;mdb.c: 342: {
  4293                           
  4294                           ;mdb.c: 341: while(BAUD1CONbits.RCIDL == 0)
  4295                           
  4296                           ;incstack = 0
  4297  0120CE  BC9F               	btfsc	3999,6,c	;volatile
  4298  0120D0  0012               	return	
  4299  0120D2  D7FD               	goto	_mdb_waitr
  4300  0120D4                     __end_of_mdb_waitr:
  4301                           	opt stack 0
  4302                           tblptru	equ	0xFF8
  4303                           tblptrh	equ	0xFF7
  4304                           tblptrl	equ	0xFF6
  4305                           tablat	equ	0xFF5
  4306                           prodh	equ	0xFF4
  4307                           prodl	equ	0xFF3
  4308                           postinc0	equ	0xFEE
  4309                           wreg	equ	0xFE8
  4310                           indf2	equ	0xFDF
  4311                           fsr2h	equ	0xFDA
  4312                           fsr2l	equ	0xFD9
  4313                           status	equ	0xFD8
  4314                           
  4315 ;; *************** function _mdb_transmit *****************
  4316 ;; Defined at:
  4317 ;;		line 440 in file "mdb.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  txbyte          1    wreg     unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  txbyte          1   19[COMRAM] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;Total ram usage:        1 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    3
  4338 ;; This function calls:
  4339 ;;		_EUSART1_Write
  4340 ;;		_mdb_waitx
  4341 ;; This function is called by:
  4342 ;;		_mdb_comm
  4343 ;;		_mdb_test
  4344 ;;		_cctalk_comm
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text11
  4349  01205C                     __ptext11:
  4350                           	opt stack 0
  4351  01205C                     _mdb_transmit:
  4352                           	opt stack 23
  4353                           
  4354                           ;incstack = 0
  4355                           ;mdb_transmit@txbyte stored from wreg
  4356  01205C  6E1E               	movwf	mdb_transmit@txbyte,c
  4357                           
  4358                           ;mdb.c: 442: EUSART1_Write(txbyte);
  4359  01205E  501E               	movf	mdb_transmit@txbyte,w,c
  4360  012060  EC35  F090         	call	_EUSART1_Write
  4361                           
  4362                           ;mdb.c: 443: mdb_waitx();
  4363  012064  EC6A  F090         	call	_mdb_waitx	;wreg free
  4364  012068  0012               	return		;funcret
  4365  01206A                     __end_of_mdb_transmit:
  4366                           	opt stack 0
  4367                           tblptru	equ	0xFF8
  4368                           tblptrh	equ	0xFF7
  4369                           tblptrl	equ	0xFF6
  4370                           tablat	equ	0xFF5
  4371                           prodh	equ	0xFF4
  4372                           prodl	equ	0xFF3
  4373                           postinc0	equ	0xFEE
  4374                           wreg	equ	0xFE8
  4375                           indf2	equ	0xFDF
  4376                           fsr2h	equ	0xFDA
  4377                           fsr2l	equ	0xFD9
  4378                           status	equ	0xFD8
  4379                           
  4380 ;; *************** function _mdb_waitx *****************
  4381 ;; Defined at:
  4382 ;;		line 331 in file "mdb.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		None
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    2
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_mdb_transmit
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text12
  4411  0120D4                     __ptext12:
  4412                           	opt stack 0
  4413  0120D4                     _mdb_waitx:
  4414                           	opt stack 23
  4415                           
  4416                           ;mdb.c: 334: {
  4417                           
  4418                           ;mdb.c: 333: while(TX1STAbits.TRMT == 0)
  4419                           
  4420                           ;incstack = 0
  4421  0120D4  B29E               	btfsc	3998,1,c	;volatile
  4422  0120D6  0012               	return	
  4423  0120D8  D7FD               	goto	_mdb_waitx
  4424  0120DA                     __end_of_mdb_waitx:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           postinc0	equ	0xFEE
  4433                           wreg	equ	0xFE8
  4434                           indf2	equ	0xFDF
  4435                           fsr2h	equ	0xFDA
  4436                           fsr2l	equ	0xFD9
  4437                           status	equ	0xFD8
  4438                           
  4439 ;; *************** function _EUSART1_Write *****************
  4440 ;; Defined at:
  4441 ;;		line 93 in file "mcc_generated_files/eusart1.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  txData          1    wreg     unsigned char 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  txData          1   18[COMRAM] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;Total ram usage:        1 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    2
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_mdb_transmit
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text13
  4470  01206A                     __ptext13:
  4471                           	opt stack 0
  4472  01206A                     _EUSART1_Write:
  4473                           	opt stack 23
  4474                           
  4475                           ;incstack = 0
  4476                           ;EUSART1_Write@txData stored from wreg
  4477  01206A  6E1D               	movwf	EUSART1_Write@txData,c
  4478  01206C                     
  4479                           ;eusart1.c: 96: {
  4480                           
  4481                           ;eusart1.c: 95: while(0 == PIR3bits.TX1IF)
  4482  01206C  010E               	movlb	14	; () banked
  4483  01206E  A9CD               	btfss	205,4,b	;volatile
  4484  012070  D7FD               	goto	l6342
  4485                           
  4486                           ; BSR set to: 14
  4487                           ;eusart1.c: 97: }
  4488                           ;eusart1.c: 99: TX1REG = txData;
  4489                           
  4490                           ; BSR set to: 14
  4491  012072  C01D  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  4492                           
  4493                           ; BSR set to: 14
  4494  012076  0012               	return		;funcret
  4495  012078                     __end_of_EUSART1_Write:
  4496                           	opt stack 0
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           prodh	equ	0xFF4
  4502                           prodl	equ	0xFF3
  4503                           postinc0	equ	0xFEE
  4504                           wreg	equ	0xFE8
  4505                           indf2	equ	0xFDF
  4506                           fsr2h	equ	0xFDA
  4507                           fsr2l	equ	0xFD9
  4508                           status	equ	0xFD8
  4509                           
  4510 ;; *************** function _mdb_on *****************
  4511 ;; Defined at:
  4512 ;;		line 318 in file "mdb.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		None
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;Total ram usage:        0 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    2
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_mdb_comm
  4537 ;;		_mdb_test
  4538 ;;		_cctalk_init
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text14
  4543  0120E0                     __ptext14:
  4544                           	opt stack 0
  4545  0120E0                     _mdb_on:
  4546                           	opt stack 24
  4547                           
  4548                           ;mdb.c: 324: LATCbits.LATC0 = 1;
  4549                           
  4550                           ; BSR set to: 14
  4551                           ;incstack = 0
  4552  0120E0  8085               	bsf	3973,0,c	;volatile
  4553  0120E2  0012               	return		;funcret
  4554  0120E4                     __end_of_mdb_on:
  4555                           	opt stack 0
  4556                           tblptru	equ	0xFF8
  4557                           tblptrh	equ	0xFF7
  4558                           tblptrl	equ	0xFF6
  4559                           tablat	equ	0xFF5
  4560                           prodh	equ	0xFF4
  4561                           prodl	equ	0xFF3
  4562                           postinc0	equ	0xFEE
  4563                           wreg	equ	0xFE8
  4564                           indf2	equ	0xFDF
  4565                           fsr2h	equ	0xFDA
  4566                           fsr2l	equ	0xFD9
  4567                           status	equ	0xFD8
  4568                           
  4569 ;; *************** function _init_mdbdata *****************
  4570 ;; Defined at:
  4571 ;;		line 13 in file "mdb.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  initdata        1    wreg     unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  initdata        1   18[COMRAM] unsigned char 
  4576 ;;  i               1   19[COMRAM] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;Total ram usage:        2 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    2
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_mdb_noten
  4597 ;;		_mdb_security
  4598 ;;		_mdb_comm
  4599 ;;		_cctalk_pinenter
  4600 ;;		_cctalk_comm
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text15
  4605  011E8A                     __ptext15:
  4606                           	opt stack 0
  4607  011E8A                     _init_mdbdata:
  4608                           	opt stack 24
  4609                           
  4610                           ;incstack = 0
  4611                           ;init_mdbdata@initdata stored from wreg
  4612  011E8A  6E1D               	movwf	init_mdbdata@initdata,c
  4613                           
  4614                           ;mdb.c: 15: for(uint8_t i = 0;i < 33; i++)
  4615  011E8C  0E00               	movlw	0
  4616  011E8E  6E1E               	movwf	init_mdbdata@i,c
  4617  011E90                     l6554:
  4618  011E90  0E20               	movlw	32
  4619  011E92  641E               	cpfsgt	init_mdbdata@i,c
  4620  011E94  D001               	goto	l2656
  4621  011E96  0012               	return	
  4622  011E98                     l2656:
  4623                           
  4624                           ;mdb.c: 16: {
  4625                           ;mdb.c: 17: mdbdata[i] = initdata;
  4626  011E98  501E               	movf	init_mdbdata@i,w,c
  4627  011E9A  0D01               	mullw	1
  4628  011E9C  0E60               	movlw	low _mdbdata
  4629  011E9E  24F3               	addwf	prodl,w,c
  4630  011EA0  6ED9               	movwf	fsr2l,c
  4631  011EA2  0E00               	movlw	high _mdbdata
  4632  011EA4  20F4               	addwfc	prodh,w,c
  4633  011EA6  6EDA               	movwf	fsr2h,c
  4634  011EA8  C01D  FFDF         	movff	init_mdbdata@initdata,indf2
  4635  011EAC  2A1E               	incf	init_mdbdata@i,f,c
  4636  011EAE  D7F0               	goto	l6554
  4637  011EB0                     __end_of_init_mdbdata:
  4638                           	opt stack 0
  4639                           tblptru	equ	0xFF8
  4640                           tblptrh	equ	0xFF7
  4641                           tblptrl	equ	0xFF6
  4642                           tablat	equ	0xFF5
  4643                           prodh	equ	0xFF4
  4644                           prodl	equ	0xFF3
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           indf2	equ	0xFDF
  4648                           fsr2h	equ	0xFDA
  4649                           fsr2l	equ	0xFD9
  4650                           status	equ	0xFD8
  4651                           
  4652 ;; *************** function _EUSART1_Read *****************
  4653 ;; Defined at:
  4654 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      unsigned char 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;Total ram usage:        0 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; Hardware stack levels required when called:    2
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_mdb_comm
  4679 ;;		_cctalk_read
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text16
  4684  012038                     __ptext16:
  4685                           	opt stack 0
  4686  012038                     _EUSART1_Read:
  4687                           	opt stack 24
  4688                           
  4689                           ;eusart1.c: 78: {
  4690                           
  4691                           ;eusart1.c: 77: while(!PIR3bits.RC1IF)
  4692                           
  4693                           ;incstack = 0
  4694  012038  010E               	movlb	14	; () banked
  4695  01203A  ABCD               	btfss	205,5,b	;volatile
  4696  01203C  D7FD               	goto	_EUSART1_Read
  4697                           
  4698                           ; BSR set to: 14
  4699                           ;eusart1.c: 79: }
  4700                           ;eusart1.c: 82: if(1 == RC1STAbits.OERR)
  4701  01203E  A29D               	btfss	3997,1,c	;volatile
  4702  012040  D002               	goto	l91
  4703                           
  4704                           ; BSR set to: 14
  4705                           ;eusart1.c: 83: {
  4706                           ;eusart1.c: 86: RC1STAbits.CREN = 0;
  4707  012042  989D               	bcf	3997,4,c	;volatile
  4708                           
  4709                           ;eusart1.c: 87: RC1STAbits.CREN = 1;
  4710  012044  889D               	bsf	3997,4,c	;volatile
  4711  012046                     l91:
  4712                           
  4713                           ; BSR set to: 14
  4714                           ;eusart1.c: 88: }
  4715                           ;eusart1.c: 90: return RC1REG;
  4716                           
  4717                           ; BSR set to: 14
  4718  012046  5099               	movf	3993,w,c	;volatile
  4719  012048  0012               	return	
  4720  01204A                     __end_of_EUSART1_Read:
  4721                           	opt stack 0
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           postinc0	equ	0xFEE
  4729                           wreg	equ	0xFE8
  4730                           indf2	equ	0xFDF
  4731                           fsr2h	equ	0xFDA
  4732                           fsr2l	equ	0xFD9
  4733                           status	equ	0xFD8
  4734                           
  4735 ;; *************** function _lcd_init *****************
  4736 ;; Defined at:
  4737 ;;		line 11 in file "lcd.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    8
  4758 ;; This function calls:
  4759 ;;		_hopper_test
  4760 ;;		_lcd_clockE
  4761 ;;		_lcd_test
  4762 ;;		_lcd_write
  4763 ;; This function is called by:
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text17
  4769  010CC8                     __ptext17:
  4770                           	opt stack 0
  4771  010CC8                     _lcd_init:
  4772                           	opt stack 22
  4773                           
  4774                           ;lcd.c: 13: LATE = 0x00;
  4775                           
  4776                           ; BSR set to: 14
  4777                           ;incstack = 0
  4778  010CC8  0E00               	movlw	0
  4779  010CCA  6E87               	movwf	3975,c	;volatile
  4780                           
  4781                           ;lcd.c: 15: LATD = 0x03;
  4782  010CCC  0E03               	movlw	3
  4783  010CCE  6E86               	movwf	3974,c	;volatile
  4784                           
  4785                           ;lcd.c: 16: for(count = 3; count > 0; count-- )
  4786  010CD0  0E03               	movlw	3
  4787  010CD2  6E4C               	movwf	_count,c
  4788  010CD4                     l8770:
  4789  010CD4  504C               	movf	_count,w,c
  4790  010CD6  0A80               	xorlw	128
  4791  010CD8  0F7F               	addlw	-129
  4792  010CDA  A0D8               	btfss	status,0,c
  4793  010CDC  D00D               	goto	u3220
  4794                           
  4795                           ;lcd.c: 17: {
  4796                           ;lcd.c: 18: lcd_clockE();
  4797  010CDE  EC4A  F090         	call	_lcd_clockE	;wreg free
  4798                           
  4799                           ;lcd.c: 19: _delay((unsigned long)((5)*(12000000/4000.0)));
  4800  010CE2  0E14               	movlw	20
  4801  010CE4  0100               	movlb	0	; () banked
  4802  010CE6  6F9C               	movwf	??_lcd_init& (0+255),b
  4803  010CE8  0E79               	movlw	121
  4804  010CEA                     u3387:
  4805  010CEA  2EE8               	decfsz	wreg,f,c
  4806  010CEC  D7FE               	bra	u3387
  4807  010CEE  2F9C               	decfsz	??_lcd_init& (0+255),f,b
  4808  010CF0  D7FC               	bra	u3387
  4809  010CF2  D000               	nop2	
  4810  010CF4  064C               	decf	_count,f,c
  4811  010CF6  D7EE               	goto	l8770
  4812  010CF8                     u3220:
  4813                           
  4814                           ;lcd.c: 21: }
  4815                           ;lcd.c: 22: _delay((unsigned long)((50)*(12000000/4000000.0)));
  4816  010CF8  0E32               	movlw	50
  4817  010CFA                     u3397:
  4818  010CFA  2EE8               	decfsz	wreg,f,c
  4819  010CFC  D7FE               	bra	u3397
  4820                           
  4821                           ;lcd.c: 23: LATD = 0x02;
  4822  010CFE  0E02               	movlw	2
  4823  010D00  6E86               	movwf	3974,c	;volatile
  4824                           
  4825                           ;lcd.c: 24: lcd_clockE();
  4826  010D02  EC4A  F090         	call	_lcd_clockE	;wreg free
  4827                           
  4828                           ;lcd.c: 27: lcd_write(dispfunc3);
  4829  010D06  0E9B               	movlw	low _dispfunc3
  4830  010D08  6EF6               	movwf	tblptrl,c
  4831  010D0A                     	if	1	;There is more than 1 active tblptr byte
  4832  010D0A  0EFC               	movlw	high _dispfunc3
  4833  010D0C  6EF7               	movwf	tblptrh,c
  4834  010D0E                     	endif
  4835  010D0E                     	if	1	;There are 3 active tblptr bytes
  4836  010D0E  0E00               	movlw	low (_dispfunc3 shr (0+16))
  4837  010D10  6EF8               	movwf	tblptru,c
  4838  010D12                     	endif
  4839  010D12  0008               	tblrd		*
  4840  010D14  50F5               	movf	tablat,w,c
  4841  010D16  ECE9  F08E         	call	_lcd_write
  4842                           
  4843                           ;lcd.c: 29: lcd_write(dispon);
  4844  010D1A  0E9A               	movlw	low _dispon
  4845  010D1C  6EF6               	movwf	tblptrl,c
  4846  010D1E                     	if	1	;There is more than 1 active tblptr byte
  4847  010D1E  0EFC               	movlw	high _dispon
  4848  010D20  6EF7               	movwf	tblptrh,c
  4849  010D22                     	endif
  4850  010D22                     	if	1	;There are 3 active tblptr bytes
  4851  010D22  0E00               	movlw	low (_dispon shr (0+16))
  4852  010D24  6EF8               	movwf	tblptru,c
  4853  010D26                     	endif
  4854  010D26  0008               	tblrd		*
  4855  010D28  50F5               	movf	tablat,w,c
  4856  010D2A  ECE9  F08E         	call	_lcd_write
  4857                           
  4858                           ;lcd.c: 31: lcd_write(dispnormal);
  4859  010D2E  0E96               	movlw	low _dispnormal
  4860  010D30  6EF6               	movwf	tblptrl,c
  4861  010D32                     	if	1	;There is more than 1 active tblptr byte
  4862  010D32  0EFC               	movlw	high _dispnormal
  4863  010D34  6EF7               	movwf	tblptrh,c
  4864  010D36                     	endif
  4865  010D36                     	if	1	;There are 3 active tblptr bytes
  4866  010D36  0E00               	movlw	low (_dispnormal shr (0+16))
  4867  010D38  6EF8               	movwf	tblptru,c
  4868  010D3A                     	endif
  4869  010D3A  0008               	tblrd		*
  4870  010D3C  50F5               	movf	tablat,w,c
  4871  010D3E  ECE9  F08E         	call	_lcd_write
  4872                           
  4873                           ;lcd.c: 33: lcd_write(dispclr);
  4874  010D42  0E99               	movlw	low _dispclr
  4875  010D44  6EF6               	movwf	tblptrl,c
  4876  010D46                     	if	1	;There is more than 1 active tblptr byte
  4877  010D46  0EFC               	movlw	high _dispclr
  4878  010D48  6EF7               	movwf	tblptrh,c
  4879  010D4A                     	endif
  4880  010D4A                     	if	1	;There are 3 active tblptr bytes
  4881  010D4A  0E00               	movlw	low (_dispclr shr (0+16))
  4882  010D4C  6EF8               	movwf	tblptru,c
  4883  010D4E                     	endif
  4884  010D4E  0008               	tblrd		*
  4885  010D50  50F5               	movf	tablat,w,c
  4886  010D52  ECE9  F08E         	call	_lcd_write
  4887                           
  4888                           ;lcd.c: 35: lcd_test();
  4889  010D56  ECF2  F08F         	call	_lcd_test	;wreg free
  4890                           
  4891                           ;lcd.c: 36: _delay((unsigned long)((250)*(12000000/4000.0)));
  4892  010D5A  0E04               	movlw	4
  4893  010D5C  0100               	movlb	0	; () banked
  4894  010D5E  6F9D               	movwf	(??_lcd_init+1)& (0+255),b
  4895  010D60  0ECF               	movlw	207
  4896  010D62  6F9C               	movwf	??_lcd_init& (0+255),b
  4897  010D64  0E01               	movlw	1
  4898  010D66                     u3407:
  4899  010D66  2EE8               	decfsz	wreg,f,c
  4900  010D68  D7FE               	bra	u3407
  4901  010D6A  2F9C               	decfsz	??_lcd_init& (0+255),f,b
  4902  010D6C  D7FC               	bra	u3407
  4903  010D6E  2F9D               	decfsz	(??_lcd_init+1)& (0+255),f,b
  4904  010D70  D7FA               	bra	u3407
  4905  010D72  D000               	nop2	
  4906  010D74  F000               	nop		;# 
  4907                           
  4908                           ;lcd.c: 38: hopper_test();
  4909  010D76  EC08  F090         	call	_hopper_test	;wreg free
  4910  010D7A  F000               	nop		;# 
  4911  010D7C  0012               	return		;funcret
  4912  010D7E                     __end_of_lcd_init:
  4913                           	opt stack 0
  4914                           tblptru	equ	0xFF8
  4915                           tblptrh	equ	0xFF7
  4916                           tblptrl	equ	0xFF6
  4917                           tablat	equ	0xFF5
  4918                           prodh	equ	0xFF4
  4919                           prodl	equ	0xFF3
  4920                           postinc0	equ	0xFEE
  4921                           wreg	equ	0xFE8
  4922                           indf2	equ	0xFDF
  4923                           fsr2h	equ	0xFDA
  4924                           fsr2l	equ	0xFD9
  4925                           status	equ	0xFD8
  4926                           
  4927 ;; *************** function _lcd_test *****************
  4928 ;; Defined at:
  4929 ;;		line 298 in file "lcd.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;		None
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  character       1   25[COMRAM] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;Total ram usage:        1 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    7
  4950 ;; This function calls:
  4951 ;;		_lcd_writeC
  4952 ;; This function is called by:
  4953 ;;		_lcd_init
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text18
  4958  011FE4                     __ptext18:
  4959                           	opt stack 0
  4960  011FE4                     _lcd_test:
  4961                           	opt stack 22
  4962                           
  4963                           ;lcd.c: 300: uint8_t character = 0x30;
  4964                           
  4965                           ;incstack = 0
  4966  011FE4  0E30               	movlw	48
  4967  011FE6  D004               	goto	L12
  4968  011FE8                     
  4969                           ;lcd.c: 302: {
  4970                           ;lcd.c: 303: lcd_writeC(character);
  4971  011FE8  5024               	movf	lcd_test@character,w,c
  4972  011FEA  EC91  F08B         	call	_lcd_writeC
  4973                           
  4974                           ;lcd.c: 304: character = character+ 1;
  4975  011FEE  2824               	incf	lcd_test@character,w,c
  4976  011FF0                     L12:
  4977  011FF0  6E24               	movwf	lcd_test@character,c
  4978  011FF2  0E7F               	movlw	127
  4979  011FF4  6424               	cpfsgt	lcd_test@character,c
  4980  011FF6  D7F8               	goto	l1535
  4981  011FF8  0012               	return	
  4982  011FFA                     __end_of_lcd_test:
  4983                           	opt stack 0
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           indf2	equ	0xFDF
  4993                           fsr2h	equ	0xFDA
  4994                           fsr2l	equ	0xFD9
  4995                           status	equ	0xFD8
  4996                           
  4997 ;; *************** function _hopper_test *****************
  4998 ;; Defined at:
  4999 ;;		line 10 in file "hopper.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    6
  5020 ;; This function calls:
  5021 ;;		_hopper_pay
  5022 ;; This function is called by:
  5023 ;;		_lcd_init
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text19
  5028  012010                     __ptext19:
  5029                           	opt stack 0
  5030  012010                     _hopper_test:
  5031                           	opt stack 23
  5032                           
  5033                           ;hopper.c: 12: if(!hopper_pay(0x05))
  5034                           
  5035                           ;incstack = 0
  5036  012010  0E05               	movlw	5
  5037  012012  EC66  F08D         	call	_hopper_pay
  5038  012016  0900               	iorlw	0
  5039  012018  A4D8               	btfss	status,2,c
  5040  01201A  D002               	goto	l3621
  5041  01201C  F000               	nop		;# 
  5042                           
  5043                           ;hopper.c: 15: }
  5044  01201E  0012               	return	
  5045  012020                     l3621:
  5046  012020  F000               	nop		;# 
  5047  012022  0012               	return	
  5048  012024                     __end_of_hopper_test:
  5049                           	opt stack 0
  5050                           tblptru	equ	0xFF8
  5051                           tblptrh	equ	0xFF7
  5052                           tblptrl	equ	0xFF6
  5053                           tablat	equ	0xFF5
  5054                           prodh	equ	0xFF4
  5055                           prodl	equ	0xFF3
  5056                           postinc0	equ	0xFEE
  5057                           wreg	equ	0xFE8
  5058                           indf2	equ	0xFDF
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _hopper_pay *****************
  5064 ;; Defined at:
  5065 ;;		line 26 in file "hopper.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  change          1    wreg     unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  change          1   30[COMRAM] unsigned char 
  5070 ;;  outcoins        1   31[COMRAM] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      unsigned char 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;Total ram usage:        3 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    5
  5087 ;; This function calls:
  5088 ;;		_Update_coinsout
  5089 ;;		_pay_coin
  5090 ;; This function is called by:
  5091 ;;		_hopper_test
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text20
  5096  011ACC                     __ptext20:
  5097                           	opt stack 0
  5098  011ACC                     _hopper_pay:
  5099                           	opt stack 23
  5100                           
  5101                           ;incstack = 0
  5102                           ;hopper_pay@change stored from wreg
  5103  011ACC  6E29               	movwf	hopper_pay@change,c
  5104                           
  5105                           ;hopper.c: 28: uint8_t outcoins = 0x00;
  5106  011ACE  0E00               	movlw	0
  5107  011AD0  6E2A               	movwf	hopper_pay@outcoins,c
  5108                           
  5109                           ;hopper.c: 29: while(change > 0)
  5110  011AD2  D014               	goto	l3626
  5111  011AD4                     
  5112                           ;hopper.c: 30: {
  5113                           ;hopper.c: 31: venflags.nochange = pay_coin();
  5114  011AD4  ECF2  F08A         	call	_pay_coin	;wreg free
  5115  011AD8  6E28               	movwf	??_hopper_pay& (0+255),c
  5116  011ADA  4628               	rlncf	??_hopper_pay,f,c
  5117  011ADC  4628               	rlncf	??_hopper_pay,f,c
  5118  011ADE  4628               	rlncf	??_hopper_pay,f,c
  5119  011AE0  502C               	movf	_venflags,w,c
  5120  011AE2  1828               	xorwf	??_hopper_pay,w,c
  5121  011AE4  0BF7               	andlw	-9
  5122  011AE6  1828               	xorwf	??_hopper_pay,w,c
  5123  011AE8  6E2C               	movwf	_venflags,c
  5124                           
  5125                           ;hopper.c: 32: if(venflags.nochange)
  5126  011AEA  A62C               	btfss	_venflags,3,c
  5127  011AEC  D005               	goto	l3628
  5128                           
  5129                           ;hopper.c: 33: {
  5130                           ;hopper.c: 34: Update_coinsout(outcoins);
  5131  011AEE  502A               	movf	hopper_pay@outcoins,w,c
  5132  011AF0  ECF5  F08B         	call	_Update_coinsout
  5133                           
  5134                           ;hopper.c: 35: return 1;
  5135  011AF4  0E01               	movlw	1
  5136  011AF6  0012               	return	
  5137  011AF8                     l3628:
  5138                           
  5139                           ;hopper.c: 36: }
  5140                           ;hopper.c: 37: change--;
  5141  011AF8  0629               	decf	hopper_pay@change,f,c
  5142                           
  5143                           ;hopper.c: 38: outcoins++;
  5144  011AFA  2A2A               	incf	hopper_pay@outcoins,f,c
  5145  011AFC                     l3626:
  5146  011AFC  5029               	movf	hopper_pay@change,w,c
  5147  011AFE  A4D8               	btfss	status,2,c
  5148  011B00  D7E9               	goto	l3627
  5149                           
  5150                           ;hopper.c: 39: }
  5151                           ;hopper.c: 40: Update_coinsout(outcoins);
  5152  011B02  502A               	movf	hopper_pay@outcoins,w,c
  5153  011B04  ECF5  F08B         	call	_Update_coinsout
  5154                           
  5155                           ;hopper.c: 41: return 0;
  5156  011B08  0E00               	movlw	0
  5157  011B0A  0012               	return	
  5158  011B0C                     __end_of_hopper_pay:
  5159                           	opt stack 0
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           postinc0	equ	0xFEE
  5167                           wreg	equ	0xFE8
  5168                           indf2	equ	0xFDF
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function _pay_coin *****************
  5174 ;; Defined at:
  5175 ;;		line 44 in file "hopper.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      unsigned char 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    3
  5196 ;; This function calls:
  5197 ;;		_TMR2_Initialize
  5198 ;;		_TMR4_Initialize
  5199 ;;		_switch_read
  5200 ;; This function is called by:
  5201 ;;		_hopper_pay
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text21
  5206  0115E4                     __ptext21:
  5207                           	opt stack 0
  5208  0115E4                     _pay_coin:
  5209                           	opt stack 24
  5210                           
  5211                           ;hopper.c: 46: if(switch_read())
  5212                           
  5213                           ;incstack = 0
  5214  0115E4  EC3C  F090         	call	_switch_read	;wreg free
  5215  0115E8  0900               	iorlw	0
  5216  0115EA  B4D8               	btfsc	status,2,c
  5217  0115EC  D011               	goto	l3633
  5218                           
  5219                           ;hopper.c: 47: {
  5220                           ;hopper.c: 48: TMR2_Initialize();
  5221  0115EE  EC8A  F08F         	call	_TMR2_Initialize	;wreg free
  5222  0115F2  EC3C  F090         	call	_switch_read	;wreg free
  5223  0115F6  0900               	iorlw	0
  5224  0115F8  B4D8               	btfsc	status,2,c
  5225  0115FA  D003               	goto	u1870
  5226  0115FC  010E               	movlb	14	; () banked
  5227  0115FE  A3CE               	btfss	206,1,b	;volatile
  5228  011600  D7F8               	goto	l3635
  5229  011602                     u1870:
  5230                           
  5231                           ;hopper.c: 50: if(PIR4bits.TMR2IF)
  5232                           
  5233                           ; BSR set to: 14
  5234  011602  010E               	movlb	14	; () banked
  5235  011604  A3CE               	btfss	206,1,b	;volatile
  5236  011606  D002               	goto	l3639
  5237                           
  5238                           ; BSR set to: 14
  5239                           ;hopper.c: 51: {
  5240                           ;hopper.c: 52: return 1;
  5241  011608  0E01               	movlw	1
  5242                           
  5243                           ; BSR set to: 14
  5244                           ;hopper.c: 53: }
  5245                           
  5246                           ; BSR set to: 14
  5247  01160A  0012               	return	
  5248  01160C                     l3639:
  5249                           
  5250                           ; BSR set to: 14
  5251                           ;hopper.c: 54: else
  5252                           ;hopper.c: 55: {
  5253                           ;hopper.c: 56: return 0;
  5254                           
  5255                           ; BSR set to: 14
  5256  01160C  0E00               	movlw	0
  5257                           
  5258                           ; BSR set to: 14
  5259                           ;hopper.c: 57: }
  5260                           ;hopper.c: 58: }
  5261                           
  5262                           ; BSR set to: 14
  5263  01160E  0012               	return	
  5264  011610                     l3633:
  5265                           
  5266                           ;hopper.c: 59: else
  5267                           ;hopper.c: 60: {
  5268                           ;hopper.c: 61: TMR4_Initialize();
  5269                           
  5270                           ; BSR set to: 14
  5271  011610  ECA7  F08F         	call	_TMR4_Initialize	;wreg free
  5272  011614  EC3C  F090         	call	_switch_read	;wreg free
  5273  011618  0900               	iorlw	0
  5274  01161A  A4D8               	btfss	status,2,c
  5275  01161C  D003               	goto	u1900
  5276  01161E  010E               	movlb	14	; () banked
  5277  011620  A7CE               	btfss	206,3,b	;volatile
  5278  011622  D7F8               	goto	l3644
  5279  011624                     u1900:
  5280                           
  5281                           ;hopper.c: 63: if(PIR4bits.TMR4IF)
  5282                           
  5283                           ; BSR set to: 14
  5284  011624  010E               	movlb	14	; () banked
  5285  011626  A7CE               	btfss	206,3,b	;volatile
  5286  011628  D002               	goto	l3648
  5287                           
  5288                           ; BSR set to: 14
  5289                           ;hopper.c: 64: {
  5290                           ;hopper.c: 65: return 1;
  5291  01162A  0E01               	movlw	1
  5292                           
  5293                           ; BSR set to: 14
  5294                           ;hopper.c: 66: }
  5295                           
  5296                           ; BSR set to: 14
  5297  01162C  0012               	return	
  5298  01162E                     l3648:
  5299                           
  5300                           ; BSR set to: 14
  5301                           ;hopper.c: 67: else
  5302                           ;hopper.c: 68: {
  5303                           ;hopper.c: 69: TMR2_Initialize();
  5304                           
  5305                           ; BSR set to: 14
  5306  01162E  EC8A  F08F         	call	_TMR2_Initialize	;wreg free
  5307  011632  EC3C  F090         	call	_switch_read	;wreg free
  5308  011636  0900               	iorlw	0
  5309  011638  B4D8               	btfsc	status,2,c
  5310  01163A  D003               	goto	u1930
  5311  01163C  010E               	movlb	14	; () banked
  5312  01163E  A3CE               	btfss	206,1,b	;volatile
  5313  011640  D7F8               	goto	l3651
  5314  011642                     u1930:
  5315                           
  5316                           ;hopper.c: 71: if(PIR4bits.TMR2IF)
  5317                           
  5318                           ; BSR set to: 14
  5319  011642  010E               	movlb	14	; () banked
  5320  011644  A3CE               	btfss	206,1,b	;volatile
  5321  011646  D002               	goto	l3655
  5322                           
  5323                           ; BSR set to: 14
  5324                           ;hopper.c: 72: {
  5325                           ;hopper.c: 73: return 1;
  5326  011648  0E01               	movlw	1
  5327                           
  5328                           ; BSR set to: 14
  5329                           ;hopper.c: 74: }
  5330                           
  5331                           ; BSR set to: 14
  5332  01164A  0012               	return	
  5333  01164C                     l3655:
  5334                           
  5335                           ; BSR set to: 14
  5336                           ;hopper.c: 75: else
  5337                           ;hopper.c: 76: {
  5338                           ;hopper.c: 77: return 0;
  5339                           
  5340                           ; BSR set to: 14
  5341  01164C  0E00               	movlw	0
  5342                           
  5343                           ; BSR set to: 14
  5344                           
  5345                           ; BSR set to: 14
  5346                           
  5347                           ; BSR set to: 14
  5348  01164E  0012               	return	
  5349  011650                     __end_of_pay_coin:
  5350                           	opt stack 0
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           prodh	equ	0xFF4
  5356                           prodl	equ	0xFF3
  5357                           postinc0	equ	0xFEE
  5358                           wreg	equ	0xFE8
  5359                           indf2	equ	0xFDF
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function _switch_read *****************
  5365 ;; Defined at:
  5366 ;;		line 85 in file "hopper.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      unsigned char 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    2
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_pay_coin
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text22
  5395  012078                     __ptext22:
  5396                           	opt stack 0
  5397  012078                     _switch_read:
  5398                           	opt stack 24
  5399                           
  5400                           ;hopper.c: 87: return ~LATCbits.LATC1;
  5401                           
  5402                           ; BSR set to: 14
  5403                           ;incstack = 0
  5404  012078  A285               	btfss	3973,1,c	;volatile
  5405  01207A  D002               	goto	u1640
  5406  01207C  0E01               	movlw	1
  5407  01207E  D001               	goto	u1646
  5408  012080                     u1640:
  5409  012080  0E00               	movlw	0
  5410  012082                     u1646:
  5411  012082  0AFF               	xorlw	255
  5412  012084  0012               	return	
  5413  012086                     __end_of_switch_read:
  5414                           	opt stack 0
  5415                           tblptru	equ	0xFF8
  5416                           tblptrh	equ	0xFF7
  5417                           tblptrl	equ	0xFF6
  5418                           tablat	equ	0xFF5
  5419                           prodh	equ	0xFF4
  5420                           prodl	equ	0xFF3
  5421                           postinc0	equ	0xFEE
  5422                           wreg	equ	0xFE8
  5423                           indf2	equ	0xFDF
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8
  5427                           
  5428 ;; *************** function _Update_coinsout *****************
  5429 ;; Defined at:
  5430 ;;		line 90 in file "hopper.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  coinsout        1    wreg     unsigned char 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;  coinsout        1   28[COMRAM] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;Total ram usage:        1 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    4
  5451 ;; This function calls:
  5452 ;;		_Read_NVstore
  5453 ;;		_Write_NVstore
  5454 ;; This function is called by:
  5455 ;;		_hopper_pay
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text23
  5460  0117EA                     __ptext23:
  5461                           	opt stack 0
  5462  0117EA                     _Update_coinsout:
  5463                           	opt stack 23
  5464                           
  5465                           ;incstack = 0
  5466                           ;Update_coinsout@coinsout stored from wreg
  5467  0117EA  6E27               	movwf	Update_coinsout@coinsout,c
  5468                           
  5469                           ;hopper.c: 92: Read_NVstore(cashoutv, ((uint8_t*) &pvcash), 0x02);
  5470  0117EC  0E51               	movlw	low _cashoutv
  5471  0117EE  6EF6               	movwf	tblptrl,c
  5472  0117F0                     	if	1	;There is more than 1 active tblptr byte
  5473  0117F0  0EFC               	movlw	high _cashoutv
  5474  0117F2  6EF7               	movwf	tblptrh,c
  5475  0117F4                     	endif
  5476  0117F4                     	if	1	;There are 3 active tblptr bytes
  5477  0117F4  0E00               	movlw	low (_cashoutv shr (0+16))
  5478  0117F6  6EF8               	movwf	tblptru,c
  5479  0117F8                     	endif
  5480  0117F8  0009               	tblrd		*+
  5481  0117FA  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
  5482  0117FE  000A               	tblrd		*-
  5483  011800  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
  5484  011804  0E4A               	movlw	low _pvcash
  5485  011806  6E21               	movwf	Read_NVstore@storemem,c
  5486  011808  0E00               	movlw	high _pvcash
  5487  01180A  6E22               	movwf	Read_NVstore@storemem+1,c
  5488  01180C  0E02               	movlw	2
  5489  01180E  6E23               	movwf	Read_NVstore@storesize,c
  5490  011810  EC9D  F08E         	call	_Read_NVstore	;wreg free
  5491                           
  5492                           ;hopper.c: 93: pvcash = pvcash + (uint16_t)coinsout;
  5493  011814  5027               	movf	Update_coinsout@coinsout,w,c
  5494  011816  244A               	addwf	_pvcash,w,c	;volatile
  5495  011818  6E4A               	movwf	_pvcash,c	;volatile
  5496  01181A  0E00               	movlw	0
  5497  01181C  204B               	addwfc	_pvcash+1,w,c	;volatile
  5498  01181E  6E4B               	movwf	_pvcash+1,c	;volatile
  5499                           
  5500                           ;hopper.c: 94: Write_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
  5501  011820  0E5F               	movlw	low _cashinv
  5502  011822  6EF6               	movwf	tblptrl,c
  5503  011824                     	if	1	;There is more than 1 active tblptr byte
  5504  011824  0EFC               	movlw	high _cashinv
  5505  011826  6EF7               	movwf	tblptrh,c
  5506  011828                     	endif
  5507  011828                     	if	1	;There are 3 active tblptr bytes
  5508  011828  0E00               	movlw	low (_cashinv shr (0+16))
  5509  01182A  6EF8               	movwf	tblptru,c
  5510  01182C                     	endif
  5511  01182C  0009               	tblrd		*+
  5512  01182E  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
  5513  011832  000A               	tblrd		*-
  5514  011834  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
  5515  011838  0E4A               	movlw	low _pvcash
  5516  01183A  6E23               	movwf	Write_NVstore@storemem,c
  5517  01183C  0E00               	movlw	high _pvcash
  5518  01183E  6E24               	movwf	Write_NVstore@storemem+1,c
  5519  011840  0E02               	movlw	2
  5520  011842  6E25               	movwf	Write_NVstore@storesize,c
  5521  011844  EC31  F08F         	call	_Write_NVstore	;wreg free
  5522  011848  0012               	return		;funcret
  5523  01184A                     __end_of_Update_coinsout:
  5524                           	opt stack 0
  5525                           tblptru	equ	0xFF8
  5526                           tblptrh	equ	0xFF7
  5527                           tblptrl	equ	0xFF6
  5528                           tablat	equ	0xFF5
  5529                           prodh	equ	0xFF4
  5530                           prodl	equ	0xFF3
  5531                           postinc0	equ	0xFEE
  5532                           wreg	equ	0xFE8
  5533                           indf2	equ	0xFDF
  5534                           fsr2h	equ	0xFDA
  5535                           fsr2l	equ	0xFD9
  5536                           status	equ	0xFD8
  5537                           
  5538 ;; *************** function _enter_service *****************
  5539 ;; Defined at:
  5540 ;;		line 165 in file "main.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:   12
  5561 ;; This function calls:
  5562 ;;		_Audit
  5563 ;;		_Clear_cred
  5564 ;;		_Hopper_coin
  5565 ;;		_Sensor_set
  5566 ;;		_Vend_setup
  5567 ;;		_butindb
  5568 ;;		_lcd_string
  5569 ;;		_mdb_unlock
  5570 ;;		_price_set
  5571 ;;		_set_notes
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text24
  5578  011044                     __ptext24:
  5579                           	opt stack 0
  5580  011044                     _enter_service:
  5581                           	opt stack 18
  5582                           
  5583                           ;main.c: 167: mdb_unlock();
  5584                           
  5585                           ;incstack = 0
  5586  011044  ECE0  F084         	call	_mdb_unlock	;wreg free
  5587                           
  5588                           ;main.c: 168: lcd_string(servmsg, line1);
  5589  011048  0E9E               	movlw	low _servmsg
  5590  01104A  6E24               	movwf	lcd_string@lcdstring,c
  5591  01104C  0EFC               	movlw	high _servmsg
  5592  01104E  6E25               	movwf	lcd_string@lcdstring+1,c
  5593  011050  0E8F               	movlw	low _line1
  5594  011052  6EF6               	movwf	tblptrl,c
  5595  011054                     	if	1	;There is more than 1 active tblptr byte
  5596  011054  0EFC               	movlw	high _line1
  5597  011056  6EF7               	movwf	tblptrh,c
  5598  011058                     	endif
  5599  011058                     	if	1	;There are 3 active tblptr bytes
  5600  011058  0E00               	movlw	low (_line1 shr (0+16))
  5601  01105A  6EF8               	movwf	tblptru,c
  5602  01105C                     	endif
  5603  01105C  0008               	tblrd		*
  5604  01105E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5605  011062  EC75  F087         	call	_lcd_string	;wreg free
  5606                           
  5607                           ;main.c: 171: while(venflags.service)
  5608  011066  D036               	goto	l1020
  5609  011068                     
  5610                           ;main.c: 172: {
  5611                           ;main.c: 173: buttons = butindb();
  5612  011068  ECD0  F08E         	call	_butindb	;wreg free
  5613  01106C  6E39               	movwf	_buttons,c	;volatile
  5614                           
  5615                           ;main.c: 174: switch(buttons)
  5616  01106E  D019               	goto	l1018
  5617  011070  EC72  F090         	call	_Audit	;wreg free
  5618                           
  5619                           ;main.c: 177: break;
  5620  011074  D02F               	goto	l1020
  5621  011076  EC09  F084         	call	_Sensor_set	;wreg free
  5622                           
  5623                           ;main.c: 179: break;
  5624  01107A  D02C               	goto	l1020
  5625  01107C  EC99  F083         	call	_Hopper_coin	;wreg free
  5626                           
  5627                           ;main.c: 181: break;
  5628  011080  D029               	goto	l1020
  5629  011082  EC20  F083         	call	_set_notes	;wreg free
  5630                           
  5631                           ;main.c: 183: break;
  5632  011086  D026               	goto	l1020
  5633  011088  EC52  F08C         	call	_Clear_cred	;wreg free
  5634                           
  5635                           ;main.c: 185: venflags.service = 0;
  5636  01108C  9E2C               	bcf	_venflags,7,c
  5637  01108E  00FF               	reset		;# 
  5638  011090  ECC6  F089         	call	_price_set	;wreg free
  5639                           
  5640                           ;main.c: 188: break;
  5641  011094  D01F               	goto	l1020
  5642  011096  EC1D  F081         	call	_Vend_setup	;wreg free
  5643                           
  5644                           ;main.c: 190: break;
  5645  01109A  D01C               	goto	l1020
  5646  01109C                     l1027:
  5647  01109C  9E2C               	bcf	_venflags,7,c
  5648  01109E  00FF               	reset		;# 
  5649                           
  5650                           ;main.c: 194: }
  5651                           
  5652                           ;main.c: 193: break;
  5653  0110A0  D019               	goto	l1020
  5654  0110A2                     l1018:
  5655  0110A2  5039               	movf	_buttons,w,c	;volatile
  5656                           
  5657                           ; Switch size 1, requested type "space"
  5658                           ; Number of cases is 8, Range of values is 1 to 128
  5659                           ; switch strategies available:
  5660                           ; Name         Instructions Cycles
  5661                           ; simple_byte           25    13 (average)
  5662                           ;	Chosen strategy is simple_byte
  5663  0110A4  0A01               	xorlw	1	; case 1
  5664  0110A6  B4D8               	btfsc	status,2,c
  5665  0110A8  D7E3               	goto	l1019
  5666  0110AA  0A03               	xorlw	3	; case 2
  5667  0110AC  B4D8               	btfsc	status,2,c
  5668  0110AE  D7E3               	goto	l1021
  5669  0110B0  0A06               	xorlw	6	; case 4
  5670  0110B2  B4D8               	btfsc	status,2,c
  5671  0110B4  D7E3               	goto	l1022
  5672  0110B6  0A0C               	xorlw	12	; case 8
  5673  0110B8  B4D8               	btfsc	status,2,c
  5674  0110BA  D7E3               	goto	l1023
  5675  0110BC  0A18               	xorlw	24	; case 16
  5676  0110BE  B4D8               	btfsc	status,2,c
  5677  0110C0  D7E3               	goto	l1024
  5678  0110C2  0A30               	xorlw	48	; case 32
  5679  0110C4  B4D8               	btfsc	status,2,c
  5680  0110C6  D7E4               	goto	l1025
  5681  0110C8  0A60               	xorlw	96	; case 64
  5682  0110CA  B4D8               	btfsc	status,2,c
  5683  0110CC  D7E4               	goto	l1026
  5684  0110CE  0AC0               	xorlw	192	; case 128
  5685  0110D0  B4D8               	btfsc	status,2,c
  5686  0110D2  D7E4               	goto	l1027
  5687  0110D4                     l1020:
  5688  0110D4  AE2C               	btfss	_venflags,7,c
  5689  0110D6  0012               	return	
  5690  0110D8  D7C7               	goto	l1017
  5691  0110DA                     __end_of_enter_service:
  5692                           	opt stack 0
  5693                           tblptru	equ	0xFF8
  5694                           tblptrh	equ	0xFF7
  5695                           tblptrl	equ	0xFF6
  5696                           tablat	equ	0xFF5
  5697                           prodh	equ	0xFF4
  5698                           prodl	equ	0xFF3
  5699                           postinc0	equ	0xFEE
  5700                           wreg	equ	0xFE8
  5701                           indf2	equ	0xFDF
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _set_notes *****************
  5707 ;; Defined at:
  5708 ;;		line 57 in file "mdb.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:   10
  5729 ;; This function calls:
  5730 ;;		_butindb
  5731 ;;		_displ_note
  5732 ;;		_enable_notes
  5733 ;;		_lcd_string
  5734 ;; This function is called by:
  5735 ;;		_enter_service
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text25
  5740  010640                     __ptext25:
  5741                           	opt stack 0
  5742  010640                     _set_notes:
  5743                           	opt stack 19
  5744                           
  5745                           ;mdb.c: 59: lcd_string(setnotes, line1);
  5746                           
  5747                           ;incstack = 0
  5748  010640  0E3E               	movlw	low _setnotes
  5749  010642  6E24               	movwf	lcd_string@lcdstring,c
  5750  010644  0EFD               	movlw	high _setnotes
  5751  010646  6E25               	movwf	lcd_string@lcdstring+1,c
  5752  010648  0E8F               	movlw	low _line1
  5753  01064A  6EF6               	movwf	tblptrl,c
  5754  01064C                     	if	1	;There is more than 1 active tblptr byte
  5755  01064C  0EFC               	movlw	high _line1
  5756  01064E  6EF7               	movwf	tblptrh,c
  5757  010650                     	endif
  5758  010650                     	if	1	;There are 3 active tblptr bytes
  5759  010650  0E00               	movlw	low (_line1 shr (0+16))
  5760  010652  6EF8               	movwf	tblptru,c
  5761  010654                     	endif
  5762  010654  0008               	tblrd		*
  5763  010656  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5764  01065A  EC75  F087         	call	_lcd_string	;wreg free
  5765                           
  5766                           ;mdb.c: 60: mdbflags.noteset = 1;
  5767  01065E  8A3E               	bsf	_mdbflags,5,c
  5768                           
  5769                           ;mdb.c: 61: mdbflags.endis = 1;
  5770  010660  8C3E               	bsf	_mdbflags,6,c
  5771                           
  5772                           ;mdb.c: 62: while(mdbflags.noteset)
  5773  010662  D064               	goto	l2671
  5774  010664                     
  5775                           ;mdb.c: 63: {
  5776                           ;mdb.c: 64: buttons = butindb();
  5777  010664  ECD0  F08E         	call	_butindb	;wreg free
  5778  010668  6E39               	movwf	_buttons,c	;volatile
  5779                           
  5780                           ;mdb.c: 65: notenum = buttons;
  5781  01066A  C039  F04D         	movff	_buttons,_notenum	;volatile
  5782                           
  5783                           ;mdb.c: 66: switch(buttons)
  5784  01066E  D048               	goto	l2673
  5785  010670  0ECD               	movlw	low _tenrand
  5786  010672  6E29               	movwf	displ_note@notestring,c
  5787  010674  0EFF               	movlw	high _tenrand
  5788  010676  6E2A               	movwf	displ_note@notestring+1,c
  5789  010678  ECE0  F08D         	call	_displ_note	;wreg free
  5790  01067C  6E42               	movwf	_dspposition,c
  5791                           
  5792                           ;mdb.c: 70: enable_notes(0x01);
  5793  01067E  0E01               	movlw	1
  5794  010680  EC06  F08A         	call	_enable_notes
  5795                           
  5796                           ;mdb.c: 71: break;
  5797  010684  D050               	goto	l2675
  5798  010686  0EEE               	movlw	low _twentyrand
  5799  010688  6E29               	movwf	displ_note@notestring,c
  5800  01068A  0EFF               	movlw	high _twentyrand
  5801  01068C  6E2A               	movwf	displ_note@notestring+1,c
  5802  01068E  ECE0  F08D         	call	_displ_note	;wreg free
  5803  010692  6E42               	movwf	_dspposition,c
  5804                           
  5805                           ;mdb.c: 74: enable_notes(0x02);
  5806  010694  0E02               	movlw	2
  5807  010696  EC06  F08A         	call	_enable_notes
  5808                           
  5809                           ;mdb.c: 75: break;
  5810  01069A  D045               	goto	l2675
  5811  01069C  0EE6               	movlw	low _fiftyrand
  5812  01069E  6E29               	movwf	displ_note@notestring,c
  5813  0106A0  0EFF               	movlw	high _fiftyrand
  5814  0106A2  6E2A               	movwf	displ_note@notestring+1,c
  5815  0106A4  ECE0  F08D         	call	_displ_note	;wreg free
  5816  0106A8  6E42               	movwf	_dspposition,c
  5817                           
  5818                           ;mdb.c: 78: enable_notes(0x04);
  5819  0106AA  0E04               	movlw	4
  5820  0106AC  EC06  F08A         	call	_enable_notes
  5821                           
  5822                           ;mdb.c: 79: break;
  5823  0106B0  D03A               	goto	l2675
  5824  0106B2  0EDE               	movlw	low _hundredrand
  5825  0106B4  6E29               	movwf	displ_note@notestring,c
  5826  0106B6  0EFF               	movlw	high _hundredrand
  5827  0106B8  6E2A               	movwf	displ_note@notestring+1,c
  5828  0106BA  ECE0  F08D         	call	_displ_note	;wreg free
  5829  0106BE  6E42               	movwf	_dspposition,c
  5830                           
  5831                           ;mdb.c: 82: enable_notes(0x08);
  5832  0106C0  0E08               	movlw	8
  5833  0106C2  EC06  F08A         	call	_enable_notes
  5834                           
  5835                           ;mdb.c: 83: break;
  5836  0106C6  D02F               	goto	l2675
  5837  0106C8  0ED6               	movlw	low _twohundredrand
  5838  0106CA  6E29               	movwf	displ_note@notestring,c
  5839  0106CC  0EFF               	movlw	high _twohundredrand
  5840  0106CE  6E2A               	movwf	displ_note@notestring+1,c
  5841  0106D0  ECE0  F08D         	call	_displ_note	;wreg free
  5842  0106D4  6E42               	movwf	_dspposition,c
  5843                           
  5844                           ;mdb.c: 86: enable_notes(0x10);
  5845  0106D6  0E10               	movlw	16
  5846  0106D8  EC06  F08A         	call	_enable_notes
  5847                           
  5848                           ;mdb.c: 87: break;
  5849  0106DC  D024               	goto	l2675
  5850  0106DE  0E9E               	movlw	low _servmsg
  5851  0106E0  6E24               	movwf	lcd_string@lcdstring,c
  5852  0106E2  0EFC               	movlw	high _servmsg
  5853  0106E4  6E25               	movwf	lcd_string@lcdstring+1,c
  5854  0106E6  0E8F               	movlw	low _line1
  5855  0106E8  6EF6               	movwf	tblptrl,c
  5856  0106EA                     	if	1	;There is more than 1 active tblptr byte
  5857  0106EA  0EFC               	movlw	high _line1
  5858  0106EC  6EF7               	movwf	tblptrh,c
  5859  0106EE                     	endif
  5860  0106EE                     	if	1	;There are 3 active tblptr bytes
  5861  0106EE  0E00               	movlw	low (_line1 shr (0+16))
  5862  0106F0  6EF8               	movwf	tblptru,c
  5863  0106F2                     	endif
  5864  0106F2  0008               	tblrd		*
  5865  0106F4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  5866  0106F8  EC75  F087         	call	_lcd_string	;wreg free
  5867                           
  5868                           ;mdb.c: 90: mdbflags.noteset = 0;
  5869  0106FC  9A3E               	bcf	_mdbflags,5,c
  5870                           
  5871                           ;mdb.c: 92: }
  5872                           
  5873                           ;mdb.c: 91: default : break;
  5874  0106FE  D013               	goto	l2675
  5875  010700                     l2673:
  5876  010700  5039               	movf	_buttons,w,c	;volatile
  5877                           
  5878                           ; Switch size 1, requested type "space"
  5879                           ; Number of cases is 6, Range of values is 1 to 128
  5880                           ; switch strategies available:
  5881                           ; Name         Instructions Cycles
  5882                           ; simple_byte           19    10 (average)
  5883                           ;	Chosen strategy is simple_byte
  5884  010702  0A01               	xorlw	1	; case 1
  5885  010704  B4D8               	btfsc	status,2,c
  5886  010706  D7B4               	goto	l2674
  5887  010708  0A03               	xorlw	3	; case 2
  5888  01070A  B4D8               	btfsc	status,2,c
  5889  01070C  D7BC               	goto	l2676
  5890  01070E  0A06               	xorlw	6	; case 4
  5891  010710  B4D8               	btfsc	status,2,c
  5892  010712  D7C4               	goto	l2677
  5893  010714  0A0C               	xorlw	12	; case 8
  5894  010716  B4D8               	btfsc	status,2,c
  5895  010718  D7CC               	goto	l2678
  5896  01071A  0A18               	xorlw	24	; case 16
  5897  01071C  B4D8               	btfsc	status,2,c
  5898  01071E  D7D4               	goto	l2679
  5899  010720  0A90               	xorlw	144	; case 128
  5900  010722  B4D8               	btfsc	status,2,c
  5901  010724  D7DC               	goto	l2680
  5902  010726                     l2675:
  5903                           
  5904                           ;mdb.c: 93: ((uint8_t*) &noteen)[0] = noteen_byte;
  5905  010726  C03C  F03D         	movff	_noteen_byte,_noteen	;volatile
  5906  01072A  F000               	nop		;# 
  5907  01072C                     l2671:
  5908  01072C  AA3E               	btfss	_mdbflags,5,c
  5909  01072E  0012               	return	
  5910  010730  D799               	goto	l2672
  5911  010732                     __end_of_set_notes:
  5912                           	opt stack 0
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           prodh	equ	0xFF4
  5918                           prodl	equ	0xFF3
  5919                           postinc0	equ	0xFEE
  5920                           wreg	equ	0xFE8
  5921                           indf2	equ	0xFDF
  5922                           fsr2h	equ	0xFDA
  5923                           fsr2l	equ	0xFD9
  5924                           status	equ	0xFD8
  5925                           
  5926 ;; *************** function _enable_notes *****************
  5927 ;; Defined at:
  5928 ;;		line 98 in file "mdb.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  notenum         1    wreg     unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  notenum         1   32[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:        1 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    9
  5949 ;; This function calls:
  5950 ;;		_butindb
  5951 ;;		_displ_nendis
  5952 ;;		_lcd_string
  5953 ;;		_save_notes
  5954 ;; This function is called by:
  5955 ;;		_set_notes
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text26
  5960  01140C                     __ptext26:
  5961                           	opt stack 0
  5962  01140C                     _enable_notes:
  5963                           	opt stack 19
  5964                           
  5965                           ;incstack = 0
  5966                           ;enable_notes@notenum stored from wreg
  5967  01140C  6E2B               	movwf	enable_notes@notenum,c
  5968                           
  5969                           ;mdb.c: 100: mdbflags.endis = 1;
  5970  01140E  8C3E               	bsf	_mdbflags,6,c
  5971                           
  5972                           ;mdb.c: 101: displ_nendis(notenum);
  5973  011410  502B               	movf	enable_notes@notenum,w,c
  5974  011412  ECB7  F08E         	call	_displ_nendis
  5975                           
  5976                           ;mdb.c: 102: while(mdbflags.endis)
  5977  011416  D034               	goto	l2690
  5978  011418                     
  5979                           ;mdb.c: 103: {
  5980                           ;mdb.c: 104: buttons = butindb();
  5981  011418  ECD0  F08E         	call	_butindb	;wreg free
  5982  01141C  6E39               	movwf	_buttons,c	;volatile
  5983                           
  5984                           ;mdb.c: 105: switch(buttons)
  5985  01141E  D026               	goto	l2688
  5986  011420  503C               	movf	_noteen_byte,w,c	;volatile
  5987  011422  102B               	iorwf	enable_notes@notenum,w,c
  5988  011424  6E3C               	movwf	_noteen_byte,c	;volatile
  5989                           
  5990                           ;mdb.c: 108: save_notes();
  5991  011426  EC58  F08F         	call	_save_notes	;wreg free
  5992                           
  5993                           ;mdb.c: 109: displ_nendis(notenum);
  5994  01142A  502B               	movf	enable_notes@notenum,w,c
  5995  01142C  ECB7  F08E         	call	_displ_nendis
  5996                           
  5997                           ;mdb.c: 110: break;
  5998  011430  D027               	goto	l2690
  5999  011432  502B               	movf	enable_notes@notenum,w,c
  6000  011434  0AFF               	xorlw	255
  6001  011436  143C               	andwf	_noteen_byte,w,c	;volatile
  6002  011438  6E3C               	movwf	_noteen_byte,c	;volatile
  6003                           
  6004                           ;mdb.c: 112: save_notes();
  6005  01143A  EC58  F08F         	call	_save_notes	;wreg free
  6006                           
  6007                           ;mdb.c: 113: displ_nendis(notenum);
  6008  01143E  502B               	movf	enable_notes@notenum,w,c
  6009  011440  ECB7  F08E         	call	_displ_nendis
  6010                           
  6011                           ;mdb.c: 114: break;
  6012  011444  D01D               	goto	l2690
  6013  011446                     l2692:
  6014  011446  9C3E               	bcf	_mdbflags,6,c
  6015                           
  6016                           ;mdb.c: 116: lcd_string(setnotes, line1);
  6017  011448  0E3E               	movlw	low _setnotes
  6018  01144A  6E24               	movwf	lcd_string@lcdstring,c
  6019  01144C  0EFD               	movlw	high _setnotes
  6020  01144E  6E25               	movwf	lcd_string@lcdstring+1,c
  6021  011450  0E8F               	movlw	low _line1
  6022  011452  6EF6               	movwf	tblptrl,c
  6023  011454                     	if	1	;There is more than 1 active tblptr byte
  6024  011454  0EFC               	movlw	high _line1
  6025  011456  6EF7               	movwf	tblptrh,c
  6026  011458                     	endif
  6027  011458                     	if	1	;There are 3 active tblptr bytes
  6028  011458  0E00               	movlw	low (_line1 shr (0+16))
  6029  01145A  6EF8               	movwf	tblptru,c
  6030  01145C                     	endif
  6031  01145C  0008               	tblrd		*
  6032  01145E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6033  011462  EC75  F087         	call	_lcd_string	;wreg free
  6034                           
  6035                           ;mdb.c: 117: buttons = 0;
  6036  011466  0E00               	movlw	0
  6037  011468  6E39               	movwf	_buttons,c	;volatile
  6038                           
  6039                           ;mdb.c: 119: }
  6040                           
  6041                           ;mdb.c: 118: default : break;
  6042  01146A  D00A               	goto	l2690
  6043  01146C                     l2688:
  6044  01146C  5039               	movf	_buttons,w,c	;volatile
  6045                           
  6046                           ; Switch size 1, requested type "space"
  6047                           ; Number of cases is 3, Range of values is 1 to 128
  6048                           ; switch strategies available:
  6049                           ; Name         Instructions Cycles
  6050                           ; simple_byte           10     6 (average)
  6051                           ;	Chosen strategy is simple_byte
  6052  01146E  0A01               	xorlw	1	; case 1
  6053  011470  B4D8               	btfsc	status,2,c
  6054  011472  D7D6               	goto	l2689
  6055  011474  0A03               	xorlw	3	; case 2
  6056  011476  B4D8               	btfsc	status,2,c
  6057  011478  D7DC               	goto	l2691
  6058  01147A  0A82               	xorlw	130	; case 128
  6059  01147C  B4D8               	btfsc	status,2,c
  6060  01147E  D7E3               	goto	l2692
  6061  011480                     l2690:
  6062  011480  AC3E               	btfss	_mdbflags,6,c
  6063  011482  0012               	return	
  6064  011484  D7C9               	goto	l2687
  6065  011486                     __end_of_enable_notes:
  6066                           	opt stack 0
  6067                           tblptru	equ	0xFF8
  6068                           tblptrh	equ	0xFF7
  6069                           tblptrl	equ	0xFF6
  6070                           tablat	equ	0xFF5
  6071                           prodh	equ	0xFF4
  6072                           prodl	equ	0xFF3
  6073                           postinc0	equ	0xFEE
  6074                           wreg	equ	0xFE8
  6075                           indf2	equ	0xFDF
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8
  6079                           
  6080 ;; *************** function _save_notes *****************
  6081 ;; Defined at:
  6082 ;;		line 129 in file "mdb.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;		None
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  1    wreg      void 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;Total ram usage:        0 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    3
  6103 ;; This function calls:
  6104 ;;		_DATAEE_WriteByte
  6105 ;; This function is called by:
  6106 ;;		_enable_notes
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text27
  6111  011EB0                     __ptext27:
  6112                           	opt stack 0
  6113  011EB0                     _save_notes:
  6114                           	opt stack 24
  6115                           
  6116                           ;mdb.c: 131: DATAEE_WriteByte(notebits, noteen_byte);
  6117                           
  6118                           ;incstack = 0
  6119  011EB0  0E55               	movlw	low _notebits
  6120  011EB2  6EF6               	movwf	tblptrl,c
  6121  011EB4                     	if	1	;There is more than 1 active tblptr byte
  6122  011EB4  0EFC               	movlw	high _notebits
  6123  011EB6  6EF7               	movwf	tblptrh,c
  6124  011EB8                     	endif
  6125  011EB8                     	if	1	;There are 3 active tblptr bytes
  6126  011EB8  0E00               	movlw	low (_notebits shr (0+16))
  6127  011EBA  6EF8               	movwf	tblptru,c
  6128  011EBC                     	endif
  6129  011EBC  0009               	tblrd		*+
  6130  011EBE  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  6131  011EC2  000A               	tblrd		*-
  6132  011EC4  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  6133  011EC8  C03C  F01F         	movff	_noteen_byte,DATAEE_WriteByte@bData	;volatile
  6134  011ECC  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  6135  011ED0  0012               	return		;funcret
  6136  011ED2                     __end_of_save_notes:
  6137                           	opt stack 0
  6138                           tblptru	equ	0xFF8
  6139                           tblptrh	equ	0xFF7
  6140                           tblptrl	equ	0xFF6
  6141                           tablat	equ	0xFF5
  6142                           prodh	equ	0xFF4
  6143                           prodl	equ	0xFF3
  6144                           postinc0	equ	0xFEE
  6145                           wreg	equ	0xFE8
  6146                           indf2	equ	0xFDF
  6147                           fsr2h	equ	0xFDA
  6148                           fsr2l	equ	0xFD9
  6149                           status	equ	0xFD8
  6150                           
  6151 ;; *************** function _displ_nendis *****************
  6152 ;; Defined at:
  6153 ;;		line 116 in file "lcd.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  note2disp       1    wreg     unsigned char 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  note2disp       1   30[COMRAM] unsigned char 
  6158 ;;  x               1   31[COMRAM] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  1    wreg      void 
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;Total ram usage:        2 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    8
  6175 ;; This function calls:
  6176 ;;		_lcd_string
  6177 ;; This function is called by:
  6178 ;;		_enable_notes
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text28
  6183  011D6E                     __ptext28:
  6184                           	opt stack 0
  6185  011D6E                     _displ_nendis:
  6186                           	opt stack 19
  6187                           
  6188                           ;incstack = 0
  6189                           ;displ_nendis@note2disp stored from wreg
  6190  011D6E  6E29               	movwf	displ_nendis@note2disp,c
  6191                           
  6192                           ;lcd.c: 118: uint8_t x = note2disp & noteen_byte;
  6193  011D70  5029               	movf	displ_nendis@note2disp,w,c
  6194  011D72  143C               	andwf	_noteen_byte,w,c	;volatile
  6195  011D74  6E2A               	movwf	displ_nendis@x,c
  6196                           
  6197                           ;lcd.c: 119: if(x != 0x00)
  6198  011D76  502A               	movf	displ_nendis@x,w,c
  6199  011D78  B4D8               	btfsc	status,2,c
  6200  011D7A  D009               	goto	l1462
  6201                           
  6202                           ;lcd.c: 120: {
  6203                           ;lcd.c: 121: lcd_string(enabled, dspposition);
  6204  011D7C  0EC3               	movlw	low _enabled
  6205  011D7E  6E24               	movwf	lcd_string@lcdstring,c
  6206  011D80  0EFF               	movlw	high _enabled
  6207  011D82  6E25               	movwf	lcd_string@lcdstring+1,c
  6208  011D84  C042  F026         	movff	_dspposition,lcd_string@lcdline
  6209  011D88  EC75  F087         	call	_lcd_string	;wreg free
  6210                           
  6211                           ;lcd.c: 122: }
  6212  011D8C  0012               	return	
  6213  011D8E                     l1462:
  6214                           
  6215                           ;lcd.c: 123: else
  6216                           ;lcd.c: 124: {
  6217                           ;lcd.c: 125: lcd_string(disabled, dspposition);
  6218  011D8E  0EB9               	movlw	low _disabled
  6219  011D90  6E24               	movwf	lcd_string@lcdstring,c
  6220  011D92  0EFF               	movlw	high _disabled
  6221  011D94  6E25               	movwf	lcd_string@lcdstring+1,c
  6222  011D96  C042  F026         	movff	_dspposition,lcd_string@lcdline
  6223  011D9A  EC75  F087         	call	_lcd_string	;wreg free
  6224  011D9E  0012               	return	
  6225  011DA0                     __end_of_displ_nendis:
  6226                           	opt stack 0
  6227                           tblptru	equ	0xFF8
  6228                           tblptrh	equ	0xFF7
  6229                           tblptrl	equ	0xFF6
  6230                           tablat	equ	0xFF5
  6231                           prodh	equ	0xFF4
  6232                           prodl	equ	0xFF3
  6233                           postinc0	equ	0xFEE
  6234                           wreg	equ	0xFE8
  6235                           indf2	equ	0xFDF
  6236                           fsr2h	equ	0xFDA
  6237                           fsr2l	equ	0xFD9
  6238                           status	equ	0xFD8
  6239                           
  6240 ;; *************** function _displ_note *****************
  6241 ;; Defined at:
  6242 ;;		line 109 in file "lcd.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  notestring      2   30[COMRAM] PTR unsigned char 
  6245 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
  6246 ;;		 -> tenrand(9), 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      unsigned char 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:        2 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    8
  6265 ;; This function calls:
  6266 ;;		_lcd_string
  6267 ;;		_lcd_write
  6268 ;; This function is called by:
  6269 ;;		_set_notes
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text29
  6274  011BC0                     __ptext29:
  6275                           	opt stack 0
  6276  011BC0                     _displ_note:
  6277                           	opt stack 20
  6278                           
  6279                           ;lcd.c: 111: lcd_write(dispclr);
  6280                           
  6281                           ;incstack = 0
  6282  011BC0  0E99               	movlw	low _dispclr
  6283  011BC2  6EF6               	movwf	tblptrl,c
  6284  011BC4                     	if	1	;There is more than 1 active tblptr byte
  6285  011BC4  0EFC               	movlw	high _dispclr
  6286  011BC6  6EF7               	movwf	tblptrh,c
  6287  011BC8                     	endif
  6288  011BC8                     	if	1	;There are 3 active tblptr bytes
  6289  011BC8  0E00               	movlw	low (_dispclr shr (0+16))
  6290  011BCA  6EF8               	movwf	tblptru,c
  6291  011BCC                     	endif
  6292  011BCC  0008               	tblrd		*
  6293  011BCE  50F5               	movf	tablat,w,c
  6294  011BD0  ECE9  F08E         	call	_lcd_write
  6295                           
  6296                           ;lcd.c: 112: lcd_string(notestring, line2);
  6297  011BD4  C029  F024         	movff	displ_note@notestring,lcd_string@lcdstring
  6298  011BD8  C02A  F025         	movff	displ_note@notestring+1,lcd_string@lcdstring+1
  6299  011BDC  0E8E               	movlw	low _line2
  6300  011BDE  6EF6               	movwf	tblptrl,c
  6301  011BE0                     	if	1	;There is more than 1 active tblptr byte
  6302  011BE0  0EFC               	movlw	high _line2
  6303  011BE2  6EF7               	movwf	tblptrh,c
  6304  011BE4                     	endif
  6305  011BE4                     	if	1	;There are 3 active tblptr bytes
  6306  011BE4  0E00               	movlw	low (_line2 shr (0+16))
  6307  011BE6  6EF8               	movwf	tblptru,c
  6308  011BE8                     	endif
  6309  011BE8  0008               	tblrd		*
  6310  011BEA  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6311  011BEE  EC75  F087         	call	_lcd_string	;wreg free
  6312                           
  6313                           ;lcd.c: 113: return bflag+2;
  6314  011BF2  5046               	movf	_bflag,w,c
  6315  011BF4  0F02               	addlw	2
  6316  011BF6  0012               	return	
  6317  011BF8                     __end_of_displ_note:
  6318                           	opt stack 0
  6319                           tblptru	equ	0xFF8
  6320                           tblptrh	equ	0xFF7
  6321                           tblptrl	equ	0xFF6
  6322                           tablat	equ	0xFF5
  6323                           prodh	equ	0xFF4
  6324                           prodl	equ	0xFF3
  6325                           postinc0	equ	0xFEE
  6326                           wreg	equ	0xFE8
  6327                           indf2	equ	0xFDF
  6328                           fsr2h	equ	0xFDA
  6329                           fsr2l	equ	0xFD9
  6330                           status	equ	0xFD8
  6331                           
  6332 ;; *************** function _price_set *****************
  6333 ;; Defined at:
  6334 ;;		line 296 in file "vend.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;Total ram usage:        0 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:   10
  6355 ;; This function calls:
  6356 ;;		_Read_Service
  6357 ;;		_butindb
  6358 ;;		_lcd_string
  6359 ;;		_set_price
  6360 ;; This function is called by:
  6361 ;;		_enter_service
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text30
  6366  01138C                     __ptext30:
  6367                           	opt stack 0
  6368  01138C                     _price_set:
  6369                           	opt stack 19
  6370                           
  6371                           ;vend.c: 298: venflags.priceset = 1;
  6372                           
  6373                           ;incstack = 0
  6374  01138C  802D               	bsf	_venflags+1,0,c
  6375                           
  6376                           ;vend.c: 299: lcd_string(pricesetmsg, line1);
  6377  01138E  0E50               	movlw	low _pricesetmsg
  6378  011390  6E24               	movwf	lcd_string@lcdstring,c
  6379  011392  0EFF               	movlw	high _pricesetmsg
  6380  011394  6E25               	movwf	lcd_string@lcdstring+1,c
  6381  011396  0E8F               	movlw	low _line1
  6382  011398  6EF6               	movwf	tblptrl,c
  6383  01139A                     	if	1	;There is more than 1 active tblptr byte
  6384  01139A  0EFC               	movlw	high _line1
  6385  01139C  6EF7               	movwf	tblptrh,c
  6386  01139E                     	endif
  6387  01139E                     	if	1	;There are 3 active tblptr bytes
  6388  01139E  0E00               	movlw	low (_line1 shr (0+16))
  6389  0113A0  6EF8               	movwf	tblptru,c
  6390  0113A2                     	endif
  6391  0113A2  0008               	tblrd		*
  6392  0113A4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6393  0113A8  EC75  F087         	call	_lcd_string	;wreg free
  6394                           
  6395                           ;vend.c: 300: lcd_string(pricesetm2, line2);
  6396  0113AC  0E83               	movlw	low _pricesetm2
  6397  0113AE  6E24               	movwf	lcd_string@lcdstring,c
  6398  0113B0  0EFD               	movlw	high _pricesetm2
  6399  0113B2  6E25               	movwf	lcd_string@lcdstring+1,c
  6400  0113B4  0E8E               	movlw	low _line2
  6401  0113B6  6EF6               	movwf	tblptrl,c
  6402  0113B8                     	if	1	;There is more than 1 active tblptr byte
  6403  0113B8  0EFC               	movlw	high _line2
  6404  0113BA  6EF7               	movwf	tblptrh,c
  6405  0113BC                     	endif
  6406  0113BC                     	if	1	;There are 3 active tblptr bytes
  6407  0113BC  0E00               	movlw	low (_line2 shr (0+16))
  6408  0113BE  6EF8               	movwf	tblptru,c
  6409  0113C0                     	endif
  6410  0113C0  0008               	tblrd		*
  6411  0113C2  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6412  0113C6  EC75  F087         	call	_lcd_string	;wreg free
  6413                           
  6414                           ;vend.c: 301: while(venflags.priceset)
  6415  0113CA  D00E               	goto	l2071
  6416  0113CC                     
  6417                           ;vend.c: 302: {
  6418                           ;vend.c: 303: buttons = butindb();
  6419  0113CC  ECD0  F08E         	call	_butindb	;wreg free
  6420  0113D0  6E39               	movwf	_buttons,c	;volatile
  6421                           
  6422                           ;vend.c: 304: if(buttons != 0x00)
  6423  0113D2  5039               	movf	_buttons,w,c	;volatile
  6424  0113D4  B4D8               	btfsc	status,2,c
  6425  0113D6  D003               	goto	l2070
  6426                           
  6427                           ;vend.c: 305: {
  6428                           ;vend.c: 306: set_price(buttons);
  6429  0113D8  5039               	movf	_buttons,w,c	;volatile
  6430  0113DA  EC91  F080         	call	_set_price
  6431  0113DE                     l2070:
  6432                           
  6433                           ;vend.c: 307: }
  6434                           ;vend.c: 308: if(Read_Service() == 0x00)
  6435  0113DE  EC25  F090         	call	_Read_Service	;wreg free
  6436  0113E2  0900               	iorlw	0
  6437  0113E4  B4D8               	btfsc	status,2,c
  6438                           
  6439                           ;vend.c: 309: {
  6440                           ;vend.c: 310: venflags.priceset = 0;
  6441  0113E6  902D               	bcf	_venflags+1,0,c
  6442  0113E8                     l2071:
  6443  0113E8  B02D               	btfsc	_venflags+1,0,c
  6444  0113EA  D7F0               	goto	l2069
  6445                           
  6446                           ;vend.c: 311: }
  6447                           ;vend.c: 312: }
  6448                           ;vend.c: 313: lcd_string(servmsg, line1);
  6449  0113EC  0E9E               	movlw	low _servmsg
  6450  0113EE  6E24               	movwf	lcd_string@lcdstring,c
  6451  0113F0  0EFC               	movlw	high _servmsg
  6452  0113F2  6E25               	movwf	lcd_string@lcdstring+1,c
  6453  0113F4  0E8F               	movlw	low _line1
  6454  0113F6  6EF6               	movwf	tblptrl,c
  6455  0113F8                     	if	1	;There is more than 1 active tblptr byte
  6456  0113F8  0EFC               	movlw	high _line1
  6457  0113FA  6EF7               	movwf	tblptrh,c
  6458  0113FC                     	endif
  6459  0113FC                     	if	1	;There are 3 active tblptr bytes
  6460  0113FC  0E00               	movlw	low (_line1 shr (0+16))
  6461  0113FE  6EF8               	movwf	tblptru,c
  6462  011400                     	endif
  6463  011400  0008               	tblrd		*
  6464  011402  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6465  011406  EC75  F087         	call	_lcd_string	;wreg free
  6466  01140A  0012               	return		;funcret
  6467  01140C                     __end_of_price_set:
  6468                           	opt stack 0
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           prodh	equ	0xFF4
  6474                           prodl	equ	0xFF3
  6475                           postinc0	equ	0xFEE
  6476                           wreg	equ	0xFE8
  6477                           indf2	equ	0xFDF
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8
  6481                           
  6482 ;; *************** function _set_price *****************
  6483 ;; Defined at:
  6484 ;;		line 329 in file "vend.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  buttons         1    wreg     unsigned char 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  buttons         1   14[BANK0 ] unsigned char 
  6489 ;;  channel         1   15[BANK0 ] unsigned char 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;Total ram usage:        4 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    9
  6506 ;; This function calls:
  6507 ;;		_DATAEE_ReadByte
  6508 ;;		_DATAEE_WriteByte
  6509 ;;		_butindb
  6510 ;;		_displ_price
  6511 ;;		_get_channel
  6512 ;;		_lcd_string
  6513 ;; This function is called by:
  6514 ;;		_price_set
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           	psect	text31
  6519  010122                     __ptext31:
  6520                           	opt stack 0
  6521  010122                     _set_price:
  6522                           	opt stack 19
  6523                           
  6524                           ;incstack = 0
  6525                           ;set_price@buttons stored from wreg
  6526  010122  0100               	movlb	0	; () banked
  6527  010124  6FAA               	movwf	set_price@buttons& (0+255),b
  6528                           
  6529                           ;vend.c: 331: venflags.setprice = 1;
  6530  010126  822D               	bsf	_venflags+1,1,c
  6531                           
  6532                           ;vend.c: 332: uint8_t channel = get_channel(buttons);
  6533  010128  0100               	movlb	0	; () banked
  6534  01012A  51AA               	movf	set_price@buttons& (0+255),w,b
  6535  01012C  EC99  F08F         	call	_get_channel
  6536  010130  0100               	movlb	0	; () banked
  6537  010132  6FAB               	movwf	set_price@channel& (0+255),b
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;vend.c: 334: vendprice = DATAEE_ReadByte(pricestore + channel);
  6541  010134  0E59               	movlw	low _pricestore
  6542  010136  6EF6               	movwf	tblptrl,c
  6543  010138                     	if	1	;There is more than 1 active tblptr byte
  6544  010138  0EFC               	movlw	high _pricestore
  6545  01013A  6EF7               	movwf	tblptrh,c
  6546  01013C                     	endif
  6547  01013C                     	if	1	;There are 3 active tblptr bytes
  6548  01013C  0E00               	movlw	low (_pricestore shr (0+16))
  6549  01013E  6EF8               	movwf	tblptru,c
  6550  010140                     	endif
  6551  010140  0009               	tblrd		*+
  6552  010142  CFF5 F0A8          	movff	tablat,??_set_price
  6553  010146  0009               	tblrd		*+
  6554  010148  CFF5 F0A9          	movff	tablat,??_set_price+1
  6555  01014C  51AB               	movf	set_price@channel& (0+255),w,b
  6556  01014E  25A8               	addwf	??_set_price& (0+255),w,b
  6557  010150  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  6558  010152  0E00               	movlw	0
  6559  010154  21A9               	addwfc	(??_set_price+1)& (0+255),w,b
  6560  010156  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  6561  010158  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  6562  01015C  6E38               	movwf	_vendprice,c	;volatile
  6563                           
  6564                           ;vend.c: 335: displ_price(vendprice);
  6565  01015E  5038               	movf	_vendprice,w,c	;volatile
  6566  010160  EC86  F08D         	call	_displ_price
  6567                           
  6568                           ;vend.c: 336: while(venflags.setprice)
  6569  010164  D067               	goto	l2086
  6570  010166                     
  6571                           ;vend.c: 337: {
  6572                           ;vend.c: 338: buttons = butindb();
  6573  010166  ECD0  F08E         	call	_butindb	;wreg free
  6574  01016A  0100               	movlb	0	; () banked
  6575  01016C  6FAA               	movwf	set_price@buttons& (0+255),b
  6576                           
  6577                           ;vend.c: 340: switch(buttons)
  6578  01016E  D057               	goto	l2084
  6579  010170                     
  6580                           ; BSR set to: 0
  6581                           
  6582                           ; BSR set to: 0
  6583  010170  2A38               	incf	_vendprice,f,c	;volatile
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;vend.c: 343: DATAEE_WriteByte(pricestore + channel, vendprice);
  6587  010172  0E59               	movlw	low _pricestore
  6588  010174  6EF6               	movwf	tblptrl,c
  6589  010176                     	if	1	;There is more than 1 active tblptr byte
  6590  010176  0EFC               	movlw	high _pricestore
  6591  010178  6EF7               	movwf	tblptrh,c
  6592  01017A                     	endif
  6593  01017A                     	if	1	;There are 3 active tblptr bytes
  6594  01017A  0E00               	movlw	low (_pricestore shr (0+16))
  6595  01017C  6EF8               	movwf	tblptru,c
  6596  01017E                     	endif
  6597  01017E  0009               	tblrd		*+
  6598  010180  CFF5 F0A8          	movff	tablat,??_set_price
  6599  010184  0009               	tblrd		*+
  6600  010186  CFF5 F0A9          	movff	tablat,??_set_price+1
  6601  01018A  51AB               	movf	set_price@channel& (0+255),w,b
  6602  01018C  25A8               	addwf	??_set_price& (0+255),w,b
  6603  01018E  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6604  010190  0E00               	movlw	0
  6605  010192  21A9               	addwfc	(??_set_price+1)& (0+255),w,b
  6606  010194  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6607  010196  C038  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  6608  01019A  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  6609                           
  6610                           ;vend.c: 344: displ_price(vendprice);
  6611  01019E  5038               	movf	_vendprice,w,c	;volatile
  6612  0101A0  EC86  F08D         	call	_displ_price
  6613                           
  6614                           ;vend.c: 345: break;
  6615  0101A4  D047               	goto	l2086
  6616  0101A6  0638               	decf	_vendprice,f,c	;volatile
  6617                           
  6618                           ;vend.c: 347: DATAEE_WriteByte(pricestore + channel, vendprice);
  6619  0101A8  0E59               	movlw	low _pricestore
  6620  0101AA  6EF6               	movwf	tblptrl,c
  6621  0101AC                     	if	1	;There is more than 1 active tblptr byte
  6622  0101AC  0EFC               	movlw	high _pricestore
  6623  0101AE  6EF7               	movwf	tblptrh,c
  6624  0101B0                     	endif
  6625  0101B0                     	if	1	;There are 3 active tblptr bytes
  6626  0101B0  0E00               	movlw	low (_pricestore shr (0+16))
  6627  0101B2  6EF8               	movwf	tblptru,c
  6628  0101B4                     	endif
  6629  0101B4  0009               	tblrd		*+
  6630  0101B6  CFF5 F0A8          	movff	tablat,??_set_price
  6631  0101BA  0009               	tblrd		*+
  6632  0101BC  CFF5 F0A9          	movff	tablat,??_set_price+1
  6633  0101C0  0100               	movlb	0	; () banked
  6634  0101C2  51AB               	movf	set_price@channel& (0+255),w,b
  6635  0101C4  25A8               	addwf	??_set_price& (0+255),w,b
  6636  0101C6  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  6637  0101C8  0E00               	movlw	0
  6638  0101CA  21A9               	addwfc	(??_set_price+1)& (0+255),w,b
  6639  0101CC  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  6640  0101CE  C038  F01F         	movff	_vendprice,DATAEE_WriteByte@bData	;volatile
  6641  0101D2  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  6642                           
  6643                           ;vend.c: 348: displ_price(vendprice);
  6644  0101D6  5038               	movf	_vendprice,w,c	;volatile
  6645  0101D8  EC86  F08D         	call	_displ_price
  6646                           
  6647                           ;vend.c: 349: break;
  6648  0101DC  D02B               	goto	l2086
  6649  0101DE                     l2088:
  6650                           
  6651                           ; BSR set to: 0
  6652  0101DE  922D               	bcf	_venflags+1,1,c
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;vend.c: 351: lcd_string(pricesetmsg, line1);
  6656  0101E0  0E50               	movlw	low _pricesetmsg
  6657  0101E2  6E24               	movwf	lcd_string@lcdstring,c
  6658  0101E4  0EFF               	movlw	high _pricesetmsg
  6659  0101E6  6E25               	movwf	lcd_string@lcdstring+1,c
  6660  0101E8  0E8F               	movlw	low _line1
  6661  0101EA  6EF6               	movwf	tblptrl,c
  6662  0101EC                     	if	1	;There is more than 1 active tblptr byte
  6663  0101EC  0EFC               	movlw	high _line1
  6664  0101EE  6EF7               	movwf	tblptrh,c
  6665  0101F0                     	endif
  6666  0101F0                     	if	1	;There are 3 active tblptr bytes
  6667  0101F0  0E00               	movlw	low (_line1 shr (0+16))
  6668  0101F2  6EF8               	movwf	tblptru,c
  6669  0101F4                     	endif
  6670  0101F4  0008               	tblrd		*
  6671  0101F6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6672  0101FA  EC75  F087         	call	_lcd_string	;wreg free
  6673                           
  6674                           ;vend.c: 352: lcd_string(pricesetm2, line2);
  6675  0101FE  0E83               	movlw	low _pricesetm2
  6676  010200  6E24               	movwf	lcd_string@lcdstring,c
  6677  010202  0EFD               	movlw	high _pricesetm2
  6678  010204  6E25               	movwf	lcd_string@lcdstring+1,c
  6679  010206  0E8E               	movlw	low _line2
  6680  010208  6EF6               	movwf	tblptrl,c
  6681  01020A                     	if	1	;There is more than 1 active tblptr byte
  6682  01020A  0EFC               	movlw	high _line2
  6683  01020C  6EF7               	movwf	tblptrh,c
  6684  01020E                     	endif
  6685  01020E                     	if	1	;There are 3 active tblptr bytes
  6686  01020E  0E00               	movlw	low (_line2 shr (0+16))
  6687  010210  6EF8               	movwf	tblptru,c
  6688  010212                     	endif
  6689  010212  0008               	tblrd		*
  6690  010214  CFF5 F026          	movff	tablat,lcd_string@lcdline
  6691  010218  EC75  F087         	call	_lcd_string	;wreg free
  6692                           
  6693                           ;vend.c: 355: }
  6694                           
  6695                           ;vend.c: 354: break;
  6696  01021C  D00B               	goto	l2086
  6697  01021E                     l2084:
  6698  01021E  0100               	movlb	0	; () banked
  6699  010220  51AA               	movf	set_price@buttons& (0+255),w,b
  6700                           
  6701                           ; Switch size 1, requested type "space"
  6702                           ; Number of cases is 3, Range of values is 1 to 128
  6703                           ; switch strategies available:
  6704                           ; Name         Instructions Cycles
  6705                           ; simple_byte           10     6 (average)
  6706                           ;	Chosen strategy is simple_byte
  6707  010222  0A01               	xorlw	1	; case 1
  6708  010224  B4D8               	btfsc	status,2,c
  6709  010226  D7A4               	goto	l2085
  6710  010228  0A03               	xorlw	3	; case 2
  6711  01022A  B4D8               	btfsc	status,2,c
  6712  01022C  D7BC               	goto	l2087
  6713  01022E  0A82               	xorlw	130	; case 128
  6714  010230  B4D8               	btfsc	status,2,c
  6715  010232  D7D5               	goto	l2088
  6716  010234                     l2086:
  6717                           
  6718                           ; BSR set to: 0
  6719  010234  A22D               	btfss	_venflags+1,1,c
  6720  010236  0012               	return	
  6721  010238  D796               	goto	l2083
  6722  01023A                     __end_of_set_price:
  6723                           	opt stack 0
  6724                           tblptru	equ	0xFF8
  6725                           tblptrh	equ	0xFF7
  6726                           tblptrl	equ	0xFF6
  6727                           tablat	equ	0xFF5
  6728                           prodh	equ	0xFF4
  6729                           prodl	equ	0xFF3
  6730                           postinc0	equ	0xFEE
  6731                           wreg	equ	0xFE8
  6732                           indf2	equ	0xFDF
  6733                           fsr2h	equ	0xFDA
  6734                           fsr2l	equ	0xFD9
  6735                           status	equ	0xFD8
  6736                           
  6737 ;; *************** function _displ_price *****************
  6738 ;; Defined at:
  6739 ;;		line 237 in file "lcd.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  vendprice       1    wreg     unsigned char 
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;  vendprice       1   31[COMRAM] unsigned char 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;Total ram usage:        1 bytes
  6758 ;; Hardware stack levels used:    1
  6759 ;; Hardware stack levels required when called:    8
  6760 ;; This function calls:
  6761 ;;		_displ_hex
  6762 ;;		_lcd_dispadd
  6763 ;;		_lcd_write
  6764 ;;		_lcd_writeC
  6765 ;; This function is called by:
  6766 ;;		_set_price
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text32
  6771  011B0C                     __ptext32:
  6772                           	opt stack 0
  6773  011B0C                     _displ_price:
  6774                           	opt stack 19
  6775                           
  6776                           ;incstack = 0
  6777                           ;displ_price@vendprice stored from wreg
  6778  011B0C  6E2A               	movwf	displ_price@vendprice,c
  6779                           
  6780                           ;lcd.c: 239: lcd_write(dispclr);
  6781  011B0E  0E99               	movlw	low _dispclr
  6782  011B10  6EF6               	movwf	tblptrl,c
  6783  011B12                     	if	1	;There is more than 1 active tblptr byte
  6784  011B12  0EFC               	movlw	high _dispclr
  6785  011B14  6EF7               	movwf	tblptrh,c
  6786  011B16                     	endif
  6787  011B16                     	if	1	;There are 3 active tblptr bytes
  6788  011B16  0E00               	movlw	low (_dispclr shr (0+16))
  6789  011B18  6EF8               	movwf	tblptru,c
  6790  011B1A                     	endif
  6791  011B1A  0008               	tblrd		*
  6792  011B1C  50F5               	movf	tablat,w,c
  6793  011B1E  ECE9  F08E         	call	_lcd_write
  6794                           
  6795                           ;lcd.c: 240: lcd_dispadd(line2 + 4);
  6796  011B22  0E8E               	movlw	low _line2
  6797  011B24  6EF6               	movwf	tblptrl,c
  6798  011B26                     	if	1	;There is more than 1 active tblptr byte
  6799  011B26  0EFC               	movlw	high _line2
  6800  011B28  6EF7               	movwf	tblptrh,c
  6801  011B2A                     	endif
  6802  011B2A                     	if	1	;There are 3 active tblptr bytes
  6803  011B2A  0E00               	movlw	low (_line2 shr (0+16))
  6804  011B2C  6EF8               	movwf	tblptru,c
  6805  011B2E                     	endif
  6806  011B2E  0008               	tblrd		*
  6807  011B30  50F5               	movf	tablat,w,c
  6808  011B32  0F04               	addlw	4
  6809  011B34  ECC3  F08F         	call	_lcd_dispadd
  6810                           
  6811                           ;lcd.c: 241: lcd_writeC((uint8_t)'R');
  6812  011B38  0E52               	movlw	82
  6813  011B3A  EC91  F08B         	call	_lcd_writeC
  6814                           
  6815                           ;lcd.c: 242: displ_hex(vendprice);
  6816  011B3E  502A               	movf	displ_price@vendprice,w,c
  6817  011B40  6E27               	movwf	displ_hex@hexnum,c
  6818  011B42  6A28               	clrf	displ_hex@hexnum+1,c
  6819  011B44  6A29               	clrf	displ_hex@hexnum+2,c
  6820  011B46  EC1A  F087         	call	_displ_hex	;wreg free
  6821  011B4A  0012               	return		;funcret
  6822  011B4C                     __end_of_displ_price:
  6823                           	opt stack 0
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           prodh	equ	0xFF4
  6829                           prodl	equ	0xFF3
  6830                           postinc0	equ	0xFEE
  6831                           wreg	equ	0xFE8
  6832                           indf2	equ	0xFDF
  6833                           fsr2h	equ	0xFDA
  6834                           fsr2l	equ	0xFD9
  6835                           status	equ	0xFD8
  6836                           
  6837 ;; *************** function _mdb_unlock *****************
  6838 ;; Defined at:
  6839 ;;		line 375 in file "mdb.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;		None
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  1    wreg      void 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0, cstack
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;Total ram usage:        1 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    3
  6860 ;; This function calls:
  6861 ;;		_CMP1_Initialize
  6862 ;;		_DAC1_Initialize
  6863 ;;		_TMR1_Initialize
  6864 ;;		_TMR3_Initialize
  6865 ;;		_TMR5_Initialize
  6866 ;; This function is called by:
  6867 ;;		_enter_service
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text33
  6872  0109C0                     __ptext33:
  6873                           	opt stack 0
  6874  0109C0                     _mdb_unlock:
  6875                           	opt stack 26
  6876                           
  6877                           ;mdb.c: 377: _delay((unsigned long)((50)*(12000000/4000.0)));
  6878                           
  6879                           ;incstack = 0
  6880  0109C0  0EC3               	movlw	195
  6881  0109C2  6E1F               	movwf	??_mdb_unlock& (0+255),c
  6882  0109C4  0ECD               	movlw	205
  6883  0109C6                     u3417:
  6884  0109C6  2EE8               	decfsz	wreg,f,c
  6885  0109C8  D7FE               	bra	u3417
  6886  0109CA  2E1F               	decfsz	??_mdb_unlock& (0+255),f,c
  6887  0109CC  D7FC               	bra	u3417
  6888  0109CE  F000               	nop	
  6889                           
  6890                           ;mdb.c: 378: LATE = 0x00;
  6891  0109D0  0E00               	movlw	0
  6892  0109D2  6E87               	movwf	3975,c	;volatile
  6893                           
  6894                           ;mdb.c: 379: LATD = 0x00;
  6895  0109D4  0E00               	movlw	0
  6896  0109D6  6E86               	movwf	3974,c	;volatile
  6897                           
  6898                           ;mdb.c: 380: LATA = 0xC0;
  6899  0109D8  0EC0               	movlw	192
  6900  0109DA  6E83               	movwf	3971,c	;volatile
  6901                           
  6902                           ;mdb.c: 381: LATB = 0x00;
  6903  0109DC  0E00               	movlw	0
  6904  0109DE  6E84               	movwf	3972,c	;volatile
  6905                           
  6906                           ;mdb.c: 382: LATC = 0x01;
  6907  0109E0  0E01               	movlw	1
  6908  0109E2  6E85               	movwf	3973,c	;volatile
  6909                           
  6910                           ;mdb.c: 387: TRISE = 0x00;
  6911  0109E4  0E00               	movlw	0
  6912  0109E6  6E8C               	movwf	3980,c	;volatile
  6913                           
  6914                           ;mdb.c: 388: TRISA = 0x1F;
  6915  0109E8  0E1F               	movlw	31
  6916  0109EA  6E88               	movwf	3976,c	;volatile
  6917                           
  6918                           ;mdb.c: 389: TRISB = 0xD0;
  6919  0109EC  0ED0               	movlw	208
  6920  0109EE  6E89               	movwf	3977,c	;volatile
  6921                           
  6922                           ;mdb.c: 390: TRISC = 0x80;
  6923  0109F0  0E80               	movlw	128
  6924  0109F2  6E8A               	movwf	3978,c	;volatile
  6925                           
  6926                           ;mdb.c: 391: TRISD = 0x00;
  6927  0109F4  0E00               	movlw	0
  6928  0109F6  6E8B               	movwf	3979,c	;volatile
  6929                           
  6930                           ;mdb.c: 396: ANSELC = 0x00;
  6931  0109F8  0E00               	movlw	0
  6932  0109FA  010F               	movlb	15	; () banked
  6933  0109FC  6F21               	movwf	33,b	;volatile
  6934                           
  6935                           ; BSR set to: 15
  6936                           ;mdb.c: 397: ANSELB = 0xC0;
  6937  0109FE  0EC0               	movlw	192
  6938  010A00  6F19               	movwf	25,b	;volatile
  6939                           
  6940                           ; BSR set to: 15
  6941                           ;mdb.c: 398: ANSELD = 0x00;
  6942  010A02  0E00               	movlw	0
  6943  010A04  6F26               	movwf	38,b	;volatile
  6944                           
  6945                           ; BSR set to: 15
  6946                           ;mdb.c: 399: ANSELE = 0x00;
  6947  010A06  0E00               	movlw	0
  6948  010A08  6F2E               	movwf	46,b	;volatile
  6949                           
  6950                           ; BSR set to: 15
  6951                           ;mdb.c: 400: ANSELA = 0x01;
  6952  010A0A  0E01               	movlw	1
  6953  010A0C  6F11               	movwf	17,b	;volatile
  6954                           
  6955                           ; BSR set to: 15
  6956                           ;mdb.c: 405: WPUD = 0x00;
  6957  010A0E  0E00               	movlw	0
  6958  010A10  6F25               	movwf	37,b	;volatile
  6959                           
  6960                           ; BSR set to: 15
  6961                           ;mdb.c: 406: WPUE = 0x00;
  6962  010A12  0E00               	movlw	0
  6963  010A14  6F2D               	movwf	45,b	;volatile
  6964                           
  6965                           ; BSR set to: 15
  6966                           ;mdb.c: 407: WPUB = 0x00;
  6967  010A16  0E00               	movlw	0
  6968  010A18  6F18               	movwf	24,b	;volatile
  6969                           
  6970                           ; BSR set to: 15
  6971                           ;mdb.c: 408: WPUA = 0x00;
  6972  010A1A  0E00               	movlw	0
  6973  010A1C  6F10               	movwf	16,b	;volatile
  6974                           
  6975                           ; BSR set to: 15
  6976                           ;mdb.c: 409: WPUC = 0x00;
  6977  010A1E  0E00               	movlw	0
  6978  010A20  6F20               	movwf	32,b	;volatile
  6979                           
  6980                           ; BSR set to: 15
  6981                           ;mdb.c: 414: ODCONE = 0x00;
  6982  010A22  0E00               	movlw	0
  6983  010A24  6F2C               	movwf	44,b	;volatile
  6984                           
  6985                           ; BSR set to: 15
  6986                           ;mdb.c: 415: ODCONA = 0x00;
  6987  010A26  0E00               	movlw	0
  6988  010A28  6F0F               	movwf	15,b	;volatile
  6989                           
  6990                           ; BSR set to: 15
  6991                           ;mdb.c: 416: ODCONB = 0x00;
  6992  010A2A  0E00               	movlw	0
  6993  010A2C  6F17               	movwf	23,b	;volatile
  6994                           
  6995                           ; BSR set to: 15
  6996                           ;mdb.c: 417: ODCONC = 0x00;
  6997  010A2E  0E00               	movlw	0
  6998  010A30  6F1F               	movwf	31,b	;volatile
  6999                           
  7000                           ; BSR set to: 15
  7001                           ;mdb.c: 418: ODCOND = 0x00;
  7002  010A32  0E00               	movlw	0
  7003  010A34  6F24               	movwf	36,b	;volatile
  7004                           
  7005                           ; BSR set to: 15
  7006                           ;mdb.c: 419: LATC = 0x01;
  7007  010A36  0E01               	movlw	1
  7008  010A38  6E85               	movwf	3973,c	;volatile
  7009                           
  7010                           ; BSR set to: 15
  7011                           ;mdb.c: 420: TRISC = 0x80;
  7012  010A3A  0E80               	movlw	128
  7013  010A3C  6E8A               	movwf	3978,c	;volatile
  7014                           
  7015                           ; BSR set to: 15
  7016                           ;mdb.c: 421: ANSELC = 0x00;
  7017  010A3E  0E00               	movlw	0
  7018  010A40  6F21               	movwf	33,b	;volatile
  7019                           
  7020                           ; BSR set to: 15
  7021                           ;mdb.c: 422: WPUC = 0x00;
  7022  010A42  0E00               	movlw	0
  7023  010A44  6F20               	movwf	32,b	;volatile
  7024                           
  7025                           ; BSR set to: 15
  7026                           ;mdb.c: 423: ODCONC = 0x00;
  7027  010A46  0E00               	movlw	0
  7028  010A48  6F1F               	movwf	31,b	;volatile
  7029                           
  7030                           ; BSR set to: 15
  7031                           ;mdb.c: 424: PPSLOCK = 0x55;
  7032  010A4A  0E55               	movlw	85
  7033  010A4C  010E               	movlb	14	; () banked
  7034  010A4E  6FA0               	movwf	160,b	;volsfr
  7035                           
  7036                           ; BSR set to: 14
  7037                           ;mdb.c: 425: PPSLOCK = 0xAA;
  7038  010A50  0EAA               	movlw	170
  7039  010A52  6FA0               	movwf	160,b	;volsfr
  7040                           
  7041                           ; BSR set to: 14
  7042                           ;mdb.c: 426: PPSLOCKbits.PPSLOCKED = 0x00;
  7043  010A54  91A0               	bcf	160,0,b	;volsfr
  7044                           
  7045                           ; BSR set to: 14
  7046                           ;mdb.c: 428: RX1PPSbits.RXPPS = 0x0;
  7047  010A56  91B5               	bcf	181,0,b	;volatile
  7048  010A58  93B5               	bcf	181,1,b	;volatile
  7049  010A5A  95B5               	bcf	181,2,b	;volatile
  7050  010A5C  97B5               	bcf	181,3,b	;volatile
  7051  010A5E  99B5               	bcf	181,4,b	;volatile
  7052                           
  7053                           ; BSR set to: 14
  7054                           ;mdb.c: 429: RC6PPS = 0x0;
  7055  010A60  0E00               	movlw	0
  7056  010A62  6FFD               	movwf	253,b	;volatile
  7057                           
  7058                           ; BSR set to: 14
  7059                           ;mdb.c: 430: RB5PPS = 0x0;
  7060  010A64  0E00               	movlw	0
  7061  010A66  6FF4               	movwf	244,b	;volatile
  7062                           
  7063                           ; BSR set to: 14
  7064                           ;mdb.c: 431: RX2PPSbits.RXPPS = 0x0;
  7065  010A68  918D               	bcf	141,0,b	;volatile
  7066  010A6A  938D               	bcf	141,1,b	;volatile
  7067  010A6C  958D               	bcf	141,2,b	;volatile
  7068  010A6E  978D               	bcf	141,3,b	;volatile
  7069  010A70  998D               	bcf	141,4,b	;volatile
  7070                           
  7071                           ; BSR set to: 14
  7072                           ;mdb.c: 432: CMP1_Initialize();
  7073  010A72  EC12  F090         	call	_CMP1_Initialize	;wreg free
  7074                           
  7075                           ;mdb.c: 433: TMR3_Initialize();
  7076  010A76  EC4D  F08E         	call	_TMR3_Initialize	;wreg free
  7077                           
  7078                           ;mdb.c: 434: DAC1_Initialize();
  7079  010A7A  EC51  F090         	call	_DAC1_Initialize	;wreg free
  7080                           
  7081                           ;mdb.c: 435: TMR5_Initialize();
  7082  010A7E  EC32  F08E         	call	_TMR5_Initialize	;wreg free
  7083                           
  7084                           ;mdb.c: 436: TMR1_Initialize();
  7085  010A82  EC68  F08E         	call	_TMR1_Initialize	;wreg free
  7086  010A86  0012               	return		;funcret
  7087  010A88                     __end_of_mdb_unlock:
  7088                           	opt stack 0
  7089                           tblptru	equ	0xFF8
  7090                           tblptrh	equ	0xFF7
  7091                           tblptrl	equ	0xFF6
  7092                           tablat	equ	0xFF5
  7093                           prodh	equ	0xFF4
  7094                           prodl	equ	0xFF3
  7095                           postinc0	equ	0xFEE
  7096                           wreg	equ	0xFE8
  7097                           indf2	equ	0xFDF
  7098                           fsr2h	equ	0xFDA
  7099                           fsr2l	equ	0xFD9
  7100                           status	equ	0xFD8
  7101                           
  7102 ;; *************** function _Vend_setup *****************
  7103 ;; Defined at:
  7104 ;;		line 363 in file "vend.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;		None
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;Total ram usage:        0 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:   11
  7125 ;; This function calls:
  7126 ;;		_Chan_link
  7127 ;;		_Init_vendmem
  7128 ;;		_Reset_settings
  7129 ;;		_Sens_off
  7130 ;;		_Vend_settime
  7131 ;;		_butindb
  7132 ;;		_lcd_string
  7133 ;; This function is called by:
  7134 ;;		_enter_service
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text34
  7139  01023A                     __ptext34:
  7140                           	opt stack 0
  7141  01023A                     _Vend_setup:
  7142                           	opt stack 18
  7143                           
  7144                           ;vend.c: 365: venflags.vendset = 1;
  7145                           
  7146                           ;incstack = 0
  7147  01023A  842D               	bsf	_venflags+1,2,c
  7148                           
  7149                           ;vend.c: 366: lcd_string(vendsetup, line1);
  7150  01023C  0EEE               	movlw	low _vendsetup
  7151  01023E  6E24               	movwf	lcd_string@lcdstring,c
  7152  010240  0EFC               	movlw	high _vendsetup
  7153  010242  6E25               	movwf	lcd_string@lcdstring+1,c
  7154  010244  0E8F               	movlw	low _line1
  7155  010246  6EF6               	movwf	tblptrl,c
  7156  010248                     	if	1	;There is more than 1 active tblptr byte
  7157  010248  0EFC               	movlw	high _line1
  7158  01024A  6EF7               	movwf	tblptrh,c
  7159  01024C                     	endif
  7160  01024C                     	if	1	;There are 3 active tblptr bytes
  7161  01024C  0E00               	movlw	low (_line1 shr (0+16))
  7162  01024E  6EF8               	movwf	tblptru,c
  7163  010250                     	endif
  7164  010250  0008               	tblrd		*
  7165  010252  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7166  010256  EC75  F087         	call	_lcd_string	;wreg free
  7167                           
  7168                           ;vend.c: 367: while(venflags.vendset)
  7169  01025A  D06F               	goto	l2097
  7170  01025C                     
  7171                           ;vend.c: 368: {
  7172                           ;vend.c: 369: buttons = butindb();
  7173  01025C  ECD0  F08E         	call	_butindb	;wreg free
  7174  010260  6E39               	movwf	_buttons,c	;volatile
  7175                           
  7176                           ;vend.c: 370: switch(buttons)
  7177  010262  D05B               	goto	l2095
  7178  010264  ECD2  F08C         	call	_Vend_settime	;wreg free
  7179                           
  7180                           ;vend.c: 373: lcd_string(vendsetup, line1);
  7181  010268  0EEE               	movlw	low _vendsetup
  7182  01026A  6E24               	movwf	lcd_string@lcdstring,c
  7183  01026C  0EFC               	movlw	high _vendsetup
  7184  01026E  6E25               	movwf	lcd_string@lcdstring+1,c
  7185  010270  0E8F               	movlw	low _line1
  7186  010272  6EF6               	movwf	tblptrl,c
  7187  010274                     	if	1	;There is more than 1 active tblptr byte
  7188  010274  0EFC               	movlw	high _line1
  7189  010276  6EF7               	movwf	tblptrh,c
  7190  010278                     	endif
  7191  010278                     	if	1	;There are 3 active tblptr bytes
  7192  010278  0E00               	movlw	low (_line1 shr (0+16))
  7193  01027A  6EF8               	movwf	tblptru,c
  7194  01027C                     	endif
  7195  01027C  0008               	tblrd		*
  7196  01027E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7197  010282  EC75  F087         	call	_lcd_string	;wreg free
  7198                           
  7199                           ;vend.c: 374: break;
  7200  010286  D059               	goto	l2097
  7201  010288  ECC4  F08B         	call	_Chan_link	;wreg free
  7202                           
  7203                           ;vend.c: 376: lcd_string(vendsetup, line1);
  7204  01028C  0EEE               	movlw	low _vendsetup
  7205  01028E  6E24               	movwf	lcd_string@lcdstring,c
  7206  010290  0EFC               	movlw	high _vendsetup
  7207  010292  6E25               	movwf	lcd_string@lcdstring+1,c
  7208  010294  0E8F               	movlw	low _line1
  7209  010296  6EF6               	movwf	tblptrl,c
  7210  010298                     	if	1	;There is more than 1 active tblptr byte
  7211  010298  0EFC               	movlw	high _line1
  7212  01029A  6EF7               	movwf	tblptrh,c
  7213  01029C                     	endif
  7214  01029C                     	if	1	;There are 3 active tblptr bytes
  7215  01029C  0E00               	movlw	low (_line1 shr (0+16))
  7216  01029E  6EF8               	movwf	tblptru,c
  7217  0102A0                     	endif
  7218  0102A0  0008               	tblrd		*
  7219  0102A2  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7220  0102A6  EC75  F087         	call	_lcd_string	;wreg free
  7221                           
  7222                           ;vend.c: 377: break;
  7223  0102AA  D047               	goto	l2097
  7224  0102AC  ECF9  F08C         	call	_Sens_off	;wreg free
  7225                           
  7226                           ;vend.c: 379: lcd_string(vendsetup, line1);
  7227  0102B0  0EEE               	movlw	low _vendsetup
  7228  0102B2  6E24               	movwf	lcd_string@lcdstring,c
  7229  0102B4  0EFC               	movlw	high _vendsetup
  7230  0102B6  6E25               	movwf	lcd_string@lcdstring+1,c
  7231  0102B8  0E8F               	movlw	low _line1
  7232  0102BA  6EF6               	movwf	tblptrl,c
  7233  0102BC                     	if	1	;There is more than 1 active tblptr byte
  7234  0102BC  0EFC               	movlw	high _line1
  7235  0102BE  6EF7               	movwf	tblptrh,c
  7236  0102C0                     	endif
  7237  0102C0                     	if	1	;There are 3 active tblptr bytes
  7238  0102C0  0E00               	movlw	low (_line1 shr (0+16))
  7239  0102C2  6EF8               	movwf	tblptru,c
  7240  0102C4                     	endif
  7241  0102C4  0008               	tblrd		*
  7242  0102C6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7243  0102CA  EC75  F087         	call	_lcd_string	;wreg free
  7244                           
  7245                           ;vend.c: 380: break;
  7246  0102CE  D035               	goto	l2097
  7247  0102D0  ECCF  F087         	call	_Reset_settings	;wreg free
  7248                           
  7249                           ;vend.c: 382: lcd_string(vendsetup, line1);
  7250  0102D4  0EEE               	movlw	low _vendsetup
  7251  0102D6  6E24               	movwf	lcd_string@lcdstring,c
  7252  0102D8  0EFC               	movlw	high _vendsetup
  7253  0102DA  6E25               	movwf	lcd_string@lcdstring+1,c
  7254  0102DC  0E8F               	movlw	low _line1
  7255  0102DE  6EF6               	movwf	tblptrl,c
  7256  0102E0                     	if	1	;There is more than 1 active tblptr byte
  7257  0102E0  0EFC               	movlw	high _line1
  7258  0102E2  6EF7               	movwf	tblptrh,c
  7259  0102E4                     	endif
  7260  0102E4                     	if	1	;There are 3 active tblptr bytes
  7261  0102E4  0E00               	movlw	low (_line1 shr (0+16))
  7262  0102E6  6EF8               	movwf	tblptru,c
  7263  0102E8                     	endif
  7264  0102E8  0008               	tblrd		*
  7265  0102EA  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7266  0102EE  EC75  F087         	call	_lcd_string	;wreg free
  7267                           
  7268                           ;vend.c: 383: break;
  7269  0102F2  D023               	goto	l2097
  7270  0102F4                     l2101:
  7271  0102F4  942D               	bcf	_venflags+1,2,c
  7272                           
  7273                           ;vend.c: 386: Init_vendmem();
  7274  0102F6  ECBA  F08A         	call	_Init_vendmem	;wreg free
  7275                           
  7276                           ;vend.c: 387: lcd_string(servmsg, line1);
  7277  0102FA  0E9E               	movlw	low _servmsg
  7278  0102FC  6E24               	movwf	lcd_string@lcdstring,c
  7279  0102FE  0EFC               	movlw	high _servmsg
  7280  010300  6E25               	movwf	lcd_string@lcdstring+1,c
  7281  010302  0E8F               	movlw	low _line1
  7282  010304  6EF6               	movwf	tblptrl,c
  7283  010306                     	if	1	;There is more than 1 active tblptr byte
  7284  010306  0EFC               	movlw	high _line1
  7285  010308  6EF7               	movwf	tblptrh,c
  7286  01030A                     	endif
  7287  01030A                     	if	1	;There are 3 active tblptr bytes
  7288  01030A  0E00               	movlw	low (_line1 shr (0+16))
  7289  01030C  6EF8               	movwf	tblptru,c
  7290  01030E                     	endif
  7291  01030E  0008               	tblrd		*
  7292  010310  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7293  010314  EC75  F087         	call	_lcd_string	;wreg free
  7294                           
  7295                           ;vend.c: 389: }
  7296                           
  7297                           ;vend.c: 388: break;
  7298  010318  D010               	goto	l2097
  7299  01031A                     l2095:
  7300  01031A  5039               	movf	_buttons,w,c	;volatile
  7301                           
  7302                           ; Switch size 1, requested type "space"
  7303                           ; Number of cases is 5, Range of values is 1 to 128
  7304                           ; switch strategies available:
  7305                           ; Name         Instructions Cycles
  7306                           ; simple_byte           16     9 (average)
  7307                           ;	Chosen strategy is simple_byte
  7308  01031C  0A01               	xorlw	1	; case 1
  7309  01031E  B4D8               	btfsc	status,2,c
  7310  010320  D7A1               	goto	l2096
  7311  010322  0A03               	xorlw	3	; case 2
  7312  010324  B4D8               	btfsc	status,2,c
  7313  010326  D7B0               	goto	l2098
  7314  010328  0A06               	xorlw	6	; case 4
  7315  01032A  B4D8               	btfsc	status,2,c
  7316  01032C  D7BF               	goto	l2099
  7317  01032E  0A0C               	xorlw	12	; case 8
  7318  010330  B4D8               	btfsc	status,2,c
  7319  010332  D7CE               	goto	l2100
  7320  010334  0A88               	xorlw	136	; case 128
  7321  010336  B4D8               	btfsc	status,2,c
  7322  010338  D7DD               	goto	l2101
  7323  01033A                     l2097:
  7324  01033A  A42D               	btfss	_venflags+1,2,c
  7325  01033C  0012               	return	
  7326  01033E  D78E               	goto	l2094
  7327  010340                     __end_of_Vend_setup:
  7328                           	opt stack 0
  7329                           tblptru	equ	0xFF8
  7330                           tblptrh	equ	0xFF7
  7331                           tblptrl	equ	0xFF6
  7332                           tablat	equ	0xFF5
  7333                           prodh	equ	0xFF4
  7334                           prodl	equ	0xFF3
  7335                           postinc0	equ	0xFEE
  7336                           wreg	equ	0xFE8
  7337                           indf2	equ	0xFDF
  7338                           fsr2h	equ	0xFDA
  7339                           fsr2l	equ	0xFD9
  7340                           status	equ	0xFD8
  7341                           
  7342 ;; *************** function _Vend_settime *****************
  7343 ;; Defined at:
  7344 ;;		line 393 in file "vend.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;		None
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;Total ram usage:        0 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:   10
  7365 ;; This function calls:
  7366 ;;		_Read_Service
  7367 ;;		_Vend_timeset
  7368 ;;		_butindb
  7369 ;;		_get_channel
  7370 ;;		_lcd_string
  7371 ;; This function is called by:
  7372 ;;		_Vend_setup
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text35
  7377  0119A4                     __ptext35:
  7378                           	opt stack 0
  7379  0119A4                     _Vend_settime:
  7380                           	opt stack 18
  7381                           
  7382                           ;vend.c: 396: lcd_string(setimemsg, line1);
  7383                           
  7384                           ;incstack = 0
  7385  0119A4  0E80               	movlw	low _setimemsg
  7386  0119A6  6E24               	movwf	lcd_string@lcdstring,c
  7387  0119A8  0EFE               	movlw	high _setimemsg
  7388  0119AA  6E25               	movwf	lcd_string@lcdstring+1,c
  7389  0119AC  0E8F               	movlw	low _line1
  7390  0119AE  6EF6               	movwf	tblptrl,c
  7391  0119B0                     	if	1	;There is more than 1 active tblptr byte
  7392  0119B0  0EFC               	movlw	high _line1
  7393  0119B2  6EF7               	movwf	tblptrh,c
  7394  0119B4                     	endif
  7395  0119B4                     	if	1	;There are 3 active tblptr bytes
  7396  0119B4  0E00               	movlw	low (_line1 shr (0+16))
  7397  0119B6  6EF8               	movwf	tblptru,c
  7398  0119B8                     	endif
  7399  0119B8  0008               	tblrd		*
  7400  0119BA  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7401  0119BE  EC75  F087         	call	_lcd_string	;wreg free
  7402                           
  7403                           ;vend.c: 397: buttons = butindb();
  7404  0119C2  ECD0  F08E         	call	_butindb	;wreg free
  7405  0119C6  6E39               	movwf	_buttons,c	;volatile
  7406                           
  7407                           ;vend.c: 398: venflags.settime = 1;
  7408  0119C8  8C2D               	bsf	_venflags+1,6,c
  7409                           
  7410                           ;vend.c: 400: while(venflags.settime)
  7411  0119CA  D010               	goto	l2109
  7412  0119CC                     
  7413                           ;vend.c: 401: {
  7414                           ;vend.c: 402: buttons = butindb();
  7415  0119CC  ECD0  F08E         	call	_butindb	;wreg free
  7416  0119D0  6E39               	movwf	_buttons,c	;volatile
  7417                           
  7418                           ;vend.c: 403: if(buttons != 0x00)
  7419  0119D2  5039               	movf	_buttons,w,c	;volatile
  7420  0119D4  B4D8               	btfsc	status,2,c
  7421  0119D6  D005               	goto	l2108
  7422                           
  7423                           ;vend.c: 404: {
  7424                           ;vend.c: 405: Vend_timeset(get_channel(buttons));
  7425  0119D8  5039               	movf	_buttons,w,c	;volatile
  7426  0119DA  EC99  F08F         	call	_get_channel
  7427  0119DE  EC23  F082         	call	_Vend_timeset
  7428  0119E2                     l2108:
  7429                           
  7430                           ;vend.c: 406: }
  7431                           ;vend.c: 407: if(Read_Service() == 0x00)
  7432  0119E2  EC25  F090         	call	_Read_Service	;wreg free
  7433  0119E6  0900               	iorlw	0
  7434  0119E8  B4D8               	btfsc	status,2,c
  7435                           
  7436                           ;vend.c: 408: {
  7437                           ;vend.c: 409: venflags.settime = 0;
  7438  0119EA  9C2D               	bcf	_venflags+1,6,c
  7439  0119EC                     l2109:
  7440  0119EC  AC2D               	btfss	_venflags+1,6,c
  7441  0119EE  0012               	return	
  7442  0119F0  D7ED               	goto	l2107
  7443  0119F2                     __end_of_Vend_settime:
  7444                           	opt stack 0
  7445                           tblptru	equ	0xFF8
  7446                           tblptrh	equ	0xFF7
  7447                           tblptrl	equ	0xFF6
  7448                           tablat	equ	0xFF5
  7449                           prodh	equ	0xFF4
  7450                           prodl	equ	0xFF3
  7451                           postinc0	equ	0xFEE
  7452                           wreg	equ	0xFE8
  7453                           indf2	equ	0xFDF
  7454                           fsr2h	equ	0xFDA
  7455                           fsr2l	equ	0xFD9
  7456                           status	equ	0xFD8
  7457                           
  7458 ;; *************** function _Vend_timeset *****************
  7459 ;; Defined at:
  7460 ;;		line 416 in file "vend.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  channel         1    wreg     unsigned char 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  channel         1   15[BANK0 ] unsigned char 
  7465 ;;  chantime        1   14[BANK0 ] unsigned char 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7476 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7477 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7479 ;;Total ram usage:        4 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    9
  7482 ;; This function calls:
  7483 ;;		_DATAEE_ReadByte
  7484 ;;		_DATAEE_WriteByte
  7485 ;;		_butindb
  7486 ;;		_displ_time
  7487 ;;		_lcd_string
  7488 ;; This function is called by:
  7489 ;;		_Vend_settime
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text36
  7494  010446                     __ptext36:
  7495                           	opt stack 0
  7496  010446                     _Vend_timeset:
  7497                           	opt stack 18
  7498                           
  7499                           ;incstack = 0
  7500                           ;Vend_timeset@channel stored from wreg
  7501  010446  0100               	movlb	0	; () banked
  7502  010448  6FAB               	movwf	Vend_timeset@channel& (0+255),b
  7503                           
  7504                           ;vend.c: 418: venflags.mottime = 1;
  7505  01044A  882D               	bsf	_venflags+1,4,c
  7506                           
  7507                           ;vend.c: 419: lcd_string(vendtimem, line1);
  7508  01044C  0E57               	movlw	low _vendtimem
  7509  01044E  6E24               	movwf	lcd_string@lcdstring,c
  7510  010450  0EFE               	movlw	high _vendtimem
  7511  010452  6E25               	movwf	lcd_string@lcdstring+1,c
  7512  010454  0E8F               	movlw	low _line1
  7513  010456  6EF6               	movwf	tblptrl,c
  7514  010458                     	if	1	;There is more than 1 active tblptr byte
  7515  010458  0EFC               	movlw	high _line1
  7516  01045A  6EF7               	movwf	tblptrh,c
  7517  01045C                     	endif
  7518  01045C                     	if	1	;There are 3 active tblptr bytes
  7519  01045C  0E00               	movlw	low (_line1 shr (0+16))
  7520  01045E  6EF8               	movwf	tblptru,c
  7521  010460                     	endif
  7522  010460  0008               	tblrd		*
  7523  010462  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7524  010466  EC75  F087         	call	_lcd_string	;wreg free
  7525                           
  7526                           ;vend.c: 420: uint8_t chantime = DATAEE_ReadByte(chan1time + channel);
  7527  01046A  0E3B               	movlw	low _chan1time
  7528  01046C  6EF6               	movwf	tblptrl,c
  7529  01046E                     	if	1	;There is more than 1 active tblptr byte
  7530  01046E  0EFC               	movlw	high _chan1time
  7531  010470  6EF7               	movwf	tblptrh,c
  7532  010472                     	endif
  7533  010472                     	if	1	;There are 3 active tblptr bytes
  7534  010472  0E00               	movlw	low (_chan1time shr (0+16))
  7535  010474  6EF8               	movwf	tblptru,c
  7536  010476                     	endif
  7537  010476  0009               	tblrd		*+
  7538  010478  CFF5 F0A8          	movff	tablat,??_Vend_timeset
  7539  01047C  0009               	tblrd		*+
  7540  01047E  CFF5 F0A9          	movff	tablat,??_Vend_timeset+1
  7541  010482  0100               	movlb	0	; () banked
  7542  010484  51AB               	movf	Vend_timeset@channel& (0+255),w,b
  7543  010486  25A8               	addwf	??_Vend_timeset& (0+255),w,b
  7544  010488  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  7545  01048A  0E00               	movlw	0
  7546  01048C  21A9               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
  7547  01048E  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  7548  010490  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  7549  010494  0100               	movlb	0	; () banked
  7550  010496  6FAA               	movwf	Vend_timeset@chantime& (0+255),b
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;vend.c: 421: displ_time(chantime, channel);
  7554  010498  C0AB  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7555  01049C  51AA               	movf	Vend_timeset@chantime& (0+255),w,b
  7556  01049E  EC6D  F088         	call	_displ_time
  7557                           
  7558                           ;vend.c: 422: while(venflags.mottime)
  7559  0104A2  D04E               	goto	l2118
  7560  0104A4                     
  7561                           ;vend.c: 423: {
  7562                           ;vend.c: 424: buttons = butindb();
  7563  0104A4  ECD0  F08E         	call	_butindb	;wreg free
  7564  0104A8  6E39               	movwf	_buttons,c	;volatile
  7565                           
  7566                           ;vend.c: 425: switch(buttons)
  7567  0104AA  D040               	goto	l2116
  7568  0104AC  0100               	movlb	0	; () banked
  7569  0104AE  2BAA               	incf	Vend_timeset@chantime& (0+255),f,b
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;vend.c: 428: DATAEE_WriteByte(chan1time + channel, chantime);
  7573  0104B0  0E3B               	movlw	low _chan1time
  7574  0104B2  6EF6               	movwf	tblptrl,c
  7575  0104B4                     	if	1	;There is more than 1 active tblptr byte
  7576  0104B4  0EFC               	movlw	high _chan1time
  7577  0104B6  6EF7               	movwf	tblptrh,c
  7578  0104B8                     	endif
  7579  0104B8                     	if	1	;There are 3 active tblptr bytes
  7580  0104B8  0E00               	movlw	low (_chan1time shr (0+16))
  7581  0104BA  6EF8               	movwf	tblptru,c
  7582  0104BC                     	endif
  7583  0104BC  0009               	tblrd		*+
  7584  0104BE  CFF5 F0A8          	movff	tablat,??_Vend_timeset
  7585  0104C2  0009               	tblrd		*+
  7586  0104C4  CFF5 F0A9          	movff	tablat,??_Vend_timeset+1
  7587  0104C8  51AB               	movf	Vend_timeset@channel& (0+255),w,b
  7588  0104CA  25A8               	addwf	??_Vend_timeset& (0+255),w,b
  7589  0104CC  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  7590  0104CE  0E00               	movlw	0
  7591  0104D0  21A9               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
  7592  0104D2  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  7593  0104D4  C0AA  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
  7594  0104D8  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  7595                           
  7596                           ;vend.c: 429: displ_time(chantime, channel);
  7597  0104DC  C0AB  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7598  0104E0  0100               	movlb	0	; () banked
  7599  0104E2  51AA               	movf	Vend_timeset@chantime& (0+255),w,b
  7600  0104E4  EC6D  F088         	call	_displ_time
  7601                           
  7602                           ;vend.c: 430: break;
  7603  0104E8  D02B               	goto	l2118
  7604  0104EA  0100               	movlb	0	; () banked
  7605  0104EC  07AA               	decf	Vend_timeset@chantime& (0+255),f,b
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;vend.c: 432: DATAEE_WriteByte(chan1time + channel, chantime);
  7609  0104EE  0E3B               	movlw	low _chan1time
  7610  0104F0  6EF6               	movwf	tblptrl,c
  7611  0104F2                     	if	1	;There is more than 1 active tblptr byte
  7612  0104F2  0EFC               	movlw	high _chan1time
  7613  0104F4  6EF7               	movwf	tblptrh,c
  7614  0104F6                     	endif
  7615  0104F6                     	if	1	;There are 3 active tblptr bytes
  7616  0104F6  0E00               	movlw	low (_chan1time shr (0+16))
  7617  0104F8  6EF8               	movwf	tblptru,c
  7618  0104FA                     	endif
  7619  0104FA  0009               	tblrd		*+
  7620  0104FC  CFF5 F0A8          	movff	tablat,??_Vend_timeset
  7621  010500  0009               	tblrd		*+
  7622  010502  CFF5 F0A9          	movff	tablat,??_Vend_timeset+1
  7623  010506  51AB               	movf	Vend_timeset@channel& (0+255),w,b
  7624  010508  25A8               	addwf	??_Vend_timeset& (0+255),w,b
  7625  01050A  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  7626  01050C  0E00               	movlw	0
  7627  01050E  21A9               	addwfc	(??_Vend_timeset+1)& (0+255),w,b
  7628  010510  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  7629  010512  C0AA  F01F         	movff	Vend_timeset@chantime,DATAEE_WriteByte@bData
  7630  010516  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  7631                           
  7632                           ;vend.c: 433: displ_time(chantime, channel);
  7633  01051A  C0AB  F02A         	movff	Vend_timeset@channel,displ_time@channel
  7634  01051E  0100               	movlb	0	; () banked
  7635  010520  51AA               	movf	Vend_timeset@chantime& (0+255),w,b
  7636  010522  EC6D  F088         	call	_displ_time
  7637                           
  7638                           ;vend.c: 434: break;
  7639  010526  D00C               	goto	l2118
  7640  010528                     l2120:
  7641  010528  982D               	bcf	_venflags+1,4,c
  7642                           
  7643                           ;vend.c: 436: }
  7644  01052A  D00A               	goto	l2118
  7645  01052C                     l2116:
  7646  01052C  5039               	movf	_buttons,w,c	;volatile
  7647                           
  7648                           ; Switch size 1, requested type "space"
  7649                           ; Number of cases is 3, Range of values is 1 to 128
  7650                           ; switch strategies available:
  7651                           ; Name         Instructions Cycles
  7652                           ; simple_byte           10     6 (average)
  7653                           ;	Chosen strategy is simple_byte
  7654  01052E  0A01               	xorlw	1	; case 1
  7655  010530  B4D8               	btfsc	status,2,c
  7656  010532  D7BC               	goto	l2117
  7657  010534  0A03               	xorlw	3	; case 2
  7658  010536  B4D8               	btfsc	status,2,c
  7659  010538  D7D8               	goto	l2119
  7660  01053A  0A82               	xorlw	130	; case 128
  7661  01053C  B4D8               	btfsc	status,2,c
  7662  01053E  D7F4               	goto	l2120
  7663  010540                     l2118:
  7664  010540  A82D               	btfss	_venflags+1,4,c
  7665  010542  0012               	return	
  7666  010544  D7AF               	goto	l2115
  7667  010546                     __end_of_Vend_timeset:
  7668                           	opt stack 0
  7669                           tblptru	equ	0xFF8
  7670                           tblptrh	equ	0xFF7
  7671                           tblptrl	equ	0xFF6
  7672                           tablat	equ	0xFF5
  7673                           prodh	equ	0xFF4
  7674                           prodl	equ	0xFF3
  7675                           postinc0	equ	0xFEE
  7676                           wreg	equ	0xFE8
  7677                           indf2	equ	0xFDF
  7678                           fsr2h	equ	0xFDA
  7679                           fsr2l	equ	0xFD9
  7680                           status	equ	0xFD8
  7681                           
  7682 ;; *************** function _displ_time *****************
  7683 ;; Defined at:
  7684 ;;		line 99 in file "lcd.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  motortime       1    wreg     unsigned char 
  7687 ;;  channel         1   31[COMRAM] unsigned char 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  motortime       1   32[COMRAM] unsigned char 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      void 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7699 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;Total ram usage:        2 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    8
  7706 ;; This function calls:
  7707 ;;		_displ_hex
  7708 ;;		_lcd_string
  7709 ;;		_lcd_writeC
  7710 ;; This function is called by:
  7711 ;;		_Vend_timeset
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text37
  7716  0110DA                     __ptext37:
  7717                           	opt stack 0
  7718  0110DA                     _displ_time:
  7719                           	opt stack 18
  7720                           
  7721                           ;incstack = 0
  7722                           ;displ_time@motortime stored from wreg
  7723  0110DA  6E2B               	movwf	displ_time@motortime,c
  7724                           
  7725                           ;lcd.c: 101: lcd_string(clrline, line3);
  7726  0110DC  0E29               	movlw	low _clrline
  7727  0110DE  6E24               	movwf	lcd_string@lcdstring,c
  7728  0110E0  0EFF               	movlw	high _clrline
  7729  0110E2  6E25               	movwf	lcd_string@lcdstring+1,c
  7730  0110E4  0E8D               	movlw	low _line3
  7731  0110E6  6EF6               	movwf	tblptrl,c
  7732  0110E8                     	if	1	;There is more than 1 active tblptr byte
  7733  0110E8  0EFC               	movlw	high _line3
  7734  0110EA  6EF7               	movwf	tblptrh,c
  7735  0110EC                     	endif
  7736  0110EC                     	if	1	;There are 3 active tblptr bytes
  7737  0110EC  0E00               	movlw	low (_line3 shr (0+16))
  7738  0110EE  6EF8               	movwf	tblptru,c
  7739  0110F0                     	endif
  7740  0110F0  0008               	tblrd		*
  7741  0110F2  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7742  0110F6  EC75  F087         	call	_lcd_string	;wreg free
  7743                           
  7744                           ;lcd.c: 102: lcd_string(clrline, line4);
  7745  0110FA  0E29               	movlw	low _clrline
  7746  0110FC  6E24               	movwf	lcd_string@lcdstring,c
  7747  0110FE  0EFF               	movlw	high _clrline
  7748  011100  6E25               	movwf	lcd_string@lcdstring+1,c
  7749  011102  0E8C               	movlw	low _line4
  7750  011104  6EF6               	movwf	tblptrl,c
  7751  011106                     	if	1	;There is more than 1 active tblptr byte
  7752  011106  0EFC               	movlw	high _line4
  7753  011108  6EF7               	movwf	tblptrh,c
  7754  01110A                     	endif
  7755  01110A                     	if	1	;There are 3 active tblptr bytes
  7756  01110A  0E00               	movlw	low (_line4 shr (0+16))
  7757  01110C  6EF8               	movwf	tblptru,c
  7758  01110E                     	endif
  7759  01110E  0008               	tblrd		*
  7760  011110  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7761  011114  EC75  F087         	call	_lcd_string	;wreg free
  7762                           
  7763                           ;lcd.c: 103: lcd_string(chanmsg, line3);
  7764  011118  0E8C               	movlw	low _chanmsg
  7765  01111A  6E24               	movwf	lcd_string@lcdstring,c
  7766  01111C  0EFF               	movlw	high _chanmsg
  7767  01111E  6E25               	movwf	lcd_string@lcdstring+1,c
  7768  011120  0E8D               	movlw	low _line3
  7769  011122  6EF6               	movwf	tblptrl,c
  7770  011124                     	if	1	;There is more than 1 active tblptr byte
  7771  011124  0EFC               	movlw	high _line3
  7772  011126  6EF7               	movwf	tblptrh,c
  7773  011128                     	endif
  7774  011128                     	if	1	;There are 3 active tblptr bytes
  7775  011128  0E00               	movlw	low (_line3 shr (0+16))
  7776  01112A  6EF8               	movwf	tblptru,c
  7777  01112C                     	endif
  7778  01112C  0008               	tblrd		*
  7779  01112E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7780  011132  EC75  F087         	call	_lcd_string	;wreg free
  7781                           
  7782                           ;lcd.c: 104: lcd_writeC(channel++ | 0x30);
  7783  011136  502A               	movf	displ_time@channel,w,c
  7784  011138  0930               	iorlw	48
  7785  01113A  EC91  F08B         	call	_lcd_writeC
  7786  01113E  2A2A               	incf	displ_time@channel,f,c
  7787                           
  7788                           ;lcd.c: 105: lcd_string(timemsg, line4);
  7789  011140  0E3E               	movlw	low _timemsg
  7790  011142  6E24               	movwf	lcd_string@lcdstring,c
  7791  011144  0EFF               	movlw	high _timemsg
  7792  011146  6E25               	movwf	lcd_string@lcdstring+1,c
  7793  011148  0E8C               	movlw	low _line4
  7794  01114A  6EF6               	movwf	tblptrl,c
  7795  01114C                     	if	1	;There is more than 1 active tblptr byte
  7796  01114C  0EFC               	movlw	high _line4
  7797  01114E  6EF7               	movwf	tblptrh,c
  7798  011150                     	endif
  7799  011150                     	if	1	;There are 3 active tblptr bytes
  7800  011150  0E00               	movlw	low (_line4 shr (0+16))
  7801  011152  6EF8               	movwf	tblptru,c
  7802  011154                     	endif
  7803  011154  0008               	tblrd		*
  7804  011156  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7805  01115A  EC75  F087         	call	_lcd_string	;wreg free
  7806                           
  7807                           ;lcd.c: 106: displ_hex((uint8_t) motortime);
  7808  01115E  502B               	movf	displ_time@motortime,w,c
  7809  011160  6E27               	movwf	displ_hex@hexnum,c
  7810  011162  6A28               	clrf	displ_hex@hexnum+1,c
  7811  011164  6A29               	clrf	displ_hex@hexnum+2,c
  7812  011166  EC1A  F087         	call	_displ_hex	;wreg free
  7813  01116A  0012               	return		;funcret
  7814  01116C                     __end_of_displ_time:
  7815                           	opt stack 0
  7816                           tblptru	equ	0xFF8
  7817                           tblptrh	equ	0xFF7
  7818                           tblptrl	equ	0xFF6
  7819                           tablat	equ	0xFF5
  7820                           prodh	equ	0xFF4
  7821                           prodl	equ	0xFF3
  7822                           postinc0	equ	0xFEE
  7823                           wreg	equ	0xFE8
  7824                           indf2	equ	0xFDF
  7825                           fsr2h	equ	0xFDA
  7826                           fsr2l	equ	0xFD9
  7827                           status	equ	0xFD8
  7828                           
  7829 ;; *************** function _Sens_off *****************
  7830 ;; Defined at:
  7831 ;;		line 495 in file "vend.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;		None
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;		None
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/0
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;Total ram usage:        0 bytes
  7850 ;; Hardware stack levels used:    1
  7851 ;; Hardware stack levels required when called:   10
  7852 ;; This function calls:
  7853 ;;		_Read_Service
  7854 ;;		_butindb
  7855 ;;		_get_channel
  7856 ;;		_lcd_string
  7857 ;;		_off_sens
  7858 ;; This function is called by:
  7859 ;;		_Vend_setup
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text38
  7864  0119F2                     __ptext38:
  7865                           	opt stack 0
  7866  0119F2                     _Sens_off:
  7867                           	opt stack 18
  7868                           
  7869                           ;vend.c: 497: venflags.nosense = 1;
  7870                           
  7871                           ;incstack = 0
  7872  0119F2  8A2D               	bsf	_venflags+1,5,c
  7873                           
  7874                           ;vend.c: 498: lcd_string(setimemsg, line1);
  7875  0119F4  0E80               	movlw	low _setimemsg
  7876  0119F6  6E24               	movwf	lcd_string@lcdstring,c
  7877  0119F8  0EFE               	movlw	high _setimemsg
  7878  0119FA  6E25               	movwf	lcd_string@lcdstring+1,c
  7879  0119FC  0E8F               	movlw	low _line1
  7880  0119FE  6EF6               	movwf	tblptrl,c
  7881  011A00                     	if	1	;There is more than 1 active tblptr byte
  7882  011A00  0EFC               	movlw	high _line1
  7883  011A02  6EF7               	movwf	tblptrh,c
  7884  011A04                     	endif
  7885  011A04                     	if	1	;There are 3 active tblptr bytes
  7886  011A04  0E00               	movlw	low (_line1 shr (0+16))
  7887  011A06  6EF8               	movwf	tblptru,c
  7888  011A08                     	endif
  7889  011A08  0008               	tblrd		*
  7890  011A0A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  7891  011A0E  EC75  F087         	call	_lcd_string	;wreg free
  7892                           
  7893                           ;vend.c: 499: buttons = butindb();
  7894  011A12  ECD0  F08E         	call	_butindb	;wreg free
  7895  011A16  6E39               	movwf	_buttons,c	;volatile
  7896                           
  7897                           ;vend.c: 500: while(venflags.nosense)
  7898  011A18  D010               	goto	l2148
  7899  011A1A                     
  7900                           ;vend.c: 501: {
  7901                           ;vend.c: 502: buttons = butindb();
  7902  011A1A  ECD0  F08E         	call	_butindb	;wreg free
  7903  011A1E  6E39               	movwf	_buttons,c	;volatile
  7904                           
  7905                           ;vend.c: 503: if(buttons != 0x00)
  7906  011A20  5039               	movf	_buttons,w,c	;volatile
  7907  011A22  B4D8               	btfsc	status,2,c
  7908  011A24  D005               	goto	l2147
  7909                           
  7910                           ;vend.c: 504: {
  7911                           ;vend.c: 505: off_sens(get_channel(buttons));
  7912  011A26  5039               	movf	_buttons,w,c	;volatile
  7913  011A28  EC99  F08F         	call	_get_channel
  7914  011A2C  EC75  F084         	call	_off_sens
  7915  011A30                     l2147:
  7916                           
  7917                           ;vend.c: 506: }
  7918                           ;vend.c: 507: if(Read_Service() == 0x00)
  7919  011A30  EC25  F090         	call	_Read_Service	;wreg free
  7920  011A34  0900               	iorlw	0
  7921  011A36  B4D8               	btfsc	status,2,c
  7922                           
  7923                           ;vend.c: 508: {
  7924                           ;vend.c: 509: venflags.nosense = 0;
  7925  011A38  9A2D               	bcf	_venflags+1,5,c
  7926  011A3A                     l2148:
  7927  011A3A  AA2D               	btfss	_venflags+1,5,c
  7928  011A3C  0012               	return	
  7929  011A3E  D7ED               	goto	l2146
  7930  011A40                     __end_of_Sens_off:
  7931                           	opt stack 0
  7932                           tblptru	equ	0xFF8
  7933                           tblptrh	equ	0xFF7
  7934                           tblptrl	equ	0xFF6
  7935                           tablat	equ	0xFF5
  7936                           prodh	equ	0xFF4
  7937                           prodl	equ	0xFF3
  7938                           postinc0	equ	0xFEE
  7939                           wreg	equ	0xFE8
  7940                           indf2	equ	0xFDF
  7941                           fsr2h	equ	0xFDA
  7942                           fsr2l	equ	0xFD9
  7943                           status	equ	0xFD8
  7944                           
  7945 ;; *************** function _off_sens *****************
  7946 ;; Defined at:
  7947 ;;		line 516 in file "vend.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  channel         1    wreg     unsigned char 
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;  channel         1    0[BANK0 ] unsigned char 
  7952 ;;  senseflags      1    2[BANK0 ] unsigned char 
  7953 ;;  chanbit         1    1[BANK0 ] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  7963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;Total ram usage:        3 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    9
  7970 ;; This function calls:
  7971 ;;		_DATAEE_ReadByte
  7972 ;;		_DATAEE_WriteByte
  7973 ;;		_butindb
  7974 ;;		_displ_sflags
  7975 ;; This function is called by:
  7976 ;;		_Sens_off
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text39
  7981  0108EA                     __ptext39:
  7982                           	opt stack 0
  7983  0108EA                     _off_sens:
  7984                           	opt stack 18
  7985                           
  7986                           ;incstack = 0
  7987                           ;off_sens@channel stored from wreg
  7988  0108EA  0100               	movlb	0	; () banked
  7989  0108EC  6F9C               	movwf	off_sens@channel& (0+255),b
  7990                           
  7991                           ;vend.c: 518: uint8_t chanbit = buttons;
  7992  0108EE  C039  F09D         	movff	_buttons,off_sens@chanbit	;volatile
  7993                           
  7994                           ;vend.c: 519: venflags.sensno = 1;
  7995  0108F2  8E2D               	bsf	_venflags+1,7,c
  7996                           
  7997                           ;vend.c: 520: uint8_t senseflags = DATAEE_ReadByte(sensorflags);
  7998  0108F4  0E3D               	movlw	low _sensorflags
  7999  0108F6  6EF6               	movwf	tblptrl,c
  8000  0108F8                     	if	1	;There is more than 1 active tblptr byte
  8001  0108F8  0EFC               	movlw	high _sensorflags
  8002  0108FA  6EF7               	movwf	tblptrh,c
  8003  0108FC                     	endif
  8004  0108FC                     	if	1	;There are 3 active tblptr bytes
  8005  0108FC  0E00               	movlw	low (_sensorflags shr (0+16))
  8006  0108FE  6EF8               	movwf	tblptru,c
  8007  010900                     	endif
  8008  010900  0009               	tblrd		*+
  8009  010902  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  8010  010906  000A               	tblrd		*-
  8011  010908  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  8012  01090C  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  8013  010910  0100               	movlb	0	; () banked
  8014  010912  6F9E               	movwf	off_sens@senseflags& (0+255),b
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;vend.c: 521: displ_sflags(senseflags, channel, chanbit);
  8018  010914  C09C  F029         	movff	off_sens@channel,displ_sflags@chanel
  8019  010918  C09D  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  8020  01091C  519E               	movf	off_sens@senseflags& (0+255),w,b
  8021  01091E  ECBF  F086         	call	_displ_sflags
  8022                           
  8023                           ;vend.c: 523: while(venflags.sensno)
  8024  010922  D04B               	goto	l2157
  8025  010924                     
  8026                           ;vend.c: 524: {
  8027                           ;vend.c: 525: buttons = butindb();
  8028  010924  ECD0  F08E         	call	_butindb	;wreg free
  8029  010928  6E39               	movwf	_buttons,c	;volatile
  8030                           
  8031                           ;vend.c: 526: switch(buttons)
  8032  01092A  D03D               	goto	l2155
  8033  01092C  0100               	movlb	0	; () banked
  8034  01092E  519D               	movf	off_sens@chanbit& (0+255),w,b
  8035  010930  0AFF               	xorlw	255
  8036  010932  159E               	andwf	off_sens@senseflags& (0+255),w,b
  8037  010934  6F9E               	movwf	off_sens@senseflags& (0+255),b
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;vend.c: 530: DATAEE_WriteByte(sensorflags, senseflags);
  8041  010936  0E3D               	movlw	low _sensorflags
  8042  010938  6EF6               	movwf	tblptrl,c
  8043  01093A                     	if	1	;There is more than 1 active tblptr byte
  8044  01093A  0EFC               	movlw	high _sensorflags
  8045  01093C  6EF7               	movwf	tblptrh,c
  8046  01093E                     	endif
  8047  01093E                     	if	1	;There are 3 active tblptr bytes
  8048  01093E  0E00               	movlw	low (_sensorflags shr (0+16))
  8049  010940  6EF8               	movwf	tblptru,c
  8050  010942                     	endif
  8051  010942  0009               	tblrd		*+
  8052  010944  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  8053  010948  000A               	tblrd		*-
  8054  01094A  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  8055  01094E  C09E  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
  8056  010952  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  8057                           
  8058                           ;vend.c: 531: displ_sflags(senseflags, channel, chanbit);
  8059  010956  C09C  F029         	movff	off_sens@channel,displ_sflags@chanel
  8060  01095A  C09D  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  8061  01095E  0100               	movlb	0	; () banked
  8062  010960  519E               	movf	off_sens@senseflags& (0+255),w,b
  8063  010962  ECBF  F086         	call	_displ_sflags
  8064                           
  8065                           ;vend.c: 532: break;
  8066  010966  D029               	goto	l2157
  8067  010968  0100               	movlb	0	; () banked
  8068  01096A  519E               	movf	off_sens@senseflags& (0+255),w,b
  8069  01096C  119D               	iorwf	off_sens@chanbit& (0+255),w,b
  8070  01096E  6F9E               	movwf	off_sens@senseflags& (0+255),b
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;vend.c: 535: DATAEE_WriteByte(sensorflags, senseflags);
  8074  010970  0E3D               	movlw	low _sensorflags
  8075  010972  6EF6               	movwf	tblptrl,c
  8076  010974                     	if	1	;There is more than 1 active tblptr byte
  8077  010974  0EFC               	movlw	high _sensorflags
  8078  010976  6EF7               	movwf	tblptrh,c
  8079  010978                     	endif
  8080  010978                     	if	1	;There are 3 active tblptr bytes
  8081  010978  0E00               	movlw	low (_sensorflags shr (0+16))
  8082  01097A  6EF8               	movwf	tblptru,c
  8083  01097C                     	endif
  8084  01097C  0009               	tblrd		*+
  8085  01097E  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  8086  010982  000A               	tblrd		*-
  8087  010984  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  8088  010988  C09E  F01F         	movff	off_sens@senseflags,DATAEE_WriteByte@bData
  8089  01098C  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  8090                           
  8091                           ;vend.c: 536: displ_sflags(senseflags, channel, chanbit);
  8092  010990  C09C  F029         	movff	off_sens@channel,displ_sflags@chanel
  8093  010994  C09D  F02A         	movff	off_sens@chanbit,displ_sflags@chanbit
  8094  010998  0100               	movlb	0	; () banked
  8095  01099A  519E               	movf	off_sens@senseflags& (0+255),w,b
  8096  01099C  ECBF  F086         	call	_displ_sflags
  8097                           
  8098                           ;vend.c: 537: break;
  8099  0109A0  D00C               	goto	l2157
  8100  0109A2                     l2159:
  8101  0109A2  9E2D               	bcf	_venflags+1,7,c
  8102                           
  8103                           ;vend.c: 540: }
  8104                           
  8105                           ;vend.c: 539: break;
  8106  0109A4  D00A               	goto	l2157
  8107  0109A6                     l2155:
  8108  0109A6  5039               	movf	_buttons,w,c	;volatile
  8109                           
  8110                           ; Switch size 1, requested type "space"
  8111                           ; Number of cases is 3, Range of values is 1 to 128
  8112                           ; switch strategies available:
  8113                           ; Name         Instructions Cycles
  8114                           ; simple_byte           10     6 (average)
  8115                           ;	Chosen strategy is simple_byte
  8116  0109A8  0A01               	xorlw	1	; case 1
  8117  0109AA  B4D8               	btfsc	status,2,c
  8118  0109AC  D7BF               	goto	l2156
  8119  0109AE  0A03               	xorlw	3	; case 2
  8120  0109B0  B4D8               	btfsc	status,2,c
  8121  0109B2  D7DA               	goto	l2158
  8122  0109B4  0A82               	xorlw	130	; case 128
  8123  0109B6  B4D8               	btfsc	status,2,c
  8124  0109B8  D7F4               	goto	l2159
  8125  0109BA                     l2157:
  8126  0109BA  AE2D               	btfss	_venflags+1,7,c
  8127  0109BC  0012               	return	
  8128  0109BE  D7B2               	goto	l2154
  8129  0109C0                     __end_of_off_sens:
  8130                           	opt stack 0
  8131                           tblptru	equ	0xFF8
  8132                           tblptrh	equ	0xFF7
  8133                           tblptrl	equ	0xFF6
  8134                           tablat	equ	0xFF5
  8135                           prodh	equ	0xFF4
  8136                           prodl	equ	0xFF3
  8137                           postinc0	equ	0xFEE
  8138                           wreg	equ	0xFE8
  8139                           indf2	equ	0xFDF
  8140                           fsr2h	equ	0xFDA
  8141                           fsr2l	equ	0xFD9
  8142                           status	equ	0xFD8
  8143                           
  8144 ;; *************** function _displ_sflags *****************
  8145 ;; Defined at:
  8146 ;;		line 80 in file "lcd.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  senseflags      1    wreg     unsigned char 
  8149 ;;  chanel          1   30[COMRAM] unsigned char 
  8150 ;;  chanbit         1   31[COMRAM] unsigned char 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  senseflags      1   32[COMRAM] unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8165 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8166 ;;Total ram usage:        3 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:    8
  8169 ;; This function calls:
  8170 ;;		_lcd_string
  8171 ;;		_lcd_writeC
  8172 ;; This function is called by:
  8173 ;;		_off_sens
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           	psect	text40
  8178  010D7E                     __ptext40:
  8179                           	opt stack 0
  8180  010D7E                     _displ_sflags:
  8181                           	opt stack 18
  8182                           
  8183                           ;incstack = 0
  8184                           ;displ_sflags@senseflags stored from wreg
  8185  010D7E  6E2B               	movwf	displ_sflags@senseflags,c
  8186                           
  8187                           ;lcd.c: 83: lcd_string(chanmsg, line1);
  8188  010D80  0E8C               	movlw	low _chanmsg
  8189  010D82  6E24               	movwf	lcd_string@lcdstring,c
  8190  010D84  0EFF               	movlw	high _chanmsg
  8191  010D86  6E25               	movwf	lcd_string@lcdstring+1,c
  8192  010D88  0E8F               	movlw	low _line1
  8193  010D8A  6EF6               	movwf	tblptrl,c
  8194  010D8C                     	if	1	;There is more than 1 active tblptr byte
  8195  010D8C  0EFC               	movlw	high _line1
  8196  010D8E  6EF7               	movwf	tblptrh,c
  8197  010D90                     	endif
  8198  010D90                     	if	1	;There are 3 active tblptr bytes
  8199  010D90  0E00               	movlw	low (_line1 shr (0+16))
  8200  010D92  6EF8               	movwf	tblptru,c
  8201  010D94                     	endif
  8202  010D94  0008               	tblrd		*
  8203  010D96  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8204  010D9A  EC75  F087         	call	_lcd_string	;wreg free
  8205                           
  8206                           ;lcd.c: 84: lcd_writeC(chanel++ | 0x30);
  8207  010D9E  5029               	movf	displ_sflags@chanel,w,c
  8208  010DA0  0930               	iorlw	48
  8209  010DA2  EC91  F08B         	call	_lcd_writeC
  8210  010DA6  2A29               	incf	displ_sflags@chanel,f,c
  8211                           
  8212                           ;lcd.c: 85: lcd_string(sensmsg, line2);
  8213  010DA8  0EA4               	movlw	low _sensmsg
  8214  010DAA  6E24               	movwf	lcd_string@lcdstring,c
  8215  010DAC  0EFF               	movlw	high _sensmsg
  8216  010DAE  6E25               	movwf	lcd_string@lcdstring+1,c
  8217  010DB0  0E8E               	movlw	low _line2
  8218  010DB2  6EF6               	movwf	tblptrl,c
  8219  010DB4                     	if	1	;There is more than 1 active tblptr byte
  8220  010DB4  0EFC               	movlw	high _line2
  8221  010DB6  6EF7               	movwf	tblptrh,c
  8222  010DB8                     	endif
  8223  010DB8                     	if	1	;There are 3 active tblptr bytes
  8224  010DB8  0E00               	movlw	low (_line2 shr (0+16))
  8225  010DBA  6EF8               	movwf	tblptru,c
  8226  010DBC                     	endif
  8227  010DBC  0008               	tblrd		*
  8228  010DBE  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8229  010DC2  EC75  F087         	call	_lcd_string	;wreg free
  8230                           
  8231                           ;lcd.c: 86: lcd_string(sensoffmsg, line3);
  8232  010DC6  0EEE               	movlw	low _sensoffmsg
  8233  010DC8  6E24               	movwf	lcd_string@lcdstring,c
  8234  010DCA  0EFE               	movlw	high _sensoffmsg
  8235  010DCC  6E25               	movwf	lcd_string@lcdstring+1,c
  8236  010DCE  0E8D               	movlw	low _line3
  8237  010DD0  6EF6               	movwf	tblptrl,c
  8238  010DD2                     	if	1	;There is more than 1 active tblptr byte
  8239  010DD2  0EFC               	movlw	high _line3
  8240  010DD4  6EF7               	movwf	tblptrh,c
  8241  010DD6                     	endif
  8242  010DD6                     	if	1	;There are 3 active tblptr bytes
  8243  010DD6  0E00               	movlw	low (_line3 shr (0+16))
  8244  010DD8  6EF8               	movwf	tblptru,c
  8245  010DDA                     	endif
  8246  010DDA  0008               	tblrd		*
  8247  010DDC  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8248  010DE0  EC75  F087         	call	_lcd_string	;wreg free
  8249                           
  8250                           ;lcd.c: 88: if(senseflags && chanbit)
  8251  010DE4  502B               	movf	displ_sflags@senseflags,w,c
  8252  010DE6  B4D8               	btfsc	status,2,c
  8253  010DE8  D014               	goto	l1451
  8254  010DEA  502A               	movf	displ_sflags@chanbit,w,c
  8255  010DEC  B4D8               	btfsc	status,2,c
  8256  010DEE  D011               	goto	l1451
  8257                           
  8258                           ;lcd.c: 89: {
  8259                           ;lcd.c: 90: lcd_string(disabled, line2 + 10);
  8260  010DF0  0EB9               	movlw	low _disabled
  8261  010DF2  6E24               	movwf	lcd_string@lcdstring,c
  8262  010DF4  0EFF               	movlw	high _disabled
  8263  010DF6  6E25               	movwf	lcd_string@lcdstring+1,c
  8264  010DF8  0E8E               	movlw	low _line2
  8265  010DFA  6EF6               	movwf	tblptrl,c
  8266  010DFC                     	if	1	;There is more than 1 active tblptr byte
  8267  010DFC  0EFC               	movlw	high _line2
  8268  010DFE  6EF7               	movwf	tblptrh,c
  8269  010E00                     	endif
  8270  010E00                     	if	1	;There are 3 active tblptr bytes
  8271  010E00  0E00               	movlw	low (_line2 shr (0+16))
  8272  010E02  6EF8               	movwf	tblptru,c
  8273  010E04                     	endif
  8274  010E04  0008               	tblrd		*
  8275  010E06  50F5               	movf	tablat,w,c
  8276  010E08  0F0A               	addlw	10
  8277  010E0A  6E26               	movwf	lcd_string@lcdline,c
  8278  010E0C  EC75  F087         	call	_lcd_string	;wreg free
  8279                           
  8280                           ;lcd.c: 91: }
  8281  010E10  0012               	return	
  8282  010E12                     l1451:
  8283                           
  8284                           ;lcd.c: 92: else
  8285                           ;lcd.c: 93: {
  8286                           ;lcd.c: 94: lcd_string(enabled, line2 + 10);
  8287  010E12  0EC3               	movlw	low _enabled
  8288  010E14  6E24               	movwf	lcd_string@lcdstring,c
  8289  010E16  0EFF               	movlw	high _enabled
  8290  010E18  6E25               	movwf	lcd_string@lcdstring+1,c
  8291  010E1A  0E8E               	movlw	low _line2
  8292  010E1C  6EF6               	movwf	tblptrl,c
  8293  010E1E                     	if	1	;There is more than 1 active tblptr byte
  8294  010E1E  0EFC               	movlw	high _line2
  8295  010E20  6EF7               	movwf	tblptrh,c
  8296  010E22                     	endif
  8297  010E22                     	if	1	;There are 3 active tblptr bytes
  8298  010E22  0E00               	movlw	low (_line2 shr (0+16))
  8299  010E24  6EF8               	movwf	tblptru,c
  8300  010E26                     	endif
  8301  010E26  0008               	tblrd		*
  8302  010E28  50F5               	movf	tablat,w,c
  8303  010E2A  0F0A               	addlw	10
  8304  010E2C  6E26               	movwf	lcd_string@lcdline,c
  8305  010E2E  EC75  F087         	call	_lcd_string	;wreg free
  8306  010E32  0012               	return	
  8307  010E34                     __end_of_displ_sflags:
  8308                           	opt stack 0
  8309                           tblptru	equ	0xFF8
  8310                           tblptrh	equ	0xFF7
  8311                           tblptrl	equ	0xFF6
  8312                           tablat	equ	0xFF5
  8313                           prodh	equ	0xFF4
  8314                           prodl	equ	0xFF3
  8315                           postinc0	equ	0xFEE
  8316                           wreg	equ	0xFE8
  8317                           indf2	equ	0xFDF
  8318                           fsr2h	equ	0xFDA
  8319                           fsr2l	equ	0xFD9
  8320                           status	equ	0xFD8
  8321                           
  8322 ;; *************** function _Reset_settings *****************
  8323 ;; Defined at:
  8324 ;;		line 544 in file "vend.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;		None
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  chanlinkbits    2    0[BANK0 ] unsigned int 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  1    wreg      void 
  8331 ;; Registers used:
  8332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Totals:         2       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;Total ram usage:        4 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; Hardware stack levels required when called:    8
  8345 ;; This function calls:
  8346 ;;		_DATAEE_WriteByte
  8347 ;;		_lcd_string
  8348 ;; This function is called by:
  8349 ;;		_Vend_setup
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text41
  8354  010F9E                     __ptext41:
  8355                           	opt stack 0
  8356  010F9E                     _Reset_settings:
  8357                           	opt stack 20
  8358                           
  8359                           ;vend.c: 546: lcd_string(chanresetmsg, line1);
  8360                           
  8361                           ;incstack = 0
  8362  010F9E  0ECE               	movlw	low _chanresetmsg
  8363  010FA0  6E24               	movwf	lcd_string@lcdstring,c
  8364  010FA2  0EFE               	movlw	high _chanresetmsg
  8365  010FA4  6E25               	movwf	lcd_string@lcdstring+1,c
  8366  010FA6  0E8F               	movlw	low _line1
  8367  010FA8  6EF6               	movwf	tblptrl,c
  8368  010FAA                     	if	1	;There is more than 1 active tblptr byte
  8369  010FAA  0EFC               	movlw	high _line1
  8370  010FAC  6EF7               	movwf	tblptrh,c
  8371  010FAE                     	endif
  8372  010FAE                     	if	1	;There are 3 active tblptr bytes
  8373  010FAE  0E00               	movlw	low (_line1 shr (0+16))
  8374  010FB0  6EF8               	movwf	tblptru,c
  8375  010FB2                     	endif
  8376  010FB2  0008               	tblrd		*
  8377  010FB4  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8378  010FB8  EC75  F087         	call	_lcd_string	;wreg free
  8379                           
  8380                           ;vend.c: 547: uint16_t chanlinkbits = chan1linkbits;
  8381  010FBC  0E4D               	movlw	low _chan1linkbits
  8382  010FBE  6EF6               	movwf	tblptrl,c
  8383  010FC0                     	if	1	;There is more than 1 active tblptr byte
  8384  010FC0  0EFC               	movlw	high _chan1linkbits
  8385  010FC2  6EF7               	movwf	tblptrh,c
  8386  010FC4                     	endif
  8387  010FC4                     	if	1	;There are 3 active tblptr bytes
  8388  010FC4  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8389  010FC6  6EF8               	movwf	tblptru,c
  8390  010FC8                     	endif
  8391  010FC8  0009               	tblrd		*+
  8392  010FCA  CFF5 F09C          	movff	tablat,Reset_settings@chanlinkbits
  8393  010FCE  000A               	tblrd		*-
  8394  010FD0  CFF5 F09D          	movff	tablat,Reset_settings@chanlinkbits+1
  8395                           
  8396                           ;vend.c: 548: while(chanlinkbits < chan1time)
  8397  010FD4  D00B               	goto	l2164
  8398  010FD6                     
  8399                           ;vend.c: 549: {
  8400                           ;vend.c: 551: DATAEE_WriteByte(chanlinkbits, 0x00);
  8401  010FD6  C09C  F01D         	movff	Reset_settings@chanlinkbits,DATAEE_WriteByte@bAdd
  8402  010FDA  C09D  F01E         	movff	Reset_settings@chanlinkbits+1,DATAEE_WriteByte@bAdd+1
  8403  010FDE  0E00               	movlw	0
  8404  010FE0  6E1F               	movwf	DATAEE_WriteByte@bData,c
  8405  010FE2  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  8406                           
  8407                           ;vend.c: 552: chanlinkbits++;
  8408  010FE6  0100               	movlb	0	; () banked
  8409  010FE8  4B9C               	infsnz	Reset_settings@chanlinkbits& (0+255),f,b
  8410  010FEA  2B9D               	incf	(Reset_settings@chanlinkbits+1)& (0+255),f,b
  8411  010FEC                     l2164:
  8412                           
  8413                           ; BSR set to: 0
  8414  010FEC  0E3B               	movlw	low _chan1time
  8415  010FEE  6EF6               	movwf	tblptrl,c
  8416  010FF0                     	if	1	;There is more than 1 active tblptr byte
  8417  010FF0  0EFC               	movlw	high _chan1time
  8418  010FF2  6EF7               	movwf	tblptrh,c
  8419  010FF4                     	endif
  8420  010FF4                     	if	1	;There are 3 active tblptr bytes
  8421  010FF4  0E00               	movlw	low (_chan1time shr (0+16))
  8422  010FF6  6EF8               	movwf	tblptru,c
  8423  010FF8                     	endif
  8424  010FF8  0009               	tblrd		*+
  8425  010FFA  50F5               	movf	tablat,w,c
  8426  010FFC  0100               	movlb	0	; () banked
  8427  010FFE  5D9C               	subwf	Reset_settings@chanlinkbits& (0+255),w,b
  8428  011000  0009               	tblrd		*+
  8429  011002  50F5               	movf	tablat,w,c
  8430  011004  599D               	subwfb	(Reset_settings@chanlinkbits+1)& (0+255),w,b
  8431  011006  A0D8               	btfss	status,0,c
  8432  011008  D7E6               	goto	l2165
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;vend.c: 553: }
  8436                           ;vend.c: 554: DATAEE_WriteByte(sensorflags, 0x00);
  8437                           
  8438                           ; BSR set to: 0
  8439  01100A  0E3D               	movlw	low _sensorflags
  8440  01100C  6EF6               	movwf	tblptrl,c
  8441  01100E                     	if	1	;There is more than 1 active tblptr byte
  8442  01100E  0EFC               	movlw	high _sensorflags
  8443  011010  6EF7               	movwf	tblptrh,c
  8444  011012                     	endif
  8445  011012                     	if	1	;There are 3 active tblptr bytes
  8446  011012  0E00               	movlw	low (_sensorflags shr (0+16))
  8447  011014  6EF8               	movwf	tblptru,c
  8448  011016                     	endif
  8449  011016  0009               	tblrd		*+
  8450  011018  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  8451  01101C  000A               	tblrd		*-
  8452  01101E  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  8453  011022  0E00               	movlw	0
  8454  011024  6E1F               	movwf	DATAEE_WriteByte@bData,c
  8455  011026  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  8456                           
  8457                           ;vend.c: 555: _delay((unsigned long)((2000)*(12000000/4000.0)));
  8458  01102A  0E1F               	movlw	31
  8459  01102C  6E2A               	movwf	(??_Reset_settings+1)& (0+255),c
  8460  01102E  0E71               	movlw	113
  8461  011030  6E29               	movwf	??_Reset_settings& (0+255),c
  8462  011032  0E1E               	movlw	30
  8463  011034                     u3427:
  8464  011034  2EE8               	decfsz	wreg,f,c
  8465  011036  D7FE               	bra	u3427
  8466  011038  2E29               	decfsz	??_Reset_settings& (0+255),f,c
  8467  01103A  D7FC               	bra	u3427
  8468  01103C  2E2A               	decfsz	(??_Reset_settings+1)& (0+255),f,c
  8469  01103E  D7FA               	bra	u3427
  8470  011040  D000               	nop2	
  8471  011042  0012               	return		;funcret
  8472  011044                     __end_of_Reset_settings:
  8473                           	opt stack 0
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           postinc0	equ	0xFEE
  8481                           wreg	equ	0xFE8
  8482                           indf2	equ	0xFDF
  8483                           fsr2h	equ	0xFDA
  8484                           fsr2l	equ	0xFD9
  8485                           status	equ	0xFD8
  8486                           
  8487 ;; *************** function _Init_vendmem *****************
  8488 ;; Defined at:
  8489 ;;		line 9 in file "vend.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;  chanlink        2   22[COMRAM] PTR unsigned char 
  8494 ;;		 -> chanlink1(1), 
  8495 ;;  chanlinkbits    2   20[COMRAM] unsigned int 
  8496 ;;  i               1   24[COMRAM] unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;Total ram usage:        5 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; Hardware stack levels required when called:    3
  8513 ;; This function calls:
  8514 ;;		_DATAEE_ReadByte
  8515 ;; This function is called by:
  8516 ;;		_vend_init
  8517 ;;		_Vend_setup
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text42
  8522  011574                     __ptext42:
  8523                           	opt stack 0
  8524  011574                     _Init_vendmem:
  8525                           	opt stack 26
  8526                           
  8527                           ;vend.c: 12: ((uint8_t*) &senschk)[0] = DATAEE_ReadByte(sensorflags);
  8528                           
  8529                           ;incstack = 0
  8530  011574  0E3D               	movlw	low _sensorflags
  8531  011576  6EF6               	movwf	tblptrl,c
  8532  011578                     	if	1	;There is more than 1 active tblptr byte
  8533  011578  0EFC               	movlw	high _sensorflags
  8534  01157A  6EF7               	movwf	tblptrh,c
  8535  01157C                     	endif
  8536  01157C                     	if	1	;There are 3 active tblptr bytes
  8537  01157C  0E00               	movlw	low (_sensorflags shr (0+16))
  8538  01157E  6EF8               	movwf	tblptru,c
  8539  011580                     	endif
  8540  011580  0009               	tblrd		*+
  8541  011582  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  8542  011586  000A               	tblrd		*-
  8543  011588  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  8544  01158C  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  8545  011590  6E35               	movwf	_senschk,c
  8546                           
  8547                           ;vend.c: 14: uint16_t chanlinkbits = chan1linkbits;
  8548  011592  0E4D               	movlw	low _chan1linkbits
  8549  011594  6EF6               	movwf	tblptrl,c
  8550  011596                     	if	1	;There is more than 1 active tblptr byte
  8551  011596  0EFC               	movlw	high _chan1linkbits
  8552  011598  6EF7               	movwf	tblptrh,c
  8553  01159A                     	endif
  8554  01159A                     	if	1	;There are 3 active tblptr bytes
  8555  01159A  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8556  01159C  6EF8               	movwf	tblptru,c
  8557  01159E                     	endif
  8558  01159E  0009               	tblrd		*+
  8559  0115A0  CFF5 F01F          	movff	tablat,Init_vendmem@chanlinkbits
  8560  0115A4  000A               	tblrd		*-
  8561  0115A6  CFF5 F020          	movff	tablat,Init_vendmem@chanlinkbits+1
  8562                           
  8563                           ;vend.c: 15: uint8_t *chanlink = ((uint8_t*) &chanlink1);
  8564  0115AA  0E03               	movlw	3
  8565  0115AC  6E21               	movwf	Init_vendmem@chanlink,c
  8566  0115AE  0E00               	movlw	0
  8567  0115B0  6E22               	movwf	Init_vendmem@chanlink+1,c
  8568                           
  8569                           ;vend.c: 16: char i = 0;
  8570  0115B2  0E00               	movlw	0
  8571  0115B4  6E23               	movwf	Init_vendmem@i,c
  8572                           
  8573                           ;vend.c: 17: while(i < 8)
  8574  0115B6  D012               	goto	l1972
  8575  0115B8                     
  8576                           ;vend.c: 18: {
  8577                           ;vend.c: 19: chanlink[i] = DATAEE_ReadByte(chanlinkbits + i);
  8578  0115B8  5023               	movf	Init_vendmem@i,w,c
  8579  0115BA  0D01               	mullw	1
  8580  0115BC  50F3               	movf	prodl,w,c
  8581  0115BE  2421               	addwf	Init_vendmem@chanlink,w,c
  8582  0115C0  6ED9               	movwf	fsr2l,c
  8583  0115C2  50F4               	movf	prodh,w,c
  8584  0115C4  2022               	addwfc	Init_vendmem@chanlink+1,w,c
  8585  0115C6  6EDA               	movwf	fsr2h,c
  8586  0115C8  5023               	movf	Init_vendmem@i,w,c
  8587  0115CA  241F               	addwf	Init_vendmem@chanlinkbits,w,c
  8588  0115CC  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  8589  0115CE  0E00               	movlw	0
  8590  0115D0  2020               	addwfc	Init_vendmem@chanlinkbits+1,w,c
  8591  0115D2  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  8592  0115D4  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  8593  0115D8  6EDF               	movwf	indf2,c
  8594                           
  8595                           ;vend.c: 20: i++;
  8596  0115DA  2A23               	incf	Init_vendmem@i,f,c
  8597  0115DC                     l1972:
  8598  0115DC  0E07               	movlw	7
  8599  0115DE  6423               	cpfsgt	Init_vendmem@i,c
  8600  0115E0  D7EB               	goto	l1973
  8601  0115E2  0012               	return	
  8602  0115E4                     __end_of_Init_vendmem:
  8603                           	opt stack 0
  8604                           tblptru	equ	0xFF8
  8605                           tblptrh	equ	0xFF7
  8606                           tblptrl	equ	0xFF6
  8607                           tablat	equ	0xFF5
  8608                           prodh	equ	0xFF4
  8609                           prodl	equ	0xFF3
  8610                           postinc0	equ	0xFEE
  8611                           wreg	equ	0xFE8
  8612                           indf2	equ	0xFDF
  8613                           fsr2h	equ	0xFDA
  8614                           fsr2l	equ	0xFD9
  8615                           status	equ	0xFD8
  8616                           
  8617 ;; *************** function _Chan_link *****************
  8618 ;; Defined at:
  8619 ;;		line 441 in file "vend.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8635 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8636 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8637 ;;Total ram usage:        2 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:   10
  8640 ;; This function calls:
  8641 ;;		_Link_chan
  8642 ;;		_Read_Service
  8643 ;;		_butindb
  8644 ;;		_get_channel
  8645 ;;		_lcd_string
  8646 ;; This function is called by:
  8647 ;;		_Vend_setup
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text43
  8652  011788                     __ptext43:
  8653                           	opt stack 0
  8654  011788                     _Chan_link:
  8655                           	opt stack 18
  8656                           
  8657                           ;vend.c: 443: lcd_string(chanlinkm, line1);
  8658                           
  8659                           ;incstack = 0
  8660  011788  0EBC               	movlw	low _chanlinkm
  8661  01178A  6E24               	movwf	lcd_string@lcdstring,c
  8662  01178C  0EFD               	movlw	high _chanlinkm
  8663  01178E  6E25               	movwf	lcd_string@lcdstring+1,c
  8664  011790  0E8F               	movlw	low _line1
  8665  011792  6EF6               	movwf	tblptrl,c
  8666  011794                     	if	1	;There is more than 1 active tblptr byte
  8667  011794  0EFC               	movlw	high _line1
  8668  011796  6EF7               	movwf	tblptrh,c
  8669  011798                     	endif
  8670  011798                     	if	1	;There are 3 active tblptr bytes
  8671  011798  0E00               	movlw	low (_line1 shr (0+16))
  8672  01179A  6EF8               	movwf	tblptru,c
  8673  01179C                     	endif
  8674  01179C  0008               	tblrd		*
  8675  01179E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  8676  0117A2  EC75  F087         	call	_lcd_string	;wreg free
  8677                           
  8678                           ;vend.c: 444: venflags.chanlink = 1;
  8679  0117A6  862D               	bsf	_venflags+1,3,c
  8680                           
  8681                           ;vend.c: 445: while(venflags.chanlink)
  8682  0117A8  D01D               	goto	l2128
  8683  0117AA                     
  8684                           ;vend.c: 446: {
  8685                           ;vend.c: 447: buttons = butindb();
  8686  0117AA  ECD0  F08E         	call	_butindb	;wreg free
  8687  0117AE  6E39               	movwf	_buttons,c	;volatile
  8688                           
  8689                           ;vend.c: 448: if(buttons != 0x00)
  8690  0117B0  5039               	movf	_buttons,w,c	;volatile
  8691  0117B2  B4D8               	btfsc	status,2,c
  8692  0117B4  D012               	goto	l2127
  8693                           
  8694                           ;vend.c: 449: {
  8695                           ;vend.c: 450: Link_chan(get_channel(buttons));
  8696  0117B6  5039               	movf	_buttons,w,c	;volatile
  8697  0117B8  EC99  F08F         	call	_get_channel
  8698  0117BC  EC07  F086         	call	_Link_chan
  8699                           
  8700                           ;vend.c: 451: _delay((unsigned long)((1000)*(12000000/4000.0)));
  8701  0117C0  0E10               	movlw	16
  8702  0117C2  0100               	movlb	0	; () banked
  8703  0117C4  6FA2               	movwf	(??_Chan_link+1)& (0+255),b
  8704  0117C6  0E39               	movlw	57
  8705  0117C8  6FA1               	movwf	??_Chan_link& (0+255),b
  8706  0117CA  0E0D               	movlw	13
  8707  0117CC                     u3437:
  8708  0117CC  2EE8               	decfsz	wreg,f,c
  8709  0117CE  D7FE               	bra	u3437
  8710  0117D0  2FA1               	decfsz	??_Chan_link& (0+255),f,b
  8711  0117D2  D7FC               	bra	u3437
  8712  0117D4  2FA2               	decfsz	(??_Chan_link+1)& (0+255),f,b
  8713  0117D6  D7FA               	bra	u3437
  8714  0117D8  D000               	nop2	
  8715  0117DA                     l2127:
  8716                           
  8717                           ;vend.c: 452: }
  8718                           ;vend.c: 453: if(Read_Service() == 0x00)
  8719  0117DA  EC25  F090         	call	_Read_Service	;wreg free
  8720  0117DE  0900               	iorlw	0
  8721  0117E0  B4D8               	btfsc	status,2,c
  8722                           
  8723                           ;vend.c: 454: {
  8724                           ;vend.c: 455: venflags.chanlink = 0;
  8725  0117E2  962D               	bcf	_venflags+1,3,c
  8726  0117E4                     l2128:
  8727  0117E4  A62D               	btfss	_venflags+1,3,c
  8728  0117E6  0012               	return	
  8729  0117E8  D7E0               	goto	l2126
  8730  0117EA                     __end_of_Chan_link:
  8731                           	opt stack 0
  8732                           tblptru	equ	0xFF8
  8733                           tblptrh	equ	0xFF7
  8734                           tblptrl	equ	0xFF6
  8735                           tablat	equ	0xFF5
  8736                           prodh	equ	0xFF4
  8737                           prodl	equ	0xFF3
  8738                           postinc0	equ	0xFEE
  8739                           wreg	equ	0xFE8
  8740                           indf2	equ	0xFDF
  8741                           fsr2h	equ	0xFDA
  8742                           fsr2l	equ	0xFD9
  8743                           status	equ	0xFD8
  8744                           
  8745 ;; *************** function _get_channel *****************
  8746 ;; Defined at:
  8747 ;;		line 316 in file "vend.c"
  8748 ;; Parameters:    Size  Location     Type
  8749 ;;  butons          1    wreg     unsigned char 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;  butons          1   19[COMRAM] unsigned char 
  8752 ;;  channel         1   18[COMRAM] unsigned char 
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1    wreg      unsigned char 
  8755 ;; Registers used:
  8756 ;;		wreg, status,2, status,0
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8763 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8766 ;;Total ram usage:        2 bytes
  8767 ;; Hardware stack levels used:    1
  8768 ;; Hardware stack levels required when called:    2
  8769 ;; This function calls:
  8770 ;;		Nothing
  8771 ;; This function is called by:
  8772 ;;		_set_price
  8773 ;;		_Vend_settime
  8774 ;;		_Chan_link
  8775 ;;		_Sens_off
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text44
  8780  011F32                     __ptext44:
  8781                           	opt stack 0
  8782  011F32                     _get_channel:
  8783                           	opt stack 25
  8784                           
  8785                           ;incstack = 0
  8786                           ;get_channel@butons stored from wreg
  8787  011F32  6E1E               	movwf	get_channel@butons,c
  8788                           
  8789                           ;vend.c: 319: uint8_t channel = 0x00;
  8790  011F34  0E00               	movlw	0
  8791  011F36  6E1D               	movwf	get_channel@channel,c
  8792                           
  8793                           ;vend.c: 320: while(butons != 0)
  8794  011F38  D004               	goto	l2076
  8795  011F3A                     
  8796                           ;vend.c: 321: {
  8797                           ;vend.c: 322: channel++;
  8798  011F3A  2A1D               	incf	get_channel@channel,f,c
  8799                           
  8800                           ;vend.c: 323: butons = butons >> 1;
  8801  011F3C  90D8               	bcf	status,0,c
  8802  011F3E  301E               	rrcf	get_channel@butons,w,c
  8803  011F40  6E1E               	movwf	get_channel@butons,c
  8804  011F42                     l2076:
  8805  011F42  501E               	movf	get_channel@butons,w,c
  8806  011F44  A4D8               	btfss	status,2,c
  8807  011F46  D7F9               	goto	l2077
  8808                           
  8809                           ;vend.c: 324: }
  8810                           ;vend.c: 325: channel--;
  8811  011F48  061D               	decf	get_channel@channel,f,c
  8812                           
  8813                           ;vend.c: 326: return channel;
  8814  011F4A  501D               	movf	get_channel@channel,w,c
  8815  011F4C  0012               	return	
  8816  011F4E                     __end_of_get_channel:
  8817                           	opt stack 0
  8818                           tblptru	equ	0xFF8
  8819                           tblptrh	equ	0xFF7
  8820                           tblptrl	equ	0xFF6
  8821                           tablat	equ	0xFF5
  8822                           prodh	equ	0xFF4
  8823                           prodl	equ	0xFF3
  8824                           postinc0	equ	0xFEE
  8825                           wreg	equ	0xFE8
  8826                           indf2	equ	0xFDF
  8827                           fsr2h	equ	0xFDA
  8828                           fsr2l	equ	0xFD9
  8829                           status	equ	0xFD8
  8830                           
  8831 ;; *************** function _Link_chan *****************
  8832 ;; Defined at:
  8833 ;;		line 462 in file "vend.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;  channel         1    wreg     unsigned char 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  channel         1    3[BANK0 ] unsigned char 
  8838 ;;  linkflags       1    4[BANK0 ] unsigned char 
  8839 ;;  chanbit         1    2[BANK0 ] unsigned char 
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  1    wreg      void 
  8842 ;; Registers used:
  8843 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8844 ;; Tracked objects:
  8845 ;;		On entry : 0/0
  8846 ;;		On exit  : 0/0
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  8849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;Total ram usage:        5 bytes
  8854 ;; Hardware stack levels used:    1
  8855 ;; Hardware stack levels required when called:    9
  8856 ;; This function calls:
  8857 ;;		_DATAEE_ReadByte
  8858 ;;		_DATAEE_WriteByte
  8859 ;;		_Read_Service
  8860 ;;		_butindb
  8861 ;;		_displ_lflags
  8862 ;; This function is called by:
  8863 ;;		_Chan_link
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text45
  8868  010C0E                     __ptext45:
  8869                           	opt stack 0
  8870  010C0E                     _Link_chan:
  8871                           	opt stack 18
  8872                           
  8873                           ;incstack = 0
  8874                           ;Link_chan@channel stored from wreg
  8875  010C0E  0100               	movlb	0	; () banked
  8876  010C10  6F9F               	movwf	Link_chan@channel& (0+255),b
  8877                           
  8878                           ;vend.c: 464: venflags.linkchan = 1;
  8879  010C12  802E               	bsf	_venflags+2,0,c
  8880                           
  8881                           ;vend.c: 465: uint8_t chanbit = buttons;
  8882  010C14  C039  F09E         	movff	_buttons,Link_chan@chanbit	;volatile
  8883                           
  8884                           ;vend.c: 466: uint8_t linkflags = DATAEE_ReadByte(chan1linkbits + channel);
  8885  010C18  0E4D               	movlw	low _chan1linkbits
  8886  010C1A  6EF6               	movwf	tblptrl,c
  8887  010C1C                     	if	1	;There is more than 1 active tblptr byte
  8888  010C1C  0EFC               	movlw	high _chan1linkbits
  8889  010C1E  6EF7               	movwf	tblptrh,c
  8890  010C20                     	endif
  8891  010C20                     	if	1	;There are 3 active tblptr bytes
  8892  010C20  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8893  010C22  6EF8               	movwf	tblptru,c
  8894  010C24                     	endif
  8895  010C24  0009               	tblrd		*+
  8896  010C26  CFF5 F09C          	movff	tablat,??_Link_chan
  8897  010C2A  0009               	tblrd		*+
  8898  010C2C  CFF5 F09D          	movff	tablat,??_Link_chan+1
  8899  010C30  0100               	movlb	0	; () banked
  8900  010C32  519F               	movf	Link_chan@channel& (0+255),w,b
  8901  010C34  259C               	addwf	??_Link_chan& (0+255),w,b
  8902  010C36  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  8903  010C38  0E00               	movlw	0
  8904  010C3A  219D               	addwfc	(??_Link_chan+1)& (0+255),w,b
  8905  010C3C  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
  8906  010C3E  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  8907  010C42  0100               	movlb	0	; () banked
  8908  010C44  6FA0               	movwf	Link_chan@linkflags& (0+255),b
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;vend.c: 467: displ_lflags(channel, linkflags);
  8912  010C46  C0A0  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
  8913  010C4A  519F               	movf	Link_chan@channel& (0+255),w,b
  8914  010C4C  ECFB  F088         	call	_displ_lflags
  8915                           
  8916                           ;vend.c: 468: while(venflags.linkchan)
  8917  010C50  D038               	goto	u2870
  8918  010C52                     
  8919                           ;vend.c: 469: {
  8920                           ;vend.c: 470: buttons = butindb();
  8921  010C52  ECD0  F08E         	call	_butindb	;wreg free
  8922  010C56  6E39               	movwf	_buttons,c	;volatile
  8923                           
  8924                           ;vend.c: 471: if(buttons != 0x00)
  8925  010C58  5039               	movf	_buttons,w,c	;volatile
  8926  010C5A  B4D8               	btfsc	status,2,c
  8927  010C5C  D02D               	goto	l2138
  8928                           
  8929                           ;vend.c: 472: {
  8930                           ;vend.c: 473: if(buttons && linkflags)
  8931  010C5E  5039               	movf	_buttons,w,c	;volatile
  8932  010C60  B4D8               	btfsc	status,2,c
  8933  010C62  D008               	goto	l2136
  8934  010C64  0100               	movlb	0	; () banked
  8935  010C66  51A0               	movf	Link_chan@linkflags& (0+255),w,b
  8936  010C68  B4D8               	btfsc	status,2,c
  8937  010C6A  D004               	goto	l2136
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;vend.c: 474: {
  8941                           ;vend.c: 476: linkflags = linkflags & ~buttons;
  8942  010C6C  5039               	movf	_buttons,w,c	;volatile
  8943  010C6E  0AFF               	xorlw	255
  8944  010C70  15A0               	andwf	Link_chan@linkflags& (0+255),w,b
  8945  010C72  D003               	goto	L13
  8946  010C74                     l2136:
  8947                           
  8948                           ;vend.c: 478: else
  8949                           ;vend.c: 479: {
  8950                           ;vend.c: 481: linkflags = linkflags | buttons;
  8951                           
  8952                           ; BSR set to: 0
  8953  010C74  0100               	movlb	0	; () banked
  8954  010C76  51A0               	movf	Link_chan@linkflags& (0+255),w,b
  8955  010C78  1039               	iorwf	_buttons,w,c	;volatile
  8956  010C7A                     L13:
  8957  010C7A  6FA0               	movwf	Link_chan@linkflags& (0+255),b
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;vend.c: 482: }
  8961                           ;vend.c: 483: DATAEE_WriteByte(chan1linkbits + channel, linkflags);
  8962                           
  8963                           ; BSR set to: 0
  8964  010C7C  0E4D               	movlw	low _chan1linkbits
  8965  010C7E  6EF6               	movwf	tblptrl,c
  8966  010C80                     	if	1	;There is more than 1 active tblptr byte
  8967  010C80  0EFC               	movlw	high _chan1linkbits
  8968  010C82  6EF7               	movwf	tblptrh,c
  8969  010C84                     	endif
  8970  010C84                     	if	1	;There are 3 active tblptr bytes
  8971  010C84  0E00               	movlw	low (_chan1linkbits shr (0+16))
  8972  010C86  6EF8               	movwf	tblptru,c
  8973  010C88                     	endif
  8974  010C88  0009               	tblrd		*+
  8975  010C8A  CFF5 F09C          	movff	tablat,??_Link_chan
  8976  010C8E  0009               	tblrd		*+
  8977  010C90  CFF5 F09D          	movff	tablat,??_Link_chan+1
  8978  010C94  519F               	movf	Link_chan@channel& (0+255),w,b
  8979  010C96  259C               	addwf	??_Link_chan& (0+255),w,b
  8980  010C98  6E1D               	movwf	DATAEE_WriteByte@bAdd,c
  8981  010C9A  0E00               	movlw	0
  8982  010C9C  219D               	addwfc	(??_Link_chan+1)& (0+255),w,b
  8983  010C9E  6E1E               	movwf	DATAEE_WriteByte@bAdd+1,c
  8984  010CA0  C0A0  F01F         	movff	Link_chan@linkflags,DATAEE_WriteByte@bData
  8985  010CA4  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  8986                           
  8987                           ;vend.c: 484: displ_lflags(channel, linkflags);
  8988  010CA8  C0A0  F029         	movff	Link_chan@linkflags,displ_lflags@linkflgs
  8989  010CAC  0100               	movlb	0	; () banked
  8990  010CAE  519F               	movf	Link_chan@channel& (0+255),w,b
  8991  010CB0  ECFB  F088         	call	_displ_lflags
  8992                           
  8993                           ;vend.c: 485: }
  8994                           ;vend.c: 486: while(Read_Service() == 0x00)
  8995  010CB4  D001               	goto	l2138
  8996  010CB6                     l2139:
  8997                           
  8998                           ;vend.c: 487: {
  8999                           ;vend.c: 488: venflags.linkchan = 0;
  9000  010CB6  902E               	bcf	_venflags+2,0,c
  9001  010CB8                     l2138:
  9002  010CB8  EC25  F090         	call	_Read_Service	;wreg free
  9003  010CBC  0900               	iorlw	0
  9004  010CBE  B4D8               	btfsc	status,2,c
  9005  010CC0  D7FA               	goto	l2139
  9006  010CC2                     u2870:
  9007  010CC2  A02E               	btfss	_venflags+2,0,c
  9008  010CC4  0012               	return	
  9009  010CC6  D7C5               	goto	l2134
  9010  010CC8                     __end_of_Link_chan:
  9011                           	opt stack 0
  9012                           tblptru	equ	0xFF8
  9013                           tblptrh	equ	0xFF7
  9014                           tblptrl	equ	0xFF6
  9015                           tablat	equ	0xFF5
  9016                           prodh	equ	0xFF4
  9017                           prodl	equ	0xFF3
  9018                           postinc0	equ	0xFEE
  9019                           wreg	equ	0xFE8
  9020                           indf2	equ	0xFDF
  9021                           fsr2h	equ	0xFDA
  9022                           fsr2l	equ	0xFD9
  9023                           status	equ	0xFD8
  9024                           
  9025 ;; *************** function _displ_lflags *****************
  9026 ;; Defined at:
  9027 ;;		line 59 in file "lcd.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  chanel          1    wreg     unsigned char 
  9030 ;;  linkflgs        1   30[COMRAM] unsigned char 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  chanel          1   31[COMRAM] unsigned char 
  9033 ;;  lchan           1   32[COMRAM] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9043 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;Total ram usage:        3 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    8
  9050 ;; This function calls:
  9051 ;;		_lcd_dispadd
  9052 ;;		_lcd_string
  9053 ;;		_lcd_writeC
  9054 ;; This function is called by:
  9055 ;;		_Link_chan
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           	psect	text46
  9060  0111F6                     __ptext46:
  9061                           	opt stack 0
  9062  0111F6                     _displ_lflags:
  9063                           	opt stack 18
  9064                           
  9065                           ;incstack = 0
  9066                           ;displ_lflags@chanel stored from wreg
  9067  0111F6  6E2A               	movwf	displ_lflags@chanel,c
  9068                           
  9069                           ;lcd.c: 61: lcd_string(chanmsg, line1);
  9070  0111F8  0E8C               	movlw	low _chanmsg
  9071  0111FA  6E24               	movwf	lcd_string@lcdstring,c
  9072  0111FC  0EFF               	movlw	high _chanmsg
  9073  0111FE  6E25               	movwf	lcd_string@lcdstring+1,c
  9074  011200  0E8F               	movlw	low _line1
  9075  011202  6EF6               	movwf	tblptrl,c
  9076  011204                     	if	1	;There is more than 1 active tblptr byte
  9077  011204  0EFC               	movlw	high _line1
  9078  011206  6EF7               	movwf	tblptrh,c
  9079  011208                     	endif
  9080  011208                     	if	1	;There are 3 active tblptr bytes
  9081  011208  0E00               	movlw	low (_line1 shr (0+16))
  9082  01120A  6EF8               	movwf	tblptru,c
  9083  01120C                     	endif
  9084  01120C  0008               	tblrd		*
  9085  01120E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9086  011212  EC75  F087         	call	_lcd_string	;wreg free
  9087                           
  9088                           ;lcd.c: 62: lcd_writeC(chanel++ | 0x30);
  9089  011216  502A               	movf	displ_lflags@chanel,w,c
  9090  011218  0930               	iorlw	48
  9091  01121A  EC91  F08B         	call	_lcd_writeC
  9092  01121E  2A2A               	incf	displ_lflags@chanel,f,c
  9093                           
  9094                           ;lcd.c: 63: uint8_t lchan = 1;
  9095  011220  0E01               	movlw	1
  9096  011222  6E2B               	movwf	displ_lflags@lchan,c
  9097                           
  9098                           ;lcd.c: 65: lcd_string(linkmsg, line2);
  9099  011224  0E98               	movlw	low _linkmsg
  9100  011226  6E24               	movwf	lcd_string@lcdstring,c
  9101  011228  0EFF               	movlw	high _linkmsg
  9102  01122A  6E25               	movwf	lcd_string@lcdstring+1,c
  9103  01122C  0E8E               	movlw	low _line2
  9104  01122E  6EF6               	movwf	tblptrl,c
  9105  011230                     	if	1	;There is more than 1 active tblptr byte
  9106  011230  0EFC               	movlw	high _line2
  9107  011232  6EF7               	movwf	tblptrh,c
  9108  011234                     	endif
  9109  011234                     	if	1	;There are 3 active tblptr bytes
  9110  011234  0E00               	movlw	low (_line2 shr (0+16))
  9111  011236  6EF8               	movwf	tblptru,c
  9112  011238                     	endif
  9113  011238  0008               	tblrd		*
  9114  01123A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9115  01123E  EC75  F087         	call	_lcd_string	;wreg free
  9116                           
  9117                           ;lcd.c: 66: lcd_dispadd(line3);
  9118  011242  0E8D               	movlw	low _line3
  9119  011244  6EF6               	movwf	tblptrl,c
  9120  011246                     	if	1	;There is more than 1 active tblptr byte
  9121  011246  0EFC               	movlw	high _line3
  9122  011248  6EF7               	movwf	tblptrh,c
  9123  01124A                     	endif
  9124  01124A                     	if	1	;There are 3 active tblptr bytes
  9125  01124A  0E00               	movlw	low (_line3 shr (0+16))
  9126  01124C  6EF8               	movwf	tblptru,c
  9127  01124E                     	endif
  9128  01124E  0008               	tblrd		*
  9129  011250  50F5               	movf	tablat,w,c
  9130  011252  ECC3  F08F         	call	_lcd_dispadd
  9131                           
  9132                           ;lcd.c: 67: while(lchan < 0x09)
  9133  011256  D010               	goto	l1444
  9134  011258                     l1445:
  9135                           
  9136                           ;lcd.c: 68: {
  9137                           ;lcd.c: 69: if(linkflgs & 0x01)
  9138  011258  A029               	btfss	displ_lflags@linkflgs,0,c
  9139  01125A  D00A               	goto	l1446
  9140                           
  9141                           ;lcd.c: 70: {
  9142                           ;lcd.c: 71: lcd_writeC(lchan | 0x30);
  9143  01125C  502B               	movf	displ_lflags@lchan,w,c
  9144  01125E  0930               	iorlw	48
  9145  011260  EC91  F08B         	call	_lcd_writeC
  9146                           
  9147                           ;lcd.c: 72: lcd_writeC(',');
  9148  011264  0E2C               	movlw	44
  9149  011266  EC91  F08B         	call	_lcd_writeC
  9150                           
  9151                           ;lcd.c: 73: lcd_writeC(' ');
  9152  01126A  0E20               	movlw	32
  9153  01126C  EC91  F08B         	call	_lcd_writeC
  9154  011270                     l1446:
  9155                           
  9156                           ;lcd.c: 74: }
  9157                           ;lcd.c: 75: lchan++;
  9158  011270  2A2B               	incf	displ_lflags@lchan,f,c
  9159                           
  9160                           ;lcd.c: 76: linkflgs = linkflgs >> 1;
  9161  011272  90D8               	bcf	status,0,c
  9162  011274  3029               	rrcf	displ_lflags@linkflgs,w,c
  9163  011276  6E29               	movwf	displ_lflags@linkflgs,c
  9164  011278                     l1444:
  9165  011278  0E08               	movlw	8
  9166  01127A  642B               	cpfsgt	displ_lflags@lchan,c
  9167  01127C  D7ED               	goto	l1445
  9168  01127E  0012               	return	
  9169  011280                     __end_of_displ_lflags:
  9170                           	opt stack 0
  9171                           tblptru	equ	0xFF8
  9172                           tblptrh	equ	0xFF7
  9173                           tblptrl	equ	0xFF6
  9174                           tablat	equ	0xFF5
  9175                           prodh	equ	0xFF4
  9176                           prodl	equ	0xFF3
  9177                           postinc0	equ	0xFEE
  9178                           wreg	equ	0xFE8
  9179                           indf2	equ	0xFDF
  9180                           fsr2h	equ	0xFDA
  9181                           fsr2l	equ	0xFD9
  9182                           status	equ	0xFD8
  9183                           
  9184 ;; *************** function _Read_Service *****************
  9185 ;; Defined at:
  9186 ;;		line 246 in file "vend.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;		None
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;  senval          1   18[COMRAM] unsigned char 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  1    wreg      unsigned char 
  9193 ;; Registers used:
  9194 ;;		wreg, status,2
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;Total ram usage:        1 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    2
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_price_set
  9211 ;;		_Vend_settime
  9212 ;;		_Chan_link
  9213 ;;		_Link_chan
  9214 ;;		_Sens_off
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           	psect	text47
  9219  01204A                     __ptext47:
  9220                           	opt stack 0
  9221  01204A                     _Read_Service:
  9222                           	opt stack 26
  9223                           
  9224                           ;vend.c: 248: DAC1CON1 = 0x00;
  9225                           
  9226                           ;incstack = 0
  9227  01204A  0E00               	movlw	0
  9228  01204C  010F               	movlb	15	; () banked
  9229  01204E  6F34               	movwf	52,b	;volatile
  9230                           
  9231                           ; BSR set to: 15
  9232                           ;vend.c: 249: uint8_t senval = CMOUT;
  9233  012050  CF3D F01D          	movff	3901,Read_Service@senval	;volatile
  9234                           
  9235                           ; BSR set to: 15
  9236                           ;vend.c: 250: DAC1CON1 = sensorval;
  9237  012054  C037  FF34         	movff	_sensorval,3892	;volatile
  9238                           
  9239                           ;vend.c: 251: return senval;
  9240  012058  501D               	movf	Read_Service@senval,w,c
  9241  01205A  0012               	return	
  9242  01205C                     __end_of_Read_Service:
  9243                           	opt stack 0
  9244                           tblptru	equ	0xFF8
  9245                           tblptrh	equ	0xFF7
  9246                           tblptrl	equ	0xFF6
  9247                           tablat	equ	0xFF5
  9248                           prodh	equ	0xFF4
  9249                           prodl	equ	0xFF3
  9250                           postinc0	equ	0xFEE
  9251                           wreg	equ	0xFE8
  9252                           indf2	equ	0xFDF
  9253                           fsr2h	equ	0xFDA
  9254                           fsr2l	equ	0xFD9
  9255                           status	equ	0xFD8
  9256                           
  9257 ;; *************** function _Sensor_set *****************
  9258 ;; Defined at:
  9259 ;;		line 254 in file "vend.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  dacpos          1   12[BANK0 ] unsigned char 
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;Total ram usage:        1 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    9
  9280 ;; This function calls:
  9281 ;;		_butindb
  9282 ;;		_displ_sens
  9283 ;;		_lcd_string
  9284 ;; This function is called by:
  9285 ;;		_enter_service
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text48
  9290  010812                     __ptext48:
  9291                           	opt stack 0
  9292  010812                     _Sensor_set:
  9293                           	opt stack 20
  9294                           
  9295                           ;vend.c: 256: mdbflags.endis = 1;
  9296                           
  9297                           ; BSR set to: 15
  9298                           ;incstack = 0
  9299  010812  8C3E               	bsf	_mdbflags,6,c
  9300                           
  9301                           ;vend.c: 258: lcd_string(sensmsg, line1);
  9302  010814  0EA4               	movlw	low _sensmsg
  9303  010816  6E24               	movwf	lcd_string@lcdstring,c
  9304  010818  0EFF               	movlw	high _sensmsg
  9305  01081A  6E25               	movwf	lcd_string@lcdstring+1,c
  9306  01081C  0E8F               	movlw	low _line1
  9307  01081E  6EF6               	movwf	tblptrl,c
  9308  010820                     	if	1	;There is more than 1 active tblptr byte
  9309  010820  0EFC               	movlw	high _line1
  9310  010822  6EF7               	movwf	tblptrh,c
  9311  010824                     	endif
  9312  010824                     	if	1	;There are 3 active tblptr bytes
  9313  010824  0E00               	movlw	low (_line1 shr (0+16))
  9314  010826  6EF8               	movwf	tblptru,c
  9315  010828                     	endif
  9316  010828  0008               	tblrd		*
  9317  01082A  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9318  01082E  EC75  F087         	call	_lcd_string	;wreg free
  9319                           
  9320                           ;vend.c: 260: senspos = bflag + 2;
  9321  010832  5046               	movf	_bflag,w,c
  9322  010834  0F02               	addlw	2
  9323  010836  6E36               	movwf	_senspos,c	;volatile
  9324                           
  9325                           ;vend.c: 262: lcd_string(dacmsg, line2);
  9326  010838  0E72               	movlw	low _dacmsg
  9327  01083A  6E24               	movwf	lcd_string@lcdstring,c
  9328  01083C  0EFF               	movlw	high _dacmsg
  9329  01083E  6E25               	movwf	lcd_string@lcdstring+1,c
  9330  010840  0E8E               	movlw	low _line2
  9331  010842  6EF6               	movwf	tblptrl,c
  9332  010844                     	if	1	;There is more than 1 active tblptr byte
  9333  010844  0EFC               	movlw	high _line2
  9334  010846  6EF7               	movwf	tblptrh,c
  9335  010848                     	endif
  9336  010848                     	if	1	;There are 3 active tblptr bytes
  9337  010848  0E00               	movlw	low (_line2 shr (0+16))
  9338  01084A  6EF8               	movwf	tblptru,c
  9339  01084C                     	endif
  9340  01084C  0008               	tblrd		*
  9341  01084E  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9342  010852  EC75  F087         	call	_lcd_string	;wreg free
  9343                           
  9344                           ;vend.c: 264: uint8_t dacpos = bflag + 2;
  9345  010856  5046               	movf	_bflag,w,c
  9346  010858  0F02               	addlw	2
  9347  01085A  0100               	movlb	0	; () banked
  9348  01085C  6FA8               	movwf	Sensor_set@dacpos& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;vend.c: 265: displ_sens(senspos, dacpos);
  9352  01085E  C0A8  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9353  010862  5036               	movf	_senspos,w,c	;volatile
  9354  010864  EC80  F08A         	call	_displ_sens
  9355                           
  9356                           ;vend.c: 266: while(mdbflags.endis)
  9357  010868  D03D               	goto	l2060
  9358  01086A                     
  9359                           ;vend.c: 267: {
  9360                           ;vend.c: 268: buttons = butindb();
  9361  01086A  ECD0  F08E         	call	_butindb	;wreg free
  9362  01086E  6E39               	movwf	_buttons,c	;volatile
  9363                           
  9364                           ;vend.c: 269: switch(buttons)
  9365  010870  D027               	goto	l2055
  9366  010872  5037               	movf	_sensorval,w,c	;volatile
  9367  010874  0B1F               	andlw	31
  9368  010876  010F               	movlb	15	; () banked
  9369  010878  6F34               	movwf	52,b	;volatile
  9370                           
  9371                           ; BSR set to: 15
  9372  01087A  2A37               	incf	_sensorval,f,c	;volatile
  9373                           
  9374                           ; BSR set to: 15
  9375                           ;vend.c: 272: displ_sens(senspos, dacpos);
  9376  01087C  C0A8  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9377  010880  5036               	movf	_senspos,w,c	;volatile
  9378  010882  EC80  F08A         	call	_displ_sens
  9379                           
  9380                           ;vend.c: 273: break;
  9381  010886  D026               	goto	l2057
  9382  010888  5037               	movf	_sensorval,w,c	;volatile
  9383  01088A  0B1F               	andlw	31
  9384  01088C  010F               	movlb	15	; () banked
  9385  01088E  6F34               	movwf	52,b	;volatile
  9386                           
  9387                           ; BSR set to: 15
  9388  010890  0637               	decf	_sensorval,f,c	;volatile
  9389                           
  9390                           ; BSR set to: 15
  9391                           ;vend.c: 275: displ_sens(senspos, dacpos);
  9392  010892  C0A8  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9393  010896  5036               	movf	_senspos,w,c	;volatile
  9394  010898  EC80  F08A         	call	_displ_sens
  9395                           
  9396                           ;vend.c: 276: break;
  9397  01089C  D01B               	goto	l2057
  9398  01089E                     l2059:
  9399  01089E  9C3E               	bcf	_mdbflags,6,c
  9400                           
  9401                           ;vend.c: 278: lcd_string(servmsg, line1);
  9402  0108A0  0E9E               	movlw	low _servmsg
  9403  0108A2  6E24               	movwf	lcd_string@lcdstring,c
  9404  0108A4  0EFC               	movlw	high _servmsg
  9405  0108A6  6E25               	movwf	lcd_string@lcdstring+1,c
  9406  0108A8  0E8F               	movlw	low _line1
  9407  0108AA  6EF6               	movwf	tblptrl,c
  9408  0108AC                     	if	1	;There is more than 1 active tblptr byte
  9409  0108AC  0EFC               	movlw	high _line1
  9410  0108AE  6EF7               	movwf	tblptrh,c
  9411  0108B0                     	endif
  9412  0108B0                     	if	1	;There are 3 active tblptr bytes
  9413  0108B0  0E00               	movlw	low (_line1 shr (0+16))
  9414  0108B2  6EF8               	movwf	tblptru,c
  9415  0108B4                     	endif
  9416  0108B4  0008               	tblrd		*
  9417  0108B6  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9418  0108BA  EC75  F087         	call	_lcd_string	;wreg free
  9419                           
  9420                           ;vend.c: 280: }
  9421                           
  9422                           ;vend.c: 279: break;
  9423  0108BE  D00A               	goto	l2057
  9424  0108C0                     l2055:
  9425  0108C0  5039               	movf	_buttons,w,c	;volatile
  9426                           
  9427                           ; Switch size 1, requested type "space"
  9428                           ; Number of cases is 3, Range of values is 1 to 128
  9429                           ; switch strategies available:
  9430                           ; Name         Instructions Cycles
  9431                           ; simple_byte           10     6 (average)
  9432                           ;	Chosen strategy is simple_byte
  9433  0108C2  0A01               	xorlw	1	; case 1
  9434  0108C4  B4D8               	btfsc	status,2,c
  9435  0108C6  D7D5               	goto	l2056
  9436  0108C8  0A03               	xorlw	3	; case 2
  9437  0108CA  B4D8               	btfsc	status,2,c
  9438  0108CC  D7DD               	goto	l2058
  9439  0108CE  0A82               	xorlw	130	; case 128
  9440  0108D0  B4D8               	btfsc	status,2,c
  9441  0108D2  D7E5               	goto	l2059
  9442  0108D4                     l2057:
  9443                           
  9444                           ;vend.c: 281: if(PIR4bits.TMR3IF)
  9445  0108D4  010E               	movlb	14	; () banked
  9446  0108D6  A5CE               	btfss	206,2,b	;volatile
  9447  0108D8  D005               	goto	l2060
  9448                           
  9449                           ; BSR set to: 14
  9450                           ;vend.c: 282: {
  9451                           ;vend.c: 283: displ_sens(senspos, dacpos);
  9452  0108DA  C0A8  F02A         	movff	Sensor_set@dacpos,displ_sens@dmsgpos
  9453  0108DE  5036               	movf	_senspos,w,c	;volatile
  9454  0108E0  EC80  F08A         	call	_displ_sens
  9455  0108E4                     l2060:
  9456  0108E4  AC3E               	btfss	_mdbflags,6,c
  9457  0108E6  0012               	return	
  9458  0108E8  D7C0               	goto	l2054
  9459  0108EA                     __end_of_Sensor_set:
  9460                           	opt stack 0
  9461                           tblptru	equ	0xFF8
  9462                           tblptrh	equ	0xFF7
  9463                           tblptrl	equ	0xFF6
  9464                           tablat	equ	0xFF5
  9465                           prodh	equ	0xFF4
  9466                           prodl	equ	0xFF3
  9467                           postinc0	equ	0xFEE
  9468                           wreg	equ	0xFE8
  9469                           indf2	equ	0xFDF
  9470                           fsr2h	equ	0xFDA
  9471                           fsr2l	equ	0xFD9
  9472                           status	equ	0xFD8
  9473                           
  9474 ;; *************** function _displ_sens *****************
  9475 ;; Defined at:
  9476 ;;		line 42 in file "lcd.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  smsgpos         1    wreg     unsigned char 
  9479 ;;  dmsgpos         1   31[COMRAM] unsigned char 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  smsgpos         1   32[COMRAM] unsigned char 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  1    wreg      void 
  9484 ;; Registers used:
  9485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9491 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;Total ram usage:        2 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:    8
  9498 ;; This function calls:
  9499 ;;		_CMP1_GetOutputStatus
  9500 ;;		_DATAEE_WriteByte
  9501 ;;		_displ_hex
  9502 ;;		_lcd_dispadd
  9503 ;;		_lcd_string
  9504 ;; This function is called by:
  9505 ;;		_Sensor_set
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text49
  9510  011500                     __ptext49:
  9511                           	opt stack 0
  9512  011500                     _displ_sens:
  9513                           	opt stack 20
  9514                           
  9515                           ;incstack = 0
  9516                           ;displ_sens@smsgpos stored from wreg
  9517  011500  6E2B               	movwf	displ_sens@smsgpos,c
  9518                           
  9519                           ;lcd.c: 44: if(CMP1_GetOutputStatus())
  9520  011502  EC43  F090         	call	_CMP1_GetOutputStatus	;wreg free
  9521  011506  0900               	iorlw	0
  9522  011508  B4D8               	btfsc	status,2,c
  9523  01150A  D009               	goto	l1439
  9524                           
  9525                           ;lcd.c: 45: {
  9526                           ;lcd.c: 46: lcd_string(offmsg, smsgpos);
  9527  01150C  0EF6               	movlw	low _offmsg
  9528  01150E  6E24               	movwf	lcd_string@lcdstring,c
  9529  011510  0EFF               	movlw	high _offmsg
  9530  011512  6E25               	movwf	lcd_string@lcdstring+1,c
  9531  011514  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
  9532  011518  EC75  F087         	call	_lcd_string	;wreg free
  9533                           
  9534                           ;lcd.c: 47: }
  9535  01151C  D008               	goto	l1440
  9536  01151E                     l1439:
  9537                           
  9538                           ;lcd.c: 48: else
  9539                           ;lcd.c: 49: {
  9540                           ;lcd.c: 50: lcd_string(onmsg, smsgpos);
  9541  01151E  0EFA               	movlw	low _onmsg
  9542  011520  6E24               	movwf	lcd_string@lcdstring,c
  9543  011522  0EFF               	movlw	high _onmsg
  9544  011524  6E25               	movwf	lcd_string@lcdstring+1,c
  9545  011526  C02B  F026         	movff	displ_sens@smsgpos,lcd_string@lcdline
  9546  01152A  EC75  F087         	call	_lcd_string	;wreg free
  9547  01152E                     l1440:
  9548                           
  9549                           ;lcd.c: 51: }
  9550                           ;lcd.c: 52: DATAEE_WriteByte(sensval, sensorval);
  9551  01152E  0E53               	movlw	low _sensval
  9552  011530  6EF6               	movwf	tblptrl,c
  9553  011532                     	if	1	;There is more than 1 active tblptr byte
  9554  011532  0EFC               	movlw	high _sensval
  9555  011534  6EF7               	movwf	tblptrh,c
  9556  011536                     	endif
  9557  011536                     	if	1	;There are 3 active tblptr bytes
  9558  011536  0E00               	movlw	low (_sensval shr (0+16))
  9559  011538  6EF8               	movwf	tblptru,c
  9560  01153A                     	endif
  9561  01153A  0009               	tblrd		*+
  9562  01153C  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
  9563  011540  000A               	tblrd		*-
  9564  011542  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
  9565  011546  C037  F01F         	movff	_sensorval,DATAEE_WriteByte@bData	;volatile
  9566  01154A  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
  9567                           
  9568                           ;lcd.c: 53: lcd_string(clrmsg, dmsgpos);
  9569  01154E  0EAF               	movlw	low _clrmsg
  9570  011550  6E24               	movwf	lcd_string@lcdstring,c
  9571  011552  0EFF               	movlw	high _clrmsg
  9572  011554  6E25               	movwf	lcd_string@lcdstring+1,c
  9573  011556  C02A  F026         	movff	displ_sens@dmsgpos,lcd_string@lcdline
  9574  01155A  EC75  F087         	call	_lcd_string	;wreg free
  9575                           
  9576                           ;lcd.c: 54: lcd_dispadd(dmsgpos);
  9577  01155E  502A               	movf	displ_sens@dmsgpos,w,c
  9578  011560  ECC3  F08F         	call	_lcd_dispadd
  9579                           
  9580                           ;lcd.c: 55: displ_hex((uint8_t) DAC1CON1);
  9581  011564  010F               	movlb	15	; () banked
  9582  011566  5134               	movf	52,w,b	;volatile
  9583  011568  6E27               	movwf	displ_hex@hexnum,c
  9584  01156A  6A28               	clrf	displ_hex@hexnum+1,c
  9585  01156C  6A29               	clrf	displ_hex@hexnum+2,c
  9586  01156E  EC1A  F087         	call	_displ_hex	;wreg free
  9587  011572  0012               	return		;funcret
  9588  011574                     __end_of_displ_sens:
  9589                           	opt stack 0
  9590                           tblptru	equ	0xFF8
  9591                           tblptrh	equ	0xFF7
  9592                           tblptrl	equ	0xFF6
  9593                           tablat	equ	0xFF5
  9594                           prodh	equ	0xFF4
  9595                           prodl	equ	0xFF3
  9596                           postinc0	equ	0xFEE
  9597                           wreg	equ	0xFE8
  9598                           indf2	equ	0xFDF
  9599                           fsr2h	equ	0xFDA
  9600                           fsr2l	equ	0xFD9
  9601                           status	equ	0xFD8
  9602                           
  9603 ;; *************** function _CMP1_GetOutputStatus *****************
  9604 ;; Defined at:
  9605 ;;		line 74 in file "mcc_generated_files/cmp1.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;		None
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;		None
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      unsigned char 
  9612 ;; Registers used:
  9613 ;;		wreg
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;Total ram usage:        0 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    2
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_main
  9630 ;;		_displ_sens
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text50
  9635  012086                     __ptext50:
  9636                           	opt stack 0
  9637  012086                     _CMP1_GetOutputStatus:
  9638                           	opt stack 25
  9639                           
  9640                           ;cmp1.c: 76: return (CMOUTbits.MC1OUT);
  9641                           
  9642                           ;incstack = 0
  9643  012086  010F               	movlb	15	; () banked
  9644  012088  A13D               	btfss	61,0,b	;volatile
  9645  01208A  D002               	goto	u2800
  9646  01208C  0E01               	movlw	1
  9647  01208E  0012               	return	
  9648  012090                     u2800:
  9649  012090  0E00               	movlw	0
  9650  012092  0012               	return	
  9651  012094                     __end_of_CMP1_GetOutputStatus:
  9652                           	opt stack 0
  9653                           tblptru	equ	0xFF8
  9654                           tblptrh	equ	0xFF7
  9655                           tblptrl	equ	0xFF6
  9656                           tablat	equ	0xFF5
  9657                           prodh	equ	0xFF4
  9658                           prodl	equ	0xFF3
  9659                           postinc0	equ	0xFEE
  9660                           wreg	equ	0xFE8
  9661                           indf2	equ	0xFDF
  9662                           fsr2h	equ	0xFDA
  9663                           fsr2l	equ	0xFD9
  9664                           status	equ	0xFD8
  9665                           
  9666 ;; *************** function _Hopper_coin *****************
  9667 ;; Defined at:
  9668 ;;		line 179 in file "vend.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;		None
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  coinval         1   12[BANK0 ] unsigned char 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;Total ram usage:        1 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    9
  9689 ;; This function calls:
  9690 ;;		_DATAEE_ReadByte
  9691 ;;		_Update_Hopcoin
  9692 ;;		_butindb
  9693 ;;		_displ_hex
  9694 ;;		_lcd_dispadd
  9695 ;;		_lcd_string
  9696 ;; This function is called by:
  9697 ;;		_enter_service
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text51
  9702  010732                     __ptext51:
  9703                           	opt stack 0
  9704  010732                     _Hopper_coin:
  9705                           	opt stack 20
  9706                           
  9707                           ;vend.c: 181: lcd_string(hoppcoin, line1);
  9708                           
  9709                           ; BSR set to: 15
  9710                           ;incstack = 0
  9711  010732  0EF3               	movlw	low _hoppcoin
  9712  010734  6E24               	movwf	lcd_string@lcdstring,c
  9713  010736  0EFD               	movlw	high _hoppcoin
  9714  010738  6E25               	movwf	lcd_string@lcdstring+1,c
  9715  01073A  0E8F               	movlw	low _line1
  9716  01073C  6EF6               	movwf	tblptrl,c
  9717  01073E                     	if	1	;There is more than 1 active tblptr byte
  9718  01073E  0EFC               	movlw	high _line1
  9719  010740  6EF7               	movwf	tblptrh,c
  9720  010742                     	endif
  9721  010742                     	if	1	;There are 3 active tblptr bytes
  9722  010742  0E00               	movlw	low (_line1 shr (0+16))
  9723  010744  6EF8               	movwf	tblptru,c
  9724  010746                     	endif
  9725  010746  0008               	tblrd		*
  9726  010748  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9727  01074C  EC75  F087         	call	_lcd_string	;wreg free
  9728                           
  9729                           ;vend.c: 182: mdbflags.endis = 1;
  9730  010750  8C3E               	bsf	_mdbflags,6,c
  9731                           
  9732                           ;vend.c: 183: senspos = bflag + 2;
  9733  010752  5046               	movf	_bflag,w,c
  9734  010754  0F02               	addlw	2
  9735  010756  6E36               	movwf	_senspos,c	;volatile
  9736                           
  9737                           ;vend.c: 184: uint8_t coinval = DATAEE_ReadByte(hopcoin);
  9738  010758  0E4F               	movlw	low _hopcoin
  9739  01075A  6EF6               	movwf	tblptrl,c
  9740  01075C                     	if	1	;There is more than 1 active tblptr byte
  9741  01075C  0EFC               	movlw	high _hopcoin
  9742  01075E  6EF7               	movwf	tblptrh,c
  9743  010760                     	endif
  9744  010760                     	if	1	;There are 3 active tblptr bytes
  9745  010760  0E00               	movlw	low (_hopcoin shr (0+16))
  9746  010762  6EF8               	movwf	tblptru,c
  9747  010764                     	endif
  9748  010764  0009               	tblrd		*+
  9749  010766  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  9750  01076A  000A               	tblrd		*-
  9751  01076C  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  9752  010770  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  9753  010774  0100               	movlb	0	; () banked
  9754  010776  6FA8               	movwf	Hopper_coin@coinval& (0+255),b
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;vend.c: 185: lcd_dispadd(senspos);
  9758  010778  5036               	movf	_senspos,w,c	;volatile
  9759  01077A  ECC3  F08F         	call	_lcd_dispadd
  9760                           
  9761                           ;vend.c: 186: displ_hex((uint24_t)coinval);
  9762  01077E  0100               	movlb	0	; () banked
  9763  010780  51A8               	movf	Hopper_coin@coinval& (0+255),w,b
  9764  010782  6E27               	movwf	displ_hex@hexnum,c
  9765  010784  6A28               	clrf	displ_hex@hexnum+1,c
  9766  010786  6A29               	clrf	displ_hex@hexnum+2,c
  9767  010788  EC1A  F087         	call	_displ_hex	;wreg free
  9768                           
  9769                           ;vend.c: 187: while(mdbflags.endis)
  9770  01078C  D03F               	goto	l2024
  9771  01078E                     
  9772                           ;vend.c: 188: {
  9773                           ;vend.c: 189: buttons = butindb();
  9774  01078E  ECD0  F08E         	call	_butindb	;wreg free
  9775  010792  6E39               	movwf	_buttons,c	;volatile
  9776                           
  9777                           ;vend.c: 190: switch(buttons)
  9778  010794  D021               	goto	l2026
  9779  010796  0E01               	movlw	1
  9780  010798  6E2A               	movwf	Update_Hopcoin@direction,c
  9781  01079A  0100               	movlb	0	; () banked
  9782  01079C  51A8               	movf	Hopper_coin@coinval& (0+255),w,b
  9783  01079E  EC83  F089         	call	_Update_Hopcoin
  9784                           
  9785                           ;vend.c: 193: break;
  9786  0107A2  D024               	goto	l2028
  9787  0107A4  0E02               	movlw	2
  9788  0107A6  6E2A               	movwf	Update_Hopcoin@direction,c
  9789  0107A8  0100               	movlb	0	; () banked
  9790  0107AA  51A8               	movf	Hopper_coin@coinval& (0+255),w,b
  9791  0107AC  EC83  F089         	call	_Update_Hopcoin
  9792                           
  9793                           ;vend.c: 195: break;
  9794  0107B0  D01D               	goto	l2028
  9795  0107B2                     l2030:
  9796  0107B2  9C3E               	bcf	_mdbflags,6,c
  9797                           
  9798                           ;vend.c: 197: lcd_string(servmsg, line1);
  9799  0107B4  0E9E               	movlw	low _servmsg
  9800  0107B6  6E24               	movwf	lcd_string@lcdstring,c
  9801  0107B8  0EFC               	movlw	high _servmsg
  9802  0107BA  6E25               	movwf	lcd_string@lcdstring+1,c
  9803  0107BC  0E8F               	movlw	low _line1
  9804  0107BE  6EF6               	movwf	tblptrl,c
  9805  0107C0                     	if	1	;There is more than 1 active tblptr byte
  9806  0107C0  0EFC               	movlw	high _line1
  9807  0107C2  6EF7               	movwf	tblptrh,c
  9808  0107C4                     	endif
  9809  0107C4                     	if	1	;There are 3 active tblptr bytes
  9810  0107C4  0E00               	movlw	low (_line1 shr (0+16))
  9811  0107C6  6EF8               	movwf	tblptru,c
  9812  0107C8                     	endif
  9813  0107C8  0008               	tblrd		*
  9814  0107CA  CFF5 F026          	movff	tablat,lcd_string@lcdline
  9815  0107CE  EC75  F087         	call	_lcd_string	;wreg free
  9816                           
  9817                           ;vend.c: 198: buttons = 0x00;
  9818  0107D2  0E00               	movlw	0
  9819  0107D4  6E39               	movwf	_buttons,c	;volatile
  9820                           
  9821                           ;vend.c: 200: }
  9822                           
  9823                           ;vend.c: 199: break;
  9824  0107D6  D00A               	goto	l2028
  9825  0107D8                     l2026:
  9826  0107D8  5039               	movf	_buttons,w,c	;volatile
  9827                           
  9828                           ; Switch size 1, requested type "space"
  9829                           ; Number of cases is 3, Range of values is 1 to 128
  9830                           ; switch strategies available:
  9831                           ; Name         Instructions Cycles
  9832                           ; simple_byte           10     6 (average)
  9833                           ;	Chosen strategy is simple_byte
  9834  0107DA  0A01               	xorlw	1	; case 1
  9835  0107DC  B4D8               	btfsc	status,2,c
  9836  0107DE  D7DB               	goto	l2027
  9837  0107E0  0A03               	xorlw	3	; case 2
  9838  0107E2  B4D8               	btfsc	status,2,c
  9839  0107E4  D7DF               	goto	l2029
  9840  0107E6  0A82               	xorlw	130	; case 128
  9841  0107E8  B4D8               	btfsc	status,2,c
  9842  0107EA  D7E3               	goto	l2030
  9843  0107EC                     l2028:
  9844                           
  9845                           ;vend.c: 201: coinval = DATAEE_ReadByte(hopcoin);
  9846  0107EC  0E4F               	movlw	low _hopcoin
  9847  0107EE  6EF6               	movwf	tblptrl,c
  9848  0107F0                     	if	1	;There is more than 1 active tblptr byte
  9849  0107F0  0EFC               	movlw	high _hopcoin
  9850  0107F2  6EF7               	movwf	tblptrh,c
  9851  0107F4                     	endif
  9852  0107F4                     	if	1	;There are 3 active tblptr bytes
  9853  0107F4  0E00               	movlw	low (_hopcoin shr (0+16))
  9854  0107F6  6EF8               	movwf	tblptru,c
  9855  0107F8                     	endif
  9856  0107F8  0009               	tblrd		*+
  9857  0107FA  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
  9858  0107FE  000A               	tblrd		*-
  9859  010800  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
  9860  010804  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
  9861  010808  0100               	movlb	0	; () banked
  9862  01080A  6FA8               	movwf	Hopper_coin@coinval& (0+255),b
  9863  01080C                     l2024:
  9864                           
  9865                           ; BSR set to: 0
  9866  01080C  AC3E               	btfss	_mdbflags,6,c
  9867  01080E  0012               	return	
  9868  010810  D7BE               	goto	l2025
  9869  010812                     __end_of_Hopper_coin:
  9870                           	opt stack 0
  9871                           tblptru	equ	0xFF8
  9872                           tblptrh	equ	0xFF7
  9873                           tblptrl	equ	0xFF6
  9874                           tablat	equ	0xFF5
  9875                           prodh	equ	0xFF4
  9876                           prodl	equ	0xFF3
  9877                           postinc0	equ	0xFEE
  9878                           wreg	equ	0xFE8
  9879                           indf2	equ	0xFDF
  9880                           fsr2h	equ	0xFDA
  9881                           fsr2l	equ	0xFD9
  9882                           status	equ	0xFD8
  9883                           
  9884 ;; *************** function _butindb *****************
  9885 ;; Defined at:
  9886 ;;		line 130 in file "vend.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;  butt            1   23[COMRAM] unsigned char 
  9891 ;;  butval          1   22[COMRAM] unsigned char 
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  1    wreg      unsigned char 
  9894 ;; Registers used:
  9895 ;;		wreg, status,2, status,0, cstack
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
  9901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;Total ram usage:        4 bytes
  9906 ;; Hardware stack levels used:    1
  9907 ;; Hardware stack levels required when called:    3
  9908 ;; This function calls:
  9909 ;;		_butin
  9910 ;; This function is called by:
  9911 ;;		_enter_service
  9912 ;;		_Hopper_coin
  9913 ;;		_Sensor_set
  9914 ;;		_price_set
  9915 ;;		_set_price
  9916 ;;		_Vend_setup
  9917 ;;		_Vend_settime
  9918 ;;		_Vend_timeset
  9919 ;;		_Chan_link
  9920 ;;		_Link_chan
  9921 ;;		_Sens_off
  9922 ;;		_off_sens
  9923 ;;		_set_notes
  9924 ;;		_enable_notes
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928                           	psect	text52
  9929  011DA0                     __ptext52:
  9930                           	opt stack 0
  9931  011DA0                     _butindb:
  9932                           	opt stack 24
  9933                           
  9934                           ;vend.c: 132: uint8_t butt = butin();
  9935                           
  9936                           ;incstack = 0
  9937  011DA0  EC20  F08D         	call	_butin	;wreg free
  9938  011DA4  6E22               	movwf	butindb@butt,c
  9939                           
  9940                           ;vend.c: 133: uint8_t butval = butt;
  9941  011DA6  C022  F021         	movff	butindb@butt,butindb@butval
  9942                           
  9943                           ;vend.c: 134: while(butval != 0x00)
  9944  011DAA  D003               	goto	l2009
  9945  011DAC                     
  9946                           ;vend.c: 135: {
  9947                           ;vend.c: 136: butval = butin();
  9948  011DAC  EC20  F08D         	call	_butin	;wreg free
  9949  011DB0  6E21               	movwf	butindb@butval,c
  9950  011DB2                     l2009:
  9951  011DB2  5021               	movf	butindb@butval,w,c
  9952  011DB4  A4D8               	btfss	status,2,c
  9953  011DB6  D7FA               	goto	l2010
  9954                           
  9955                           ;vend.c: 137: }
  9956                           ;vend.c: 138: _delay((unsigned long)((500)*(12000000/4000.0)));
  9957  011DB8  0E08               	movlw	8
  9958  011DBA  6E20               	movwf	(??_butindb+1)& (0+255),c
  9959  011DBC  0E9D               	movlw	157
  9960  011DBE  6E1F               	movwf	??_butindb& (0+255),c
  9961  011DC0  0E06               	movlw	6
  9962  011DC2                     u3447:
  9963  011DC2  2EE8               	decfsz	wreg,f,c
  9964  011DC4  D7FE               	bra	u3447
  9965  011DC6  2E1F               	decfsz	??_butindb& (0+255),f,c
  9966  011DC8  D7FC               	bra	u3447
  9967  011DCA  2E20               	decfsz	(??_butindb+1)& (0+255),f,c
  9968  011DCC  D7FA               	bra	u3447
  9969                           
  9970                           ;vend.c: 140: return butt;
  9971  011DCE  5022               	movf	butindb@butt,w,c
  9972  011DD0  0012               	return	
  9973  011DD2                     __end_of_butindb:
  9974                           	opt stack 0
  9975                           tblptru	equ	0xFF8
  9976                           tblptrh	equ	0xFF7
  9977                           tblptrl	equ	0xFF6
  9978                           tablat	equ	0xFF5
  9979                           prodh	equ	0xFF4
  9980                           prodl	equ	0xFF3
  9981                           postinc0	equ	0xFEE
  9982                           wreg	equ	0xFE8
  9983                           indf2	equ	0xFDF
  9984                           fsr2h	equ	0xFDA
  9985                           fsr2l	equ	0xFD9
  9986                           status	equ	0xFD8
  9987                           
  9988 ;; *************** function _butin *****************
  9989 ;; Defined at:
  9990 ;;		line 143 in file "vend.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;		None
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  butons          1   19[COMRAM] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  1    wreg      unsigned char 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;Total ram usage:        2 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    2
 10011 ;; This function calls:
 10012 ;;		Nothing
 10013 ;; This function is called by:
 10014 ;;		_butindb
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text53
 10019  011A40                     __ptext53:
 10020                           	opt stack 0
 10021  011A40                     _butin:
 10022                           	opt stack 24
 10023                           
 10024                           ;vend.c: 145: LATA7 = 0;
 10025                           
 10026                           ;incstack = 0
 10027  011A40  9E83               	bcf	3971,7,c	;volatile
 10028                           
 10029                           ;vend.c: 146: LATA6 = 1;
 10030  011A42  8C83               	bsf	3971,6,c	;volatile
 10031                           
 10032                           ;vend.c: 147: _delay((unsigned long)((15)*(12000000/4000.0)));
 10033  011A44  0E3B               	movlw	59
 10034  011A46  6E1D               	movwf	??_butin& (0+255),c
 10035  011A48  0E70               	movlw	112
 10036  011A4A                     u3457:
 10037  011A4A  2EE8               	decfsz	wreg,f,c
 10038  011A4C  D7FE               	bra	u3457
 10039  011A4E  2E1D               	decfsz	??_butin& (0+255),f,c
 10040  011A50  D7FC               	bra	u3457
 10041                           
 10042                           ;vend.c: 149: uint8_t butons = ((PORTA >> 1) & 0x0F) << 4;
 10043  011A52  CF8D F01D          	movff	3981,??_butin	;volatile
 10044  011A56  90D8               	bcf	status,0,c
 10045  011A58  321D               	rrcf	??_butin,f,c
 10046  011A5A  0E0F               	movlw	15
 10047  011A5C  161D               	andwf	??_butin,f,c
 10048  011A5E  381D               	swapf	??_butin,w,c
 10049  011A60  0BF0               	andlw	240
 10050  011A62  6E1E               	movwf	butin@butons,c
 10051                           
 10052                           ;vend.c: 150: LATA7 = 1;
 10053  011A64  8E83               	bsf	3971,7,c	;volatile
 10054                           
 10055                           ;vend.c: 151: LATA6 = 0;
 10056  011A66  9C83               	bcf	3971,6,c	;volatile
 10057                           
 10058                           ;vend.c: 152: _delay((unsigned long)((15)*(12000000/4000.0)));
 10059  011A68  0E3B               	movlw	59
 10060  011A6A  6E1D               	movwf	??_butin& (0+255),c
 10061  011A6C  0E70               	movlw	112
 10062  011A6E                     u3467:
 10063  011A6E  2EE8               	decfsz	wreg,f,c
 10064  011A70  D7FE               	bra	u3467
 10065  011A72  2E1D               	decfsz	??_butin& (0+255),f,c
 10066  011A74  D7FC               	bra	u3467
 10067                           
 10068                           ;vend.c: 154: butons = ((PORTA >> 1) & 0x0F) | butons;
 10069  011A76  90D8               	bcf	status,0,c
 10070  011A78  308D               	rrcf	3981,w,c	;volatile
 10071  011A7A  0B0F               	andlw	15
 10072  011A7C  101E               	iorwf	butin@butons,w,c
 10073  011A7E  6E1E               	movwf	butin@butons,c
 10074                           
 10075                           ;vend.c: 155: LATA7 = 1;
 10076  011A80  8E83               	bsf	3971,7,c	;volatile
 10077                           
 10078                           ;vend.c: 156: LATA6 = 1;
 10079  011A82  8C83               	bsf	3971,6,c	;volatile
 10080                           
 10081                           ;vend.c: 157: return ~butons;
 10082  011A84  501E               	movf	butin@butons,w,c
 10083  011A86  0AFF               	xorlw	255
 10084  011A88  0012               	return	
 10085  011A8A                     __end_of_butin:
 10086                           	opt stack 0
 10087                           tblptru	equ	0xFF8
 10088                           tblptrh	equ	0xFF7
 10089                           tblptrl	equ	0xFF6
 10090                           tablat	equ	0xFF5
 10091                           prodh	equ	0xFF4
 10092                           prodl	equ	0xFF3
 10093                           postinc0	equ	0xFEE
 10094                           wreg	equ	0xFE8
 10095                           indf2	equ	0xFDF
 10096                           fsr2h	equ	0xFDA
 10097                           fsr2l	equ	0xFD9
 10098                           status	equ	0xFD8
 10099                           
 10100 ;; *************** function _Update_Hopcoin *****************
 10101 ;; Defined at:
 10102 ;;		line 205 in file "vend.c"
 10103 ;; Parameters:    Size  Location     Type
 10104 ;;  newval          1    wreg     unsigned char 
 10105 ;;  direction       1   31[COMRAM] unsigned char 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  newval          1   32[COMRAM] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      void 
 10110 ;; Registers used:
 10111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10117 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;Total ram usage:        2 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    8
 10124 ;; This function calls:
 10125 ;;		_DATAEE_WriteByte
 10126 ;;		_displ_hex
 10127 ;;		_lcd_dispadd
 10128 ;;		_lcd_string
 10129 ;; This function is called by:
 10130 ;;		_Hopper_coin
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text54
 10135  011306                     __ptext54:
 10136                           	opt stack 0
 10137  011306                     _Update_Hopcoin:
 10138                           	opt stack 20
 10139                           
 10140                           ;incstack = 0
 10141                           ;Update_Hopcoin@newval stored from wreg
 10142  011306  6E2B               	movwf	Update_Hopcoin@newval,c
 10143                           
 10144                           ;vend.c: 208: switch(newval)
 10145  011308  D014               	goto	l2035
 10146  01130A  042A               	decf	Update_Hopcoin@direction,w,c
 10147  01130C  A4D8               	btfss	status,2,c
 10148  01130E  D005               	goto	u2930
 10149                           
 10150                           ;vend.c: 211: {
 10151                           ;vend.c: 212: newval++;
 10152  011310  2A2B               	incf	Update_Hopcoin@newval,f,c
 10153                           
 10154                           ;vend.c: 213: }
 10155  011312  D01A               	goto	l2039
 10156  011314  042A               	decf	Update_Hopcoin@direction,w,c
 10157  011316  A4D8               	btfss	status,2,c
 10158  011318  D002               	goto	l2041
 10159  01131A                     u2930:
 10160                           
 10161                           ;vend.c: 220: {
 10162                           ;vend.c: 221: newval = 0x05;
 10163  01131A  0E05               	movlw	5
 10164  01131C  D006               	goto	L15
 10165  01131E                     l2041:
 10166                           
 10167                           ;vend.c: 223: else
 10168                           ;vend.c: 224: {
 10169                           ;vend.c: 225: newval--;
 10170  01131E  062B               	decf	Update_Hopcoin@newval,f,c
 10171                           
 10172                           ;vend.c: 226: }
 10173                           ;vend.c: 227: break;
 10174  011320  D013               	goto	l2039
 10175  011322  042A               	decf	Update_Hopcoin@direction,w,c
 10176  011324  A4D8               	btfss	status,2,c
 10177  011326  D003               	goto	l2046
 10178                           
 10179                           ;vend.c: 229: {
 10180                           ;vend.c: 231: newval = 0x01;
 10181  011328  0E01               	movlw	1
 10182  01132A                     L15:
 10183  01132A  6E2B               	movwf	Update_Hopcoin@newval,c
 10184                           
 10185                           ;vend.c: 236: }
 10186                           ;vend.c: 237: break;
 10187  01132C  D00D               	goto	l2039
 10188  01132E                     l2046:
 10189  01132E  0E02               	movlw	2
 10190  011330  D7FC               	goto	L15
 10191  011332                     l2035:
 10192  011332  502B               	movf	Update_Hopcoin@newval,w,c
 10193                           
 10194                           ; Switch size 1, requested type "space"
 10195                           ; Number of cases is 3, Range of values is 1 to 5
 10196                           ; switch strategies available:
 10197                           ; Name         Instructions Cycles
 10198                           ; simple_byte           10     6 (average)
 10199                           ;	Chosen strategy is simple_byte
 10200  011334  0A01               	xorlw	1	; case 1
 10201  011336  B4D8               	btfsc	status,2,c
 10202  011338  D7E8               	goto	l2036
 10203  01133A  0A03               	xorlw	3	; case 2
 10204  01133C  B4D8               	btfsc	status,2,c
 10205  01133E  D7EA               	goto	l2040
 10206  011340  0A07               	xorlw	7	; case 5
 10207  011342  B4D8               	btfsc	status,2,c
 10208  011344  D7EE               	goto	l2043
 10209  011346  D7F3               	goto	l2046
 10210  011348                     l2039:
 10211                           
 10212                           ;vend.c: 240: lcd_string(clrmsg, senspos);
 10213  011348  0EAF               	movlw	low _clrmsg
 10214  01134A  6E24               	movwf	lcd_string@lcdstring,c
 10215  01134C  0EFF               	movlw	high _clrmsg
 10216  01134E  6E25               	movwf	lcd_string@lcdstring+1,c
 10217  011350  C036  F026         	movff	_senspos,lcd_string@lcdline	;volatile
 10218  011354  EC75  F087         	call	_lcd_string	;wreg free
 10219                           
 10220                           ;vend.c: 241: DATAEE_WriteByte(hopcoin, newval);
 10221  011358  0E4F               	movlw	low _hopcoin
 10222  01135A  6EF6               	movwf	tblptrl,c
 10223  01135C                     	if	1	;There is more than 1 active tblptr byte
 10224  01135C  0EFC               	movlw	high _hopcoin
 10225  01135E  6EF7               	movwf	tblptrh,c
 10226  011360                     	endif
 10227  011360                     	if	1	;There are 3 active tblptr bytes
 10228  011360  0E00               	movlw	low (_hopcoin shr (0+16))
 10229  011362  6EF8               	movwf	tblptru,c
 10230  011364                     	endif
 10231  011364  0009               	tblrd		*+
 10232  011366  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 10233  01136A  000A               	tblrd		*-
 10234  01136C  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 10235  011370  C02B  F01F         	movff	Update_Hopcoin@newval,DATAEE_WriteByte@bData
 10236  011374  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
 10237                           
 10238                           ;vend.c: 242: lcd_dispadd(senspos);
 10239  011378  5036               	movf	_senspos,w,c	;volatile
 10240  01137A  ECC3  F08F         	call	_lcd_dispadd
 10241                           
 10242                           ;vend.c: 243: displ_hex((uint24_t)newval);
 10243  01137E  502B               	movf	Update_Hopcoin@newval,w,c
 10244  011380  6E27               	movwf	displ_hex@hexnum,c
 10245  011382  6A28               	clrf	displ_hex@hexnum+1,c
 10246  011384  6A29               	clrf	displ_hex@hexnum+2,c
 10247  011386  EC1A  F087         	call	_displ_hex	;wreg free
 10248  01138A  0012               	return		;funcret
 10249  01138C                     __end_of_Update_Hopcoin:
 10250                           	opt stack 0
 10251                           tblptru	equ	0xFF8
 10252                           tblptrh	equ	0xFF7
 10253                           tblptrl	equ	0xFF6
 10254                           tablat	equ	0xFF5
 10255                           prodh	equ	0xFF4
 10256                           prodl	equ	0xFF3
 10257                           postinc0	equ	0xFEE
 10258                           wreg	equ	0xFE8
 10259                           indf2	equ	0xFDF
 10260                           fsr2h	equ	0xFDA
 10261                           fsr2l	equ	0xFD9
 10262                           status	equ	0xFD8
 10263                           
 10264 ;; *************** function _Clear_cred *****************
 10265 ;; Defined at:
 10266 ;;		line 288 in file "vend.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;		None
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;		None
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  1    wreg      void 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10284 ;;Total ram usage:        2 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    8
 10287 ;; This function calls:
 10288 ;;		_DATAEE_WriteByte
 10289 ;;		_lcd_string
 10290 ;; This function is called by:
 10291 ;;		_enter_service
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text55
 10296  0118A4                     __ptext55:
 10297                           	opt stack 0
 10298  0118A4                     _Clear_cred:
 10299                           	opt stack 21
 10300                           
 10301                           ;vend.c: 290: DATAEE_WriteByte(credmem, 0x00);
 10302                           
 10303                           ;incstack = 0
 10304  0118A4  0E61               	movlw	low _credmem
 10305  0118A6  6EF6               	movwf	tblptrl,c
 10306  0118A8                     	if	1	;There is more than 1 active tblptr byte
 10307  0118A8  0EFC               	movlw	high _credmem
 10308  0118AA  6EF7               	movwf	tblptrh,c
 10309  0118AC                     	endif
 10310  0118AC                     	if	1	;There are 3 active tblptr bytes
 10311  0118AC  0E00               	movlw	low (_credmem shr (0+16))
 10312  0118AE  6EF8               	movwf	tblptru,c
 10313  0118B0                     	endif
 10314  0118B0  0009               	tblrd		*+
 10315  0118B2  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 10316  0118B6  000A               	tblrd		*-
 10317  0118B8  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 10318  0118BC  0E00               	movlw	0
 10319  0118BE  6E1F               	movwf	DATAEE_WriteByte@bData,c
 10320  0118C0  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
 10321                           
 10322                           ;vend.c: 291: lcd_string(creditclr, line1);
 10323  0118C4  0E62               	movlw	low _creditclr
 10324  0118C6  6E24               	movwf	lcd_string@lcdstring,c
 10325  0118C8  0EFF               	movlw	high _creditclr
 10326  0118CA  6E25               	movwf	lcd_string@lcdstring+1,c
 10327  0118CC  0E8F               	movlw	low _line1
 10328  0118CE  6EF6               	movwf	tblptrl,c
 10329  0118D0                     	if	1	;There is more than 1 active tblptr byte
 10330  0118D0  0EFC               	movlw	high _line1
 10331  0118D2  6EF7               	movwf	tblptrh,c
 10332  0118D4                     	endif
 10333  0118D4                     	if	1	;There are 3 active tblptr bytes
 10334  0118D4  0E00               	movlw	low (_line1 shr (0+16))
 10335  0118D6  6EF8               	movwf	tblptru,c
 10336  0118D8                     	endif
 10337  0118D8  0008               	tblrd		*
 10338  0118DA  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10339  0118DE  EC75  F087         	call	_lcd_string	;wreg free
 10340                           
 10341                           ;vend.c: 292: _delay((unsigned long)((1000)*(12000000/4000.0)));
 10342  0118E2  0E10               	movlw	16
 10343  0118E4  6E2A               	movwf	(??_Clear_cred+1)& (0+255),c
 10344  0118E6  0E39               	movlw	57
 10345  0118E8  6E29               	movwf	??_Clear_cred& (0+255),c
 10346  0118EA  0E0E               	movlw	14
 10347  0118EC                     u3477:
 10348  0118EC  2EE8               	decfsz	wreg,f,c
 10349  0118EE  D7FE               	bra	u3477
 10350  0118F0  2E29               	decfsz	??_Clear_cred& (0+255),f,c
 10351  0118F2  D7FC               	bra	u3477
 10352  0118F4  2E2A               	decfsz	(??_Clear_cred+1)& (0+255),f,c
 10353  0118F6  D7FA               	bra	u3477
 10354  0118F8  0012               	return		;funcret
 10355  0118FA                     __end_of_Clear_cred:
 10356                           	opt stack 0
 10357                           tblptru	equ	0xFF8
 10358                           tblptrh	equ	0xFF7
 10359                           tblptrl	equ	0xFF6
 10360                           tablat	equ	0xFF5
 10361                           prodh	equ	0xFF4
 10362                           prodl	equ	0xFF3
 10363                           postinc0	equ	0xFEE
 10364                           wreg	equ	0xFE8
 10365                           indf2	equ	0xFDF
 10366                           fsr2h	equ	0xFDA
 10367                           fsr2l	equ	0xFD9
 10368                           status	equ	0xFD8
 10369                           
 10370 ;; *************** function _Audit *****************
 10371 ;; Defined at:
 10372 ;;		line 165 in file "vend.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;		None
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;		None
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  1    wreg      void 
 10379 ;; Registers used:
 10380 ;;		None
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10390 ;;Total ram usage:        0 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; Hardware stack levels required when called:    2
 10393 ;; This function calls:
 10394 ;;		Nothing
 10395 ;; This function is called by:
 10396 ;;		_enter_service
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text56
 10401  0120E4                     __ptext56:
 10402                           	opt stack 0
 10403  0120E4                     _Audit:
 10404                           	opt stack 27
 10405                           
 10406                           ;incstack = 0
 10407  0120E4  0012               	return		;funcret
 10408  0120E6                     __end_of_Audit:
 10409                           	opt stack 0
 10410                           tblptru	equ	0xFF8
 10411                           tblptrh	equ	0xFF7
 10412                           tblptrl	equ	0xFF6
 10413                           tablat	equ	0xFF5
 10414                           prodh	equ	0xFF4
 10415                           prodl	equ	0xFF3
 10416                           postinc0	equ	0xFEE
 10417                           wreg	equ	0xFE8
 10418                           indf2	equ	0xFDF
 10419                           fsr2h	equ	0xFDA
 10420                           fsr2l	equ	0xFD9
 10421                           status	equ	0xFD8
 10422                           
 10423 ;; *************** function _displ_noteer *****************
 10424 ;; Defined at:
 10425 ;;		line 184 in file "lcd.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;		None
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;		None
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;Total ram usage:        0 bytes
 10444 ;; Hardware stack levels used:    1
 10445 ;; Hardware stack levels required when called:    8
 10446 ;; This function calls:
 10447 ;;		_displ_code
 10448 ;;		_lcd_string
 10449 ;; This function is called by:
 10450 ;;		_main
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           	psect	text57
 10455  011E04                     __ptext57:
 10456                           	opt stack 0
 10457  011E04                     _displ_noteer:
 10458                           	opt stack 22
 10459                           
 10460                           ;lcd.c: 186: lcd_string(noteerr, line1);
 10461                           
 10462                           ;incstack = 0
 10463  011E04  0E0D               	movlw	low _noteerr
 10464  011E06  6E24               	movwf	lcd_string@lcdstring,c
 10465  011E08  0EFF               	movlw	high _noteerr
 10466  011E0A  6E25               	movwf	lcd_string@lcdstring+1,c
 10467  011E0C  0E8F               	movlw	low _line1
 10468  011E0E  6EF6               	movwf	tblptrl,c
 10469  011E10                     	if	1	;There is more than 1 active tblptr byte
 10470  011E10  0EFC               	movlw	high _line1
 10471  011E12  6EF7               	movwf	tblptrh,c
 10472  011E14                     	endif
 10473  011E14                     	if	1	;There are 3 active tblptr bytes
 10474  011E14  0E00               	movlw	low (_line1 shr (0+16))
 10475  011E16  6EF8               	movwf	tblptru,c
 10476  011E18                     	endif
 10477  011E18  0008               	tblrd		*
 10478  011E1A  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10479  011E1E  EC75  F087         	call	_lcd_string	;wreg free
 10480                           
 10481                           ;lcd.c: 187: ercode = mdbdata[0];
 10482  011E22  C060  F043         	movff	_mdbdata,_ercode
 10483                           
 10484                           ;lcd.c: 188: displ_code(ercode);
 10485  011E26  5043               	movf	_ercode,w,c
 10486  011E28  ECA0  F081         	call	_displ_code
 10487                           
 10488                           ;lcd.c: 189: mdbflags.noteerr = 0;
 10489  011E2C  923E               	bcf	_mdbflags,1,c
 10490                           
 10491                           ;lcd.c: 190: venflags.noterr = 0;
 10492  011E2E  9C2C               	bcf	_venflags,6,c
 10493                           
 10494                           ;lcd.c: 191: venflags.credisplay = 0;
 10495  011E30  982C               	bcf	_venflags,4,c
 10496  011E32  0012               	return		;funcret
 10497  011E34                     __end_of_displ_noteer:
 10498                           	opt stack 0
 10499                           tblptru	equ	0xFF8
 10500                           tblptrh	equ	0xFF7
 10501                           tblptrl	equ	0xFF6
 10502                           tablat	equ	0xFF5
 10503                           prodh	equ	0xFF4
 10504                           prodl	equ	0xFF3
 10505                           postinc0	equ	0xFEE
 10506                           wreg	equ	0xFE8
 10507                           indf2	equ	0xFDF
 10508                           fsr2h	equ	0xFDA
 10509                           fsr2l	equ	0xFD9
 10510                           status	equ	0xFD8
 10511                           
 10512 ;; *************** function _displ_code *****************
 10513 ;; Defined at:
 10514 ;;		line 137 in file "lcd.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;  ercode          1    wreg     unsigned char 
 10517 ;; Auto vars:     Size  Location     Type
 10518 ;;  ercode          1   27[COMRAM] unsigned char 
 10519 ;; Return value:  Size  Location     Type
 10520 ;;                  1    wreg      void 
 10521 ;; Registers used:
 10522 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10523 ;; Tracked objects:
 10524 ;;		On entry : 0/0
 10525 ;;		On exit  : 0/0
 10526 ;;		Unchanged: 0/0
 10527 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;Total ram usage:        3 bytes
 10533 ;; Hardware stack levels used:    1
 10534 ;; Hardware stack levels required when called:    7
 10535 ;; This function calls:
 10536 ;;		_lcd_writeC
 10537 ;; This function is called by:
 10538 ;;		_displ_noteer
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           	psect	text58
 10543  010340                     __ptext58:
 10544                           	opt stack 0
 10545  010340                     _displ_code:
 10546                           	opt stack 22
 10547                           
 10548                           ;incstack = 0
 10549                           ;displ_code@ercode stored from wreg
 10550  010340  6E26               	movwf	displ_code@ercode,c
 10551                           
 10552                           ;lcd.c: 139: if((ercode >> 4) < 0x0A)
 10553  010342  C026  F024         	movff	displ_code@ercode,??_displ_code
 10554  010346  3A24               	swapf	??_displ_code,f,c
 10555  010348  0E0F               	movlw	15
 10556  01034A  1624               	andwf	??_displ_code,f,c
 10557  01034C  0E0A               	movlw	10
 10558  01034E  6024               	cpfslt	??_displ_code,c
 10559  010350  D01E               	goto	l1472
 10560                           
 10561                           ;lcd.c: 140: {
 10562                           ;lcd.c: 141: lcd_writeC((ercode >> 4) | 0x30);
 10563  010352  3826               	swapf	displ_code@ercode,w,c
 10564  010354  0B0F               	andlw	15
 10565  010356  0930               	iorlw	48
 10566  010358  EC91  F08B         	call	_lcd_writeC
 10567                           
 10568                           ;lcd.c: 142: }
 10569  01035C  D033               	goto	l1474
 10570  01035E  0E41               	movlw	65
 10571  010360  EC91  F08B         	call	_lcd_writeC
 10572                           
 10573                           ;lcd.c: 148: break;
 10574  010364  D02F               	goto	l1474
 10575  010366  0E42               	movlw	66
 10576  010368  EC91  F08B         	call	_lcd_writeC
 10577                           
 10578                           ;lcd.c: 150: break;
 10579  01036C  D02B               	goto	l1474
 10580  01036E  0E43               	movlw	67
 10581  010370  EC91  F08B         	call	_lcd_writeC
 10582                           
 10583                           ;lcd.c: 152: break;
 10584  010374  D027               	goto	l1474
 10585  010376  0E44               	movlw	68
 10586  010378  EC91  F08B         	call	_lcd_writeC
 10587                           
 10588                           ;lcd.c: 154: break;
 10589  01037C  D023               	goto	l1474
 10590  01037E  0E45               	movlw	69
 10591  010380  EC91  F08B         	call	_lcd_writeC
 10592                           
 10593                           ;lcd.c: 156: break;
 10594  010384  D01F               	goto	l1474
 10595  010386  0E46               	movlw	70
 10596  010388  EC91  F08B         	call	_lcd_writeC
 10597                           
 10598                           ;lcd.c: 158: }
 10599  01038C  D01B               	goto	l1474
 10600  01038E                     l1472:
 10601  01038E  3826               	swapf	displ_code@ercode,w,c
 10602  010390  0B0F               	andlw	15
 10603  010392  6E24               	movwf	??_displ_code& (0+255),c
 10604  010394  6A25               	clrf	(??_displ_code+1)& (0+255),c
 10605                           
 10606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10607                           ; Switch size 1, requested type "space"
 10608                           ; Number of cases is 1, Range of values is 0 to 0
 10609                           ; switch strategies available:
 10610                           ; Name         Instructions Cycles
 10611                           ; simple_byte            4     3 (average)
 10612                           ;	Chosen strategy is simple_byte
 10613  010396  5025               	movf	??_displ_code+1,w,c
 10614  010398  0A00               	xorlw	0	; case 0
 10615  01039A  A4D8               	btfss	status,2,c
 10616  01039C  D013               	goto	l1474
 10617                           
 10618                           ; Switch size 1, requested type "space"
 10619                           ; Number of cases is 6, Range of values is 10 to 15
 10620                           ; switch strategies available:
 10621                           ; Name         Instructions Cycles
 10622                           ; simple_byte           19    10 (average)
 10623                           ;	Chosen strategy is simple_byte
 10624  01039E  5024               	movf	??_displ_code,w,c
 10625  0103A0  0A0A               	xorlw	10	; case 10
 10626  0103A2  B4D8               	btfsc	status,2,c
 10627  0103A4  D7DC               	goto	l1473
 10628  0103A6  0A01               	xorlw	1	; case 11
 10629  0103A8  B4D8               	btfsc	status,2,c
 10630  0103AA  D7DD               	goto	l1475
 10631  0103AC  0A07               	xorlw	7	; case 12
 10632  0103AE  B4D8               	btfsc	status,2,c
 10633  0103B0  D7DE               	goto	l1476
 10634  0103B2  0A01               	xorlw	1	; case 13
 10635  0103B4  B4D8               	btfsc	status,2,c
 10636  0103B6  D7DF               	goto	l1477
 10637  0103B8  0A03               	xorlw	3	; case 14
 10638  0103BA  B4D8               	btfsc	status,2,c
 10639  0103BC  D7E0               	goto	l1478
 10640  0103BE  0A01               	xorlw	1	; case 15
 10641  0103C0  B4D8               	btfsc	status,2,c
 10642  0103C2  D7E1               	goto	l1479
 10643  0103C4                     l1474:
 10644                           
 10645                           ;lcd.c: 159: }
 10646                           ;lcd.c: 160: if((ercode & 0x0F) < 0x0A)
 10647  0103C4  C026  F024         	movff	displ_code@ercode,??_displ_code
 10648  0103C8  0E0F               	movlw	15
 10649  0103CA  1624               	andwf	??_displ_code,f,c
 10650  0103CC  0E0A               	movlw	10
 10651  0103CE  6024               	cpfslt	??_displ_code,c
 10652  0103D0  D01E               	goto	l1482
 10653                           
 10654                           ;lcd.c: 161: {
 10655                           ;lcd.c: 162: lcd_writeC((ercode & 0x0F) | 0x30);
 10656  0103D2  5026               	movf	displ_code@ercode,w,c
 10657  0103D4  0B0F               	andlw	15
 10658  0103D6  0930               	iorlw	48
 10659  0103D8  EC91  F08B         	call	_lcd_writeC
 10660                           
 10661                           ;lcd.c: 163: }
 10662  0103DC  0012               	return	
 10663  0103DE  0E41               	movlw	65
 10664  0103E0  EC91  F08B         	call	_lcd_writeC
 10665                           
 10666                           ;lcd.c: 169: break;
 10667  0103E4  0012               	return	
 10668  0103E6  0E42               	movlw	66
 10669  0103E8  EC91  F08B         	call	_lcd_writeC
 10670                           
 10671                           ;lcd.c: 171: break;
 10672  0103EC  0012               	return	
 10673  0103EE  0E43               	movlw	67
 10674  0103F0  EC91  F08B         	call	_lcd_writeC
 10675                           
 10676                           ;lcd.c: 173: break;
 10677  0103F4  0012               	return	
 10678  0103F6  0E44               	movlw	68
 10679  0103F8  EC91  F08B         	call	_lcd_writeC
 10680                           
 10681                           ;lcd.c: 175: break;
 10682  0103FC  0012               	return	
 10683  0103FE  0E45               	movlw	69
 10684  010400  EC91  F08B         	call	_lcd_writeC
 10685                           
 10686                           ;lcd.c: 177: break;
 10687  010404  0012               	return	
 10688  010406  0E46               	movlw	70
 10689  010408  EC91  F08B         	call	_lcd_writeC
 10690                           
 10691                           ;lcd.c: 179: }
 10692  01040C  0012               	return	
 10693  01040E                     l1482:
 10694  01040E  5026               	movf	displ_code@ercode,w,c
 10695  010410  0B0F               	andlw	15
 10696  010412  6E24               	movwf	??_displ_code& (0+255),c
 10697  010414  6A25               	clrf	(??_displ_code+1)& (0+255),c
 10698                           
 10699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10700                           ; Switch size 1, requested type "space"
 10701                           ; Number of cases is 1, Range of values is 0 to 0
 10702                           ; switch strategies available:
 10703                           ; Name         Instructions Cycles
 10704                           ; simple_byte            4     3 (average)
 10705                           ;	Chosen strategy is simple_byte
 10706  010416  5025               	movf	??_displ_code+1,w,c
 10707  010418  0A00               	xorlw	0	; case 0
 10708  01041A  A4D8               	btfss	status,2,c
 10709  01041C  0012               	return	
 10710                           
 10711                           ; Switch size 1, requested type "space"
 10712                           ; Number of cases is 6, Range of values is 10 to 15
 10713                           ; switch strategies available:
 10714                           ; Name         Instructions Cycles
 10715                           ; simple_byte           19    10 (average)
 10716                           ;	Chosen strategy is simple_byte
 10717  01041E  5024               	movf	??_displ_code,w,c
 10718  010420  0A0A               	xorlw	10	; case 10
 10719  010422  B4D8               	btfsc	status,2,c
 10720  010424  D7DC               	goto	l1483
 10721  010426  0A01               	xorlw	1	; case 11
 10722  010428  B4D8               	btfsc	status,2,c
 10723  01042A  D7DD               	goto	l1485
 10724  01042C  0A07               	xorlw	7	; case 12
 10725  01042E  B4D8               	btfsc	status,2,c
 10726  010430  D7DE               	goto	l1486
 10727  010432  0A01               	xorlw	1	; case 13
 10728  010434  B4D8               	btfsc	status,2,c
 10729  010436  D7DF               	goto	l1487
 10730  010438  0A03               	xorlw	3	; case 14
 10731  01043A  B4D8               	btfsc	status,2,c
 10732  01043C  D7E0               	goto	l1488
 10733  01043E  0A01               	xorlw	1	; case 15
 10734  010440  A4D8               	btfss	status,2,c
 10735  010442  0012               	return	
 10736  010444  D7E0               	goto	l1489
 10737  010446                     __end_of_displ_code:
 10738                           	opt stack 0
 10739                           tblptru	equ	0xFF8
 10740                           tblptrh	equ	0xFF7
 10741                           tblptrl	equ	0xFF6
 10742                           tablat	equ	0xFF5
 10743                           prodh	equ	0xFF4
 10744                           prodl	equ	0xFF3
 10745                           postinc0	equ	0xFEE
 10746                           wreg	equ	0xFE8
 10747                           indf2	equ	0xFDF
 10748                           fsr2h	equ	0xFDA
 10749                           fsr2l	equ	0xFD9
 10750                           status	equ	0xFD8
 10751                           
 10752 ;; *************** function _displ_credit *****************
 10753 ;; Defined at:
 10754 ;;		line 129 in file "lcd.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;		None
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  cash            1   31[COMRAM] unsigned char 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;Total ram usage:        1 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:    8
 10775 ;; This function calls:
 10776 ;;		_credit_check
 10777 ;;		_displ_hex
 10778 ;;		_lcd_string
 10779 ;; This function is called by:
 10780 ;;		_main
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           	psect	text59
 10785  011D06                     __ptext59:
 10786                           	opt stack 0
 10787  011D06                     _displ_credit:
 10788                           	opt stack 22
 10789                           
 10790                           ;lcd.c: 131: lcd_string(credits, line1);
 10791                           
 10792                           ;incstack = 0
 10793  011D06  0E7F               	movlw	low _credits
 10794  011D08  6E24               	movwf	lcd_string@lcdstring,c
 10795  011D0A  0EFF               	movlw	high _credits
 10796  011D0C  6E25               	movwf	lcd_string@lcdstring+1,c
 10797  011D0E  0E8F               	movlw	low _line1
 10798  011D10  6EF6               	movwf	tblptrl,c
 10799  011D12                     	if	1	;There is more than 1 active tblptr byte
 10800  011D12  0EFC               	movlw	high _line1
 10801  011D14  6EF7               	movwf	tblptrh,c
 10802  011D16                     	endif
 10803  011D16                     	if	1	;There are 3 active tblptr bytes
 10804  011D16  0E00               	movlw	low (_line1 shr (0+16))
 10805  011D18  6EF8               	movwf	tblptru,c
 10806  011D1A                     	endif
 10807  011D1A  0008               	tblrd		*
 10808  011D1C  CFF5 F026          	movff	tablat,lcd_string@lcdline
 10809  011D20  EC75  F087         	call	_lcd_string	;wreg free
 10810                           
 10811                           ;lcd.c: 132: uint8_t cash = credit_check();
 10812  011D24  EC69  F08F         	call	_credit_check	;wreg free
 10813  011D28  6E2A               	movwf	displ_credit@cash,c
 10814                           
 10815                           ;lcd.c: 133: displ_hex((uint8_t) cash);
 10816  011D2A  502A               	movf	displ_credit@cash,w,c
 10817  011D2C  6E27               	movwf	displ_hex@hexnum,c
 10818  011D2E  6A28               	clrf	displ_hex@hexnum+1,c
 10819  011D30  6A29               	clrf	displ_hex@hexnum+2,c
 10820  011D32  EC1A  F087         	call	_displ_hex	;wreg free
 10821                           
 10822                           ;lcd.c: 134: venflags.credisplay = 0;
 10823  011D36  982C               	bcf	_venflags,4,c
 10824  011D38  0012               	return		;funcret
 10825  011D3A                     __end_of_displ_credit:
 10826                           	opt stack 0
 10827                           tblptru	equ	0xFF8
 10828                           tblptrh	equ	0xFF7
 10829                           tblptrl	equ	0xFF6
 10830                           tablat	equ	0xFF5
 10831                           prodh	equ	0xFF4
 10832                           prodl	equ	0xFF3
 10833                           postinc0	equ	0xFEE
 10834                           wreg	equ	0xFE8
 10835                           indf2	equ	0xFDF
 10836                           fsr2h	equ	0xFDA
 10837                           fsr2l	equ	0xFD9
 10838                           status	equ	0xFD8
 10839                           
 10840 ;; *************** function _lcd_string *****************
 10841 ;; Defined at:
 10842 ;;		line 219 in file "lcd.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;  lcdstring       2   25[COMRAM] PTR unsigned char 
 10845 ;;		 -> twohundredrand(8), hundredrand(8), fiftyrand(8), twentyrand(8), 
 10846 ;;		 -> tenrand(9), setnotes(69), chanresetmsg(32), chanlinkm(55), 
 10847 ;;		 -> vendtimem(41), setimemsg(41), vendsetup(80), pricesetm2(57), 
 10848 ;;		 -> pricesetmsg(18), creditclr(16), dacmsg(13), hoppcoin(51), 
 10849 ;;		 -> initnote(37), noteerr(28), credits(13), timemsg(18), 
 10850 ;;		 -> clrline(21), enabled(10), disabled(10), sensoffmsg(31), 
 10851 ;;		 -> sensmsg(11), linkmsg(12), chanmsg(12), clrmsg(10), 
 10852 ;;		 -> onmsg(4), offmsg(4), servmsg(80), inscoin(49), 
 10853 ;;  lcdline         1   27[COMRAM] unsigned char 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;		None
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 10865 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10868 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;Total ram usage:        5 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:    7
 10872 ;; This function calls:
 10873 ;;		_lcd_dispadd
 10874 ;;		_lcd_write
 10875 ;;		_lcd_writeC
 10876 ;; This function is called by:
 10877 ;;		_main
 10878 ;;		_enter_service
 10879 ;;		_displ_sens
 10880 ;;		_displ_lflags
 10881 ;;		_displ_sflags
 10882 ;;		_displ_time
 10883 ;;		_displ_note
 10884 ;;		_displ_nendis
 10885 ;;		_displ_credit
 10886 ;;		_displ_noteer
 10887 ;;		_vend_init
 10888 ;;		_Hopper_coin
 10889 ;;		_Update_Hopcoin
 10890 ;;		_Sensor_set
 10891 ;;		_Clear_cred
 10892 ;;		_price_set
 10893 ;;		_set_price
 10894 ;;		_Vend_setup
 10895 ;;		_Vend_settime
 10896 ;;		_Vend_timeset
 10897 ;;		_Chan_link
 10898 ;;		_Sens_off
 10899 ;;		_Reset_settings
 10900 ;;		_set_notes
 10901 ;;		_enable_notes
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           	psect	text60
 10906  010EEA                     __ptext60:
 10907                           	opt stack 0
 10908  010EEA                     _lcd_string:
 10909                           	opt stack 22
 10910                           
 10911                           ;lcd.c: 221: if(lcdline == line1)
 10912                           
 10913                           ;incstack = 0
 10914  010EEA  0E8F               	movlw	low _line1
 10915  010EEC  6EF6               	movwf	tblptrl,c
 10916  010EEE                     	if	1	;There is more than 1 active tblptr byte
 10917  010EEE  0EFC               	movlw	high _line1
 10918  010EF0  6EF7               	movwf	tblptrh,c
 10919  010EF2                     	endif
 10920  010EF2                     	if	1	;There are 3 active tblptr bytes
 10921  010EF2  0E00               	movlw	low (_line1 shr (0+16))
 10922  010EF4  6EF8               	movwf	tblptru,c
 10923  010EF6                     	endif
 10924  010EF6  0008               	tblrd		*
 10925  010EF8  50F5               	movf	tablat,w,c
 10926  010EFA  6226               	cpfseq	lcd_string@lcdline,c
 10927  010EFC  D00B               	goto	l1506
 10928                           
 10929                           ;lcd.c: 222: {
 10930                           ;lcd.c: 223: lcd_write(dispclr);
 10931  010EFE  0E99               	movlw	low _dispclr
 10932  010F00  6EF6               	movwf	tblptrl,c
 10933  010F02                     	if	1	;There is more than 1 active tblptr byte
 10934  010F02  0EFC               	movlw	high _dispclr
 10935  010F04  6EF7               	movwf	tblptrh,c
 10936  010F06                     	endif
 10937  010F06                     	if	1	;There are 3 active tblptr bytes
 10938  010F06  0E00               	movlw	low (_dispclr shr (0+16))
 10939  010F08  6EF8               	movwf	tblptru,c
 10940  010F0A                     	endif
 10941  010F0A  0008               	tblrd		*
 10942  010F0C  50F5               	movf	tablat,w,c
 10943  010F0E  ECE9  F08E         	call	_lcd_write
 10944                           
 10945                           ;lcd.c: 224: }
 10946  010F12  D004               	goto	l1507
 10947  010F14                     l1506:
 10948                           
 10949                           ;lcd.c: 225: else
 10950                           ;lcd.c: 226: {
 10951                           ;lcd.c: 228: lcd_dispadd(lcdline | 0x80);
 10952  010F14  5026               	movf	lcd_string@lcdline,w,c
 10953  010F16  0980               	iorlw	128
 10954  010F18  ECC3  F08F         	call	_lcd_dispadd
 10955  010F1C                     l1507:
 10956                           
 10957                           ;lcd.c: 229: }
 10958                           ;lcd.c: 230: for(stradd = 0; lcdstring[stradd] != 0; stradd++)
 10959  010F1C  0E00               	movlw	0
 10960  010F1E  6E44               	movwf	_stradd,c
 10961  010F20  D028               	goto	l1508
 10962  010F22                     
 10963                           ;lcd.c: 231: {
 10964                           ;lcd.c: 232: lcdata = lcdstring[stradd];
 10965  010F22  5044               	movf	_stradd,w,c
 10966  010F24  0D01               	mullw	1
 10967  010F26  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 10968  010F2A  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 10969  010F2E  50F3               	movf	prodl,w,c
 10970  010F30  2627               	addwf	??_lcd_string,f,c
 10971  010F32  50F4               	movf	prodh,w,c
 10972  010F34  2228               	addwfc	??_lcd_string+1,f,c
 10973  010F36  C027  FFF6         	movff	??_lcd_string,tblptrl
 10974  010F3A  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 10975  010F3E                     	if	0	;tblptru may be non-zero
 10976  010F3E                     	endif
 10977  010F3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10978  010F3E  0E00               	movlw	low (__mediumconst shr (0+16))
 10979  010F40  6EF8               	movwf	tblptru,c
 10980  010F42                     	endif
 10981  010F42  0008               	tblrd		*
 10982  010F44  CFF5 F045          	movff	tablat,_lcdata
 10983                           
 10984                           ;lcd.c: 233: lcd_writeC(lcdstring[stradd]);
 10985  010F48  5044               	movf	_stradd,w,c
 10986  010F4A  0D01               	mullw	1
 10987  010F4C  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 10988  010F50  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 10989  010F54  50F3               	movf	prodl,w,c
 10990  010F56  2627               	addwf	??_lcd_string,f,c
 10991  010F58  50F4               	movf	prodh,w,c
 10992  010F5A  2228               	addwfc	??_lcd_string+1,f,c
 10993  010F5C  C027  FFF6         	movff	??_lcd_string,tblptrl
 10994  010F60  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 10995  010F64                     	if	0	;tblptru may be non-zero
 10996  010F64                     	endif
 10997  010F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10998  010F64  0E00               	movlw	low (__mediumconst shr (0+16))
 10999  010F66  6EF8               	movwf	tblptru,c
 11000  010F68                     	endif
 11001  010F68  0008               	tblrd		*
 11002  010F6A  50F5               	movf	tablat,w,c
 11003  010F6C  EC91  F08B         	call	_lcd_writeC
 11004  010F70  2A44               	incf	_stradd,f,c
 11005  010F72                     l1508:
 11006  010F72  5044               	movf	_stradd,w,c
 11007  010F74  0D01               	mullw	1
 11008  010F76  C024  F027         	movff	lcd_string@lcdstring,??_lcd_string
 11009  010F7A  C025  F028         	movff	lcd_string@lcdstring+1,??_lcd_string+1
 11010  010F7E  50F3               	movf	prodl,w,c
 11011  010F80  2627               	addwf	??_lcd_string,f,c
 11012  010F82  50F4               	movf	prodh,w,c
 11013  010F84  2228               	addwfc	??_lcd_string+1,f,c
 11014  010F86  C027  FFF6         	movff	??_lcd_string,tblptrl
 11015  010F8A  C028  FFF7         	movff	??_lcd_string+1,tblptrh
 11016  010F8E                     	if	0	;tblptru may be non-zero
 11017  010F8E                     	endif
 11018  010F8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11019  010F8E  0E00               	movlw	low (__mediumconst shr (0+16))
 11020  010F90  6EF8               	movwf	tblptru,c
 11021  010F92                     	endif
 11022  010F92  0008               	tblrd		*
 11023  010F94  50F5               	movf	tablat,w,c
 11024  010F96  0900               	iorlw	0
 11025  010F98  B4D8               	btfsc	status,2,c
 11026  010F9A  0012               	return	
 11027  010F9C  D7C2               	goto	l1509
 11028  010F9E                     __end_of_lcd_string:
 11029                           	opt stack 0
 11030                           tblptru	equ	0xFF8
 11031                           tblptrh	equ	0xFF7
 11032                           tblptrl	equ	0xFF6
 11033                           tablat	equ	0xFF5
 11034                           prodh	equ	0xFF4
 11035                           prodl	equ	0xFF3
 11036                           postinc0	equ	0xFEE
 11037                           wreg	equ	0xFE8
 11038                           indf2	equ	0xFDF
 11039                           fsr2h	equ	0xFDA
 11040                           fsr2l	equ	0xFD9
 11041                           status	equ	0xFD8
 11042                           
 11043 ;; *************** function _displ_hex *****************
 11044 ;; Defined at:
 11045 ;;		line 194 in file "lcd.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;  hexnum          3   28[COMRAM] unsigned um
 11048 ;; Auto vars:     Size  Location     Type
 11049 ;;  value           8    0[BANK0 ] unsigned char [8]
 11050 ;;  hexnumsave      3    8[BANK0 ] unsigned um
 11051 ;;  i               1   11[BANK0 ] char 
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      void 
 11054 ;; Registers used:
 11055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11061 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11062 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11064 ;;      Totals:         3       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;Total ram usage:       15 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; Hardware stack levels required when called:    7
 11068 ;; This function calls:
 11069 ;;		___ltdiv
 11070 ;;		___ltmod
 11071 ;;		_lcd_writeC
 11072 ;; This function is called by:
 11073 ;;		_displ_sens
 11074 ;;		_displ_time
 11075 ;;		_displ_credit
 11076 ;;		_displ_price
 11077 ;;		_Hopper_coin
 11078 ;;		_Update_Hopcoin
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           	psect	text61
 11083  010E34                     __ptext61:
 11084                           	opt stack 0
 11085  010E34                     _displ_hex:
 11086                           	opt stack 19
 11087                           
 11088                           ;lcd.c: 196: signed char i = 0;
 11089                           
 11090                           ;incstack = 0
 11091  010E34  0E00               	movlw	0
 11092  010E36  0100               	movlb	0	; () banked
 11093  010E38  6FA7               	movwf	displ_hex@i& (0+255),b
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;lcd.c: 197: uint8_t value[8];
 11097                           ;lcd.c: 198: uint24_t hexnumsave = hexnum;
 11098  010E3A  C027  F0A4         	movff	displ_hex@hexnum,displ_hex@hexnumsave
 11099  010E3E  C028  F0A5         	movff	displ_hex@hexnum+1,displ_hex@hexnumsave+1
 11100  010E42  C029  F0A6         	movff	displ_hex@hexnum+2,displ_hex@hexnumsave+2
 11101                           
 11102                           ;lcd.c: 199: while(hexnum > 0)
 11103  010E46  D02F               	goto	l1496
 11104  010E48                     
 11105                           ; BSR set to: 0
 11106                           ;lcd.c: 200: {
 11107                           ;lcd.c: 201: value[i] = hexnum % 10;
 11108                           
 11109                           ; BSR set to: 0
 11110  010E48  51A7               	movf	displ_hex@i& (0+255),w,b
 11111  010E4A  0D01               	mullw	1
 11112  010E4C  0E9C               	movlw	low displ_hex@value
 11113  010E4E  24F3               	addwf	prodl,w,c
 11114  010E50  6ED9               	movwf	fsr2l,c
 11115  010E52  0E00               	movlw	high displ_hex@value
 11116  010E54  20F4               	addwfc	prodh,w,c
 11117  010E56  6EDA               	movwf	fsr2h,c
 11118  010E58  C027  F01D         	movff	displ_hex@hexnum,___ltmod@dividend
 11119  010E5C  C028  F01E         	movff	displ_hex@hexnum+1,___ltmod@dividend+1
 11120  010E60  C029  F01F         	movff	displ_hex@hexnum+2,___ltmod@dividend+2
 11121  010E64  0E0A               	movlw	10
 11122  010E66  6E20               	movwf	___ltmod@divisor,c
 11123  010E68  0E00               	movlw	0
 11124  010E6A  6E21               	movwf	___ltmod@divisor+1,c
 11125  010E6C  0E00               	movlw	0
 11126  010E6E  6E22               	movwf	___ltmod@divisor+2,c
 11127  010E70  ECA8  F08C         	call	___ltmod	;wreg free
 11128  010E74  501D               	movf	?___ltmod,w,c
 11129  010E76  6EDF               	movwf	indf2,c
 11130                           
 11131                           ;lcd.c: 202: hexnum /= 10;
 11132  010E78  C027  F01D         	movff	displ_hex@hexnum,___ltdiv@dividend
 11133  010E7C  C028  F01E         	movff	displ_hex@hexnum+1,___ltdiv@dividend+1
 11134  010E80  C029  F01F         	movff	displ_hex@hexnum+2,___ltdiv@dividend+2
 11135  010E84  0E0A               	movlw	10
 11136  010E86  6E20               	movwf	___ltdiv@divisor,c
 11137  010E88  0E00               	movlw	0
 11138  010E8A  6E21               	movwf	___ltdiv@divisor+1,c
 11139  010E8C  0E00               	movlw	0
 11140  010E8E  6E22               	movwf	___ltdiv@divisor+2,c
 11141  010E90  EC28  F08B         	call	___ltdiv	;wreg free
 11142  010E94  C01D  F027         	movff	?___ltdiv,displ_hex@hexnum
 11143  010E98  C01E  F028         	movff	?___ltdiv+1,displ_hex@hexnum+1
 11144  010E9C  C01F  F029         	movff	?___ltdiv+2,displ_hex@hexnum+2
 11145                           
 11146                           ;lcd.c: 203: i = i + 1;
 11147  010EA0  0100               	movlb	0	; () banked
 11148  010EA2  29A7               	incf	displ_hex@i& (0+255),w,b
 11149  010EA4  6FA7               	movwf	displ_hex@i& (0+255),b
 11150  010EA6                     l1496:
 11151                           
 11152                           ; BSR set to: 0
 11153                           
 11154                           ; BSR set to: 0
 11155  010EA6  5027               	movf	displ_hex@hexnum,w,c
 11156  010EA8  1028               	iorwf	displ_hex@hexnum+1,w,c
 11157  010EAA  1029               	iorwf	displ_hex@hexnum+2,w,c
 11158  010EAC  B4D8               	btfsc	status,2,c
 11159  010EAE  D00E               	goto	l1499
 11160  010EB0  D7CB               	goto	l1497
 11161  010EB2                     
 11162                           ; BSR set to: 0
 11163                           ;lcd.c: 207: {
 11164                           ;lcd.c: 208: i--;
 11165                           
 11166                           ; BSR set to: 0
 11167  010EB2  07A7               	decf	displ_hex@i& (0+255),f,b
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;lcd.c: 209: lcd_writeC(value[i] | 0x30);
 11171  010EB4  51A7               	movf	displ_hex@i& (0+255),w,b
 11172  010EB6  0D01               	mullw	1
 11173  010EB8  0E9C               	movlw	low displ_hex@value
 11174  010EBA  24F3               	addwf	prodl,w,c
 11175  010EBC  6ED9               	movwf	fsr2l,c
 11176  010EBE  0E00               	movlw	high displ_hex@value
 11177  010EC0  20F4               	addwfc	prodh,w,c
 11178  010EC2  6EDA               	movwf	fsr2h,c
 11179  010EC4  50DF               	movf	indf2,w,c
 11180  010EC6  0930               	iorlw	48
 11181  010EC8  EC91  F08B         	call	_lcd_writeC
 11182  010ECC                     l1499:
 11183  010ECC  0100               	movlb	0	; () banked
 11184  010ECE  51A7               	movf	displ_hex@i& (0+255),w,b
 11185  010ED0  0A80               	xorlw	128
 11186  010ED2  0F7F               	addlw	-129
 11187  010ED4  B0D8               	btfsc	status,0,c
 11188  010ED6  D7ED               	goto	l1500
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;lcd.c: 210: }
 11192                           ;lcd.c: 212: if(hexnumsave == 0)
 11193                           
 11194                           ; BSR set to: 0
 11195  010ED8  51A4               	movf	displ_hex@hexnumsave& (0+255),w,b
 11196  010EDA  11A5               	iorwf	(displ_hex@hexnumsave+1)& (0+255),w,b
 11197  010EDC  11A6               	iorwf	(displ_hex@hexnumsave+2)& (0+255),w,b
 11198  010EDE  A4D8               	btfss	status,2,c
 11199  010EE0  0012               	return	
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;lcd.c: 213: {
 11203                           ;lcd.c: 214: lcd_writeC(0x30);
 11204  010EE2  0E30               	movlw	48
 11205  010EE4  EC91  F08B         	call	_lcd_writeC
 11206  010EE8  0012               	return	
 11207  010EEA                     __end_of_displ_hex:
 11208                           	opt stack 0
 11209                           tblptru	equ	0xFF8
 11210                           tblptrh	equ	0xFF7
 11211                           tblptrl	equ	0xFF6
 11212                           tablat	equ	0xFF5
 11213                           prodh	equ	0xFF4
 11214                           prodl	equ	0xFF3
 11215                           postinc0	equ	0xFEE
 11216                           wreg	equ	0xFE8
 11217                           indf2	equ	0xFDF
 11218                           fsr2h	equ	0xFDA
 11219                           fsr2l	equ	0xFD9
 11220                           status	equ	0xFD8
 11221                           
 11222 ;; *************** function _lcd_writeC *****************
 11223 ;; Defined at:
 11224 ;;		line 246 in file "lcd.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  lcdata          1    wreg     unsigned char 
 11227 ;; Auto vars:     Size  Location     Type
 11228 ;;  lcdata          1   24[COMRAM] unsigned char 
 11229 ;; Return value:  Size  Location     Type
 11230 ;;                  1    wreg      void 
 11231 ;; Registers used:
 11232 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11233 ;; Tracked objects:
 11234 ;;		On entry : 0/0
 11235 ;;		On exit  : 0/0
 11236 ;;		Unchanged: 0/0
 11237 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;Total ram usage:        1 bytes
 11243 ;; Hardware stack levels used:    1
 11244 ;; Hardware stack levels required when called:    6
 11245 ;; This function calls:
 11246 ;;		_lcd_dispadd
 11247 ;;		_lcd_write
 11248 ;; This function is called by:
 11249 ;;		_displ_lflags
 11250 ;;		_displ_sflags
 11251 ;;		_displ_time
 11252 ;;		_displ_code
 11253 ;;		_displ_hex
 11254 ;;		_lcd_string
 11255 ;;		_displ_price
 11256 ;;		_lcd_test
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text62
 11261  011722                     __ptext62:
 11262                           	opt stack 0
 11263  011722                     _lcd_writeC:
 11264                           	opt stack 22
 11265                           
 11266                           ;incstack = 0
 11267                           ;lcd_writeC@lcdata stored from wreg
 11268  011722  6E23               	movwf	lcd_writeC@lcdata,c
 11269  011724  8487               	bsf	3975,2,c	;# 
 11270                           
 11271                           ;lcd.c: 251: lcd_write(lcdata);
 11272  011726  5023               	movf	lcd_writeC@lcdata,w,c
 11273  011728  ECE9  F08E         	call	_lcd_write
 11274                           
 11275                           ;lcd.c: 255: switch(bflag)
 11276  01172C  D021               	goto	l1517
 11277  01172E  0E8E               	movlw	low _line2
 11278  011730  6EF6               	movwf	tblptrl,c
 11279  011732                     	if	1	;There is more than 1 active tblptr byte
 11280  011732  0EFC               	movlw	high _line2
 11281  011734  6EF7               	movwf	tblptrh,c
 11282  011736                     	endif
 11283  011736                     	if	1	;There are 3 active tblptr bytes
 11284  011736  0E00               	movlw	low (_line2 shr (0+16))
 11285  011738  6EF8               	movwf	tblptru,c
 11286  01173A                     	endif
 11287  01173A  0008               	tblrd		*
 11288  01173C  50F5               	movf	tablat,w,c
 11289  01173E  ECC3  F08F         	call	_lcd_dispadd
 11290                           
 11291                           ;lcd.c: 258: break;
 11292  011742  D020               	goto	l1519
 11293  011744  0E8D               	movlw	low _line3
 11294  011746  6EF6               	movwf	tblptrl,c
 11295  011748                     	if	1	;There is more than 1 active tblptr byte
 11296  011748  0EFC               	movlw	high _line3
 11297  01174A  6EF7               	movwf	tblptrh,c
 11298  01174C                     	endif
 11299  01174C                     	if	1	;There are 3 active tblptr bytes
 11300  01174C  0E00               	movlw	low (_line3 shr (0+16))
 11301  01174E  6EF8               	movwf	tblptru,c
 11302  011750                     	endif
 11303  011750  0008               	tblrd		*
 11304  011752  50F5               	movf	tablat,w,c
 11305  011754  ECC3  F08F         	call	_lcd_dispadd
 11306                           
 11307                           ;lcd.c: 260: break;
 11308  011758  D015               	goto	l1519
 11309  01175A  0E8C               	movlw	low _line4
 11310  01175C  6EF6               	movwf	tblptrl,c
 11311  01175E                     	if	1	;There is more than 1 active tblptr byte
 11312  01175E  0EFC               	movlw	high _line4
 11313  011760  6EF7               	movwf	tblptrh,c
 11314  011762                     	endif
 11315  011762                     	if	1	;There are 3 active tblptr bytes
 11316  011762  0E00               	movlw	low (_line4 shr (0+16))
 11317  011764  6EF8               	movwf	tblptru,c
 11318  011766                     	endif
 11319  011766  0008               	tblrd		*
 11320  011768  50F5               	movf	tablat,w,c
 11321  01176A  ECC3  F08F         	call	_lcd_dispadd
 11322                           
 11323                           ;lcd.c: 262: }
 11324  01176E  D00A               	goto	l1519
 11325  011770                     l1517:
 11326  011770  5046               	movf	_bflag,w,c
 11327                           
 11328                           ; Switch size 1, requested type "space"
 11329                           ; Number of cases is 3, Range of values is 19 to 83
 11330                           ; switch strategies available:
 11331                           ; Name         Instructions Cycles
 11332                           ; simple_byte           10     6 (average)
 11333                           ;	Chosen strategy is simple_byte
 11334  011772  0A13               	xorlw	19	; case 19
 11335  011774  B4D8               	btfsc	status,2,c
 11336  011776  D7DB               	goto	l1518
 11337  011778  0A34               	xorlw	52	; case 39
 11338  01177A  B4D8               	btfsc	status,2,c
 11339  01177C  D7EE               	goto	l1521
 11340  01177E  0A74               	xorlw	116	; case 83
 11341  011780  B4D8               	btfsc	status,2,c
 11342  011782  D7E0               	goto	l1520
 11343  011784                     l1519:
 11344  011784  9487               	bcf	3975,2,c	;# 
 11345  011786  0012               	return		;funcret
 11346  011788                     __end_of_lcd_writeC:
 11347                           	opt stack 0
 11348                           tblptru	equ	0xFF8
 11349                           tblptrh	equ	0xFF7
 11350                           tblptrl	equ	0xFF6
 11351                           tablat	equ	0xFF5
 11352                           prodh	equ	0xFF4
 11353                           prodl	equ	0xFF3
 11354                           postinc0	equ	0xFEE
 11355                           wreg	equ	0xFE8
 11356                           indf2	equ	0xFDF
 11357                           fsr2h	equ	0xFDA
 11358                           fsr2l	equ	0xFD9
 11359                           status	equ	0xFD8
 11360                           
 11361 ;; *************** function _lcd_dispadd *****************
 11362 ;; Defined at:
 11363 ;;		line 266 in file "lcd.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;  lcdaddress      1    wreg     unsigned char 
 11366 ;; Auto vars:     Size  Location     Type
 11367 ;;  lcdaddress      1   22[COMRAM] unsigned char 
 11368 ;;  lcdatasave      1   23[COMRAM] unsigned char 
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  1    wreg      void 
 11371 ;; Registers used:
 11372 ;;		wreg, status,2, status,0, cstack
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11382 ;;Total ram usage:        2 bytes
 11383 ;; Hardware stack levels used:    1
 11384 ;; Hardware stack levels required when called:    5
 11385 ;; This function calls:
 11386 ;;		_lcd_write
 11387 ;; This function is called by:
 11388 ;;		_displ_sens
 11389 ;;		_displ_lflags
 11390 ;;		_lcd_string
 11391 ;;		_displ_price
 11392 ;;		_lcd_writeC
 11393 ;;		_Hopper_coin
 11394 ;;		_Update_Hopcoin
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text63
 11399  011F86                     __ptext63:
 11400                           	opt stack 0
 11401  011F86                     _lcd_dispadd:
 11402                           	opt stack 22
 11403                           
 11404                           ;incstack = 0
 11405                           ;lcd_dispadd@lcdaddress stored from wreg
 11406  011F86  6E21               	movwf	lcd_dispadd@lcdaddress,c
 11407                           
 11408                           ;lcd.c: 268: uint8_t lcdatasave = lcdata;
 11409  011F88  C045  F022         	movff	_lcdata,lcd_dispadd@lcdatasave
 11410  011F8C  9487               	bcf	3975,2,c	;# 
 11411                           
 11412                           ;lcd.c: 271: lcd_write(lcdaddress | 0x80);
 11413  011F8E  5021               	movf	lcd_dispadd@lcdaddress,w,c
 11414  011F90  0980               	iorlw	128
 11415  011F92  ECE9  F08E         	call	_lcd_write
 11416  011F96  8487               	bsf	3975,2,c	;# 
 11417                           
 11418                           ;lcd.c: 273: lcdata = lcdatasave;
 11419  011F98  C022  F045         	movff	lcd_dispadd@lcdatasave,_lcdata
 11420  011F9C  0012               	return		;funcret
 11421  011F9E                     __end_of_lcd_dispadd:
 11422                           	opt stack 0
 11423                           tblptru	equ	0xFF8
 11424                           tblptrh	equ	0xFF7
 11425                           tblptrl	equ	0xFF6
 11426                           tablat	equ	0xFF5
 11427                           prodh	equ	0xFF4
 11428                           prodl	equ	0xFF3
 11429                           postinc0	equ	0xFEE
 11430                           wreg	equ	0xFE8
 11431                           indf2	equ	0xFDF
 11432                           fsr2h	equ	0xFDA
 11433                           fsr2l	equ	0xFD9
 11434                           status	equ	0xFD8
 11435                           
 11436 ;; *************** function _lcd_write *****************
 11437 ;; Defined at:
 11438 ;;		line 278 in file "lcd.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;  lcdata          1    wreg     unsigned char 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;  lcdata          1   21[COMRAM] unsigned char 
 11443 ;;  savelatd        1   20[COMRAM] unsigned char 
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  1    wreg      void 
 11446 ;; Registers used:
 11447 ;;		wreg, status,2, status,0, cstack
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;Total ram usage:        2 bytes
 11458 ;; Hardware stack levels used:    1
 11459 ;; Hardware stack levels required when called:    4
 11460 ;; This function calls:
 11461 ;;		_lcd_clockE
 11462 ;;		_read_busy
 11463 ;; This function is called by:
 11464 ;;		_lcd_init
 11465 ;;		_displ_note
 11466 ;;		_lcd_string
 11467 ;;		_displ_price
 11468 ;;		_lcd_writeC
 11469 ;;		_lcd_dispadd
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           	psect	text64
 11474  011DD2                     __ptext64:
 11475                           	opt stack 0
 11476  011DD2                     _lcd_write:
 11477                           	opt stack 23
 11478                           
 11479                           ;incstack = 0
 11480                           ;lcd_write@lcdata stored from wreg
 11481  011DD2  6E20               	movwf	lcd_write@lcdata,c
 11482                           
 11483                           ;lcd.c: 280: uint8_t savelatd = LATD;
 11484  011DD4  CF86 F01F          	movff	3974,lcd_write@savelatd	;volatile
 11485                           
 11486                           ;lcd.c: 283: bflag = read_busy();
 11487  011DD8  EC45  F08D         	call	_read_busy	;wreg free
 11488  011DDC  D002               	goto	L16
 11489  011DDE                     
 11490                           ;lcd.c: 285: {
 11491                           ;lcd.c: 286: bflag = read_busy();
 11492  011DDE  EC45  F08D         	call	_read_busy	;wreg free
 11493  011DE2                     L16:
 11494  011DE2  6E46               	movwf	_bflag,c
 11495  011DE4  BE46               	btfsc	_bflag,7,c
 11496  011DE6  D7FB               	goto	l1529
 11497                           
 11498                           ;lcd.c: 287: }
 11499                           ;lcd.c: 288: LATD = (lcdata >> 4) & 0x0F;
 11500  011DE8  3820               	swapf	lcd_write@lcdata,w,c
 11501  011DEA  0B0F               	andlw	15
 11502  011DEC  0B0F               	andlw	15
 11503  011DEE  6E86               	movwf	3974,c	;volatile
 11504                           
 11505                           ;lcd.c: 290: lcd_clockE();
 11506  011DF0  EC4A  F090         	call	_lcd_clockE	;wreg free
 11507                           
 11508                           ;lcd.c: 292: LATD = lcdata & 0x0F;
 11509  011DF4  5020               	movf	lcd_write@lcdata,w,c
 11510  011DF6  0B0F               	andlw	15
 11511  011DF8  6E86               	movwf	3974,c	;volatile
 11512                           
 11513                           ;lcd.c: 293: lcd_clockE();
 11514  011DFA  EC4A  F090         	call	_lcd_clockE	;wreg free
 11515                           
 11516                           ;lcd.c: 294: LATD = savelatd;
 11517  011DFE  C01F  FF86         	movff	lcd_write@savelatd,3974	;volatile
 11518  011E02  0012               	return		;funcret
 11519  011E04                     __end_of_lcd_write:
 11520                           	opt stack 0
 11521                           tblptru	equ	0xFF8
 11522                           tblptrh	equ	0xFF7
 11523                           tblptrl	equ	0xFF6
 11524                           tablat	equ	0xFF5
 11525                           prodh	equ	0xFF4
 11526                           prodl	equ	0xFF3
 11527                           postinc0	equ	0xFEE
 11528                           wreg	equ	0xFE8
 11529                           indf2	equ	0xFDF
 11530                           fsr2h	equ	0xFDA
 11531                           fsr2l	equ	0xFD9
 11532                           status	equ	0xFD8
 11533                           
 11534 ;; *************** function _read_busy *****************
 11535 ;; Defined at:
 11536 ;;		line 309 in file "lcd.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;		None
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;  savelatd        1   19[COMRAM] unsigned char 
 11541 ;;  savelate        1   18[COMRAM] unsigned char 
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  1    wreg      char 
 11544 ;; Registers used:
 11545 ;;		wreg, status,2, status,0, cstack
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11555 ;;Total ram usage:        2 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; Hardware stack levels required when called:    3
 11558 ;; This function calls:
 11559 ;;		_lcd_clockH
 11560 ;;		_lcd_clockL
 11561 ;; This function is called by:
 11562 ;;		_lcd_write
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           	psect	text65
 11567  011A8A                     __ptext65:
 11568                           	opt stack 0
 11569  011A8A                     _read_busy:
 11570                           	opt stack 23
 11571                           
 11572                           ;lcd.c: 311: uint8_t savelate = LATE;
 11573                           
 11574                           ;incstack = 0
 11575  011A8A  CF87 F01D          	movff	3975,read_busy@savelate	;volatile
 11576                           
 11577                           ;lcd.c: 312: uint8_t savelatd = LATD;
 11578  011A8E  CF86 F01E          	movff	3974,read_busy@savelatd	;volatile
 11579  011A92  9487               	bcf	3975,2,c	;# 
 11580  011A94  8287               	bsf	3975,1,c	;# 
 11581                           
 11582                           ;lcd.c: 315: TRISD = (TRISD | 0x0F);
 11583  011A96  508B               	movf	3979,w,c	;volatile
 11584  011A98  090F               	iorlw	15
 11585  011A9A  6E8B               	movwf	3979,c	;volatile
 11586                           
 11587                           ;lcd.c: 316: lcd_clockH();
 11588  011A9C  EC5F  F090         	call	_lcd_clockH	;wreg free
 11589                           
 11590                           ;lcd.c: 317: bflag = (PORTD << 4);
 11591  011AA0  3890               	swapf	3984,w,c	;volatile
 11592  011AA2  0BF0               	andlw	240
 11593  011AA4  6E46               	movwf	_bflag,c
 11594                           
 11595                           ;lcd.c: 318: lcd_clockL();
 11596  011AA6  EC5B  F090         	call	_lcd_clockL	;wreg free
 11597                           
 11598                           ;lcd.c: 319: lcd_clockH();
 11599  011AAA  EC5F  F090         	call	_lcd_clockH	;wreg free
 11600                           
 11601                           ;lcd.c: 320: bflag = bflag | (PORTD & 0x0F);
 11602  011AAE  5090               	movf	3984,w,c	;volatile
 11603  011AB0  0B0F               	andlw	15
 11604  011AB2  1046               	iorwf	_bflag,w,c
 11605  011AB4  6E46               	movwf	_bflag,c
 11606  011AB6  9087               	bcf	3975,0,c	;# 
 11607                           
 11608                           ;lcd.c: 322: TRISD = (TRISD & 0xF0);
 11609  011AB8  508B               	movf	3979,w,c	;volatile
 11610  011ABA  0BF0               	andlw	240
 11611  011ABC  6E8B               	movwf	3979,c	;volatile
 11612  011ABE  9287               	bcf	3975,1,c	;# 
 11613                           
 11614                           ;lcd.c: 324: LATD = savelatd;
 11615  011AC0  C01E  FF86         	movff	read_busy@savelatd,3974	;volatile
 11616                           
 11617                           ;lcd.c: 325: LATE = savelate;
 11618  011AC4  C01D  FF87         	movff	read_busy@savelate,3975	;volatile
 11619                           
 11620                           ;lcd.c: 326: return(bflag);
 11621  011AC8  5046               	movf	_bflag,w,c
 11622  011ACA  0012               	return	
 11623  011ACC                     __end_of_read_busy:
 11624                           	opt stack 0
 11625                           tblptru	equ	0xFF8
 11626                           tblptrh	equ	0xFF7
 11627                           tblptrl	equ	0xFF6
 11628                           tablat	equ	0xFF5
 11629                           prodh	equ	0xFF4
 11630                           prodl	equ	0xFF3
 11631                           postinc0	equ	0xFEE
 11632                           wreg	equ	0xFE8
 11633                           indf2	equ	0xFDF
 11634                           fsr2h	equ	0xFDA
 11635                           fsr2l	equ	0xFD9
 11636                           status	equ	0xFD8
 11637                           
 11638 ;; *************** function _lcd_clockL *****************
 11639 ;; Defined at:
 11640 ;;		line 341 in file "lcd.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;		None
 11643 ;; Auto vars:     Size  Location     Type
 11644 ;;		None
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      void 
 11647 ;; Registers used:
 11648 ;;		None
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;Total ram usage:        0 bytes
 11659 ;; Hardware stack levels used:    1
 11660 ;; Hardware stack levels required when called:    2
 11661 ;; This function calls:
 11662 ;;		Nothing
 11663 ;; This function is called by:
 11664 ;;		_read_busy
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           
 11668                           	psect	text66
 11669  0120B6                     __ptext66:
 11670                           	opt stack 0
 11671  0120B6                     _lcd_clockL:
 11672                           	opt stack 23
 11673                           
 11674                           ;incstack = 0
 11675  0120B6  9087               	bcf	3975,0,c	;# 
 11676                           
 11677                           ;lcd.c: 344: _delay((unsigned long)((1)*(12000000/4000000.0)));
 11678  0120B8  D000               	nop2		;2 cycle nop
 11679  0120BA  F000               	nop	
 11680  0120BC  0012               	return		;funcret
 11681  0120BE                     __end_of_lcd_clockL:
 11682                           	opt stack 0
 11683                           tblptru	equ	0xFF8
 11684                           tblptrh	equ	0xFF7
 11685                           tblptrl	equ	0xFF6
 11686                           tablat	equ	0xFF5
 11687                           prodh	equ	0xFF4
 11688                           prodl	equ	0xFF3
 11689                           postinc0	equ	0xFEE
 11690                           wreg	equ	0xFE8
 11691                           indf2	equ	0xFDF
 11692                           fsr2h	equ	0xFDA
 11693                           fsr2l	equ	0xFD9
 11694                           status	equ	0xFD8
 11695                           
 11696 ;; *************** function _lcd_clockH *****************
 11697 ;; Defined at:
 11698 ;;		line 333 in file "lcd.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;		None
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;		None
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      void 
 11705 ;; Registers used:
 11706 ;;		None
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11716 ;;Total ram usage:        0 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    2
 11719 ;; This function calls:
 11720 ;;		Nothing
 11721 ;; This function is called by:
 11722 ;;		_read_busy
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           	psect	text67
 11727  0120BE                     __ptext67:
 11728                           	opt stack 0
 11729  0120BE                     _lcd_clockH:
 11730                           	opt stack 23
 11731                           
 11732                           ;incstack = 0
 11733  0120BE  8087               	bsf	3975,0,c	;# 
 11734                           
 11735                           ;lcd.c: 336: _delay((unsigned long)((1)*(12000000/4000000.0)));
 11736  0120C0  D000               	nop2		;2 cycle nop
 11737  0120C2  F000               	nop	
 11738  0120C4  0012               	return		;funcret
 11739  0120C6                     __end_of_lcd_clockH:
 11740                           	opt stack 0
 11741                           tblptru	equ	0xFF8
 11742                           tblptrh	equ	0xFF7
 11743                           tblptrl	equ	0xFF6
 11744                           tablat	equ	0xFF5
 11745                           prodh	equ	0xFF4
 11746                           prodl	equ	0xFF3
 11747                           postinc0	equ	0xFEE
 11748                           wreg	equ	0xFE8
 11749                           indf2	equ	0xFDF
 11750                           fsr2h	equ	0xFDA
 11751                           fsr2l	equ	0xFD9
 11752                           status	equ	0xFD8
 11753                           
 11754 ;; *************** function _lcd_clockE *****************
 11755 ;; Defined at:
 11756 ;;		line 349 in file "lcd.c"
 11757 ;; Parameters:    Size  Location     Type
 11758 ;;		None
 11759 ;; Auto vars:     Size  Location     Type
 11760 ;;		None
 11761 ;; Return value:  Size  Location     Type
 11762 ;;                  1    wreg      void 
 11763 ;; Registers used:
 11764 ;;		None
 11765 ;; Tracked objects:
 11766 ;;		On entry : 0/0
 11767 ;;		On exit  : 0/0
 11768 ;;		Unchanged: 0/0
 11769 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11774 ;;Total ram usage:        0 bytes
 11775 ;; Hardware stack levels used:    1
 11776 ;; Hardware stack levels required when called:    2
 11777 ;; This function calls:
 11778 ;;		Nothing
 11779 ;; This function is called by:
 11780 ;;		_lcd_init
 11781 ;;		_lcd_write
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text68
 11786  012094                     __ptext68:
 11787                           	opt stack 0
 11788  012094                     _lcd_clockE:
 11789                           	opt stack 24
 11790                           
 11791                           ;incstack = 0
 11792  012094  8087               	bsf	3975,0,c	;# 
 11793                           
 11794                           ;lcd.c: 352: _delay((unsigned long)((1)*(12000000/4000000.0)));
 11795  012096  D000               	nop2		;2 cycle nop
 11796  012098  F000               	nop	
 11797  01209A  9087               	bcf	3975,0,c	;# 
 11798                           
 11799                           ;lcd.c: 354: _delay((unsigned long)((1)*(12000000/4000000.0)));
 11800  01209C  D000               	nop2		;2 cycle nop
 11801  01209E  F000               	nop	
 11802  0120A0  0012               	return		;funcret
 11803  0120A2                     __end_of_lcd_clockE:
 11804                           	opt stack 0
 11805                           tblptru	equ	0xFF8
 11806                           tblptrh	equ	0xFF7
 11807                           tblptrl	equ	0xFF6
 11808                           tablat	equ	0xFF5
 11809                           prodh	equ	0xFF4
 11810                           prodl	equ	0xFF3
 11811                           postinc0	equ	0xFEE
 11812                           wreg	equ	0xFE8
 11813                           indf2	equ	0xFDF
 11814                           fsr2h	equ	0xFDA
 11815                           fsr2l	equ	0xFD9
 11816                           status	equ	0xFD8
 11817                           
 11818 ;; *************** function ___ltmod *****************
 11819 ;; Defined at:
 11820 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltmod.c"
 11821 ;; Parameters:    Size  Location     Type
 11822 ;;  dividend        3   18[COMRAM] unsigned um
 11823 ;;  divisor         3   21[COMRAM] unsigned um
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;  counter         1   24[COMRAM] unsigned char 
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  3   18[COMRAM] unsigned um
 11828 ;; Registers used:
 11829 ;;		wreg, status,2, status,0
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11835 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11838 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11839 ;;Total ram usage:        7 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:    2
 11842 ;; This function calls:
 11843 ;;		Nothing
 11844 ;; This function is called by:
 11845 ;;		_displ_hex
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           	psect	text69
 11850  011950                     __ptext69:
 11851                           	opt stack 0
 11852  011950                     ___ltmod:
 11853                           	opt stack 23
 11854                           
 11855                           ;incstack = 0
 11856  011950  5020               	movf	___ltmod@divisor,w,c
 11857  011952  1021               	iorwf	___ltmod@divisor+1,w,c
 11858  011954  1022               	iorwf	___ltmod@divisor+2,w,c
 11859  011956  B4D8               	btfsc	status,2,c
 11860  011958  D01E               	goto	l4056
 11861  01195A  0E01               	movlw	1
 11862  01195C  6E23               	movwf	___ltmod@counter,c
 11863  01195E  D005               	goto	l4051
 11864  011960  90D8               	bcf	status,0,c
 11865  011962  3620               	rlcf	___ltmod@divisor,f,c
 11866  011964  3621               	rlcf	___ltmod@divisor+1,f,c
 11867  011966  3622               	rlcf	___ltmod@divisor+2,f,c
 11868  011968  2A23               	incf	___ltmod@counter,f,c
 11869  01196A                     l4051:
 11870  01196A  AE22               	btfss	___ltmod@divisor+2,7,c
 11871  01196C  D7F9               	goto	l4052
 11872  01196E                     u2640:
 11873  01196E  5020               	movf	___ltmod@divisor,w,c
 11874  011970  5C1D               	subwf	___ltmod@dividend,w,c
 11875  011972  5021               	movf	___ltmod@divisor+1,w,c
 11876  011974  581E               	subwfb	___ltmod@dividend+1,w,c
 11877  011976  5022               	movf	___ltmod@divisor+2,w,c
 11878  011978  581F               	subwfb	___ltmod@dividend+2,w,c
 11879  01197A  A0D8               	btfss	status,0,c
 11880  01197C  D006               	goto	l4055
 11881  01197E  5020               	movf	___ltmod@divisor,w,c
 11882  011980  5E1D               	subwf	___ltmod@dividend,f,c
 11883  011982  5021               	movf	___ltmod@divisor+1,w,c
 11884  011984  5A1E               	subwfb	___ltmod@dividend+1,f,c
 11885  011986  5022               	movf	___ltmod@divisor+2,w,c
 11886  011988  5A1F               	subwfb	___ltmod@dividend+2,f,c
 11887  01198A                     l4055:
 11888  01198A  90D8               	bcf	status,0,c
 11889  01198C  3222               	rrcf	___ltmod@divisor+2,f,c
 11890  01198E  3221               	rrcf	___ltmod@divisor+1,f,c
 11891  011990  3220               	rrcf	___ltmod@divisor,f,c
 11892  011992  2E23               	decfsz	___ltmod@counter,f,c
 11893  011994  D7EC               	goto	u2640
 11894  011996                     l4056:
 11895  011996  C01D  F01D         	movff	___ltmod@dividend,?___ltmod
 11896  01199A  C01E  F01E         	movff	___ltmod@dividend+1,?___ltmod+1
 11897  01199E  C01F  F01F         	movff	___ltmod@dividend+2,?___ltmod+2
 11898  0119A2  0012               	return		;funcret
 11899  0119A4                     __end_of___ltmod:
 11900                           	opt stack 0
 11901                           tblptru	equ	0xFF8
 11902                           tblptrh	equ	0xFF7
 11903                           tblptrl	equ	0xFF6
 11904                           tablat	equ	0xFF5
 11905                           prodh	equ	0xFF4
 11906                           prodl	equ	0xFF3
 11907                           postinc0	equ	0xFEE
 11908                           wreg	equ	0xFE8
 11909                           indf2	equ	0xFDF
 11910                           fsr2h	equ	0xFDA
 11911                           fsr2l	equ	0xFD9
 11912                           status	equ	0xFD8
 11913                           
 11914 ;; *************** function ___ltdiv *****************
 11915 ;; Defined at:
 11916 ;;		line 8 in file "/opt/microchip/xc8/v1.44/sources/common/ltdiv.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;  dividend        3   18[COMRAM] unsigned um
 11919 ;;  divisor         3   21[COMRAM] unsigned um
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;  quotient        3   24[COMRAM] unsigned um
 11922 ;;  counter         1   27[COMRAM] unsigned char 
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  3   18[COMRAM] unsigned um
 11925 ;; Registers used:
 11926 ;;		wreg, status,2, status,0
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 11932 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11933 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;Total ram usage:       10 bytes
 11937 ;; Hardware stack levels used:    1
 11938 ;; Hardware stack levels required when called:    2
 11939 ;; This function calls:
 11940 ;;		Nothing
 11941 ;; This function is called by:
 11942 ;;		_displ_hex
 11943 ;; This function uses a non-reentrant model
 11944 ;;
 11945                           
 11946                           	psect	text70
 11947  011650                     __ptext70:
 11948                           	opt stack 0
 11949  011650                     ___ltdiv:
 11950                           	opt stack 23
 11951                           
 11952                           ;incstack = 0
 11953  011650  0E00               	movlw	0
 11954  011652  6E23               	movwf	___ltdiv@quotient,c
 11955  011654  0E00               	movlw	0
 11956  011656  6E24               	movwf	___ltdiv@quotient+1,c
 11957  011658  0E00               	movlw	0
 11958  01165A  6E25               	movwf	___ltdiv@quotient+2,c
 11959  01165C  5020               	movf	___ltdiv@divisor,w,c
 11960  01165E  1021               	iorwf	___ltdiv@divisor+1,w,c
 11961  011660  1022               	iorwf	___ltdiv@divisor+2,w,c
 11962  011662  B4D8               	btfsc	status,2,c
 11963  011664  D023               	goto	l4046
 11964  011666  0E01               	movlw	1
 11965  011668  6E26               	movwf	___ltdiv@counter,c
 11966  01166A  D005               	goto	l4041
 11967  01166C  90D8               	bcf	status,0,c
 11968  01166E  3620               	rlcf	___ltdiv@divisor,f,c
 11969  011670  3621               	rlcf	___ltdiv@divisor+1,f,c
 11970  011672  3622               	rlcf	___ltdiv@divisor+2,f,c
 11971  011674  2A26               	incf	___ltdiv@counter,f,c
 11972  011676                     l4041:
 11973  011676  AE22               	btfss	___ltdiv@divisor+2,7,c
 11974  011678  D7F9               	goto	l4042
 11975  01167A                     u2610:
 11976  01167A  90D8               	bcf	status,0,c
 11977  01167C  3623               	rlcf	___ltdiv@quotient,f,c
 11978  01167E  3624               	rlcf	___ltdiv@quotient+1,f,c
 11979  011680  3625               	rlcf	___ltdiv@quotient+2,f,c
 11980  011682  5020               	movf	___ltdiv@divisor,w,c
 11981  011684  5C1D               	subwf	___ltdiv@dividend,w,c
 11982  011686  5021               	movf	___ltdiv@divisor+1,w,c
 11983  011688  581E               	subwfb	___ltdiv@dividend+1,w,c
 11984  01168A  5022               	movf	___ltdiv@divisor+2,w,c
 11985  01168C  581F               	subwfb	___ltdiv@dividend+2,w,c
 11986  01168E  A0D8               	btfss	status,0,c
 11987  011690  D007               	goto	l4045
 11988  011692  5020               	movf	___ltdiv@divisor,w,c
 11989  011694  5E1D               	subwf	___ltdiv@dividend,f,c
 11990  011696  5021               	movf	___ltdiv@divisor+1,w,c
 11991  011698  5A1E               	subwfb	___ltdiv@dividend+1,f,c
 11992  01169A  5022               	movf	___ltdiv@divisor+2,w,c
 11993  01169C  5A1F               	subwfb	___ltdiv@dividend+2,f,c
 11994  01169E  8023               	bsf	___ltdiv@quotient,0,c
 11995  0116A0                     l4045:
 11996  0116A0  90D8               	bcf	status,0,c
 11997  0116A2  3222               	rrcf	___ltdiv@divisor+2,f,c
 11998  0116A4  3221               	rrcf	___ltdiv@divisor+1,f,c
 11999  0116A6  3220               	rrcf	___ltdiv@divisor,f,c
 12000  0116A8  2E26               	decfsz	___ltdiv@counter,f,c
 12001  0116AA  D7E7               	goto	u2610
 12002  0116AC                     l4046:
 12003  0116AC  C023  F01D         	movff	___ltdiv@quotient,?___ltdiv
 12004  0116B0  C024  F01E         	movff	___ltdiv@quotient+1,?___ltdiv+1
 12005  0116B4  C025  F01F         	movff	___ltdiv@quotient+2,?___ltdiv+2
 12006  0116B8  0012               	return		;funcret
 12007  0116BA                     __end_of___ltdiv:
 12008                           	opt stack 0
 12009                           tblptru	equ	0xFF8
 12010                           tblptrh	equ	0xFF7
 12011                           tblptrl	equ	0xFF6
 12012                           tablat	equ	0xFF5
 12013                           prodh	equ	0xFF4
 12014                           prodl	equ	0xFF3
 12015                           postinc0	equ	0xFEE
 12016                           wreg	equ	0xFE8
 12017                           indf2	equ	0xFDF
 12018                           fsr2h	equ	0xFDA
 12019                           fsr2l	equ	0xFD9
 12020                           status	equ	0xFD8
 12021                           
 12022 ;; *************** function _credit_check *****************
 12023 ;; Defined at:
 12024 ;;		line 124 in file "vend.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      unsigned char 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;Total ram usage:        0 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    3
 12045 ;; This function calls:
 12046 ;;		_DATAEE_ReadByte
 12047 ;; This function is called by:
 12048 ;;		_displ_credit
 12049 ;;		_vend_init
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text71
 12054  011ED2                     __ptext71:
 12055                           	opt stack 0
 12056  011ED2                     _credit_check:
 12057                           	opt stack 26
 12058                           
 12059                           ;vend.c: 126: cash = DATAEE_ReadByte(credmem);
 12060                           
 12061                           ;incstack = 0
 12062  011ED2  0E61               	movlw	low _credmem
 12063  011ED4  6EF6               	movwf	tblptrl,c
 12064  011ED6                     	if	1	;There is more than 1 active tblptr byte
 12065  011ED6  0EFC               	movlw	high _credmem
 12066  011ED8  6EF7               	movwf	tblptrh,c
 12067  011EDA                     	endif
 12068  011EDA                     	if	1	;There are 3 active tblptr bytes
 12069  011EDA  0E00               	movlw	low (_credmem shr (0+16))
 12070  011EDC  6EF8               	movwf	tblptru,c
 12071  011EDE                     	endif
 12072  011EDE  0009               	tblrd		*+
 12073  011EE0  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 12074  011EE4  000A               	tblrd		*-
 12075  011EE6  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 12076  011EEA  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
 12077  011EEE  6E3A               	movwf	_cash,c	;volatile
 12078                           
 12079                           ;vend.c: 127: return(cash);
 12080  011EF0  503A               	movf	_cash,w,c	;volatile
 12081  011EF2  0012               	return	
 12082  011EF4                     __end_of_credit_check:
 12083                           	opt stack 0
 12084                           tblptru	equ	0xFF8
 12085                           tblptrh	equ	0xFF7
 12086                           tblptrl	equ	0xFF6
 12087                           tablat	equ	0xFF5
 12088                           prodh	equ	0xFF4
 12089                           prodl	equ	0xFF3
 12090                           postinc0	equ	0xFEE
 12091                           wreg	equ	0xFE8
 12092                           indf2	equ	0xFDF
 12093                           fsr2h	equ	0xFDA
 12094                           fsr2l	equ	0xFD9
 12095                           status	equ	0xFD8
 12096                           
 12097 ;; *************** function _credit_subtract *****************
 12098 ;; Defined at:
 12099 ;;		line 111 in file "vend.c"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;  credit          1    wreg     unsigned char 
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;  credit          1   22[COMRAM] unsigned char 
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  1    wreg      void 
 12106 ;; Registers used:
 12107 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;Total ram usage:        1 bytes
 12118 ;; Hardware stack levels used:    1
 12119 ;; Hardware stack levels required when called:    3
 12120 ;; This function calls:
 12121 ;;		_DATAEE_ReadByte
 12122 ;;		_DATAEE_WriteByte
 12123 ;; This function is called by:
 12124 ;;		_main
 12125 ;; This function uses a non-reentrant model
 12126 ;;
 12127                           
 12128                           	psect	text72
 12129  0118FA                     __ptext72:
 12130                           	opt stack 0
 12131  0118FA                     _credit_subtract:
 12132                           	opt stack 27
 12133                           
 12134                           ;incstack = 0
 12135                           ;credit_subtract@credit stored from wreg
 12136  0118FA  6E21               	movwf	credit_subtract@credit,c
 12137                           
 12138                           ;vend.c: 113: cash = DATAEE_ReadByte(credmem);
 12139  0118FC  0E61               	movlw	low _credmem
 12140  0118FE  6EF6               	movwf	tblptrl,c
 12141  011900                     	if	1	;There is more than 1 active tblptr byte
 12142  011900  0EFC               	movlw	high _credmem
 12143  011902  6EF7               	movwf	tblptrh,c
 12144  011904                     	endif
 12145  011904                     	if	1	;There are 3 active tblptr bytes
 12146  011904  0E00               	movlw	low (_credmem shr (0+16))
 12147  011906  6EF8               	movwf	tblptru,c
 12148  011908                     	endif
 12149  011908  0009               	tblrd		*+
 12150  01190A  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 12151  01190E  000A               	tblrd		*-
 12152  011910  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 12153  011914  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
 12154  011918  6E3A               	movwf	_cash,c	;volatile
 12155                           
 12156                           ;vend.c: 114: cash = (cash - credit) & 0xFF;
 12157  01191A  5021               	movf	credit_subtract@credit,w,c
 12158  01191C  0800               	sublw	0
 12159  01191E  243A               	addwf	_cash,w,c	;volatile
 12160  011920  6E3A               	movwf	_cash,c	;volatile
 12161                           
 12162                           ;vend.c: 115: DATAEE_WriteByte(credmem, cash);
 12163  011922  0E61               	movlw	low _credmem
 12164  011924  6EF6               	movwf	tblptrl,c
 12165  011926                     	if	1	;There is more than 1 active tblptr byte
 12166  011926  0EFC               	movlw	high _credmem
 12167  011928  6EF7               	movwf	tblptrh,c
 12168  01192A                     	endif
 12169  01192A                     	if	1	;There are 3 active tblptr bytes
 12170  01192A  0E00               	movlw	low (_credmem shr (0+16))
 12171  01192C  6EF8               	movwf	tblptru,c
 12172  01192E                     	endif
 12173  01192E  0009               	tblrd		*+
 12174  011930  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12175  011934  000A               	tblrd		*-
 12176  011936  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12177  01193A  C03A  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
 12178  01193E  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
 12179                           
 12180                           ;vend.c: 116: if(cash == 0)
 12181  011942  503A               	movf	_cash,w,c	;volatile
 12182  011944  A4D8               	btfss	status,2,c
 12183  011946  0012               	return	
 12184                           
 12185                           ;vend.c: 117: {
 12186                           ;vend.c: 118: venflags.iscredit = 0;
 12187  011948  902C               	bcf	_venflags,0,c
 12188                           
 12189                           ;vend.c: 119: venflags.inscoin = 1;
 12190  01194A  842C               	bsf	_venflags,2,c
 12191                           
 12192                           ;vend.c: 120: venflags.credisplay = 0;
 12193  01194C  982C               	bcf	_venflags,4,c
 12194  01194E  0012               	return	
 12195  011950                     __end_of_credit_subtract:
 12196                           	opt stack 0
 12197                           tblptru	equ	0xFF8
 12198                           tblptrh	equ	0xFF7
 12199                           tblptrl	equ	0xFF6
 12200                           tablat	equ	0xFF5
 12201                           prodh	equ	0xFF4
 12202                           prodl	equ	0xFF3
 12203                           postinc0	equ	0xFEE
 12204                           wreg	equ	0xFE8
 12205                           indf2	equ	0xFDF
 12206                           fsr2h	equ	0xFDA
 12207                           fsr2l	equ	0xFD9
 12208                           status	equ	0xFD8
 12209                           
 12210 ;; *************** function _credit_add *****************
 12211 ;; Defined at:
 12212 ;;		line 96 in file "vend.c"
 12213 ;; Parameters:    Size  Location     Type
 12214 ;;  credit          1    wreg     unsigned char 
 12215 ;; Auto vars:     Size  Location     Type
 12216 ;;  credit          1   29[COMRAM] unsigned char 
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  1    wreg      void 
 12219 ;; Registers used:
 12220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;Total ram usage:        1 bytes
 12231 ;; Hardware stack levels used:    1
 12232 ;; Hardware stack levels required when called:    5
 12233 ;; This function calls:
 12234 ;;		_DATAEE_ReadByte
 12235 ;;		_DATAEE_WriteByte
 12236 ;;		_Update_cashaudit
 12237 ;; This function is called by:
 12238 ;;		_main
 12239 ;; This function uses a non-reentrant model
 12240 ;;
 12241                           
 12242                           	psect	text73
 12243  01184A                     __ptext73:
 12244                           	opt stack 0
 12245  01184A                     _credit_add:
 12246                           	opt stack 25
 12247                           
 12248                           ;incstack = 0
 12249                           ;credit_add@credit stored from wreg
 12250  01184A  6E28               	movwf	credit_add@credit,c
 12251                           
 12252                           ;vend.c: 98: cash = DATAEE_ReadByte(credmem);
 12253  01184C  0E61               	movlw	low _credmem
 12254  01184E  6EF6               	movwf	tblptrl,c
 12255  011850                     	if	1	;There is more than 1 active tblptr byte
 12256  011850  0EFC               	movlw	high _credmem
 12257  011852  6EF7               	movwf	tblptrh,c
 12258  011854                     	endif
 12259  011854                     	if	1	;There are 3 active tblptr bytes
 12260  011854  0E00               	movlw	low (_credmem shr (0+16))
 12261  011856  6EF8               	movwf	tblptru,c
 12262  011858                     	endif
 12263  011858  0009               	tblrd		*+
 12264  01185A  CFF5 F01D          	movff	tablat,DATAEE_ReadByte@bAdd
 12265  01185E  000A               	tblrd		*-
 12266  011860  CFF5 F01E          	movff	tablat,DATAEE_ReadByte@bAdd+1
 12267  011864  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
 12268  011868  6E3A               	movwf	_cash,c	;volatile
 12269                           
 12270                           ;vend.c: 99: cash = cash + credit;
 12271  01186A  503A               	movf	_cash,w,c	;volatile
 12272  01186C  2428               	addwf	credit_add@credit,w,c
 12273  01186E  6E3A               	movwf	_cash,c	;volatile
 12274                           
 12275                           ;vend.c: 100: DATAEE_WriteByte(credmem, cash);
 12276  011870  0E61               	movlw	low _credmem
 12277  011872  6EF6               	movwf	tblptrl,c
 12278  011874                     	if	1	;There is more than 1 active tblptr byte
 12279  011874  0EFC               	movlw	high _credmem
 12280  011876  6EF7               	movwf	tblptrh,c
 12281  011878                     	endif
 12282  011878                     	if	1	;There are 3 active tblptr bytes
 12283  011878  0E00               	movlw	low (_credmem shr (0+16))
 12284  01187A  6EF8               	movwf	tblptru,c
 12285  01187C                     	endif
 12286  01187C  0009               	tblrd		*+
 12287  01187E  CFF5 F01D          	movff	tablat,DATAEE_WriteByte@bAdd
 12288  011882  000A               	tblrd		*-
 12289  011884  CFF5 F01E          	movff	tablat,DATAEE_WriteByte@bAdd+1
 12290  011888  C03A  F01F         	movff	_cash,DATAEE_WriteByte@bData	;volatile
 12291  01188C  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
 12292                           
 12293                           ;vend.c: 101: if(cash != 0)
 12294  011890  503A               	movf	_cash,w,c	;volatile
 12295  011892  B4D8               	btfsc	status,2,c
 12296  011894  D003               	goto	l1998
 12297                           
 12298                           ;vend.c: 102: {
 12299                           ;vend.c: 103: venflags.iscredit = 1;
 12300  011896  802C               	bsf	_venflags,0,c
 12301                           
 12302                           ;vend.c: 104: venflags.inscoin = 0;
 12303  011898  942C               	bcf	_venflags,2,c
 12304                           
 12305                           ;vend.c: 105: venflags.credisplay = 1;
 12306  01189A  882C               	bsf	_venflags,4,c
 12307  01189C                     l1998:
 12308                           
 12309                           ;vend.c: 107: }
 12310                           ;vend.c: 108: Update_cashaudit(credit);
 12311  01189C  5028               	movf	credit_add@credit,w,c
 12312  01189E  EC44  F085         	call	_Update_cashaudit
 12313  0118A2  0012               	return		;funcret
 12314  0118A4                     __end_of_credit_add:
 12315                           	opt stack 0
 12316                           tblptru	equ	0xFF8
 12317                           tblptrh	equ	0xFF7
 12318                           tblptrl	equ	0xFF6
 12319                           tablat	equ	0xFF5
 12320                           prodh	equ	0xFF4
 12321                           prodl	equ	0xFF3
 12322                           postinc0	equ	0xFEE
 12323                           wreg	equ	0xFE8
 12324                           indf2	equ	0xFDF
 12325                           fsr2h	equ	0xFDA
 12326                           fsr2l	equ	0xFD9
 12327                           status	equ	0xFD8
 12328                           
 12329 ;; *************** function _Update_cashaudit *****************
 12330 ;; Defined at:
 12331 ;;		line 81 in file "vend.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;  addcash         1    wreg     unsigned char 
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;  addcash         1   28[COMRAM] unsigned char 
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/0
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;Total ram usage:        1 bytes
 12350 ;; Hardware stack levels used:    1
 12351 ;; Hardware stack levels required when called:    4
 12352 ;; This function calls:
 12353 ;;		_Read_NVstore
 12354 ;;		_Write_NVstore
 12355 ;; This function is called by:
 12356 ;;		_credit_add
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           	psect	text74
 12361  010A88                     __ptext74:
 12362                           	opt stack 0
 12363  010A88                     _Update_cashaudit:
 12364                           	opt stack 25
 12365                           
 12366                           ;incstack = 0
 12367                           ;Update_cashaudit@addcash stored from wreg
 12368  010A88  6E27               	movwf	Update_cashaudit@addcash,c
 12369                           
 12370                           ;vend.c: 83: Read_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 12371  010A8A  0E5F               	movlw	low _cashinv
 12372  010A8C  6EF6               	movwf	tblptrl,c
 12373  010A8E                     	if	1	;There is more than 1 active tblptr byte
 12374  010A8E  0EFC               	movlw	high _cashinv
 12375  010A90  6EF7               	movwf	tblptrh,c
 12376  010A92                     	endif
 12377  010A92                     	if	1	;There are 3 active tblptr bytes
 12378  010A92  0E00               	movlw	low (_cashinv shr (0+16))
 12379  010A94  6EF8               	movwf	tblptru,c
 12380  010A96                     	endif
 12381  010A96  0009               	tblrd		*+
 12382  010A98  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 12383  010A9C  000A               	tblrd		*-
 12384  010A9E  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 12385  010AA2  0E4A               	movlw	low _pvcash
 12386  010AA4  6E21               	movwf	Read_NVstore@storemem,c
 12387  010AA6  0E00               	movlw	high _pvcash
 12388  010AA8  6E22               	movwf	Read_NVstore@storemem+1,c
 12389  010AAA  0E02               	movlw	2
 12390  010AAC  6E23               	movwf	Read_NVstore@storesize,c
 12391  010AAE  EC9D  F08E         	call	_Read_NVstore	;wreg free
 12392                           
 12393                           ;vend.c: 84: Read_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 12394  010AB2  0E5D               	movlw	low _cashint
 12395  010AB4  6EF6               	movwf	tblptrl,c
 12396  010AB6                     	if	1	;There is more than 1 active tblptr byte
 12397  010AB6  0EFC               	movlw	high _cashint
 12398  010AB8  6EF7               	movwf	tblptrh,c
 12399  010ABA                     	endif
 12400  010ABA                     	if	1	;There are 3 active tblptr bytes
 12401  010ABA  0E00               	movlw	low (_cashint shr (0+16))
 12402  010ABC  6EF8               	movwf	tblptru,c
 12403  010ABE                     	endif
 12404  010ABE  0009               	tblrd		*+
 12405  010AC0  CFF5 F01F          	movff	tablat,Read_NVstore@storeadd
 12406  010AC4  000A               	tblrd		*-
 12407  010AC6  CFF5 F020          	movff	tablat,Read_NVstore@storeadd+1
 12408  010ACA  0E47               	movlw	low _pnvcash
 12409  010ACC  6E21               	movwf	Read_NVstore@storemem,c
 12410  010ACE  0E00               	movlw	high _pnvcash
 12411  010AD0  6E22               	movwf	Read_NVstore@storemem+1,c
 12412  010AD2  0E03               	movlw	3
 12413  010AD4  6E23               	movwf	Read_NVstore@storesize,c
 12414  010AD6  EC9D  F08E         	call	_Read_NVstore	;wreg free
 12415                           
 12416                           ;vend.c: 86: pvcash = pvcash + (uint16_t)addcash;
 12417  010ADA  5027               	movf	Update_cashaudit@addcash,w,c
 12418  010ADC  244A               	addwf	_pvcash,w,c	;volatile
 12419  010ADE  6E4A               	movwf	_pvcash,c	;volatile
 12420  010AE0  0E00               	movlw	0
 12421  010AE2  204B               	addwfc	_pvcash+1,w,c	;volatile
 12422  010AE4  6E4B               	movwf	_pvcash+1,c	;volatile
 12423                           
 12424                           ;vend.c: 88: pnvcash = pnvcash + (uint24_t)addcash;
 12425  010AE6  5027               	movf	Update_cashaudit@addcash,w,c
 12426  010AE8  2447               	addwf	_pnvcash,w,c	;volatile
 12427  010AEA  6E47               	movwf	_pnvcash,c	;volatile
 12428  010AEC  0E00               	movlw	0
 12429  010AEE  2048               	addwfc	_pnvcash+1,w,c	;volatile
 12430  010AF0  6E48               	movwf	_pnvcash+1,c	;volatile
 12431  010AF2  0E00               	movlw	0
 12432  010AF4  2049               	addwfc	_pnvcash+2,w,c	;volatile
 12433  010AF6  6E49               	movwf	_pnvcash+2,c	;volatile
 12434                           
 12435                           ;vend.c: 90: Write_NVstore(cashinv, ((uint8_t*) &pvcash), 0x02);
 12436  010AF8  0E5F               	movlw	low _cashinv
 12437  010AFA  6EF6               	movwf	tblptrl,c
 12438  010AFC                     	if	1	;There is more than 1 active tblptr byte
 12439  010AFC  0EFC               	movlw	high _cashinv
 12440  010AFE  6EF7               	movwf	tblptrh,c
 12441  010B00                     	endif
 12442  010B00                     	if	1	;There are 3 active tblptr bytes
 12443  010B00  0E00               	movlw	low (_cashinv shr (0+16))
 12444  010B02  6EF8               	movwf	tblptru,c
 12445  010B04                     	endif
 12446  010B04  0009               	tblrd		*+
 12447  010B06  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 12448  010B0A  000A               	tblrd		*-
 12449  010B0C  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 12450  010B10  0E4A               	movlw	low _pvcash
 12451  010B12  6E23               	movwf	Write_NVstore@storemem,c
 12452  010B14  0E00               	movlw	high _pvcash
 12453  010B16  6E24               	movwf	Write_NVstore@storemem+1,c
 12454  010B18  0E02               	movlw	2
 12455  010B1A  6E25               	movwf	Write_NVstore@storesize,c
 12456  010B1C  EC31  F08F         	call	_Write_NVstore	;wreg free
 12457                           
 12458                           ;vend.c: 91: Write_NVstore(cashint, ((uint8_t*) &pnvcash), 0x03);
 12459  010B20  0E5D               	movlw	low _cashint
 12460  010B22  6EF6               	movwf	tblptrl,c
 12461  010B24                     	if	1	;There is more than 1 active tblptr byte
 12462  010B24  0EFC               	movlw	high _cashint
 12463  010B26  6EF7               	movwf	tblptrh,c
 12464  010B28                     	endif
 12465  010B28                     	if	1	;There are 3 active tblptr bytes
 12466  010B28  0E00               	movlw	low (_cashint shr (0+16))
 12467  010B2A  6EF8               	movwf	tblptru,c
 12468  010B2C                     	endif
 12469  010B2C  0009               	tblrd		*+
 12470  010B2E  CFF5 F021          	movff	tablat,Write_NVstore@storeadd
 12471  010B32  000A               	tblrd		*-
 12472  010B34  CFF5 F022          	movff	tablat,Write_NVstore@storeadd+1
 12473  010B38  0E47               	movlw	low _pnvcash
 12474  010B3A  6E23               	movwf	Write_NVstore@storemem,c
 12475  010B3C  0E00               	movlw	high _pnvcash
 12476  010B3E  6E24               	movwf	Write_NVstore@storemem+1,c
 12477  010B40  0E03               	movlw	3
 12478  010B42  6E25               	movwf	Write_NVstore@storesize,c
 12479  010B44  EC31  F08F         	call	_Write_NVstore	;wreg free
 12480  010B48  F000               	nop		;# 
 12481  010B4A  0012               	return		;funcret
 12482  010B4C                     __end_of_Update_cashaudit:
 12483                           	opt stack 0
 12484                           tblptru	equ	0xFF8
 12485                           tblptrh	equ	0xFF7
 12486                           tblptrl	equ	0xFF6
 12487                           tablat	equ	0xFF5
 12488                           prodh	equ	0xFF4
 12489                           prodl	equ	0xFF3
 12490                           postinc0	equ	0xFEE
 12491                           wreg	equ	0xFE8
 12492                           indf2	equ	0xFDF
 12493                           fsr2h	equ	0xFDA
 12494                           fsr2l	equ	0xFD9
 12495                           status	equ	0xFD8
 12496                           
 12497 ;; *************** function _Write_NVstore *****************
 12498 ;; Defined at:
 12499 ;;		line 61 in file "vend.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  storeadd        2   22[COMRAM] unsigned int 
 12502 ;;  storemem        2   24[COMRAM] PTR unsigned char 
 12503 ;;		 -> pnvcash(3), pvcash(2), 
 12504 ;;  storesize       1   26[COMRAM] unsigned char 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;  i               1   27[COMRAM] unsigned char 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  1    wreg      void 
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 0/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12516 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12519 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12520 ;;Total ram usage:        6 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:    3
 12523 ;; This function calls:
 12524 ;;		_DATAEE_WriteByte
 12525 ;; This function is called by:
 12526 ;;		_Update_cashaudit
 12527 ;;		_Update_coinsout
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           	psect	text75
 12532  011E62                     __ptext75:
 12533                           	opt stack 0
 12534  011E62                     _Write_NVstore:
 12535                           	opt stack 23
 12536                           
 12537                           ;vend.c: 63: uint8_t i = 0;
 12538                           
 12539                           ;incstack = 0
 12540  011E62  0E00               	movlw	0
 12541  011E64  6E26               	movwf	Write_NVstore@i,c
 12542                           
 12543                           ;vend.c: 64: while(i < storesize)
 12544  011E66  D00C               	goto	l1983
 12545  011E68                     
 12546                           ;vend.c: 65: {
 12547                           ;vend.c: 66: DATAEE_WriteByte(storeadd, storemem + i);
 12548  011E68  C021  F01D         	movff	Write_NVstore@storeadd,DATAEE_WriteByte@bAdd
 12549  011E6C  C022  F01E         	movff	Write_NVstore@storeadd+1,DATAEE_WriteByte@bAdd+1
 12550  011E70  5026               	movf	Write_NVstore@i,w,c
 12551  011E72  0D01               	mullw	1
 12552  011E74  5023               	movf	Write_NVstore@storemem,w,c
 12553  011E76  24F3               	addwf	prodl,w,c
 12554  011E78  6E1F               	movwf	DATAEE_WriteByte@bData,c
 12555  011E7A  ECC3  F08D         	call	_DATAEE_WriteByte	;wreg free
 12556                           
 12557                           ;vend.c: 67: i++;
 12558  011E7E  2A26               	incf	Write_NVstore@i,f,c
 12559  011E80                     l1983:
 12560  011E80  5025               	movf	Write_NVstore@storesize,w,c
 12561  011E82  5C26               	subwf	Write_NVstore@i,w,c
 12562  011E84  B0D8               	btfsc	status,0,c
 12563  011E86  0012               	return	
 12564  011E88  D7EF               	goto	l1984
 12565  011E8A                     __end_of_Write_NVstore:
 12566                           	opt stack 0
 12567                           tblptru	equ	0xFF8
 12568                           tblptrh	equ	0xFF7
 12569                           tblptrl	equ	0xFF6
 12570                           tablat	equ	0xFF5
 12571                           prodh	equ	0xFF4
 12572                           prodl	equ	0xFF3
 12573                           postinc0	equ	0xFEE
 12574                           wreg	equ	0xFE8
 12575                           indf2	equ	0xFDF
 12576                           fsr2h	equ	0xFDA
 12577                           fsr2l	equ	0xFD9
 12578                           status	equ	0xFD8
 12579                           
 12580 ;; *************** function _DATAEE_WriteByte *****************
 12581 ;; Defined at:
 12582 ;;		line 169 in file "mcc_generated_files/memory.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;  bAdd            2   18[COMRAM] unsigned int 
 12585 ;;  bData           1   20[COMRAM] unsigned char 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;  GIEBitValue     1   21[COMRAM] unsigned char 
 12588 ;; Return value:  Size  Location     Type
 12589 ;;                  1    wreg      void 
 12590 ;; Registers used:
 12591 ;;		wreg, status,2, status,0
 12592 ;; Tracked objects:
 12593 ;;		On entry : 0/0
 12594 ;;		On exit  : 0/0
 12595 ;;		Unchanged: 0/0
 12596 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12597 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12601 ;;Total ram usage:        4 bytes
 12602 ;; Hardware stack levels used:    1
 12603 ;; Hardware stack levels required when called:    2
 12604 ;; This function calls:
 12605 ;;		Nothing
 12606 ;; This function is called by:
 12607 ;;		_displ_sens
 12608 ;;		_Write_NVstore
 12609 ;;		_credit_add
 12610 ;;		_credit_subtract
 12611 ;;		_Update_Hopcoin
 12612 ;;		_Clear_cred
 12613 ;;		_set_price
 12614 ;;		_Vend_timeset
 12615 ;;		_Link_chan
 12616 ;;		_off_sens
 12617 ;;		_Reset_settings
 12618 ;;		_save_notes
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           	psect	text76
 12623  011B86                     __ptext76:
 12624                           	opt stack 0
 12625  011B86                     _DATAEE_WriteByte:
 12626                           	opt stack 23
 12627                           
 12628                           ;memory.c: 171: uint8_t GIEBitValue = INTCONbits.GIE;
 12629                           
 12630                           ;incstack = 0
 12631  011B86  0E00               	movlw	0
 12632  011B88  BEF2               	btfsc	intcon,7,c	;volatile
 12633  011B8A  0E01               	movlw	1
 12634  011B8C  6E20               	movwf	DATAEE_WriteByte@GIEBitValue,c
 12635                           
 12636                           ;memory.c: 173: NVMADRH = ((bAdd >> 8) & 0x03);
 12637  011B8E  501E               	movf	DATAEE_WriteByte@bAdd+1,w,c
 12638  011B90  0B03               	andlw	3
 12639  011B92  6E7F               	movwf	3967,c	;volatile
 12640                           
 12641                           ;memory.c: 174: NVMADRL = (bAdd & 0xFF);
 12642  011B94  C01D  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
 12643                           
 12644                           ;memory.c: 175: NVMDAT = bData;
 12645  011B98  C01F  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
 12646                           
 12647                           ;memory.c: 176: NVMCON1bits.NVMREG = 0;
 12648  011B9C  0E3F               	movlw	-193
 12649  011B9E  1681               	andwf	3969,f,c	;volsfr
 12650                           
 12651                           ;memory.c: 177: NVMCON1bits.WREN = 1;
 12652  011BA0  8481               	bsf	3969,2,c	;volsfr
 12653                           
 12654                           ;memory.c: 178: INTCONbits.GIE = 0;
 12655  011BA2  9EF2               	bcf	intcon,7,c	;volatile
 12656                           
 12657                           ;memory.c: 179: NVMCON2 = 0x55;
 12658  011BA4  0E55               	movlw	85
 12659  011BA6  6E82               	movwf	3970,c	;volsfr
 12660                           
 12661                           ;memory.c: 180: NVMCON2 = 0xAA;
 12662  011BA8  0EAA               	movlw	170
 12663  011BAA  6E82               	movwf	3970,c	;volsfr
 12664                           
 12665                           ;memory.c: 181: NVMCON1bits.WR = 1;
 12666  011BAC  8281               	bsf	3969,1,c	;volsfr
 12667  011BAE                     
 12668                           ;memory.c: 184: {
 12669  011BAE  B281               	btfsc	3969,1,c	;volsfr
 12670  011BB0  D7FE               	goto	l245
 12671                           
 12672                           ;memory.c: 185: }
 12673                           ;memory.c: 187: NVMCON1bits.WREN = 0;
 12674  011BB2  9481               	bcf	3969,2,c	;volsfr
 12675                           
 12676                           ;memory.c: 188: INTCONbits.GIE = GIEBitValue;
 12677  011BB4  B020               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
 12678  011BB6  D002               	bra	u2675
 12679  011BB8  9EF2               	bcf	intcon,7,c	;volatile
 12680  011BBA  D001               	bra	u2676
 12681  011BBC                     u2675:
 12682  011BBC  8EF2               	bsf	intcon,7,c	;volatile
 12683  011BBE                     u2676:
 12684  011BBE  0012               	return		;funcret
 12685  011BC0                     __end_of_DATAEE_WriteByte:
 12686                           	opt stack 0
 12687                           tblptru	equ	0xFF8
 12688                           tblptrh	equ	0xFF7
 12689                           tblptrl	equ	0xFF6
 12690                           tablat	equ	0xFF5
 12691                           prodh	equ	0xFF4
 12692                           prodl	equ	0xFF3
 12693                           intcon	equ	0xFF2
 12694                           postinc0	equ	0xFEE
 12695                           wreg	equ	0xFE8
 12696                           indf2	equ	0xFDF
 12697                           fsr2h	equ	0xFDA
 12698                           fsr2l	equ	0xFD9
 12699                           status	equ	0xFD8
 12700                           
 12701 ;; *************** function _Read_NVstore *****************
 12702 ;; Defined at:
 12703 ;;		line 71 in file "vend.c"
 12704 ;; Parameters:    Size  Location     Type
 12705 ;;  storeadd        2   20[COMRAM] unsigned int 
 12706 ;;  storemem        2   22[COMRAM] PTR unsigned char 
 12707 ;;		 -> pnvcash(3), pvcash(2), 
 12708 ;;  storesize       1   24[COMRAM] unsigned char 
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;  i               1   25[COMRAM] unsigned char 
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1    wreg      void 
 12713 ;; Registers used:
 12714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12715 ;; Tracked objects:
 12716 ;;		On entry : 0/0
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12720 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;Total ram usage:        6 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    3
 12727 ;; This function calls:
 12728 ;;		_DATAEE_ReadByte
 12729 ;; This function is called by:
 12730 ;;		_Update_cashaudit
 12731 ;;		_Update_coinsout
 12732 ;; This function uses a non-reentrant model
 12733 ;;
 12734                           
 12735                           	psect	text77
 12736  011D3A                     __ptext77:
 12737                           	opt stack 0
 12738  011D3A                     _Read_NVstore:
 12739                           	opt stack 23
 12740                           
 12741                           ;vend.c: 73: uint8_t i = 0;
 12742                           
 12743                           ;incstack = 0
 12744  011D3A  0E00               	movlw	0
 12745  011D3C  6E24               	movwf	Read_NVstore@i,c
 12746                           
 12747                           ;vend.c: 74: while(i < storesize)
 12748  011D3E  D012               	goto	l1989
 12749  011D40                     
 12750                           ;vend.c: 75: {
 12751                           ;vend.c: 76: storemem[i] = DATAEE_ReadByte(storeadd + i);
 12752  011D40  5024               	movf	Read_NVstore@i,w,c
 12753  011D42  0D01               	mullw	1
 12754  011D44  50F3               	movf	prodl,w,c
 12755  011D46  2421               	addwf	Read_NVstore@storemem,w,c
 12756  011D48  6ED9               	movwf	fsr2l,c
 12757  011D4A  50F4               	movf	prodh,w,c
 12758  011D4C  2022               	addwfc	Read_NVstore@storemem+1,w,c
 12759  011D4E  6EDA               	movwf	fsr2h,c
 12760  011D50  5024               	movf	Read_NVstore@i,w,c
 12761  011D52  241F               	addwf	Read_NVstore@storeadd,w,c
 12762  011D54  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
 12763  011D56  0E00               	movlw	0
 12764  011D58  2020               	addwfc	Read_NVstore@storeadd+1,w,c
 12765  011D5A  6E1E               	movwf	DATAEE_ReadByte@bAdd+1,c
 12766  011D5C  ECCF  F08F         	call	_DATAEE_ReadByte	;wreg free
 12767  011D60  6EDF               	movwf	indf2,c
 12768                           
 12769                           ;vend.c: 77: i++;
 12770  011D62  2A24               	incf	Read_NVstore@i,f,c
 12771  011D64                     l1989:
 12772  011D64  5023               	movf	Read_NVstore@storesize,w,c
 12773  011D66  5C24               	subwf	Read_NVstore@i,w,c
 12774  011D68  B0D8               	btfsc	status,0,c
 12775  011D6A  0012               	return	
 12776  011D6C  D7E9               	goto	l1990
 12777  011D6E                     __end_of_Read_NVstore:
 12778                           	opt stack 0
 12779                           tblptru	equ	0xFF8
 12780                           tblptrh	equ	0xFF7
 12781                           tblptrl	equ	0xFF6
 12782                           tablat	equ	0xFF5
 12783                           prodh	equ	0xFF4
 12784                           prodl	equ	0xFF3
 12785                           intcon	equ	0xFF2
 12786                           postinc0	equ	0xFEE
 12787                           wreg	equ	0xFE8
 12788                           indf2	equ	0xFDF
 12789                           fsr2h	equ	0xFDA
 12790                           fsr2l	equ	0xFD9
 12791                           status	equ	0xFD8
 12792                           
 12793 ;; *************** function _DATAEE_ReadByte *****************
 12794 ;; Defined at:
 12795 ;;		line 191 in file "mcc_generated_files/memory.c"
 12796 ;; Parameters:    Size  Location     Type
 12797 ;;  bAdd            2   18[COMRAM] unsigned int 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;		None
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  1    wreg      unsigned char 
 12802 ;; Registers used:
 12803 ;;		wreg, status,2, status,0
 12804 ;; Tracked objects:
 12805 ;;		On entry : 0/0
 12806 ;;		On exit  : 0/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12812 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12813 ;;Total ram usage:        2 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:    2
 12816 ;; This function calls:
 12817 ;;		Nothing
 12818 ;; This function is called by:
 12819 ;;		_Init_vendmem
 12820 ;;		_vend_init
 12821 ;;		_Read_NVstore
 12822 ;;		_credit_add
 12823 ;;		_credit_subtract
 12824 ;;		_credit_check
 12825 ;;		_Hopper_coin
 12826 ;;		_set_price
 12827 ;;		_Vend_timeset
 12828 ;;		_Link_chan
 12829 ;;		_off_sens
 12830 ;;		_mdb_init
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           	psect	text78
 12835  011F9E                     __ptext78:
 12836                           	opt stack 0
 12837  011F9E                     _DATAEE_ReadByte:
 12838                           	opt stack 26
 12839                           
 12840                           ;memory.c: 193: NVMADRH = ((bAdd >> 8) & 0x03);
 12841                           
 12842                           ;incstack = 0
 12843  011F9E  501E               	movf	DATAEE_ReadByte@bAdd+1,w,c
 12844  011FA0  0B03               	andlw	3
 12845  011FA2  6E7F               	movwf	3967,c	;volatile
 12846                           
 12847                           ;memory.c: 194: NVMADRL = (bAdd & 0xFF);
 12848  011FA4  C01D  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
 12849                           
 12850                           ;memory.c: 195: NVMCON1bits.NVMREG = 0;
 12851  011FA8  0E3F               	movlw	-193
 12852  011FAA  1681               	andwf	3969,f,c	;volsfr
 12853                           
 12854                           ;memory.c: 196: NVMCON1bits.RD = 1;
 12855  011FAC  8081               	bsf	3969,0,c	;volsfr
 12856                           
 12857                           ;memory.c: 197: __nop();
 12858  011FAE  F000               	nop	
 12859                           
 12860                           ;memory.c: 198: __nop();
 12861  011FB0  F000               	nop	
 12862                           
 12863                           ;memory.c: 200: return (NVMDAT);
 12864  011FB2  5080               	movf	3968,w,c	;volatile
 12865  011FB4  0012               	return	
 12866  011FB6                     __end_of_DATAEE_ReadByte:
 12867                           	opt stack 0
 12868                           tblptru	equ	0xFF8
 12869                           tblptrh	equ	0xFF7
 12870                           tblptrl	equ	0xFF6
 12871                           tablat	equ	0xFF5
 12872                           prodh	equ	0xFF4
 12873                           prodl	equ	0xFF3
 12874                           intcon	equ	0xFF2
 12875                           postinc0	equ	0xFEE
 12876                           wreg	equ	0xFE8
 12877                           indf2	equ	0xFDF
 12878                           fsr2h	equ	0xFDA
 12879                           fsr2l	equ	0xFD9
 12880                           status	equ	0xFD8
 12881                           
 12882 ;; *************** function _SYSTEM_Initialize *****************
 12883 ;; Defined at:
 12884 ;;		line 116 in file "mcc_generated_files/mcc.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;		None
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;		None
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      void 
 12891 ;; Registers used:
 12892 ;;		wreg, status,2, status,0, cstack
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 12898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12902 ;;Total ram usage:        0 bytes
 12903 ;; Hardware stack levels used:    1
 12904 ;; Hardware stack levels required when called:    3
 12905 ;; This function calls:
 12906 ;;		_CMP1_Initialize
 12907 ;;		_DAC1_Initialize
 12908 ;;		_EUSART1_Initialize
 12909 ;;		_INTERRUPT_Initialize
 12910 ;;		_OSCILLATOR_Initialize
 12911 ;;		_PIN_MANAGER_Initialize
 12912 ;;		_PMD_Initialize
 12913 ;;		_TMR0_Initialize
 12914 ;;		_TMR1_Initialize
 12915 ;;		_TMR2_Initialize
 12916 ;;		_TMR3_Initialize
 12917 ;;		_TMR4_Initialize
 12918 ;;		_TMR5_Initialize
 12919 ;; This function is called by:
 12920 ;;		_main
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924                           	psect	text79
 12925  011C2E                     __ptext79:
 12926                           	opt stack 0
 12927  011C2E                     _SYSTEM_Initialize:
 12928                           	opt stack 27
 12929                           
 12930                           ;mcc.c: 118: INTERRUPT_Initialize();
 12931                           
 12932                           ;incstack = 0
 12933  011C2E  EC63  F090         	call	_INTERRUPT_Initialize	;wreg free
 12934                           
 12935                           ;mcc.c: 119: PMD_Initialize();
 12936  011C32  ECB5  F08F         	call	_PMD_Initialize	;wreg free
 12937                           
 12938                           ;mcc.c: 120: PIN_MANAGER_Initialize();
 12939  011C36  EC43  F08A         	call	_PIN_MANAGER_Initialize	;wreg free
 12940                           
 12941                           ;mcc.c: 121: OSCILLATOR_Initialize();
 12942  011C3A  ECDB  F08F         	call	_OSCILLATOR_Initialize	;wreg free
 12943                           
 12944                           ;mcc.c: 122: CMP1_Initialize();
 12945  011C3E  EC12  F090         	call	_CMP1_Initialize	;wreg free
 12946                           
 12947                           ;mcc.c: 123: TMR3_Initialize();
 12948  011C42  EC4D  F08E         	call	_TMR3_Initialize	;wreg free
 12949                           
 12950                           ;mcc.c: 124: TMR4_Initialize();
 12951  011C46  ECA7  F08F         	call	_TMR4_Initialize	;wreg free
 12952                           
 12953                           ;mcc.c: 125: DAC1_Initialize();
 12954  011C4A  EC51  F090         	call	_DAC1_Initialize	;wreg free
 12955                           
 12956                           ;mcc.c: 126: TMR2_Initialize();
 12957  011C4E  EC8A  F08F         	call	_TMR2_Initialize	;wreg free
 12958                           
 12959                           ;mcc.c: 127: TMR5_Initialize();
 12960  011C52  EC32  F08E         	call	_TMR5_Initialize	;wreg free
 12961                           
 12962                           ;mcc.c: 128: TMR1_Initialize();
 12963  011C56  EC68  F08E         	call	_TMR1_Initialize	;wreg free
 12964                           
 12965                           ;mcc.c: 129: TMR0_Initialize();
 12966  011C5A  EC1A  F08F         	call	_TMR0_Initialize	;wreg free
 12967                           
 12968                           ;mcc.c: 130: EUSART1_Initialize();
 12969  011C5E  ECFD  F08F         	call	_EUSART1_Initialize	;wreg free
 12970  011C62  0012               	return		;funcret
 12971  011C64                     __end_of_SYSTEM_Initialize:
 12972                           	opt stack 0
 12973                           tblptru	equ	0xFF8
 12974                           tblptrh	equ	0xFF7
 12975                           tblptrl	equ	0xFF6
 12976                           tablat	equ	0xFF5
 12977                           prodh	equ	0xFF4
 12978                           prodl	equ	0xFF3
 12979                           intcon	equ	0xFF2
 12980                           postinc0	equ	0xFEE
 12981                           wreg	equ	0xFE8
 12982                           indf2	equ	0xFDF
 12983                           fsr2h	equ	0xFDA
 12984                           fsr2l	equ	0xFD9
 12985                           status	equ	0xFD8
 12986                           
 12987 ;; *************** function _TMR5_Initialize *****************
 12988 ;; Defined at:
 12989 ;;		line 62 in file "mcc_generated_files/tmr5.c"
 12990 ;; Parameters:    Size  Location     Type
 12991 ;;		None
 12992 ;; Auto vars:     Size  Location     Type
 12993 ;;		None
 12994 ;; Return value:  Size  Location     Type
 12995 ;;                  1    wreg      void 
 12996 ;; Registers used:
 12997 ;;		wreg, status,2, status,0
 12998 ;; Tracked objects:
 12999 ;;		On entry : 0/0
 13000 ;;		On exit  : 0/0
 13001 ;;		Unchanged: 0/0
 13002 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13007 ;;Total ram usage:        2 bytes
 13008 ;; Hardware stack levels used:    1
 13009 ;; Hardware stack levels required when called:    2
 13010 ;; This function calls:
 13011 ;;		Nothing
 13012 ;; This function is called by:
 13013 ;;		_SYSTEM_Initialize
 13014 ;;		_mdb_unlock
 13015 ;; This function uses a non-reentrant model
 13016 ;;
 13017                           
 13018                           	psect	text80
 13019  011C64                     __ptext80:
 13020                           	opt stack 0
 13021  011C64                     _TMR5_Initialize:
 13022                           	opt stack 26
 13023                           
 13024                           ;tmr5.c: 67: T5GCON = 0x00;
 13025                           
 13026                           ;incstack = 0
 13027  011C64  0E00               	movlw	0
 13028  011C66  6EC4               	movwf	4036,c	;volatile
 13029                           
 13030                           ;tmr5.c: 70: T5GATE = 0x00;
 13031  011C68  0E00               	movlw	0
 13032  011C6A  6EC5               	movwf	4037,c	;volatile
 13033                           
 13034                           ;tmr5.c: 73: T5CLK = 0x04;
 13035  011C6C  0E04               	movlw	4
 13036  011C6E  6EC6               	movwf	4038,c	;volatile
 13037                           
 13038                           ;tmr5.c: 76: TMR5H = 0xE1;
 13039  011C70  0EE1               	movlw	225
 13040  011C72  6EC2               	movwf	4034,c	;volatile
 13041                           
 13042                           ;tmr5.c: 79: TMR5L = 0xBA;
 13043  011C74  0EBA               	movlw	186
 13044  011C76  6EC1               	movwf	4033,c	;volatile
 13045                           
 13046                           ;tmr5.c: 82: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13047  011C78  50C1               	movf	4033,w,c	;volatile
 13048  011C7A  CFC2 F01D          	movff	4034,??_TMR5_Initialize	;volatile
 13049  011C7E  6A1E               	clrf	(??_TMR5_Initialize+1)& (0+255),c
 13050  011C80  C01D  F01E         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13051  011C84  6A1D               	clrf	??_TMR5_Initialize,c
 13052  011C86  101D               	iorwf	??_TMR5_Initialize,w,c
 13053  011C88  0100               	movlb	0	; () banked
 13054  011C8A  6FAE               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13055  011C8C  501E               	movf	??_TMR5_Initialize+1,w,c
 13056  011C8E  6FAF               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;tmr5.c: 85: PIR4bits.TMR5IF = 0;
 13060  011C90  010E               	movlb	14	; () banked
 13061  011C92  99CE               	bcf	206,4,b	;volatile
 13062                           
 13063                           ; BSR set to: 14
 13064                           ;tmr5.c: 88: T5CON = 0x01;
 13065  011C94  0E01               	movlw	1
 13066  011C96  6EC3               	movwf	4035,c	;volatile
 13067                           
 13068                           ; BSR set to: 14
 13069  011C98  0012               	return		;funcret
 13070  011C9A                     __end_of_TMR5_Initialize:
 13071                           	opt stack 0
 13072                           tblptru	equ	0xFF8
 13073                           tblptrh	equ	0xFF7
 13074                           tblptrl	equ	0xFF6
 13075                           tablat	equ	0xFF5
 13076                           prodh	equ	0xFF4
 13077                           prodl	equ	0xFF3
 13078                           intcon	equ	0xFF2
 13079                           postinc0	equ	0xFEE
 13080                           wreg	equ	0xFE8
 13081                           indf2	equ	0xFDF
 13082                           fsr2h	equ	0xFDA
 13083                           fsr2l	equ	0xFD9
 13084                           status	equ	0xFD8
 13085                           
 13086 ;; *************** function _TMR4_Initialize *****************
 13087 ;; Defined at:
 13088 ;;		line 61 in file "mcc_generated_files/tmr4.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;		None
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      void 
 13095 ;; Registers used:
 13096 ;;		wreg, status,2
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;Total ram usage:        0 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    2
 13109 ;; This function calls:
 13110 ;;		Nothing
 13111 ;; This function is called by:
 13112 ;;		_SYSTEM_Initialize
 13113 ;;		_pay_coin
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text81
 13118  011F4E                     __ptext81:
 13119                           	opt stack 0
 13120  011F4E                     _TMR4_Initialize:
 13121                           	opt stack 24
 13122                           
 13123                           ;tmr4.c: 66: T4CLKCON = 0x04;
 13124                           
 13125                           ; BSR set to: 14
 13126                           ;incstack = 0
 13127  011F4E  0E04               	movlw	4
 13128  011F50  6EB9               	movwf	4025,c	;volatile
 13129                           
 13130                           ;tmr4.c: 69: T4HLT = 0x00;
 13131  011F52  0E00               	movlw	0
 13132  011F54  6EB8               	movwf	4024,c	;volatile
 13133                           
 13134                           ;tmr4.c: 72: T4RST = 0x00;
 13135  011F56  0E00               	movlw	0
 13136  011F58  6EBA               	movwf	4026,c	;volatile
 13137                           
 13138                           ;tmr4.c: 75: T4PR = 0x98;
 13139  011F5A  0E98               	movlw	152
 13140  011F5C  6EB6               	movwf	4022,c	;volatile
 13141                           
 13142                           ;tmr4.c: 78: T4TMR = 0x00;
 13143  011F5E  0E00               	movlw	0
 13144  011F60  6EB5               	movwf	4021,c	;volatile
 13145                           
 13146                           ;tmr4.c: 81: PIR4bits.TMR4IF = 0;
 13147  011F62  010E               	movlb	14	; () banked
 13148  011F64  97CE               	bcf	206,3,b	;volatile
 13149                           
 13150                           ; BSR set to: 14
 13151                           ;tmr4.c: 84: T4CON = 0xFF;
 13152  011F66  68B7               	setf	4023,c	;volatile
 13153                           
 13154                           ; BSR set to: 14
 13155  011F68  0012               	return		;funcret
 13156  011F6A                     __end_of_TMR4_Initialize:
 13157                           	opt stack 0
 13158                           tblptru	equ	0xFF8
 13159                           tblptrh	equ	0xFF7
 13160                           tblptrl	equ	0xFF6
 13161                           tablat	equ	0xFF5
 13162                           prodh	equ	0xFF4
 13163                           prodl	equ	0xFF3
 13164                           intcon	equ	0xFF2
 13165                           postinc0	equ	0xFEE
 13166                           wreg	equ	0xFE8
 13167                           indf2	equ	0xFDF
 13168                           fsr2h	equ	0xFDA
 13169                           fsr2l	equ	0xFD9
 13170                           status	equ	0xFD8
 13171                           
 13172 ;; *************** function _TMR3_Initialize *****************
 13173 ;; Defined at:
 13174 ;;		line 62 in file "mcc_generated_files/tmr3.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13192 ;;Total ram usage:        2 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    2
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_SYSTEM_Initialize
 13199 ;;		_mdb_poll
 13200 ;;		_mdb_unlock
 13201 ;;		_cctalk_comm
 13202 ;; This function uses a non-reentrant model
 13203 ;;
 13204                           
 13205                           	psect	text82
 13206  011C9A                     __ptext82:
 13207                           	opt stack 0
 13208  011C9A                     _TMR3_Initialize:
 13209                           	opt stack 27
 13210                           
 13211                           ;tmr3.c: 67: T3GCON = 0x00;
 13212                           
 13213                           ; BSR set to: 14
 13214                           ;incstack = 0
 13215  011C9A  0E00               	movlw	0
 13216  011C9C  6ECA               	movwf	4042,c	;volatile
 13217                           
 13218                           ;tmr3.c: 70: T3GATE = 0x00;
 13219  011C9E  0E00               	movlw	0
 13220  011CA0  6ECB               	movwf	4043,c	;volatile
 13221                           
 13222                           ;tmr3.c: 73: T3CLK = 0x05;
 13223  011CA2  0E05               	movlw	5
 13224  011CA4  6ECC               	movwf	4044,c	;volatile
 13225                           
 13226                           ;tmr3.c: 76: TMR3H = 0x9E;
 13227  011CA6  0E9E               	movlw	158
 13228  011CA8  6EC8               	movwf	4040,c	;volatile
 13229                           
 13230                           ;tmr3.c: 79: TMR3L = 0x58;
 13231  011CAA  0E58               	movlw	88
 13232  011CAC  6EC7               	movwf	4039,c	;volatile
 13233                           
 13234                           ;tmr3.c: 82: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13235  011CAE  50C7               	movf	4039,w,c	;volatile
 13236  011CB0  CFC8 F01D          	movff	4040,??_TMR3_Initialize	;volatile
 13237  011CB4  6A1E               	clrf	(??_TMR3_Initialize+1)& (0+255),c
 13238  011CB6  C01D  F01E         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13239  011CBA  6A1D               	clrf	??_TMR3_Initialize,c
 13240  011CBC  101D               	iorwf	??_TMR3_Initialize,w,c
 13241  011CBE  0100               	movlb	0	; () banked
 13242  011CC0  6FB0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13243  011CC2  501E               	movf	??_TMR3_Initialize+1,w,c
 13244  011CC4  6FB1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;tmr3.c: 85: PIR4bits.TMR3IF = 0;
 13248  011CC6  010E               	movlb	14	; () banked
 13249  011CC8  95CE               	bcf	206,2,b	;volatile
 13250                           
 13251                           ; BSR set to: 14
 13252                           ;tmr3.c: 88: T3CON = 0x01;
 13253  011CCA  0E01               	movlw	1
 13254  011CCC  6EC9               	movwf	4041,c	;volatile
 13255                           
 13256                           ; BSR set to: 14
 13257  011CCE  0012               	return		;funcret
 13258  011CD0                     __end_of_TMR3_Initialize:
 13259                           	opt stack 0
 13260                           tblptru	equ	0xFF8
 13261                           tblptrh	equ	0xFF7
 13262                           tblptrl	equ	0xFF6
 13263                           tablat	equ	0xFF5
 13264                           prodh	equ	0xFF4
 13265                           prodl	equ	0xFF3
 13266                           intcon	equ	0xFF2
 13267                           postinc0	equ	0xFEE
 13268                           wreg	equ	0xFE8
 13269                           indf2	equ	0xFDF
 13270                           fsr2h	equ	0xFDA
 13271                           fsr2l	equ	0xFD9
 13272                           status	equ	0xFD8
 13273                           
 13274 ;; *************** function _TMR2_Initialize *****************
 13275 ;; Defined at:
 13276 ;;		line 61 in file "mcc_generated_files/tmr2.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;		None
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		wreg, status,2
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13294 ;;Total ram usage:        0 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:    2
 13297 ;; This function calls:
 13298 ;;		Nothing
 13299 ;; This function is called by:
 13300 ;;		_SYSTEM_Initialize
 13301 ;;		_pay_coin
 13302 ;; This function uses a non-reentrant model
 13303 ;;
 13304                           
 13305                           	psect	text83
 13306  011F14                     __ptext83:
 13307                           	opt stack 0
 13308  011F14                     _TMR2_Initialize:
 13309                           	opt stack 24
 13310                           
 13311                           ;tmr2.c: 66: T2CLKCON = 0x05;
 13312                           
 13313                           ; BSR set to: 14
 13314                           ;incstack = 0
 13315  011F14  0E05               	movlw	5
 13316  011F16  6EBF               	movwf	4031,c	;volatile
 13317                           
 13318                           ;tmr2.c: 69: T2HLT = 0x20;
 13319  011F18  0E20               	movlw	32
 13320  011F1A  6EBE               	movwf	4030,c	;volatile
 13321                           
 13322                           ;tmr2.c: 72: T2RST = 0x00;
 13323  011F1C  0E00               	movlw	0
 13324  011F1E  6EC0               	movwf	4032,c	;volatile
 13325                           
 13326                           ;tmr2.c: 75: T2PR = 0x85;
 13327  011F20  0E85               	movlw	133
 13328  011F22  6EBC               	movwf	4028,c	;volatile
 13329                           
 13330                           ;tmr2.c: 78: T2TMR = 0x00;
 13331  011F24  0E00               	movlw	0
 13332  011F26  6EBB               	movwf	4027,c	;volatile
 13333                           
 13334                           ;tmr2.c: 81: PIR4bits.TMR2IF = 0;
 13335  011F28  010E               	movlb	14	; () banked
 13336  011F2A  93CE               	bcf	206,1,b	;volatile
 13337                           
 13338                           ;tmr2.c: 84: T2CON = 0xF1;
 13339  011F2C  0EF1               	movlw	241
 13340  011F2E  6EBD               	movwf	4029,c	;volatile
 13341                           
 13342                           ; BSR set to: 14
 13343  011F30  0012               	return		;funcret
 13344  011F32                     __end_of_TMR2_Initialize:
 13345                           	opt stack 0
 13346                           tblptru	equ	0xFF8
 13347                           tblptrh	equ	0xFF7
 13348                           tblptrl	equ	0xFF6
 13349                           tablat	equ	0xFF5
 13350                           prodh	equ	0xFF4
 13351                           prodl	equ	0xFF3
 13352                           intcon	equ	0xFF2
 13353                           postinc0	equ	0xFEE
 13354                           wreg	equ	0xFE8
 13355                           indf2	equ	0xFDF
 13356                           fsr2h	equ	0xFDA
 13357                           fsr2l	equ	0xFD9
 13358                           status	equ	0xFD8
 13359                           
 13360 ;; *************** function _TMR1_Initialize *****************
 13361 ;; Defined at:
 13362 ;;		line 62 in file "mcc_generated_files/tmr1.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;		None
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;                  1    wreg      void 
 13369 ;; Registers used:
 13370 ;;		wreg, status,2, status,0
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/0
 13373 ;;		On exit  : 0/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13380 ;;Total ram usage:        2 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; Hardware stack levels required when called:    2
 13383 ;; This function calls:
 13384 ;;		Nothing
 13385 ;; This function is called by:
 13386 ;;		_SYSTEM_Initialize
 13387 ;;		_mdb_comm
 13388 ;;		_mdb_unlock
 13389 ;; This function uses a non-reentrant model
 13390 ;;
 13391                           
 13392                           	psect	text84
 13393  011CD0                     __ptext84:
 13394                           	opt stack 0
 13395  011CD0                     _TMR1_Initialize:
 13396                           	opt stack 24
 13397                           
 13398                           ;tmr1.c: 67: T1GCON = 0x00;
 13399                           
 13400                           ; BSR set to: 14
 13401                           ;incstack = 0
 13402  011CD0  0E00               	movlw	0
 13403  011CD2  6ED0               	movwf	4048,c	;volatile
 13404                           
 13405                           ;tmr1.c: 70: T1GATE = 0x00;
 13406  011CD4  0E00               	movlw	0
 13407  011CD6  6ED1               	movwf	4049,c	;volatile
 13408                           
 13409                           ;tmr1.c: 73: T1CLK = 0x05;
 13410  011CD8  0E05               	movlw	5
 13411  011CDA  6ED2               	movwf	4050,c	;volatile
 13412                           
 13413                           ;tmr1.c: 76: TMR1H = 0xF6;
 13414  011CDC  0EF6               	movlw	246
 13415  011CDE  6ECE               	movwf	4046,c	;volatile
 13416                           
 13417                           ;tmr1.c: 79: TMR1L = 0x3C;
 13418  011CE0  0E3C               	movlw	60
 13419  011CE2  6ECD               	movwf	4045,c	;volatile
 13420                           
 13421                           ;tmr1.c: 82: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13422  011CE4  50CD               	movf	4045,w,c	;volatile
 13423  011CE6  CFCE F01D          	movff	4046,??_TMR1_Initialize	;volatile
 13424  011CEA  6A1E               	clrf	(??_TMR1_Initialize+1)& (0+255),c
 13425  011CEC  C01D  F01E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 13426  011CF0  6A1D               	clrf	??_TMR1_Initialize,c
 13427  011CF2  101D               	iorwf	??_TMR1_Initialize,w,c
 13428  011CF4  0100               	movlb	0	; () banked
 13429  011CF6  6FB2               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 13430  011CF8  501E               	movf	??_TMR1_Initialize+1,w,c
 13431  011CFA  6FB3               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 13432                           
 13433                           ; BSR set to: 0
 13434                           ;tmr1.c: 85: PIR4bits.TMR1IF = 0;
 13435  011CFC  010E               	movlb	14	; () banked
 13436  011CFE  91CE               	bcf	206,0,b	;volatile
 13437                           
 13438                           ; BSR set to: 14
 13439                           ;tmr1.c: 88: T1CON = 0x01;
 13440  011D00  0E01               	movlw	1
 13441  011D02  6ECF               	movwf	4047,c	;volatile
 13442                           
 13443                           ; BSR set to: 14
 13444  011D04  0012               	return		;funcret
 13445  011D06                     __end_of_TMR1_Initialize:
 13446                           	opt stack 0
 13447                           tblptru	equ	0xFF8
 13448                           tblptrh	equ	0xFF7
 13449                           tblptrl	equ	0xFF6
 13450                           tablat	equ	0xFF5
 13451                           prodh	equ	0xFF4
 13452                           prodl	equ	0xFF3
 13453                           intcon	equ	0xFF2
 13454                           postinc0	equ	0xFEE
 13455                           wreg	equ	0xFE8
 13456                           indf2	equ	0xFDF
 13457                           fsr2h	equ	0xFDA
 13458                           fsr2l	equ	0xFD9
 13459                           status	equ	0xFD8
 13460                           
 13461 ;; *************** function _TMR0_Initialize *****************
 13462 ;; Defined at:
 13463 ;;		line 64 in file "mcc_generated_files/tmr0.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;		None
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;		None
 13468 ;; Return value:  Size  Location     Type
 13469 ;;                  1    wreg      void 
 13470 ;; Registers used:
 13471 ;;		wreg, status,2, status,0
 13472 ;; Tracked objects:
 13473 ;;		On entry : 0/0
 13474 ;;		On exit  : 0/0
 13475 ;;		Unchanged: 0/0
 13476 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;Total ram usage:        2 bytes
 13482 ;; Hardware stack levels used:    1
 13483 ;; Hardware stack levels required when called:    2
 13484 ;; This function calls:
 13485 ;;		Nothing
 13486 ;; This function is called by:
 13487 ;;		_SYSTEM_Initialize
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           
 13491                           	psect	text85
 13492  011E34                     __ptext85:
 13493                           	opt stack 0
 13494  011E34                     _TMR0_Initialize:
 13495                           	opt stack 27
 13496                           
 13497                           ;tmr0.c: 69: T0CON1 = 0x82;
 13498                           
 13499                           ; BSR set to: 14
 13500                           ;incstack = 0
 13501  011E34  0E82               	movlw	130
 13502  011E36  6ED6               	movwf	4054,c	;volatile
 13503                           
 13504                           ;tmr0.c: 72: TMR0H = 0xA5;
 13505  011E38  0EA5               	movlw	165
 13506  011E3A  6ED4               	movwf	4052,c	;volatile
 13507                           
 13508                           ;tmr0.c: 75: TMR0L = 0x2E;
 13509  011E3C  0E2E               	movlw	46
 13510  011E3E  6ED3               	movwf	4051,c	;volatile
 13511                           
 13512                           ;tmr0.c: 78: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 13513  011E40  50D3               	movf	4051,w,c	;volatile
 13514  011E42  CFD4 F01D          	movff	4052,??_TMR0_Initialize	;volatile
 13515  011E46  6A1E               	clrf	(??_TMR0_Initialize+1)& (0+255),c
 13516  011E48  C01D  F01E         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 13517  011E4C  6A1D               	clrf	??_TMR0_Initialize,c
 13518  011E4E  101D               	iorwf	??_TMR0_Initialize,w,c
 13519  011E50  0100               	movlb	0	; () banked
 13520  011E52  6FAC               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 13521  011E54  501E               	movf	??_TMR0_Initialize+1,w,c
 13522  011E56  6FAD               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 13523                           
 13524                           ; BSR set to: 0
 13525                           ;tmr0.c: 81: PIR0bits.TMR0IF = 0;
 13526  011E58  010E               	movlb	14	; () banked
 13527  011E5A  9BCA               	bcf	202,5,b	;volatile
 13528                           
 13529                           ; BSR set to: 14
 13530                           ;tmr0.c: 84: T0CON0 = 0x90;
 13531  011E5C  0E90               	movlw	144
 13532  011E5E  6ED5               	movwf	4053,c	;volatile
 13533                           
 13534                           ; BSR set to: 14
 13535  011E60  0012               	return		;funcret
 13536  011E62                     __end_of_TMR0_Initialize:
 13537                           	opt stack 0
 13538                           tblptru	equ	0xFF8
 13539                           tblptrh	equ	0xFF7
 13540                           tblptrl	equ	0xFF6
 13541                           tablat	equ	0xFF5
 13542                           prodh	equ	0xFF4
 13543                           prodl	equ	0xFF3
 13544                           intcon	equ	0xFF2
 13545                           postinc0	equ	0xFEE
 13546                           wreg	equ	0xFE8
 13547                           indf2	equ	0xFDF
 13548                           fsr2h	equ	0xFDA
 13549                           fsr2l	equ	0xFD9
 13550                           status	equ	0xFD8
 13551                           
 13552 ;; *************** function _PMD_Initialize *****************
 13553 ;; Defined at:
 13554 ;;		line 147 in file "mcc_generated_files/mcc.c"
 13555 ;; Parameters:    Size  Location     Type
 13556 ;;		None
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;		None
 13559 ;; Return value:  Size  Location     Type
 13560 ;;                  1    wreg      void 
 13561 ;; Registers used:
 13562 ;;		wreg, status,2
 13563 ;; Tracked objects:
 13564 ;;		On entry : 0/0
 13565 ;;		On exit  : 0/0
 13566 ;;		Unchanged: 0/0
 13567 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13572 ;;Total ram usage:        0 bytes
 13573 ;; Hardware stack levels used:    1
 13574 ;; Hardware stack levels required when called:    2
 13575 ;; This function calls:
 13576 ;;		Nothing
 13577 ;; This function is called by:
 13578 ;;		_SYSTEM_Initialize
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           	psect	text86
 13583  011F6A                     __ptext86:
 13584                           	opt stack 0
 13585  011F6A                     _PMD_Initialize:
 13586                           	opt stack 27
 13587                           
 13588                           ;mcc.c: 150: PMD0 = 0x00;
 13589                           
 13590                           ; BSR set to: 14
 13591                           ;incstack = 0
 13592  011F6A  0E00               	movlw	0
 13593  011F6C  010E               	movlb	14	; () banked
 13594  011F6E  6FE1               	movwf	225,b	;volatile
 13595                           
 13596                           ;mcc.c: 152: PMD1 = 0x00;
 13597  011F70  0E00               	movlw	0
 13598  011F72  6FE2               	movwf	226,b	;volatile
 13599                           
 13600                           ;mcc.c: 154: PMD2 = 0x00;
 13601  011F74  0E00               	movlw	0
 13602  011F76  6FE3               	movwf	227,b	;volatile
 13603                           
 13604                           ;mcc.c: 156: PMD3 = 0x00;
 13605  011F78  0E00               	movlw	0
 13606  011F7A  6FE4               	movwf	228,b	;volatile
 13607                           
 13608                           ;mcc.c: 158: PMD4 = 0x00;
 13609  011F7C  0E00               	movlw	0
 13610  011F7E  6FE5               	movwf	229,b	;volatile
 13611                           
 13612                           ;mcc.c: 160: PMD5 = 0x00;
 13613  011F80  0E00               	movlw	0
 13614  011F82  6FE6               	movwf	230,b	;volatile
 13615                           
 13616                           ; BSR set to: 14
 13617  011F84  0012               	return		;funcret
 13618  011F86                     __end_of_PMD_Initialize:
 13619                           	opt stack 0
 13620                           tblptru	equ	0xFF8
 13621                           tblptrh	equ	0xFF7
 13622                           tblptrl	equ	0xFF6
 13623                           tablat	equ	0xFF5
 13624                           prodh	equ	0xFF4
 13625                           prodl	equ	0xFF3
 13626                           intcon	equ	0xFF2
 13627                           postinc0	equ	0xFEE
 13628                           wreg	equ	0xFE8
 13629                           indf2	equ	0xFDF
 13630                           fsr2h	equ	0xFDA
 13631                           fsr2l	equ	0xFD9
 13632                           status	equ	0xFD8
 13633                           
 13634 ;; *************** function _PIN_MANAGER_Initialize *****************
 13635 ;; Defined at:
 13636 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13637 ;; Parameters:    Size  Location     Type
 13638 ;;		None
 13639 ;; Auto vars:     Size  Location     Type
 13640 ;;		None
 13641 ;; Return value:  Size  Location     Type
 13642 ;;                  1    wreg      void 
 13643 ;; Registers used:
 13644 ;;		wreg, status,2
 13645 ;; Tracked objects:
 13646 ;;		On entry : 0/0
 13647 ;;		On exit  : 0/0
 13648 ;;		Unchanged: 0/0
 13649 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13654 ;;Total ram usage:        0 bytes
 13655 ;; Hardware stack levels used:    1
 13656 ;; Hardware stack levels required when called:    2
 13657 ;; This function calls:
 13658 ;;		Nothing
 13659 ;; This function is called by:
 13660 ;;		_SYSTEM_Initialize
 13661 ;; This function uses a non-reentrant model
 13662 ;;
 13663                           
 13664                           	psect	text87
 13665  011486                     __ptext87:
 13666                           	opt stack 0
 13667  011486                     _PIN_MANAGER_Initialize:
 13668                           	opt stack 27
 13669                           
 13670                           ;pin_manager.c: 57: LATE = 0x00;
 13671                           
 13672                           ; BSR set to: 14
 13673                           ;incstack = 0
 13674  011486  0E00               	movlw	0
 13675  011488  6E87               	movwf	3975,c	;volatile
 13676                           
 13677                           ;pin_manager.c: 58: LATD = 0x00;
 13678  01148A  0E00               	movlw	0
 13679  01148C  6E86               	movwf	3974,c	;volatile
 13680                           
 13681                           ;pin_manager.c: 59: LATA = 0xC0;
 13682  01148E  0EC0               	movlw	192
 13683  011490  6E83               	movwf	3971,c	;volatile
 13684                           
 13685                           ;pin_manager.c: 60: LATB = 0x00;
 13686  011492  0E00               	movlw	0
 13687  011494  6E84               	movwf	3972,c	;volatile
 13688                           
 13689                           ;pin_manager.c: 61: LATC = 0x40;
 13690  011496  0E40               	movlw	64
 13691  011498  6E85               	movwf	3973,c	;volatile
 13692                           
 13693                           ;pin_manager.c: 66: TRISE = 0x00;
 13694  01149A  0E00               	movlw	0
 13695  01149C  6E8C               	movwf	3980,c	;volatile
 13696                           
 13697                           ;pin_manager.c: 67: TRISA = 0x1F;
 13698  01149E  0E1F               	movlw	31
 13699  0114A0  6E88               	movwf	3976,c	;volatile
 13700                           
 13701                           ;pin_manager.c: 68: TRISB = 0xF0;
 13702  0114A2  0EF0               	movlw	240
 13703  0114A4  6E89               	movwf	3977,c	;volatile
 13704                           
 13705                           ;pin_manager.c: 69: TRISC = 0x80;
 13706  0114A6  0E80               	movlw	128
 13707  0114A8  6E8A               	movwf	3978,c	;volatile
 13708                           
 13709                           ;pin_manager.c: 70: TRISD = 0x00;
 13710  0114AA  0E00               	movlw	0
 13711  0114AC  6E8B               	movwf	3979,c	;volatile
 13712                           
 13713                           ;pin_manager.c: 75: ANSELC = 0x00;
 13714  0114AE  0E00               	movlw	0
 13715  0114B0  010F               	movlb	15	; () banked
 13716  0114B2  6F21               	movwf	33,b	;volatile
 13717                           
 13718                           ;pin_manager.c: 76: ANSELB = 0xC0;
 13719  0114B4  0EC0               	movlw	192
 13720  0114B6  6F19               	movwf	25,b	;volatile
 13721                           
 13722                           ;pin_manager.c: 77: ANSELD = 0x00;
 13723  0114B8  0E00               	movlw	0
 13724  0114BA  6F26               	movwf	38,b	;volatile
 13725                           
 13726                           ;pin_manager.c: 78: ANSELE = 0x00;
 13727  0114BC  0E00               	movlw	0
 13728  0114BE  6F2E               	movwf	46,b	;volatile
 13729                           
 13730                           ;pin_manager.c: 79: ANSELA = 0x01;
 13731  0114C0  0E01               	movlw	1
 13732  0114C2  6F11               	movwf	17,b	;volatile
 13733                           
 13734                           ;pin_manager.c: 84: WPUD = 0x00;
 13735  0114C4  0E00               	movlw	0
 13736  0114C6  6F25               	movwf	37,b	;volatile
 13737                           
 13738                           ;pin_manager.c: 85: WPUE = 0x00;
 13739  0114C8  0E00               	movlw	0
 13740  0114CA  6F2D               	movwf	45,b	;volatile
 13741                           
 13742                           ;pin_manager.c: 86: WPUB = 0x00;
 13743  0114CC  0E00               	movlw	0
 13744  0114CE  6F18               	movwf	24,b	;volatile
 13745                           
 13746                           ;pin_manager.c: 87: WPUA = 0x00;
 13747  0114D0  0E00               	movlw	0
 13748  0114D2  6F10               	movwf	16,b	;volatile
 13749                           
 13750                           ;pin_manager.c: 88: WPUC = 0x00;
 13751  0114D4  0E00               	movlw	0
 13752  0114D6  6F20               	movwf	32,b	;volatile
 13753                           
 13754                           ;pin_manager.c: 93: ODCONE = 0x00;
 13755  0114D8  0E00               	movlw	0
 13756  0114DA  6F2C               	movwf	44,b	;volatile
 13757                           
 13758                           ;pin_manager.c: 94: ODCONA = 0x00;
 13759  0114DC  0E00               	movlw	0
 13760  0114DE  6F0F               	movwf	15,b	;volatile
 13761                           
 13762                           ;pin_manager.c: 95: ODCONB = 0x00;
 13763  0114E0  0E00               	movlw	0
 13764  0114E2  6F17               	movwf	23,b	;volatile
 13765                           
 13766                           ;pin_manager.c: 96: ODCONC = 0x00;
 13767  0114E4  0E00               	movlw	0
 13768  0114E6  6F1F               	movwf	31,b	;volatile
 13769                           
 13770                           ;pin_manager.c: 97: ODCOND = 0x00;
 13771  0114E8  0E00               	movlw	0
 13772  0114EA  6F24               	movwf	36,b	;volatile
 13773                           
 13774                           ; BSR set to: 15
 13775                           ;pin_manager.c: 103: PIE0bits.IOCIE = 1;
 13776  0114EC  010E               	movlb	14	; () banked
 13777  0114EE  89C2               	bsf	194,4,b	;volatile
 13778                           
 13779                           ; BSR set to: 14
 13780                           ;pin_manager.c: 106: RX1PPSbits.RXPPS = 0x17;
 13781  0114F0  81B5               	bsf	181,0,b	;volatile
 13782  0114F2  83B5               	bsf	181,1,b	;volatile
 13783  0114F4  85B5               	bsf	181,2,b	;volatile
 13784  0114F6  97B5               	bcf	181,3,b	;volatile
 13785  0114F8  89B5               	bsf	181,4,b	;volatile
 13786                           
 13787                           ;pin_manager.c: 107: RC6PPS = 0x09;
 13788  0114FA  0E09               	movlw	9
 13789  0114FC  6FFD               	movwf	253,b	;volatile
 13790                           
 13791                           ; BSR set to: 14
 13792  0114FE  0012               	return		;funcret
 13793  011500                     __end_of_PIN_MANAGER_Initialize:
 13794                           	opt stack 0
 13795                           tblptru	equ	0xFF8
 13796                           tblptrh	equ	0xFF7
 13797                           tblptrl	equ	0xFF6
 13798                           tablat	equ	0xFF5
 13799                           prodh	equ	0xFF4
 13800                           prodl	equ	0xFF3
 13801                           intcon	equ	0xFF2
 13802                           postinc0	equ	0xFEE
 13803                           wreg	equ	0xFE8
 13804                           indf2	equ	0xFDF
 13805                           fsr2h	equ	0xFDA
 13806                           fsr2l	equ	0xFD9
 13807                           status	equ	0xFD8
 13808                           
 13809 ;; *************** function _OSCILLATOR_Initialize *****************
 13810 ;; Defined at:
 13811 ;;		line 133 in file "mcc_generated_files/mcc.c"
 13812 ;; Parameters:    Size  Location     Type
 13813 ;;		None
 13814 ;; Auto vars:     Size  Location     Type
 13815 ;;		None
 13816 ;; Return value:  Size  Location     Type
 13817 ;;                  1    wreg      void 
 13818 ;; Registers used:
 13819 ;;		wreg, status,2
 13820 ;; Tracked objects:
 13821 ;;		On entry : 0/0
 13822 ;;		On exit  : 0/0
 13823 ;;		Unchanged: 0/0
 13824 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13829 ;;Total ram usage:        0 bytes
 13830 ;; Hardware stack levels used:    1
 13831 ;; Hardware stack levels required when called:    2
 13832 ;; This function calls:
 13833 ;;		Nothing
 13834 ;; This function is called by:
 13835 ;;		_SYSTEM_Initialize
 13836 ;; This function uses a non-reentrant model
 13837 ;;
 13838                           
 13839                           	psect	text88
 13840  011FB6                     __ptext88:
 13841                           	opt stack 0
 13842  011FB6                     _OSCILLATOR_Initialize:
 13843                           	opt stack 27
 13844                           
 13845                           ;mcc.c: 136: OSCCON1 = 0x60;
 13846                           
 13847                           ; BSR set to: 14
 13848                           ;incstack = 0
 13849  011FB6  0E60               	movlw	96
 13850  011FB8  010E               	movlb	14	; () banked
 13851  011FBA  6FD8               	movwf	216,b	;volatile
 13852                           
 13853                           ;mcc.c: 138: OSCCON3 = 0x00;
 13854  011FBC  0E00               	movlw	0
 13855  011FBE  6FDA               	movwf	218,b	;volatile
 13856                           
 13857                           ;mcc.c: 140: OSCEN = 0x00;
 13858  011FC0  0E00               	movlw	0
 13859  011FC2  6FDC               	movwf	220,b	;volatile
 13860                           
 13861                           ;mcc.c: 142: OSCFRQ = 0x04;
 13862  011FC4  0E04               	movlw	4
 13863  011FC6  6FDE               	movwf	222,b	;volatile
 13864                           
 13865                           ;mcc.c: 144: OSCTUNE = 0x00;
 13866  011FC8  0E00               	movlw	0
 13867  011FCA  6FDD               	movwf	221,b	;volatile
 13868                           
 13869                           ; BSR set to: 14
 13870  011FCC  0012               	return		;funcret
 13871  011FCE                     __end_of_OSCILLATOR_Initialize:
 13872                           	opt stack 0
 13873                           tblptru	equ	0xFF8
 13874                           tblptrh	equ	0xFF7
 13875                           tblptrl	equ	0xFF6
 13876                           tablat	equ	0xFF5
 13877                           prodh	equ	0xFF4
 13878                           prodl	equ	0xFF3
 13879                           intcon	equ	0xFF2
 13880                           postinc0	equ	0xFEE
 13881                           wreg	equ	0xFE8
 13882                           indf2	equ	0xFDF
 13883                           fsr2h	equ	0xFDA
 13884                           fsr2l	equ	0xFD9
 13885                           status	equ	0xFD8
 13886                           
 13887 ;; *************** function _INTERRUPT_Initialize *****************
 13888 ;; Defined at:
 13889 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 13890 ;; Parameters:    Size  Location     Type
 13891 ;;		None
 13892 ;; Auto vars:     Size  Location     Type
 13893 ;;		None
 13894 ;; Return value:  Size  Location     Type
 13895 ;;                  1    wreg      void 
 13896 ;; Registers used:
 13897 ;;		None
 13898 ;; Tracked objects:
 13899 ;;		On entry : 0/0
 13900 ;;		On exit  : 0/0
 13901 ;;		Unchanged: 0/0
 13902 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13907 ;;Total ram usage:        0 bytes
 13908 ;; Hardware stack levels used:    1
 13909 ;; Hardware stack levels required when called:    2
 13910 ;; This function calls:
 13911 ;;		Nothing
 13912 ;; This function is called by:
 13913 ;;		_SYSTEM_Initialize
 13914 ;; This function uses a non-reentrant model
 13915 ;;
 13916                           
 13917                           	psect	text89
 13918  0120C6                     __ptext89:
 13919                           	opt stack 0
 13920  0120C6                     _INTERRUPT_Initialize:
 13921                           	opt stack 27
 13922                           
 13923                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 1;
 13924                           
 13925                           ; BSR set to: 14
 13926                           ;incstack = 0
 13927  0120C6  8AF2               	bsf	intcon,5,c	;volatile
 13928                           
 13929                           ;interrupt_manager.c: 59: IPR0bits.IOCIP = 1;
 13930  0120C8  010E               	movlb	14	; () banked
 13931  0120CA  89BA               	bsf	186,4,b	;volatile
 13932                           
 13933                           ; BSR set to: 14
 13934  0120CC  0012               	return		;funcret
 13935  0120CE                     __end_of_INTERRUPT_Initialize:
 13936                           	opt stack 0
 13937                           tblptru	equ	0xFF8
 13938                           tblptrh	equ	0xFF7
 13939                           tblptrl	equ	0xFF6
 13940                           tablat	equ	0xFF5
 13941                           prodh	equ	0xFF4
 13942                           prodl	equ	0xFF3
 13943                           intcon	equ	0xFF2
 13944                           postinc0	equ	0xFEE
 13945                           wreg	equ	0xFE8
 13946                           indf2	equ	0xFDF
 13947                           fsr2h	equ	0xFDA
 13948                           fsr2l	equ	0xFD9
 13949                           status	equ	0xFD8
 13950                           
 13951 ;; *************** function _EUSART1_Initialize *****************
 13952 ;; Defined at:
 13953 ;;		line 53 in file "mcc_generated_files/eusart1.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;		None
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;		None
 13958 ;; Return value:  Size  Location     Type
 13959 ;;                  1    wreg      void 
 13960 ;; Registers used:
 13961 ;;		wreg, status,2
 13962 ;; Tracked objects:
 13963 ;;		On entry : 0/0
 13964 ;;		On exit  : 0/0
 13965 ;;		Unchanged: 0/0
 13966 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 13967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13971 ;;Total ram usage:        0 bytes
 13972 ;; Hardware stack levels used:    1
 13973 ;; Hardware stack levels required when called:    2
 13974 ;; This function calls:
 13975 ;;		Nothing
 13976 ;; This function is called by:
 13977 ;;		_SYSTEM_Initialize
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981                           	psect	text90
 13982  011FFA                     __ptext90:
 13983                           	opt stack 0
 13984  011FFA                     _EUSART1_Initialize:
 13985                           	opt stack 27
 13986                           
 13987                           ;eusart1.c: 58: BAUD1CON = 0x08;
 13988                           
 13989                           ; BSR set to: 14
 13990                           ;incstack = 0
 13991  011FFA  0E08               	movlw	8
 13992  011FFC  6E9F               	movwf	3999,c	;volatile
 13993                           
 13994                           ;eusart1.c: 61: RC1STA = 0xD0;
 13995  011FFE  0ED0               	movlw	208
 13996  012000  6E9D               	movwf	3997,c	;volatile
 13997                           
 13998                           ;eusart1.c: 64: TX1STA = 0xEC;
 13999  012002  0EEC               	movlw	236
 14000  012004  6E9E               	movwf	3998,c	;volatile
 14001                           
 14002                           ;eusart1.c: 67: SP1BRGL = 0x38;
 14003  012006  0E38               	movlw	56
 14004  012008  6E9B               	movwf	3995,c	;volatile
 14005                           
 14006                           ;eusart1.c: 70: SP1BRGH = 0x01;
 14007  01200A  0E01               	movlw	1
 14008  01200C  6E9C               	movwf	3996,c	;volatile
 14009  01200E  0012               	return		;funcret
 14010  012010                     __end_of_EUSART1_Initialize:
 14011                           	opt stack 0
 14012                           tblptru	equ	0xFF8
 14013                           tblptrh	equ	0xFF7
 14014                           tblptrl	equ	0xFF6
 14015                           tablat	equ	0xFF5
 14016                           prodh	equ	0xFF4
 14017                           prodl	equ	0xFF3
 14018                           intcon	equ	0xFF2
 14019                           postinc0	equ	0xFEE
 14020                           wreg	equ	0xFE8
 14021                           indf2	equ	0xFDF
 14022                           fsr2h	equ	0xFDA
 14023                           fsr2l	equ	0xFD9
 14024                           status	equ	0xFD8
 14025                           
 14026 ;; *************** function _DAC1_Initialize *****************
 14027 ;; Defined at:
 14028 ;;		line 57 in file "mcc_generated_files/dac1.c"
 14029 ;; Parameters:    Size  Location     Type
 14030 ;;		None
 14031 ;; Auto vars:     Size  Location     Type
 14032 ;;		None
 14033 ;; Return value:  Size  Location     Type
 14034 ;;                  1    wreg      void 
 14035 ;; Registers used:
 14036 ;;		wreg, status,2
 14037 ;; Tracked objects:
 14038 ;;		On entry : 0/0
 14039 ;;		On exit  : 0/0
 14040 ;;		Unchanged: 0/0
 14041 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14046 ;;Total ram usage:        0 bytes
 14047 ;; Hardware stack levels used:    1
 14048 ;; Hardware stack levels required when called:    2
 14049 ;; This function calls:
 14050 ;;		Nothing
 14051 ;; This function is called by:
 14052 ;;		_SYSTEM_Initialize
 14053 ;;		_mdb_unlock
 14054 ;; This function uses a non-reentrant model
 14055 ;;
 14056                           
 14057                           	psect	text91
 14058  0120A2                     __ptext91:
 14059                           	opt stack 0
 14060  0120A2                     _DAC1_Initialize:
 14061                           	opt stack 26
 14062                           
 14063                           ;dac1.c: 60: DAC1CON0 = 0x80;
 14064                           
 14065                           ;incstack = 0
 14066  0120A2  0E80               	movlw	128
 14067  0120A4  010F               	movlb	15	; () banked
 14068  0120A6  6F33               	movwf	51,b	;volatile
 14069                           
 14070                           ;dac1.c: 62: DAC1CON1 = 0x1C;
 14071  0120A8  0E1C               	movlw	28
 14072  0120AA  6F34               	movwf	52,b	;volatile
 14073                           
 14074                           ; BSR set to: 15
 14075  0120AC  0012               	return		;funcret
 14076  0120AE                     __end_of_DAC1_Initialize:
 14077                           	opt stack 0
 14078                           tblptru	equ	0xFF8
 14079                           tblptrh	equ	0xFF7
 14080                           tblptrl	equ	0xFF6
 14081                           tablat	equ	0xFF5
 14082                           prodh	equ	0xFF4
 14083                           prodl	equ	0xFF3
 14084                           intcon	equ	0xFF2
 14085                           postinc0	equ	0xFEE
 14086                           wreg	equ	0xFE8
 14087                           indf2	equ	0xFDF
 14088                           fsr2h	equ	0xFDA
 14089                           fsr2l	equ	0xFD9
 14090                           status	equ	0xFD8
 14091                           
 14092 ;; *************** function _CMP1_Initialize *****************
 14093 ;; Defined at:
 14094 ;;		line 57 in file "mcc_generated_files/cmp1.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;		None
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;		None
 14099 ;; Return value:  Size  Location     Type
 14100 ;;                  1    wreg      void 
 14101 ;; Registers used:
 14102 ;;		wreg, status,2
 14103 ;; Tracked objects:
 14104 ;;		On entry : 0/0
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14112 ;;Total ram usage:        0 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; Hardware stack levels required when called:    2
 14115 ;; This function calls:
 14116 ;;		Nothing
 14117 ;; This function is called by:
 14118 ;;		_SYSTEM_Initialize
 14119 ;;		_mdb_unlock
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text92
 14124  012024                     __ptext92:
 14125                           	opt stack 0
 14126  012024                     _CMP1_Initialize:
 14127                           	opt stack 26
 14128                           
 14129                           ;cmp1.c: 61: CM1CON0 = 0x90;
 14130                           
 14131                           ; BSR set to: 15
 14132                           ;incstack = 0
 14133  012024  0E90               	movlw	144
 14134  012026  010F               	movlb	15	; () banked
 14135  012028  6F39               	movwf	57,b	;volatile
 14136                           
 14137                           ;cmp1.c: 64: CM1CON1 = 0x00;
 14138  01202A  0E00               	movlw	0
 14139  01202C  6F3A               	movwf	58,b	;volatile
 14140                           
 14141                           ;cmp1.c: 67: CM1NCH = 0x00;
 14142  01202E  0E00               	movlw	0
 14143  012030  6F3B               	movwf	59,b	;volatile
 14144                           
 14145                           ;cmp1.c: 70: CM1PCH = 0x05;
 14146  012032  0E05               	movlw	5
 14147  012034  6F3C               	movwf	60,b	;volatile
 14148                           
 14149                           ; BSR set to: 15
 14150  012036  0012               	return		;funcret
 14151  012038                     __end_of_CMP1_Initialize:
 14152                           	opt stack 0
 14153                           tblptru	equ	0xFF8
 14154                           tblptrh	equ	0xFF7
 14155                           tblptrl	equ	0xFF6
 14156                           tablat	equ	0xFF5
 14157                           prodh	equ	0xFF4
 14158                           prodl	equ	0xFF3
 14159                           intcon	equ	0xFF2
 14160                           postinc0	equ	0xFEE
 14161                           wreg	equ	0xFE8
 14162                           indf2	equ	0xFDF
 14163                           fsr2h	equ	0xFDA
 14164                           fsr2l	equ	0xFD9
 14165                           status	equ	0xFD8
 14166                           
 14167 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 14168 ;; Defined at:
 14169 ;;		line 64 in file "mcc_generated_files/interrupt_manager.c"
 14170 ;; Parameters:    Size  Location     Type
 14171 ;;		None
 14172 ;; Auto vars:     Size  Location     Type
 14173 ;;		None
 14174 ;; Return value:  Size  Location     Type
 14175 ;;                  1    wreg      void 
 14176 ;; Registers used:
 14177 ;;		cstack
 14178 ;; Tracked objects:
 14179 ;;		On entry : 0/0
 14180 ;;		On exit  : 0/0
 14181 ;;		Unchanged: 0/0
 14182 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14185 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14186 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14187 ;;Total ram usage:       18 bytes
 14188 ;; Hardware stack levels used:    1
 14189 ;; Hardware stack levels required when called:    1
 14190 ;; This function calls:
 14191 ;;		_PIN_MANAGER_IOC
 14192 ;; This function is called by:
 14193 ;;		Interrupt level 2
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197                           	psect	intcode
 14198  000008                     __pintcode:
 14199                           	opt stack 0
 14200  000008                     _INTERRUPT_InterruptManagerHigh:
 14201                           	opt stack 18
 14202                           
 14203                           ; BSR set to: 15
 14204                           ;incstack = 0
 14205  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14206  00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 14207  00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 14208  000012  CFE9 F00D          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 14209  000016  CFEA F00E          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 14210  00001A  CFE1 F00F          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 14211  00001E  CFE2 F010          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 14212  000022  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 14213  000026  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 14214  00002A  CFF3 F013          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 14215  00002E  CFF4 F014          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 14216  000032  CFF6 F015          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 14217  000036  CFF7 F016          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 14218  00003A  CFF8 F017          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 14219  00003E  CFF5 F018          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 14220  000042  C04F  F019         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 14221  000046  C050  F01A         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 14222  00004A  C051  F01B         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 14223  00004E  C052  F01C         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 14224                           
 14225                           ;interrupt_manager.c: 67: if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 14226  000052  010E               	movlb	14	; () banked
 14227  000054  B9C2               	btfsc	194,4,b	;volatile
 14228                           
 14229                           ; BSR set to: 14
 14230  000056  A9CA               	btfss	202,4,b	;volatile
 14231  000058  D002               	goto	i2l189
 14232                           
 14233                           ; BSR set to: 14
 14234                           ;interrupt_manager.c: 68: {
 14235                           ;interrupt_manager.c: 69: PIN_MANAGER_IOC();
 14236  00005A  EC6D  F090         	call	_PIN_MANAGER_IOC	;wreg free
 14237  00005E                     i2l189:
 14238                           
 14239                           ;interrupt_manager.c: 71: else
 14240                           ;interrupt_manager.c: 72: {
 14241  00005E  C01C  F052         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 14242  000062  C01B  F051         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 14243  000066  C01A  F050         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 14244  00006A  C019  F04F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 14245  00006E  C018  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 14246  000072  C017  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 14247  000076  C016  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 14248  00007A  C015  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 14249  00007E  C014  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 14250  000082  C013  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 14251  000086  C012  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 14252  00008A  C011  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 14253  00008E  C010  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 14254  000092  C00F  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 14255  000096  C00E  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 14256  00009A  C00D  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 14257  00009E  C00C  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 14258  0000A2  C00B  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 14259  0000A6  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14260  0000A8  0011               	retfie		f
 14261  0000AA                     __end_of_INTERRUPT_InterruptManagerHigh:
 14262                           	opt stack 0
 14263                           pclatu	equ	0xFFB
 14264                           pclath	equ	0xFFA
 14265                           tblptru	equ	0xFF8
 14266                           tblptrh	equ	0xFF7
 14267                           tblptrl	equ	0xFF6
 14268                           tablat	equ	0xFF5
 14269                           prodh	equ	0xFF4
 14270                           prodl	equ	0xFF3
 14271                           intcon	equ	0xFF2
 14272                           postinc0	equ	0xFEE
 14273                           fsr0h	equ	0xFEA
 14274                           fsr0l	equ	0xFE9
 14275                           wreg	equ	0xFE8
 14276                           fsr1h	equ	0xFE2
 14277                           fsr1l	equ	0xFE1
 14278                           indf2	equ	0xFDF
 14279                           fsr2h	equ	0xFDA
 14280                           fsr2l	equ	0xFD9
 14281                           status	equ	0xFD8
 14282                           
 14283 ;; *************** function _PIN_MANAGER_IOC *****************
 14284 ;; Defined at:
 14285 ;;		line 111 in file "mcc_generated_files/pin_manager.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;		None
 14288 ;; Auto vars:     Size  Location     Type
 14289 ;;		None
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  1    wreg      void 
 14292 ;; Registers used:
 14293 ;;		None
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/0
 14296 ;;		On exit  : 0/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:    COMRAMh COMRAMl   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK1
      +0  BANK11  BANK12  BANK13  BANK14
 14299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14303 ;;Total ram usage:        0 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; This function calls:
 14306 ;;		Nothing
 14307 ;; This function is called by:
 14308 ;;		_INTERRUPT_InterruptManagerHigh
 14309 ;; This function uses a non-reentrant model
 14310 ;;
 14311                           
 14312                           	psect	text94
 14313  0120DA                     __ptext94:
 14314                           	opt stack 0
 14315  0120DA                     _PIN_MANAGER_IOC:
 14316                           	opt stack 18
 14317                           
 14318                           ;pin_manager.c: 115: PIR0bits.IOCIF = 0;
 14319                           
 14320                           ;incstack = 0
 14321  0120DA  010E               	movlb	14	; () banked
 14322  0120DC  99CA               	bcf	202,4,b	;volatile
 14323                           
 14324                           ; BSR set to: 14
 14325  0120DE  0012               	return		;funcret
 14326  0120E0                     __end_of_PIN_MANAGER_IOC:
 14327                           	opt stack 0
 14328                           pclatu	equ	0xFFB
 14329                           pclath	equ	0xFFA
 14330                           tblptru	equ	0xFF8
 14331                           tblptrh	equ	0xFF7
 14332                           tblptrl	equ	0xFF6
 14333                           tablat	equ	0xFF5
 14334                           prodh	equ	0xFF4
 14335                           prodl	equ	0xFF3
 14336                           intcon	equ	0xFF2
 14337                           postinc0	equ	0xFEE
 14338                           fsr0h	equ	0xFEA
 14339                           fsr0l	equ	0xFE9
 14340                           wreg	equ	0xFE8
 14341                           fsr1h	equ	0xFE2
 14342                           fsr1l	equ	0xFE1
 14343                           indf2	equ	0xFDF
 14344                           fsr2h	equ	0xFDA
 14345                           fsr2l	equ	0xFD9
 14346                           status	equ	0xFD8
 14347                           pclatu	equ	0xFFB
 14348                           pclath	equ	0xFFA
 14349                           tblptru	equ	0xFF8
 14350                           tblptrh	equ	0xFF7
 14351                           tblptrl	equ	0xFF6
 14352                           tablat	equ	0xFF5
 14353                           prodh	equ	0xFF4
 14354                           prodl	equ	0xFF3
 14355                           intcon	equ	0xFF2
 14356                           postinc0	equ	0xFEE
 14357                           fsr0h	equ	0xFEA
 14358                           fsr0l	equ	0xFE9
 14359                           wreg	equ	0xFE8
 14360                           fsr1h	equ	0xFE2
 14361                           fsr1l	equ	0xFE1
 14362                           indf2	equ	0xFDF
 14363                           fsr2h	equ	0xFDA
 14364                           fsr2l	equ	0xFD9
 14365                           status	equ	0xFD8
 14366                           
 14367                           	psect	rparam
 14368  0000                     pclatu	equ	0xFFB
 14369                           pclath	equ	0xFFA
 14370                           tblptru	equ	0xFF8
 14371                           tblptrh	equ	0xFF7
 14372                           tblptrl	equ	0xFF6
 14373                           tablat	equ	0xFF5
 14374                           prodh	equ	0xFF4
 14375                           prodl	equ	0xFF3
 14376                           intcon	equ	0xFF2
 14377                           postinc0	equ	0xFEE
 14378                           fsr0h	equ	0xFEA
 14379                           fsr0l	equ	0xFE9
 14380                           wreg	equ	0xFE8
 14381                           fsr1h	equ	0xFE2
 14382                           fsr1l	equ	0xFE1
 14383                           indf2	equ	0xFDF
 14384                           fsr2h	equ	0xFDA
 14385                           fsr2l	equ	0xFD9
 14386                           status	equ	0xFD8
 14387                           
 14388                           	psect	temp
 14389  00004F                     btemp:
 14390                           	opt stack 0
 14391  00004F                     	ds	1
 14392  0000                     int$flags	set	btemp
 14393  0000                     wtemp6	set	btemp+1
 14394                           pclatu	equ	0xFFB
 14395                           pclath	equ	0xFFA
 14396                           tblptru	equ	0xFF8
 14397                           tblptrh	equ	0xFF7
 14398                           tblptrl	equ	0xFF6
 14399                           tablat	equ	0xFF5
 14400                           prodh	equ	0xFF4
 14401                           prodl	equ	0xFF3
 14402                           intcon	equ	0xFF2
 14403                           postinc0	equ	0xFEE
 14404                           fsr0h	equ	0xFEA
 14405                           fsr0l	equ	0xFE9
 14406                           wreg	equ	0xFE8
 14407                           fsr1h	equ	0xFE2
 14408                           fsr1l	equ	0xFE1
 14409                           indf2	equ	0xFDF
 14410                           fsr2h	equ	0xFDA
 14411                           fsr2l	equ	0xFD9
 14412                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1361
    Data        1
    BSS         93
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          85     33      67
    COMRAMl           1      0       1
    BANK0           160     16      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    Read_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Write_NVstore@storemem	PTR unsigned char  size(2) Largest target is 3
		 -> pnvcash(COMRAMh[3]), pvcash(COMRAMh[2]), 

    Init_vendmem@chanlink	PTR unsigned char  size(2) Largest target is 1
		 -> chanlink1(BIGRAMl[1]), 

    lcd_string@lcdstring	PTR unsigned char  size(2) Largest target is 80
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), setnotes(CODE[69]), chanresetmsg(CODE[32]), chanlinkm(CODE[55]), 
		 -> vendtimem(CODE[41]), setimemsg(CODE[41]), vendsetup(CODE[80]), pricesetm2(CODE[57]), 
		 -> pricesetmsg(CODE[18]), creditclr(CODE[16]), dacmsg(CODE[13]), hoppcoin(CODE[51]), 
		 -> initnote(CODE[37]), noteerr(CODE[28]), credits(CODE[13]), timemsg(CODE[18]), 
		 -> clrline(CODE[21]), enabled(CODE[10]), disabled(CODE[10]), sensoffmsg(CODE[31]), 
		 -> sensmsg(CODE[11]), linkmsg(CODE[12]), chanmsg(CODE[12]), clrmsg(CODE[10]), 
		 -> onmsg(CODE[4]), offmsg(CODE[4]), servmsg(CODE[80]), inscoin(CODE[49]), 

    displ_note@notestring	PTR unsigned char  size(2) Largest target is 9
		 -> twohundredrand(CODE[8]), hundredrand(CODE[8]), fiftyrand(CODE[8]), twentyrand(CODE[8]), 
		 -> tenrand(CODE[9]), 


Critical Paths under _main in COMRAMh

    _vend_init->_lcd_string
    _mdb_init->_mdb_reset
    _mdb_security->_mdb_comm
    _mdb_reset->_mdb_comm
    _mdb_noten->_mdb_comm
    _mdb_poll->_mdb_comm
    _mdb_comm->_TMR1_Initialize
    _mdb_comm->_init_mdbdata
    _mdb_comm->_mdb_transmit
    _mdb_transmit->_EUSART1_Write
    _lcd_test->_lcd_writeC
    _hopper_test->_hopper_pay
    _hopper_pay->_Update_coinsout
    _Update_coinsout->_Write_NVstore
    _set_notes->_enable_notes
    _enable_notes->_displ_nendis
    _save_notes->_DATAEE_WriteByte
    _displ_nendis->_lcd_string
    _displ_note->_lcd_string
    _set_price->_displ_price
    _displ_price->_displ_hex
    _mdb_unlock->_TMR1_Initialize
    _mdb_unlock->_TMR3_Initialize
    _mdb_unlock->_TMR5_Initialize
    _Vend_timeset->_displ_time
    _displ_time->_displ_hex
    _off_sens->_displ_sflags
    _displ_sflags->_lcd_string
    _Reset_settings->_lcd_string
    _Init_vendmem->_DATAEE_ReadByte
    _Link_chan->_displ_lflags
    _displ_lflags->_lcd_string
    _Sensor_set->_displ_sens
    _displ_sens->_displ_hex
    _Hopper_coin->_Update_Hopcoin
    _butindb->_butin
    _Update_Hopcoin->_displ_hex
    _Clear_cred->_lcd_string
    _displ_noteer->_lcd_string
    _displ_code->_lcd_writeC
    _displ_credit->_displ_hex
    _lcd_string->_lcd_writeC
    _displ_hex->___ltdiv
    _lcd_writeC->_lcd_dispadd
    _lcd_dispadd->_lcd_write
    _lcd_write->_read_busy
    _credit_check->_DATAEE_ReadByte
    _credit_subtract->_DATAEE_WriteByte
    _credit_add->_Update_cashaudit
    _Update_cashaudit->_Write_NVstore
    _Write_NVstore->_DATAEE_WriteByte
    _Read_NVstore->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMh

    None.

Critical Paths under _main in COMRAMl

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAMl

    None.

Critical Paths under _main in BANK0

    _price_set->_set_price
    _displ_price->_displ_hex
    _Vend_settime->_Vend_timeset
    _displ_time->_displ_hex
    _Sens_off->_off_sens
    _Chan_link->_Link_chan
    _displ_sens->_displ_hex
    _Hopper_coin->_displ_hex
    _Update_Hopcoin->_displ_hex
    _displ_credit->_displ_hex

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  340006
               _CMP1_GetOutputStatus
                  _SYSTEM_Initialize
                         _credit_add
                    _credit_subtract
                       _displ_credit
                       _displ_noteer
                      _enter_service
                           _lcd_init
                         _lcd_string
                           _mdb_init
                           _mdb_poll
                          _vend_init
 ---------------------------------------------------------------------------------
 (1) _vend_init                                            0     0      0   19235
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                       _Init_vendmem
                       _credit_check
                         _lcd_string
                           _mdb_init
 ---------------------------------------------------------------------------------
 (2) _mdb_init                                             3     3      0    5198
                                             26 COMRAMh    3     3      0
                    _DATAEE_ReadByte
               _eusartmdb_Initialize
                           _mdb_comm
                          _mdb_noten
                          _mdb_reset
                       _mdb_security
 ---------------------------------------------------------------------------------
 (3) _mdb_security                                         0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_reset                                            3     3      0     924
                                             23 COMRAMh    3     3      0
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _mdb_noten                                            0     0      0     983
                       _init_mdbdata
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (3) _eusartmdb_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_SetOutput                                       1     1      0      22
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _mdb_poll                                             1     1      0     894
                                             23 COMRAMh    1     1      0
                    _TMR3_Initialize
                           _mdb_comm
 ---------------------------------------------------------------------------------
 (4) _mdb_comm                                             3     2      1     893
                                             20 COMRAMh    3     2      1
                       _EUSART1_Read
                    _TMR1_Initialize
                       _init_mdbdata
                             _mdb_on
                       _mdb_transmit
                          _mdb_waitr
 ---------------------------------------------------------------------------------
 (5) _mdb_waitr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mdb_transmit                                         1     1      0      44
                                             19 COMRAMh    1     1      0
                      _EUSART1_Write
                          _mdb_waitx
 ---------------------------------------------------------------------------------
 (6) _mdb_waitx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (5) _mdb_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _init_mdbdata                                         2     2      0      90
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    7212
                                              0 BANK0      2     2      0
                        _hopper_test
                         _lcd_clockE
                           _lcd_test
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_test                                             1     1      0     523
                                             25 COMRAMh    1     1      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _hopper_test                                          0     0      0    6525
                         _hopper_pay
 ---------------------------------------------------------------------------------
 (3) _hopper_pay                                           3     3      0    6525
                                             29 COMRAMh    3     3      0
                    _Update_coinsout
                           _pay_coin
 ---------------------------------------------------------------------------------
 (4) _pay_coin                                             0     0      0       0
                    _TMR2_Initialize
                    _TMR4_Initialize
                        _switch_read
 ---------------------------------------------------------------------------------
 (5) _switch_read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Update_coinsout                                      1     1      0    6423
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (1) _enter_service                                        0     0      0  259028
                              _Audit
                         _Clear_cred
                        _Hopper_coin
                         _Sensor_set
                         _Vend_setup
                            _butindb
                         _lcd_string
                         _mdb_unlock
                          _price_set
                          _set_notes
 ---------------------------------------------------------------------------------
 (2) _set_notes                                            0     0      0   42660
                            _butindb
                         _displ_note
                       _enable_notes
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _enable_notes                                         1     1      0   22621
                                             32 COMRAMh    1     1      0
                            _butindb
                       _displ_nendis
                         _lcd_string
                         _save_notes
 ---------------------------------------------------------------------------------
 (4) _save_notes                                           0     0      0    3007
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _displ_nendis                                         2     2      0    9677
                                             30 COMRAMh    2     2      0
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_note                                           2     0      2   10257
                                             30 COMRAMh    2     0      2
                         _lcd_string
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _price_set                                            0     0      0   27293
                       _Read_Service
                            _butindb
                         _lcd_string
                          _set_price
 ---------------------------------------------------------------------------------
 (3) _set_price                                            4     4      0   17477
                                             12 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                        _displ_price
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _displ_price                                          1     1      0    3010
                                             31 COMRAMh    1     1      0
                          _displ_hex
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (2) _mdb_unlock                                           1     1      0       0
                                             20 COMRAMh    1     1      0
                    _CMP1_Initialize
                    _DAC1_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _Vend_setup                                           0     0      0  112190
                          _Chan_link
                       _Init_vendmem
                     _Reset_settings
                           _Sens_off
                       _Vend_settime
                            _butindb
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _Vend_settime                                         0     0      0   37005
                       _Read_Service
                       _Vend_timeset
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _Vend_timeset                                         4     4      0   27084
                                             12 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                         _displ_time
                         _lcd_string
 ---------------------------------------------------------------------------------
 (5) _displ_time                                           2     1      1   12533
                                             31 COMRAMh    2     1      1
                          _displ_hex
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Sens_off                                             0     0      0   25659
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
                           _off_sens
 ---------------------------------------------------------------------------------
 (4) _off_sens                                             3     3      0   15738
                                              0 BANK0      3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _butindb
                       _displ_sflags
 ---------------------------------------------------------------------------------
 (5) _displ_sflags                                         3     1      2   10672
                                             30 COMRAMh    3     1      2
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Reset_settings                                       4     4      0   12687
                                             30 COMRAMh    2     2      0
                                              0 BANK0      2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Init_vendmem                                         5     5      0    1579
                                             20 COMRAMh    5     5      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _Chan_link                                            2     2      0   25478
                                              5 BANK0      2     2      0
                          _Link_chan
                       _Read_Service
                            _butindb
                        _get_channel
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _get_channel                                          2     2      0     105
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (4) _Link_chan                                            5     5      0   15557
                                              0 BANK0      5     5      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _Read_Service
                            _butindb
                       _displ_lflags
 ---------------------------------------------------------------------------------
 (5) _displ_lflags                                         3     2      1   10612
                                             30 COMRAMh    3     2      1
                        _lcd_dispadd
                         _lcd_string
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _Read_Service                                         1     1      0      34
                                             18 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (2) _Sensor_set                                           1     1      0   25403
                                             12 BANK0      1     1      0
                            _butindb
                         _displ_sens
                         _lcd_string
 ---------------------------------------------------------------------------------
 (3) _displ_sens                                           2     1      1   15494
                                             31 COMRAMh    2     1      1
               _CMP1_GetOutputStatus
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Hopper_coin                                          1     1      0   29081
                                             12 BANK0      1     1      0
                    _DATAEE_ReadByte
                     _Update_Hopcoin
                            _butindb
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (4) _butindb                                              4     4      0     170
                                             20 COMRAMh    4     4      0
                              _butin
 ---------------------------------------------------------------------------------
 (5) _butin                                                2     2      0      68
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (3) _Update_Hopcoin                                       2     1      1   15397
                                             31 COMRAMh    2     1      1
                   _DATAEE_WriteByte
                          _displ_hex
                        _lcd_dispadd
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Clear_cred                                           2     2      0   12619
                                             30 COMRAMh    2     2      0
                   _DATAEE_WriteByte
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _Audit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displ_noteer                                         0     0      0   10222
                         _displ_code
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _displ_code                                           3     3      0     610
                                             25 COMRAMh    3     3      0
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (1) _displ_credit                                         1     1      0   13220
                                             31 COMRAMh    1     1      0
                       _credit_check
                          _displ_hex
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           5     2      3    9612
                                             25 COMRAMh    5     2      3
                        _lcd_dispadd
                          _lcd_write
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (5) _displ_hex                                           15    12      3    2162
                                             28 COMRAMh    3     0      3
                                              0 BANK0     12    12      0
                            ___ltdiv
                            ___ltmod
                         _lcd_writeC
 ---------------------------------------------------------------------------------
 (3) _lcd_writeC                                           1     1      0     424
                                             24 COMRAMh    1     1      0
                        _lcd_dispadd
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_dispadd                                          2     2      0     229
                                             22 COMRAMh    2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            2     2      0     164
                                             20 COMRAMh    2     2      0
                         _lcd_clockE
                          _read_busy
 ---------------------------------------------------------------------------------
 (5) _read_busy                                            2     2      0      68
                                             18 COMRAMh    2     2      0
                         _lcd_clockH
                         _lcd_clockL
 ---------------------------------------------------------------------------------
 (6) _lcd_clockL                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _lcd_clockH                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _lcd_clockE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) ___ltmod                                              7     1      6     412
                                             18 COMRAMh    7     1      6
 ---------------------------------------------------------------------------------
 (6) ___ltdiv                                             10     4      6     421
                                             18 COMRAMh   10     4      6
 ---------------------------------------------------------------------------------
 (2) _credit_check                                         0     0      0    1412
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _credit_subtract                                      1     1      0    4450
                                             22 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _credit_add                                           1     1      0   10935
                                             29 COMRAMh    1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                   _Update_cashaudit
 ---------------------------------------------------------------------------------
 (2) _Update_cashaudit                                     1     1      0    6454
                                             28 COMRAMh    1     1      0
                       _Read_NVstore
                      _Write_NVstore
 ---------------------------------------------------------------------------------
 (5) _Write_NVstore                                        6     1      5    3978
                                             22 COMRAMh    6     1      5
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (6) _DATAEE_WriteByte                                     4     1      3    3007
                                             18 COMRAMh    4     1      3
 ---------------------------------------------------------------------------------
 (5) _Read_NVstore                                         6     1      5    2414
                                             20 COMRAMh    6     1      5
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2    1412
                                             18 COMRAMh    2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CMP1_Initialize
                    _DAC1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR5_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             18 COMRAMh    2     2      0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerHigh                     18    18      0       0
                                              0 COMRAMh   18    18      0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (13) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMP1_GetOutputStatus
   _SYSTEM_Initialize
     _CMP1_Initialize
     _DAC1_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
   _credit_add
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _Update_cashaudit
       _Read_NVstore
         _DATAEE_ReadByte
       _Write_NVstore
         _DATAEE_WriteByte
   _credit_subtract
     _DATAEE_ReadByte
     _DATAEE_WriteByte
   _displ_credit
     _credit_check
       _DATAEE_ReadByte
     _displ_hex
       ___ltdiv
       ___ltmod
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _displ_noteer
     _displ_code
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
   _enter_service
     _Audit
     _Clear_cred
       _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Hopper_coin
       _DATAEE_ReadByte
       _Update_Hopcoin
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _displ_hex
         ___ltdiv
         ___ltmod
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Sensor_set
       _butindb
         _butin
       _displ_sens
         _CMP1_GetOutputStatus
         _DATAEE_WriteByte
         _displ_hex
           ___ltdiv
           ___ltmod
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _Vend_setup
       _Chan_link
         _Link_chan
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _Read_Service
           _butindb
             _butin
           _displ_lflags
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Init_vendmem
         _DATAEE_ReadByte
       _Reset_settings
         _DATAEE_WriteByte
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _Sens_off
         _Read_Service
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _off_sens
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_sflags
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
       _Vend_settime
         _Read_Service
         _Vend_timeset
           _DATAEE_ReadByte
           _DATAEE_WriteByte
           _butindb
             _butin
           _displ_time
             _displ_hex
               ___ltdiv
               ___ltmod
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_string
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
               _lcd_writeC
                 _lcd_dispadd
                   _lcd_write
                     _lcd_clockE
                     _read_busy
                       _lcd_clockH
                       _lcd_clockL
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _butindb
           _butin
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
     _butindb
       _butin
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_unlock
       _CMP1_Initialize
       _DAC1_Initialize
       _TMR1_Initialize
       _TMR3_Initialize
       _TMR5_Initialize
     _price_set
       _Read_Service
       _butindb
         _butin
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
       _set_price
         _DATAEE_ReadByte
         _DATAEE_WriteByte
         _butindb
           _butin
         _displ_price
           _displ_hex
             ___ltdiv
             ___ltmod
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _get_channel
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
     _set_notes
       _butindb
         _butin
       _displ_note
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _enable_notes
         _butindb
           _butin
         _displ_nendis
           _lcd_string
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
             _lcd_writeC
               _lcd_dispadd
                 _lcd_write
                   _lcd_clockE
                   _read_busy
                     _lcd_clockH
                     _lcd_clockL
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
         _lcd_string
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
           _lcd_writeC
             _lcd_dispadd
               _lcd_write
                 _lcd_clockE
                 _read_busy
                   _lcd_clockH
                   _lcd_clockL
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
         _save_notes
           _DATAEE_WriteByte
       _lcd_string
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
         _lcd_writeC
           _lcd_dispadd
             _lcd_write
               _lcd_clockE
               _read_busy
                 _lcd_clockH
                 _lcd_clockL
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
   _lcd_init
     _hopper_test
       _hopper_pay
         _Update_coinsout
           _Read_NVstore
             _DATAEE_ReadByte
           _Write_NVstore
             _DATAEE_WriteByte
         _pay_coin
           _TMR2_Initialize
           _TMR4_Initialize
           _switch_read
     _lcd_clockE
     _lcd_test
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
   _lcd_string
     _lcd_dispadd
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
     _lcd_write
       _lcd_clockE
       _read_busy
         _lcd_clockH
         _lcd_clockL
     _lcd_writeC
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
   _mdb_init
     _DATAEE_ReadByte
     _eusartmdb_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
     _mdb_noten
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_reset
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
     _mdb_security
       _init_mdbdata
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
   _mdb_poll
     _TMR3_Initialize
     _mdb_comm
       _EUSART1_Read
       _TMR1_Initialize
       _init_mdbdata
       _mdb_on
       _mdb_transmit
         _EUSART1_Write
         _mdb_waitx
       _mdb_waitr
   _vend_init
     _DAC1_SetOutput
     _DATAEE_ReadByte
     _Init_vendmem
       _DATAEE_ReadByte
     _credit_check
       _DATAEE_ReadByte
     _lcd_string
       _lcd_dispadd
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
       _lcd_write
         _lcd_clockE
         _read_busy
           _lcd_clockH
           _lcd_clockL
       _lcd_writeC
         _lcd_dispadd
           _lcd_write
             _lcd_clockE
             _read_busy
               _lcd_clockH
               _lcd_clockL
         _lcd_write
           _lcd_clockE
           _read_busy
             _lcd_clockH
             _lcd_clockL
     _mdb_init
       _DATAEE_ReadByte
       _eusartmdb_Initialize
       _mdb_comm
         _EUSART1_Read
         _TMR1_Initialize
         _init_mdbdata
         _mdb_on
         _mdb_transmit
           _EUSART1_Write
           _mdb_waitx
         _mdb_waitr
       _mdb_noten
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_reset
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr
       _mdb_security
         _init_mdbdata
         _mdb_comm
           _EUSART1_Read
           _TMR1_Initialize
           _init_mdbdata
           _mdb_on
           _mdb_transmit
             _EUSART1_Write
             _mdb_waitx
           _mdb_waitr

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            E7D      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      33        0.0%
BANK13             100      0       0      34        0.0%
BITBANK12          100      0       0      31        0.0%
BANK12             100      0       0      32        0.0%
BITBANK11          100      0       0      29        0.0%
BANK11             100      0       0      30        0.0%
BITBANK10          100      0       0      27        0.0%
BANK10             100      0       0      28        0.0%
BITBANK9           100      0       0      24        0.0%
BANK9              100      0       0      25        0.0%
BITBANK8           100      0       0      22        0.0%
BANK8              100      0       0      23        0.0%
BITBANK7           100      0       0      20        0.0%
BANK7              100      0       0      21        0.0%
BITBANK6           100      0       0      18        0.0%
BANK6              100      0       0      19        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      17        0.0%
BITBANK4           100      0       0      14        0.0%
BANK4              100      0       0      15        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0      13        0.0%
BITBANK2           100      0       0      10        0.0%
BANK2              100      0       0      11        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       9        0.0%
BITBANK0            A0      0       0       6        0.0%
BANK0               A0     10      54       7       52.5%
BITBANK14           88      0       0      35        0.0%
BANK14              88      0       0      36        0.0%
COMRAMh             55     21      43       2       78.8%
BITCOMRAMh          55      0       0       0        0.0%
BIGRAMl              2      0       0      38        0.0%
BITCOMRAMl           1      0       0       1        0.0%
COMRAMl              1      0       1       3      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98      26        0.0%
DATA                 0      0      98       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Mar 22 12:23:50 2018

                       lcd_writeC@lcdata 0023                             ?_displ_price 000B  
                            __CFG_CP$OFF 000000                        ??_CMP1_Initialize 001D  
                                     l91 2046                            ?_displ_credit 0000  
                          ?_displ_lflags 0029                            ?_displ_nendis 000B  
                          ?_displ_sflags 0029                          lcd_write@lcdata 0020  
                          ?_displ_noteer 0000                              __CFG_LVP$ON 000000  
                                    LATE 000F87                          _DAC1_Initialize 20A2  
                                    l245 1BAE                                      l991 0B58  
                                    l994 0B98                                      l995 0BAA  
                                    l998 0C04                                      l999 0BFC  
                                    _PR2 000FBC                                      _PR4 000FB6  
                           __CFG_CPD$OFF 000000                          _timer1ReloadVal 00B2  
                __size_of_PMD_Initialize 001C                       get_channel@channel 001D  
                        _TMR2_Initialize 1F14                                      prod 000FF3  
                                    wreg 000FE8                         ??_Update_Hopcoin 002B  
                         _DAC1_SetOutput 20AE                           ??_credit_check 001F  
                           _BAUD1CONbits 000F9F                             __CFG_ZCD$OFF 000000  
                          ?_mdb_security 0000                                     l1000 0BE0  
                                   l1001 0BC8                                     l1003 0BCE  
                                   l1020 10D4                                     l1021 1076  
                                   l1022 107C                                     l1006 0BD4  
                                   l1023 1082                                     l1024 1088  
                                   l1008 0BDA                                     l1025 1090  
                                   l1017 1068                                     l2010 1DAC  
                                   l1018 10A2                                     l1026 1096  
                                   l1027 109C                                     l1019 1070  
                                   l2100 02D0                                     l2101 02F4  
                                   l2030 07B2                                     l2040 1314  
                                   l2024 080C                                     l2120 0528  
                                   l2041 131E                                     l2009 1DB2  
                                   l2025 078E                                     l2026 07D8  
                                   l2035 1332                                     l2043 1322  
                                   l2027 0796                                     l2115 04A4  
                                   l2107 19CC                                     l1500 0EB2  
                                   l2036 130A                                     l2028 07EC  
                                   l2060 08E4                                     l2116 052C  
                                   l2108 19E2                                     l2029 07A4  
                                   l2117 04AC                                     l2109 19EC  
                                   l2046 132E                                     l2054 086A  
                                   l2134 0C52                                     l2126 17AA  
                                   l2118 0540                                     l2070 13DE  
                                   l2039 1348                                     l2055 08C0  
                                   l2127 17DA                                     l2119 04EA  
                                   l2071 13E8                                     l1520 1744  
                                   l1440 152E                                     l2056 0872  
                                   l2136 0C74                                     l2128 17E4  
                                   l1521 175A                                     l2057 08D4  
                                   l1506 0F14                                     l2058 0888  
                                   l2138 0CB8                                     l2154 0924  
                                   l2146 1A1A                                     l1507 0F1C  
                                   l2059 089E                                     l2139 0CB6  
                                   l1451 0E12                                     l2155 09A6  
                                   l2147 1A30                                     l2083 0166  
                        _timer3ReloadVal 00B0                                     l1508 0F72  
                                   l1444 1278                                     l2076 1F42  
                                   l2164 0FEC                                     l2156 092C  
                                   l2148 1A3A                                     l2084 021E  
                                   l1517 1770                                     l1509 0F22  
                                   l1445 1258                                     l2077 1F3A  
                                   l2165 0FD6                                     l2157 09BA  
                                   l2085 0170                                     l2069 13CC  
                                   l1518 172E                                     l1446 1270  
                                   l2158 0968                                     l2094 025C  
                                   l2086 0234                                     l1462 1D8E  
                                   l1519 1784                                     l1439 151E  
                                   l2159 09A2                                     l2095 031A  
                                   l2087 01A6                                     l1535 1FE8  
                                   l1472 038E                                     l2096 0264  
                                   l2088 01DE                                     l4041 1676  
                                   l1529 1DDE                                     l1473 035E  
                                   l2097 033A                                     l4042 166C  
                                   l1482 040E                                     l1474 03C4  
                                   l2098 0288                                     l4051 196A  
                                   l1483 03DE                                     l1475 0366  
                                   l2099 02AC                                     l4052 1960  
                                   l1476 036E                                     l4045 16A0  
                                   l1485 03E6                                     l1477 0376  
                                   l4046 16AC                                     l1486 03EE  
                                   l1478 037E                                     l4055 198A  
                                   l1487 03F6                                     l1479 0386  
                                   l2711 0062                                     l4056 1996  
                                   l1496 0EA6                                     l1488 03FE  
                                   l2712 0030                                     l1497 0E48  
                                   l1489 0406                                     l2721 00C8  
                                   l2730 00AA                                     l2722 0084  
                                   l2714 0038                                     l1499 0ECC  
                                   l2731 00AE                                     l2723 008C  
                                   l2715 0040                                     l2740 059A  
                                   l2732 00B2                                     l2724 011C  
                                   l2716 0048                                     l3621 2020  
                                   l2741 056A                                     l2733 00B6  
                                   l2725 0090                                     l2717 0050  
                                   l2734 00BA                                     l2726 0094  
                                   l2718 0058                                     l2671 072C  
                                   l2735 00BE                                     l2727 009E  
                                   l2680 06DE                                     l2672 0664  
                                   l2656 1E98                                     l2744 05C0  
                                   l2736 00C2                                     l2728 00A2  
                                   l2664 129E                                     l2673 0700  
                                   l3633 1610                                     l2753 0638  
                                   l2745 05F2                                     l2729 00A6  
                                   l2665 1284                                     l2690 1480  
                                   l2674 0670                                     l3626 1AFC  
                                   l2746 05C8                                     l2691 1432  
                                   l2675 0726                                     l3651 1632  
                                   l3635 15F2                                     l3627 1AD4  
                                   l1972 15DC                                     l2692 1446  
                                   l2676 0686                                     l3644 1614  
                                   l3628 1AF8                                     l1973 15B8  
                                   l2677 069C                                     l1990 1D40  
                                   l2678 06B2                                     l1983 1E80  
                                   l2687 1418                                     l2679 06C8  
                                   l3655 164C                                     l3639 160C  
                                   l1984 1E68                                     l2688 146C  
                                   l3648 162E                                     l2689 1420  
                                   l1978 11EC                                     l1989 1D64  
                                   l1998 189C                                     l6342 206C  
                                   l6554 1E90                                     l8770 0CD4  
                                   _LATA 000F83                                     _LATB 000F84  
                                   _LATC 000F85                                     _LATD 000F86  
                                   _LATE 000F87                                     u3220 0CF8  
                                   u1640 2080                                     u2610 167A  
                                   u1810 0606                                     _T2PR 000FBC  
                                   u1900 1624                                     u1646 2082  
                                   u3407 0D66                                     u2640 196E  
                                   u2800 2090                                     u1760 05A0  
                                   u3417 09C6                                     u1825 0610  
                                   u1930 1642                                     _T4PR 000FB6  
                                   u3427 1034                                     u1827 0612  
                                   u3437 17CC                                     u1870 1602  
                                   u1790 05FC                                     u3447 1DC2  
                                   u1775 05EA                                     u3457 1A4A  
                                   u1777 05EC                                     u3377 16C4  
                                   u2930 131A                                     u2675 1BBC  
                                   u3467 1A6E                                     u3387 0CEA  
                                   u2676 1BBE                                     _PMD0 000EE1  
                                   u3477 18EC                                     u3397 0CFA  
                                   _PMD1 000EE2                                     u2870 0CC2  
                                   _PMD2 000EE3                                     _PMD3 000EE4  
                                   _PMD4 000EE5                                     _PMD5 000EE6  
                                   _TMR2 000FBB                                     _TMR4 000FB5  
          __size_of_eusartmdb_Initialize 0016                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                          _EUSART1_Write 206A                            __CFG_FCMEN$ON 000000  
                                   _cash 003A                                     _dest 0095  
                                   _main 0B4C                                     _exit FC26  
                          ?_EUSART1_Read 000B                            ?_mdb_transmit 0000  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004F  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 00AA                          _timer5ReloadVal 00AE  
                   __end_of_chanresetmsg FEEE                               _Clear_cred 18A4  
                        _TMR3_Initialize 1C9A                   __size_of_enter_service 0096  
                          __CFG_CSWEN$ON 000000                             ___param_bank 000000  
                          __CFG_SCANE$ON 000000                              _switch_read 2078  
                         ??_displ_credit 002A                __size_of_DATAEE_WriteByte 003A  
                         ??_displ_lflags 002A                  __end_of_TMR0_Initialize 1E62  
                         ??_displ_nendis 0029                           ??_displ_sflags 002B  
         __size_of_OSCILLATOR_Initialize 0018                           ??_displ_noteer 0029  
                          ?_Read_NVstore 001F            __end_of_OSCILLATOR_Initialize 1FCE  
                                  ?_main 000B                            __CFG_WDTE$OFF 000000  
                                  _T1CLK 000FD2                                    _T1CON 000FCF  
                                  _T3CLK 000FCC                                    _T2CON 000FBD  
                                  _LATA6 007C1E                                    _T3CON 000FC9  
                                  _LATA7 007C1F                                    _CMOUT 000F3D  
                                  _T5CLK 000FC6                                    _T4CON 000FB7  
                                  _T2HLT 000FBE                                    _T5CON 000FC3  
                        __end_of___ltdiv 16BA                                    _T4HLT 000FB8  
                         __CFG_DEBUG$OFF 000000                          __end_of___ltmod 19A4  
                                  _T2TMR 000FBB                                    _T2RST 000FC0  
                                  _T4TMR 000FB5                                    _T4RST 000FBA  
                 __end_of_DAC1_SetOutput 20B6                                    i2l189 005E  
                                  _OSCEN 000EDC                   __size_of_Write_NVstore 0028  
                                  _TMR0H 000FD4                                    _TMR1H 000FCE  
                        __end_of_cc_poll FC6A                                    _TMR0L 000FD3  
                                  _TMR1L 000FCD                                    _TMR3H 000FC8  
                                  _TMR3L 000FC7                                    _TMR5H 000FC2  
                                  _TMR5L 000FC1                                    _PORTA 000F8D  
                        __end_of_cc_test FC75                                    _PORTD 000F90  
                        __end_of_cc_stop FC70                                    _TRISA 000F88  
                                  _TRISB 000F89                                    _TRISC 000F8A  
                                  _TRISD 000F8B                                    _TRISE 000F8C  
                        __end_of_chanmsg FF98                            ?_Read_Service 000B  
                        __end_of_cashint FC5F                          __end_of_cashinv FC61  
                     off_sens@senseflags 009E                                    _Audit 20E4  
                          __CFG_WRT0$OFF 000000                          _TMR4_Initialize 1F4E  
                          __CFG_WRT1$OFF 000000                           __pidataCOMRAMh 20E6  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                          __CFG_WRT4$OFF 000000                            __CFG_WRT5$OFF 000000  
                          __CFG_WRT6$OFF 000000                            __CFG_WRT7$OFF 000000  
                        __end_of_enabled FFCD                           __CFG_EBTR0$OFF 000000  
                      lcd_write@savelatd 001F                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                        __end_of_credclr FB7B                           __CFG_EBTR4$OFF 000000  
                        __end_of_credmem FC63                           __CFG_EBTR5$OFF 000000  
                        __end_of_credits FF8C                           __CFG_EBTR6$OFF 000000  
                         __CFG_EBTR7$OFF 000000                          __end_of_clrline FF3E  
                        __end_of_dispclr FC9A                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                          __end_of_dispoff FC93  
                          __CFG_WRTD$OFF 000000                            ??_Hopper_coin 002C  
                                  _bflag 0046                          _DATAEE_ReadByte 1F9E  
                         __CFG_EBTRB$OFF 000000                           ??_mdb_security 0022  
                __end_of_PIN_MANAGER_IOC 20E0                          __end_of_butindb 1DD2  
                        __end_of_dsphome FC98                                    _line1 FC8F  
                                  _line2 FC8E                                    _line3 FC8D  
                                  _line4 FC8C                                    _count 004C  
                                  _butin 1A40                          __end_of_mastadd FC77  
                        __end_of_hopcoin FC51                          __end_of_inithop FBE4  
                                  _vcash 0090                          __end_of_inscoin FE57  
                                  _onmsg FFFA                       __CFG_MCLRE$EXTMCLR 000000  
                        __end_of_linkmsg FFA4                          __end_of_second1 FC69  
                         ?_EUSART1_Write 000B                  __end_of_TMR1_Initialize 1D06  
                          ?_Init_vendmem 000B                                    pclath 000FFA  
                                  tablat 000FF5                          __end_of_noteerr FF29  
                           ?_hopper_test 0000                          __end_of_tenrand FFD6  
                        __end_of_sensmsg FFAF                          __end_of_sensval FC55  
                        __end_of_timemsg FF50                          __end_of_servmsg FCEE  
                         ??_EUSART1_Read 001D                           ??_mdb_transmit 001E  
                                  status 000FD8                                    wtemp6 0050  
                      ??_Update_coinsout 0027                           _Reset_settings 0F9E  
                        _TMR5_Initialize 1C64             __end_of_CMP1_GetOutputStatus 2094  
                        __initialization 1BF8                              butin@butons 001E  
             __end_of_EUSART1_Initialize 2010                             __end_of_main 0C0E  
                __end_of_DAC1_Initialize 20AE                             __end_of_exit FC2B  
                     __size_of_Chan_link 0062                      displ_time@motortime 002B  
                __end_of_TMR2_Initialize 1F32                           ??_Read_NVstore 0024  
                                 ??_main 002C                            __activetblptr 000003  
                        ?_DAC1_SetOutput 000B                     __end_of_enable_notes 1486  
                         ??_Read_Service 001D                              butindb@butt 0022  
                       __end_of_Sens_off 1A40                                   ?_Audit 0000  
                          _enter_service 1044                                   ?_butin 0000  
                                 _CM1NCH 000F3B                                   _CM1PCH 000F3C  
                         ??_Init_vendmem 001F                                   _ANSELA 000F11  
                                 _ANSELB 000F19                                   _ANSELC 000F21  
                                 _ANSELD 000F26                                   _ANSELE 000F2E  
                                 _T0CON0 000FD5                                   _T0CON1 000FD6  
                                 _T1GATE 000FD1                                   _T1GCON 000FD0  
                                 _T3GATE 000FCB                                   _T3GCON 000FCA  
                                 _T5GATE 000FC5                                   _T5GCON 000FC4  
                                 _RC1REG 000F99                                   _RC1STA 000F9D  
                                 _RB5PPS 000EF4                                   _ODCONA 000F0F  
                                 _ODCONB 000F17                                   _ODCONC 000F1F  
                                 _RC6PPS 000EFD                                   _ODCOND 000F24  
                                 _ODCONE 000F2C                 __size_of_credit_subtract 0056  
                       credit_add@credit 0028                  __end_of_TMR3_Initialize 1CD0  
                         __CFG_WDTCCS$SC 000000                                   _TABLAT 000FF5  
                          ?_init_mdbdata 000B                         __end_of_cc_level FC6F  
                                 _OSCFRQ 000EDE                                   _NVMDAT 000F80  
                       __end_of_cc_reset FC76                                   _TX1REG 000F9A  
                                 _TX1STA 000F9E                      __end_of_Hopper_coin 0812  
                 __end_of_Reset_settings 1044                            _Write_NVstore 1E62  
                     __size_of_Link_chan 00BA                         __end_of_cashoutv FC53  
                            ?_Clear_cred 0000                           __CFG_PWRTE$OFF 000000  
                DAC1_SetOutput@inputData 001D                     __size_of_get_channel 001C  
                         __CFG_XINST$OFF 000000                         __end_of_disabled FFC3  
                   __size_of_lcd_dispadd 0018                         __end_of_auditmsg FC1E  
                       __end_of_dispaddr FC99                         __end_of_lcd_init 0D7E  
                       __end_of_lcd_test 1FFA                         __end_of_mdb_comm 0640  
                       __end_of_mdb_init 1722                         __end_of_mdb_poll 0122  
                   __end_of_credit_check 1EF4                                   _cc_pay FC71  
                                 _cc_pin FC6D                                   _dacmsg FF72  
                         __CFG_STVREN$ON 000000                                   _change 0092  
                      ?_Update_cashaudit 000B                               _Sensor_set 0812  
                          displ_nendis@x 002A                                ??___ltdiv 0023  
                        mdb_reset@i_3716 0024                                ??___ltmod 0023  
                                 _credit 003B                                   _lcdata 0045  
                                 _clrmsg FFAF                                   _dispon FC9A  
                                 _mdb_on 20E0                                   _dispsl FC90  
                             _Vend_setup 023A                                   _dispsr FC91  
                                 _ercode 0043                                   _hexnum 008B  
                                 _hopadd FC77                         __end_of_off_sens 09C0  
                       ?_TMR0_Initialize 0000                  __end_of_TMR4_Initialize 1F6A  
                                 _mcount 0041                                   _offmsg FFF6  
                                 clear_0 1C10                                   clear_1 1C1C  
                     ??_Update_cashaudit 0027                         __end_of_hoperror FC2D  
                       __end_of_hoppcoin FE26                         __end_of_initnote FECE  
                                 _nvcash 0088                                   _noteen 003D  
                                 _senset FBF4                                   _pvcash 004A  
                       __end_of_pay_coin 1650                                   _slvadd 0098  
                       __end_of_nochange FBF4                     __size_of_displ_price 0040  
                                 _stradd 0044                                   _tvends 0080  
                      read_busy@savelatd 001E                        read_busy@savelate 001D  
                __end_of_DATAEE_ReadByte 1FB6                         __end_of_second_5 FC67  
                              ??_butindb 001F                           _PMD_Initialize 1F6A  
                         ?_enter_service 0000                         __end_of_notebits FC57  
                       __end_of_pricemsg FC26                         __end_of_notetest FC11  
                           __mediumconst FAAC                         __end_of_setnotes FD83  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                       __end_of_vendtest FBBA                                   tblptru 000FF8  
                   Update_Hopcoin@newval 002B                          ??_EUSART1_Write 001D  
                       ?_PIN_MANAGER_IOC 000B                        __end_of_Chan_link 17EA  
          __size_of_INTERRUPT_Initialize 0008                           ??_init_mdbdata 001D  
                   __end_of_displ_credit 1D3A                         ?_TMR1_Initialize 0000  
                __end_of_TMR5_Initialize 1C9A                     __end_of_displ_lflags 1280  
                      displ_lflags@lchan 002B         ??_INTERRUPT_InterruptManagerHigh 000B  
        ?_INTERRUPT_InterruptManagerHigh 000B                        _SYSTEM_Initialize 1C2E  
                   __end_of_displ_nendis 1DA0                      Vend_timeset@channel 00AB  
                             __accesstop 0060                  __end_of__initialization 1C24  
                   __end_of_displ_sflags 0E34                     __end_of_displ_noteer 1E34  
             Reset_settings@chanlinkbits 009C                           ?_Write_NVstore 0021  
                  __end_of_note_features FC85                          _CMP1_Initialize 2024  
                        ?_Reset_settings 0000                       ?_SYSTEM_Initialize 000B  
                  __end_of_theft_attempt FC79                             __pbssCOMRAMh 002C  
                          ___rparam_used 000001                             __pbssCOMRAMl 004E  
                          __end_of_Audit 20E6                      ??_SYSTEM_Initialize 001F  
                       ?_DAC1_Initialize 0000                     __end_of_mdb_security 1F14  
                       _DATAEE_WriteByte 1B86                            __end_of_line1 FC90  
                          __end_of_line2 FC8F                            __end_of_line3 FC8E  
                          __end_of_line4 FC8D                            __end_of_butin 1A8A  
                          __end_of_onmsg FFFE                    __end_of_note_rejected FC7A  
                       ?_TMR2_Initialize 0000                    __end_of_note_security FC8A  
                 __end_of_PMD_Initialize 1F86                     __end_of_EUSART1_Read 204A  
                   __end_of_mdb_transmit 206A                               _cc_countrq FC70  
                      __end_of_Link_chan 0CC8                             _chanresetmsg FECE  
                                ??_Audit 001D                      __size_of_Clear_cred 0056  
                   _CMP1_GetOutputStatus 2086                           Write_NVstore@i 0026  
                     __size_of_displ_hex 00B6                              _Hopper_coin 0732  
                     __size_of_lcd_write 0032                                  ??_butin 001D  
              __end_of_SYSTEM_Initialize 1C64                       __size_of_mdb_reset 0086  
                     __size_of_mdb_noten 003A                       __size_of_mdb_waitr 0006  
                     __size_of_mdb_waitx 0006                               __pbssBANK0 0060  
                    displ_hex@hexnumsave 00A4                         ?_TMR3_Initialize 0000  
                   __end_of_Read_NVstore 1D6E                     displ_price@vendprice 002A  
                          _chan1linkbits FC4D                     __size_of_hopper_test 0014  
                          _chan2linkbits FC4B                       __size_of_read_busy 0042  
                   __end_of_Read_Service 205C                        ??_credit_subtract 0021  
                          _chan3linkbits FC49                                ?_Sens_off 0000  
                          _chan4linkbits FC47                             ?_switch_read 0000  
                          _chan5linkbits FC45                              ?_Sensor_set 0000  
           __end_of_eusartmdb_Initialize 1FE4                              ?_Vend_setup 0000  
                          _chan6linkbits FC43                    __size_of_enable_notes 007A  
                                ?_mdb_on 0000                                  _CM1CON0 000F39  
                                _CM1CON1 000F3A                     __end_of_Init_vendmem 15E4  
                          _chan7linkbits FC41                         ?_TMR4_Initialize 0000  
                        ?_PMD_Initialize 0000                            _chan8linkbits FC3F  
                        ??_enter_service 002C                       __size_of_set_price 0118  
                     __size_of_set_notes 00F2                       __size_of_price_set 0080  
                       ?_DATAEE_ReadByte 001D                       __size_of_vend_init 008A  
                  displ_nendis@note2disp 0029                               _credit_add 184A  
                      __end_of_cc_adpoll FC6B                               _lcd_clockE 2094  
                             _lcd_clockH 20BE                               _lcd_clockL 20B6  
                      __end_of_cc_enable FC74                                  _SP1BRGH 000F9C  
                                _SP1BRGL 000F9B                               _lcdaddress 0099  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                        _Update_coinsout 17EA                                  _TBLPTRH 000FF7  
                      __end_of_chan1time FC3D                                  _TBLPTRL 000FF6  
                                _TBLPTRU 000FF8                        __end_of_chan2time FC3B  
                  ?_CMP1_GetOutputStatus 000B                        __end_of_chan3time FC39  
                      __end_of_chan4time FC37                          off_sens@chanbit 009D  
                      __end_of_chan5time FC35                        __end_of_chan6time FC33  
                                _NVMADRH 000F7F                          off_sens@channel 009C  
                                _NVMADRL 000F7E                               _jammed_err FC7F  
                      __end_of_chan7time FC31                                  _OSCTUNE 000EDD  
                      __end_of_chan8time FC2F                                  _NVMCON2 000F82  
                      __end_of_cc_newpin FC6D                        __end_of_cc_serial FC6C  
                             _displ_code 0340                                  _PPSLOCK 000EA0  
                             _displ_note 1BC0                               _displ_sens 1500  
                             _displ_time 10DA                  __end_of_CMP1_Initialize 2038  
                      __end_of_cc_status FC73                               _lcd_string 0EEA  
                             _dispcursor FC95                               _lcd_writeC 1722  
                              ?_lcd_init 0000                            ?_Vend_timeset 0000  
                          ?_Vend_settime 0000                                ?_lcd_test 0000  
                              ?_mdb_comm 001F                                ?_mdb_init 0000  
                             _dispshleft FC93                               _dispnormal FC96  
                              ?_mdb_poll 0000                          ??_Write_NVstore 0026  
                             _mdb_unlock 09C0                        __end_of_chanlinkm FDF3  
                       ?_TMR5_Initialize 0000                     DATAEE_WriteByte@bAdd 001D  
                              ?_off_sens 0000                           displ_hex@value 009C  
                  __size_of_credit_check 0022                                ?_pay_coin 0000  
                       hopper_pay@change 0029                             _enable_notes 140C  
                                __Hparam 0000                                  __Lparam 0000  
                             ??_Sens_off 002C               __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                      __end_of_creditclr FF72                           mdb_comm@mcount 001F  
                      __end_of_displ_hex 0EEA                        __end_of_dispfunc1 FC9E  
                      __end_of_dispfunc2 FC9D                        __end_of_dispfunc3 FC9C  
                      __end_of_lcd_write 1E04                        __end_of_fiftyrand FFEE  
                         mdb_comm@slvadd 0020                                  ___ltdiv 1650  
                      __end_of_mdb_reset 1306                        __end_of_mdb_noten 1B86  
                                ___ltmod 1950                        __end_of_mdb_waitr 20D4  
                       ??_DAC1_SetOutput 001D                        __end_of_mdb_waitx 20DA  
                                _cc_poll FC69                                  _cc_test FC74  
                                _cc_stop FC6F                          __size_of_mdb_on 0004  
                                _dbcount 0032                         set_price@channel 00AB  
                                __pcinit 1BF8                                  _chanmsg FF8C  
                                _cashint FC5D                     __end_of_init_mdbdata 1EB0  
                                _cashinv FC5F                                  __ramtop 0F00  
                                _chkbyte 003F                                  _enabled FFC3  
                             _errorflags 0097                                  __ptext0 0B4C  
                                __ptext1 116C                                  __ptext2 16BA  
                                __ptext3 1EF4                                  __ptext4 1280  
                                __ptext5 1B4C                                  __ptext6 1FCE  
                                __ptext7 20AE                                  __ptext8 0000  
                                __ptext9 0546                                  _credclr FB51  
                                _credmem FC61                                  _credits FF7F  
                                _command 0093                                  _clrline FF29  
                                _dispclr FC99                                  _dispoff FC92  
                                _mdbdata 0060                                  _lcdfunc 009B  
                                _lcdline 009A                                _T1CONbits 000FCF  
                             _hopper_pay 1ACC                                  _butindb 1DA0  
                                _dsphome FC97                    _OSCILLATOR_Initialize 1FB6  
                              _T2CONbits 000FBD                                  _mastadd FC76  
                                _hopcoin FC4F                         set_price@buttons 00AA  
                                _buttons 0039                                  _inithop FBD0  
                              _T3CONbits 000FC9                                  _inscoin FE26  
                                _linkmsg FF98                                _CMOUTbits 000F3D  
                      __end_of_read_busy 1ACC                                  _second1 FC67  
                              _T4CONbits 000FB7                       _EUSART1_Initialize 1FFA  
               ??_PIN_MANAGER_Initialize 001D                                _T2HLTbits 000FBE  
                  __size_of_displ_credit 0034                                _T5CONbits 000FC3  
                                _nobytes 0094                                  _senschk 0035  
                                _noteerr FF0D                    __size_of_displ_lflags 008A  
                                _tenrand FFCD                                  _notenum 004D  
                                _sensmsg FFA4                                  _sensval FC53  
                                _senspos 0036                                _T4HLTbits 000FB8  
                  __size_of_displ_nendis 0032                                  _pnvcash 0047  
                                _venderr 0034                                  _timemsg FF3E  
                                _servmsg FC9E                    __size_of_displ_sflags 00B6  
                         ??_Vend_timeset 00A8                           ??_Vend_settime 002C  
                  __size_of_displ_noteer 0030               __size_of_SYSTEM_Initialize 0036  
                           _credit_check 1ED2                               ??_lcd_init 009C  
                             ??_lcd_test 0024                               ??_mdb_comm 0020  
                             ??_mdb_init 0025                     end_of_initialization 1C24  
                      __end_of_secondadd FC65                               ??_mdb_poll 0022  
                              _T2RSTbits 000FC0                      __size_of_Sensor_set 00D8  
                    ?_EUSART1_Initialize 000B                      __size_of_Vend_setup 0106  
                              _T4RSTbits 000FBA                               ??_off_sens 002C  
                          __pdataCOMRAMh 004D                        __end_of_note_poll FC89  
                      __end_of_motimemsg FB24                        __end_of_set_price 023A  
                      __end_of_set_notes 0732                  __size_of_Update_Hopcoin 0086  
                      __end_of_note_type FC88                        __end_of_price_set 140C  
                             _save_notes 1EB0                        __end_of_just_busy FC82  
                             ??_pay_coin 001D                        __end_of_priceexit FBD0  
                      __end_of_sensoffms FB51                        __end_of_setimemsg FEA9  
                           ??_Clear_cred 0029                        __end_of_vend_init 11F6  
                  __size_of_mdb_security 0020                         ___ltdiv@dividend 001D  
                      __end_of_rom_error FC81                        __end_of_vendtimem FE80  
                      __end_of_vendsetup FD3E                        __end_of_vendstore FC5D  
                             _note_reset FC8B                               _sens_error FC82  
                             _note_setup FC8A                                  postinc0 000FEE  
                  __size_of_EUSART1_Read 0012                               _motr_error FC83  
                  __size_of_mdb_transmit 000E                               _just_reset FC7E  
                          Read_NVstore@i 0024                               _pricesetm2 FD83  
                             _sensoffmsg FEEE                     ??_EUSART1_Initialize 001D  
                             _pricestore FC59                    __CFG_WDTCPS$WDTCPS_31 000000  
               Init_vendmem@chanlinkbits 001F                             _displ_credit 1D06  
                __end_of_Update_coinsout 184A                             _displ_lflags 11F6  
                           _displ_nendis 1D6E                               _venderrors FC57  
                       displ_code@ercode 0026                             _displ_sflags 0D7E  
                           _displ_noteer 1E04                               _settimemsg FB7B  
                      displ_sens@dmsgpos 002A                              ?_credit_add 0000  
                     displ_lflags@chanel 002A                              ?_lcd_clockE 0000  
                            ?_lcd_clockH 0000                              ?_lcd_clockL 0000  
                 ??_CMP1_GetOutputStatus 001D                     Vend_timeset@chantime 00AA  
                       ___ltdiv@quotient 0023                    __size_of_Read_NVstore 0034  
                     __end_of_Clear_cred 18FA                              ?_displ_code 000B  
              __size_of_Update_cashaudit 00C4                              ?_displ_note 0029  
                            ?_displ_sens 002A                              ?_displ_time 002A  
                      displ_sens@smsgpos 002B                              ?_lcd_string 0024  
                            ?_lcd_writeC 0000                      EUSART1_Write@txData 001D  
                       ?_CMP1_Initialize 000B                         ??_Reset_settings 0029  
                       __CFG_FEXTOSC$OFF 000000                 __end_of_DATAEE_WriteByte 1BC0  
                           _mdb_security 1EF4                              ?_mdb_unlock 0000  
                   _eusartmdb_Initialize 1FCE                    __size_of_Read_Service 0012  
                      displ_time@channel 002A                            ??_get_channel 001D  
                      get_channel@butons 001E                                _Chan_link 1788  
                           _EUSART1_Read 2038                      __end_of_cashbox_err FC7D  
                           _mdb_transmit 205C                            ??_lcd_dispadd 0021  
                             displ_hex@i 00A7                      __end_of_chanlinkmsg FAEA  
                  __size_of_Init_vendmem 0070                     _timer0ReloadVal16bit 00AC  
                        __pcstackCOMRAMh 000B                          __pcstackCOMRAMl 0000  
                Update_coinsout@coinsout 0027                               mdb_reset@i 0023  
           __end_of_INTERRUPT_Initialize 20CE                            ??_displ_price 002A  
                     mdb_transmit@txbyte 001E                               _twentyrand FFEE  
                         __end_of_cc_pay FC72                           __end_of_cc_pin FC6E  
                         __end_of_dacmsg FF7F                     __size_of_switch_read 000E  
                         __end_of_clrmsg FFB9                           __end_of_dispon FC9B  
                         __end_of_mdb_on 20E4                           __end_of_dispsl FC91  
                         __end_of_dispsr FC92                             _Read_NVstore 1D3A  
                       displ_credit@cash 002A                           __end_of_hopadd FC78  
                 ?_OSCILLATOR_Initialize 0000                           __end_of_offmsg FFFA  
                            ?_hopper_pay 0000                           __end_of_senset FC03  
                    start_initialization 1BF8                             _Read_Service 204A  
               __size_of_TMR0_Initialize 002E          __size_of_PIN_MANAGER_Initialize 007A  
                           ?_Hopper_coin 0000                                _Link_chan 0C0E  
                        _credit_subtract 18FA                  Update_cashaudit@addcash 0027  
                  ?_eusartmdb_Initialize 0000                    __end_of_EUSART1_Write 2078  
                           _Init_vendmem 1574                               ?_Chan_link 0000  
                            ?_save_notes 0000                      DATAEE_ReadByte@bAdd 001D  
               __size_of_PIN_MANAGER_IOC 0006                            Init_vendmem@i 0023  
                    __size_of_credit_add 005A                         __CFG_LPBOREN$OFF 000000  
                    __size_of_lcd_clockE 000E                      __size_of_lcd_clockH 0008  
                    __size_of_lcd_clockL 0008                 __size_of_TMR1_Initialize 0036  
                  __size_of_init_mdbdata 0026                      __end_of_get_channel 1F4E  
                       ??_PMD_Initialize 001D                             ??_Sensor_set 002C  
                    __size_of_displ_code 0106                      __end_of_lcd_dispadd 1F9E  
                   __end_of_Vend_timeset 0546                     __end_of_Vend_settime 19F2  
                      __size_of_Sens_off 004E                      __size_of_displ_note 0038  
                    __size_of_displ_sens 0074                             ??_Vend_setup 002C  
                    __size_of_displ_time 0092                                 ??_mdb_on 001D  
                    __size_of_lcd_string 00B4                      __size_of_lcd_writeC 0066  
                       ?_Update_coinsout 0000                      __size_of_mdb_unlock 00C8  
                     hopper_pay@outcoins 002A                   displ_sflags@senseflags 002B  
               __size_of_DAC1_Initialize 000C                      __end_of_displ_price 1B4C  
                          __pcstackBANK0 009C                 __size_of_TMR2_Initialize 001E  
                    __end_of_dispshright FC95                               ?_Link_chan 0000  
                          butindb@butval 0021                                _cc_adpoll FC6A  
                            _cashbox_err FC7C                              __pnvCOMRAMh 004C  
                              _cc_enable FC73                     __end_of_note_removed FC7E  
                            _chanlinkmsg FAAD                                _chan1time FC3B  
                          ??_hopper_test 002B                    credit_subtract@credit 0021  
                   __end_of_note_stacker FC86                                _chan2time FC39  
                              _chan3time FC37                                _chan4time FC35  
                              _chan5time FC33                                _chan6time FC31  
                              _chan7time FC2F                                _chan8time FC2D  
                              _cc_newpin FC6C                     init_mdbdata@initdata 001D  
                              _cc_serial FC6B                       __end_of_Sensor_set 08EA  
                           _init_mdbdata 1E8A                        __size_of_lcd_init 00B6  
                      __size_of_lcd_test 0016                       __end_of_Vend_setup 0340  
                      __size_of_mdb_comm 00FA                                _cc_status FC72  
                      __size_of_mdb_init 0068                           _Update_Hopcoin 1306  
                      __size_of_mdb_poll 0122                                __pnvBANK0 00AC  
                              _chanlink1 000003                                _chanlink2 000004  
                              _chanlink3 000005                                _chanlink4 000006  
                              _chanlink5 000007                                _chanlink6 000008  
                              _chanlink7 000009                                _chanlink8 00000A  
                              _chanlinkm FDBC                      __size_of_hopper_pay 0040  
                      __size_of_off_sens 00D6                   _PIN_MANAGER_Initialize 1486  
                      __size_of_pay_coin 006C                 __size_of_TMR3_Initialize 0036  
                              __pintcode 0008                            __pmediumconst FAAC  
                       Link_chan@chanbit 009E                         Link_chan@channel 009F  
                               ?___ltdiv 001D                                 ?___ltmod 001D  
                       __CFG_PPS1WAY$OFF 000000                                _creditclr FF62  
                               _DAC1CON0 000F33                                 _DAC1CON1 000F34  
                              _displ_hex 0E34                                _dispfunc1 FC9D  
                              _dispfunc2 FC9C                                _dispfunc3 FC9B  
                              _lcd_write 1DD2                       Hopper_coin@coinval 00A8  
                              _fiftyrand FFE6                                _mdb_reset 1280  
                              _mdb_noten 1B4C                                _mdb_waitr 20CE  
                              _mdb_waitx 20D4                                 _BAUD1CON 000F9F  
                __end_of_credit_subtract 1950                                 ?_butindb 0000  
                  __end_of_enter_service 10DA                      __size_of_save_notes 0022  
                         __size_of_Audit 0002                                _mdbtxbyte 0096  
               __size_of_TMR4_Initialize 001C                         _Update_cashaudit 0A88  
                         _acept_disabled FC7B                   ??_eusartmdb_Initialize 001D  
                         __size_of_butin 004A                                 _T2CLKCON 000FBF  
               __size_of_DATAEE_ReadByte 0018                                _read_busy 1A8A  
                               _T4CLKCON 000FB9                     _INTERRUPT_Initialize 20C6  
                 __end_of_Update_Hopcoin 138C                         ___ltmod@dividend 001D  
                  lcd_dispadd@lcdaddress 0021                        ??_TMR0_Initialize 001D  
                  __end_of_Write_NVstore 1E8A                              _get_channel 1F32  
                               _LATCbits 000F85                              ??_Chan_link 00A1  
                              _secondadd FC63                    lcd_dispadd@lcdatasave 0022  
                               _IPR0bits 000EBA                                 _PIE0bits 000EC2  
                          _note_features FC84                              _lcd_dispadd 1F86  
                    __CFG_BORV$VBOR_2P45 000000                            _theft_attempt FC78  
                     __end_of_cc_countrq FC71                      __end_of_hopper_test 2024  
                               _PIR0bits 000ECA                          ___ltdiv@divisor 0020  
                               _PIR3bits 000ECD                                 _PIR4bits 000ECE  
                               _PIR7bits 000ED1                          ___ltdiv@counter 0026  
                              _note_poll FC88                                _motimemsg FAEA  
                              _set_price 0122                                _set_notes 0640  
               __size_of_TMR5_Initialize 0036                                _note_type FC87  
                              _price_set 138C                                _just_busy FC81  
                              _priceexit FBBA                                _sensoffms FB24  
                              _setimemsg FE80                                _vend_init 116C  
                              _sensorval 0037                                _rom_error FC80  
                      ??_PIN_MANAGER_IOC 000B                              _displ_price 1B0C  
                              _vendprice 0038                                _vendtimem FE57  
                              _vendsetup FCEE                                _vendstore FC5B  
                          _note_rejected FC79                        ??_TMR1_Initialize 001D  
                             ?_displ_hex 0027                       Link_chan@linkflags 00A0  
                             ?_lcd_write 0000                            _note_security FC89  
                    __end_of_hundredrand FFE6                               ?_mdb_reset 0000  
                             ?_mdb_noten 0000                              _dispshright FC94  
                             ?_mdb_waitr 0000                               ?_mdb_waitx 000B  
                           ??_credit_add 0028                             ??_lcd_clockE 001D  
                           ??_lcd_clockH 001D                             ??_lcd_clockL 001D  
                 Write_NVstore@storesize 0025                                mdb_comm@i 0021  
                 __end_of_acept_disabled FC7C                                mdb_init@i 0027  
                  DATAEE_WriteByte@bData 001F                             ??_displ_code 0024  
                              mdb_poll@i 0022                          displ_hex@hexnum 0027  
                           ??_displ_note 002B                             ??_displ_sens 002B  
                           ??_displ_time 002B                              ??_Link_chan 009C  
                           ??_lcd_string 0027                             ??_lcd_writeC 0023  
                             ?_read_busy 0000                    ?_INTERRUPT_Initialize 0000  
                      ??_DAC1_Initialize 001D                             ??_mdb_unlock 001F  
                      ?_DATAEE_WriteByte 001D                          ?_Update_Hopcoin 002A  
                   __size_of_Hopper_coin 00E0                        ??_TMR2_Initialize 001D  
                     ??_DATAEE_WriteByte 0020                      lcd_string@lcdstring 0024  
                  __size_of_Vend_timeset 0100                    __size_of_Vend_settime 004E  
                               __Hrparam 0000                         Sensor_set@dacpos 00A8  
                               _Sens_off 19F2                                 __Lrparam 0000  
                     __end_of_credit_add 18A4                               ?_set_price 0000  
                     __CFG_BOREN$SBORDIS 000000                               ?_set_notes 0000  
                     __end_of_lcd_clockE 20A2                               ?_price_set 0000  
                     __end_of_lcd_clockH 20C6                       __end_of_lcd_clockL 20BE  
                             ?_vend_init 0000                  ??_OSCILLATOR_Initialize 001D  
                     Read_Service@senval 001D                       __end_of_jammed_err FC80  
                     __end_of_displ_code 0446                       __end_of_displ_note 1BF8  
                     __end_of_displ_sens 1574                       __end_of_displ_time 116C  
            __size_of_EUSART1_Initialize 0016                         __size_of___ltdiv 006A  
                       __size_of___ltmod 0054                       __end_of_lcd_string 0F9E  
                     __end_of_dispcursor FC96                       __end_of_lcd_writeC 1788  
                         _invalid_escrow FC7A                      __end_of_note_escrow FC87  
                     __end_of_dispshleft FC94                       __end_of_dispnormal FC97  
                      ??_TMR3_Initialize 001D                       __end_of_mdb_unlock 0A88  
                           ??_hopper_pay 0028                                 _cc_level FC6E  
                Update_Hopcoin@direction 002A                                 _cc_reset FC75  
                       ?_credit_subtract 0000                              _dspposition 0042  
                             _T0CON0bits 000FD5                         __size_of_butindb 0032  
                               _cctflags 004E                                 _cashoutv FC51  
                __size_of_DAC1_SetOutput 0008            __size_of_CMP1_GetOutputStatus 000E  
                               __ptext10 20CE                                 __ptext11 205C  
                               __ptext20 1ACC                                 __ptext12 20D4  
                    __end_of_pricesetmsg FF62                                 __ptext21 15E4  
                               __ptext13 206A                               _T1GCONbits 000FD0  
                               __ptext30 138C                                 __ptext22 2078  
                               __ptext14 20E0                                 __ptext31 0122  
                               __ptext23 17EA                                 __ptext15 1E8A  
                               __ptext40 0D7E                                 __ptext32 1B0C  
                               __ptext24 1044                                 __ptext16 2038  
                               __ptext41 0F9E                                 __ptext33 09C0  
                               __ptext25 0640                                 __ptext17 0CC8  
                               __ptext50 2086                                 __ptext42 1574  
                               __ptext34 023A                                 __ptext26 140C  
                               __ptext18 1FE4                                 __ptext51 0732  
                               __ptext43 1788                                 __ptext35 19A4  
                               __ptext27 1EB0                                 __ptext19 2010  
                               __ptext60 0EEA                                 __ptext52 1DA0  
                               __ptext44 1F32                                 __ptext36 0446  
                               __ptext28 1D6E                                 __ptext61 0E34  
                               __ptext53 1A40                                 __ptext45 0C0E  
                               __ptext37 10DA                                 __ptext29 1BC0  
                               __ptext70 1650                                 __ptext62 1722  
                               __ptext54 1306                                 __ptext46 11F6  
                               __ptext38 19F2                                 __ptext71 1ED2  
                               __ptext63 1F86                                 __ptext55 18A4  
                               __ptext47 204A                                 __ptext39 08EA  
                               __ptext80 1C64                                 __ptext72 18FA  
                               __ptext64 1DD2                                 __ptext56 20E4  
                               __ptext48 0812                                 __ptext81 1F4E  
                               __ptext73 184A                                 __ptext65 1A8A  
                               __ptext57 1E04                                 __ptext49 1500  
                               __ptext90 1FFA                                 __ptext82 1C9A  
                               __ptext74 0A88                                 __ptext66 20B6  
                               __ptext58 0340                                 __ptext91 20A2  
                               __ptext83 1F14                                 __ptext75 1E62  
                               __ptext67 20BE                                 __ptext59 1D06  
                               __ptext92 2024                                 __ptext84 1CD0  
                               __ptext76 1B86                                 __ptext68 2094  
                               __ptext85 1E34                                 __ptext77 1D3A  
                               __ptext69 1950                                 __ptext94 20DA  
                               __ptext86 1F6A                                 __ptext78 1F9E  
                               __ptext87 1486                                 __ptext79 1C2E  
                               __ptext88 1FB6                                 __ptext89 20C6  
                               _disabled FFB9                      __end_of_sensorflags FC3F  
                               _auditmsg FC11                                 _dispaddr FC98  
                               _lcd_init 0CC8                                 _lcd_test 1FE4  
                               _mdb_comm 0546                                 _mdb_init 16BA  
                           _Vend_timeset 0446                             _Vend_settime 19A4  
                               _mdb_poll 0000                                 _mdbflags 003E  
                             _T3GCONbits 000FCA              DATAEE_WriteByte@GIEBitValue 0020  
                            _hopper_test 2010                    __end_of_chan1linkbits FC4F  
                      ??_TMR4_Initialize 001D                                 _off_sens 08EA  
                          __size_of_main 00C2                               _T5GCONbits 000FC4  
                               _hoperror FC2B                             ??_save_notes 0021  
                               _hoppcoin FDF3                                 _initnote FEA9  
                  __end_of_chan2linkbits FC4D                                 _hpserial 002F  
                               _pay_coin 15E4                                 _nochange FBE4  
                        ___ltmod@divisor 0020                        ??_DATAEE_ReadByte 001F  
                   __CFG_WDTCWS$WDTCWS_7 000000                    __end_of_chan3linkbits FC4B  
               __size_of_CMP1_Initialize 0014                                 _second_5 FC65  
                        ___ltmod@counter 0023                    __end_of_chan4linkbits FC49  
                     __end_of_hopper_pay 1B0C                               _RC1STAbits 000F9D  
                               _vcashout 008E                                 _notebits FC55  
                               _notebyte 0040                                 _pricemsg FC1E  
                  __end_of_chan5linkbits FC47                                 _notetest FC03  
                          ??_switch_read 001D                                 _venflags 002C  
                               _setnotes FD3E                            init_mdbdata@i 001E  
                               _vendtest FBA1                              _hundredrand FFDE  
                  __end_of_chan6linkbits FC45                                 int$flags 004F  
                 __end_of_invalid_escrow FC7B                    __end_of_chan7linkbits FC43  
                           _note_removed FC7D                    Write_NVstore@storeadd 0021  
                  Read_NVstore@storesize 0023                    Write_NVstore@storemem 0023  
                           _note_stacker FC85                    __end_of_chan8linkbits FC41  
                            ??_displ_hex 002A                              ??_lcd_write 001F  
                      ??_TMR5_Initialize 001D                              ??_mdb_reset 0022  
                            ??_mdb_noten 0022                              ??_mdb_waitr 001D  
                            ??_mdb_waitx 001D                               _INTCONbits 000FF2  
                            _NVMCON1bits 000F81                       __end_of_save_notes 1ED2  
                 ??_INTERRUPT_Initialize 001D                              ??_read_busy 001D  
                     __end_of_note_reset FC8C                           _twohundredrand FFD6  
                     __end_of_sens_error FC83                       __end_of_note_setup FC8B  
                               intlevel2 0000                       __end_of_motr_error FC84  
                     __end_of_just_reset FC7F                       __end_of_pricesetm2 FDBC  
                     __end_of_sensoffmsg FF0D                  ?_PIN_MANAGER_Initialize 000B  
                     __end_of_pricestore FC5B                        __CFG_CLKOUTEN$OFF 000000  
                          ?_enable_notes 0000                              _PPSLOCKbits 000EA0  
                     __end_of_venderrors FC59                       __end_of_settimemsg FBA1  
                __size_of_Reset_settings 00A6                      displ_sflags@chanbit 002A  
                            _note_escrow FC86                              ??_set_price 00A8  
                            ??_set_notes 002C                              ??_price_set 002B  
               __end_of_Update_cashaudit 0B4C                     Read_NVstore@storeadd 001F  
                            ??_vend_init 0029                     Read_NVstore@storemem 0021  
                            _noteen_byte 003C                        lcd_string@lcdline 0026  
                 __size_of_EUSART1_Write 000E                     displ_note@notestring 0029  
 __end_of_INTERRUPT_InterruptManagerHigh 00AA  __size_of_INTERRUPT_InterruptManagerHigh 00A2  
         _INTERRUPT_InterruptManagerHigh 0008                               _RX1PPSbits 000EB5  
                            _pricesetmsg FF50                      __end_of_switch_read 2086  
                             _RX2PPSbits 000E8D                              _sensorflags FC3D  
                      lcd_test@character 0024                          _TMR0_Initialize 1E34  
                     displ_sflags@chanel 0029                     Init_vendmem@chanlink 0021  
                 __end_of_twohundredrand FFDE                 __size_of_Update_coinsout 0060  
                          ?_credit_check 0000                               _TX1STAbits 000F9E  
         __end_of_PIN_MANAGER_Initialize 1500                      enable_notes@notenum 002B  
                           ?_get_channel 000B                       __end_of_twentyrand FFF6  
                        _PIN_MANAGER_IOC 20DA                           ??_enable_notes 002B  
                           ?_lcd_dispadd 0000                          _TMR1_Initialize 1CD0  
                   displ_lflags@linkflgs 0029  
